
STM32F429I_DISCO_REV_D01.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001ac  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00023c48  080001b0  080001b0  000011b0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00001c8c  08023df8  08023df8  00024df8  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 FontFlashSection 000001a6  08025a84  08025a84  00026a84  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 FontSearchFlashSection 00000018  08025c2c  08025c2c  00026c2c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 TextFlashSection 0000000e  08025c44  08025c44  00026c44  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 .ARM.extab    00000002  08025c52  08025c52  00026c52  2**0
                  ALLOC
  7 .ARM          00000008  08025c54  08025c54  00026c54  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .preinit_array 00000000  08025c5c  08025c5c  00027480  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .init_array   00000014  08025c5c  08025c5c  00026c5c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 10 .fini_array   00000008  08025c70  08025c70  00026c70  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 11 .data         00000274  20000000  08025c78  00027000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 12 TouchGFX_ScratchbufferA 00000100  20000280  08025eec  00027280  2**5
                  CONTENTS, ALLOC, LOAD, DATA
 13 TouchGFX_ScratchbufferB 00000100  20000380  08025fec  00027380  2**5
                  CONTENTS, ALLOC, LOAD, DATA
 14 .bss          00013c94  20000480  080260ec  00027480  2**2
                  ALLOC
 15 ._user_heap_stack 00001404  20014114  080260ec  00028114  2**0
                  ALLOC
 16 .ARM.attributes 00000030  00000000  00000000  00027480  2**0
                  CONTENTS, READONLY
 17 TouchGFX_Framebuffer 00070800  d0000000  d0000000  00028000  2**2
                  ALLOC
 18 .debug_line   000500d2  00000000  00000000  000274b0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_line_str 0000005e  00000000  00000000  00077582  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_info   0009f368  00000000  00000000  000775e0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_abbrev 00013441  00000000  00000000  00116948  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_aranges 000031c8  00000000  00000000  00129d90  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 23 .debug_str    00114767  00000000  00000000  0012cf58  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 24 .debug_rnglists 000032c6  00000000  00000000  002416bf  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 25 .debug_loclists 0001ceca  00000000  00000000  00244985  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 26 .debug_macro  00033714  00000000  00000000  0026184f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 27 .comment      000000c2  00000000  00000000  00294f63  2**0
                  CONTENTS, READONLY
 28 .debug_frame  0000918c  00000000  00000000  00295028  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001b0 <__do_global_dtors_aux>:
 80001b0:	b510      	push	{r4, lr}
 80001b2:	4c05      	ldr	r4, [pc, #20]	@ (80001c8 <__do_global_dtors_aux+0x18>)
 80001b4:	7823      	ldrb	r3, [r4, #0]
 80001b6:	b933      	cbnz	r3, 80001c6 <__do_global_dtors_aux+0x16>
 80001b8:	4b04      	ldr	r3, [pc, #16]	@ (80001cc <__do_global_dtors_aux+0x1c>)
 80001ba:	b113      	cbz	r3, 80001c2 <__do_global_dtors_aux+0x12>
 80001bc:	4804      	ldr	r0, [pc, #16]	@ (80001d0 <__do_global_dtors_aux+0x20>)
 80001be:	f3af 8000 	nop.w
 80001c2:	2301      	movs	r3, #1
 80001c4:	7023      	strb	r3, [r4, #0]
 80001c6:	bd10      	pop	{r4, pc}
 80001c8:	20000480 	.word	0x20000480
 80001cc:	00000000 	.word	0x00000000
 80001d0:	08023de0 	.word	0x08023de0

080001d4 <frame_dummy>:
 80001d4:	b508      	push	{r3, lr}
 80001d6:	4b03      	ldr	r3, [pc, #12]	@ (80001e4 <frame_dummy+0x10>)
 80001d8:	b11b      	cbz	r3, 80001e2 <frame_dummy+0xe>
 80001da:	4903      	ldr	r1, [pc, #12]	@ (80001e8 <frame_dummy+0x14>)
 80001dc:	4803      	ldr	r0, [pc, #12]	@ (80001ec <frame_dummy+0x18>)
 80001de:	f3af 8000 	nop.w
 80001e2:	bd08      	pop	{r3, pc}
 80001e4:	00000000 	.word	0x00000000
 80001e8:	20000484 	.word	0x20000484
 80001ec:	08023de0 	.word	0x08023de0

080001f0 <strlen>:
 80001f0:	4603      	mov	r3, r0
 80001f2:	f813 2b01 	ldrb.w	r2, [r3], #1
 80001f6:	2a00      	cmp	r2, #0
 80001f8:	d1fb      	bne.n	80001f2 <strlen+0x2>
 80001fa:	1a18      	subs	r0, r3, r0
 80001fc:	3801      	subs	r0, #1
 80001fe:	4770      	bx	lr

08000200 <memchr>:
 8000200:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 8000204:	2a10      	cmp	r2, #16
 8000206:	db2b      	blt.n	8000260 <memchr+0x60>
 8000208:	f010 0f07 	tst.w	r0, #7
 800020c:	d008      	beq.n	8000220 <memchr+0x20>
 800020e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000212:	3a01      	subs	r2, #1
 8000214:	428b      	cmp	r3, r1
 8000216:	d02d      	beq.n	8000274 <memchr+0x74>
 8000218:	f010 0f07 	tst.w	r0, #7
 800021c:	b342      	cbz	r2, 8000270 <memchr+0x70>
 800021e:	d1f6      	bne.n	800020e <memchr+0xe>
 8000220:	b4f0      	push	{r4, r5, r6, r7}
 8000222:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000226:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800022a:	f022 0407 	bic.w	r4, r2, #7
 800022e:	f07f 0700 	mvns.w	r7, #0
 8000232:	2300      	movs	r3, #0
 8000234:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000238:	3c08      	subs	r4, #8
 800023a:	ea85 0501 	eor.w	r5, r5, r1
 800023e:	ea86 0601 	eor.w	r6, r6, r1
 8000242:	fa85 f547 	uadd8	r5, r5, r7
 8000246:	faa3 f587 	sel	r5, r3, r7
 800024a:	fa86 f647 	uadd8	r6, r6, r7
 800024e:	faa5 f687 	sel	r6, r5, r7
 8000252:	b98e      	cbnz	r6, 8000278 <memchr+0x78>
 8000254:	d1ee      	bne.n	8000234 <memchr+0x34>
 8000256:	bcf0      	pop	{r4, r5, r6, r7}
 8000258:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 800025c:	f002 0207 	and.w	r2, r2, #7
 8000260:	b132      	cbz	r2, 8000270 <memchr+0x70>
 8000262:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000266:	3a01      	subs	r2, #1
 8000268:	ea83 0301 	eor.w	r3, r3, r1
 800026c:	b113      	cbz	r3, 8000274 <memchr+0x74>
 800026e:	d1f8      	bne.n	8000262 <memchr+0x62>
 8000270:	2000      	movs	r0, #0
 8000272:	4770      	bx	lr
 8000274:	3801      	subs	r0, #1
 8000276:	4770      	bx	lr
 8000278:	2d00      	cmp	r5, #0
 800027a:	bf06      	itte	eq
 800027c:	4635      	moveq	r5, r6
 800027e:	3803      	subeq	r0, #3
 8000280:	3807      	subne	r0, #7
 8000282:	f015 0f01 	tst.w	r5, #1
 8000286:	d107      	bne.n	8000298 <memchr+0x98>
 8000288:	3001      	adds	r0, #1
 800028a:	f415 7f80 	tst.w	r5, #256	@ 0x100
 800028e:	bf02      	ittt	eq
 8000290:	3001      	addeq	r0, #1
 8000292:	f415 3fc0 	tsteq.w	r5, #98304	@ 0x18000
 8000296:	3001      	addeq	r0, #1
 8000298:	bcf0      	pop	{r4, r5, r6, r7}
 800029a:	3801      	subs	r0, #1
 800029c:	4770      	bx	lr
 800029e:	bf00      	nop

080002a0 <__aeabi_drsub>:
 80002a0:	f081 4100 	eor.w	r1, r1, #2147483648	@ 0x80000000
 80002a4:	e002      	b.n	80002ac <__adddf3>
 80002a6:	bf00      	nop

080002a8 <__aeabi_dsub>:
 80002a8:	f083 4300 	eor.w	r3, r3, #2147483648	@ 0x80000000

080002ac <__adddf3>:
 80002ac:	b530      	push	{r4, r5, lr}
 80002ae:	ea4f 0441 	mov.w	r4, r1, lsl #1
 80002b2:	ea4f 0543 	mov.w	r5, r3, lsl #1
 80002b6:	ea94 0f05 	teq	r4, r5
 80002ba:	bf08      	it	eq
 80002bc:	ea90 0f02 	teqeq	r0, r2
 80002c0:	bf1f      	itttt	ne
 80002c2:	ea54 0c00 	orrsne.w	ip, r4, r0
 80002c6:	ea55 0c02 	orrsne.w	ip, r5, r2
 80002ca:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80002ce:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80002d2:	f000 80e2 	beq.w	800049a <__adddf3+0x1ee>
 80002d6:	ea4f 5454 	mov.w	r4, r4, lsr #21
 80002da:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 80002de:	bfb8      	it	lt
 80002e0:	426d      	neglt	r5, r5
 80002e2:	dd0c      	ble.n	80002fe <__adddf3+0x52>
 80002e4:	442c      	add	r4, r5
 80002e6:	ea80 0202 	eor.w	r2, r0, r2
 80002ea:	ea81 0303 	eor.w	r3, r1, r3
 80002ee:	ea82 0000 	eor.w	r0, r2, r0
 80002f2:	ea83 0101 	eor.w	r1, r3, r1
 80002f6:	ea80 0202 	eor.w	r2, r0, r2
 80002fa:	ea81 0303 	eor.w	r3, r1, r3
 80002fe:	2d36      	cmp	r5, #54	@ 0x36
 8000300:	bf88      	it	hi
 8000302:	bd30      	pophi	{r4, r5, pc}
 8000304:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 8000308:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800030c:	f44f 1c80 	mov.w	ip, #1048576	@ 0x100000
 8000310:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 8000314:	d002      	beq.n	800031c <__adddf3+0x70>
 8000316:	4240      	negs	r0, r0
 8000318:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 800031c:	f013 4f00 	tst.w	r3, #2147483648	@ 0x80000000
 8000320:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000324:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000328:	d002      	beq.n	8000330 <__adddf3+0x84>
 800032a:	4252      	negs	r2, r2
 800032c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000330:	ea94 0f05 	teq	r4, r5
 8000334:	f000 80a7 	beq.w	8000486 <__adddf3+0x1da>
 8000338:	f1a4 0401 	sub.w	r4, r4, #1
 800033c:	f1d5 0e20 	rsbs	lr, r5, #32
 8000340:	db0d      	blt.n	800035e <__adddf3+0xb2>
 8000342:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000346:	fa22 f205 	lsr.w	r2, r2, r5
 800034a:	1880      	adds	r0, r0, r2
 800034c:	f141 0100 	adc.w	r1, r1, #0
 8000350:	fa03 f20e 	lsl.w	r2, r3, lr
 8000354:	1880      	adds	r0, r0, r2
 8000356:	fa43 f305 	asr.w	r3, r3, r5
 800035a:	4159      	adcs	r1, r3
 800035c:	e00e      	b.n	800037c <__adddf3+0xd0>
 800035e:	f1a5 0520 	sub.w	r5, r5, #32
 8000362:	f10e 0e20 	add.w	lr, lr, #32
 8000366:	2a01      	cmp	r2, #1
 8000368:	fa03 fc0e 	lsl.w	ip, r3, lr
 800036c:	bf28      	it	cs
 800036e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000372:	fa43 f305 	asr.w	r3, r3, r5
 8000376:	18c0      	adds	r0, r0, r3
 8000378:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800037c:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 8000380:	d507      	bpl.n	8000392 <__adddf3+0xe6>
 8000382:	f04f 0e00 	mov.w	lr, #0
 8000386:	f1dc 0c00 	rsbs	ip, ip, #0
 800038a:	eb7e 0000 	sbcs.w	r0, lr, r0
 800038e:	eb6e 0101 	sbc.w	r1, lr, r1
 8000392:	f5b1 1f80 	cmp.w	r1, #1048576	@ 0x100000
 8000396:	d31b      	bcc.n	80003d0 <__adddf3+0x124>
 8000398:	f5b1 1f00 	cmp.w	r1, #2097152	@ 0x200000
 800039c:	d30c      	bcc.n	80003b8 <__adddf3+0x10c>
 800039e:	0849      	lsrs	r1, r1, #1
 80003a0:	ea5f 0030 	movs.w	r0, r0, rrx
 80003a4:	ea4f 0c3c 	mov.w	ip, ip, rrx
 80003a8:	f104 0401 	add.w	r4, r4, #1
 80003ac:	ea4f 5244 	mov.w	r2, r4, lsl #21
 80003b0:	f512 0f80 	cmn.w	r2, #4194304	@ 0x400000
 80003b4:	f080 809a 	bcs.w	80004ec <__adddf3+0x240>
 80003b8:	f1bc 4f00 	cmp.w	ip, #2147483648	@ 0x80000000
 80003bc:	bf08      	it	eq
 80003be:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80003c2:	f150 0000 	adcs.w	r0, r0, #0
 80003c6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80003ca:	ea41 0105 	orr.w	r1, r1, r5
 80003ce:	bd30      	pop	{r4, r5, pc}
 80003d0:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80003d4:	4140      	adcs	r0, r0
 80003d6:	eb41 0101 	adc.w	r1, r1, r1
 80003da:	3c01      	subs	r4, #1
 80003dc:	bf28      	it	cs
 80003de:	f5b1 1f80 	cmpcs.w	r1, #1048576	@ 0x100000
 80003e2:	d2e9      	bcs.n	80003b8 <__adddf3+0x10c>
 80003e4:	f091 0f00 	teq	r1, #0
 80003e8:	bf04      	itt	eq
 80003ea:	4601      	moveq	r1, r0
 80003ec:	2000      	moveq	r0, #0
 80003ee:	fab1 f381 	clz	r3, r1
 80003f2:	bf08      	it	eq
 80003f4:	3320      	addeq	r3, #32
 80003f6:	f1a3 030b 	sub.w	r3, r3, #11
 80003fa:	f1b3 0220 	subs.w	r2, r3, #32
 80003fe:	da0c      	bge.n	800041a <__adddf3+0x16e>
 8000400:	320c      	adds	r2, #12
 8000402:	dd08      	ble.n	8000416 <__adddf3+0x16a>
 8000404:	f102 0c14 	add.w	ip, r2, #20
 8000408:	f1c2 020c 	rsb	r2, r2, #12
 800040c:	fa01 f00c 	lsl.w	r0, r1, ip
 8000410:	fa21 f102 	lsr.w	r1, r1, r2
 8000414:	e00c      	b.n	8000430 <__adddf3+0x184>
 8000416:	f102 0214 	add.w	r2, r2, #20
 800041a:	bfd8      	it	le
 800041c:	f1c2 0c20 	rsble	ip, r2, #32
 8000420:	fa01 f102 	lsl.w	r1, r1, r2
 8000424:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000428:	bfdc      	itt	le
 800042a:	ea41 010c 	orrle.w	r1, r1, ip
 800042e:	4090      	lslle	r0, r2
 8000430:	1ae4      	subs	r4, r4, r3
 8000432:	bfa2      	ittt	ge
 8000434:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000438:	4329      	orrge	r1, r5
 800043a:	bd30      	popge	{r4, r5, pc}
 800043c:	ea6f 0404 	mvn.w	r4, r4
 8000440:	3c1f      	subs	r4, #31
 8000442:	da1c      	bge.n	800047e <__adddf3+0x1d2>
 8000444:	340c      	adds	r4, #12
 8000446:	dc0e      	bgt.n	8000466 <__adddf3+0x1ba>
 8000448:	f104 0414 	add.w	r4, r4, #20
 800044c:	f1c4 0220 	rsb	r2, r4, #32
 8000450:	fa20 f004 	lsr.w	r0, r0, r4
 8000454:	fa01 f302 	lsl.w	r3, r1, r2
 8000458:	ea40 0003 	orr.w	r0, r0, r3
 800045c:	fa21 f304 	lsr.w	r3, r1, r4
 8000460:	ea45 0103 	orr.w	r1, r5, r3
 8000464:	bd30      	pop	{r4, r5, pc}
 8000466:	f1c4 040c 	rsb	r4, r4, #12
 800046a:	f1c4 0220 	rsb	r2, r4, #32
 800046e:	fa20 f002 	lsr.w	r0, r0, r2
 8000472:	fa01 f304 	lsl.w	r3, r1, r4
 8000476:	ea40 0003 	orr.w	r0, r0, r3
 800047a:	4629      	mov	r1, r5
 800047c:	bd30      	pop	{r4, r5, pc}
 800047e:	fa21 f004 	lsr.w	r0, r1, r4
 8000482:	4629      	mov	r1, r5
 8000484:	bd30      	pop	{r4, r5, pc}
 8000486:	f094 0f00 	teq	r4, #0
 800048a:	f483 1380 	eor.w	r3, r3, #1048576	@ 0x100000
 800048e:	bf06      	itte	eq
 8000490:	f481 1180 	eoreq.w	r1, r1, #1048576	@ 0x100000
 8000494:	3401      	addeq	r4, #1
 8000496:	3d01      	subne	r5, #1
 8000498:	e74e      	b.n	8000338 <__adddf3+0x8c>
 800049a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800049e:	bf18      	it	ne
 80004a0:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80004a4:	d029      	beq.n	80004fa <__adddf3+0x24e>
 80004a6:	ea94 0f05 	teq	r4, r5
 80004aa:	bf08      	it	eq
 80004ac:	ea90 0f02 	teqeq	r0, r2
 80004b0:	d005      	beq.n	80004be <__adddf3+0x212>
 80004b2:	ea54 0c00 	orrs.w	ip, r4, r0
 80004b6:	bf04      	itt	eq
 80004b8:	4619      	moveq	r1, r3
 80004ba:	4610      	moveq	r0, r2
 80004bc:	bd30      	pop	{r4, r5, pc}
 80004be:	ea91 0f03 	teq	r1, r3
 80004c2:	bf1e      	ittt	ne
 80004c4:	2100      	movne	r1, #0
 80004c6:	2000      	movne	r0, #0
 80004c8:	bd30      	popne	{r4, r5, pc}
 80004ca:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 80004ce:	d105      	bne.n	80004dc <__adddf3+0x230>
 80004d0:	0040      	lsls	r0, r0, #1
 80004d2:	4149      	adcs	r1, r1
 80004d4:	bf28      	it	cs
 80004d6:	f041 4100 	orrcs.w	r1, r1, #2147483648	@ 0x80000000
 80004da:	bd30      	pop	{r4, r5, pc}
 80004dc:	f514 0480 	adds.w	r4, r4, #4194304	@ 0x400000
 80004e0:	bf3c      	itt	cc
 80004e2:	f501 1180 	addcc.w	r1, r1, #1048576	@ 0x100000
 80004e6:	bd30      	popcc	{r4, r5, pc}
 80004e8:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 80004ec:	f045 41fe 	orr.w	r1, r5, #2130706432	@ 0x7f000000
 80004f0:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 80004f4:	f04f 0000 	mov.w	r0, #0
 80004f8:	bd30      	pop	{r4, r5, pc}
 80004fa:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80004fe:	bf1a      	itte	ne
 8000500:	4619      	movne	r1, r3
 8000502:	4610      	movne	r0, r2
 8000504:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 8000508:	bf1c      	itt	ne
 800050a:	460b      	movne	r3, r1
 800050c:	4602      	movne	r2, r0
 800050e:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000512:	bf06      	itte	eq
 8000514:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 8000518:	ea91 0f03 	teqeq	r1, r3
 800051c:	f441 2100 	orrne.w	r1, r1, #524288	@ 0x80000
 8000520:	bd30      	pop	{r4, r5, pc}
 8000522:	bf00      	nop

08000524 <__aeabi_ui2d>:
 8000524:	f090 0f00 	teq	r0, #0
 8000528:	bf04      	itt	eq
 800052a:	2100      	moveq	r1, #0
 800052c:	4770      	bxeq	lr
 800052e:	b530      	push	{r4, r5, lr}
 8000530:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8000534:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 8000538:	f04f 0500 	mov.w	r5, #0
 800053c:	f04f 0100 	mov.w	r1, #0
 8000540:	e750      	b.n	80003e4 <__adddf3+0x138>
 8000542:	bf00      	nop

08000544 <__aeabi_i2d>:
 8000544:	f090 0f00 	teq	r0, #0
 8000548:	bf04      	itt	eq
 800054a:	2100      	moveq	r1, #0
 800054c:	4770      	bxeq	lr
 800054e:	b530      	push	{r4, r5, lr}
 8000550:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8000554:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 8000558:	f010 4500 	ands.w	r5, r0, #2147483648	@ 0x80000000
 800055c:	bf48      	it	mi
 800055e:	4240      	negmi	r0, r0
 8000560:	f04f 0100 	mov.w	r1, #0
 8000564:	e73e      	b.n	80003e4 <__adddf3+0x138>
 8000566:	bf00      	nop

08000568 <__aeabi_f2d>:
 8000568:	0042      	lsls	r2, r0, #1
 800056a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800056e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000572:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000576:	bf1f      	itttt	ne
 8000578:	f012 437f 	andsne.w	r3, r2, #4278190080	@ 0xff000000
 800057c:	f093 4f7f 	teqne	r3, #4278190080	@ 0xff000000
 8000580:	f081 5160 	eorne.w	r1, r1, #939524096	@ 0x38000000
 8000584:	4770      	bxne	lr
 8000586:	f032 427f 	bics.w	r2, r2, #4278190080	@ 0xff000000
 800058a:	bf08      	it	eq
 800058c:	4770      	bxeq	lr
 800058e:	f093 4f7f 	teq	r3, #4278190080	@ 0xff000000
 8000592:	bf04      	itt	eq
 8000594:	f441 2100 	orreq.w	r1, r1, #524288	@ 0x80000
 8000598:	4770      	bxeq	lr
 800059a:	b530      	push	{r4, r5, lr}
 800059c:	f44f 7460 	mov.w	r4, #896	@ 0x380
 80005a0:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 80005a4:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 80005a8:	e71c      	b.n	80003e4 <__adddf3+0x138>
 80005aa:	bf00      	nop

080005ac <__aeabi_ul2d>:
 80005ac:	ea50 0201 	orrs.w	r2, r0, r1
 80005b0:	bf08      	it	eq
 80005b2:	4770      	bxeq	lr
 80005b4:	b530      	push	{r4, r5, lr}
 80005b6:	f04f 0500 	mov.w	r5, #0
 80005ba:	e00a      	b.n	80005d2 <__aeabi_l2d+0x16>

080005bc <__aeabi_l2d>:
 80005bc:	ea50 0201 	orrs.w	r2, r0, r1
 80005c0:	bf08      	it	eq
 80005c2:	4770      	bxeq	lr
 80005c4:	b530      	push	{r4, r5, lr}
 80005c6:	f011 4500 	ands.w	r5, r1, #2147483648	@ 0x80000000
 80005ca:	d502      	bpl.n	80005d2 <__aeabi_l2d+0x16>
 80005cc:	4240      	negs	r0, r0
 80005ce:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80005d2:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 80005d6:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 80005da:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80005de:	f43f aed8 	beq.w	8000392 <__adddf3+0xe6>
 80005e2:	f04f 0203 	mov.w	r2, #3
 80005e6:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005ea:	bf18      	it	ne
 80005ec:	3203      	addne	r2, #3
 80005ee:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005f2:	bf18      	it	ne
 80005f4:	3203      	addne	r2, #3
 80005f6:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 80005fa:	f1c2 0320 	rsb	r3, r2, #32
 80005fe:	fa00 fc03 	lsl.w	ip, r0, r3
 8000602:	fa20 f002 	lsr.w	r0, r0, r2
 8000606:	fa01 fe03 	lsl.w	lr, r1, r3
 800060a:	ea40 000e 	orr.w	r0, r0, lr
 800060e:	fa21 f102 	lsr.w	r1, r1, r2
 8000612:	4414      	add	r4, r2
 8000614:	e6bd      	b.n	8000392 <__adddf3+0xe6>
 8000616:	bf00      	nop

08000618 <__aeabi_dmul>:
 8000618:	b570      	push	{r4, r5, r6, lr}
 800061a:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 800061e:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
 8000622:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 8000626:	bf1d      	ittte	ne
 8000628:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 800062c:	ea94 0f0c 	teqne	r4, ip
 8000630:	ea95 0f0c 	teqne	r5, ip
 8000634:	f000 f8de 	bleq	80007f4 <__aeabi_dmul+0x1dc>
 8000638:	442c      	add	r4, r5
 800063a:	ea81 0603 	eor.w	r6, r1, r3
 800063e:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000642:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8000646:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800064a:	bf18      	it	ne
 800064c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000650:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 8000654:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 8000658:	d038      	beq.n	80006cc <__aeabi_dmul+0xb4>
 800065a:	fba0 ce02 	umull	ip, lr, r0, r2
 800065e:	f04f 0500 	mov.w	r5, #0
 8000662:	fbe1 e502 	umlal	lr, r5, r1, r2
 8000666:	f006 4200 	and.w	r2, r6, #2147483648	@ 0x80000000
 800066a:	fbe0 e503 	umlal	lr, r5, r0, r3
 800066e:	f04f 0600 	mov.w	r6, #0
 8000672:	fbe1 5603 	umlal	r5, r6, r1, r3
 8000676:	f09c 0f00 	teq	ip, #0
 800067a:	bf18      	it	ne
 800067c:	f04e 0e01 	orrne.w	lr, lr, #1
 8000680:	f1a4 04ff 	sub.w	r4, r4, #255	@ 0xff
 8000684:	f5b6 7f00 	cmp.w	r6, #512	@ 0x200
 8000688:	f564 7440 	sbc.w	r4, r4, #768	@ 0x300
 800068c:	d204      	bcs.n	8000698 <__aeabi_dmul+0x80>
 800068e:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 8000692:	416d      	adcs	r5, r5
 8000694:	eb46 0606 	adc.w	r6, r6, r6
 8000698:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 800069c:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 80006a0:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 80006a4:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 80006a8:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 80006ac:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
 80006b0:	bf88      	it	hi
 80006b2:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
 80006b6:	d81e      	bhi.n	80006f6 <__aeabi_dmul+0xde>
 80006b8:	f1be 4f00 	cmp.w	lr, #2147483648	@ 0x80000000
 80006bc:	bf08      	it	eq
 80006be:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 80006c2:	f150 0000 	adcs.w	r0, r0, #0
 80006c6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80006ca:	bd70      	pop	{r4, r5, r6, pc}
 80006cc:	f006 4600 	and.w	r6, r6, #2147483648	@ 0x80000000
 80006d0:	ea46 0101 	orr.w	r1, r6, r1
 80006d4:	ea40 0002 	orr.w	r0, r0, r2
 80006d8:	ea81 0103 	eor.w	r1, r1, r3
 80006dc:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 80006e0:	bfc2      	ittt	gt
 80006e2:	ebd4 050c 	rsbsgt	r5, r4, ip
 80006e6:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80006ea:	bd70      	popgt	{r4, r5, r6, pc}
 80006ec:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 80006f0:	f04f 0e00 	mov.w	lr, #0
 80006f4:	3c01      	subs	r4, #1
 80006f6:	f300 80ab 	bgt.w	8000850 <__aeabi_dmul+0x238>
 80006fa:	f114 0f36 	cmn.w	r4, #54	@ 0x36
 80006fe:	bfde      	ittt	le
 8000700:	2000      	movle	r0, #0
 8000702:	f001 4100 	andle.w	r1, r1, #2147483648	@ 0x80000000
 8000706:	bd70      	pople	{r4, r5, r6, pc}
 8000708:	f1c4 0400 	rsb	r4, r4, #0
 800070c:	3c20      	subs	r4, #32
 800070e:	da35      	bge.n	800077c <__aeabi_dmul+0x164>
 8000710:	340c      	adds	r4, #12
 8000712:	dc1b      	bgt.n	800074c <__aeabi_dmul+0x134>
 8000714:	f104 0414 	add.w	r4, r4, #20
 8000718:	f1c4 0520 	rsb	r5, r4, #32
 800071c:	fa00 f305 	lsl.w	r3, r0, r5
 8000720:	fa20 f004 	lsr.w	r0, r0, r4
 8000724:	fa01 f205 	lsl.w	r2, r1, r5
 8000728:	ea40 0002 	orr.w	r0, r0, r2
 800072c:	f001 4200 	and.w	r2, r1, #2147483648	@ 0x80000000
 8000730:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 8000734:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000738:	fa21 f604 	lsr.w	r6, r1, r4
 800073c:	eb42 0106 	adc.w	r1, r2, r6
 8000740:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000744:	bf08      	it	eq
 8000746:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800074a:	bd70      	pop	{r4, r5, r6, pc}
 800074c:	f1c4 040c 	rsb	r4, r4, #12
 8000750:	f1c4 0520 	rsb	r5, r4, #32
 8000754:	fa00 f304 	lsl.w	r3, r0, r4
 8000758:	fa20 f005 	lsr.w	r0, r0, r5
 800075c:	fa01 f204 	lsl.w	r2, r1, r4
 8000760:	ea40 0002 	orr.w	r0, r0, r2
 8000764:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000768:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800076c:	f141 0100 	adc.w	r1, r1, #0
 8000770:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000774:	bf08      	it	eq
 8000776:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800077a:	bd70      	pop	{r4, r5, r6, pc}
 800077c:	f1c4 0520 	rsb	r5, r4, #32
 8000780:	fa00 f205 	lsl.w	r2, r0, r5
 8000784:	ea4e 0e02 	orr.w	lr, lr, r2
 8000788:	fa20 f304 	lsr.w	r3, r0, r4
 800078c:	fa01 f205 	lsl.w	r2, r1, r5
 8000790:	ea43 0302 	orr.w	r3, r3, r2
 8000794:	fa21 f004 	lsr.w	r0, r1, r4
 8000798:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 800079c:	fa21 f204 	lsr.w	r2, r1, r4
 80007a0:	ea20 0002 	bic.w	r0, r0, r2
 80007a4:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 80007a8:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80007ac:	bf08      	it	eq
 80007ae:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80007b2:	bd70      	pop	{r4, r5, r6, pc}
 80007b4:	f094 0f00 	teq	r4, #0
 80007b8:	d10f      	bne.n	80007da <__aeabi_dmul+0x1c2>
 80007ba:	f001 4600 	and.w	r6, r1, #2147483648	@ 0x80000000
 80007be:	0040      	lsls	r0, r0, #1
 80007c0:	eb41 0101 	adc.w	r1, r1, r1
 80007c4:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 80007c8:	bf08      	it	eq
 80007ca:	3c01      	subeq	r4, #1
 80007cc:	d0f7      	beq.n	80007be <__aeabi_dmul+0x1a6>
 80007ce:	ea41 0106 	orr.w	r1, r1, r6
 80007d2:	f095 0f00 	teq	r5, #0
 80007d6:	bf18      	it	ne
 80007d8:	4770      	bxne	lr
 80007da:	f003 4600 	and.w	r6, r3, #2147483648	@ 0x80000000
 80007de:	0052      	lsls	r2, r2, #1
 80007e0:	eb43 0303 	adc.w	r3, r3, r3
 80007e4:	f413 1f80 	tst.w	r3, #1048576	@ 0x100000
 80007e8:	bf08      	it	eq
 80007ea:	3d01      	subeq	r5, #1
 80007ec:	d0f7      	beq.n	80007de <__aeabi_dmul+0x1c6>
 80007ee:	ea43 0306 	orr.w	r3, r3, r6
 80007f2:	4770      	bx	lr
 80007f4:	ea94 0f0c 	teq	r4, ip
 80007f8:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80007fc:	bf18      	it	ne
 80007fe:	ea95 0f0c 	teqne	r5, ip
 8000802:	d00c      	beq.n	800081e <__aeabi_dmul+0x206>
 8000804:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000808:	bf18      	it	ne
 800080a:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800080e:	d1d1      	bne.n	80007b4 <__aeabi_dmul+0x19c>
 8000810:	ea81 0103 	eor.w	r1, r1, r3
 8000814:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000818:	f04f 0000 	mov.w	r0, #0
 800081c:	bd70      	pop	{r4, r5, r6, pc}
 800081e:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000822:	bf06      	itte	eq
 8000824:	4610      	moveq	r0, r2
 8000826:	4619      	moveq	r1, r3
 8000828:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800082c:	d019      	beq.n	8000862 <__aeabi_dmul+0x24a>
 800082e:	ea94 0f0c 	teq	r4, ip
 8000832:	d102      	bne.n	800083a <__aeabi_dmul+0x222>
 8000834:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8000838:	d113      	bne.n	8000862 <__aeabi_dmul+0x24a>
 800083a:	ea95 0f0c 	teq	r5, ip
 800083e:	d105      	bne.n	800084c <__aeabi_dmul+0x234>
 8000840:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000844:	bf1c      	itt	ne
 8000846:	4610      	movne	r0, r2
 8000848:	4619      	movne	r1, r3
 800084a:	d10a      	bne.n	8000862 <__aeabi_dmul+0x24a>
 800084c:	ea81 0103 	eor.w	r1, r1, r3
 8000850:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000854:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 8000858:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 800085c:	f04f 0000 	mov.w	r0, #0
 8000860:	bd70      	pop	{r4, r5, r6, pc}
 8000862:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 8000866:	f441 0178 	orr.w	r1, r1, #16252928	@ 0xf80000
 800086a:	bd70      	pop	{r4, r5, r6, pc}

0800086c <__aeabi_ddiv>:
 800086c:	b570      	push	{r4, r5, r6, lr}
 800086e:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 8000872:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
 8000876:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800087a:	bf1d      	ittte	ne
 800087c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000880:	ea94 0f0c 	teqne	r4, ip
 8000884:	ea95 0f0c 	teqne	r5, ip
 8000888:	f000 f8a7 	bleq	80009da <__aeabi_ddiv+0x16e>
 800088c:	eba4 0405 	sub.w	r4, r4, r5
 8000890:	ea81 0e03 	eor.w	lr, r1, r3
 8000894:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000898:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800089c:	f000 8088 	beq.w	80009b0 <__aeabi_ddiv+0x144>
 80008a0:	ea4f 3303 	mov.w	r3, r3, lsl #12
 80008a4:	f04f 5580 	mov.w	r5, #268435456	@ 0x10000000
 80008a8:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 80008ac:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 80008b0:	ea4f 2202 	mov.w	r2, r2, lsl #8
 80008b4:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 80008b8:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 80008bc:	ea4f 2600 	mov.w	r6, r0, lsl #8
 80008c0:	f00e 4100 	and.w	r1, lr, #2147483648	@ 0x80000000
 80008c4:	429d      	cmp	r5, r3
 80008c6:	bf08      	it	eq
 80008c8:	4296      	cmpeq	r6, r2
 80008ca:	f144 04fd 	adc.w	r4, r4, #253	@ 0xfd
 80008ce:	f504 7440 	add.w	r4, r4, #768	@ 0x300
 80008d2:	d202      	bcs.n	80008da <__aeabi_ddiv+0x6e>
 80008d4:	085b      	lsrs	r3, r3, #1
 80008d6:	ea4f 0232 	mov.w	r2, r2, rrx
 80008da:	1ab6      	subs	r6, r6, r2
 80008dc:	eb65 0503 	sbc.w	r5, r5, r3
 80008e0:	085b      	lsrs	r3, r3, #1
 80008e2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008e6:	f44f 1080 	mov.w	r0, #1048576	@ 0x100000
 80008ea:	f44f 2c00 	mov.w	ip, #524288	@ 0x80000
 80008ee:	ebb6 0e02 	subs.w	lr, r6, r2
 80008f2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008f6:	bf22      	ittt	cs
 80008f8:	1ab6      	subcs	r6, r6, r2
 80008fa:	4675      	movcs	r5, lr
 80008fc:	ea40 000c 	orrcs.w	r0, r0, ip
 8000900:	085b      	lsrs	r3, r3, #1
 8000902:	ea4f 0232 	mov.w	r2, r2, rrx
 8000906:	ebb6 0e02 	subs.w	lr, r6, r2
 800090a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800090e:	bf22      	ittt	cs
 8000910:	1ab6      	subcs	r6, r6, r2
 8000912:	4675      	movcs	r5, lr
 8000914:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 8000918:	085b      	lsrs	r3, r3, #1
 800091a:	ea4f 0232 	mov.w	r2, r2, rrx
 800091e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000922:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000926:	bf22      	ittt	cs
 8000928:	1ab6      	subcs	r6, r6, r2
 800092a:	4675      	movcs	r5, lr
 800092c:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000930:	085b      	lsrs	r3, r3, #1
 8000932:	ea4f 0232 	mov.w	r2, r2, rrx
 8000936:	ebb6 0e02 	subs.w	lr, r6, r2
 800093a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800093e:	bf22      	ittt	cs
 8000940:	1ab6      	subcs	r6, r6, r2
 8000942:	4675      	movcs	r5, lr
 8000944:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000948:	ea55 0e06 	orrs.w	lr, r5, r6
 800094c:	d018      	beq.n	8000980 <__aeabi_ddiv+0x114>
 800094e:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000952:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8000956:	ea4f 1606 	mov.w	r6, r6, lsl #4
 800095a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 800095e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000962:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8000966:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 800096a:	d1c0      	bne.n	80008ee <__aeabi_ddiv+0x82>
 800096c:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 8000970:	d10b      	bne.n	800098a <__aeabi_ddiv+0x11e>
 8000972:	ea41 0100 	orr.w	r1, r1, r0
 8000976:	f04f 0000 	mov.w	r0, #0
 800097a:	f04f 4c00 	mov.w	ip, #2147483648	@ 0x80000000
 800097e:	e7b6      	b.n	80008ee <__aeabi_ddiv+0x82>
 8000980:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 8000984:	bf04      	itt	eq
 8000986:	4301      	orreq	r1, r0
 8000988:	2000      	moveq	r0, #0
 800098a:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
 800098e:	bf88      	it	hi
 8000990:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
 8000994:	f63f aeaf 	bhi.w	80006f6 <__aeabi_dmul+0xde>
 8000998:	ebb5 0c03 	subs.w	ip, r5, r3
 800099c:	bf04      	itt	eq
 800099e:	ebb6 0c02 	subseq.w	ip, r6, r2
 80009a2:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80009a6:	f150 0000 	adcs.w	r0, r0, #0
 80009aa:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80009ae:	bd70      	pop	{r4, r5, r6, pc}
 80009b0:	f00e 4e00 	and.w	lr, lr, #2147483648	@ 0x80000000
 80009b4:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 80009b8:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 80009bc:	bfc2      	ittt	gt
 80009be:	ebd4 050c 	rsbsgt	r5, r4, ip
 80009c2:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80009c6:	bd70      	popgt	{r4, r5, r6, pc}
 80009c8:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 80009cc:	f04f 0e00 	mov.w	lr, #0
 80009d0:	3c01      	subs	r4, #1
 80009d2:	e690      	b.n	80006f6 <__aeabi_dmul+0xde>
 80009d4:	ea45 0e06 	orr.w	lr, r5, r6
 80009d8:	e68d      	b.n	80006f6 <__aeabi_dmul+0xde>
 80009da:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80009de:	ea94 0f0c 	teq	r4, ip
 80009e2:	bf08      	it	eq
 80009e4:	ea95 0f0c 	teqeq	r5, ip
 80009e8:	f43f af3b 	beq.w	8000862 <__aeabi_dmul+0x24a>
 80009ec:	ea94 0f0c 	teq	r4, ip
 80009f0:	d10a      	bne.n	8000a08 <__aeabi_ddiv+0x19c>
 80009f2:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80009f6:	f47f af34 	bne.w	8000862 <__aeabi_dmul+0x24a>
 80009fa:	ea95 0f0c 	teq	r5, ip
 80009fe:	f47f af25 	bne.w	800084c <__aeabi_dmul+0x234>
 8000a02:	4610      	mov	r0, r2
 8000a04:	4619      	mov	r1, r3
 8000a06:	e72c      	b.n	8000862 <__aeabi_dmul+0x24a>
 8000a08:	ea95 0f0c 	teq	r5, ip
 8000a0c:	d106      	bne.n	8000a1c <__aeabi_ddiv+0x1b0>
 8000a0e:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000a12:	f43f aefd 	beq.w	8000810 <__aeabi_dmul+0x1f8>
 8000a16:	4610      	mov	r0, r2
 8000a18:	4619      	mov	r1, r3
 8000a1a:	e722      	b.n	8000862 <__aeabi_dmul+0x24a>
 8000a1c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000a20:	bf18      	it	ne
 8000a22:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000a26:	f47f aec5 	bne.w	80007b4 <__aeabi_dmul+0x19c>
 8000a2a:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8000a2e:	f47f af0d 	bne.w	800084c <__aeabi_dmul+0x234>
 8000a32:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8000a36:	f47f aeeb 	bne.w	8000810 <__aeabi_dmul+0x1f8>
 8000a3a:	e712      	b.n	8000862 <__aeabi_dmul+0x24a>

08000a3c <__gedf2>:
 8000a3c:	f04f 3cff 	mov.w	ip, #4294967295
 8000a40:	e006      	b.n	8000a50 <__cmpdf2+0x4>
 8000a42:	bf00      	nop

08000a44 <__ledf2>:
 8000a44:	f04f 0c01 	mov.w	ip, #1
 8000a48:	e002      	b.n	8000a50 <__cmpdf2+0x4>
 8000a4a:	bf00      	nop

08000a4c <__cmpdf2>:
 8000a4c:	f04f 0c01 	mov.w	ip, #1
 8000a50:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000a54:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a58:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a5c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a60:	bf18      	it	ne
 8000a62:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 8000a66:	d01b      	beq.n	8000aa0 <__cmpdf2+0x54>
 8000a68:	b001      	add	sp, #4
 8000a6a:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 8000a6e:	bf0c      	ite	eq
 8000a70:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000a74:	ea91 0f03 	teqne	r1, r3
 8000a78:	bf02      	ittt	eq
 8000a7a:	ea90 0f02 	teqeq	r0, r2
 8000a7e:	2000      	moveq	r0, #0
 8000a80:	4770      	bxeq	lr
 8000a82:	f110 0f00 	cmn.w	r0, #0
 8000a86:	ea91 0f03 	teq	r1, r3
 8000a8a:	bf58      	it	pl
 8000a8c:	4299      	cmppl	r1, r3
 8000a8e:	bf08      	it	eq
 8000a90:	4290      	cmpeq	r0, r2
 8000a92:	bf2c      	ite	cs
 8000a94:	17d8      	asrcs	r0, r3, #31
 8000a96:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 8000a9a:	f040 0001 	orr.w	r0, r0, #1
 8000a9e:	4770      	bx	lr
 8000aa0:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000aa4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000aa8:	d102      	bne.n	8000ab0 <__cmpdf2+0x64>
 8000aaa:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000aae:	d107      	bne.n	8000ac0 <__cmpdf2+0x74>
 8000ab0:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000ab4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000ab8:	d1d6      	bne.n	8000a68 <__cmpdf2+0x1c>
 8000aba:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000abe:	d0d3      	beq.n	8000a68 <__cmpdf2+0x1c>
 8000ac0:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000ac4:	4770      	bx	lr
 8000ac6:	bf00      	nop

08000ac8 <__aeabi_cdrcmple>:
 8000ac8:	4684      	mov	ip, r0
 8000aca:	4610      	mov	r0, r2
 8000acc:	4662      	mov	r2, ip
 8000ace:	468c      	mov	ip, r1
 8000ad0:	4619      	mov	r1, r3
 8000ad2:	4663      	mov	r3, ip
 8000ad4:	e000      	b.n	8000ad8 <__aeabi_cdcmpeq>
 8000ad6:	bf00      	nop

08000ad8 <__aeabi_cdcmpeq>:
 8000ad8:	b501      	push	{r0, lr}
 8000ada:	f7ff ffb7 	bl	8000a4c <__cmpdf2>
 8000ade:	2800      	cmp	r0, #0
 8000ae0:	bf48      	it	mi
 8000ae2:	f110 0f00 	cmnmi.w	r0, #0
 8000ae6:	bd01      	pop	{r0, pc}

08000ae8 <__aeabi_dcmpeq>:
 8000ae8:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000aec:	f7ff fff4 	bl	8000ad8 <__aeabi_cdcmpeq>
 8000af0:	bf0c      	ite	eq
 8000af2:	2001      	moveq	r0, #1
 8000af4:	2000      	movne	r0, #0
 8000af6:	f85d fb08 	ldr.w	pc, [sp], #8
 8000afa:	bf00      	nop

08000afc <__aeabi_dcmplt>:
 8000afc:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b00:	f7ff ffea 	bl	8000ad8 <__aeabi_cdcmpeq>
 8000b04:	bf34      	ite	cc
 8000b06:	2001      	movcc	r0, #1
 8000b08:	2000      	movcs	r0, #0
 8000b0a:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b0e:	bf00      	nop

08000b10 <__aeabi_dcmple>:
 8000b10:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b14:	f7ff ffe0 	bl	8000ad8 <__aeabi_cdcmpeq>
 8000b18:	bf94      	ite	ls
 8000b1a:	2001      	movls	r0, #1
 8000b1c:	2000      	movhi	r0, #0
 8000b1e:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b22:	bf00      	nop

08000b24 <__aeabi_dcmpge>:
 8000b24:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b28:	f7ff ffce 	bl	8000ac8 <__aeabi_cdrcmple>
 8000b2c:	bf94      	ite	ls
 8000b2e:	2001      	movls	r0, #1
 8000b30:	2000      	movhi	r0, #0
 8000b32:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b36:	bf00      	nop

08000b38 <__aeabi_dcmpgt>:
 8000b38:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b3c:	f7ff ffc4 	bl	8000ac8 <__aeabi_cdrcmple>
 8000b40:	bf34      	ite	cc
 8000b42:	2001      	movcc	r0, #1
 8000b44:	2000      	movcs	r0, #0
 8000b46:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b4a:	bf00      	nop

08000b4c <__aeabi_dcmpun>:
 8000b4c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000b50:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b54:	d102      	bne.n	8000b5c <__aeabi_dcmpun+0x10>
 8000b56:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000b5a:	d10a      	bne.n	8000b72 <__aeabi_dcmpun+0x26>
 8000b5c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000b60:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b64:	d102      	bne.n	8000b6c <__aeabi_dcmpun+0x20>
 8000b66:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000b6a:	d102      	bne.n	8000b72 <__aeabi_dcmpun+0x26>
 8000b6c:	f04f 0000 	mov.w	r0, #0
 8000b70:	4770      	bx	lr
 8000b72:	f04f 0001 	mov.w	r0, #1
 8000b76:	4770      	bx	lr

08000b78 <__aeabi_d2f>:
 8000b78:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000b7c:	f1b2 43e0 	subs.w	r3, r2, #1879048192	@ 0x70000000
 8000b80:	bf24      	itt	cs
 8000b82:	f5b3 1c00 	subscs.w	ip, r3, #2097152	@ 0x200000
 8000b86:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	@ 0x1fc00000
 8000b8a:	d90d      	bls.n	8000ba8 <__aeabi_d2f+0x30>
 8000b8c:	f001 4c00 	and.w	ip, r1, #2147483648	@ 0x80000000
 8000b90:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 8000b94:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 8000b98:	f1b2 4f00 	cmp.w	r2, #2147483648	@ 0x80000000
 8000b9c:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8000ba0:	bf08      	it	eq
 8000ba2:	f020 0001 	biceq.w	r0, r0, #1
 8000ba6:	4770      	bx	lr
 8000ba8:	f011 4f80 	tst.w	r1, #1073741824	@ 0x40000000
 8000bac:	d121      	bne.n	8000bf2 <__aeabi_d2f+0x7a>
 8000bae:	f113 7238 	adds.w	r2, r3, #48234496	@ 0x2e00000
 8000bb2:	bfbc      	itt	lt
 8000bb4:	f001 4000 	andlt.w	r0, r1, #2147483648	@ 0x80000000
 8000bb8:	4770      	bxlt	lr
 8000bba:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 8000bbe:	ea4f 5252 	mov.w	r2, r2, lsr #21
 8000bc2:	f1c2 0218 	rsb	r2, r2, #24
 8000bc6:	f1c2 0c20 	rsb	ip, r2, #32
 8000bca:	fa10 f30c 	lsls.w	r3, r0, ip
 8000bce:	fa20 f002 	lsr.w	r0, r0, r2
 8000bd2:	bf18      	it	ne
 8000bd4:	f040 0001 	orrne.w	r0, r0, #1
 8000bd8:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000bdc:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 8000be0:	fa03 fc0c 	lsl.w	ip, r3, ip
 8000be4:	ea40 000c 	orr.w	r0, r0, ip
 8000be8:	fa23 f302 	lsr.w	r3, r3, r2
 8000bec:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8000bf0:	e7cc      	b.n	8000b8c <__aeabi_d2f+0x14>
 8000bf2:	ea7f 5362 	mvns.w	r3, r2, asr #21
 8000bf6:	d107      	bne.n	8000c08 <__aeabi_d2f+0x90>
 8000bf8:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 8000bfc:	bf1e      	ittt	ne
 8000bfe:	f04f 40fe 	movne.w	r0, #2130706432	@ 0x7f000000
 8000c02:	f440 0040 	orrne.w	r0, r0, #12582912	@ 0xc00000
 8000c06:	4770      	bxne	lr
 8000c08:	f001 4000 	and.w	r0, r1, #2147483648	@ 0x80000000
 8000c0c:	f040 40fe 	orr.w	r0, r0, #2130706432	@ 0x7f000000
 8000c10:	f440 0000 	orr.w	r0, r0, #8388608	@ 0x800000
 8000c14:	4770      	bx	lr
 8000c16:	bf00      	nop

08000c18 <__aeabi_ldivmod>:
 8000c18:	b97b      	cbnz	r3, 8000c3a <__aeabi_ldivmod+0x22>
 8000c1a:	b972      	cbnz	r2, 8000c3a <__aeabi_ldivmod+0x22>
 8000c1c:	2900      	cmp	r1, #0
 8000c1e:	bfbe      	ittt	lt
 8000c20:	2000      	movlt	r0, #0
 8000c22:	f04f 4100 	movlt.w	r1, #2147483648	@ 0x80000000
 8000c26:	e006      	blt.n	8000c36 <__aeabi_ldivmod+0x1e>
 8000c28:	bf08      	it	eq
 8000c2a:	2800      	cmpeq	r0, #0
 8000c2c:	bf1c      	itt	ne
 8000c2e:	f06f 4100 	mvnne.w	r1, #2147483648	@ 0x80000000
 8000c32:	f04f 30ff 	movne.w	r0, #4294967295
 8000c36:	f000 b9d3 	b.w	8000fe0 <__aeabi_idiv0>
 8000c3a:	f1ad 0c08 	sub.w	ip, sp, #8
 8000c3e:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8000c42:	2900      	cmp	r1, #0
 8000c44:	db09      	blt.n	8000c5a <__aeabi_ldivmod+0x42>
 8000c46:	2b00      	cmp	r3, #0
 8000c48:	db1a      	blt.n	8000c80 <__aeabi_ldivmod+0x68>
 8000c4a:	f000 f84d 	bl	8000ce8 <__udivmoddi4>
 8000c4e:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000c52:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000c56:	b004      	add	sp, #16
 8000c58:	4770      	bx	lr
 8000c5a:	4240      	negs	r0, r0
 8000c5c:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000c60:	2b00      	cmp	r3, #0
 8000c62:	db1b      	blt.n	8000c9c <__aeabi_ldivmod+0x84>
 8000c64:	f000 f840 	bl	8000ce8 <__udivmoddi4>
 8000c68:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000c6c:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000c70:	b004      	add	sp, #16
 8000c72:	4240      	negs	r0, r0
 8000c74:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000c78:	4252      	negs	r2, r2
 8000c7a:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000c7e:	4770      	bx	lr
 8000c80:	4252      	negs	r2, r2
 8000c82:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000c86:	f000 f82f 	bl	8000ce8 <__udivmoddi4>
 8000c8a:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000c8e:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000c92:	b004      	add	sp, #16
 8000c94:	4240      	negs	r0, r0
 8000c96:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000c9a:	4770      	bx	lr
 8000c9c:	4252      	negs	r2, r2
 8000c9e:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000ca2:	f000 f821 	bl	8000ce8 <__udivmoddi4>
 8000ca6:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000caa:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000cae:	b004      	add	sp, #16
 8000cb0:	4252      	negs	r2, r2
 8000cb2:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000cb6:	4770      	bx	lr

08000cb8 <__aeabi_uldivmod>:
 8000cb8:	b953      	cbnz	r3, 8000cd0 <__aeabi_uldivmod+0x18>
 8000cba:	b94a      	cbnz	r2, 8000cd0 <__aeabi_uldivmod+0x18>
 8000cbc:	2900      	cmp	r1, #0
 8000cbe:	bf08      	it	eq
 8000cc0:	2800      	cmpeq	r0, #0
 8000cc2:	bf1c      	itt	ne
 8000cc4:	f04f 31ff 	movne.w	r1, #4294967295
 8000cc8:	f04f 30ff 	movne.w	r0, #4294967295
 8000ccc:	f000 b988 	b.w	8000fe0 <__aeabi_idiv0>
 8000cd0:	f1ad 0c08 	sub.w	ip, sp, #8
 8000cd4:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8000cd8:	f000 f806 	bl	8000ce8 <__udivmoddi4>
 8000cdc:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000ce0:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000ce4:	b004      	add	sp, #16
 8000ce6:	4770      	bx	lr

08000ce8 <__udivmoddi4>:
 8000ce8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000cec:	9d08      	ldr	r5, [sp, #32]
 8000cee:	468e      	mov	lr, r1
 8000cf0:	4604      	mov	r4, r0
 8000cf2:	4688      	mov	r8, r1
 8000cf4:	2b00      	cmp	r3, #0
 8000cf6:	d14a      	bne.n	8000d8e <__udivmoddi4+0xa6>
 8000cf8:	428a      	cmp	r2, r1
 8000cfa:	4617      	mov	r7, r2
 8000cfc:	d962      	bls.n	8000dc4 <__udivmoddi4+0xdc>
 8000cfe:	fab2 f682 	clz	r6, r2
 8000d02:	b14e      	cbz	r6, 8000d18 <__udivmoddi4+0x30>
 8000d04:	f1c6 0320 	rsb	r3, r6, #32
 8000d08:	fa01 f806 	lsl.w	r8, r1, r6
 8000d0c:	fa20 f303 	lsr.w	r3, r0, r3
 8000d10:	40b7      	lsls	r7, r6
 8000d12:	ea43 0808 	orr.w	r8, r3, r8
 8000d16:	40b4      	lsls	r4, r6
 8000d18:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 8000d1c:	fa1f fc87 	uxth.w	ip, r7
 8000d20:	fbb8 f1fe 	udiv	r1, r8, lr
 8000d24:	0c23      	lsrs	r3, r4, #16
 8000d26:	fb0e 8811 	mls	r8, lr, r1, r8
 8000d2a:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
 8000d2e:	fb01 f20c 	mul.w	r2, r1, ip
 8000d32:	429a      	cmp	r2, r3
 8000d34:	d909      	bls.n	8000d4a <__udivmoddi4+0x62>
 8000d36:	18fb      	adds	r3, r7, r3
 8000d38:	f101 30ff 	add.w	r0, r1, #4294967295
 8000d3c:	f080 80ea 	bcs.w	8000f14 <__udivmoddi4+0x22c>
 8000d40:	429a      	cmp	r2, r3
 8000d42:	f240 80e7 	bls.w	8000f14 <__udivmoddi4+0x22c>
 8000d46:	3902      	subs	r1, #2
 8000d48:	443b      	add	r3, r7
 8000d4a:	1a9a      	subs	r2, r3, r2
 8000d4c:	b2a3      	uxth	r3, r4
 8000d4e:	fbb2 f0fe 	udiv	r0, r2, lr
 8000d52:	fb0e 2210 	mls	r2, lr, r0, r2
 8000d56:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8000d5a:	fb00 fc0c 	mul.w	ip, r0, ip
 8000d5e:	459c      	cmp	ip, r3
 8000d60:	d909      	bls.n	8000d76 <__udivmoddi4+0x8e>
 8000d62:	18fb      	adds	r3, r7, r3
 8000d64:	f100 32ff 	add.w	r2, r0, #4294967295
 8000d68:	f080 80d6 	bcs.w	8000f18 <__udivmoddi4+0x230>
 8000d6c:	459c      	cmp	ip, r3
 8000d6e:	f240 80d3 	bls.w	8000f18 <__udivmoddi4+0x230>
 8000d72:	443b      	add	r3, r7
 8000d74:	3802      	subs	r0, #2
 8000d76:	ea40 4001 	orr.w	r0, r0, r1, lsl #16
 8000d7a:	eba3 030c 	sub.w	r3, r3, ip
 8000d7e:	2100      	movs	r1, #0
 8000d80:	b11d      	cbz	r5, 8000d8a <__udivmoddi4+0xa2>
 8000d82:	40f3      	lsrs	r3, r6
 8000d84:	2200      	movs	r2, #0
 8000d86:	e9c5 3200 	strd	r3, r2, [r5]
 8000d8a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000d8e:	428b      	cmp	r3, r1
 8000d90:	d905      	bls.n	8000d9e <__udivmoddi4+0xb6>
 8000d92:	b10d      	cbz	r5, 8000d98 <__udivmoddi4+0xb0>
 8000d94:	e9c5 0100 	strd	r0, r1, [r5]
 8000d98:	2100      	movs	r1, #0
 8000d9a:	4608      	mov	r0, r1
 8000d9c:	e7f5      	b.n	8000d8a <__udivmoddi4+0xa2>
 8000d9e:	fab3 f183 	clz	r1, r3
 8000da2:	2900      	cmp	r1, #0
 8000da4:	d146      	bne.n	8000e34 <__udivmoddi4+0x14c>
 8000da6:	4573      	cmp	r3, lr
 8000da8:	d302      	bcc.n	8000db0 <__udivmoddi4+0xc8>
 8000daa:	4282      	cmp	r2, r0
 8000dac:	f200 8105 	bhi.w	8000fba <__udivmoddi4+0x2d2>
 8000db0:	1a84      	subs	r4, r0, r2
 8000db2:	eb6e 0203 	sbc.w	r2, lr, r3
 8000db6:	2001      	movs	r0, #1
 8000db8:	4690      	mov	r8, r2
 8000dba:	2d00      	cmp	r5, #0
 8000dbc:	d0e5      	beq.n	8000d8a <__udivmoddi4+0xa2>
 8000dbe:	e9c5 4800 	strd	r4, r8, [r5]
 8000dc2:	e7e2      	b.n	8000d8a <__udivmoddi4+0xa2>
 8000dc4:	2a00      	cmp	r2, #0
 8000dc6:	f000 8090 	beq.w	8000eea <__udivmoddi4+0x202>
 8000dca:	fab2 f682 	clz	r6, r2
 8000dce:	2e00      	cmp	r6, #0
 8000dd0:	f040 80a4 	bne.w	8000f1c <__udivmoddi4+0x234>
 8000dd4:	1a8a      	subs	r2, r1, r2
 8000dd6:	0c03      	lsrs	r3, r0, #16
 8000dd8:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 8000ddc:	b280      	uxth	r0, r0
 8000dde:	b2bc      	uxth	r4, r7
 8000de0:	2101      	movs	r1, #1
 8000de2:	fbb2 fcfe 	udiv	ip, r2, lr
 8000de6:	fb0e 221c 	mls	r2, lr, ip, r2
 8000dea:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8000dee:	fb04 f20c 	mul.w	r2, r4, ip
 8000df2:	429a      	cmp	r2, r3
 8000df4:	d907      	bls.n	8000e06 <__udivmoddi4+0x11e>
 8000df6:	18fb      	adds	r3, r7, r3
 8000df8:	f10c 38ff 	add.w	r8, ip, #4294967295
 8000dfc:	d202      	bcs.n	8000e04 <__udivmoddi4+0x11c>
 8000dfe:	429a      	cmp	r2, r3
 8000e00:	f200 80e0 	bhi.w	8000fc4 <__udivmoddi4+0x2dc>
 8000e04:	46c4      	mov	ip, r8
 8000e06:	1a9b      	subs	r3, r3, r2
 8000e08:	fbb3 f2fe 	udiv	r2, r3, lr
 8000e0c:	fb0e 3312 	mls	r3, lr, r2, r3
 8000e10:	ea40 4303 	orr.w	r3, r0, r3, lsl #16
 8000e14:	fb02 f404 	mul.w	r4, r2, r4
 8000e18:	429c      	cmp	r4, r3
 8000e1a:	d907      	bls.n	8000e2c <__udivmoddi4+0x144>
 8000e1c:	18fb      	adds	r3, r7, r3
 8000e1e:	f102 30ff 	add.w	r0, r2, #4294967295
 8000e22:	d202      	bcs.n	8000e2a <__udivmoddi4+0x142>
 8000e24:	429c      	cmp	r4, r3
 8000e26:	f200 80ca 	bhi.w	8000fbe <__udivmoddi4+0x2d6>
 8000e2a:	4602      	mov	r2, r0
 8000e2c:	1b1b      	subs	r3, r3, r4
 8000e2e:	ea42 400c 	orr.w	r0, r2, ip, lsl #16
 8000e32:	e7a5      	b.n	8000d80 <__udivmoddi4+0x98>
 8000e34:	f1c1 0620 	rsb	r6, r1, #32
 8000e38:	408b      	lsls	r3, r1
 8000e3a:	fa22 f706 	lsr.w	r7, r2, r6
 8000e3e:	431f      	orrs	r7, r3
 8000e40:	fa0e f401 	lsl.w	r4, lr, r1
 8000e44:	fa20 f306 	lsr.w	r3, r0, r6
 8000e48:	fa2e fe06 	lsr.w	lr, lr, r6
 8000e4c:	ea4f 4917 	mov.w	r9, r7, lsr #16
 8000e50:	4323      	orrs	r3, r4
 8000e52:	fa00 f801 	lsl.w	r8, r0, r1
 8000e56:	fa1f fc87 	uxth.w	ip, r7
 8000e5a:	fbbe f0f9 	udiv	r0, lr, r9
 8000e5e:	0c1c      	lsrs	r4, r3, #16
 8000e60:	fb09 ee10 	mls	lr, r9, r0, lr
 8000e64:	ea44 440e 	orr.w	r4, r4, lr, lsl #16
 8000e68:	fb00 fe0c 	mul.w	lr, r0, ip
 8000e6c:	45a6      	cmp	lr, r4
 8000e6e:	fa02 f201 	lsl.w	r2, r2, r1
 8000e72:	d909      	bls.n	8000e88 <__udivmoddi4+0x1a0>
 8000e74:	193c      	adds	r4, r7, r4
 8000e76:	f100 3aff 	add.w	sl, r0, #4294967295
 8000e7a:	f080 809c 	bcs.w	8000fb6 <__udivmoddi4+0x2ce>
 8000e7e:	45a6      	cmp	lr, r4
 8000e80:	f240 8099 	bls.w	8000fb6 <__udivmoddi4+0x2ce>
 8000e84:	3802      	subs	r0, #2
 8000e86:	443c      	add	r4, r7
 8000e88:	eba4 040e 	sub.w	r4, r4, lr
 8000e8c:	fa1f fe83 	uxth.w	lr, r3
 8000e90:	fbb4 f3f9 	udiv	r3, r4, r9
 8000e94:	fb09 4413 	mls	r4, r9, r3, r4
 8000e98:	ea4e 4404 	orr.w	r4, lr, r4, lsl #16
 8000e9c:	fb03 fc0c 	mul.w	ip, r3, ip
 8000ea0:	45a4      	cmp	ip, r4
 8000ea2:	d908      	bls.n	8000eb6 <__udivmoddi4+0x1ce>
 8000ea4:	193c      	adds	r4, r7, r4
 8000ea6:	f103 3eff 	add.w	lr, r3, #4294967295
 8000eaa:	f080 8082 	bcs.w	8000fb2 <__udivmoddi4+0x2ca>
 8000eae:	45a4      	cmp	ip, r4
 8000eb0:	d97f      	bls.n	8000fb2 <__udivmoddi4+0x2ca>
 8000eb2:	3b02      	subs	r3, #2
 8000eb4:	443c      	add	r4, r7
 8000eb6:	ea43 4000 	orr.w	r0, r3, r0, lsl #16
 8000eba:	eba4 040c 	sub.w	r4, r4, ip
 8000ebe:	fba0 ec02 	umull	lr, ip, r0, r2
 8000ec2:	4564      	cmp	r4, ip
 8000ec4:	4673      	mov	r3, lr
 8000ec6:	46e1      	mov	r9, ip
 8000ec8:	d362      	bcc.n	8000f90 <__udivmoddi4+0x2a8>
 8000eca:	d05f      	beq.n	8000f8c <__udivmoddi4+0x2a4>
 8000ecc:	b15d      	cbz	r5, 8000ee6 <__udivmoddi4+0x1fe>
 8000ece:	ebb8 0203 	subs.w	r2, r8, r3
 8000ed2:	eb64 0409 	sbc.w	r4, r4, r9
 8000ed6:	fa04 f606 	lsl.w	r6, r4, r6
 8000eda:	fa22 f301 	lsr.w	r3, r2, r1
 8000ede:	431e      	orrs	r6, r3
 8000ee0:	40cc      	lsrs	r4, r1
 8000ee2:	e9c5 6400 	strd	r6, r4, [r5]
 8000ee6:	2100      	movs	r1, #0
 8000ee8:	e74f      	b.n	8000d8a <__udivmoddi4+0xa2>
 8000eea:	fbb1 fcf2 	udiv	ip, r1, r2
 8000eee:	0c01      	lsrs	r1, r0, #16
 8000ef0:	ea41 410e 	orr.w	r1, r1, lr, lsl #16
 8000ef4:	b280      	uxth	r0, r0
 8000ef6:	ea40 4201 	orr.w	r2, r0, r1, lsl #16
 8000efa:	463b      	mov	r3, r7
 8000efc:	4638      	mov	r0, r7
 8000efe:	463c      	mov	r4, r7
 8000f00:	46b8      	mov	r8, r7
 8000f02:	46be      	mov	lr, r7
 8000f04:	2620      	movs	r6, #32
 8000f06:	fbb1 f1f7 	udiv	r1, r1, r7
 8000f0a:	eba2 0208 	sub.w	r2, r2, r8
 8000f0e:	ea41 410c 	orr.w	r1, r1, ip, lsl #16
 8000f12:	e766      	b.n	8000de2 <__udivmoddi4+0xfa>
 8000f14:	4601      	mov	r1, r0
 8000f16:	e718      	b.n	8000d4a <__udivmoddi4+0x62>
 8000f18:	4610      	mov	r0, r2
 8000f1a:	e72c      	b.n	8000d76 <__udivmoddi4+0x8e>
 8000f1c:	f1c6 0220 	rsb	r2, r6, #32
 8000f20:	fa2e f302 	lsr.w	r3, lr, r2
 8000f24:	40b7      	lsls	r7, r6
 8000f26:	40b1      	lsls	r1, r6
 8000f28:	fa20 f202 	lsr.w	r2, r0, r2
 8000f2c:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 8000f30:	430a      	orrs	r2, r1
 8000f32:	fbb3 f8fe 	udiv	r8, r3, lr
 8000f36:	b2bc      	uxth	r4, r7
 8000f38:	fb0e 3318 	mls	r3, lr, r8, r3
 8000f3c:	0c11      	lsrs	r1, r2, #16
 8000f3e:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 8000f42:	fb08 f904 	mul.w	r9, r8, r4
 8000f46:	40b0      	lsls	r0, r6
 8000f48:	4589      	cmp	r9, r1
 8000f4a:	ea4f 4310 	mov.w	r3, r0, lsr #16
 8000f4e:	b280      	uxth	r0, r0
 8000f50:	d93e      	bls.n	8000fd0 <__udivmoddi4+0x2e8>
 8000f52:	1879      	adds	r1, r7, r1
 8000f54:	f108 3cff 	add.w	ip, r8, #4294967295
 8000f58:	d201      	bcs.n	8000f5e <__udivmoddi4+0x276>
 8000f5a:	4589      	cmp	r9, r1
 8000f5c:	d81f      	bhi.n	8000f9e <__udivmoddi4+0x2b6>
 8000f5e:	eba1 0109 	sub.w	r1, r1, r9
 8000f62:	fbb1 f9fe 	udiv	r9, r1, lr
 8000f66:	fb09 f804 	mul.w	r8, r9, r4
 8000f6a:	fb0e 1119 	mls	r1, lr, r9, r1
 8000f6e:	b292      	uxth	r2, r2
 8000f70:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8000f74:	4542      	cmp	r2, r8
 8000f76:	d229      	bcs.n	8000fcc <__udivmoddi4+0x2e4>
 8000f78:	18ba      	adds	r2, r7, r2
 8000f7a:	f109 31ff 	add.w	r1, r9, #4294967295
 8000f7e:	d2c4      	bcs.n	8000f0a <__udivmoddi4+0x222>
 8000f80:	4542      	cmp	r2, r8
 8000f82:	d2c2      	bcs.n	8000f0a <__udivmoddi4+0x222>
 8000f84:	f1a9 0102 	sub.w	r1, r9, #2
 8000f88:	443a      	add	r2, r7
 8000f8a:	e7be      	b.n	8000f0a <__udivmoddi4+0x222>
 8000f8c:	45f0      	cmp	r8, lr
 8000f8e:	d29d      	bcs.n	8000ecc <__udivmoddi4+0x1e4>
 8000f90:	ebbe 0302 	subs.w	r3, lr, r2
 8000f94:	eb6c 0c07 	sbc.w	ip, ip, r7
 8000f98:	3801      	subs	r0, #1
 8000f9a:	46e1      	mov	r9, ip
 8000f9c:	e796      	b.n	8000ecc <__udivmoddi4+0x1e4>
 8000f9e:	eba7 0909 	sub.w	r9, r7, r9
 8000fa2:	4449      	add	r1, r9
 8000fa4:	f1a8 0c02 	sub.w	ip, r8, #2
 8000fa8:	fbb1 f9fe 	udiv	r9, r1, lr
 8000fac:	fb09 f804 	mul.w	r8, r9, r4
 8000fb0:	e7db      	b.n	8000f6a <__udivmoddi4+0x282>
 8000fb2:	4673      	mov	r3, lr
 8000fb4:	e77f      	b.n	8000eb6 <__udivmoddi4+0x1ce>
 8000fb6:	4650      	mov	r0, sl
 8000fb8:	e766      	b.n	8000e88 <__udivmoddi4+0x1a0>
 8000fba:	4608      	mov	r0, r1
 8000fbc:	e6fd      	b.n	8000dba <__udivmoddi4+0xd2>
 8000fbe:	443b      	add	r3, r7
 8000fc0:	3a02      	subs	r2, #2
 8000fc2:	e733      	b.n	8000e2c <__udivmoddi4+0x144>
 8000fc4:	f1ac 0c02 	sub.w	ip, ip, #2
 8000fc8:	443b      	add	r3, r7
 8000fca:	e71c      	b.n	8000e06 <__udivmoddi4+0x11e>
 8000fcc:	4649      	mov	r1, r9
 8000fce:	e79c      	b.n	8000f0a <__udivmoddi4+0x222>
 8000fd0:	eba1 0109 	sub.w	r1, r1, r9
 8000fd4:	46c4      	mov	ip, r8
 8000fd6:	fbb1 f9fe 	udiv	r9, r1, lr
 8000fda:	fb09 f804 	mul.w	r8, r9, r4
 8000fde:	e7c4      	b.n	8000f6a <__udivmoddi4+0x282>

08000fe0 <__aeabi_idiv0>:
 8000fe0:	4770      	bx	lr
 8000fe2:	bf00      	nop

08000fe4 <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler: 
  ldr   sp, =_estack       /* set stack pointer */
 8000fe4:	f8df d034 	ldr.w	sp, [pc, #52]	@ 800101c <LoopFillZerobss+0x14>
 
/* Copy the data segment initializers from flash to SRAM */  
  movs  r1, #0
 8000fe8:	2100      	movs	r1, #0
  b  LoopCopyDataInit
 8000fea:	e003      	b.n	8000ff4 <LoopCopyDataInit>

08000fec <CopyDataInit>:

CopyDataInit:
  ldr  r3, =_sidata
 8000fec:	4b0c      	ldr	r3, [pc, #48]	@ (8001020 <LoopFillZerobss+0x18>)
  ldr  r3, [r3, r1]
 8000fee:	585b      	ldr	r3, [r3, r1]
  str  r3, [r0, r1]
 8000ff0:	5043      	str	r3, [r0, r1]
  adds  r1, r1, #4
 8000ff2:	3104      	adds	r1, #4

08000ff4 <LoopCopyDataInit>:
    
LoopCopyDataInit:
  ldr  r0, =_sdata
 8000ff4:	480b      	ldr	r0, [pc, #44]	@ (8001024 <LoopFillZerobss+0x1c>)
  ldr  r3, =_edata
 8000ff6:	4b0c      	ldr	r3, [pc, #48]	@ (8001028 <LoopFillZerobss+0x20>)
  adds  r2, r0, r1
 8000ff8:	1842      	adds	r2, r0, r1
  cmp  r2, r3
 8000ffa:	429a      	cmp	r2, r3
  bcc  CopyDataInit
 8000ffc:	d3f6      	bcc.n	8000fec <CopyDataInit>
  ldr  r2, =_sbss
 8000ffe:	4a0b      	ldr	r2, [pc, #44]	@ (800102c <LoopFillZerobss+0x24>)
  b  LoopFillZerobss
 8001000:	e002      	b.n	8001008 <LoopFillZerobss>

08001002 <FillZerobss>:
/* Zero fill the bss segment. */  
FillZerobss:
  movs  r3, #0
 8001002:	2300      	movs	r3, #0
  str  r3, [r2], #4
 8001004:	f842 3b04 	str.w	r3, [r2], #4

08001008 <LoopFillZerobss>:
    
LoopFillZerobss:
  ldr  r3, = _ebss
 8001008:	4b09      	ldr	r3, [pc, #36]	@ (8001030 <LoopFillZerobss+0x28>)
  cmp  r2, r3
 800100a:	429a      	cmp	r2, r3
  bcc  FillZerobss
 800100c:	d3f9      	bcc.n	8001002 <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit   
 800100e:	f003 fb59 	bl	80046c4 <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 8001012:	f022 f977 	bl	8023304 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 8001016:	f001 fa9f 	bl	8002558 <main>
  bx  lr    
 800101a:	4770      	bx	lr
  ldr   sp, =_estack       /* set stack pointer */
 800101c:	20030000 	.word	0x20030000
  ldr  r3, =_sidata
 8001020:	08025c78 	.word	0x08025c78
  ldr  r0, =_sdata
 8001024:	20000000 	.word	0x20000000
  ldr  r3, =_edata
 8001028:	20000274 	.word	0x20000274
  ldr  r2, =_sbss
 800102c:	20000480 	.word	0x20000480
  ldr  r3, = _ebss
 8001030:	20014114 	.word	0x20014114

08001034 <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 8001034:	e7fe      	b.n	8001034 <ADC_IRQHandler>

08001036 <MX_TouchGFX_PreOSInit>:
/**
 * PreOS Initialization function
 */
void MX_TouchGFX_PreOSInit(void)
{
}
 8001036:	4770      	bx	lr

08001038 <MX_TouchGFX_Init>:

/**
 * Initialize TouchGFX application
 */
void MX_TouchGFX_Init(void)
{
 8001038:	b508      	push	{r3, lr}
    // Calling forward to touchgfx_init in C++ domain
    touchgfx_components_init();
 800103a:	f000 fdbb 	bl	8001bb4 <touchgfx_components_init>
    touchgfx_init();
}
 800103e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    touchgfx_init();
 8001042:	f000 bd3f 	b.w	8001ac4 <touchgfx_init>

08001046 <TouchGFX_Task>:
 * TouchGFX application thread
 */
void TouchGFX_Task(void* argument)
{
    // Calling forward to touchgfx_taskEntry in C++ domain
    touchgfx_taskEntry();
 8001046:	f000 bdb7 	b.w	8001bb8 <touchgfx_taskEntry>

0800104a <_ZN20STM32TouchControllerD1Ev>:
 * @brief This class specializes TouchController Interface.
 *
 * @sa touchgfx::TouchController
 */

class STM32TouchController : public touchgfx::TouchController
 800104a:	4770      	bx	lr

0800104c <_ZN20STM32TouchControllerD0Ev>:
 800104c:	b510      	push	{r4, lr}
 800104e:	2104      	movs	r1, #4
 8001050:	4604      	mov	r4, r0
 8001052:	f020 fe68 	bl	8021d26 <_ZdlPvj>
 8001056:	4620      	mov	r0, r4
 8001058:	bd10      	pop	{r4, pc}
	...

0800105c <_Z11BSP_TS_Inittt>:
  * @param  XSize: The maximum X size of the TS area on LCD
  * @param  YSize: The maximum Y size of the TS area on LCD
  * @retval TS_OK: if all initializations are OK. Other value if error.
  */
uint8_t BSP_TS_Init(uint16_t XSize, uint16_t YSize)
{
 800105c:	b538      	push	{r3, r4, r5, lr}
    uint8_t ret = TS_ERROR;

    /* Initialize x and y positions boundaries */
    TsXBoundary = XSize;
 800105e:	4b0c      	ldr	r3, [pc, #48]	@ (8001090 <_Z11BSP_TS_Inittt+0x34>)
    TsYBoundary = YSize;

    /* Read ID and verify if the IO expander is ready */
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 8001060:	4c0c      	ldr	r4, [pc, #48]	@ (8001094 <_Z11BSP_TS_Inittt+0x38>)
    TsXBoundary = XSize;
 8001062:	8018      	strh	r0, [r3, #0]
    TsYBoundary = YSize;
 8001064:	4b0c      	ldr	r3, [pc, #48]	@ (8001098 <_Z11BSP_TS_Inittt+0x3c>)
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 8001066:	2082      	movs	r0, #130	@ 0x82
    TsYBoundary = YSize;
 8001068:	8019      	strh	r1, [r3, #0]
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 800106a:	6863      	ldr	r3, [r4, #4]
 800106c:	4798      	blx	r3
 800106e:	f640 0311 	movw	r3, #2065	@ 0x811
 8001072:	4298      	cmp	r0, r3
 8001074:	d10a      	bne.n	800108c <_Z11BSP_TS_Inittt+0x30>
    {
        /* Initialize the TS driver structure */
        TsDrv = &stmpe811_ts_drv;
 8001076:	4d09      	ldr	r5, [pc, #36]	@ (800109c <_Z11BSP_TS_Inittt+0x40>)
    }

    if (ret == TS_OK)
    {
        /* Initialize the LL TS Driver */
        TsDrv->Init(TS_I2C_ADDRESS);
 8001078:	6823      	ldr	r3, [r4, #0]
        TsDrv = &stmpe811_ts_drv;
 800107a:	602c      	str	r4, [r5, #0]
        TsDrv->Init(TS_I2C_ADDRESS);
 800107c:	2082      	movs	r0, #130	@ 0x82
 800107e:	4798      	blx	r3
        TsDrv->Start(TS_I2C_ADDRESS);
 8001080:	682b      	ldr	r3, [r5, #0]
 8001082:	2082      	movs	r0, #130	@ 0x82
 8001084:	68db      	ldr	r3, [r3, #12]
 8001086:	4798      	blx	r3
 8001088:	2000      	movs	r0, #0
    }

    return ret;
}
 800108a:	bd38      	pop	{r3, r4, r5, pc}
    uint8_t ret = TS_ERROR;
 800108c:	2001      	movs	r0, #1
 800108e:	e7fc      	b.n	800108a <_Z11BSP_TS_Inittt+0x2e>
 8001090:	200004a6 	.word	0x200004a6
 8001094:	2000009c 	.word	0x2000009c
 8001098:	200004a4 	.word	0x200004a4
 800109c:	200004a8 	.word	0x200004a8

080010a0 <_ZN20STM32TouchController4initEv>:
    BSP_TS_Init(240, 320);
 80010a0:	f44f 71a0 	mov.w	r1, #320	@ 0x140
 80010a4:	20f0      	movs	r0, #240	@ 0xf0
 80010a6:	f7ff bfd9 	b.w	800105c <_Z11BSP_TS_Inittt>
	...

080010ac <_Z15BSP_TS_GetStateP15TS_StateTypeDef>:
/**
  * @brief  Returns status and positions of the touch screen.
  * @param  TsState: Pointer to touch screen current state structure
  */
void BSP_TS_GetState(TS_StateTypeDef* TsState)
{
 80010ac:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    static uint32_t _x = 0, _y = 0;
    uint16_t xDiff, yDiff, x, y, xr, yr;

    TsState->TouchDetected = TsDrv->DetectTouch(TS_I2C_ADDRESS);
 80010ae:	4d39      	ldr	r5, [pc, #228]	@ (8001194 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xe8>)
 80010b0:	682b      	ldr	r3, [r5, #0]
{
 80010b2:	4604      	mov	r4, r0
    TsState->TouchDetected = TsDrv->DetectTouch(TS_I2C_ADDRESS);
 80010b4:	691b      	ldr	r3, [r3, #16]
 80010b6:	2082      	movs	r0, #130	@ 0x82
 80010b8:	4798      	blx	r3
 80010ba:	8020      	strh	r0, [r4, #0]

    if (TsState->TouchDetected)
 80010bc:	2800      	cmp	r0, #0
 80010be:	d04e      	beq.n	800115e <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xb2>
    {
        TsDrv->GetXY(TS_I2C_ADDRESS, &x, &y);
 80010c0:	682b      	ldr	r3, [r5, #0]
 80010c2:	f10d 0206 	add.w	r2, sp, #6
 80010c6:	695b      	ldr	r3, [r3, #20]
 80010c8:	a901      	add	r1, sp, #4
 80010ca:	2082      	movs	r0, #130	@ 0x82
 80010cc:	4798      	blx	r3

        if (isRevD)
 80010ce:	4b32      	ldr	r3, [pc, #200]	@ (8001198 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xec>)
 80010d0:	781b      	ldrb	r3, [r3, #0]
 80010d2:	2b00      	cmp	r3, #0
 80010d4:	d04b      	beq.n	800116e <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xc2>
        {
            //Ensures the coordinates are within the screen
            if (y > 3700)
 80010d6:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 80010da:	f640 6374 	movw	r3, #3700	@ 0xe74
 80010de:	429a      	cmp	r2, r3
 80010e0:	d93f      	bls.n	8001162 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xb6>
            {
                y = 3700;
 80010e2:	f8ad 3006 	strh.w	r3, [sp, #6]

            /* Y value first correction */
            y -= 180;

            /* Y value second correction */
            y = 3520 - y;
 80010e6:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 80010ea:	1a9b      	subs	r3, r3, r2
        }
        else
        {
            /* Y value first correction */
            y -= 360;
 80010ec:	b29b      	uxth	r3, r3

        /* Y value second correction */
        yr = y / 11;

        /* Return y position value */
        if (yr <= 0)
 80010ee:	2b0a      	cmp	r3, #10
 80010f0:	d942      	bls.n	8001178 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xcc>
        yr = y / 11;
 80010f2:	220b      	movs	r2, #11
 80010f4:	fbb3 f3f2 	udiv	r3, r3, r2
        {
            yr = 0;
        }
        else if (yr > TsYBoundary)
 80010f8:	4a28      	ldr	r2, [pc, #160]	@ (800119c <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xf0>)
 80010fa:	8812      	ldrh	r2, [r2, #0]
 80010fc:	4293      	cmp	r3, r2
 80010fe:	d901      	bls.n	8001104 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x58>
        {
            yr = TsYBoundary - 1;
 8001100:	3a01      	subs	r2, #1
 8001102:	b293      	uxth	r3, r2
        else
        {}
        y = yr;

        /* X value first correction */
        if (x <= 3000)
 8001104:	f8bd 2004 	ldrh.w	r2, [sp, #4]
 8001108:	4825      	ldr	r0, [pc, #148]	@ (80011a0 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xf4>)
 800110a:	f640 31b8 	movw	r1, #3000	@ 0xbb8
 800110e:	428a      	cmp	r2, r1
 8001110:	d834      	bhi.n	800117c <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xd0>
        {
            x = 3870 - x;
 8001112:	f5c2 6271 	rsb	r2, r2, #3856	@ 0xf10
 8001116:	320e      	adds	r2, #14
        }
        else
        {}

        x = xr;
        xDiff = x > _x ? (x - _x) : (_x - x);
 8001118:	6801      	ldr	r1, [r0, #0]
            x = 3870 - x;
 800111a:	b292      	uxth	r2, r2
        xr = x / 15;
 800111c:	250f      	movs	r5, #15
 800111e:	fbb2 f2f5 	udiv	r2, r2, r5
        else if (xr > TsXBoundary)
 8001122:	4d20      	ldr	r5, [pc, #128]	@ (80011a4 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xf8>)
 8001124:	882d      	ldrh	r5, [r5, #0]
 8001126:	42aa      	cmp	r2, r5
            xr = TsXBoundary - 1;
 8001128:	bf84      	itt	hi
 800112a:	f105 35ff 	addhi.w	r5, r5, #4294967295
 800112e:	b2aa      	uxthhi	r2, r5
        xDiff = x > _x ? (x - _x) : (_x - x);
 8001130:	428a      	cmp	r2, r1
 8001132:	4615      	mov	r5, r2
 8001134:	b28e      	uxth	r6, r1
 8001136:	d92a      	bls.n	800118e <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xe2>
 8001138:	1b92      	subs	r2, r2, r6
 800113a:	b291      	uxth	r1, r2
        yDiff = y > _y ? (y - _y) : (_y - y);
 800113c:	4e1a      	ldr	r6, [pc, #104]	@ (80011a8 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xfc>)
 800113e:	6837      	ldr	r7, [r6, #0]
 8001140:	42bb      	cmp	r3, r7
 8001142:	b2ba      	uxth	r2, r7
 8001144:	bf8c      	ite	hi
 8001146:	1a9a      	subhi	r2, r3, r2
 8001148:	1ad2      	subls	r2, r2, r3
 800114a:	b292      	uxth	r2, r2

        if (xDiff + yDiff > 5)
 800114c:	4411      	add	r1, r2
 800114e:	2905      	cmp	r1, #5
        {
            _x = x;
 8001150:	bfc4      	itt	gt
 8001152:	6005      	strgt	r5, [r0, #0]
            _y = y;
 8001154:	6033      	strgt	r3, [r6, #0]
        }

        /* Update the X position */
        TsState->X = _x;
 8001156:	6803      	ldr	r3, [r0, #0]
 8001158:	8063      	strh	r3, [r4, #2]

        /* Update the Y position */
        TsState->Y = _y;
 800115a:	6833      	ldr	r3, [r6, #0]
 800115c:	80a3      	strh	r3, [r4, #4]
    }
}
 800115e:	b003      	add	sp, #12
 8001160:	bdf0      	pop	{r4, r5, r6, r7, pc}
            else if (y < 180)
 8001162:	2ab3      	cmp	r2, #179	@ 0xb3
                y = 180;
 8001164:	bf9c      	itt	ls
 8001166:	22b4      	movls	r2, #180	@ 0xb4
 8001168:	f8ad 2006 	strhls.w	r2, [sp, #6]
 800116c:	e7bb      	b.n	80010e6 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x3a>
            y -= 360;
 800116e:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8001172:	f5a3 73b4 	sub.w	r3, r3, #360	@ 0x168
 8001176:	e7b9      	b.n	80010ec <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x40>
            yr = 0;
 8001178:	2300      	movs	r3, #0
 800117a:	e7c3      	b.n	8001104 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x58>
            x = 3800 - x;
 800117c:	f5c2 626d 	rsb	r2, r2, #3792	@ 0xed0
 8001180:	3208      	adds	r2, #8
 8001182:	b292      	uxth	r2, r2
        if (xr <= 0)
 8001184:	2a0e      	cmp	r2, #14
        xDiff = x > _x ? (x - _x) : (_x - x);
 8001186:	6801      	ldr	r1, [r0, #0]
        if (xr <= 0)
 8001188:	d8c8      	bhi.n	800111c <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x70>
        xDiff = x > _x ? (x - _x) : (_x - x);
 800118a:	2500      	movs	r5, #0
            xr = 0;
 800118c:	462a      	mov	r2, r5
        xDiff = x > _x ? (x - _x) : (_x - x);
 800118e:	1a89      	subs	r1, r1, r2
 8001190:	b289      	uxth	r1, r1
 8001192:	e7d3      	b.n	800113c <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x90>
 8001194:	200004a8 	.word	0x200004a8
 8001198:	20002384 	.word	0x20002384
 800119c:	200004a4 	.word	0x200004a4
 80011a0:	200004a0 	.word	0x200004a0
 80011a4:	200004a6 	.word	0x200004a6
 80011a8:	2000049c 	.word	0x2000049c

080011ac <_ZN20STM32TouchController11sampleTouchERlS0_>:
{
 80011ac:	b537      	push	{r0, r1, r2, r4, r5, lr}
    BSP_TS_GetState(&state);
 80011ae:	4668      	mov	r0, sp
{
 80011b0:	460d      	mov	r5, r1
 80011b2:	4614      	mov	r4, r2
    BSP_TS_GetState(&state);
 80011b4:	f7ff ff7a 	bl	80010ac <_Z15BSP_TS_GetStateP15TS_StateTypeDef>
    if (state.TouchDetected)
 80011b8:	f8bd 0000 	ldrh.w	r0, [sp]
 80011bc:	b130      	cbz	r0, 80011cc <_ZN20STM32TouchController11sampleTouchERlS0_+0x20>
        x = state.X;
 80011be:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 80011c2:	602b      	str	r3, [r5, #0]
        y = state.Y;
 80011c4:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 80011c8:	6023      	str	r3, [r4, #0]
        return true;
 80011ca:	2001      	movs	r0, #1
}
 80011cc:	b003      	add	sp, #12
 80011ce:	bd30      	pop	{r4, r5, pc}

080011d0 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>:
/*
 * Sets a pin high.
 */
void GPIO::set(GPIO_ID id)
{
    switch (id)
 80011d0:	2803      	cmp	r0, #3
 80011d2:	d821      	bhi.n	8001218 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x48>
 80011d4:	e8df f000 	tbb	[pc, r0]
 80011d8:	19120b02 	.word	0x19120b02
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_SET(id));
 80011dc:	4b0f      	ldr	r3, [pc, #60]	@ (800121c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x4c>)
 80011de:	681a      	ldr	r2, [r3, #0]
 80011e0:	fab2 f282 	clz	r2, r2
 80011e4:	0952      	lsrs	r2, r2, #5
 80011e6:	2104      	movs	r1, #4
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_SET(id));
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_SET(id));
 80011e8:	480d      	ldr	r0, [pc, #52]	@ (8001220 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x50>)
 80011ea:	f003 bcff 	b.w	8004bec <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_SET(id));
 80011ee:	4b0b      	ldr	r3, [pc, #44]	@ (800121c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x4c>)
 80011f0:	685a      	ldr	r2, [r3, #4]
 80011f2:	fab2 f282 	clz	r2, r2
 80011f6:	0952      	lsrs	r2, r2, #5
 80011f8:	2108      	movs	r1, #8
 80011fa:	e7f5      	b.n	80011e8 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x18>
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_SET(id));
 80011fc:	4b07      	ldr	r3, [pc, #28]	@ (800121c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x4c>)
 80011fe:	689a      	ldr	r2, [r3, #8]
 8001200:	fab2 f282 	clz	r2, r2
 8001204:	0952      	lsrs	r2, r2, #5
 8001206:	2110      	movs	r1, #16
 8001208:	e7ee      	b.n	80011e8 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x18>
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_SET(id));
 800120a:	4b04      	ldr	r3, [pc, #16]	@ (800121c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x4c>)
 800120c:	68da      	ldr	r2, [r3, #12]
 800120e:	fab2 f282 	clz	r2, r2
 8001212:	0952      	lsrs	r2, r2, #5
 8001214:	2120      	movs	r1, #32
 8001216:	e7e7      	b.n	80011e8 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x18>
#endif
        break;
    }
}
 8001218:	4770      	bx	lr
 800121a:	bf00      	nop
 800121c:	200004ac 	.word	0x200004ac
 8001220:	40021000 	.word	0x40021000

08001224 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>:
/*
 * Sets a pin low.
 */
void GPIO::clear(GPIO_ID id)
{
    switch (id)
 8001224:	2803      	cmp	r0, #3
 8001226:	d821      	bhi.n	800126c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x48>
 8001228:	e8df f000 	tbb	[pc, r0]
 800122c:	19120b02 	.word	0x19120b02
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_RESET(id));
 8001230:	4b0f      	ldr	r3, [pc, #60]	@ (8001270 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x4c>)
 8001232:	681a      	ldr	r2, [r3, #0]
 8001234:	3a00      	subs	r2, #0
 8001236:	bf18      	it	ne
 8001238:	2201      	movne	r2, #1
 800123a:	2104      	movs	r1, #4
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_RESET(id));
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_RESET(id));
 800123c:	480d      	ldr	r0, [pc, #52]	@ (8001274 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x50>)
 800123e:	f003 bcd5 	b.w	8004bec <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_RESET(id));
 8001242:	4b0b      	ldr	r3, [pc, #44]	@ (8001270 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x4c>)
 8001244:	685a      	ldr	r2, [r3, #4]
 8001246:	3a00      	subs	r2, #0
 8001248:	bf18      	it	ne
 800124a:	2201      	movne	r2, #1
 800124c:	2108      	movs	r1, #8
 800124e:	e7f5      	b.n	800123c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x18>
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_RESET(id));
 8001250:	4b07      	ldr	r3, [pc, #28]	@ (8001270 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x4c>)
 8001252:	689a      	ldr	r2, [r3, #8]
 8001254:	3a00      	subs	r2, #0
 8001256:	bf18      	it	ne
 8001258:	2201      	movne	r2, #1
 800125a:	2110      	movs	r1, #16
 800125c:	e7ee      	b.n	800123c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x18>
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_RESET(id));
 800125e:	4b04      	ldr	r3, [pc, #16]	@ (8001270 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x4c>)
 8001260:	68da      	ldr	r2, [r3, #12]
 8001262:	3a00      	subs	r2, #0
 8001264:	bf18      	it	ne
 8001266:	2201      	movne	r2, #1
 8001268:	2120      	movs	r1, #32
 800126a:	e7e7      	b.n	800123c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x18>
#endif
        break;
    }
}
 800126c:	4770      	bx	lr
 800126e:	bf00      	nop
 8001270:	200004ac 	.word	0x200004ac
 8001274:	40021000 	.word	0x40021000

08001278 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>:
/*
 * Toggles a pin.
 */
void GPIO::toggle(GPIO_ID id)
{
    switch (id)
 8001278:	2803      	cmp	r0, #3
 800127a:	d80d      	bhi.n	8001298 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x20>
 800127c:	e8df f000 	tbb	[pc, r0]
 8001280:	0a080602 	.word	0x0a080602
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_TogglePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
 8001284:	2104      	movs	r1, #4
        HAL_GPIO_TogglePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_TogglePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
 8001286:	4805      	ldr	r0, [pc, #20]	@ (800129c <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x24>)
 8001288:	f003 bcb5 	b.w	8004bf6 <HAL_GPIO_TogglePin>
        HAL_GPIO_TogglePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
 800128c:	2108      	movs	r1, #8
 800128e:	e7fa      	b.n	8001286 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0xe>
        HAL_GPIO_TogglePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 8001290:	2110      	movs	r1, #16
 8001292:	e7f8      	b.n	8001286 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0xe>
        HAL_GPIO_TogglePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
 8001294:	2120      	movs	r1, #32
 8001296:	e7f6      	b.n	8001286 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0xe>
#endif
        break;
    }
}
 8001298:	4770      	bx	lr
 800129a:	bf00      	nop
 800129c:	40021000 	.word	0x40021000

080012a0 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE>:

/*
 * Gets the state of a pin.
 */
bool GPIO::get(GPIO_ID id)
{
 80012a0:	b508      	push	{r3, lr}
    GPIO_PinState bitstatus = GPIO_PIN_RESET;
    switch (id)
 80012a2:	2803      	cmp	r0, #3
 80012a4:	d811      	bhi.n	80012ca <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x2a>
 80012a6:	e8df f000 	tbb	[pc, r0]
 80012aa:	0a02      	.short	0x0a02
 80012ac:	0e0c      	.short	0x0e0c
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        bitstatus = HAL_GPIO_ReadPin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
 80012ae:	2104      	movs	r1, #4
        bitstatus = HAL_GPIO_ReadPin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        bitstatus = HAL_GPIO_ReadPin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
 80012b0:	4807      	ldr	r0, [pc, #28]	@ (80012d0 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x30>)
 80012b2:	f003 fc95 	bl	8004be0 <HAL_GPIO_ReadPin>
#endif
        break;
    }
    return (bitstatus == GPIO_PIN_SET);
}
 80012b6:	1e43      	subs	r3, r0, #1
 80012b8:	4258      	negs	r0, r3
 80012ba:	4158      	adcs	r0, r3
 80012bc:	bd08      	pop	{r3, pc}
        bitstatus = HAL_GPIO_ReadPin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
 80012be:	2108      	movs	r1, #8
 80012c0:	e7f6      	b.n	80012b0 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x10>
        bitstatus = HAL_GPIO_ReadPin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 80012c2:	2110      	movs	r1, #16
 80012c4:	e7f4      	b.n	80012b0 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x10>
        bitstatus = HAL_GPIO_ReadPin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
 80012c6:	2120      	movs	r1, #32
 80012c8:	e7f2      	b.n	80012b0 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x10>
    switch (id)
 80012ca:	2000      	movs	r0, #0
 80012cc:	e7f3      	b.n	80012b6 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x16>
 80012ce:	bf00      	nop
 80012d0:	40021000 	.word	0x40021000

080012d4 <_ZN8touchgfx4GPIO4initEv>:
{
 80012d4:	b570      	push	{r4, r5, r6, lr}
 80012d6:	4d08      	ldr	r5, [pc, #32]	@ (80012f8 <_ZN8touchgfx4GPIO4initEv+0x24>)
    for (int id = 0; id <= 4; id++)
 80012d8:	2400      	movs	r4, #0
                GPIO_InvertedLevels[id] = 1;
 80012da:	2601      	movs	r6, #1
        if (GPIO::get(static_cast<GPIO_ID>(id)))
 80012dc:	b2e0      	uxtb	r0, r4
 80012de:	f7ff ffdf 	bl	80012a0 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE>
 80012e2:	b118      	cbz	r0, 80012ec <_ZN8touchgfx4GPIO4initEv+0x18>
            if (GPIO_InvertedLevels[id] != 1)
 80012e4:	682b      	ldr	r3, [r5, #0]
 80012e6:	2b01      	cmp	r3, #1
                GPIO_InvertedLevels[id] = 1;
 80012e8:	bf18      	it	ne
 80012ea:	602e      	strne	r6, [r5, #0]
    for (int id = 0; id <= 4; id++)
 80012ec:	3401      	adds	r4, #1
 80012ee:	2c05      	cmp	r4, #5
 80012f0:	f105 0504 	add.w	r5, r5, #4
 80012f4:	d1f2      	bne.n	80012dc <_ZN8touchgfx4GPIO4initEv+0x8>
}
 80012f6:	bd70      	pop	{r4, r5, r6, pc}
 80012f8:	200004ac 	.word	0x200004ac

080012fc <_ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE>:
     * @note A screen transition must occur before this takes effect!
     */
    virtual void setDisplayOrientation(DisplayOrientation orientation)
    {
        requestedOrientation = orientation;
        displayOrientationChangeRequested = true;
 80012fc:	2301      	movs	r3, #1
        requestedOrientation = orientation;
 80012fe:	f880 1078 	strb.w	r1, [r0, #120]	@ 0x78
        displayOrientationChangeRequested = true;
 8001302:	f880 3079 	strb.w	r3, [r0, #121]	@ 0x79
    }
 8001306:	4770      	bx	lr

08001308 <_ZN8touchgfx3HAL11submitGPU2DEv>:
     *
     * Only implemented on systems with the GPU2D IP.
     */
    virtual void submitGPU2D()
    {
    }
 8001308:	4770      	bx	lr

0800130a <_ZN8touchgfx3HAL9sampleKeyERh>:
     */
    virtual bool sampleKey(uint8_t& key)
    {
        (void)key; // Unused variable
        return false;
    }
 800130a:	2000      	movs	r0, #0
 800130c:	4770      	bx	lr
	...

08001310 <_ZN8touchgfx3HAL19setAnimationStorageEPv>:
     * @see setFrameBufferStartAddresses
     */
    virtual void setAnimationStorage(void* animationStorage)
    {
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
        USE_ANIMATION_STORAGE = animationStorage != 0;
 8001310:	4b03      	ldr	r3, [pc, #12]	@ (8001320 <_ZN8touchgfx3HAL19setAnimationStorageEPv+0x10>)
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
 8001312:	6441      	str	r1, [r0, #68]	@ 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
 8001314:	3900      	subs	r1, #0
 8001316:	bf18      	it	ne
 8001318:	2101      	movne	r1, #1
 800131a:	7019      	strb	r1, [r3, #0]
    }
 800131c:	4770      	bx	lr
 800131e:	bf00      	nop
 8001320:	200133d1 	.word	0x200133d1

08001324 <_ZN8touchgfx3HAL16waitForLTDCLinesEt>:
     *
     * @param numberOfLines Number of lines to wait.
     */
    virtual void waitForLTDCLines(uint16_t numberOfLines)
    {
    }
 8001324:	4770      	bx	lr

08001326 <_ZNK8touchgfx3HAL18getFlashDataReaderEv>:
     * @return the FlashDataReader.
     */
    virtual FlashDataReader* getFlashDataReader() const
    {
        return 0;
    }
 8001326:	2000      	movs	r0, #0
 8001328:	4770      	bx	lr

0800132a <_ZN8touchgfx3HAL9taskDelayEt>:
     *
     * @see registerTaskDelayFunction
     */
    virtual void taskDelay(uint16_t ms)
    {
        if (taskDelayFunc)
 800132a:	6b83      	ldr	r3, [r0, #56]	@ 0x38
 800132c:	b10b      	cbz	r3, 8001332 <_ZN8touchgfx3HAL9taskDelayEt+0x8>
        {
            taskDelayFunc(ms);
 800132e:	4608      	mov	r0, r1
 8001330:	4718      	bx	r3
        }
    }
 8001332:	4770      	bx	lr

08001334 <_ZN8touchgfx3HAL17getTFTCurrentLineEv>:
     *         implemented".
     */
    virtual uint16_t getTFTCurrentLine()
    {
        return 0xFFFFu;
    }
 8001334:	f64f 70ff 	movw	r0, #65535	@ 0xffff
 8001338:	4770      	bx	lr

0800133a <_ZN8touchgfx3HAL10getDMATypeEv>:
     *
     * @return a DMAType value of the concrete DMA implementation.
     */
    virtual DMAType getDMAType()
    {
        return dma.getDMAType();
 800133a:	6840      	ldr	r0, [r0, #4]
 800133c:	6803      	ldr	r3, [r0, #0]
 800133e:	699b      	ldr	r3, [r3, #24]
 8001340:	4718      	bx	r3

08001342 <_ZN8touchgfx3HAL25partialLTDCDeadlineMissedEv>:
     * This empty function can be overridden to e.g. output this error condition
     * on a pin.
     */
    virtual void partialLTDCDeadlineMissed()
    {
    }
 8001342:	4770      	bx	lr

08001344 <_ZN8touchgfx3HAL15InvalidateCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Hardware to Software indicating the cache should be invalidated.
     */
    virtual void InvalidateCache()
    {
    }
 8001344:	4770      	bx	lr

08001346 <_ZN8touchgfx3HAL10FlushCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Software to Hardware indicating the cache should be invalidated.
     */
    virtual void FlushCache()
    {
    }
 8001346:	4770      	bx	lr

08001348 <_ZN8touchgfx3HAL22InvalidateTextureCacheEv>:
     * Called on every tick before drawing into the framebuffer to enable
     * invalidation of any caches that may be incoherent with main memory.
     */
    virtual void InvalidateTextureCache()
    {
    }
 8001348:	4770      	bx	lr

0800134a <_ZN11TouchGFXHALD1Ev>:
 *
 * @brief HAL implementation for TouchGFX.
 *
 * @sa HAL
 */
class TouchGFXHAL : public TouchGFXGeneratedHAL
 800134a:	4770      	bx	lr

0800134c <_ZN11TouchGFXHAL10initializeEv>:
LOCATION_PRAGMA_NOLOAD("TouchGFX_Framebuffer")
uint32_t animationStorage[(240 * 320 * 2 + 3) / 4] LOCATION_ATTRIBUTE_NOLOAD("TouchGFX_Framebuffer");
}

void TouchGFXHAL::initialize()
{
 800134c:	b510      	push	{r4, lr}
 800134e:	4604      	mov	r4, r0
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::initialize() must be called to initialize the framework.

    TouchGFXGeneratedHAL::initialize();
 8001350:	f000 fd48 	bl	8001de4 <_ZN20TouchGFXGeneratedHAL10initializeEv>

    // Add animation storage
    setAnimationStorage((void*)animationStorage);
 8001354:	6823      	ldr	r3, [r4, #0]
 8001356:	4903      	ldr	r1, [pc, #12]	@ (8001364 <_ZN11TouchGFXHAL10initializeEv+0x18>)
 8001358:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 800135c:	4620      	mov	r0, r4
}
 800135e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    setAnimationStorage((void*)animationStorage);
 8001362:	4718      	bx	r3
 8001364:	d0000000 	.word	0xd0000000

08001368 <_ZN11TouchGFXHAL9taskEntryEv>:

void TouchGFXHAL::taskEntry()
{
 8001368:	b508      	push	{r3, lr}
    enableLCDControllerInterrupt();
 800136a:	6803      	ldr	r3, [r0, #0]
{
 800136c:	4604      	mov	r4, r0
    enableLCDControllerInterrupt();
 800136e:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 8001372:	4798      	blx	r3
    enableInterrupts();
 8001374:	6823      	ldr	r3, [r4, #0]
 8001376:	4620      	mov	r0, r4
 8001378:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 800137a:	4798      	blx	r3

    OSWrappers::waitForVSync();
 800137c:	f000 f8ec 	bl	8001558 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
    backPorchExited();
 8001380:	6823      	ldr	r3, [r4, #0]
 8001382:	4620      	mov	r0, r4
 8001384:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8001386:	4798      	blx	r3

    LCD_IO_WriteReg(0x29);
 8001388:	2029      	movs	r0, #41	@ 0x29
 800138a:	f001 fb6f 	bl	8002a6c <LCD_IO_WriteReg>

    for (;;)
    {
        OSWrappers::waitForVSync();
 800138e:	f000 f8e3 	bl	8001558 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
        backPorchExited();
 8001392:	6823      	ldr	r3, [r4, #0]
 8001394:	4620      	mov	r0, r4
 8001396:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8001398:	4798      	blx	r3
    for (;;)
 800139a:	e7f8      	b.n	800138e <_ZN11TouchGFXHAL9taskEntryEv+0x26>

0800139c <_ZN8touchgfx3HAL15backPorchExitedEv>:
    virtual void backPorchExited()
 800139c:	b510      	push	{r4, lr}
 800139e:	4604      	mov	r4, r0
        swapFrameBuffers();
 80013a0:	f00a fcec 	bl	800bd7c <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
 80013a4:	6823      	ldr	r3, [r4, #0]
 80013a6:	4620      	mov	r0, r4
 80013a8:	f8d3 30bc 	ldr.w	r3, [r3, #188]	@ 0xbc
    }
 80013ac:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        tick();
 80013b0:	4718      	bx	r3

080013b2 <_ZNK11TouchGFXHAL17getTFTFrameBufferEv>:
    // Calling parent implementation of getTFTFrameBuffer().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    return TouchGFXGeneratedHAL::getTFTFrameBuffer();
 80013b2:	f000 bcfb 	b.w	8001dac <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>

080013b6 <_ZN11TouchGFXHAL17setTFTFrameBufferEPt>:
    // Calling parent implementation of setTFTFrameBuffer(uint16_t* address).
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::setTFTFrameBuffer(address);
 80013b6:	f000 bcff 	b.w	8001db8 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>

080013ba <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE>:
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::flushFrameBuffer(const touchgfx::Rect& rect) must
    // be called to notify the touchgfx framework that flush has been performed.

    TouchGFXGeneratedHAL::flushFrameBuffer(rect);
 80013ba:	f000 bd31 	b.w	8001e20 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>

080013be <_ZN11TouchGFXHAL19configureInterruptsEv>:
    // Calling parent implementation of configureInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::configureInterrupts();
 80013be:	f000 bcd1 	b.w	8001d64 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>

080013c2 <_ZN11TouchGFXHAL16enableInterruptsEv>:
    // Calling parent implementation of enableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableInterrupts();
 80013c2:	f000 bd41 	b.w	8001e48 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>

080013c6 <_ZN11TouchGFXHAL17disableInterruptsEv>:
    // Calling parent implementation of disableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::disableInterrupts();
 80013c6:	f000 bd49 	b.w	8001e5c <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>

080013ca <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv>:
    // Calling parent implementation of enableLCDControllerInterrupt().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
 80013ca:	f000 bcd5 	b.w	8001d78 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>

080013ce <_ZN11TouchGFXHAL16flushFrameBufferEv>:
     * Rect version.
     * @see HAL::flushFrameBuffer
     */
    virtual void flushFrameBuffer()
    {
        HAL::flushFrameBuffer();
 80013ce:	f009 bf03 	b.w	800b1d8 <_ZN8touchgfx3HAL16flushFrameBufferEv>

080013d2 <_ZN11TouchGFXHALD0Ev>:
 80013d2:	b510      	push	{r4, lr}
 80013d4:	2184      	movs	r1, #132	@ 0x84
 80013d6:	4604      	mov	r4, r0
 80013d8:	f020 fca5 	bl	8021d26 <_ZdlPvj>
 80013dc:	4620      	mov	r0, r4
 80013de:	bd10      	pop	{r4, pc}

080013e0 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv>:
    virtual void performDisplayOrientationChange()
 80013e0:	b510      	push	{r4, lr}
        if (requestedOrientation != nativeDisplayOrientation)
 80013e2:	f890 1034 	ldrb.w	r1, [r0, #52]	@ 0x34
 80013e6:	f890 4078 	ldrb.w	r4, [r0, #120]	@ 0x78
            if (DISPLAY_ROTATION == rotate0)
 80013ea:	4b0c      	ldr	r3, [pc, #48]	@ (800141c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x3c>)
        if (requestedOrientation != nativeDisplayOrientation)
 80013ec:	428c      	cmp	r4, r1
            if (DISPLAY_ROTATION == rotate0)
 80013ee:	781a      	ldrb	r2, [r3, #0]
        if (requestedOrientation != nativeDisplayOrientation)
 80013f0:	d009      	beq.n	8001406 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x26>
            if (DISPLAY_ROTATION == rotate0)
 80013f2:	b93a      	cbnz	r2, 8001404 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 80013f4:	4a0a      	ldr	r2, [pc, #40]	@ (8001420 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
                const uint16_t tmp = DISPLAY_HEIGHT;
 80013f6:	490b      	ldr	r1, [pc, #44]	@ (8001424 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 80013f8:	8814      	ldrh	r4, [r2, #0]
                const uint16_t tmp = DISPLAY_HEIGHT;
 80013fa:	8808      	ldrh	r0, [r1, #0]
                DISPLAY_WIDTH = tmp;
 80013fc:	8010      	strh	r0, [r2, #0]
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 80013fe:	800c      	strh	r4, [r1, #0]
                DISPLAY_ROTATION = rotate90;
 8001400:	2201      	movs	r2, #1
            DISPLAY_ROTATION = rotate0;
 8001402:	701a      	strb	r2, [r3, #0]
    }
 8001404:	bd10      	pop	{r4, pc}
        else if (DISPLAY_ROTATION != rotate0)
 8001406:	2a00      	cmp	r2, #0
 8001408:	d0fc      	beq.n	8001404 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 800140a:	4a05      	ldr	r2, [pc, #20]	@ (8001420 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
            const uint16_t tmp = DISPLAY_HEIGHT;
 800140c:	4905      	ldr	r1, [pc, #20]	@ (8001424 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 800140e:	8814      	ldrh	r4, [r2, #0]
            const uint16_t tmp = DISPLAY_HEIGHT;
 8001410:	8808      	ldrh	r0, [r1, #0]
            DISPLAY_WIDTH = tmp;
 8001412:	8010      	strh	r0, [r2, #0]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8001414:	800c      	strh	r4, [r1, #0]
            DISPLAY_ROTATION = rotate0;
 8001416:	2200      	movs	r2, #0
 8001418:	e7f3      	b.n	8001402 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x22>
 800141a:	bf00      	nop
 800141c:	200133ca 	.word	0x200133ca
 8001420:	200133c6 	.word	0x200133c6
 8001424:	200133c8 	.word	0x200133c8

08001428 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_>:
    virtual void setFrameBufferStartAddresses(void* frameBuffer, void* doubleBuffer, void* animationStorage)
 8001428:	b570      	push	{r4, r5, r6, lr}
 800142a:	460d      	mov	r5, r1
 800142c:	4619      	mov	r1, r3
        assert(frameBuffer != 0 && "A framebuffer address must be set");
 800142e:	b935      	cbnz	r5, 800143e <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x16>
 8001430:	4b09      	ldr	r3, [pc, #36]	@ (8001458 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x30>)
 8001432:	4a0a      	ldr	r2, [pc, #40]	@ (800145c <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x34>)
 8001434:	480a      	ldr	r0, [pc, #40]	@ (8001460 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x38>)
 8001436:	f240 21ff 	movw	r1, #767	@ 0x2ff
 800143a:	f021 fcb3 	bl	8022da4 <__assert_func>
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
 800143e:	e9c0 520f 	strd	r5, r2, [r0, #60]	@ 0x3c
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
 8001442:	4b08      	ldr	r3, [pc, #32]	@ (8001464 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x3c>)
 8001444:	3a00      	subs	r2, #0
 8001446:	bf18      	it	ne
 8001448:	2201      	movne	r2, #1
 800144a:	701a      	strb	r2, [r3, #0]
        setAnimationStorage(animationStorage);
 800144c:	6803      	ldr	r3, [r0, #0]
    }
 800144e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setAnimationStorage(animationStorage);
 8001452:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8001456:	4718      	bx	r3
 8001458:	08023e50 	.word	0x08023e50
 800145c:	08023e88 	.word	0x08023e88
 8001460:	08023ed6 	.word	0x08023ed6
 8001464:	200133d0 	.word	0x200133d0

08001468 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt>:
    virtual void setFrameBufferSize(uint16_t width, uint16_t height)
 8001468:	b508      	push	{r3, lr}
        assert(width >= DISPLAY_WIDTH && height >= DISPLAY_HEIGHT && "Framebuffer cannot be smaller than display");
 800146a:	4b09      	ldr	r3, [pc, #36]	@ (8001490 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x28>)
 800146c:	881b      	ldrh	r3, [r3, #0]
 800146e:	428b      	cmp	r3, r1
 8001470:	d803      	bhi.n	800147a <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x12>
 8001472:	4b08      	ldr	r3, [pc, #32]	@ (8001494 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x2c>)
 8001474:	881b      	ldrh	r3, [r3, #0]
 8001476:	4293      	cmp	r3, r2
 8001478:	d905      	bls.n	8001486 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x1e>
 800147a:	4b07      	ldr	r3, [pc, #28]	@ (8001498 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x30>)
 800147c:	4a07      	ldr	r2, [pc, #28]	@ (800149c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x34>)
 800147e:	4808      	ldr	r0, [pc, #32]	@ (80014a0 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x38>)
 8001480:	21a3      	movs	r1, #163	@ 0xa3
 8001482:	f021 fc8f 	bl	8022da4 <__assert_func>
        FRAME_BUFFER_WIDTH = width;
 8001486:	4b07      	ldr	r3, [pc, #28]	@ (80014a4 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x3c>)
 8001488:	8019      	strh	r1, [r3, #0]
        FRAME_BUFFER_HEIGHT = height;
 800148a:	4b07      	ldr	r3, [pc, #28]	@ (80014a8 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x40>)
 800148c:	801a      	strh	r2, [r3, #0]
    }
 800148e:	bd08      	pop	{r3, pc}
 8001490:	200133c6 	.word	0x200133c6
 8001494:	200133c8 	.word	0x200133c8
 8001498:	08023f1b 	.word	0x08023f1b
 800149c:	08023f7e 	.word	0x08023f7e
 80014a0:	08023ed6 	.word	0x08023ed6
 80014a4:	200133cc 	.word	0x200133cc
 80014a8:	200133ce 	.word	0x200133ce

080014ac <_ZN8touchgfx3HAL11getBlitCapsEv>:
    virtual BlitOperations getBlitCaps()
 80014ac:	4603      	mov	r3, r0
        if (useDMAAcceleration)
 80014ae:	f890 007a 	ldrb.w	r0, [r0, #122]	@ 0x7a
 80014b2:	b118      	cbz	r0, 80014bc <_ZN8touchgfx3HAL11getBlitCapsEv+0x10>
 80014b4:	6858      	ldr	r0, [r3, #4]
            return dma.getBlitCaps();
 80014b6:	6803      	ldr	r3, [r0, #0]
 80014b8:	681b      	ldr	r3, [r3, #0]
 80014ba:	4718      	bx	r3
    }
 80014bc:	4770      	bx	lr
	...

080014c0 <_ZN8touchgfx10OSWrappers10initializeEv>:
 * Initialize frame buffer semaphore and queue/mutex for VSYNC signal.
 */
void OSWrappers::initialize()
{
    // Create a queue of length 1
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 80014c0:	2101      	movs	r1, #1
{
 80014c2:	b508      	push	{r3, lr}
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 80014c4:	2200      	movs	r2, #0
 80014c6:	4608      	mov	r0, r1
 80014c8:	f006 fe12 	bl	80080f0 <osSemaphoreNew>
 80014cc:	4b0a      	ldr	r3, [pc, #40]	@ (80014f8 <_ZN8touchgfx10OSWrappers10initializeEv+0x38>)
 80014ce:	6018      	str	r0, [r3, #0]
    assert((frame_buffer_sem != NULL) && "Creation of framebuffer semaphore failed");
 80014d0:	b928      	cbnz	r0, 80014de <_ZN8touchgfx10OSWrappers10initializeEv+0x1e>
 80014d2:	4b0a      	ldr	r3, [pc, #40]	@ (80014fc <_ZN8touchgfx10OSWrappers10initializeEv+0x3c>)
 80014d4:	4a0a      	ldr	r2, [pc, #40]	@ (8001500 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 80014d6:	2128      	movs	r1, #40	@ 0x28

    // Create a queue of length 1
    vsync_queue = osMessageQueueNew(1, 4, NULL);
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 80014d8:	480a      	ldr	r0, [pc, #40]	@ (8001504 <_ZN8touchgfx10OSWrappers10initializeEv+0x44>)
 80014da:	f021 fc63 	bl	8022da4 <__assert_func>
    vsync_queue = osMessageQueueNew(1, 4, NULL);
 80014de:	2200      	movs	r2, #0
 80014e0:	2104      	movs	r1, #4
 80014e2:	2001      	movs	r0, #1
 80014e4:	f006 feac 	bl	8008240 <osMessageQueueNew>
 80014e8:	4b07      	ldr	r3, [pc, #28]	@ (8001508 <_ZN8touchgfx10OSWrappers10initializeEv+0x48>)
 80014ea:	6018      	str	r0, [r3, #0]
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 80014ec:	b918      	cbnz	r0, 80014f6 <_ZN8touchgfx10OSWrappers10initializeEv+0x36>
 80014ee:	4b07      	ldr	r3, [pc, #28]	@ (800150c <_ZN8touchgfx10OSWrappers10initializeEv+0x4c>)
 80014f0:	4a03      	ldr	r2, [pc, #12]	@ (8001500 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 80014f2:	212c      	movs	r1, #44	@ 0x2c
 80014f4:	e7f0      	b.n	80014d8 <_ZN8touchgfx10OSWrappers10initializeEv+0x18>
}
 80014f6:	bd08      	pop	{r3, pc}
 80014f8:	200004c0 	.word	0x200004c0
 80014fc:	08023fc1 	.word	0x08023fc1
 8001500:	0802400a 	.word	0x0802400a
 8001504:	08024039 	.word	0x08024039
 8001508:	200004bc 	.word	0x200004bc
 800150c:	0802407e 	.word	0x0802407e

08001510 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>:
/*
 * Take the frame buffer semaphore. Blocks until semaphore is available.
 */
void OSWrappers::takeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, osWaitForever);
 8001510:	4b02      	ldr	r3, [pc, #8]	@ (800151c <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0xc>)
 8001512:	f04f 31ff 	mov.w	r1, #4294967295
 8001516:	6818      	ldr	r0, [r3, #0]
 8001518:	f006 be34 	b.w	8008184 <osSemaphoreAcquire>
 800151c:	200004c0 	.word	0x200004c0

08001520 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>:
/*
 * Release the frame buffer semaphore.
 */
void OSWrappers::giveFrameBufferSemaphore()
{
    osSemaphoreRelease(frame_buffer_sem);
 8001520:	4b01      	ldr	r3, [pc, #4]	@ (8001528 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x8>)
 8001522:	6818      	ldr	r0, [r3, #0]
 8001524:	f006 be5a 	b.w	80081dc <osSemaphoreRelease>
 8001528:	200004c0 	.word	0x200004c0

0800152c <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>:
 * Note must return immediately! This function does not care who has the taken the semaphore,
 * it only serves to make sure that the semaphore is taken by someone.
 */
void OSWrappers::tryTakeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, 0);
 800152c:	4b02      	ldr	r3, [pc, #8]	@ (8001538 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0xc>)
 800152e:	2100      	movs	r1, #0
 8001530:	6818      	ldr	r0, [r3, #0]
 8001532:	f006 be27 	b.w	8008184 <osSemaphoreAcquire>
 8001536:	bf00      	nop
 8001538:	200004c0 	.word	0x200004c0

0800153c <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>:
 * from ISR.
 *
 * Release the frame buffer semaphore in a way that is safe in interrupt context.
 * Called from ISR.
 */
void OSWrappers::giveFrameBufferSemaphoreFromISR()
 800153c:	f7ff bff0 	b.w	8001520 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

08001540 <_ZN8touchgfx10OSWrappers11signalVSyncEv>:
 * Note This function is called from an ISR, and should (depending on OS) trigger a
 * scheduling.
 */
void OSWrappers::signalVSync()
{
    osMessageQueuePut(vsync_queue, &dummy, 0, 0);
 8001540:	4803      	ldr	r0, [pc, #12]	@ (8001550 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x10>)
 8001542:	4904      	ldr	r1, [pc, #16]	@ (8001554 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x14>)
 8001544:	6800      	ldr	r0, [r0, #0]
 8001546:	2300      	movs	r3, #0
 8001548:	461a      	mov	r2, r3
 800154a:	f006 beb4 	b.w	80082b6 <osMessageQueuePut>
 800154e:	bf00      	nop
 8001550:	200004bc 	.word	0x200004bc
 8001554:	20000004 	.word	0x20000004

08001558 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>:
 *
 * Note This function must first clear the mutex/queue and then wait for the next one to
 * occur.
 */
void OSWrappers::waitForVSync()
{
 8001558:	b513      	push	{r0, r1, r4, lr}
    uint32_t dummyGet;
    // First make sure the queue is empty, by trying to remove an element with 0 timeout.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, 0);
 800155a:	4c08      	ldr	r4, [pc, #32]	@ (800157c <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x24>)
 800155c:	2300      	movs	r3, #0
 800155e:	461a      	mov	r2, r3
 8001560:	a901      	add	r1, sp, #4
 8001562:	6820      	ldr	r0, [r4, #0]
 8001564:	f006 fed8 	bl	8008318 <osMessageQueueGet>

    // Then, wait for next VSYNC to occur.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, osWaitForever);
 8001568:	6820      	ldr	r0, [r4, #0]
 800156a:	f04f 33ff 	mov.w	r3, #4294967295
 800156e:	2200      	movs	r2, #0
 8001570:	a901      	add	r1, sp, #4
 8001572:	f006 fed1 	bl	8008318 <osMessageQueueGet>
}
 8001576:	b002      	add	sp, #8
 8001578:	bd10      	pop	{r4, pc}
 800157a:	bf00      	nop
 800157c:	200004bc 	.word	0x200004bc

08001580 <_ZN8touchgfx13DMA_Interface5flushEv>:
    virtual void addToQueue(const BlitOp& op);

    /** This function blocks until all DMA transfers in the queue have been completed. */
    virtual void flush()
    {
        waitForFrameBufferSemaphore();
 8001580:	6803      	ldr	r3, [r0, #0]
 8001582:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8001584:	4718      	bx	r3

08001586 <_ZN8STM32DMA10getDMATypeEv>:
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual touchgfx::DMAType getDMAType(void)
    {
        return touchgfx::DMA_TYPE_CHROMART;
    }
 8001586:	2001      	movs	r0, #1
 8001588:	4770      	bx	lr

0800158a <_ZN8STM32DMA18signalDMAInterruptEv>:
     *
     *        Raises a DMA interrupt signal.
     */
    virtual void signalDMAInterrupt()
    {
        executeCompleted();
 800158a:	6803      	ldr	r3, [r0, #0]
 800158c:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800158e:	4718      	bx	r3

08001590 <DMA2D_XferErrorCallback>:
    }

    static void DMA2D_XferErrorCallback(DMA2D_HandleTypeDef* handle)
    {
        (void)handle; // Unused argument
        while (1)
 8001590:	e7fe      	b.n	8001590 <DMA2D_XferErrorCallback>

08001592 <_ZN8STM32DMA11getBlitCapsEv>:
                                       | BLIT_OP_COPY_WITH_ALPHA
                                       | BLIT_OP_COPY_ARGB8888
                                       | BLIT_OP_COPY_ARGB8888_WITH_ALPHA
                                       | BLIT_OP_COPY_A4
                                       | BLIT_OP_COPY_A8);
}
 8001592:	f240 30ef 	movw	r0, #1007	@ 0x3ef
 8001596:	4770      	bx	lr

08001598 <_ZN8STM32DMAD1Ev>:
STM32DMA::~STM32DMA()
 8001598:	4b05      	ldr	r3, [pc, #20]	@ (80015b0 <_ZN8STM32DMAD1Ev+0x18>)
 800159a:	6003      	str	r3, [r0, #0]
 */
__STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 800159c:	4b05      	ldr	r3, [pc, #20]	@ (80015b4 <_ZN8STM32DMAD1Ev+0x1c>)
 800159e:	f04f 6280 	mov.w	r2, #67108864	@ 0x4000000
 80015a2:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
 80015a6:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 80015aa:	f3bf 8f6f 	isb	sy
}
 80015ae:	4770      	bx	lr
 80015b0:	080249b0 	.word	0x080249b0
 80015b4:	e000e100 	.word	0xe000e100

080015b8 <_ZN8STM32DMAD0Ev>:
STM32DMA::~STM32DMA()
 80015b8:	b510      	push	{r4, lr}
 80015ba:	4604      	mov	r4, r0
}
 80015bc:	f44f 615a 	mov.w	r1, #3488	@ 0xda0
 80015c0:	f7ff ffea 	bl	8001598 <_ZN8STM32DMAD1Ev>
 80015c4:	4620      	mov	r0, r4
 80015c6:	f020 fbae 	bl	8021d26 <_ZdlPvj>
 80015ca:	4620      	mov	r0, r4
 80015cc:	bd10      	pop	{r4, pc}
	...

080015d0 <_ZN8STM32DMA10initializeEv>:
{
 80015d0:	b082      	sub	sp, #8
    __HAL_RCC_DMA2D_CLK_ENABLE();
 80015d2:	2300      	movs	r3, #0
 80015d4:	9301      	str	r3, [sp, #4]
 80015d6:	4b0e      	ldr	r3, [pc, #56]	@ (8001610 <_ZN8STM32DMA10initializeEv+0x40>)
 80015d8:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80015da:	f442 0200 	orr.w	r2, r2, #8388608	@ 0x800000
 80015de:	631a      	str	r2, [r3, #48]	@ 0x30
 80015e0:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80015e2:	f402 0200 	and.w	r2, r2, #8388608	@ 0x800000
 80015e6:	9201      	str	r2, [sp, #4]
 80015e8:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_DMA2D_FORCE_RESET();
 80015ea:	691a      	ldr	r2, [r3, #16]
 80015ec:	f442 0200 	orr.w	r2, r2, #8388608	@ 0x800000
 80015f0:	611a      	str	r2, [r3, #16]
    __HAL_RCC_DMA2D_RELEASE_RESET();
 80015f2:	691a      	ldr	r2, [r3, #16]
 80015f4:	f422 0200 	bic.w	r2, r2, #8388608	@ 0x800000
 80015f8:	611a      	str	r2, [r3, #16]
    hdma2d.XferCpltCallback = DMA2D_XferCpltCallback;
 80015fa:	4b06      	ldr	r3, [pc, #24]	@ (8001614 <_ZN8STM32DMA10initializeEv+0x44>)
 80015fc:	4a06      	ldr	r2, [pc, #24]	@ (8001618 <_ZN8STM32DMA10initializeEv+0x48>)
 80015fe:	611a      	str	r2, [r3, #16]
    hdma2d.XferErrorCallback = DMA2D_XferErrorCallback;
 8001600:	4a06      	ldr	r2, [pc, #24]	@ (800161c <_ZN8STM32DMA10initializeEv+0x4c>)
 8001602:	615a      	str	r2, [r3, #20]
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001604:	4b06      	ldr	r3, [pc, #24]	@ (8001620 <_ZN8STM32DMA10initializeEv+0x50>)
 8001606:	f04f 6280 	mov.w	r2, #67108864	@ 0x4000000
 800160a:	609a      	str	r2, [r3, #8]
}
 800160c:	b002      	add	sp, #8
 800160e:	4770      	bx	lr
 8001610:	40023800 	.word	0x40023800
 8001614:	20002520 	.word	0x20002520
 8001618:	08001871 	.word	0x08001871
 800161c:	08001591 	.word	0x08001591
 8001620:	e000e100 	.word	0xe000e100

08001624 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>:
inline uint32_t STM32DMA::getChromARTOutputFormat(Bitmap::BitmapFormat format)
 8001624:	b508      	push	{r3, lr}
    switch (format)
 8001626:	280a      	cmp	r0, #10
 8001628:	d809      	bhi.n	800163e <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x1a>
 800162a:	e8df f000 	tbb	[pc, r0]
 800162e:	1006      	.short	0x1006
 8001630:	0808080e 	.word	0x0808080e
 8001634:	10101008 	.word	0x10101008
 8001638:	10          	.byte	0x10
 8001639:	00          	.byte	0x00
        dma2dColorMode = DMA2D_OUTPUT_RGB565;
 800163a:	2002      	movs	r0, #2
}
 800163c:	bd08      	pop	{r3, pc}
        assert(0 && "Unsupported Format!");
 800163e:	4b05      	ldr	r3, [pc, #20]	@ (8001654 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x30>)
 8001640:	4a05      	ldr	r2, [pc, #20]	@ (8001658 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x34>)
 8001642:	4806      	ldr	r0, [pc, #24]	@ (800165c <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x38>)
 8001644:	2190      	movs	r1, #144	@ 0x90
 8001646:	f021 fbad 	bl	8022da4 <__assert_func>
        dma2dColorMode = DMA2D_OUTPUT_ARGB8888;
 800164a:	2000      	movs	r0, #0
 800164c:	e7f6      	b.n	800163c <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
    switch (format)
 800164e:	2001      	movs	r0, #1
    return dma2dColorMode;
 8001650:	e7f4      	b.n	800163c <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
 8001652:	bf00      	nop
 8001654:	080240c0 	.word	0x080240c0
 8001658:	080240db 	.word	0x080240db
 800165c:	08024126 	.word	0x08024126

08001660 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE>:
 * void STM32DMA::setupDataFill(const BlitOp& blitOp) handles blit operation of
 * BLIT_OP_FILL
 * BLIT_OP_FILL_WITH_ALPHA
 */
void STM32DMA::setupDataFill(const BlitOp& blitOp)
{
 8001660:	b538      	push	{r3, r4, r5, lr}
 8001662:	460c      	mov	r4, r1
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8001664:	7f88      	ldrb	r0, [r1, #30]
 8001666:	f7ff ffdd 	bl	8001624 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 800166a:	8aa5      	ldrh	r5, [r4, #20]
 800166c:	8ae2      	ldrh	r2, [r4, #22]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 800166e:	4b16      	ldr	r3, [pc, #88]	@ (80016c8 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x68>)

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8001670:	6921      	ldr	r1, [r4, #16]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8001672:	6358      	str	r0, [r3, #52]	@ 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8001674:	ea42 4205 	orr.w	r2, r2, r5, lsl #16
 8001678:	645a      	str	r2, [r3, #68]	@ 0x44

    /* DMA2D OOR register configuration */
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 800167a:	8b62      	ldrh	r2, [r4, #26]
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 800167c:	63d9      	str	r1, [r3, #60]	@ 0x3c
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 800167e:	1b52      	subs	r2, r2, r5
 8001680:	641a      	str	r2, [r3, #64]	@ 0x40

    if (blitOp.operation == BLIT_OP_FILL_WITH_ALPHA)
 8001682:	6825      	ldr	r5, [r4, #0]
 8001684:	2d08      	cmp	r5, #8
 8001686:	d10e      	bne.n	80016a6 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x46>
    {
        /* DMA2D BGOR register configuration */
        WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8001688:	619a      	str	r2, [r3, #24]

        /* DMA2D FGOR register configuration */
        WRITE_REG(DMA2D->FGOR, blitOp.dstLoopStride - blitOp.nSteps);
 800168a:	611a      	str	r2, [r3, #16]

        /* Write DMA2D BGPFCCR register */
        WRITE_REG(DMA2D->BGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 800168c:	6258      	str	r0, [r3, #36]	@ 0x24

        /* Write DMA2D FGPFCCR register */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((blitOp.alpha << 24) & DMA2D_FGPFCCR_ALPHA));
 800168e:	7f20      	ldrb	r0, [r4, #28]
 8001690:	4a0e      	ldr	r2, [pc, #56]	@ (80016cc <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x6c>)
 8001692:	ea42 6200 	orr.w	r2, r2, r0, lsl #24
 8001696:	61da      	str	r2, [r3, #28]
     *
     * @return The result of the operation.
     */
    operator uint32_t() const
    {
        return color;
 8001698:	68e2      	ldr	r2, [r4, #12]

        /* DMA2D FGCOLR register configuration */
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
 800169a:	621a      	str	r2, [r3, #32]

        /* Configure DMA2D source address */
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_M2M_BLEND | DMA2D_IT_CE | DMA2D_IT_TE));
 800169c:	4a0c      	ldr	r2, [pc, #48]	@ (80016d0 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x70>)
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 800169e:	6159      	str	r1, [r3, #20]
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 80016a0:	60d9      	str	r1, [r3, #12]

        /* Set color */
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M | DMA2D_IT_CE | DMA2D_IT_TE));
 80016a2:	601a      	str	r2, [r3, #0]
    }
}
 80016a4:	bd38      	pop	{r3, r4, r5, pc}
        WRITE_REG(DMA2D->FGOR, 0);
 80016a6:	2200      	movs	r2, #0
        WRITE_REG(DMA2D->FGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_FGPFCCR_AM_Pos));
 80016a8:	61d8      	str	r0, [r3, #28]
        WRITE_REG(DMA2D->FGOR, 0);
 80016aa:	611a      	str	r2, [r3, #16]
 80016ac:	68e1      	ldr	r1, [r4, #12]
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));
 80016ae:	0a0a      	lsrs	r2, r1, #8
 80016b0:	0948      	lsrs	r0, r1, #5
 80016b2:	f402 4278 	and.w	r2, r2, #63488	@ 0xf800
 80016b6:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 80016ba:	4302      	orrs	r2, r0
 80016bc:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 80016c0:	430a      	orrs	r2, r1
 80016c2:	639a      	str	r2, [r3, #56]	@ 0x38
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M | DMA2D_IT_CE | DMA2D_IT_TE));
 80016c4:	4a03      	ldr	r2, [pc, #12]	@ (80016d4 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x74>)
 80016c6:	e7ec      	b.n	80016a2 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x42>
 80016c8:	4002b000 	.word	0x4002b000
 80016cc:	00010009 	.word	0x00010009
 80016d0:	00022301 	.word	0x00022301
 80016d4:	00032301 	.word	0x00032301

080016d8 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>:
inline uint32_t STM32DMA::getChromARTInputFormat(Bitmap::BitmapFormat format)
 80016d8:	b508      	push	{r3, lr}
    switch (format)
 80016da:	280b      	cmp	r0, #11
 80016dc:	d80b      	bhi.n	80016f6 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x1e>
 80016de:	e8df f000 	tbb	[pc, r0]
 80016e2:	1206      	.short	0x1206
 80016e4:	0a0a0a10 	.word	0x0a0a0a10
 80016e8:	0808080a 	.word	0x0808080a
 80016ec:	0808      	.short	0x0808
        dma2dColorMode = DMA2D_INPUT_RGB565;
 80016ee:	2002      	movs	r0, #2
}
 80016f0:	bd08      	pop	{r3, pc}
        dma2dColorMode = DMA2D_INPUT_L8;
 80016f2:	2005      	movs	r0, #5
        break;
 80016f4:	e7fc      	b.n	80016f0 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
        assert(0 && "Unsupported Format!");
 80016f6:	4b05      	ldr	r3, [pc, #20]	@ (800170c <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x34>)
 80016f8:	4a05      	ldr	r2, [pc, #20]	@ (8001710 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x38>)
 80016fa:	4806      	ldr	r0, [pc, #24]	@ (8001714 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x3c>)
 80016fc:	216f      	movs	r1, #111	@ 0x6f
 80016fe:	f021 fb51 	bl	8022da4 <__assert_func>
        dma2dColorMode = DMA2D_INPUT_ARGB8888;
 8001702:	2000      	movs	r0, #0
 8001704:	e7f4      	b.n	80016f0 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
    switch (format)
 8001706:	2001      	movs	r0, #1
    return dma2dColorMode;
 8001708:	e7f2      	b.n	80016f0 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
 800170a:	bf00      	nop
 800170c:	080240c0 	.word	0x080240c0
 8001710:	08024169 	.word	0x08024169
 8001714:	08024126 	.word	0x08024126

08001718 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE>:
{
 8001718:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 800171c:	f891 801d 	ldrb.w	r8, [r1, #29]
{
 8001720:	460c      	mov	r4, r1
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8001722:	4640      	mov	r0, r8
 8001724:	f7ff ffd8 	bl	80016d8 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8001728:	7fa7      	ldrb	r7, [r4, #30]
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 800172a:	4605      	mov	r5, r0
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 800172c:	4638      	mov	r0, r7
 800172e:	f7ff ffd3 	bl	80016d8 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>
 8001732:	4606      	mov	r6, r0
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8001734:	4638      	mov	r0, r7
 8001736:	f7ff ff75 	bl	8001624 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 800173a:	8aa1      	ldrh	r1, [r4, #20]
 800173c:	8b62      	ldrh	r2, [r4, #26]
 800173e:	4b44      	ldr	r3, [pc, #272]	@ (8001850 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 8001740:	1a52      	subs	r2, r2, r1
 8001742:	641a      	str	r2, [r3, #64]	@ 0x40
    WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8001744:	619a      	str	r2, [r3, #24]
    WRITE_REG(DMA2D->FGOR, blitOp.srcLoopStride - blitOp.nSteps);
 8001746:	8b22      	ldrh	r2, [r4, #24]
 8001748:	1a52      	subs	r2, r2, r1
 800174a:	611a      	str	r2, [r3, #16]
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 800174c:	8ae2      	ldrh	r2, [r4, #22]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 800174e:	6358      	str	r0, [r3, #52]	@ 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8001750:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8001754:	645a      	str	r2, [r3, #68]	@ 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8001756:	6921      	ldr	r1, [r4, #16]
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
 8001758:	6862      	ldr	r2, [r4, #4]
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 800175a:	63d9      	str	r1, [r3, #60]	@ 0x3c
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
 800175c:	60da      	str	r2, [r3, #12]
    switch (blitOp.operation)
 800175e:	6820      	ldr	r0, [r4, #0]
 8001760:	2880      	cmp	r0, #128	@ 0x80
 8001762:	d028      	beq.n	80017b6 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x9e>
 8001764:	7f22      	ldrb	r2, [r4, #28]
 8001766:	d80f      	bhi.n	8001788 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x70>
 8001768:	2820      	cmp	r0, #32
 800176a:	d067      	beq.n	800183c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x124>
 800176c:	2840      	cmp	r0, #64	@ 0x40
 800176e:	d065      	beq.n	800183c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x124>
 8001770:	2804      	cmp	r0, #4
 8001772:	d01a      	beq.n	80017aa <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x92>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8001774:	4b36      	ldr	r3, [pc, #216]	@ (8001850 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 8001776:	ea45 6502 	orr.w	r5, r5, r2, lsl #24
 800177a:	f445 3500 	orr.w	r5, r5, #131072	@ 0x20000
        if (blitOp.srcFormat != blitOp.dstFormat)
 800177e:	45b8      	cmp	r8, r7
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8001780:	61dd      	str	r5, [r3, #28]
        if (blitOp.srcFormat != blitOp.dstFormat)
 8001782:	d061      	beq.n	8001848 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x130>
            WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
 8001784:	4a33      	ldr	r2, [pc, #204]	@ (8001854 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x13c>)
 8001786:	e044      	b.n	8001812 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xfa>
    switch (blitOp.operation)
 8001788:	f5b0 7f80 	cmp.w	r0, #256	@ 0x100
 800178c:	d004      	beq.n	8001798 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x80>
 800178e:	f5b0 7f00 	cmp.w	r0, #512	@ 0x200
 8001792:	d1ef      	bne.n	8001774 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x5c>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8001794:	4830      	ldr	r0, [pc, #192]	@ (8001858 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x140>)
 8001796:	e000      	b.n	800179a <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x82>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8001798:	4830      	ldr	r0, [pc, #192]	@ (800185c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x144>)
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 800179a:	ea40 6202 	orr.w	r2, r0, r2, lsl #24
 800179e:	61da      	str	r2, [r3, #28]
 80017a0:	68e2      	ldr	r2, [r4, #12]
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
 80017a2:	621a      	str	r2, [r3, #32]
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 80017a4:	625e      	str	r6, [r3, #36]	@ 0x24
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 80017a6:	6159      	str	r1, [r3, #20]
 80017a8:	e032      	b.n	8001810 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xf8>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 80017aa:	ea45 6202 	orr.w	r2, r5, r2, lsl #24
 80017ae:	f442 3200 	orr.w	r2, r2, #131072	@ 0x20000
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 80017b2:	61da      	str	r2, [r3, #28]
 80017b4:	e7f6      	b.n	80017a4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x8c>
            const clutData_t* const palette = reinterpret_cast<const clutData_t*>(blitOp.pClut);
 80017b6:	68a0      	ldr	r0, [r4, #8]
            WRITE_REG(DMA2D->FGCMAR, reinterpret_cast<uint32_t>(&palette->data));
 80017b8:	1d02      	adds	r2, r0, #4
 80017ba:	62da      	str	r2, [r3, #44]	@ 0x2c
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 80017bc:	7f22      	ldrb	r2, [r4, #28]
 80017be:	ea45 6502 	orr.w	r5, r5, r2, lsl #24
 80017c2:	f445 3500 	orr.w	r5, r5, #131072	@ 0x20000
 80017c6:	61dd      	str	r5, [r3, #28]
            WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 80017c8:	625e      	str	r6, [r3, #36]	@ 0x24
            WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 80017ca:	6159      	str	r1, [r3, #20]
            switch ((Bitmap::ClutFormat)palette->format)
 80017cc:	7801      	ldrb	r1, [r0, #0]
 80017ce:	b141      	cbz	r1, 80017e2 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xca>
 80017d0:	2901      	cmp	r1, #1
 80017d2:	d021      	beq.n	8001818 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x100>
                assert(0 && "Unsupported format");
 80017d4:	4b22      	ldr	r3, [pc, #136]	@ (8001860 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x148>)
 80017d6:	4a23      	ldr	r2, [pc, #140]	@ (8001864 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x14c>)
 80017d8:	4823      	ldr	r0, [pc, #140]	@ (8001868 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x150>)
 80017da:	f44f 718d 	mov.w	r1, #282	@ 0x11a
 80017de:	f021 fae1 	bl	8022da4 <__assert_func>
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_ARGB8888 << DMA2D_FGPFCCR_CCM_Pos)));
 80017e2:	69da      	ldr	r2, [r3, #28]
 80017e4:	8841      	ldrh	r1, [r0, #2]
 80017e6:	f422 427f 	bic.w	r2, r2, #65280	@ 0xff00
 80017ea:	3901      	subs	r1, #1
 80017ec:	f022 0210 	bic.w	r2, r2, #16
 80017f0:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 80017f4:	61da      	str	r2, [r3, #28]
            bool blend = true;
 80017f6:	2101      	movs	r1, #1
            SET_BIT(DMA2D->FGPFCCR, DMA2D_FGPFCCR_START);
 80017f8:	4b15      	ldr	r3, [pc, #84]	@ (8001850 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 80017fa:	69da      	ldr	r2, [r3, #28]
 80017fc:	f042 0220 	orr.w	r2, r2, #32
 8001800:	61da      	str	r2, [r3, #28]
            while ((READ_REG(DMA2D->FGPFCCR) & DMA2D_FGPFCCR_START) != 0U)
 8001802:	69da      	ldr	r2, [r3, #28]
 8001804:	0692      	lsls	r2, r2, #26
 8001806:	d4fc      	bmi.n	8001802 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xea>
            DMA2D->IFCR = (DMA2D_FLAG_CTC);
 8001808:	2210      	movs	r2, #16
 800180a:	609a      	str	r2, [r3, #8]
            if (blend)
 800180c:	2900      	cmp	r1, #0
 800180e:	d0b9      	beq.n	8001784 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x6c>
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
 8001810:	4a16      	ldr	r2, [pc, #88]	@ (800186c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x154>)
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
 8001812:	601a      	str	r2, [r3, #0]
}
 8001814:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
                if (blitOp.alpha == 255)
 8001818:	f1b2 01ff 	subs.w	r1, r2, #255	@ 0xff
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 800181c:	69da      	ldr	r2, [r3, #28]
 800181e:	8840      	ldrh	r0, [r0, #2]
 8001820:	f422 427f 	bic.w	r2, r2, #65280	@ 0xff00
 8001824:	f100 30ff 	add.w	r0, r0, #4294967295
 8001828:	f022 0210 	bic.w	r2, r2, #16
 800182c:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
 8001830:	f042 0210 	orr.w	r2, r2, #16
                if (blitOp.alpha == 255)
 8001834:	bf18      	it	ne
 8001836:	2101      	movne	r1, #1
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 8001838:	61da      	str	r2, [r3, #28]
                break;
 800183a:	e7dd      	b.n	80017f8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xe0>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 800183c:	ea45 6202 	orr.w	r2, r5, r2, lsl #24
 8001840:	4b03      	ldr	r3, [pc, #12]	@ (8001850 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 8001842:	f442 3200 	orr.w	r2, r2, #131072	@ 0x20000
 8001846:	e7b4      	b.n	80017b2 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x9a>
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
 8001848:	f242 3201 	movw	r2, #8961	@ 0x2301
 800184c:	e7e1      	b.n	8001812 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xfa>
 800184e:	bf00      	nop
 8001850:	4002b000 	.word	0x4002b000
 8001854:	00012301 	.word	0x00012301
 8001858:	00020009 	.word	0x00020009
 800185c:	0002000a 	.word	0x0002000a
 8001860:	080241b3 	.word	0x080241b3
 8001864:	080241cd 	.word	0x080241cd
 8001868:	08024126 	.word	0x08024126
 800186c:	00022301 	.word	0x00022301

08001870 <DMA2D_XferCpltCallback>:
        return instance;
 8001870:	4b02      	ldr	r3, [pc, #8]	@ (800187c <DMA2D_XferCpltCallback+0xc>)
 8001872:	681b      	ldr	r3, [r3, #0]
 8001874:	6858      	ldr	r0, [r3, #4]
        dma.signalDMAInterrupt();
 8001876:	6803      	ldr	r3, [r0, #0]
 8001878:	695b      	ldr	r3, [r3, #20]
 800187a:	4718      	bx	r3
 800187c:	200133d4 	.word	0x200133d4

08001880 <_ZN8STM32DMAC1Ev>:
STM32DMA::STM32DMA()
 8001880:	b570      	push	{r4, r5, r6, lr}
 8001882:	4604      	mov	r4, r0
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0]))
 8001884:	4625      	mov	r5, r4
 8001886:	4b0a      	ldr	r3, [pc, #40]	@ (80018b0 <_ZN8STM32DMAC1Ev+0x30>)
 8001888:	300c      	adds	r0, #12
     * Constructs a DMA Interface object.
     *
     * @param [in] dmaQueue Reference to the queue of DMA operations.
     */
    DMA_Interface(DMA_Queue& dmaQueue)
        : queue(dmaQueue), isRunning(false), isAllowed(false)
 800188a:	2600      	movs	r6, #0
 800188c:	6060      	str	r0, [r4, #4]
 800188e:	7226      	strb	r6, [r4, #8]
 8001890:	7266      	strb	r6, [r4, #9]
 8001892:	f845 3b20 	str.w	r3, [r5], #32
 8001896:	2260      	movs	r2, #96	@ 0x60
 8001898:	4629      	mov	r1, r5
 800189a:	f00a fbc5 	bl	800c028 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>
 800189e:	f504 635a 	add.w	r3, r4, #3488	@ 0xda0
        : color(0)
 80018a2:	60ee      	str	r6, [r5, #12]
 80018a4:	3524      	adds	r5, #36	@ 0x24
 80018a6:	429d      	cmp	r5, r3
 80018a8:	d1fb      	bne.n	80018a2 <_ZN8STM32DMAC1Ev+0x22>
}
 80018aa:	4620      	mov	r0, r4
 80018ac:	bd70      	pop	{r4, r5, r6, pc}
 80018ae:	bf00      	nop
 80018b0:	080249b0 	.word	0x080249b0

080018b4 <_ZN8touchgfx5paint8tearDownEv>:
 * @brief Waits until previous DMA drawing operation has finished
 */
void tearDown()
{
    /* Wait for DMA2D to finish last run */
    while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
 80018b4:	4b03      	ldr	r3, [pc, #12]	@ (80018c4 <_ZN8touchgfx5paint8tearDownEv+0x10>)
 80018b6:	681a      	ldr	r2, [r3, #0]
 80018b8:	07d2      	lsls	r2, r2, #31
 80018ba:	d4fc      	bmi.n	80018b6 <_ZN8touchgfx5paint8tearDownEv+0x2>

    /* Clear transfer flags */
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
 80018bc:	2223      	movs	r2, #35	@ 0x23
 80018be:	609a      	str	r2, [r3, #8]
}
 80018c0:	4770      	bx	lr
 80018c2:	bf00      	nop
 80018c4:	4002b000 	.word	0x4002b000

080018c8 <_ZN8touchgfx5paint9flushLineEPmi>:
 *
 * @brief Flushes decoded RGB pixels when rendering compressed images
 */
void flushLine(uint32_t* addr, int sizebytes)
{
}
 80018c8:	4770      	bx	lr
	...

080018cc <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>:
 *
 * @brief Renders Canvas Widget chunks using DMA.
 * This functions will not generate an interrupt, and will not affect the DMA queue.
 */
void lineFromColor(uint16_t* const ptr, const unsigned count, const uint32_t color, const uint8_t alpha, const uint32_t color565)
{
 80018cc:	b530      	push	{r4, r5, lr}
    /* Wait for DMA2D to finish last run */
    while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
 80018ce:	4c0f      	ldr	r4, [pc, #60]	@ (800190c <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x40>)
 80018d0:	6825      	ldr	r5, [r4, #0]
 80018d2:	07ed      	lsls	r5, r5, #31
 80018d4:	d4fc      	bmi.n	80018d0 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x4>

    /* Clear transfer flags */
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
 80018d6:	2523      	movs	r5, #35	@ 0x23

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 80018d8:	0409      	lsls	r1, r1, #16
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
 80018da:	60a5      	str	r5, [r4, #8]
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 80018dc:	f041 0101 	orr.w	r1, r1, #1
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
 80018e0:	2502      	movs	r5, #2

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));

    if (alpha < 0xFF)
 80018e2:	2bff      	cmp	r3, #255	@ 0xff
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
 80018e4:	6365      	str	r5, [r4, #52]	@ 0x34
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 80018e6:	6461      	str	r1, [r4, #68]	@ 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));
 80018e8:	63e0      	str	r0, [r4, #60]	@ 0x3c
    if (alpha < 0xFF)
 80018ea:	d00a      	beq.n	8001902 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x36>
    {
        /* Write DMA2D BGPFCCR register */
        WRITE_REG(DMA2D->BGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));

        /* Write DMA2D FGPFCCR register */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
 80018ec:	4908      	ldr	r1, [pc, #32]	@ (8001910 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x44>)
        WRITE_REG(DMA2D->BGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 80018ee:	6265      	str	r5, [r4, #36]	@ 0x24
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
 80018f0:	ea41 6303 	orr.w	r3, r1, r3, lsl #24
 80018f4:	61e3      	str	r3, [r4, #28]

        /* Configure DMA2D source address */
        WRITE_REG(DMA2D->FGMAR, (uint32_t)ptr);

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_M2M_BLEND));
 80018f6:	4b07      	ldr	r3, [pc, #28]	@ (8001914 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x48>)
        WRITE_REG(DMA2D->FGCOLR, color);
 80018f8:	6222      	str	r2, [r4, #32]
        WRITE_REG(DMA2D->BGMAR, (uint32_t)ptr);
 80018fa:	6160      	str	r0, [r4, #20]
        WRITE_REG(DMA2D->FGMAR, (uint32_t)ptr);
 80018fc:	60e0      	str	r0, [r4, #12]

        /* Set color */
        WRITE_REG(DMA2D->OCOLR, color565);

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_R2M));
 80018fe:	6023      	str	r3, [r4, #0]
    }
}
 8001900:	bd30      	pop	{r4, r5, pc}
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_FGPFCCR_AM_Pos));
 8001902:	61e5      	str	r5, [r4, #28]
        WRITE_REG(DMA2D->OCOLR, color565);
 8001904:	9b03      	ldr	r3, [sp, #12]
 8001906:	63a3      	str	r3, [r4, #56]	@ 0x38
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_R2M));
 8001908:	4b03      	ldr	r3, [pc, #12]	@ (8001918 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x4c>)
 800190a:	e7f8      	b.n	80018fe <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x32>
 800190c:	4002b000 	.word	0x4002b000
 8001910:	00010009 	.word	0x00010009
 8001914:	00020001 	.word	0x00020001
 8001918:	00030001 	.word	0x00030001

0800191c <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh>:

void lineFromRGB565(uint16_t* const ptr, const uint16_t* const data, const unsigned count, const uint8_t alpha)
{
 800191c:	b530      	push	{r4, r5, lr}
    /* Wait for DMA2D to finish last run */
    while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
 800191e:	4c0e      	ldr	r4, [pc, #56]	@ (8001958 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x3c>)
 8001920:	6825      	ldr	r5, [r4, #0]
 8001922:	07ed      	lsls	r5, r5, #31
 8001924:	d4fc      	bmi.n	8001920 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x4>

    /* Clear transfer flags */
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
 8001926:	2523      	movs	r5, #35	@ 0x23

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 8001928:	0412      	lsls	r2, r2, #16
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
 800192a:	60a5      	str	r5, [r4, #8]
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 800192c:	f042 0201 	orr.w	r2, r2, #1
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
 8001930:	2502      	movs	r5, #2
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));

    /* Configure DMA2D source address */
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(data));

    if (alpha < 0xFF)
 8001932:	2bff      	cmp	r3, #255	@ 0xff
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
 8001934:	6365      	str	r5, [r4, #52]	@ 0x34
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 8001936:	6462      	str	r2, [r4, #68]	@ 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));
 8001938:	63e0      	str	r0, [r4, #60]	@ 0x3c
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(data));
 800193a:	60e1      	str	r1, [r4, #12]
    if (alpha < 0xFF)
 800193c:	d008      	beq.n	8001950 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x34>
    {
        /* Set DMA2D color mode and alpha mode */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
 800193e:	061b      	lsls	r3, r3, #24
 8001940:	f043 1302 	orr.w	r3, r3, #131074	@ 0x20002
 8001944:	61e3      	str	r3, [r4, #28]

        /* Configure DMA2D Stream source2 address */
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(ptr));

        /* Set DMA2D mode */
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_CR_START);
 8001946:	4b05      	ldr	r3, [pc, #20]	@ (800195c <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x40>)
        WRITE_REG(DMA2D->BGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8001948:	6265      	str	r5, [r4, #36]	@ 0x24
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(ptr));
 800194a:	6160      	str	r0, [r4, #20]
    {
        /* Set DMA2D color mode and alpha mode */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));

        /* Start DMA2D : M2M Mode */
        WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_CR_START);
 800194c:	6023      	str	r3, [r4, #0]
    }
}
 800194e:	bd30      	pop	{r4, r5, pc}
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
 8001950:	4b03      	ldr	r3, [pc, #12]	@ (8001960 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x44>)
 8001952:	61e3      	str	r3, [r4, #28]
        WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_CR_START);
 8001954:	2301      	movs	r3, #1
 8001956:	e7f9      	b.n	800194c <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x30>
 8001958:	4002b000 	.word	0x4002b000
 800195c:	00020001 	.word	0x00020001
 8001960:	ff020002 	.word	0xff020002

08001964 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh>:

void lineFromARGB8888(uint16_t* const ptr, const uint32_t* const data, const unsigned count, const uint8_t alpha)
{
 8001964:	b530      	push	{r4, r5, lr}
    /* Wait for DMA2D to finish last run */
    while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
 8001966:	4c0b      	ldr	r4, [pc, #44]	@ (8001994 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh+0x30>)
 8001968:	6825      	ldr	r5, [r4, #0]
 800196a:	07ed      	lsls	r5, r5, #31
 800196c:	d4fc      	bmi.n	8001968 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh+0x4>

    /* Clear transfer flags */
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
 800196e:	2523      	movs	r5, #35	@ 0x23

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 8001970:	0412      	lsls	r2, r2, #16

    /* Configure DMA2D source address */
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(data));

    /* Set DMA2D color mode and alpha mode */
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_ARGB8888 | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
 8001972:	061b      	lsls	r3, r3, #24
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
 8001974:	60a5      	str	r5, [r4, #8]
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_ARGB8888 | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
 8001976:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
 800197a:	2502      	movs	r5, #2
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 800197c:	f042 0201 	orr.w	r2, r2, #1
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
 8001980:	6365      	str	r5, [r4, #52]	@ 0x34
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 8001982:	6462      	str	r2, [r4, #68]	@ 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));
 8001984:	63e0      	str	r0, [r4, #60]	@ 0x3c
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(data));
 8001986:	60e1      	str	r1, [r4, #12]
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_ARGB8888 | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
 8001988:	61e3      	str	r3, [r4, #28]

    /* Configure DMA2D Stream source2 address */
    WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(ptr));

    /* Set DMA2D mode */
    WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_CR_START);
 800198a:	4b03      	ldr	r3, [pc, #12]	@ (8001998 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh+0x34>)
    WRITE_REG(DMA2D->BGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 800198c:	6265      	str	r5, [r4, #36]	@ 0x24
    WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(ptr));
 800198e:	6160      	str	r0, [r4, #20]
    WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_CR_START);
 8001990:	6023      	str	r3, [r4, #0]
}
 8001992:	bd30      	pop	{r4, r5, pc}
 8001994:	4002b000 	.word	0x4002b000
 8001998:	00020001 	.word	0x00020001

0800199c <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    };

    virtual uint16_t capacity() const
    {
        return NUMBER_OF_ELEMENTS;
    }
 800199c:	2001      	movs	r0, #1
 800199e:	4770      	bx	lr

080019a0 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:

    virtual uint32_t element_size()
    {
        return sizeof(stBlocks[0]);
    }
 80019a0:	200c      	movs	r0, #12
 80019a2:	4770      	bx	lr

080019a4 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt>:

protected:
    virtual void* element(uint16_t index)
    {
        return &stBlocks[index];
 80019a4:	230c      	movs	r3, #12
 80019a6:	fb03 0001 	mla	r0, r3, r1, r0
    }
 80019aa:	3008      	adds	r0, #8
 80019ac:	4770      	bx	lr

080019ae <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt>:

    virtual const void* element(uint16_t index) const
    {
        return &stBlocks[index];
 80019ae:	230c      	movs	r3, #12
 80019b0:	fb03 0001 	mla	r0, r3, r1, r0
    }
 80019b4:	3008      	adds	r0, #8
 80019b6:	4770      	bx	lr

080019b8 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 80019b8:	2001      	movs	r0, #1
 80019ba:	4770      	bx	lr

080019bc <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 80019bc:	f44f 7069 	mov.w	r0, #932	@ 0x3a4
 80019c0:	4770      	bx	lr

080019c2 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 80019c2:	f44f 7369 	mov.w	r3, #932	@ 0x3a4
 80019c6:	fb03 0001 	mla	r0, r3, r1, r0
    }
 80019ca:	3008      	adds	r0, #8
 80019cc:	4770      	bx	lr

080019ce <_ZNK8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 80019ce:	f44f 7369 	mov.w	r3, #932	@ 0x3a4
 80019d2:	fb03 0001 	mla	r0, r3, r1, r0
    }
 80019d6:	3008      	adds	r0, #8
 80019d8:	4770      	bx	lr

080019da <_ZNK8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 80019da:	2001      	movs	r0, #1
 80019dc:	4770      	bx	lr

080019de <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 80019de:	2010      	movs	r0, #16
 80019e0:	4770      	bx	lr

080019e2 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 80019e2:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 80019e6:	3008      	adds	r0, #8
 80019e8:	4770      	bx	lr

080019ea <_ZNK8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 80019ea:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 80019ee:	3008      	adds	r0, #8
 80019f0:	4770      	bx	lr

080019f2 <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>:
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
    {
        app.gotoScreen1ScreenNoTransition();
 80019f2:	4608      	mov	r0, r1
 80019f4:	f001 bd24 	b.w	8003440 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>

080019f8 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>:
class Partition : public AbstractPartition
 80019f8:	b510      	push	{r4, lr}
 80019fa:	4b03      	ldr	r3, [pc, #12]	@ (8001a08 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 80019fc:	6003      	str	r3, [r0, #0]
 80019fe:	4604      	mov	r4, r0
 8001a00:	f009 f940 	bl	800ac84 <_ZN8touchgfx17AbstractPartitionD1Ev>
 8001a04:	4620      	mov	r0, r4
 8001a06:	bd10      	pop	{r4, pc}
 8001a08:	08024a68 	.word	0x08024a68

08001a0c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8001a0c:	b510      	push	{r4, lr}
 8001a0e:	4604      	mov	r4, r0
 8001a10:	f7ff fff2 	bl	80019f8 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>
 8001a14:	4620      	mov	r0, r4
 8001a16:	2114      	movs	r1, #20
 8001a18:	f020 f985 	bl	8021d26 <_ZdlPvj>
 8001a1c:	4620      	mov	r0, r4
 8001a1e:	bd10      	pop	{r4, pc}

08001a20 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8001a20:	b510      	push	{r4, lr}
 8001a22:	4b03      	ldr	r3, [pc, #12]	@ (8001a30 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8001a24:	6003      	str	r3, [r0, #0]
 8001a26:	4604      	mov	r4, r0
 8001a28:	f009 f92c 	bl	800ac84 <_ZN8touchgfx17AbstractPartitionD1Ev>
 8001a2c:	4620      	mov	r0, r4
 8001a2e:	bd10      	pop	{r4, pc}
 8001a30:	08024a34 	.word	0x08024a34

08001a34 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8001a34:	b510      	push	{r4, lr}
 8001a36:	4604      	mov	r4, r0
 8001a38:	f7ff fff2 	bl	8001a20 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8001a3c:	4620      	mov	r0, r4
 8001a3e:	f44f 716b 	mov.w	r1, #940	@ 0x3ac
 8001a42:	f020 f970 	bl	8021d26 <_ZdlPvj>
 8001a46:	4620      	mov	r0, r4
 8001a48:	bd10      	pop	{r4, pc}
	...

08001a4c <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8001a4c:	b510      	push	{r4, lr}
 8001a4e:	4b03      	ldr	r3, [pc, #12]	@ (8001a5c <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8001a50:	6003      	str	r3, [r0, #0]
 8001a52:	4604      	mov	r4, r0
 8001a54:	f009 f916 	bl	800ac84 <_ZN8touchgfx17AbstractPartitionD1Ev>
 8001a58:	4620      	mov	r0, r4
 8001a5a:	bd10      	pop	{r4, pc}
 8001a5c:	08024a00 	.word	0x08024a00

08001a60 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8001a60:	b510      	push	{r4, lr}
 8001a62:	4604      	mov	r4, r0
 8001a64:	f7ff fff2 	bl	8001a4c <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8001a68:	4620      	mov	r0, r4
 8001a6a:	2118      	movs	r1, #24
 8001a6c:	f020 f95b 	bl	8021d26 <_ZdlPvj>
 8001a70:	4620      	mov	r0, r4
 8001a72:	bd10      	pop	{r4, pc}

08001a74 <_ZN12FrontendHeapD1Ev>:
#ifndef FRONTENDHEAP_HPP
#define FRONTENDHEAP_HPP

#include <gui_generated/common/FrontendHeapBase.hpp>

class FrontendHeap : public FrontendHeapBase
 8001a74:	b510      	push	{r4, lr}
 8001a76:	4b08      	ldr	r3, [pc, #32]	@ (8001a98 <_ZN12FrontendHeapD1Ev+0x24>)
 8001a78:	6003      	str	r3, [r0, #0]
 8001a7a:	4604      	mov	r4, r0
 8001a7c:	f500 7076 	add.w	r0, r0, #984	@ 0x3d8
 8001a80:	f7ff ffba 	bl	80019f8 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>
 8001a84:	f104 002c 	add.w	r0, r4, #44	@ 0x2c
 8001a88:	f7ff ffca 	bl	8001a20 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8001a8c:	f104 0014 	add.w	r0, r4, #20
 8001a90:	f7ff ffdc 	bl	8001a4c <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8001a94:	4620      	mov	r0, r4
 8001a96:	bd10      	pop	{r4, pc}
 8001a98:	08024a9c 	.word	0x08024a9c

08001a9c <__tcf_0>:
                            > > CombinedTransitionTypes;
    typedef touchgfx::meta::select_type_maxsize< CombinedTransitionTypes >::type MaxTransitionType;

    static FrontendHeap& getInstance()
    {
        static FrontendHeap instance;
 8001a9c:	b508      	push	{r3, lr}
 8001a9e:	4802      	ldr	r0, [pc, #8]	@ (8001aa8 <__tcf_0+0xc>)
 8001aa0:	f7ff ffe8 	bl	8001a74 <_ZN12FrontendHeapD1Ev>
 8001aa4:	bd08      	pop	{r3, pc}
 8001aa6:	bf00      	nop
 8001aa8:	2000139c 	.word	0x2000139c

08001aac <_ZN12FrontendHeapD0Ev>:
class FrontendHeap : public FrontendHeapBase
 8001aac:	b510      	push	{r4, lr}
 8001aae:	4604      	mov	r4, r0
 8001ab0:	f7ff ffe0 	bl	8001a74 <_ZN12FrontendHeapD1Ev>
 8001ab4:	4620      	mov	r0, r4
 8001ab6:	f240 514c 	movw	r1, #1356	@ 0x54c
 8001aba:	f020 f934 	bl	8021d26 <_ZdlPvj>
 8001abe:	4620      	mov	r0, r4
 8001ac0:	bd10      	pop	{r4, pc}
	...

08001ac4 <touchgfx_init>:
static ApplicationFontProvider fontProvider;
static Texts texts;
static TouchGFXHAL hal(dma, display, tc, 240, 320);

void touchgfx_init()
{
 8001ac4:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
    Bitmap::registerBitmapDatabase(BitmapDatabase::getInstance(), BitmapDatabase::getInstanceSize());
 8001ac8:	f001 fb3c 	bl	8003144 <_ZN14BitmapDatabase11getInstanceEv>
 8001acc:	4605      	mov	r5, r0
 8001ace:	f001 fb3d 	bl	800314c <_ZN14BitmapDatabase15getInstanceSizeEv>
 8001ad2:	2400      	movs	r4, #0
 8001ad4:	4601      	mov	r1, r0
 8001ad6:	4623      	mov	r3, r4
 8001ad8:	4628      	mov	r0, r5
 8001ada:	4622      	mov	r2, r4
 8001adc:	9400      	str	r4, [sp, #0]
 8001ade:	f011 f88f 	bl	8012c00 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>
     *
     * @param  t The array of texts.
     */
    static void registerTexts(const Texts* t)
    {
        texts = t;
 8001ae2:	4b27      	ldr	r3, [pc, #156]	@ (8001b80 <touchgfx_init+0xbc>)
 8001ae4:	4a27      	ldr	r2, [pc, #156]	@ (8001b84 <touchgfx_init+0xc0>)
 8001ae6:	601a      	str	r2, [r3, #0]
    TypedText::registerTexts(&texts);
    Texts::setLanguage(0);
 8001ae8:	4620      	mov	r0, r4
 8001aea:	f002 f889 	bl	8003c00 <_ZN8touchgfx5Texts11setLanguageEt>
        static FrontendHeap instance;
 8001aee:	4d26      	ldr	r5, [pc, #152]	@ (8001b88 <touchgfx_init+0xc4>)
     *
     * @param renderer  The renderer to be used by LCD when dealing with vector fonts.
     */
    void setVectorFontRenderer(VectorFontRenderer* renderer)
    {
        vectorFontRenderer = renderer;
 8001af0:	4b26      	ldr	r3, [pc, #152]	@ (8001b8c <touchgfx_init+0xc8>)
 8001af2:	4a27      	ldr	r2, [pc, #156]	@ (8001b90 <touchgfx_init+0xcc>)

    display.setVectorFontRenderer(&vectorFontRenderer);

    FontManager::setFontProvider(&fontProvider);
 8001af4:	4827      	ldr	r0, [pc, #156]	@ (8001b94 <touchgfx_init+0xd0>)
 8001af6:	609a      	str	r2, [r3, #8]
 8001af8:	f010 ffea 	bl	8012ad0 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>
 8001afc:	682b      	ldr	r3, [r5, #0]
 8001afe:	f3bf 8f5b 	dmb	ish
 8001b02:	07db      	lsls	r3, r3, #31
 8001b04:	d435      	bmi.n	8001b72 <touchgfx_init+0xae>
 8001b06:	4628      	mov	r0, r5
 8001b08:	f020 f90f 	bl	8021d2a <__cxa_guard_acquire>
 8001b0c:	b388      	cbz	r0, 8001b72 <touchgfx_init+0xae>
     */
    MVPHeap(AbstractPartition& pres,
            AbstractPartition& scr,
            AbstractPartition& tra,
            MVPApplication& app)
        : presenterStorage(pres),
 8001b0e:	4c22      	ldr	r4, [pc, #136]	@ (8001b98 <touchgfx_init+0xd4>)
    Model model;
    FrontendApplication app;

private:
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
                     app(model, *this)
 8001b10:	4b22      	ldr	r3, [pc, #136]	@ (8001b9c <touchgfx_init+0xd8>)
 8001b12:	6023      	str	r3, [r4, #0]
          screenStorage(scr),
          transitionStorage(tra),
          frontendApplication(app)
 8001b14:	f504 767c 	add.w	r6, r4, #1008	@ 0x3f0
        : presenterStorage(pres),
 8001b18:	f104 0014 	add.w	r0, r4, #20
          screenStorage(scr),
 8001b1c:	f104 082c 	add.w	r8, r4, #44	@ 0x2c
          transitionStorage(tra),
 8001b20:	f504 7776 	add.w	r7, r4, #984	@ 0x3d8
        : presenterStorage(pres),
 8001b24:	6060      	str	r0, [r4, #4]
          screenStorage(scr),
 8001b26:	f8c4 8008 	str.w	r8, [r4, #8]
          transitionStorage(tra),
 8001b2a:	60e7      	str	r7, [r4, #12]
          frontendApplication(app)
 8001b2c:	6126      	str	r6, [r4, #16]
 8001b2e:	f009 f8ab 	bl	800ac88 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8001b32:	4b1b      	ldr	r3, [pc, #108]	@ (8001ba0 <touchgfx_init+0xdc>)
 8001b34:	6163      	str	r3, [r4, #20]
 8001b36:	4640      	mov	r0, r8
 8001b38:	f009 f8a6 	bl	800ac88 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8001b3c:	4b19      	ldr	r3, [pc, #100]	@ (8001ba4 <touchgfx_init+0xe0>)
 8001b3e:	62e3      	str	r3, [r4, #44]	@ 0x2c
 8001b40:	4638      	mov	r0, r7
 8001b42:	f009 f8a1 	bl	800ac88 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8001b46:	4b18      	ldr	r3, [pc, #96]	@ (8001ba8 <touchgfx_init+0xe4>)
 8001b48:	f8c4 33d8 	str.w	r3, [r4, #984]	@ 0x3d8
 8001b4c:	f504 707b 	add.w	r0, r4, #1004	@ 0x3ec
 8001b50:	f002 f8cc 	bl	8003cec <_ZN5ModelC1Ev>
 8001b54:	4622      	mov	r2, r4
 8001b56:	f504 717b 	add.w	r1, r4, #1004	@ 0x3ec
 8001b5a:	4630      	mov	r0, r6
 8001b5c:	f002 f8bc 	bl	8003cd8 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>
 8001b60:	4630      	mov	r0, r6
 8001b62:	f001 fc6d 	bl	8003440 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>
        static FrontendHeap instance;
 8001b66:	4811      	ldr	r0, [pc, #68]	@ (8001bac <touchgfx_init+0xe8>)
 8001b68:	f021 f93a 	bl	8022de0 <atexit>
 8001b6c:	4628      	mov	r0, r5
 8001b6e:	f020 f8e8 	bl	8021d42 <__cxa_guard_release>
    (void)heap;

    /*
     * Initialize TouchGFX
     */
    hal.initialize();
 8001b72:	480f      	ldr	r0, [pc, #60]	@ (8001bb0 <touchgfx_init+0xec>)
}
 8001b74:	b002      	add	sp, #8
 8001b76:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    hal.initialize();
 8001b7a:	f7ff bbe7 	b.w	800134c <_ZN11TouchGFXHAL10initializeEv>
 8001b7e:	bf00      	nop
 8001b80:	20013438 	.word	0x20013438
 8001b84:	20000548 	.word	0x20000548
 8001b88:	20001398 	.word	0x20001398
 8001b8c:	20000568 	.word	0x20000568
 8001b90:	2000054c 	.word	0x2000054c
 8001b94:	20000008 	.word	0x20000008
 8001b98:	2000139c 	.word	0x2000139c
 8001b9c:	08024a9c 	.word	0x08024a9c
 8001ba0:	08024a00 	.word	0x08024a00
 8001ba4:	08024a34 	.word	0x08024a34
 8001ba8:	08024a68 	.word	0x08024a68
 8001bac:	08001a9d 	.word	0x08001a9d
 8001bb0:	200004c4 	.word	0x200004c4

08001bb4 <touchgfx_components_init>:

void touchgfx_components_init()
{
}
 8001bb4:	4770      	bx	lr
	...

08001bb8 <touchgfx_taskEntry>:
     * Main event loop. Will wait for VSYNC signal, and then process next frame. Call
     * this function from your GUI task.
     *
     * Note This function never returns
     */
    hal.taskEntry();
 8001bb8:	4801      	ldr	r0, [pc, #4]	@ (8001bc0 <touchgfx_taskEntry+0x8>)
 8001bba:	f7ff bbd5 	b.w	8001368 <_ZN11TouchGFXHAL9taskEntryEv>
 8001bbe:	bf00      	nop
 8001bc0:	200004c4 	.word	0x200004c4

08001bc4 <_GLOBAL__sub_I_touchgfx_init>:
}
 8001bc4:	b570      	push	{r4, r5, r6, lr}
static STM32DMA dma;
 8001bc6:	4e26      	ldr	r6, [pc, #152]	@ (8001c60 <_GLOBAL__sub_I_touchgfx_init+0x9c>)
{
public:

    STM32TouchController() {}
 8001bc8:	4c26      	ldr	r4, [pc, #152]	@ (8001c64 <_GLOBAL__sub_I_touchgfx_init+0xa0>)
static LCD16bpp display;
 8001bca:	4d27      	ldr	r5, [pc, #156]	@ (8001c68 <_GLOBAL__sub_I_touchgfx_init+0xa4>)
 8001bcc:	4b27      	ldr	r3, [pc, #156]	@ (8001c6c <_GLOBAL__sub_I_touchgfx_init+0xa8>)
 8001bce:	6023      	str	r3, [r4, #0]
static STM32DMA dma;
 8001bd0:	4630      	mov	r0, r6
 8001bd2:	f7ff fe55 	bl	8001880 <_ZN8STM32DMAC1Ev>
static LCD16bpp display;
 8001bd6:	4628      	mov	r0, r5
 8001bd8:	f016 f918 	bl	8017e0c <_ZN8touchgfx8LCD16bppC1Ev>
static VectorFontRendererImpl vectorFontRenderer;
 8001bdc:	4824      	ldr	r0, [pc, #144]	@ (8001c70 <_GLOBAL__sub_I_touchgfx_init+0xac>)
 8001bde:	f00f f901 	bl	8010de4 <_ZN8touchgfx22VectorFontRendererImplC1Ev>
        : dma(dmaInterface),
 8001be2:	4b24      	ldr	r3, [pc, #144]	@ (8001c74 <_GLOBAL__sub_I_touchgfx_init+0xb0>)
          isFrontPorchEntered(false),
 8001be4:	4824      	ldr	r0, [pc, #144]	@ (8001c78 <_GLOBAL__sub_I_touchgfx_init+0xb4>)
          touchController(touchCtrl),
 8001be6:	60dc      	str	r4, [r3, #12]
          mcuInstrumentation(0),
 8001be8:	2200      	movs	r2, #0
          refreshStrategy(REFRESH_STRATEGY_DEFAULT),
 8001bea:	f44f 7180 	mov.w	r1, #256	@ 0x100
          auxiliaryLCD(0),
 8001bee:	e9c3 1212 	strd	r1, r2, [r3, #72]	@ 0x48
          touchSampleRate(1),
 8001bf2:	4922      	ldr	r1, [pc, #136]	@ (8001c7c <_GLOBAL__sub_I_touchgfx_init+0xb8>)
    };

public:
    /** Default constructor. Does nothing. */
    Gestures()
        : drag(), listener(0), dragThresholdValue(0)
 8001bf4:	861a      	strh	r2, [r3, #48]	@ 0x30
          vSyncCompensationEnabled(false),
 8001bf6:	e9c3 121a 	strd	r1, r2, [r3, #104]	@ 0x68
          isFrontPorchEntered(false),
 8001bfa:	4921      	ldr	r1, [pc, #132]	@ (8001c80 <_GLOBAL__sub_I_touchgfx_init+0xbc>)
          useAuxiliaryLCD(false),
 8001bfc:	f883 2058 	strb.w	r2, [r3, #88]	@ 0x58
          isFrontPorchEntered(false),
 8001c00:	e9c3 011e 	strd	r0, r1, [r3, #120]	@ 0x78
          minDrawingHeight(maxDrawingHeight / 3),    // Best guess based on testing (but not ideal in all cases)
 8001c04:	491f      	ldr	r1, [pc, #124]	@ (8001c84 <_GLOBAL__sub_I_touchgfx_init+0xc0>)
 8001c06:	f8c3 1080 	str.w	r1, [r3, #128]	@ 0x80
        instance = this;
 8001c0a:	491f      	ldr	r1, [pc, #124]	@ (8001c88 <_GLOBAL__sub_I_touchgfx_init+0xc4>)
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8001c0c:	481f      	ldr	r0, [pc, #124]	@ (8001c8c <_GLOBAL__sub_I_touchgfx_init+0xc8>)
        instance = this;
 8001c0e:	600b      	str	r3, [r1, #0]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8001c10:	21f0      	movs	r1, #240	@ 0xf0
          buttonController(0),
 8001c12:	e9c3 2204 	strd	r2, r2, [r3, #16]
 8001c16:	e9c3 2206 	strd	r2, r2, [r3, #24]
 8001c1a:	e9c3 2208 	strd	r2, r2, [r3, #32]
 8001c1e:	e9c3 220a 	strd	r2, r2, [r3, #40]	@ 0x28
          frameBuffer0(0),
 8001c22:	e9c3 220e 	strd	r2, r2, [r3, #56]	@ 0x38
          frameBuffer2(0),
 8001c26:	e9c3 2210 	strd	r2, r2, [r3, #64]	@ 0x40
class Rect
{
public:
    /** Default constructor. Resulting in an empty Rect with coordinates 0,0. */
    Rect()
        : x(0), y(0), width(0), height(0)
 8001c2a:	e9c3 2214 	strd	r2, r2, [r3, #80]	@ 0x50
          lastX(0),
 8001c2e:	e9c3 2217 	strd	r2, r2, [r3, #92]	@ 0x5c
          lastY(0),
 8001c32:	665a      	str	r2, [r3, #100]	@ 0x64
          updateMCULoad(0),
 8001c34:	f883 2070 	strb.w	r2, [r3, #112]	@ 0x70
          cc_begin(0),
 8001c38:	675a      	str	r2, [r3, #116]	@ 0x74
          lcdRef(display),
 8001c3a:	e9c3 6501 	strd	r6, r5, [r3, #4]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8001c3e:	8001      	strh	r1, [r0, #0]
 8001c40:	4813      	ldr	r0, [pc, #76]	@ (8001c90 <_GLOBAL__sub_I_touchgfx_init+0xcc>)
 8001c42:	8001      	strh	r1, [r0, #0]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8001c44:	4813      	ldr	r0, [pc, #76]	@ (8001c94 <_GLOBAL__sub_I_touchgfx_init+0xd0>)
 8001c46:	f44f 71a0 	mov.w	r1, #320	@ 0x140
 8001c4a:	8001      	strh	r1, [r0, #0]
 8001c4c:	4812      	ldr	r0, [pc, #72]	@ (8001c98 <_GLOBAL__sub_I_touchgfx_init+0xd4>)
 8001c4e:	8001      	strh	r1, [r0, #0]
        DISPLAY_ROTATION = rotate0;
 8001c50:	4912      	ldr	r1, [pc, #72]	@ (8001c9c <_GLOBAL__sub_I_touchgfx_init+0xd8>)
 8001c52:	700a      	strb	r2, [r1, #0]
        nativeDisplayOrientation = ((width >= height) ? ORIENTATION_LANDSCAPE : ORIENTATION_PORTRAIT);
 8001c54:	2201      	movs	r2, #1
 8001c56:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
     * @param [in,out] display Reference to LCD interface.
     * @param [in,out] tc      Reference to Touch Controller driver.
     * @param width            Width of the display.
     * @param height           Height of the display.
     */
    TouchGFXHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) : TouchGFXGeneratedHAL(dma, display, tc, width, height)
 8001c5a:	4a11      	ldr	r2, [pc, #68]	@ (8001ca0 <_GLOBAL__sub_I_touchgfx_init+0xdc>)
 8001c5c:	601a      	str	r2, [r3, #0]
}
 8001c5e:	bd70      	pop	{r4, r5, r6, pc}
 8001c60:	200005f4 	.word	0x200005f4
 8001c64:	20001394 	.word	0x20001394
 8001c68:	20000568 	.word	0x20000568
 8001c6c:	08023e40 	.word	0x08023e40
 8001c70:	2000054c 	.word	0x2000054c
 8001c74:	200004c4 	.word	0x200004c4
 8001c78:	01010000 	.word	0x01010000
 8001c7c:	01000001 	.word	0x01000001
 8001c80:	00500400 	.word	0x00500400
 8001c84:	0014001a 	.word	0x0014001a
 8001c88:	200133d4 	.word	0x200133d4
 8001c8c:	200133c6 	.word	0x200133c6
 8001c90:	200133cc 	.word	0x200133cc
 8001c94:	200133c8 	.word	0x200133c8
 8001c98:	200133ce 	.word	0x200133ce
 8001c9c:	200133ca 	.word	0x200133ca
 8001ca0:	080248c4 	.word	0x080248c4

08001ca4 <_GLOBAL__sub_D_touchgfx_init>:
static STM32DMA dma;
 8001ca4:	4801      	ldr	r0, [pc, #4]	@ (8001cac <_GLOBAL__sub_D_touchgfx_init+0x8>)
 8001ca6:	f7ff bc77 	b.w	8001598 <_ZN8STM32DMAD1Ev>
 8001caa:	bf00      	nop
 8001cac:	200005f4 	.word	0x200005f4

08001cb0 <_ZN8touchgfx8Drawable13getFirstChildEv>:
     * @see Container::getFirstChild
     */
    virtual Drawable* getFirstChild()
    {
        return 0;
    }
 8001cb0:	2000      	movs	r0, #0
 8001cb2:	4770      	bx	lr

08001cb4 <_ZN8touchgfx8Drawable4setXEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setX(int16_t x)
    {
        rect.x = x;
 8001cb4:	8081      	strh	r1, [r0, #4]
    }
 8001cb6:	4770      	bx	lr

08001cb8 <_ZN8touchgfx8Drawable4setYEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setY(int16_t y)
    {
        rect.y = y;
 8001cb8:	80c1      	strh	r1, [r0, #6]
    }
 8001cba:	4770      	bx	lr

08001cbc <_ZN8touchgfx8Drawable8setWidthEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setWidth(int16_t width)
    {
        rect.width = width;
 8001cbc:	8101      	strh	r1, [r0, #8]
    }
 8001cbe:	4770      	bx	lr

08001cc0 <_ZN8touchgfx8Drawable9setHeightEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setHeight(int16_t height)
    {
        rect.height = height;
 8001cc0:	8141      	strh	r1, [r0, #10]
    }
 8001cc2:	4770      	bx	lr

08001cc4 <_ZN8touchgfx8Drawable20childGeometryChangedEv>:
     * one or more of its children has changed. Currently only used in ScrollableContainer
     * to redraw scrollbars when the size of the scrolling contents changes.
     */
    virtual void childGeometryChanged()
    {
    }
 8001cc4:	4770      	bx	lr

08001cc6 <_ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE>:
     * @param  event The ClickEvent received from the HAL.
     */
    virtual void handleClickEvent(const ClickEvent& event)
    {
        (void)event; // Unused variable
    }
 8001cc6:	4770      	bx	lr

08001cc8 <_ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE>:
     * @param  event The GestureEvent received from the HAL.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
    {
        (void)event; // Unused variable
    }
 8001cc8:	4770      	bx	lr

08001cca <_ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE>:
     * @param  event The DragEvent received from the HAL.
     */
    virtual void handleDragEvent(const DragEvent& event)
    {
        (void)event; // Unused variable
    }
 8001cca:	4770      	bx	lr

08001ccc <_ZN8touchgfx8Drawable15handleTickEventEv>:
     *
     * @see Application::registerTimerWidget
     */
    virtual void handleTickEvent()
    {
    }
 8001ccc:	4770      	bx	lr

08001cce <_ZN8touchgfx8Drawable6moveToEss>:
     *
     * @see moveRelative, setXY
     *
     * @note Will redraw the appropriate areas of the screen.
     */
    virtual void moveTo(int16_t x, int16_t y)
 8001cce:	b410      	push	{r4}
    {
        moveRelative(x - rect.x, y - rect.y);
 8001cd0:	88c4      	ldrh	r4, [r0, #6]
 8001cd2:	6803      	ldr	r3, [r0, #0]
 8001cd4:	1b12      	subs	r2, r2, r4
 8001cd6:	8884      	ldrh	r4, [r0, #4]
 8001cd8:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8001cda:	1b09      	subs	r1, r1, r4
 8001cdc:	b212      	sxth	r2, r2
    }
 8001cde:	f85d 4b04 	ldr.w	r4, [sp], #4
        moveRelative(x - rect.x, y - rect.y);
 8001ce2:	b209      	sxth	r1, r1
 8001ce4:	4718      	bx	r3

08001ce6 <_ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_>:
     * @note For TouchGFX internal use only.
     */
    void resetDrawChainCache()
    {
        // Resetting the cached indicators
        cachedVisibleRect.x = UNCACHED_INDICATOR;
 8001ce6:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 8001cea:	8183      	strh	r3, [r0, #12]
        cachedAbsX = UNCACHED_INDICATOR;
 8001cec:	f04f 33ff 	mov.w	r3, #4294967295
 8001cf0:	6203      	str	r3, [r0, #32]
     */
    virtual void setupDrawChain(const Rect& invalidatedArea, Drawable** nextPreviousElement)
    {
        (void)invalidatedArea; // Unused variable
        resetDrawChainCache();
        nextDrawChainElement = *nextPreviousElement;
 8001cf2:	6813      	ldr	r3, [r2, #0]
 8001cf4:	61c3      	str	r3, [r0, #28]
        *nextPreviousElement = this;
 8001cf6:	6010      	str	r0, [r2, #0]
    }
 8001cf8:	4770      	bx	lr

08001cfa <_ZNK8touchgfx15AbstractPainter18getRenderingMethodEv>:
     * @return HARDWARE if painter uses hardware based drawing, SOFTWARE otherwise.
     */
    virtual HAL::RenderingMethod getRenderingMethod() const
    {
        return HAL::SOFTWARE;
    }
 8001cfa:	2000      	movs	r0, #0
 8001cfc:	4770      	bx	lr

08001cfe <_ZNK8touchgfx15AbstractPainter5setupERKNS_4RectE>:
     *
     * @see AbstractPainter::paint, AbstractPainter::tearDown
     */
    virtual bool setup(const Rect& widgetRect) const
    {
        widgetWidth = widgetRect.width;
 8001cfe:	888b      	ldrh	r3, [r1, #4]
 8001d00:	8083      	strh	r3, [r0, #4]
        return true;
    }
 8001d02:	2001      	movs	r0, #1
 8001d04:	4770      	bx	lr

08001d06 <_ZNK8touchgfx15AbstractPainter8tearDownEv>:
     * @see AbstractPainter::paint, AbstractPainter::setup
     */
    virtual void tearDown() const
    {
        return;
    }
 8001d06:	4770      	bx	lr

08001d08 <_ZN8touchgfx12CanvasWidget8setAlphaEh>:
    }

    /** @copydoc Image::setAlpha */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 8001d08:	f880 1026 	strb.w	r1, [r0, #38]	@ 0x26
    }
 8001d0c:	4770      	bx	lr

08001d0e <_ZNK8touchgfx12CanvasWidget8getAlphaEv>:

    /** @copydoc Image::getAlpha() */
    virtual uint8_t getAlpha() const
    {
        return alpha;
    }
 8001d0e:	f890 0026 	ldrb.w	r0, [r0, #38]	@ 0x26
 8001d12:	4770      	bx	lr

08001d14 <_ZNK8touchgfx12CanvasWidget14getMinimalRectEv>:
     * overwritten in subclasses and return the minimal rectangle containing the shape. See
     * classes such as Circle for example implementations.
     *
     * @return The minimal rectangle containing the shape drawn.
     */
    virtual Rect getMinimalRect() const
 8001d14:	b510      	push	{r4, lr}
     * @param  rectY      The y coordinate.
     * @param  rectWidth  The width.
     * @param  rectHeight The height.
     */
    Rect(int16_t rectX, int16_t rectY, int16_t rectWidth, int16_t rectHeight)
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 8001d16:	2200      	movs	r2, #0
        return rect.width;
 8001d18:	f9b1 4008 	ldrsh.w	r4, [r1, #8]
        return rect.height;
 8001d1c:	f9b1 100a 	ldrsh.w	r1, [r1, #10]
 8001d20:	8002      	strh	r2, [r0, #0]
 8001d22:	8042      	strh	r2, [r0, #2]
 8001d24:	8084      	strh	r4, [r0, #4]
 8001d26:	80c1      	strh	r1, [r0, #6]
    {
        return Rect(0, 0, getWidth(), getHeight());
    }
 8001d28:	bd10      	pop	{r4, pc}

08001d2a <_ZNK8touchgfx12CanvasWidget12getSolidRectEv>:
        : x(0), y(0), width(0), height(0)
 8001d2a:	2200      	movs	r2, #0
 8001d2c:	8002      	strh	r2, [r0, #0]
 8001d2e:	8042      	strh	r2, [r0, #2]
 8001d30:	8082      	strh	r2, [r0, #4]
 8001d32:	80c2      	strh	r2, [r0, #6]
     *       lines will not be drawn and may cause strange display artifacts.
     */
    virtual Rect getSolidRect() const
    {
        return Rect();
    }
 8001d34:	4770      	bx	lr

08001d36 <_ZN8touchgfx17CWRVectorRenderer7setModeENS_14VectorRenderer8DrawModeE>:
     *
     * @param mode The filling mode.
     */
    virtual void setMode(DrawMode mode)
    {
        drawMode = mode;
 8001d36:	7701      	strb	r1, [r0, #28]
    }
 8001d38:	4770      	bx	lr

08001d3a <_ZN8touchgfx17CWRVectorRenderer19setStrokeMiterLimitEf>:

    virtual void setStrokeMiterLimit(float miterLimit)
    {
        strokeMiterLimit = miterLimit;
 8001d3a:	ed80 0a08 	vstr	s0, [r0, #32]
    }
 8001d3e:	4770      	bx	lr

08001d40 <_ZN8touchgfx17CWRVectorRenderer17setStrokeLineJoinENS_16VGStrokeLineJoinE>:

    virtual void setStrokeLineJoin(VGStrokeLineJoin lineJoin)
    {
        strokeLineJoin = lineJoin;
 8001d40:	f880 1024 	strb.w	r1, [r0, #36]	@ 0x24
    }
 8001d44:	4770      	bx	lr

08001d46 <_ZN8touchgfx17CWRVectorRenderer16setStrokeLineCapENS_15VGStrokeLineCapE>:

    virtual void setStrokeLineCap(VGStrokeLineCap lineCap)
    {
        strokeLineCap = lineCap;
 8001d46:	f880 1025 	strb.w	r1, [r0, #37]	@ 0x25
    }
 8001d4a:	4770      	bx	lr

08001d4c <_ZNK8touchgfx17CWRVectorRenderer17CanvasWidgetProxy16drawCanvasWidgetERKNS_4RectE>:
    class CanvasWidgetProxy : public CanvasWidget
    {
        virtual bool drawCanvasWidget(const Rect& invalidatedArea) const
        {
            return true;
        }
 8001d4c:	2001      	movs	r0, #1
 8001d4e:	4770      	bx	lr

08001d50 <_ZN8touchgfx23CWRVectorRendererRGB56516getLinearPainterEv>:
class CWRVectorRendererRGB565 : public CWRVectorRenderer
{
    virtual AbstractPainterLinearGradient& getLinearPainter()
    {
        return linearPainter;
    }
 8001d50:	3098      	adds	r0, #152	@ 0x98
 8001d52:	4770      	bx	lr

08001d54 <_ZN8touchgfx23CWRVectorRendererRGB56520getColorPainterColorEv>:

    virtual AbstractPainterColor& getColorPainterColor()
    {
        return colorPainter;
    }
 8001d54:	308c      	adds	r0, #140	@ 0x8c
 8001d56:	4770      	bx	lr

08001d58 <_ZN8touchgfx23CWRVectorRendererRGB56515getColorPainterEv>:

    virtual AbstractPainter& getColorPainter()
    {
        return colorPainter;
    }
 8001d58:	3084      	adds	r0, #132	@ 0x84
 8001d5a:	4770      	bx	lr

08001d5c <_ZN8touchgfx17CWRVectorRenderer17CanvasWidgetProxyD1Ev>:
    class CanvasWidgetProxy : public CanvasWidget
 8001d5c:	4770      	bx	lr

08001d5e <_ZN8touchgfx23CWRVectorRendererRGB565D1Ev>:
class CWRVectorRendererRGB565 : public CWRVectorRenderer
 8001d5e:	4770      	bx	lr

08001d60 <__tcf_1>:

namespace touchgfx
{
VectorRenderer* VectorRenderer::getInstance()
{
    static CWRVectorRendererRGB565 renderer;
 8001d60:	4770      	bx	lr
	...

08001d64 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>:
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8001d64:	4b03      	ldr	r3, [pc, #12]	@ (8001d74 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv+0x10>)
 8001d66:	2290      	movs	r2, #144	@ 0x90
 8001d68:	f883 235a 	strb.w	r2, [r3, #858]	@ 0x35a
 8001d6c:	f883 2358 	strb.w	r2, [r3, #856]	@ 0x358

void TouchGFXGeneratedHAL::configureInterrupts()
{
    NVIC_SetPriority(DMA2D_IRQn, 9);
    NVIC_SetPriority(LTDC_IRQn, 9);
}
 8001d70:	4770      	bx	lr
 8001d72:	bf00      	nop
 8001d74:	e000e100 	.word	0xe000e100

08001d78 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>:
    NVIC_DisableIRQ(LTDC_IRQn);
}

void TouchGFXGeneratedHAL::enableLCDControllerInterrupt()
{
    lcd_int_active_line = (LTDC->BPCR & LTDC_BPCR_AVBP_Msk) - 1;
 8001d78:	4a09      	ldr	r2, [pc, #36]	@ (8001da0 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x28>)
 8001d7a:	490a      	ldr	r1, [pc, #40]	@ (8001da4 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x2c>)
 8001d7c:	68d3      	ldr	r3, [r2, #12]
    lcd_int_porch_line = (LTDC->AWCR & LTDC_AWCR_AAH_Msk) - 1;
 8001d7e:	480a      	ldr	r0, [pc, #40]	@ (8001da8 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x30>)
    lcd_int_active_line = (LTDC->BPCR & LTDC_BPCR_AVBP_Msk) - 1;
 8001d80:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8001d84:	3b01      	subs	r3, #1
 8001d86:	b29b      	uxth	r3, r3
 8001d88:	800b      	strh	r3, [r1, #0]
    lcd_int_porch_line = (LTDC->AWCR & LTDC_AWCR_AAH_Msk) - 1;
 8001d8a:	6911      	ldr	r1, [r2, #16]
 8001d8c:	f3c1 010a 	ubfx	r1, r1, #0, #11
 8001d90:	3901      	subs	r1, #1
 8001d92:	8001      	strh	r1, [r0, #0]

    /* Sets the Line Interrupt position */
    LTDC->LIPCR = lcd_int_active_line;
 8001d94:	6413      	str	r3, [r2, #64]	@ 0x40
    /* Line Interrupt Enable            */
    LTDC->IER |= LTDC_IER_LIE;
 8001d96:	6b53      	ldr	r3, [r2, #52]	@ 0x34
 8001d98:	f043 0301 	orr.w	r3, r3, #1
 8001d9c:	6353      	str	r3, [r2, #52]	@ 0x34
}
 8001d9e:	4770      	bx	lr
 8001da0:	40016800 	.word	0x40016800
 8001da4:	200018ea 	.word	0x200018ea
 8001da8:	200018e8 	.word	0x200018e8

08001dac <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>:
    HAL::endFrame();
}

uint16_t* TouchGFXGeneratedHAL::getTFTFrameBuffer() const
{
    return (uint16_t*)LTDC_Layer1->CFBAR;
 8001dac:	4b01      	ldr	r3, [pc, #4]	@ (8001db4 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv+0x8>)
 8001dae:	f8d3 00ac 	ldr.w	r0, [r3, #172]	@ 0xac
}
 8001db2:	4770      	bx	lr
 8001db4:	40016800 	.word	0x40016800

08001db8 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>:

void TouchGFXGeneratedHAL::setTFTFrameBuffer(uint16_t* adr)
{
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 8001db8:	4b02      	ldr	r3, [pc, #8]	@ (8001dc4 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt+0xc>)

    /* Reload immediate */
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 8001dba:	2201      	movs	r2, #1
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 8001dbc:	f8c3 10ac 	str.w	r1, [r3, #172]	@ 0xac
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 8001dc0:	625a      	str	r2, [r3, #36]	@ 0x24
}
 8001dc2:	4770      	bx	lr
 8001dc4:	40016800 	.word	0x40016800

08001dc8 <_ZN8touchgfx17CWRVectorRenderer17CanvasWidgetProxyD0Ev>:
    class CanvasWidgetProxy : public CanvasWidget
 8001dc8:	b510      	push	{r4, lr}
 8001dca:	212c      	movs	r1, #44	@ 0x2c
 8001dcc:	4604      	mov	r4, r0
 8001dce:	f01f ffaa 	bl	8021d26 <_ZdlPvj>
 8001dd2:	4620      	mov	r0, r4
 8001dd4:	bd10      	pop	{r4, pc}

08001dd6 <_ZN8touchgfx23CWRVectorRendererRGB565D0Ev>:
class CWRVectorRendererRGB565 : public CWRVectorRenderer
 8001dd6:	b510      	push	{r4, lr}
 8001dd8:	21bc      	movs	r1, #188	@ 0xbc
 8001dda:	4604      	mov	r4, r0
 8001ddc:	f01f ffa3 	bl	8021d26 <_ZdlPvj>
 8001de0:	4620      	mov	r0, r4
 8001de2:	bd10      	pop	{r4, pc}

08001de4 <_ZN20TouchGFXGeneratedHAL10initializeEv>:
{
 8001de4:	b570      	push	{r4, r5, r6, lr}
 8001de6:	4604      	mov	r4, r0
    HAL::initialize();
 8001de8:	f009 fa4b 	bl	800b282 <_ZN8touchgfx3HAL10initializeEv>
    registerEventListener(*(Application::getInstance()));
 8001dec:	6823      	ldr	r3, [r4, #0]
 8001dee:	6e9d      	ldr	r5, [r3, #104]	@ 0x68
 8001df0:	f00d fd90 	bl	800f914 <_ZN8touchgfx11Application11getInstanceEv>
 8001df4:	4601      	mov	r1, r0
 8001df6:	4620      	mov	r0, r4
 8001df8:	47a8      	blx	r5
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
 8001dfa:	6823      	ldr	r3, [r4, #0]
 8001dfc:	4a05      	ldr	r2, [pc, #20]	@ (8001e14 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x30>)
 8001dfe:	f8d3 508c 	ldr.w	r5, [r3, #140]	@ 0x8c
 8001e02:	4620      	mov	r0, r4
 8001e04:	46ac      	mov	ip, r5
 8001e06:	2300      	movs	r3, #0
}
 8001e08:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
 8001e0c:	f5a2 3116 	sub.w	r1, r2, #153600	@ 0x25800
 8001e10:	4760      	bx	ip
 8001e12:	bf00      	nop
 8001e14:	d004b000 	.word	0xd004b000

08001e18 <_ZN20TouchGFXGeneratedHAL10beginFrameEv>:
    return HAL::beginFrame();
 8001e18:	f009 ba1a 	b.w	800b250 <_ZN8touchgfx3HAL10beginFrameEv>

08001e1c <_ZN20TouchGFXGeneratedHAL8endFrameEv>:
    HAL::endFrame();
 8001e1c:	f009 ba24 	b.w	800b268 <_ZN8touchgfx3HAL8endFrameEv>

08001e20 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>:

void TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
    HAL::flushFrameBuffer(rect);
 8001e20:	f009 b9e0 	b.w	800b1e4 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>

08001e24 <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>:
}

bool TouchGFXGeneratedHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
    return HAL::blockCopy(dest, src, numBytes);
 8001e24:	f009 bb4f 	b.w	800b4c6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm>

08001e28 <_ZNK8touchgfx8Drawable17invalidateContentEv>:
        if (visible)
 8001e28:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
 8001e2c:	b112      	cbz	r2, 8001e34 <_ZNK8touchgfx8Drawable17invalidateContentEv+0xc>
            invalidate();
 8001e2e:	6803      	ldr	r3, [r0, #0]
 8001e30:	695b      	ldr	r3, [r3, #20]
 8001e32:	4718      	bx	r3
    }
 8001e34:	4770      	bx	lr

08001e36 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE>:
     *
     * @param [out] last Result, the address of the actual instance of the Widget.
     */
    virtual void getLastChild(int16_t /*x*/, int16_t /*y*/, Drawable** last)
    {
        if (isVisible() && isTouchable())
 8001e36:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
 8001e3a:	b11a      	cbz	r2, 8001e44 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
 8001e3c:	f890 2024 	ldrb.w	r2, [r0, #36]	@ 0x24
 8001e40:	b102      	cbz	r2, 8001e44 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
        {
            *last = this;
 8001e42:	6018      	str	r0, [r3, #0]
        }
    }
 8001e44:	4770      	bx	lr
	...

08001e48 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>:
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001e48:	4b03      	ldr	r3, [pc, #12]	@ (8001e58 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv+0x10>)
 8001e4a:	f04f 6280 	mov.w	r2, #67108864	@ 0x4000000
 8001e4e:	609a      	str	r2, [r3, #8]
 8001e50:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 8001e54:	609a      	str	r2, [r3, #8]
}
 8001e56:	4770      	bx	lr
 8001e58:	e000e100 	.word	0xe000e100

08001e5c <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>:
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001e5c:	4b08      	ldr	r3, [pc, #32]	@ (8001e80 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv+0x24>)
 8001e5e:	f04f 6280 	mov.w	r2, #67108864	@ 0x4000000
 8001e62:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
  __ASM volatile ("dsb 0xF":::"memory");
 8001e66:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8001e6a:	f3bf 8f6f 	isb	sy
 8001e6e:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 8001e72:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
  __ASM volatile ("dsb 0xF":::"memory");
 8001e76:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8001e7a:	f3bf 8f6f 	isb	sy
}
 8001e7e:	4770      	bx	lr
 8001e80:	e000e100 	.word	0xe000e100

08001e84 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>:
public:
    static const uint16_t RMASK = 0xF800; ///< Mask for red   (1111100000000000)
    static const uint16_t GMASK = 0x07E0; ///< Mask for green (0000011111100000)
    static const uint16_t BMASK = 0x001F; ///< Mask for blue  (0000000000011111)

    AbstractPainterRGB565()
 8001e84:	b570      	push	{r4, r5, r6, lr}
        : widgetWidth(0)
 8001e86:	2300      	movs	r3, #0
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 8001e88:	4e12      	ldr	r6, [pc, #72]	@ (8001ed4 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x50>)
 8001e8a:	8083      	strh	r3, [r0, #4]
        : AbstractPainter()
 8001e8c:	4b12      	ldr	r3, [pc, #72]	@ (8001ed8 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x54>)
 8001e8e:	6003      	str	r3, [r0, #0]
 8001e90:	6833      	ldr	r3, [r6, #0]
 8001e92:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
    AbstractPainterRGB565()
 8001e96:	4605      	mov	r5, r0
 8001e98:	b10a      	cbz	r2, 8001e9e <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x1a>
 8001e9a:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 8001e9c:	b900      	cbnz	r0, 8001ea0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x1c>
        return instance->lcdRef;
 8001e9e:	6898      	ldr	r0, [r3, #8]
     *
     * @return True if the format matches the framebuffer format, false otherwise.
     */
    FORCE_INLINE_FUNCTION static bool compatibleFramebuffer(Bitmap::BitmapFormat format)
    {
        bool compat = HAL::lcd().framebufferFormat() == format;
 8001ea0:	6803      	ldr	r3, [r0, #0]
 8001ea2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8001ea4:	4798      	blx	r3
        return auxiliaryLCD;
 8001ea6:	6833      	ldr	r3, [r6, #0]
 8001ea8:	fab0 f480 	clz	r4, r0
 8001eac:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 8001eae:	0964      	lsrs	r4, r4, #5
        if (HAL::getInstance()->getAuxiliaryLCD())
 8001eb0:	b130      	cbz	r0, 8001ec0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x3c>
        {
            compat |= HAL::getInstance()->getAuxiliaryLCD()->framebufferFormat() == format;
 8001eb2:	6803      	ldr	r3, [r0, #0]
 8001eb4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8001eb6:	4798      	blx	r3
 8001eb8:	2800      	cmp	r0, #0
 8001eba:	bf08      	it	eq
 8001ebc:	f044 0401 	orreq.w	r4, r4, #1
    {
        assert(compatibleFramebuffer(Bitmap::RGB565) && "The chosen painter only works with RGB565 displays");
 8001ec0:	b92c      	cbnz	r4, 8001ece <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x4a>
 8001ec2:	4b06      	ldr	r3, [pc, #24]	@ (8001edc <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x58>)
 8001ec4:	4a06      	ldr	r2, [pc, #24]	@ (8001ee0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x5c>)
 8001ec6:	4807      	ldr	r0, [pc, #28]	@ (8001ee4 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x60>)
 8001ec8:	212c      	movs	r1, #44	@ 0x2c
 8001eca:	f020 ff6b 	bl	8022da4 <__assert_func>
    }
 8001ece:	4628      	mov	r0, r5
 8001ed0:	bd70      	pop	{r4, r5, r6, pc}
 8001ed2:	bf00      	nop
 8001ed4:	200133d4 	.word	0x200133d4
 8001ed8:	08024ab0 	.word	0x08024ab0
 8001edc:	0802420b 	.word	0x0802420b
 8001ee0:	08024269 	.word	0x08024269
 8001ee4:	080242a2 	.word	0x080242a2

08001ee8 <_ZN8touchgfx14VectorRenderer11getInstanceEv>:
{
 8001ee8:	b570      	push	{r4, r5, r6, lr}
    static CWRVectorRendererRGB565 renderer;
 8001eea:	4e25      	ldr	r6, [pc, #148]	@ (8001f80 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x98>)
 8001eec:	6835      	ldr	r5, [r6, #0]
 8001eee:	f3bf 8f5b 	dmb	ish
 8001ef2:	f015 0501 	ands.w	r5, r5, #1
 8001ef6:	d140      	bne.n	8001f7a <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x92>
 8001ef8:	4630      	mov	r0, r6
 8001efa:	f01f ff16 	bl	8021d2a <__cxa_guard_acquire>
 8001efe:	2800      	cmp	r0, #0
 8001f00:	d03b      	beq.n	8001f7a <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x92>
class CWRVectorRenderer : public VectorRenderer
 8001f02:	4c20      	ldr	r4, [pc, #128]	@ (8001f84 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x9c>)
 8001f04:	4b20      	ldr	r3, [pc, #128]	@ (8001f88 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0xa0>)
 8001f06:	6125      	str	r5, [r4, #16]
 8001f08:	f104 0034 	add.w	r0, r4, #52	@ 0x34
 8001f0c:	e9c4 3500 	strd	r3, r5, [r4]
 8001f10:	e9c4 5502 	strd	r5, r5, [r4, #8]
 8001f14:	84e5      	strh	r5, [r4, #38]	@ 0x26
 8001f16:	62a5      	str	r5, [r4, #40]	@ 0x28
 8001f18:	85a5      	strh	r5, [r4, #44]	@ 0x2c
 8001f1a:	f00f fa48 	bl	80113ae <_ZN8touchgfx9Matrix3x3C1Ev>
    class CanvasWidgetProxy : public CanvasWidget
 8001f1e:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 8001f22:	f00b fd35 	bl	800d990 <_ZN8touchgfx12CanvasWidgetC1Ev>
 8001f26:	4b19      	ldr	r3, [pc, #100]	@ (8001f8c <_ZN8touchgfx14VectorRenderer11getInstanceEv+0xa4>)
 8001f28:	65a3      	str	r3, [r4, #88]	@ 0x58
class CWRVectorRendererRGB565 : public CWRVectorRenderer
 8001f2a:	4620      	mov	r0, r4
 8001f2c:	4b18      	ldr	r3, [pc, #96]	@ (8001f90 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0xa8>)
 8001f2e:	f840 3b84 	str.w	r3, [r0], #132
     * Initializes a new instance of the PainterRGB565 class.
     *
     * @param  color (Optional) the color, default is black.
     */
    PainterRGB565(colortype color = 0)
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8001f32:	f7ff ffa7 	bl	8001e84 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8001f36:	4b17      	ldr	r3, [pc, #92]	@ (8001f94 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0xac>)
 8001f38:	f8c4 3084 	str.w	r3, [r4, #132]	@ 0x84
 8001f3c:	3324      	adds	r3, #36	@ 0x24
 8001f3e:	f8c4 308c 	str.w	r3, [r4, #140]	@ 0x8c
class AbstractPainterLinearGradient : public AbstractPainter
{
public:
    /** Constructor. */
    AbstractPainterLinearGradient()
        : AbstractPainter(),
 8001f42:	f44f 03c8 	mov.w	r3, #6553600	@ 0x640000
          coord0(0), coord1(100), texture(0), isSolid(false), isVertical(false), isHorizontal(false), clSlope(0.0f), clOffset(0.0f), horizontalDistance(0.0f), deltaColor(0.0f)
 8001f46:	e9c4 3528 	strd	r3, r5, [r4, #160]	@ 0xa0
 8001f4a:	2300      	movs	r3, #0
 8001f4c:	f8c4 30ac 	str.w	r3, [r4, #172]	@ 0xac
 8001f50:	f8c4 30b0 	str.w	r3, [r4, #176]	@ 0xb0
 8001f54:	f8c4 30b4 	str.w	r3, [r4, #180]	@ 0xb4
 8001f58:	f8c4 30b8 	str.w	r3, [r4, #184]	@ 0xb8
 8001f5c:	480e      	ldr	r0, [pc, #56]	@ (8001f98 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0xb0>)
 * An abstract class for creating painter classes for drawing canvas widgets. All canvas widgets
 * need a painter to fill the shape drawn with a CanvasWidgetRenderer. The painter must provide
 * the color of a pixel on a given coordinate, which will the be blended into the framebuffer
 * depending on the position of the canvas widget and the transparency of the given pixel.
 */
class PainterRGB565LinearGradient : public AbstractPainterLinearGradient
 8001f5e:	4b0f      	ldr	r3, [pc, #60]	@ (8001f9c <_ZN8touchgfx14VectorRenderer11getInstanceEv+0xb4>)
     *
     * @param  color The color.
     */
    virtual void setColor(colortype color)
    {
        painterColor = color;
 8001f60:	f8c4 5090 	str.w	r5, [r4, #144]	@ 0x90
        : AbstractPainter(),
 8001f64:	f8c4 509c 	str.w	r5, [r4, #156]	@ 0x9c
 8001f68:	f8c4 50a8 	str.w	r5, [r4, #168]	@ 0xa8
 8001f6c:	f8c4 3098 	str.w	r3, [r4, #152]	@ 0x98
 8001f70:	f020 ff36 	bl	8022de0 <atexit>
 8001f74:	4630      	mov	r0, r6
 8001f76:	f01f fee4 	bl	8021d42 <__cxa_guard_release>
}
 8001f7a:	4802      	ldr	r0, [pc, #8]	@ (8001f84 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x9c>)
 8001f7c:	bd70      	pop	{r4, r5, r6, pc}
 8001f7e:	bf00      	nop
 8001f80:	200018ec 	.word	0x200018ec
 8001f84:	200018f0 	.word	0x200018f0
 8001f88:	08025080 	.word	0x08025080
 8001f8c:	08024ad0 	.word	0x08024ad0
 8001f90:	08024b48 	.word	0x08024b48
 8001f94:	08025034 	.word	0x08025034
 8001f98:	08001d61 	.word	0x08001d61
 8001f9c:	08025014 	.word	0x08025014

08001fa0 <HAL_LTDC_LineEventCallback>:
}

extern "C"
{
    void HAL_LTDC_LineEventCallback(LTDC_HandleTypeDef* hltdc)
    {
 8001fa0:	b538      	push	{r3, r4, r5, lr}
        return instance;
 8001fa2:	4c18      	ldr	r4, [pc, #96]	@ (8002004 <HAL_LTDC_LineEventCallback+0x64>)
        if (!HAL::getInstance())
 8001fa4:	6823      	ldr	r3, [r4, #0]
 8001fa6:	b35b      	cbz	r3, 8002000 <HAL_LTDC_LineEventCallback+0x60>
        {
            return;
        }

        if (LTDC->LIPCR == lcd_int_active_line)
 8001fa8:	4b17      	ldr	r3, [pc, #92]	@ (8002008 <HAL_LTDC_LineEventCallback+0x68>)
 8001faa:	4a18      	ldr	r2, [pc, #96]	@ (800200c <HAL_LTDC_LineEventCallback+0x6c>)
 8001fac:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001fae:	8811      	ldrh	r1, [r2, #0]
 8001fb0:	428b      	cmp	r3, r1
 8001fb2:	d116      	bne.n	8001fe2 <HAL_LTDC_LineEventCallback+0x42>
        {
            //entering active area
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_porch_line);
 8001fb4:	4b16      	ldr	r3, [pc, #88]	@ (8002010 <HAL_LTDC_LineEventCallback+0x70>)
 8001fb6:	8819      	ldrh	r1, [r3, #0]
 8001fb8:	f003 fc20 	bl	80057fc <HAL_LTDC_ProgramLineEvent>
 8001fbc:	6823      	ldr	r3, [r4, #0]
        vSyncCnt++;
 8001fbe:	f893 206a 	ldrb.w	r2, [r3, #106]	@ 0x6a
        isFrontPorchEntered = false;
 8001fc2:	2500      	movs	r5, #0
        vSyncCnt++;
 8001fc4:	3201      	adds	r2, #1
 8001fc6:	f883 206a 	strb.w	r2, [r3, #106]	@ 0x6a
        isFrontPorchEntered = false;
 8001fca:	f883 507c 	strb.w	r5, [r3, #124]	@ 0x7c
            HAL::getInstance()->vSync();
            OSWrappers::signalVSync();
 8001fce:	f7ff fab7 	bl	8001540 <_ZN8touchgfx10OSWrappers11signalVSyncEv>

            // Swap frame buffers immediately instead of waiting for the task to be scheduled in.
            // Note: task will also swap when it wakes up, but that operation is guarded and will not have
            // any effect if already swapped.
            HAL::getInstance()->swapFrameBuffers();
 8001fd2:	6820      	ldr	r0, [r4, #0]
 8001fd4:	f009 fed2 	bl	800bd7c <_ZN8touchgfx3HAL16swapFrameBuffersEv>
            GPIO::set(GPIO::VSYNC_FREQ);
 8001fd8:	4628      	mov	r0, r5

            // Signal to the framework that display update has finished.
            HAL::getInstance()->frontPorchEntered();
            GPIO::clear(GPIO::VSYNC_FREQ);
        }
    }
 8001fda:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
            GPIO::set(GPIO::VSYNC_FREQ);
 8001fde:	f7ff b8f7 	b.w	80011d0 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_active_line);
 8001fe2:	f003 fc0b 	bl	80057fc <HAL_LTDC_ProgramLineEvent>
        return instance;
 8001fe6:	6824      	ldr	r4, [r4, #0]
        allowDMATransfers();
 8001fe8:	6823      	ldr	r3, [r4, #0]
 8001fea:	4620      	mov	r0, r4
 8001fec:	6a1b      	ldr	r3, [r3, #32]
 8001fee:	4798      	blx	r3
        isFrontPorchEntered = true;
 8001ff0:	2301      	movs	r3, #1
 8001ff2:	f884 307c 	strb.w	r3, [r4, #124]	@ 0x7c
            GPIO::clear(GPIO::VSYNC_FREQ);
 8001ff6:	2000      	movs	r0, #0
    }
 8001ff8:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
            GPIO::clear(GPIO::VSYNC_FREQ);
 8001ffc:	f7ff b912 	b.w	8001224 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
    }
 8002000:	bd38      	pop	{r3, r4, r5, pc}
 8002002:	bf00      	nop
 8002004:	200133d4 	.word	0x200133d4
 8002008:	40016800 	.word	0x40016800
 800200c:	200018ea 	.word	0x200018ea
 8002010:	200018e8 	.word	0x200018e8

08002014 <MX_USB_DEVICE_Init>:
/**
  * Init USB device Library, add supported class and start the library
  * @retval None
  */
void MX_USB_DEVICE_Init(void)
{
 8002014:	b508      	push	{r3, lr}
  /* USER CODE BEGIN USB_DEVICE_Init_PreTreatment */

  /* USER CODE END USB_DEVICE_Init_PreTreatment */

  /* Init Device Library, add supported class and start the library. */
  if (USBD_Init(&hUsbDeviceHS, &HS_Desc, DEVICE_HS) != USBD_OK)
 8002016:	490c      	ldr	r1, [pc, #48]	@ (8002048 <MX_USB_DEVICE_Init+0x34>)
 8002018:	480c      	ldr	r0, [pc, #48]	@ (800204c <MX_USB_DEVICE_Init+0x38>)
 800201a:	2201      	movs	r2, #1
 800201c:	f008 f8d0 	bl	800a1c0 <USBD_Init>
 8002020:	b108      	cbz	r0, 8002026 <MX_USB_DEVICE_Init+0x12>
  {
    Error_Handler();
 8002022:	f000 fd7d 	bl	8002b20 <Error_Handler>
  }
  if (USBD_RegisterClass(&hUsbDeviceHS, &USBD_HID) != USBD_OK)
 8002026:	490a      	ldr	r1, [pc, #40]	@ (8002050 <MX_USB_DEVICE_Init+0x3c>)
 8002028:	4808      	ldr	r0, [pc, #32]	@ (800204c <MX_USB_DEVICE_Init+0x38>)
 800202a:	f008 f8dc 	bl	800a1e6 <USBD_RegisterClass>
 800202e:	b108      	cbz	r0, 8002034 <MX_USB_DEVICE_Init+0x20>
  {
    Error_Handler();
 8002030:	f000 fd76 	bl	8002b20 <Error_Handler>
  }
  if (USBD_Start(&hUsbDeviceHS) != USBD_OK)
 8002034:	4805      	ldr	r0, [pc, #20]	@ (800204c <MX_USB_DEVICE_Init+0x38>)
 8002036:	f008 f8ef 	bl	800a218 <USBD_Start>
 800203a:	b118      	cbz	r0, 8002044 <MX_USB_DEVICE_Init+0x30>
  }

  /* USER CODE BEGIN USB_DEVICE_Init_PostTreatment */

  /* USER CODE END USB_DEVICE_Init_PostTreatment */
}
 800203c:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    Error_Handler();
 8002040:	f000 bd6e 	b.w	8002b20 <Error_Handler>
}
 8002044:	bd08      	pop	{r3, pc}
 8002046:	bf00      	nop
 8002048:	20000040 	.word	0x20000040
 800204c:	200019ac 	.word	0x200019ac
 8002050:	2000015c 	.word	0x2000015c

08002054 <USBD_HS_DeviceDescriptor>:
  * @retval Pointer to descriptor buffer
  */
uint8_t * USBD_HS_DeviceDescriptor(USBD_SpeedTypeDef speed, uint16_t *length)
{
  UNUSED(speed);
  *length = sizeof(USBD_HS_DeviceDesc);
 8002054:	2312      	movs	r3, #18
  return USBD_HS_DeviceDesc;
}
 8002056:	4801      	ldr	r0, [pc, #4]	@ (800205c <USBD_HS_DeviceDescriptor+0x8>)
  *length = sizeof(USBD_HS_DeviceDesc);
 8002058:	800b      	strh	r3, [r1, #0]
}
 800205a:	4770      	bx	lr
 800205c:	2000002c 	.word	0x2000002c

08002060 <USBD_HS_LangIDStrDescriptor>:
  * @retval Pointer to descriptor buffer
  */
uint8_t * USBD_HS_LangIDStrDescriptor(USBD_SpeedTypeDef speed, uint16_t *length)
{
  UNUSED(speed);
  *length = sizeof(USBD_LangIDDesc);
 8002060:	2304      	movs	r3, #4
  return USBD_LangIDDesc;
}
 8002062:	4801      	ldr	r0, [pc, #4]	@ (8002068 <USBD_HS_LangIDStrDescriptor+0x8>)
  *length = sizeof(USBD_LangIDDesc);
 8002064:	800b      	strh	r3, [r1, #0]
}
 8002066:	4770      	bx	lr
 8002068:	20000028 	.word	0x20000028

0800206c <IntToUnicode>:
  * @param  pbuf: pointer to the buffer
  * @param  len: buffer length
  * @retval None
  */
static void IntToUnicode(uint32_t value, uint8_t * pbuf, uint8_t len)
{
 800206c:	2300      	movs	r3, #0
 800206e:	b570      	push	{r4, r5, r6, lr}
      pbuf[2 * idx] = (value >> 28) + 'A' - 10;
    }

    value = value << 4;

    pbuf[2 * idx + 1] = 0;
 8002070:	1c4d      	adds	r5, r1, #1
 8002072:	461e      	mov	r6, r3
      pbuf[2 * idx] = (value >> 28) + '0';
 8002074:	0f04      	lsrs	r4, r0, #28
    if (((value >> 28)) < 0xA)
 8002076:	f1b0 4f20 	cmp.w	r0, #2684354560	@ 0xa0000000
      pbuf[2 * idx] = (value >> 28) + '0';
 800207a:	bf34      	ite	cc
 800207c:	3430      	addcc	r4, #48	@ 0x30
      pbuf[2 * idx] = (value >> 28) + 'A' - 10;
 800207e:	3437      	addcs	r4, #55	@ 0x37
      pbuf[2 * idx] = (value >> 28) + '0';
 8002080:	f801 4013 	strb.w	r4, [r1, r3, lsl #1]
    pbuf[2 * idx + 1] = 0;
 8002084:	f805 6013 	strb.w	r6, [r5, r3, lsl #1]
  for (idx = 0; idx < len; idx++)
 8002088:	3301      	adds	r3, #1
 800208a:	b2dc      	uxtb	r4, r3
 800208c:	42a2      	cmp	r2, r4
    value = value << 4;
 800208e:	ea4f 1000 	mov.w	r0, r0, lsl #4
  for (idx = 0; idx < len; idx++)
 8002092:	d8ef      	bhi.n	8002074 <IntToUnicode+0x8>
  }
}
 8002094:	bd70      	pop	{r4, r5, r6, pc}
	...

08002098 <USBD_HS_SerialStrDescriptor>:
  *length = USB_SIZ_STRING_SERIAL;
 8002098:	231a      	movs	r3, #26
{
 800209a:	b510      	push	{r4, lr}
  *length = USB_SIZ_STRING_SERIAL;
 800209c:	800b      	strh	r3, [r1, #0]
  deviceserial0 = *(uint32_t *) DEVICE_ID1;
 800209e:	4b0a      	ldr	r3, [pc, #40]	@ (80020c8 <USBD_HS_SerialStrDescriptor+0x30>)
 80020a0:	f8d3 0a10 	ldr.w	r0, [r3, #2576]	@ 0xa10
  deviceserial0 += deviceserial2;
 80020a4:	f8d3 2a18 	ldr.w	r2, [r3, #2584]	@ 0xa18
  if (deviceserial0 != 0)
 80020a8:	1880      	adds	r0, r0, r2
 80020aa:	d00a      	beq.n	80020c2 <USBD_HS_SerialStrDescriptor+0x2a>
  deviceserial1 = *(uint32_t *) DEVICE_ID2;
 80020ac:	f8d3 4a14 	ldr.w	r4, [r3, #2580]	@ 0xa14
    IntToUnicode(deviceserial0, &USBD_StringSerial[2], 8);
 80020b0:	4906      	ldr	r1, [pc, #24]	@ (80020cc <USBD_HS_SerialStrDescriptor+0x34>)
 80020b2:	2208      	movs	r2, #8
 80020b4:	f7ff ffda 	bl	800206c <IntToUnicode>
    IntToUnicode(deviceserial1, &USBD_StringSerial[18], 4);
 80020b8:	2204      	movs	r2, #4
 80020ba:	3110      	adds	r1, #16
 80020bc:	4620      	mov	r0, r4
 80020be:	f7ff ffd5 	bl	800206c <IntToUnicode>
}
 80020c2:	4803      	ldr	r0, [pc, #12]	@ (80020d0 <USBD_HS_SerialStrDescriptor+0x38>)
 80020c4:	bd10      	pop	{r4, pc}
 80020c6:	bf00      	nop
 80020c8:	1fff7000 	.word	0x1fff7000
 80020cc:	2000000e 	.word	0x2000000e
 80020d0:	2000000c 	.word	0x2000000c

080020d4 <USBD_HS_ManufacturerStrDescriptor>:
{
 80020d4:	b510      	push	{r4, lr}
  USBD_GetString((uint8_t *)USBD_MANUFACTURER_STRING, USBD_StrDesc, length);
 80020d6:	4c04      	ldr	r4, [pc, #16]	@ (80020e8 <USBD_HS_ManufacturerStrDescriptor+0x14>)
 80020d8:	4804      	ldr	r0, [pc, #16]	@ (80020ec <USBD_HS_ManufacturerStrDescriptor+0x18>)
{
 80020da:	460a      	mov	r2, r1
  USBD_GetString((uint8_t *)USBD_MANUFACTURER_STRING, USBD_StrDesc, length);
 80020dc:	4621      	mov	r1, r4
 80020de:	f008 fc61 	bl	800a9a4 <USBD_GetString>
}
 80020e2:	4620      	mov	r0, r4
 80020e4:	bd10      	pop	{r4, pc}
 80020e6:	bf00      	nop
 80020e8:	20001c88 	.word	0x20001c88
 80020ec:	08024304 	.word	0x08024304

080020f0 <USBD_HS_ProductStrDescriptor>:
{
 80020f0:	b510      	push	{r4, lr}
    USBD_GetString((uint8_t *)USBD_PRODUCT_STRING_HS, USBD_StrDesc, length);
 80020f2:	4c04      	ldr	r4, [pc, #16]	@ (8002104 <USBD_HS_ProductStrDescriptor+0x14>)
 80020f4:	4804      	ldr	r0, [pc, #16]	@ (8002108 <USBD_HS_ProductStrDescriptor+0x18>)
{
 80020f6:	460a      	mov	r2, r1
    USBD_GetString((uint8_t *)USBD_PRODUCT_STRING_HS, USBD_StrDesc, length);
 80020f8:	4621      	mov	r1, r4
 80020fa:	f008 fc53 	bl	800a9a4 <USBD_GetString>
}
 80020fe:	4620      	mov	r0, r4
 8002100:	bd10      	pop	{r4, pc}
 8002102:	bf00      	nop
 8002104:	20001c88 	.word	0x20001c88
 8002108:	08024317 	.word	0x08024317

0800210c <USBD_HS_ConfigStrDescriptor>:
{
 800210c:	b510      	push	{r4, lr}
    USBD_GetString((uint8_t *)USBD_CONFIGURATION_STRING_HS, USBD_StrDesc, length);
 800210e:	4c04      	ldr	r4, [pc, #16]	@ (8002120 <USBD_HS_ConfigStrDescriptor+0x14>)
 8002110:	4804      	ldr	r0, [pc, #16]	@ (8002124 <USBD_HS_ConfigStrDescriptor+0x18>)
{
 8002112:	460a      	mov	r2, r1
    USBD_GetString((uint8_t *)USBD_CONFIGURATION_STRING_HS, USBD_StrDesc, length);
 8002114:	4621      	mov	r1, r4
 8002116:	f008 fc45 	bl	800a9a4 <USBD_GetString>
}
 800211a:	4620      	mov	r0, r4
 800211c:	bd10      	pop	{r4, pc}
 800211e:	bf00      	nop
 8002120:	20001c88 	.word	0x20001c88
 8002124:	0802432d 	.word	0x0802432d

08002128 <USBD_HS_InterfaceStrDescriptor>:
{
 8002128:	b510      	push	{r4, lr}
    USBD_GetString((uint8_t *)USBD_INTERFACE_STRING_HS, USBD_StrDesc, length);
 800212a:	4c04      	ldr	r4, [pc, #16]	@ (800213c <USBD_HS_InterfaceStrDescriptor+0x14>)
 800212c:	4804      	ldr	r0, [pc, #16]	@ (8002140 <USBD_HS_InterfaceStrDescriptor+0x18>)
{
 800212e:	460a      	mov	r2, r1
    USBD_GetString((uint8_t *)USBD_INTERFACE_STRING_HS, USBD_StrDesc, length);
 8002130:	4621      	mov	r1, r4
 8002132:	f008 fc37 	bl	800a9a4 <USBD_GetString>
}
 8002136:	4620      	mov	r0, r4
 8002138:	bd10      	pop	{r4, pc}
 800213a:	bf00      	nop
 800213c:	20001c88 	.word	0x20001c88
 8002140:	08024338 	.word	0x08024338

08002144 <HAL_PCD_MspInit>:
                       LL Driver Callbacks (PCD -> USB Device Library)
*******************************************************************************/
/* MSP Init */

void HAL_PCD_MspInit(PCD_HandleTypeDef* pcdHandle)
{
 8002144:	b530      	push	{r4, r5, lr}
 8002146:	4604      	mov	r4, r0
 8002148:	b089      	sub	sp, #36	@ 0x24
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800214a:	2214      	movs	r2, #20
 800214c:	2100      	movs	r1, #0
 800214e:	a803      	add	r0, sp, #12
 8002150:	f021 f82f 	bl	80231b2 <memset>
  if(pcdHandle->Instance==USB_OTG_HS)
 8002154:	6822      	ldr	r2, [r4, #0]
 8002156:	4b1c      	ldr	r3, [pc, #112]	@ (80021c8 <HAL_PCD_MspInit+0x84>)
 8002158:	429a      	cmp	r2, r3
 800215a:	d133      	bne.n	80021c4 <HAL_PCD_MspInit+0x80>
  {
  /* USER CODE BEGIN USB_OTG_HS_MspInit 0 */

  /* USER CODE END USB_OTG_HS_MspInit 0 */

    __HAL_RCC_GPIOB_CLK_ENABLE();
 800215c:	4c1b      	ldr	r4, [pc, #108]	@ (80021cc <HAL_PCD_MspInit+0x88>)
    PB15     ------> USB_OTG_HS_DP
    */
    GPIO_InitStruct.Pin = GPIO_PIN_13;
    GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800215e:	481c      	ldr	r0, [pc, #112]	@ (80021d0 <HAL_PCD_MspInit+0x8c>)
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8002160:	2500      	movs	r5, #0
 8002162:	9501      	str	r5, [sp, #4]
 8002164:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8002166:	f043 0302 	orr.w	r3, r3, #2
 800216a:	6323      	str	r3, [r4, #48]	@ 0x30
 800216c:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 800216e:	f003 0302 	and.w	r3, r3, #2
 8002172:	9301      	str	r3, [sp, #4]
 8002174:	9b01      	ldr	r3, [sp, #4]
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002176:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Pin = GPIO_PIN_13;
 8002178:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
 800217c:	9303      	str	r3, [sp, #12]
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800217e:	f002 fc4b 	bl	8004a18 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_14|GPIO_PIN_15;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002182:	f44f 4240 	mov.w	r2, #49152	@ 0xc000
 8002186:	2302      	movs	r3, #2
 8002188:	e9cd 2303 	strd	r2, r3, [sp, #12]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF12_OTG_HS_FS;
 800218c:	2103      	movs	r1, #3
 800218e:	230c      	movs	r3, #12
 8002190:	e9cd 1306 	strd	r1, r3, [sp, #24]
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002194:	480e      	ldr	r0, [pc, #56]	@ (80021d0 <HAL_PCD_MspInit+0x8c>)
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002196:	9505      	str	r5, [sp, #20]
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002198:	eb0d 0103 	add.w	r1, sp, r3
 800219c:	f002 fc3c 	bl	8004a18 <HAL_GPIO_Init>

    /* Peripheral clock enable */
    __HAL_RCC_USB_OTG_HS_CLK_ENABLE();
 80021a0:	9502      	str	r5, [sp, #8]
 80021a2:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 80021a4:	f043 5300 	orr.w	r3, r3, #536870912	@ 0x20000000
 80021a8:	6323      	str	r3, [r4, #48]	@ 0x30
 80021aa:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 80021ac:	f003 5300 	and.w	r3, r3, #536870912	@ 0x20000000
 80021b0:	9302      	str	r3, [sp, #8]

    /* Peripheral interrupt init */
    HAL_NVIC_SetPriority(OTG_HS_IRQn, 5, 0);
 80021b2:	204d      	movs	r0, #77	@ 0x4d
 80021b4:	462a      	mov	r2, r5
 80021b6:	2105      	movs	r1, #5
    __HAL_RCC_USB_OTG_HS_CLK_ENABLE();
 80021b8:	9b02      	ldr	r3, [sp, #8]
    HAL_NVIC_SetPriority(OTG_HS_IRQn, 5, 0);
 80021ba:	f002 fae3 	bl	8004784 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(OTG_HS_IRQn);
 80021be:	204d      	movs	r0, #77	@ 0x4d
 80021c0:	f002 fb12 	bl	80047e8 <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN USB_OTG_HS_MspInit 1 */

  /* USER CODE END USB_OTG_HS_MspInit 1 */
  }
}
 80021c4:	b009      	add	sp, #36	@ 0x24
 80021c6:	bd30      	pop	{r4, r5, pc}
 80021c8:	40040000 	.word	0x40040000
 80021cc:	40023800 	.word	0x40023800
 80021d0:	40020400 	.word	0x40020400

080021d4 <HAL_PCD_SetupStageCallback>:
static void PCD_SetupStageCallback(PCD_HandleTypeDef *hpcd)
#else
void HAL_PCD_SetupStageCallback(PCD_HandleTypeDef *hpcd)
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
{
  USBD_LL_SetupStage((USBD_HandleTypeDef*)hpcd->pData, (uint8_t *)hpcd->Setup);
 80021d4:	f200 419c 	addw	r1, r0, #1180	@ 0x49c
 80021d8:	f8d0 04e0 	ldr.w	r0, [r0, #1248]	@ 0x4e0
 80021dc:	f008 b82e 	b.w	800a23c <USBD_LL_SetupStage>

080021e0 <HAL_PCD_DataOutStageCallback>:
static void PCD_DataOutStageCallback(PCD_HandleTypeDef *hpcd, uint8_t epnum)
#else
void HAL_PCD_DataOutStageCallback(PCD_HandleTypeDef *hpcd, uint8_t epnum)
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
{
  USBD_LL_DataOutStage((USBD_HandleTypeDef*)hpcd->pData, epnum, hpcd->OUT_ep[epnum].xfer_buff);
 80021e0:	2324      	movs	r3, #36	@ 0x24
 80021e2:	fb03 0301 	mla	r3, r3, r1, r0
 80021e6:	f8d0 04e0 	ldr.w	r0, [r0, #1248]	@ 0x4e0
 80021ea:	f8d3 2260 	ldr.w	r2, [r3, #608]	@ 0x260
 80021ee:	f008 b855 	b.w	800a29c <USBD_LL_DataOutStage>

080021f2 <HAL_PCD_DataInStageCallback>:
static void PCD_DataInStageCallback(PCD_HandleTypeDef *hpcd, uint8_t epnum)
#else
void HAL_PCD_DataInStageCallback(PCD_HandleTypeDef *hpcd, uint8_t epnum)
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
{
  USBD_LL_DataInStage((USBD_HandleTypeDef*)hpcd->pData, epnum, hpcd->IN_ep[epnum].xfer_buff);
 80021f2:	2324      	movs	r3, #36	@ 0x24
 80021f4:	fb03 0301 	mla	r3, r3, r1, r0
 80021f8:	f8d0 04e0 	ldr.w	r0, [r0, #1248]	@ 0x4e0
 80021fc:	6a1a      	ldr	r2, [r3, #32]
 80021fe:	f008 b882 	b.w	800a306 <USBD_LL_DataInStage>

08002202 <HAL_PCD_SOFCallback>:
static void PCD_SOFCallback(PCD_HandleTypeDef *hpcd)
#else
void HAL_PCD_SOFCallback(PCD_HandleTypeDef *hpcd)
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
{
  USBD_LL_SOF((USBD_HandleTypeDef*)hpcd->pData);
 8002202:	f8d0 04e0 	ldr.w	r0, [r0, #1248]	@ 0x4e0
 8002206:	f008 b91c 	b.w	800a442 <USBD_LL_SOF>

0800220a <HAL_PCD_ResetCallback>:
#if (USE_HAL_PCD_REGISTER_CALLBACKS == 1U)
static void PCD_ResetCallback(PCD_HandleTypeDef *hpcd)
#else
void HAL_PCD_ResetCallback(PCD_HandleTypeDef *hpcd)
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
{
 800220a:	b510      	push	{r4, lr}
  USBD_SpeedTypeDef speed = USBD_SPEED_FULL;

  if ( hpcd->Init.speed == PCD_SPEED_HIGH)
 800220c:	79c1      	ldrb	r1, [r0, #7]
{
 800220e:	4604      	mov	r4, r0
  if ( hpcd->Init.speed == PCD_SPEED_HIGH)
 8002210:	b121      	cbz	r1, 800221c <HAL_PCD_ResetCallback+0x12>
  {
    speed = USBD_SPEED_HIGH;
  }
  else if ( hpcd->Init.speed == PCD_SPEED_FULL)
 8002212:	2902      	cmp	r1, #2
 8002214:	d001      	beq.n	800221a <HAL_PCD_ResetCallback+0x10>
  {
    speed = USBD_SPEED_FULL;
  }
  else
  {
    Error_Handler();
 8002216:	f000 fc83 	bl	8002b20 <Error_Handler>
    speed = USBD_SPEED_FULL;
 800221a:	2101      	movs	r1, #1
  }
    /* Set Speed. */
  USBD_LL_SetSpeed((USBD_HandleTypeDef*)hpcd->pData, speed);
 800221c:	f8d4 04e0 	ldr.w	r0, [r4, #1248]	@ 0x4e0
 8002220:	f008 f8f3 	bl	800a40a <USBD_LL_SetSpeed>

  /* Reset Device. */
  USBD_LL_Reset((USBD_HandleTypeDef*)hpcd->pData);
 8002224:	f8d4 04e0 	ldr.w	r0, [r4, #1248]	@ 0x4e0
}
 8002228:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  USBD_LL_Reset((USBD_HandleTypeDef*)hpcd->pData);
 800222c:	f008 b8be 	b.w	800a3ac <USBD_LL_Reset>

08002230 <HAL_PCD_SuspendCallback>:
#if (USE_HAL_PCD_REGISTER_CALLBACKS == 1U)
static void PCD_SuspendCallback(PCD_HandleTypeDef *hpcd)
#else
void HAL_PCD_SuspendCallback(PCD_HandleTypeDef *hpcd)
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
{
 8002230:	b510      	push	{r4, lr}
 8002232:	4604      	mov	r4, r0
  /* Inform USB library that core enters in suspend Mode. */
  USBD_LL_Suspend((USBD_HandleTypeDef*)hpcd->pData);
 8002234:	f8d0 04e0 	ldr.w	r0, [r0, #1248]	@ 0x4e0
 8002238:	f008 f8ea 	bl	800a410 <USBD_LL_Suspend>
  __HAL_PCD_GATE_PHYCLOCK(hpcd);
 800223c:	6822      	ldr	r2, [r4, #0]
 800223e:	f8d2 3e00 	ldr.w	r3, [r2, #3584]	@ 0xe00
 8002242:	f043 0301 	orr.w	r3, r3, #1
 8002246:	f8c2 3e00 	str.w	r3, [r2, #3584]	@ 0xe00
  /* Enter in STOP mode. */
  /* USER CODE BEGIN 2 */
  if (hpcd->Init.low_power_enable)
 800224a:	7ae3      	ldrb	r3, [r4, #11]
 800224c:	b123      	cbz	r3, 8002258 <HAL_PCD_SuspendCallback+0x28>
  {
    /* Set SLEEPDEEP bit and SleepOnExit of Cortex System Control Register. */
    SCB->SCR |= (uint32_t)((uint32_t)(SCB_SCR_SLEEPDEEP_Msk | SCB_SCR_SLEEPONEXIT_Msk));
 800224e:	4a03      	ldr	r2, [pc, #12]	@ (800225c <HAL_PCD_SuspendCallback+0x2c>)
 8002250:	6913      	ldr	r3, [r2, #16]
 8002252:	f043 0306 	orr.w	r3, r3, #6
 8002256:	6113      	str	r3, [r2, #16]
  }
  /* USER CODE END 2 */
}
 8002258:	bd10      	pop	{r4, pc}
 800225a:	bf00      	nop
 800225c:	e000ed00 	.word	0xe000ed00

08002260 <HAL_PCD_ResumeCallback>:
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
{
  /* USER CODE BEGIN 3 */

  /* USER CODE END 3 */
  USBD_LL_Resume((USBD_HandleTypeDef*)hpcd->pData);
 8002260:	f8d0 04e0 	ldr.w	r0, [r0, #1248]	@ 0x4e0
 8002264:	f008 b8e2 	b.w	800a42c <USBD_LL_Resume>

08002268 <HAL_PCD_ISOOUTIncompleteCallback>:
static void PCD_ISOOUTIncompleteCallback(PCD_HandleTypeDef *hpcd, uint8_t epnum)
#else
void HAL_PCD_ISOOUTIncompleteCallback(PCD_HandleTypeDef *hpcd, uint8_t epnum)
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
{
  USBD_LL_IsoOUTIncomplete((USBD_HandleTypeDef*)hpcd->pData, epnum);
 8002268:	f8d0 04e0 	ldr.w	r0, [r0, #1248]	@ 0x4e0
 800226c:	f008 b909 	b.w	800a482 <USBD_LL_IsoOUTIncomplete>

08002270 <HAL_PCD_ISOINIncompleteCallback>:
static void PCD_ISOINIncompleteCallback(PCD_HandleTypeDef *hpcd, uint8_t epnum)
#else
void HAL_PCD_ISOINIncompleteCallback(PCD_HandleTypeDef *hpcd, uint8_t epnum)
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
{
  USBD_LL_IsoINIncomplete((USBD_HandleTypeDef*)hpcd->pData, epnum);
 8002270:	f8d0 04e0 	ldr.w	r0, [r0, #1248]	@ 0x4e0
 8002274:	f008 b8f2 	b.w	800a45c <USBD_LL_IsoINIncomplete>

08002278 <HAL_PCD_ConnectCallback>:
static void PCD_ConnectCallback(PCD_HandleTypeDef *hpcd)
#else
void HAL_PCD_ConnectCallback(PCD_HandleTypeDef *hpcd)
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
{
  USBD_LL_DevConnected((USBD_HandleTypeDef*)hpcd->pData);
 8002278:	f8d0 04e0 	ldr.w	r0, [r0, #1248]	@ 0x4e0
 800227c:	f008 b914 	b.w	800a4a8 <USBD_LL_DevConnected>

08002280 <HAL_PCD_DisconnectCallback>:
static void PCD_DisconnectCallback(PCD_HandleTypeDef *hpcd)
#else
void HAL_PCD_DisconnectCallback(PCD_HandleTypeDef *hpcd)
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
{
  USBD_LL_DevDisconnected((USBD_HandleTypeDef*)hpcd->pData);
 8002280:	f8d0 04e0 	ldr.w	r0, [r0, #1248]	@ 0x4e0
 8002284:	f008 b912 	b.w	800a4ac <USBD_LL_DevDisconnected>

08002288 <USBD_LL_Init>:
  * @brief  Initializes the low level portion of the device driver.
  * @param  pdev: Device handle
  * @retval USBD status
  */
USBD_StatusTypeDef USBD_LL_Init(USBD_HandleTypeDef *pdev)
{
 8002288:	b508      	push	{r3, lr}
  /* Init USB Ip. */
  if (pdev->id == DEVICE_HS) {
 800228a:	7802      	ldrb	r2, [r0, #0]
 800228c:	2a01      	cmp	r2, #1
{
 800228e:	4603      	mov	r3, r0
  if (pdev->id == DEVICE_HS) {
 8002290:	d127      	bne.n	80022e2 <USBD_LL_Init+0x5a>
  /* Link the driver to the stack. */
  hpcd_USB_OTG_HS.pData = pdev;
 8002292:	4815      	ldr	r0, [pc, #84]	@ (80022e8 <USBD_LL_Init+0x60>)
 8002294:	f8c0 34e0 	str.w	r3, [r0, #1248]	@ 0x4e0
  pdev->pData = &hpcd_USB_OTG_HS;
 8002298:	f8c3 02c8 	str.w	r0, [r3, #712]	@ 0x2c8

  hpcd_USB_OTG_HS.Instance = USB_OTG_HS;
 800229c:	4b13      	ldr	r3, [pc, #76]	@ (80022ec <USBD_LL_Init+0x64>)
 800229e:	6003      	str	r3, [r0, #0]
  hpcd_USB_OTG_HS.Init.dev_endpoints = 6;
 80022a0:	2306      	movs	r3, #6
 80022a2:	7103      	strb	r3, [r0, #4]
  hpcd_USB_OTG_HS.Init.speed = PCD_SPEED_FULL;
  hpcd_USB_OTG_HS.Init.dma_enable = DISABLE;
 80022a4:	f44f 7300 	mov.w	r3, #512	@ 0x200
 80022a8:	80c3      	strh	r3, [r0, #6]
  hpcd_USB_OTG_HS.Init.phy_itface = USB_OTG_EMBEDDED_PHY;
 80022aa:	2302      	movs	r3, #2
 80022ac:	7243      	strb	r3, [r0, #9]
  hpcd_USB_OTG_HS.Init.Sof_enable = DISABLE;
 80022ae:	2300      	movs	r3, #0
 80022b0:	8143      	strh	r3, [r0, #10]
  hpcd_USB_OTG_HS.Init.low_power_enable = DISABLE;
  hpcd_USB_OTG_HS.Init.lpm_enable = DISABLE;
 80022b2:	7303      	strb	r3, [r0, #12]
  hpcd_USB_OTG_HS.Init.vbus_sensing_enable = ENABLE;
 80022b4:	81c2      	strh	r2, [r0, #14]
  hpcd_USB_OTG_HS.Init.use_dedicated_ep1 = DISABLE;
  hpcd_USB_OTG_HS.Init.use_external_vbus = DISABLE;
 80022b6:	7403      	strb	r3, [r0, #16]
  if (HAL_PCD_Init(&hpcd_USB_OTG_HS) != HAL_OK)
 80022b8:	f003 fabe 	bl	8005838 <HAL_PCD_Init>
 80022bc:	b108      	cbz	r0, 80022c2 <USBD_LL_Init+0x3a>
  {
    Error_Handler( );
 80022be:	f000 fc2f 	bl	8002b20 <Error_Handler>
  HAL_PCD_RegisterDataOutStageCallback(&hpcd_USB_OTG_HS, PCD_DataOutStageCallback);
  HAL_PCD_RegisterDataInStageCallback(&hpcd_USB_OTG_HS, PCD_DataInStageCallback);
  HAL_PCD_RegisterIsoOutIncpltCallback(&hpcd_USB_OTG_HS, PCD_ISOOUTIncompleteCallback);
  HAL_PCD_RegisterIsoInIncpltCallback(&hpcd_USB_OTG_HS, PCD_ISOINIncompleteCallback);
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
  HAL_PCDEx_SetRxFiFo(&hpcd_USB_OTG_HS, 0x200);
 80022c2:	f44f 7100 	mov.w	r1, #512	@ 0x200
 80022c6:	4808      	ldr	r0, [pc, #32]	@ (80022e8 <USBD_LL_Init+0x60>)
 80022c8:	f003 ffdb 	bl	8006282 <HAL_PCDEx_SetRxFiFo>
  HAL_PCDEx_SetTxFiFo(&hpcd_USB_OTG_HS, 0, 0x80);
 80022cc:	2280      	movs	r2, #128	@ 0x80
 80022ce:	2100      	movs	r1, #0
 80022d0:	4805      	ldr	r0, [pc, #20]	@ (80022e8 <USBD_LL_Init+0x60>)
 80022d2:	f003 ffb7 	bl	8006244 <HAL_PCDEx_SetTxFiFo>
  HAL_PCDEx_SetTxFiFo(&hpcd_USB_OTG_HS, 1, 0x174);
 80022d6:	4804      	ldr	r0, [pc, #16]	@ (80022e8 <USBD_LL_Init+0x60>)
 80022d8:	f44f 72ba 	mov.w	r2, #372	@ 0x174
 80022dc:	2101      	movs	r1, #1
 80022de:	f003 ffb1 	bl	8006244 <HAL_PCDEx_SetTxFiFo>
  }
  return USBD_OK;
}
 80022e2:	2000      	movs	r0, #0
 80022e4:	bd08      	pop	{r3, pc}
 80022e6:	bf00      	nop
 80022e8:	20001e9c 	.word	0x20001e9c
 80022ec:	40040000 	.word	0x40040000

080022f0 <USBD_LL_IsStallEP>:
  */
uint8_t USBD_LL_IsStallEP(USBD_HandleTypeDef *pdev, uint8_t ep_addr)
{
  PCD_HandleTypeDef *hpcd = (PCD_HandleTypeDef*) pdev->pData;

  if((ep_addr & 0x80) == 0x80)
 80022f0:	f011 0f80 	tst.w	r1, #128	@ 0x80
  PCD_HandleTypeDef *hpcd = (PCD_HandleTypeDef*) pdev->pData;
 80022f4:	f8d0 32c8 	ldr.w	r3, [r0, #712]	@ 0x2c8
  if((ep_addr & 0x80) == 0x80)
 80022f8:	f04f 0224 	mov.w	r2, #36	@ 0x24
  {
    return hpcd->IN_ep[ep_addr & 0x7F].is_stall;
 80022fc:	bf1b      	ittet	ne
 80022fe:	f001 017f 	andne.w	r1, r1, #127	@ 0x7f
 8002302:	fb02 3301 	mlane	r3, r2, r1, r3
  }
  else
  {
    return hpcd->OUT_ep[ep_addr & 0x7F].is_stall;
 8002306:	fb02 3301 	mlaeq	r3, r2, r1, r3
    return hpcd->IN_ep[ep_addr & 0x7F].is_stall;
 800230a:	7d98      	ldrbne	r0, [r3, #22]
    return hpcd->OUT_ep[ep_addr & 0x7F].is_stall;
 800230c:	bf08      	it	eq
 800230e:	f893 0256 	ldrbeq.w	r0, [r3, #598]	@ 0x256
  }
}
 8002312:	4770      	bx	lr

08002314 <USBD_static_malloc>:
  */
void *USBD_static_malloc(uint32_t size)
{
  static uint32_t mem[(sizeof(USBD_HID_HandleTypeDef)/4)+1];/* On 32-bit boundary */
  return mem;
}
 8002314:	4800      	ldr	r0, [pc, #0]	@ (8002318 <USBD_static_malloc+0x4>)
 8002316:	4770      	bx	lr
 8002318:	20001e88 	.word	0x20001e88

0800231c <USBD_static_free>:
  * @retval None
  */
void USBD_static_free(void *p)
{

}
 800231c:	4770      	bx	lr

0800231e <USBD_Get_USB_Status>:
  */
USBD_StatusTypeDef USBD_Get_USB_Status(HAL_StatusTypeDef hal_status)
{
  USBD_StatusTypeDef usb_status = USBD_OK;

  switch (hal_status)
 800231e:	b118      	cbz	r0, 8002328 <USBD_Get_USB_Status+0xa>
 8002320:	2802      	cmp	r0, #2
 8002322:	bf0c      	ite	eq
 8002324:	2001      	moveq	r0, #1
 8002326:	2003      	movne	r0, #3
    default :
      usb_status = USBD_FAIL;
    break;
  }
  return usb_status;
}
 8002328:	4770      	bx	lr

0800232a <USBD_LL_Start>:
{
 800232a:	b508      	push	{r3, lr}
  hal_status = HAL_PCD_Start(pdev->pData);
 800232c:	f8d0 02c8 	ldr.w	r0, [r0, #712]	@ 0x2c8
 8002330:	f003 faf1 	bl	8005916 <HAL_PCD_Start>
}
 8002334:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  usb_status =  USBD_Get_USB_Status(hal_status);
 8002338:	f7ff bff1 	b.w	800231e <USBD_Get_USB_Status>

0800233c <USBD_LL_OpenEP>:
{
 800233c:	b510      	push	{r4, lr}
 800233e:	4614      	mov	r4, r2
  hal_status = HAL_PCD_EP_Open(pdev->pData, ep_addr, ep_mps, ep_type);
 8002340:	f8d0 02c8 	ldr.w	r0, [r0, #712]	@ 0x2c8
{
 8002344:	461a      	mov	r2, r3
  hal_status = HAL_PCD_EP_Open(pdev->pData, ep_addr, ep_mps, ep_type);
 8002346:	4623      	mov	r3, r4
 8002348:	f003 fb17 	bl	800597a <HAL_PCD_EP_Open>
}
 800234c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  usb_status =  USBD_Get_USB_Status(hal_status);
 8002350:	f7ff bfe5 	b.w	800231e <USBD_Get_USB_Status>

08002354 <USBD_LL_CloseEP>:
{
 8002354:	b508      	push	{r3, lr}
  hal_status = HAL_PCD_EP_Close(pdev->pData, ep_addr);
 8002356:	f8d0 02c8 	ldr.w	r0, [r0, #712]	@ 0x2c8
 800235a:	f003 fb47 	bl	80059ec <HAL_PCD_EP_Close>
}
 800235e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  usb_status =  USBD_Get_USB_Status(hal_status);
 8002362:	f7ff bfdc 	b.w	800231e <USBD_Get_USB_Status>

08002366 <USBD_LL_StallEP>:
{
 8002366:	b508      	push	{r3, lr}
  hal_status = HAL_PCD_EP_SetStall(pdev->pData, ep_addr);
 8002368:	f8d0 02c8 	ldr.w	r0, [r0, #712]	@ 0x2c8
 800236c:	f003 fba5 	bl	8005aba <HAL_PCD_EP_SetStall>
}
 8002370:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  usb_status =  USBD_Get_USB_Status(hal_status);
 8002374:	f7ff bfd3 	b.w	800231e <USBD_Get_USB_Status>

08002378 <USBD_LL_ClearStallEP>:
{
 8002378:	b508      	push	{r3, lr}
  hal_status = HAL_PCD_EP_ClrStall(pdev->pData, ep_addr);
 800237a:	f8d0 02c8 	ldr.w	r0, [r0, #712]	@ 0x2c8
 800237e:	f003 fbd3 	bl	8005b28 <HAL_PCD_EP_ClrStall>
}
 8002382:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  usb_status =  USBD_Get_USB_Status(hal_status);
 8002386:	f7ff bfca 	b.w	800231e <USBD_Get_USB_Status>

0800238a <USBD_LL_SetUSBAddress>:
{
 800238a:	b508      	push	{r3, lr}
  hal_status = HAL_PCD_SetAddress(pdev->pData, dev_addr);
 800238c:	f8d0 02c8 	ldr.w	r0, [r0, #712]	@ 0x2c8
 8002390:	f003 fae0 	bl	8005954 <HAL_PCD_SetAddress>
}
 8002394:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  usb_status =  USBD_Get_USB_Status(hal_status);
 8002398:	f7ff bfc1 	b.w	800231e <USBD_Get_USB_Status>

0800239c <USBD_LL_Transmit>:
{
 800239c:	b508      	push	{r3, lr}
  hal_status = HAL_PCD_EP_Transmit(pdev->pData, ep_addr, pbuf, size);
 800239e:	f8d0 02c8 	ldr.w	r0, [r0, #712]	@ 0x2c8
 80023a2:	f003 fb6f 	bl	8005a84 <HAL_PCD_EP_Transmit>
}
 80023a6:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  usb_status =  USBD_Get_USB_Status(hal_status);
 80023aa:	f7ff bfb8 	b.w	800231e <USBD_Get_USB_Status>

080023ae <USBD_LL_PrepareReceive>:
{
 80023ae:	b508      	push	{r3, lr}
  hal_status = HAL_PCD_EP_Receive(pdev->pData, ep_addr, pbuf, size);
 80023b0:	f8d0 02c8 	ldr.w	r0, [r0, #712]	@ 0x2c8
 80023b4:	f003 fb48 	bl	8005a48 <HAL_PCD_EP_Receive>
}
 80023b8:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  usb_status =  USBD_Get_USB_Status(hal_status);
 80023bc:	f7ff bfaf 	b.w	800231e <USBD_Get_USB_Status>

080023c0 <SPI5_Write>:
/**
  * @brief  Writes a byte to device.
  * @param  Value: value to be written
  */
static void SPI5_Write(uint16_t Value)
{
 80023c0:	b507      	push	{r0, r1, r2, lr}
  HAL_StatusTypeDef status = HAL_OK;

  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 80023c2:	4b06      	ldr	r3, [pc, #24]	@ (80023dc <SPI5_Write+0x1c>)
{
 80023c4:	f8ad 0006 	strh.w	r0, [sp, #6]
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 80023c8:	681b      	ldr	r3, [r3, #0]
 80023ca:	4805      	ldr	r0, [pc, #20]	@ (80023e0 <SPI5_Write+0x20>)
 80023cc:	2201      	movs	r2, #1
 80023ce:	f10d 0106 	add.w	r1, sp, #6
 80023d2:	f004 fca9 	bl	8006d28 <HAL_SPI_Transmit>
  if(status != HAL_OK)
  {
    /* Re-Initialize the BUS */
    SPI5_Error();
  }
}
 80023d6:	b003      	add	sp, #12
 80023d8:	f85d fb04 	ldr.w	pc, [sp], #4
 80023dc:	2000005c 	.word	0x2000005c
 80023e0:	200023cc 	.word	0x200023cc

080023e4 <StartDefaultTask>:
  * @param  argument: Not used
  * @retval None
  */
/* USER CODE END Header_StartDefaultTask */
void StartDefaultTask(void *argument)
{
 80023e4:	b508      	push	{r3, lr}
  /* init code for USB_DEVICE */
  MX_USB_DEVICE_Init();
 80023e6:	f7ff fe15 	bl	8002014 <MX_USB_DEVICE_Init>
  /* USER CODE BEGIN 5 */
  /* Infinite loop */
  for(;;)
  {
    osDelay(100);
 80023ea:	2064      	movs	r0, #100	@ 0x64
 80023ec:	f005 fe74 	bl	80080d8 <osDelay>
  for(;;)
 80023f0:	e7fb      	b.n	80023ea <StartDefaultTask+0x6>
	...

080023f4 <StartTask03>:
* @param argument: Not used
* @retval None
*/
/* USER CODE END Header_StartTask03 */
void StartTask03(void *argument)
{
 80023f4:	b507      	push	{r0, r1, r2, lr}
  for (;;)
  {
    if (osMessageQueueGetCount(myQueue01Handle) > 0)
 80023f6:	4d2f      	ldr	r5, [pc, #188]	@ (80024b4 <StartTask03+0xc0>)
    {
      uint8_t data;
      osMessageQueueGet(myQueue01Handle, &data, NULL, osWaitForever);

      // Reset trạng thái trước mỗi lệnh mới
      mousehid.button = 0x00;
 80023f8:	4c2f      	ldr	r4, [pc, #188]	@ (80024b8 <StartTask03+0xc4>)
    if (osMessageQueueGetCount(myQueue01Handle) > 0)
 80023fa:	6828      	ldr	r0, [r5, #0]
 80023fc:	f005 ffbc 	bl	8008378 <osMessageQueueGetCount>
 8002400:	b1f8      	cbz	r0, 8002442 <StartTask03+0x4e>
      osMessageQueueGet(myQueue01Handle, &data, NULL, osWaitForever);
 8002402:	f04f 33ff 	mov.w	r3, #4294967295
 8002406:	6828      	ldr	r0, [r5, #0]
 8002408:	2200      	movs	r2, #0
 800240a:	f10d 0107 	add.w	r1, sp, #7
 800240e:	f005 ff83 	bl	8008318 <osMessageQueueGet>
      mousehid.button = 0x00;
 8002412:	2300      	movs	r3, #0
 8002414:	7023      	strb	r3, [r4, #0]
      mousehid.mouse_x = 0;
 8002416:	7063      	strb	r3, [r4, #1]
      mousehid.mouse_y = 0;
 8002418:	70a3      	strb	r3, [r4, #2]
      mousehid.wheel = 0;
 800241a:	70e3      	strb	r3, [r4, #3]

      switch (data)
 800241c:	f89d 3007 	ldrb.w	r3, [sp, #7]
 8002420:	2b57      	cmp	r3, #87	@ 0x57
 8002422:	d805      	bhi.n	8002430 <StartTask03+0x3c>
 8002424:	2b4b      	cmp	r3, #75	@ 0x4b
 8002426:	d810      	bhi.n	800244a <StartTask03+0x56>
 8002428:	2b41      	cmp	r3, #65	@ 0x41
 800242a:	d03e      	beq.n	80024aa <StartTask03+0xb6>
 800242c:	2b44      	cmp	r3, #68	@ 0x44
 800242e:	d03f      	beq.n	80024b0 <StartTask03+0xbc>
          USBD_HID_SendReport(&hUsbDeviceHS, (uint8_t *)&mousehid, sizeof(mousehid));
          break;

        default:
        	mousehid.button = 0x00;
        	USBD_HID_SendReport(&hUsbDeviceHS, (uint8_t *)&mousehid, sizeof(mousehid));
 8002430:	4822      	ldr	r0, [pc, #136]	@ (80024bc <StartTask03+0xc8>)
 8002432:	2204      	movs	r2, #4
 8002434:	4621      	mov	r1, r4
 8002436:	f008 fbb6 	bl	800aba6 <USBD_HID_SendReport>
          break;
      }

      // Reset lại sau mỗi lần gửi để tránh giữ tọa độ cũ
      mousehid.mouse_x = 0;
 800243a:	2300      	movs	r3, #0
 800243c:	7063      	strb	r3, [r4, #1]
      mousehid.mouse_y = 0;
 800243e:	70a3      	strb	r3, [r4, #2]
      mousehid.wheel = 0;
 8002440:	70e3      	strb	r3, [r4, #3]
    }

    osDelay(1);
 8002442:	2001      	movs	r0, #1
 8002444:	f005 fe48 	bl	80080d8 <osDelay>
    if (osMessageQueueGetCount(myQueue01Handle) > 0)
 8002448:	e7d7      	b.n	80023fa <StartTask03+0x6>
      switch (data)
 800244a:	3b4c      	subs	r3, #76	@ 0x4c
 800244c:	2b0b      	cmp	r3, #11
 800244e:	d8ef      	bhi.n	8002430 <StartTask03+0x3c>
 8002450:	a201      	add	r2, pc, #4	@ (adr r2, 8002458 <StartTask03+0x64>)
 8002452:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8002456:	bf00      	nop
 8002458:	08002489 	.word	0x08002489
 800245c:	08002431 	.word	0x08002431
 8002460:	08002431 	.word	0x08002431
 8002464:	08002431 	.word	0x08002431
 8002468:	08002431 	.word	0x08002431
 800246c:	08002431 	.word	0x08002431
 8002470:	0800249d 	.word	0x0800249d
 8002474:	080024a7 	.word	0x080024a7
 8002478:	08002431 	.word	0x08002431
 800247c:	08002431 	.word	0x08002431
 8002480:	08002431 	.word	0x08002431
 8002484:	080024a1 	.word	0x080024a1
          mousehid.button = 0x01;
 8002488:	2301      	movs	r3, #1
          USBD_HID_SendReport(&hUsbDeviceHS, (uint8_t *)&mousehid, sizeof(mousehid));
 800248a:	480c      	ldr	r0, [pc, #48]	@ (80024bc <StartTask03+0xc8>)
          mousehid.button = 0x02;
 800248c:	7023      	strb	r3, [r4, #0]
          USBD_HID_SendReport(&hUsbDeviceHS, (uint8_t *)&mousehid, sizeof(mousehid));
 800248e:	2204      	movs	r2, #4
 8002490:	4621      	mov	r1, r4
 8002492:	f008 fb88 	bl	800aba6 <USBD_HID_SendReport>
          mousehid.button = 0x00; // release
 8002496:	2300      	movs	r3, #0
 8002498:	7023      	strb	r3, [r4, #0]
          USBD_HID_SendReport(&hUsbDeviceHS, (uint8_t *)&mousehid, sizeof(mousehid));
 800249a:	e7c9      	b.n	8002430 <StartTask03+0x3c>
          mousehid.button = 0x02;
 800249c:	2302      	movs	r3, #2
 800249e:	e7f4      	b.n	800248a <StartTask03+0x96>
          mousehid.mouse_y = -5;
 80024a0:	23fb      	movs	r3, #251	@ 0xfb
          mousehid.mouse_y = 5;
 80024a2:	70a3      	strb	r3, [r4, #2]
          USBD_HID_SendReport(&hUsbDeviceHS, (uint8_t *)&mousehid, sizeof(mousehid));
 80024a4:	e7c4      	b.n	8002430 <StartTask03+0x3c>
          mousehid.mouse_y = 5;
 80024a6:	2305      	movs	r3, #5
 80024a8:	e7fb      	b.n	80024a2 <StartTask03+0xae>
          mousehid.mouse_x = -5;
 80024aa:	23fb      	movs	r3, #251	@ 0xfb
          mousehid.mouse_x = 5;
 80024ac:	7063      	strb	r3, [r4, #1]
          USBD_HID_SendReport(&hUsbDeviceHS, (uint8_t *)&mousehid, sizeof(mousehid));
 80024ae:	e7bf      	b.n	8002430 <StartTask03+0x3c>
          mousehid.mouse_x = 5;
 80024b0:	2305      	movs	r3, #5
 80024b2:	e7fb      	b.n	80024ac <StartTask03+0xb8>
 80024b4:	20002388 	.word	0x20002388
 80024b8:	20002568 	.word	0x20002568
 80024bc:	200019ac 	.word	0x200019ac

080024c0 <SystemClock_Config>:
{
 80024c0:	b530      	push	{r4, r5, lr}
 80024c2:	b095      	sub	sp, #84	@ 0x54
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 80024c4:	2210      	movs	r2, #16
 80024c6:	2100      	movs	r1, #0
 80024c8:	a80a      	add	r0, sp, #40	@ 0x28
 80024ca:	f020 fe72 	bl	80231b2 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 80024ce:	2214      	movs	r2, #20
 80024d0:	2100      	movs	r1, #0
 80024d2:	a803      	add	r0, sp, #12
 80024d4:	f020 fe6d 	bl	80231b2 <memset>
  __HAL_RCC_PWR_CLK_ENABLE();
 80024d8:	2400      	movs	r4, #0
 80024da:	4b1d      	ldr	r3, [pc, #116]	@ (8002550 <SystemClock_Config+0x90>)
 80024dc:	9401      	str	r4, [sp, #4]
 80024de:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 80024e0:	f042 5280 	orr.w	r2, r2, #268435456	@ 0x10000000
 80024e4:	641a      	str	r2, [r3, #64]	@ 0x40
 80024e6:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80024e8:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 80024ec:	9301      	str	r3, [sp, #4]
 80024ee:	9b01      	ldr	r3, [sp, #4]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 80024f0:	4b18      	ldr	r3, [pc, #96]	@ (8002554 <SystemClock_Config+0x94>)
 80024f2:	9402      	str	r4, [sp, #8]
 80024f4:	681a      	ldr	r2, [r3, #0]
 80024f6:	f442 4240 	orr.w	r2, r2, #49152	@ 0xc000
 80024fa:	601a      	str	r2, [r3, #0]
 80024fc:	681b      	ldr	r3, [r3, #0]
 80024fe:	f403 4340 	and.w	r3, r3, #49152	@ 0xc000
 8002502:	9302      	str	r3, [sp, #8]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8002504:	2201      	movs	r2, #1
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8002506:	9b02      	ldr	r3, [sp, #8]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8002508:	f44f 3380 	mov.w	r3, #65536	@ 0x10000
 800250c:	e9cd 2308 	strd	r2, r3, [sp, #32]
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8002510:	2502      	movs	r5, #2
 8002512:	f44f 0380 	mov.w	r3, #4194304	@ 0x400000
 8002516:	e9cd 530e 	strd	r5, r3, [sp, #56]	@ 0x38
  RCC_OscInitStruct.PLL.PLLN = 168;
 800251a:	2104      	movs	r1, #4
 800251c:	23a8      	movs	r3, #168	@ 0xa8
 800251e:	e9cd 1310 	strd	r1, r3, [sp, #64]	@ 0x40
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8002522:	a808      	add	r0, sp, #32
  RCC_OscInitStruct.PLL.PLLQ = 7;
 8002524:	2307      	movs	r3, #7
 8002526:	9313      	str	r3, [sp, #76]	@ 0x4c
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 8002528:	9512      	str	r5, [sp, #72]	@ 0x48
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 800252a:	f003 feaf 	bl	800628c <HAL_RCC_OscConfig>
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 800252e:	230f      	movs	r3, #15
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8002530:	e9cd 3503 	strd	r3, r5, [sp, #12]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 8002534:	f44f 50a0 	mov.w	r0, #5120	@ 0x1400
 8002538:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 800253c:	e9cd 0306 	strd	r0, r3, [sp, #24]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 8002540:	2105      	movs	r1, #5
 8002542:	a803      	add	r0, sp, #12
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8002544:	9405      	str	r4, [sp, #20]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 8002546:	f004 f87d 	bl	8006644 <HAL_RCC_ClockConfig>
}
 800254a:	b015      	add	sp, #84	@ 0x54
 800254c:	bd30      	pop	{r4, r5, pc}
 800254e:	bf00      	nop
 8002550:	40023800 	.word	0x40023800
 8002554:	40007000 	.word	0x40007000

08002558 <main>:
{
 8002558:	e92d 4880 	stmdb	sp!, {r7, fp, lr}
 800255c:	b09b      	sub	sp, #108	@ 0x6c
  HAL_Init();
 800255e:	f002 f8bf 	bl	80046e0 <HAL_Init>
  SystemClock_Config();
 8002562:	f7ff ffad 	bl	80024c0 <SystemClock_Config>
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002566:	2214      	movs	r2, #20
 8002568:	2100      	movs	r1, #0
 800256a:	a80d      	add	r0, sp, #52	@ 0x34
 800256c:	f020 fe21 	bl	80231b2 <memset>
  __HAL_RCC_GPIOE_CLK_ENABLE();
 8002570:	2400      	movs	r4, #0
 8002572:	4bc7      	ldr	r3, [pc, #796]	@ (8002890 <main+0x338>)
 8002574:	9400      	str	r4, [sp, #0]
 8002576:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|RENDER_TIME_Pin|FRAME_RATE_Pin|MCU_ACTIVE_Pin, GPIO_PIN_RESET);
 8002578:	48c6      	ldr	r0, [pc, #792]	@ (8002894 <main+0x33c>)
  hi2c3.Instance = I2C3;
 800257a:	4dc7      	ldr	r5, [pc, #796]	@ (8002898 <main+0x340>)
  __HAL_RCC_GPIOE_CLK_ENABLE();
 800257c:	f042 0210 	orr.w	r2, r2, #16
 8002580:	631a      	str	r2, [r3, #48]	@ 0x30
 8002582:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8002584:	f002 0210 	and.w	r2, r2, #16
 8002588:	9200      	str	r2, [sp, #0]
 800258a:	9a00      	ldr	r2, [sp, #0]
  __HAL_RCC_GPIOF_CLK_ENABLE();
 800258c:	9401      	str	r4, [sp, #4]
 800258e:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8002590:	f042 0220 	orr.w	r2, r2, #32
 8002594:	631a      	str	r2, [r3, #48]	@ 0x30
 8002596:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8002598:	f002 0220 	and.w	r2, r2, #32
 800259c:	9201      	str	r2, [sp, #4]
 800259e:	9a01      	ldr	r2, [sp, #4]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 80025a0:	9402      	str	r4, [sp, #8]
 80025a2:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80025a4:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
 80025a8:	631a      	str	r2, [r3, #48]	@ 0x30
 80025aa:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80025ac:	f002 0280 	and.w	r2, r2, #128	@ 0x80
 80025b0:	9202      	str	r2, [sp, #8]
 80025b2:	9a02      	ldr	r2, [sp, #8]
  __HAL_RCC_GPIOC_CLK_ENABLE();
 80025b4:	9403      	str	r4, [sp, #12]
 80025b6:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80025b8:	f042 0204 	orr.w	r2, r2, #4
 80025bc:	631a      	str	r2, [r3, #48]	@ 0x30
 80025be:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80025c0:	f002 0204 	and.w	r2, r2, #4
 80025c4:	9203      	str	r2, [sp, #12]
 80025c6:	9a03      	ldr	r2, [sp, #12]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 80025c8:	9404      	str	r4, [sp, #16]
 80025ca:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80025cc:	f042 0201 	orr.w	r2, r2, #1
 80025d0:	631a      	str	r2, [r3, #48]	@ 0x30
 80025d2:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80025d4:	f002 0201 	and.w	r2, r2, #1
 80025d8:	9204      	str	r2, [sp, #16]
 80025da:	9a04      	ldr	r2, [sp, #16]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 80025dc:	9405      	str	r4, [sp, #20]
 80025de:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80025e0:	f042 0202 	orr.w	r2, r2, #2
 80025e4:	631a      	str	r2, [r3, #48]	@ 0x30
 80025e6:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80025e8:	f002 0202 	and.w	r2, r2, #2
 80025ec:	9205      	str	r2, [sp, #20]
 80025ee:	9a05      	ldr	r2, [sp, #20]
  __HAL_RCC_GPIOG_CLK_ENABLE();
 80025f0:	9406      	str	r4, [sp, #24]
 80025f2:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80025f4:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 80025f8:	631a      	str	r2, [r3, #48]	@ 0x30
 80025fa:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80025fc:	f002 0240 	and.w	r2, r2, #64	@ 0x40
 8002600:	9206      	str	r2, [sp, #24]
 8002602:	9a06      	ldr	r2, [sp, #24]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8002604:	9407      	str	r4, [sp, #28]
 8002606:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8002608:	f042 0208 	orr.w	r2, r2, #8
 800260c:	631a      	str	r2, [r3, #48]	@ 0x30
 800260e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002610:	f003 0308 	and.w	r3, r3, #8
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|RENDER_TIME_Pin|FRAME_RATE_Pin|MCU_ACTIVE_Pin, GPIO_PIN_RESET);
 8002614:	4622      	mov	r2, r4
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8002616:	9307      	str	r3, [sp, #28]
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|RENDER_TIME_Pin|FRAME_RATE_Pin|MCU_ACTIVE_Pin, GPIO_PIN_RESET);
 8002618:	213c      	movs	r1, #60	@ 0x3c
  __HAL_RCC_GPIOD_CLK_ENABLE();
 800261a:	9b07      	ldr	r3, [sp, #28]
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|RENDER_TIME_Pin|FRAME_RATE_Pin|MCU_ACTIVE_Pin, GPIO_PIN_RESET);
 800261c:	f002 fae6 	bl	8004bec <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(SPI5_NCS_GPIO_Port, SPI5_NCS_Pin, GPIO_PIN_SET);
 8002620:	489e      	ldr	r0, [pc, #632]	@ (800289c <main+0x344>)
 8002622:	2201      	movs	r2, #1
 8002624:	2102      	movs	r1, #2
 8002626:	f002 fae1 	bl	8004bec <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 800262a:	4622      	mov	r2, r4
 800262c:	489b      	ldr	r0, [pc, #620]	@ (800289c <main+0x344>)
 800262e:	2104      	movs	r1, #4
 8002630:	f002 fadc 	bl	8004bec <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12|GPIO_PIN_13, GPIO_PIN_RESET);
 8002634:	4622      	mov	r2, r4
 8002636:	489a      	ldr	r0, [pc, #616]	@ (80028a0 <main+0x348>)
 8002638:	f44f 5140 	mov.w	r1, #12288	@ 0x3000
 800263c:	f002 fad6 	bl	8004bec <HAL_GPIO_WritePin>
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8002640:	2601      	movs	r6, #1
 8002642:	233c      	movs	r3, #60	@ 0x3c
 8002644:	e9cd 360d 	strd	r3, r6, [sp, #52]	@ 0x34
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8002648:	4892      	ldr	r0, [pc, #584]	@ (8002894 <main+0x33c>)
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800264a:	940f      	str	r4, [sp, #60]	@ 0x3c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800264c:	2303      	movs	r3, #3
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 800264e:	a90d      	add	r1, sp, #52	@ 0x34
  GPIO_InitStruct.Pin = SPI5_NCS_Pin;
 8002650:	2702      	movs	r7, #2
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002652:	9310      	str	r3, [sp, #64]	@ 0x40
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8002654:	f002 f9e0 	bl	8004a18 <HAL_GPIO_Init>
  HAL_GPIO_Init(SPI5_NCS_GPIO_Port, &GPIO_InitStruct);
 8002658:	4890      	ldr	r0, [pc, #576]	@ (800289c <main+0x344>)
 800265a:	a90d      	add	r1, sp, #52	@ 0x34
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 800265c:	e9cd 760d 	strd	r7, r6, [sp, #52]	@ 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8002660:	e9cd 440f 	strd	r4, r4, [sp, #60]	@ 0x3c
  HAL_GPIO_Init(SPI5_NCS_GPIO_Port, &GPIO_InitStruct);
 8002664:	f002 f9d8 	bl	8004a18 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_2;
 8002668:	2304      	movs	r3, #4
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 800266a:	488c      	ldr	r0, [pc, #560]	@ (800289c <main+0x344>)
 800266c:	a90d      	add	r1, sp, #52	@ 0x34
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 800266e:	e9cd 360d 	strd	r3, r6, [sp, #52]	@ 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8002672:	e9cd 470f 	strd	r4, r7, [sp, #60]	@ 0x3c
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002676:	f002 f9cf 	bl	8004a18 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 800267a:	a90d      	add	r1, sp, #52	@ 0x34
  GPIO_InitStruct.Pin = GPIO_PIN_12|GPIO_PIN_13;
 800267c:	f44f 5340 	mov.w	r3, #12288	@ 0x3000
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8002680:	4887      	ldr	r0, [pc, #540]	@ (80028a0 <main+0x348>)
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8002682:	e9cd 360d 	strd	r3, r6, [sp, #52]	@ 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8002686:	e9cd 470f 	strd	r4, r7, [sp, #60]	@ 0x3c
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 800268a:	f002 f9c5 	bl	8004a18 <HAL_GPIO_Init>
  hcrc.Instance = CRC;
 800268e:	4885      	ldr	r0, [pc, #532]	@ (80028a4 <main+0x34c>)
 8002690:	4b85      	ldr	r3, [pc, #532]	@ (80028a8 <main+0x350>)
 8002692:	6003      	str	r3, [r0, #0]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
 8002694:	f002 f8b6 	bl	8004804 <HAL_CRC_Init>
  hi2c3.Init.ClockSpeed = 100000;
 8002698:	f8df c234 	ldr.w	ip, [pc, #564]	@ 80028d0 <main+0x378>
 800269c:	4b83      	ldr	r3, [pc, #524]	@ (80028ac <main+0x354>)
  hi2c3.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 800269e:	622c      	str	r4, [r5, #32]
  hi2c3.Init.ClockSpeed = 100000;
 80026a0:	e9c5 c300 	strd	ip, r3, [r5]
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 80026a4:	4628      	mov	r0, r5
  hi2c3.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 80026a6:	f44f 4380 	mov.w	r3, #16384	@ 0x4000
  hi2c3.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 80026aa:	e9c5 3404 	strd	r3, r4, [r5, #16]
  hi2c3.Init.OwnAddress1 = 0;
 80026ae:	e9c5 4402 	strd	r4, r4, [r5, #8]
  hi2c3.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 80026b2:	e9c5 4406 	strd	r4, r4, [r5, #24]
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 80026b6:	f002 fca7 	bl	8005008 <HAL_I2C_Init>
  if (HAL_I2CEx_ConfigAnalogFilter(&hi2c3, I2C_ANALOGFILTER_DISABLE) != HAL_OK)
 80026ba:	2110      	movs	r1, #16
 80026bc:	4628      	mov	r0, r5
 80026be:	f002 feeb 	bl	8005498 <HAL_I2CEx_ConfigAnalogFilter>
  if (HAL_I2CEx_ConfigDigitalFilter(&hi2c3, 0) != HAL_OK)
 80026c2:	4621      	mov	r1, r4
 80026c4:	4628      	mov	r0, r5
 80026c6:	f002 ff06 	bl	80054d6 <HAL_I2CEx_ConfigDigitalFilter>
  hspi5.Instance = SPI5;
 80026ca:	4d79      	ldr	r5, [pc, #484]	@ (80028b0 <main+0x358>)
  hspi5.Init.Mode = SPI_MODE_MASTER;
 80026cc:	f8df e204 	ldr.w	lr, [pc, #516]	@ 80028d4 <main+0x37c>
  hspi5.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 80026d0:	62ac      	str	r4, [r5, #40]	@ 0x28
  hspi5.Init.Mode = SPI_MODE_MASTER;
 80026d2:	f44f 7382 	mov.w	r3, #260	@ 0x104
 80026d6:	e9c5 e300 	strd	lr, r3, [r5]
  hspi5.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_16;
 80026da:	f44f 7800 	mov.w	r8, #512	@ 0x200
 80026de:	2318      	movs	r3, #24
 80026e0:	e9c5 8306 	strd	r8, r3, [r5, #24]
  if (HAL_SPI_Init(&hspi5) != HAL_OK)
 80026e4:	4628      	mov	r0, r5
  hspi5.Init.CRCPolynomial = 10;
 80026e6:	230a      	movs	r3, #10
  hspi5.Init.DataSize = SPI_DATASIZE_8BIT;
 80026e8:	e9c5 4402 	strd	r4, r4, [r5, #8]
  hspi5.Init.CLKPhase = SPI_PHASE_1EDGE;
 80026ec:	e9c5 4404 	strd	r4, r4, [r5, #16]
  hspi5.Init.TIMode = SPI_TIMODE_DISABLE;
 80026f0:	e9c5 4408 	strd	r4, r4, [r5, #32]
  hspi5.Init.CRCPolynomial = 10;
 80026f4:	62eb      	str	r3, [r5, #44]	@ 0x2c
  if (HAL_SPI_Init(&hspi5) != HAL_OK)
 80026f6:	f004 fabb 	bl	8006c70 <HAL_SPI_Init>
  const uint8_t READ_ID_CMD = 0x8F; // 0b10001111 = set read bit and register address of WHO_AM_I
 80026fa:	238f      	movs	r3, #143	@ 0x8f
  HAL_GPIO_WritePin(SPI5_NCS_GPIO_Port, SPI5_NCS_Pin, GPIO_PIN_RESET);
 80026fc:	4622      	mov	r2, r4
 80026fe:	4639      	mov	r1, r7
 8002700:	4866      	ldr	r0, [pc, #408]	@ (800289c <main+0x344>)
  const uint8_t READ_ID_CMD = 0x8F; // 0b10001111 = set read bit and register address of WHO_AM_I
 8002702:	f88d 3024 	strb.w	r3, [sp, #36]	@ 0x24
  uint8_t pdata = 0;
 8002706:	f88d 4034 	strb.w	r4, [sp, #52]	@ 0x34
  HAL_GPIO_WritePin(SPI5_NCS_GPIO_Port, SPI5_NCS_Pin, GPIO_PIN_RESET);
 800270a:	f002 fa6f 	bl	8004bec <HAL_GPIO_WritePin>
  HAL_SPI_Transmit(&hspi5, &READ_ID_CMD, 1, 1000);
 800270e:	4632      	mov	r2, r6
 8002710:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 8002714:	a909      	add	r1, sp, #36	@ 0x24
 8002716:	4628      	mov	r0, r5
 8002718:	f004 fb06 	bl	8006d28 <HAL_SPI_Transmit>
  HAL_SPI_Receive(&hspi5, &pdata, 1, 1000);
 800271c:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 8002720:	4632      	mov	r2, r6
 8002722:	a90d      	add	r1, sp, #52	@ 0x34
 8002724:	4628      	mov	r0, r5
 8002726:	f004 fcab 	bl	8007080 <HAL_SPI_Receive>
  HAL_GPIO_WritePin(SPI5_NCS_GPIO_Port, SPI5_NCS_Pin, GPIO_PIN_SET);
 800272a:	4632      	mov	r2, r6
 800272c:	4639      	mov	r1, r7
 800272e:	485b      	ldr	r0, [pc, #364]	@ (800289c <main+0x344>)
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 8002730:	4d60      	ldr	r5, [pc, #384]	@ (80028b4 <main+0x35c>)
  HAL_GPIO_WritePin(SPI5_NCS_GPIO_Port, SPI5_NCS_Pin, GPIO_PIN_SET);
 8002732:	f002 fa5b 	bl	8004bec <HAL_GPIO_WritePin>
  if (pdata == 0xD3) // 0b11010011
 8002736:	f89d 3034 	ldrb.w	r3, [sp, #52]	@ 0x34
 800273a:	2bd3      	cmp	r3, #211	@ 0xd3
    isRevD = 1;
 800273c:	bf04      	itt	eq
 800273e:	4b5e      	ldreq	r3, [pc, #376]	@ (80028b8 <main+0x360>)
 8002740:	701e      	strbeq	r6, [r3, #0]
  hsdram1.Init.SDBank = FMC_SDRAM_BANK2;
 8002742:	4b5e      	ldr	r3, [pc, #376]	@ (80028bc <main+0x364>)
 8002744:	2701      	movs	r7, #1
 8002746:	e9c5 3700 	strd	r3, r7, [r5]
  hsdram1.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
 800274a:	f04f 0a10 	mov.w	sl, #16
 800274e:	2340      	movs	r3, #64	@ 0x40
  hsdram1.Init.RowBitsNumber = FMC_SDRAM_ROW_BITS_NUM_12;
 8002750:	2400      	movs	r4, #0
  hsdram1.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
 8002752:	e9c5 a304 	strd	sl, r3, [r5, #16]
  hsdram1.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
 8002756:	f44f 73c0 	mov.w	r3, #384	@ 0x180
  hsdram1.Init.WriteProtection = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
 800275a:	e9c5 3406 	strd	r3, r4, [r5, #24]
  hsdram1.Init.SDClockPeriod = FMC_SDRAM_CLOCK_PERIOD_2;
 800275e:	f44f 6300 	mov.w	r3, #2048	@ 0x800
  hsdram1.Init.ReadBurst = FMC_SDRAM_RBURST_DISABLE;
 8002762:	e9c5 3408 	strd	r3, r4, [r5, #32]
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_1;
 8002766:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
  SdramTiming.ExitSelfRefreshDelay = 7;
 800276a:	2602      	movs	r6, #2
  hsdram1.Init.RowBitsNumber = FMC_SDRAM_ROW_BITS_NUM_12;
 800276c:	f04f 0904 	mov.w	r9, #4
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_1;
 8002770:	62ab      	str	r3, [r5, #40]	@ 0x28
  SdramTiming.WriteRecoveryTime = 3;
 8002772:	f04f 0b03 	mov.w	fp, #3
  SdramTiming.ExitSelfRefreshDelay = 7;
 8002776:	2307      	movs	r3, #7
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 8002778:	a90d      	add	r1, sp, #52	@ 0x34
 800277a:	4628      	mov	r0, r5
  SdramTiming.ExitSelfRefreshDelay = 7;
 800277c:	e9cd 630d 	strd	r6, r3, [sp, #52]	@ 0x34
  SdramTiming.RowCycleDelay = 7;
 8002780:	e9cd 930f 	strd	r9, r3, [sp, #60]	@ 0x3c
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8002784:	f04f 0808 	mov.w	r8, #8
  hsdram1.Init.RowBitsNumber = FMC_SDRAM_ROW_BITS_NUM_12;
 8002788:	e9c5 4902 	strd	r4, r9, [r5, #8]
  SdramTiming.RPDelay = 2;
 800278c:	e9cd b611 	strd	fp, r6, [sp, #68]	@ 0x44
  SdramTiming.RCDDelay = 2;
 8002790:	9613      	str	r6, [sp, #76]	@ 0x4c
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 8002792:	f004 f951 	bl	8006a38 <HAL_SDRAM_Init>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8002796:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 800279a:	a909      	add	r1, sp, #36	@ 0x24
 800279c:	4628      	mov	r0, r5
  Command->AutoRefreshNumber       = 1;
 800279e:	e9cd 870a 	strd	r8, r7, [sp, #40]	@ 0x28
 __IO uint32_t tmpmrd =0;
 80027a2:	9408      	str	r4, [sp, #32]
  Command->CommandMode             = FMC_SDRAM_CMD_CLK_ENABLE;
 80027a4:	9709      	str	r7, [sp, #36]	@ 0x24
  Command->ModeRegisterDefinition  = 0;
 80027a6:	940c      	str	r4, [sp, #48]	@ 0x30
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 80027a8:	f004 f966 	bl	8006a78 <HAL_SDRAM_SendCommand>
  HAL_Delay(1);
 80027ac:	4638      	mov	r0, r7
 80027ae:	f001 ffc3 	bl	8004738 <HAL_Delay>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 80027b2:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 80027b6:	a909      	add	r1, sp, #36	@ 0x24
 80027b8:	4628      	mov	r0, r5
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 80027ba:	e9cd 6809 	strd	r6, r8, [sp, #36]	@ 0x24
  Command->ModeRegisterDefinition  = 0;
 80027be:	e9cd 740b 	strd	r7, r4, [sp, #44]	@ 0x2c
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 80027c2:	f004 f959 	bl	8006a78 <HAL_SDRAM_SendCommand>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 80027c6:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 80027ca:	a909      	add	r1, sp, #36	@ 0x24
 80027cc:	4628      	mov	r0, r5
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 80027ce:	e9cd b809 	strd	fp, r8, [sp, #36]	@ 0x24
  Command->ModeRegisterDefinition  = 0;
 80027d2:	e9cd 940b 	strd	r9, r4, [sp, #44]	@ 0x2c
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 80027d6:	f004 f94f 	bl	8006a78 <HAL_SDRAM_SendCommand>
  tmpmrd = (uint32_t)SDRAM_MODEREG_BURST_LENGTH_1          |
 80027da:	f44f 730c 	mov.w	r3, #560	@ 0x230
 80027de:	9308      	str	r3, [sp, #32]
  Command->ModeRegisterDefinition  = tmpmrd;
 80027e0:	9b08      	ldr	r3, [sp, #32]
 80027e2:	930c      	str	r3, [sp, #48]	@ 0x30
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 80027e4:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 80027e8:	a909      	add	r1, sp, #36	@ 0x24
 80027ea:	4628      	mov	r0, r5
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 80027ec:	e9cd 9809 	strd	r9, r8, [sp, #36]	@ 0x24
  Command->AutoRefreshNumber       = 1;
 80027f0:	970b      	str	r7, [sp, #44]	@ 0x2c
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 80027f2:	f004 f941 	bl	8006a78 <HAL_SDRAM_SendCommand>
  HAL_SDRAM_ProgramRefreshRate(hsdram, REFRESH_COUNT);
 80027f6:	f240 516a 	movw	r1, #1386	@ 0x56a
 80027fa:	4628      	mov	r0, r5
 80027fc:	f004 f95a 	bl	8006ab4 <HAL_SDRAM_ProgramRefreshRate>
  LTDC_LayerCfgTypeDef pLayerCfg = {0};
 8002800:	2234      	movs	r2, #52	@ 0x34
 8002802:	4621      	mov	r1, r4
 8002804:	eb0d 0002 	add.w	r0, sp, r2
 8002808:	f020 fcd3 	bl	80231b2 <memset>
  hltdc.Instance = LTDC;
 800280c:	4d2c      	ldr	r5, [pc, #176]	@ (80028c0 <main+0x368>)
 800280e:	4b2d      	ldr	r3, [pc, #180]	@ (80028c4 <main+0x36c>)
  hltdc.Init.PCPolarity = LTDC_PCPOLARITY_IPC;
 8002810:	612c      	str	r4, [r5, #16]
  hltdc.Init.HSPolarity = LTDC_HSPOLARITY_AL;
 8002812:	e9c5 3400 	strd	r3, r4, [r5]
  hltdc.Init.HorizontalSync = 9;
 8002816:	2309      	movs	r3, #9
  hltdc.Init.VerticalSync = 1;
 8002818:	e9c5 3705 	strd	r3, r7, [r5, #20]
  hltdc.Init.AccumulatedHBP = 29;
 800281c:	231d      	movs	r3, #29
  hltdc.Init.AccumulatedVBP = 3;
 800281e:	e9c5 3b07 	strd	r3, fp, [r5, #28]
  hltdc.Init.AccumulatedActiveH = 323;
 8002822:	f240 120d 	movw	r2, #269	@ 0x10d
 8002826:	f240 1343 	movw	r3, #323	@ 0x143
 800282a:	e9c5 2309 	strd	r2, r3, [r5, #36]	@ 0x24
  hltdc.Init.TotalHeigh = 327;
 800282e:	f240 1117 	movw	r1, #279	@ 0x117
 8002832:	f240 1347 	movw	r3, #327	@ 0x147
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 8002836:	4628      	mov	r0, r5
  hltdc.Init.TotalHeigh = 327;
 8002838:	e9c5 130b 	strd	r1, r3, [r5, #44]	@ 0x2c
  hltdc.Init.DEPolarity = LTDC_DEPOLARITY_AL;
 800283c:	e9c5 4402 	strd	r4, r4, [r5, #8]
  hltdc.Init.Backcolor.Blue = 0;
 8002840:	86ac      	strh	r4, [r5, #52]	@ 0x34
  hltdc.Init.Backcolor.Red = 0;
 8002842:	f885 4036 	strb.w	r4, [r5, #54]	@ 0x36
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 8002846:	f002 fee1 	bl	800560c <HAL_LTDC_Init>
  pLayerCfg.Alpha = 255;
 800284a:	21ff      	movs	r1, #255	@ 0xff
  pLayerCfg.WindowX1 = 240;
 800284c:	22f0      	movs	r2, #240	@ 0xf0
  pLayerCfg.Alpha0 = 0;
 800284e:	e9cd 1412 	strd	r1, r4, [sp, #72]	@ 0x48
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 8002852:	f44f 6080 	mov.w	r0, #1024	@ 0x400
 8002856:	2105      	movs	r1, #5
  pLayerCfg.WindowY1 = 320;
 8002858:	f44f 73a0 	mov.w	r3, #320	@ 0x140
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 800285c:	e9cd 0114 	strd	r0, r1, [sp, #80]	@ 0x50
  pLayerCfg.WindowY0 = 0;
 8002860:	e9cd 240e 	strd	r2, r4, [sp, #56]	@ 0x38
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8002864:	a90d      	add	r1, sp, #52	@ 0x34
  pLayerCfg.ImageWidth = 240;
 8002866:	e9cd 4216 	strd	r4, r2, [sp, #88]	@ 0x58
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 800286a:	4628      	mov	r0, r5
 800286c:	4622      	mov	r2, r4
  LcdDrv = &ili9341_drv;
 800286e:	4d16      	ldr	r5, [pc, #88]	@ (80028c8 <main+0x370>)
  pLayerCfg.ImageHeight = 320;
 8002870:	9318      	str	r3, [sp, #96]	@ 0x60
  pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_RGB565;
 8002872:	e9cd 3610 	strd	r3, r6, [sp, #64]	@ 0x40
  pLayerCfg.WindowX0 = 0;
 8002876:	940d      	str	r4, [sp, #52]	@ 0x34
  pLayerCfg.Backcolor.Blue = 0;
 8002878:	f8ad 4064 	strh.w	r4, [sp, #100]	@ 0x64
  pLayerCfg.Backcolor.Red = 0;
 800287c:	f88d 4066 	strb.w	r4, [sp, #102]	@ 0x66
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8002880:	f002 ff8f 	bl	80057a2 <HAL_LTDC_ConfigLayer>
  LcdDrv = &ili9341_drv;
 8002884:	4b11      	ldr	r3, [pc, #68]	@ (80028cc <main+0x374>)
 8002886:	602b      	str	r3, [r5, #0]
  LcdDrv->Init();
 8002888:	681b      	ldr	r3, [r3, #0]
 800288a:	4798      	blx	r3
  LcdDrv->DisplayOff();
 800288c:	682b      	ldr	r3, [r5, #0]
 800288e:	e023      	b.n	80028d8 <main+0x380>
 8002890:	40023800 	.word	0x40023800
 8002894:	40021000 	.word	0x40021000
 8002898:	200024cc 	.word	0x200024cc
 800289c:	40020800 	.word	0x40020800
 80028a0:	40020c00 	.word	0x40020c00
 80028a4:	20002560 	.word	0x20002560
 80028a8:	40023000 	.word	0x40023000
 80028ac:	000186a0 	.word	0x000186a0
 80028b0:	200023cc 	.word	0x200023cc
 80028b4:	20002398 	.word	0x20002398
 80028b8:	20002384 	.word	0x20002384
 80028bc:	a0000140 	.word	0xa0000140
 80028c0:	20002424 	.word	0x20002424
 80028c4:	40016800 	.word	0x40016800
 80028c8:	20002380 	.word	0x20002380
 80028cc:	20000064 	.word	0x20000064
 80028d0:	40005c00 	.word	0x40005c00
 80028d4:	40015000 	.word	0x40015000
  hdma2d.Instance = DMA2D;
 80028d8:	4d1b      	ldr	r5, [pc, #108]	@ (8002948 <main+0x3f0>)
  LcdDrv->DisplayOff();
 80028da:	68db      	ldr	r3, [r3, #12]
 80028dc:	4798      	blx	r3
  hdma2d.Instance = DMA2D;
 80028de:	4b1b      	ldr	r3, [pc, #108]	@ (800294c <main+0x3f4>)
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 80028e0:	4628      	mov	r0, r5
  hdma2d.Init.Mode = DMA2D_M2M;
 80028e2:	e9c5 3400 	strd	r3, r4, [r5]
  hdma2d.Init.OutputOffset = 0;
 80028e6:	e9c5 6402 	strd	r6, r4, [r5, #8]
  hdma2d.LayerCfg[1].InputColorMode = DMA2D_INPUT_RGB565;
 80028ea:	e9c5 460a 	strd	r4, r6, [r5, #40]	@ 0x28
  hdma2d.LayerCfg[1].InputAlpha = 0;
 80028ee:	e9c5 440c 	strd	r4, r4, [r5, #48]	@ 0x30
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 80028f2:	f001 ff97 	bl	8004824 <HAL_DMA2D_Init>
  if (HAL_DMA2D_ConfigLayer(&hdma2d, 1) != HAL_OK)
 80028f6:	4639      	mov	r1, r7
 80028f8:	4628      	mov	r0, r5
 80028fa:	f002 f849 	bl	8004990 <HAL_DMA2D_ConfigLayer>
  MX_TouchGFX_Init();
 80028fe:	f7fe fb9b 	bl	8001038 <MX_TouchGFX_Init>
  MX_TouchGFX_PreOSInit();
 8002902:	f7fe fb98 	bl	8001036 <MX_TouchGFX_PreOSInit>
  osKernelInitialize();
 8002906:	f005 fb77 	bl	8007ff8 <osKernelInitialize>
  myQueue01Handle = osMessageQueueNew (16, sizeof(uint16_t), &myQueue01_attributes);
 800290a:	4a11      	ldr	r2, [pc, #68]	@ (8002950 <main+0x3f8>)
 800290c:	4631      	mov	r1, r6
 800290e:	4650      	mov	r0, sl
 8002910:	f005 fc96 	bl	8008240 <osMessageQueueNew>
 8002914:	4b0f      	ldr	r3, [pc, #60]	@ (8002954 <main+0x3fc>)
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 8002916:	4a10      	ldr	r2, [pc, #64]	@ (8002958 <main+0x400>)
  myQueue01Handle = osMessageQueueNew (16, sizeof(uint16_t), &myQueue01_attributes);
 8002918:	6018      	str	r0, [r3, #0]
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 800291a:	4621      	mov	r1, r4
 800291c:	480f      	ldr	r0, [pc, #60]	@ (800295c <main+0x404>)
 800291e:	f005 fb97 	bl	8008050 <osThreadNew>
 8002922:	4b0f      	ldr	r3, [pc, #60]	@ (8002960 <main+0x408>)
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 8002924:	4a0f      	ldr	r2, [pc, #60]	@ (8002964 <main+0x40c>)
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 8002926:	6018      	str	r0, [r3, #0]
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 8002928:	4621      	mov	r1, r4
 800292a:	480f      	ldr	r0, [pc, #60]	@ (8002968 <main+0x410>)
 800292c:	f005 fb90 	bl	8008050 <osThreadNew>
 8002930:	4b0e      	ldr	r3, [pc, #56]	@ (800296c <main+0x414>)
  myTask03Handle = osThreadNew(StartTask03, NULL, &myTask03_attributes);
 8002932:	4a0f      	ldr	r2, [pc, #60]	@ (8002970 <main+0x418>)
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 8002934:	6018      	str	r0, [r3, #0]
  myTask03Handle = osThreadNew(StartTask03, NULL, &myTask03_attributes);
 8002936:	4621      	mov	r1, r4
 8002938:	480e      	ldr	r0, [pc, #56]	@ (8002974 <main+0x41c>)
 800293a:	f005 fb89 	bl	8008050 <osThreadNew>
 800293e:	4b0e      	ldr	r3, [pc, #56]	@ (8002978 <main+0x420>)
 8002940:	6018      	str	r0, [r3, #0]
  osKernelStart();
 8002942:	f005 fb6b 	bl	800801c <osKernelStart>
  while (1)
 8002946:	e7fe      	b.n	8002946 <main+0x3ee>
 8002948:	20002520 	.word	0x20002520
 800294c:	4002b000 	.word	0x4002b000
 8002950:	08024b8c 	.word	0x08024b8c
 8002954:	20002388 	.word	0x20002388
 8002958:	08024bec 	.word	0x08024bec
 800295c:	080023e5 	.word	0x080023e5
 8002960:	20002394 	.word	0x20002394
 8002964:	08024bc8 	.word	0x08024bc8
 8002968:	08001047 	.word	0x08001047
 800296c:	20002390 	.word	0x20002390
 8002970:	08024ba4 	.word	0x08024ba4
 8002974:	080023f5 	.word	0x080023f5
 8002978:	2000238c 	.word	0x2000238c

0800297c <IOE_Init>:
void IOE_Init(void)
 800297c:	4770      	bx	lr

0800297e <IOE_ITConfig>:
void IOE_ITConfig(void)
 800297e:	4770      	bx	lr

08002980 <IOE_Write>:
{
 8002980:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
  status = HAL_I2C_Mem_Write(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, &Value, 1, I2c3Timeout);
 8002982:	4b09      	ldr	r3, [pc, #36]	@ (80029a8 <IOE_Write+0x28>)
 8002984:	f88d 2017 	strb.w	r2, [sp, #23]
 8002988:	681b      	ldr	r3, [r3, #0]
 800298a:	9302      	str	r3, [sp, #8]
 800298c:	f10d 0217 	add.w	r2, sp, #23
 8002990:	2301      	movs	r3, #1
 8002992:	9200      	str	r2, [sp, #0]
 8002994:	9301      	str	r3, [sp, #4]
 8002996:	460a      	mov	r2, r1
 8002998:	4601      	mov	r1, r0
 800299a:	4804      	ldr	r0, [pc, #16]	@ (80029ac <IOE_Write+0x2c>)
 800299c:	f002 fbdc 	bl	8005158 <HAL_I2C_Mem_Write>
}
 80029a0:	b007      	add	sp, #28
 80029a2:	f85d fb04 	ldr.w	pc, [sp], #4
 80029a6:	bf00      	nop
 80029a8:	20000060 	.word	0x20000060
 80029ac:	200024cc 	.word	0x200024cc

080029b0 <IOE_Read>:
{
 80029b0:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
  uint8_t value = 0;
 80029b2:	2300      	movs	r3, #0
 80029b4:	f88d 3017 	strb.w	r3, [sp, #23]
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 80029b8:	4b08      	ldr	r3, [pc, #32]	@ (80029dc <IOE_Read+0x2c>)
 80029ba:	681b      	ldr	r3, [r3, #0]
 80029bc:	9302      	str	r3, [sp, #8]
{
 80029be:	460a      	mov	r2, r1
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 80029c0:	2301      	movs	r3, #1
 80029c2:	f10d 0117 	add.w	r1, sp, #23
 80029c6:	9100      	str	r1, [sp, #0]
 80029c8:	9301      	str	r3, [sp, #4]
 80029ca:	4601      	mov	r1, r0
 80029cc:	4804      	ldr	r0, [pc, #16]	@ (80029e0 <IOE_Read+0x30>)
 80029ce:	f002 fc53 	bl	8005278 <HAL_I2C_Mem_Read>
}
 80029d2:	f89d 0017 	ldrb.w	r0, [sp, #23]
 80029d6:	b007      	add	sp, #28
 80029d8:	f85d fb04 	ldr.w	pc, [sp], #4
 80029dc:	20000060 	.word	0x20000060
 80029e0:	200024cc 	.word	0x200024cc

080029e4 <IOE_ReadMultiple>:
{
 80029e4:	b51f      	push	{r0, r1, r2, r3, r4, lr}
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, pBuffer, Length, I2c3Timeout);
 80029e6:	4c08      	ldr	r4, [pc, #32]	@ (8002a08 <IOE_ReadMultiple+0x24>)
 80029e8:	6824      	ldr	r4, [r4, #0]
 80029ea:	9200      	str	r2, [sp, #0]
 80029ec:	e9cd 3401 	strd	r3, r4, [sp, #4]
 80029f0:	460a      	mov	r2, r1
 80029f2:	2301      	movs	r3, #1
 80029f4:	4601      	mov	r1, r0
 80029f6:	4805      	ldr	r0, [pc, #20]	@ (8002a0c <IOE_ReadMultiple+0x28>)
 80029f8:	f002 fc3e 	bl	8005278 <HAL_I2C_Mem_Read>
}
 80029fc:	3800      	subs	r0, #0
 80029fe:	bf18      	it	ne
 8002a00:	2001      	movne	r0, #1
 8002a02:	b004      	add	sp, #16
 8002a04:	bd10      	pop	{r4, pc}
 8002a06:	bf00      	nop
 8002a08:	20000060 	.word	0x20000060
 8002a0c:	200024cc 	.word	0x200024cc

08002a10 <IOE_Delay>:
void IOE_Delay(uint32_t Delay)
 8002a10:	f001 be92 	b.w	8004738 <HAL_Delay>

08002a14 <LCD_IO_Init>:
{
 8002a14:	b510      	push	{r4, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8002a16:	4c06      	ldr	r4, [pc, #24]	@ (8002a30 <LCD_IO_Init+0x1c>)
 8002a18:	2200      	movs	r2, #0
 8002a1a:	4620      	mov	r0, r4
 8002a1c:	2104      	movs	r1, #4
 8002a1e:	f002 f8e5 	bl	8004bec <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8002a22:	4620      	mov	r0, r4
 8002a24:	2201      	movs	r2, #1
}
 8002a26:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8002a2a:	2104      	movs	r1, #4
 8002a2c:	f002 b8de 	b.w	8004bec <HAL_GPIO_WritePin>
 8002a30:	40020800 	.word	0x40020800

08002a34 <LCD_IO_WriteData>:
{
 8002a34:	b538      	push	{r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8002a36:	4d0b      	ldr	r5, [pc, #44]	@ (8002a64 <LCD_IO_WriteData+0x30>)
{
 8002a38:	4604      	mov	r4, r0
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 8002a3a:	2201      	movs	r2, #1
 8002a3c:	480a      	ldr	r0, [pc, #40]	@ (8002a68 <LCD_IO_WriteData+0x34>)
 8002a3e:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 8002a42:	f002 f8d3 	bl	8004bec <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8002a46:	2200      	movs	r2, #0
 8002a48:	2104      	movs	r1, #4
 8002a4a:	4628      	mov	r0, r5
 8002a4c:	f002 f8ce 	bl	8004bec <HAL_GPIO_WritePin>
  SPI5_Write(RegValue);
 8002a50:	4620      	mov	r0, r4
 8002a52:	f7ff fcb5 	bl	80023c0 <SPI5_Write>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8002a56:	4628      	mov	r0, r5
 8002a58:	2201      	movs	r2, #1
}
 8002a5a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8002a5e:	2104      	movs	r1, #4
 8002a60:	f002 b8c4 	b.w	8004bec <HAL_GPIO_WritePin>
 8002a64:	40020800 	.word	0x40020800
 8002a68:	40020c00 	.word	0x40020c00

08002a6c <LCD_IO_WriteReg>:
{
 8002a6c:	b538      	push	{r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8002a6e:	4d0b      	ldr	r5, [pc, #44]	@ (8002a9c <LCD_IO_WriteReg+0x30>)
{
 8002a70:	4604      	mov	r4, r0
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 8002a72:	2200      	movs	r2, #0
 8002a74:	480a      	ldr	r0, [pc, #40]	@ (8002aa0 <LCD_IO_WriteReg+0x34>)
 8002a76:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 8002a7a:	f002 f8b7 	bl	8004bec <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8002a7e:	2200      	movs	r2, #0
 8002a80:	2104      	movs	r1, #4
 8002a82:	4628      	mov	r0, r5
 8002a84:	f002 f8b2 	bl	8004bec <HAL_GPIO_WritePin>
  SPI5_Write(Reg);
 8002a88:	4620      	mov	r0, r4
 8002a8a:	f7ff fc99 	bl	80023c0 <SPI5_Write>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8002a8e:	4628      	mov	r0, r5
 8002a90:	2201      	movs	r2, #1
}
 8002a92:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8002a96:	2104      	movs	r1, #4
 8002a98:	f002 b8a8 	b.w	8004bec <HAL_GPIO_WritePin>
 8002a9c:	40020800 	.word	0x40020800
 8002aa0:	40020c00 	.word	0x40020c00

08002aa4 <LCD_IO_ReadData>:
{
 8002aa4:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8002aa6:	4e14      	ldr	r6, [pc, #80]	@ (8002af8 <LCD_IO_ReadData+0x54>)
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 8002aa8:	4f14      	ldr	r7, [pc, #80]	@ (8002afc <LCD_IO_ReadData+0x58>)
{
 8002aaa:	4605      	mov	r5, r0
 8002aac:	460c      	mov	r4, r1
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8002aae:	4630      	mov	r0, r6
 8002ab0:	2200      	movs	r2, #0
 8002ab2:	2104      	movs	r1, #4
 8002ab4:	f002 f89a 	bl	8004bec <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 8002ab8:	2200      	movs	r2, #0
 8002aba:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 8002abe:	4638      	mov	r0, r7
 8002ac0:	f002 f894 	bl	8004bec <HAL_GPIO_WritePin>
  SPI5_Write(RegValue);
 8002ac4:	4628      	mov	r0, r5
 8002ac6:	f7ff fc7b 	bl	80023c0 <SPI5_Write>
  status = HAL_SPI_Receive(&hspi5, (uint8_t*) &readvalue, ReadSize, Spi5Timeout);
 8002aca:	4b0d      	ldr	r3, [pc, #52]	@ (8002b00 <LCD_IO_ReadData+0x5c>)
 8002acc:	480d      	ldr	r0, [pc, #52]	@ (8002b04 <LCD_IO_ReadData+0x60>)
 8002ace:	681b      	ldr	r3, [r3, #0]
 8002ad0:	4622      	mov	r2, r4
 8002ad2:	a901      	add	r1, sp, #4
 8002ad4:	f004 fad4 	bl	8007080 <HAL_SPI_Receive>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 8002ad8:	4638      	mov	r0, r7
 8002ada:	2201      	movs	r2, #1
 8002adc:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
  return readvalue;
 8002ae0:	9c01      	ldr	r4, [sp, #4]
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 8002ae2:	f002 f883 	bl	8004bec <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8002ae6:	4630      	mov	r0, r6
 8002ae8:	2201      	movs	r2, #1
 8002aea:	2104      	movs	r1, #4
 8002aec:	f002 f87e 	bl	8004bec <HAL_GPIO_WritePin>
}
 8002af0:	4620      	mov	r0, r4
 8002af2:	b003      	add	sp, #12
 8002af4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8002af6:	bf00      	nop
 8002af8:	40020800 	.word	0x40020800
 8002afc:	40020c00 	.word	0x40020c00
 8002b00:	2000005c 	.word	0x2000005c
 8002b04:	200023cc 	.word	0x200023cc

08002b08 <LCD_Delay>:
  HAL_Delay(Delay);
 8002b08:	f001 be16 	b.w	8004738 <HAL_Delay>

08002b0c <HAL_TIM_PeriodElapsedCallback>:
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
  /* USER CODE BEGIN Callback 0 */

  /* USER CODE END Callback 0 */
  if (htim->Instance == TIM6)
 8002b0c:	6802      	ldr	r2, [r0, #0]
 8002b0e:	4b03      	ldr	r3, [pc, #12]	@ (8002b1c <HAL_TIM_PeriodElapsedCallback+0x10>)
 8002b10:	429a      	cmp	r2, r3
 8002b12:	d101      	bne.n	8002b18 <HAL_TIM_PeriodElapsedCallback+0xc>
  {
    HAL_IncTick();
 8002b14:	f001 bdfe 	b.w	8004714 <HAL_IncTick>
  }
  /* USER CODE BEGIN Callback 1 */

  /* USER CODE END Callback 1 */
}
 8002b18:	4770      	bx	lr
 8002b1a:	bf00      	nop
 8002b1c:	40001000 	.word	0x40001000

08002b20 <Error_Handler>:
{
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */

  /* USER CODE END Error_Handler_Debug */
}
 8002b20:	4770      	bx	lr
	...

08002b24 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8002b24:	b082      	sub	sp, #8

  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8002b26:	4b0e      	ldr	r3, [pc, #56]	@ (8002b60 <HAL_MspInit+0x3c>)
 8002b28:	2200      	movs	r2, #0
 8002b2a:	9200      	str	r2, [sp, #0]
 8002b2c:	6c59      	ldr	r1, [r3, #68]	@ 0x44
 8002b2e:	f441 4180 	orr.w	r1, r1, #16384	@ 0x4000
 8002b32:	6459      	str	r1, [r3, #68]	@ 0x44
 8002b34:	6c59      	ldr	r1, [r3, #68]	@ 0x44
 8002b36:	f401 4180 	and.w	r1, r1, #16384	@ 0x4000
 8002b3a:	9100      	str	r1, [sp, #0]
 8002b3c:	9900      	ldr	r1, [sp, #0]
  __HAL_RCC_PWR_CLK_ENABLE();
 8002b3e:	9201      	str	r2, [sp, #4]
 8002b40:	6c19      	ldr	r1, [r3, #64]	@ 0x40
 8002b42:	f041 5180 	orr.w	r1, r1, #268435456	@ 0x10000000
 8002b46:	6419      	str	r1, [r3, #64]	@ 0x40
 8002b48:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002b4a:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8002b4e:	9301      	str	r3, [sp, #4]
 8002b50:	9b01      	ldr	r3, [sp, #4]

  /* System interrupt init*/
  /* PendSV_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 8002b52:	210f      	movs	r1, #15
 8002b54:	f06f 0001 	mvn.w	r0, #1

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8002b58:	b002      	add	sp, #8
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 8002b5a:	f001 be13 	b.w	8004784 <HAL_NVIC_SetPriority>
 8002b5e:	bf00      	nop
 8002b60:	40023800 	.word	0x40023800

08002b64 <HAL_CRC_MspInit>:
  * @param hcrc: CRC handle pointer
  * @retval None
  */
void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
{
  if(hcrc->Instance==CRC)
 8002b64:	6802      	ldr	r2, [r0, #0]
 8002b66:	4b09      	ldr	r3, [pc, #36]	@ (8002b8c <HAL_CRC_MspInit+0x28>)
 8002b68:	429a      	cmp	r2, r3
{
 8002b6a:	b082      	sub	sp, #8
  if(hcrc->Instance==CRC)
 8002b6c:	d10b      	bne.n	8002b86 <HAL_CRC_MspInit+0x22>
  {
    /* USER CODE BEGIN CRC_MspInit 0 */

    /* USER CODE END CRC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
 8002b6e:	2300      	movs	r3, #0
 8002b70:	9301      	str	r3, [sp, #4]
 8002b72:	4b07      	ldr	r3, [pc, #28]	@ (8002b90 <HAL_CRC_MspInit+0x2c>)
 8002b74:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8002b76:	f442 5280 	orr.w	r2, r2, #4096	@ 0x1000
 8002b7a:	631a      	str	r2, [r3, #48]	@ 0x30
 8002b7c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002b7e:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 8002b82:	9301      	str	r3, [sp, #4]
 8002b84:	9b01      	ldr	r3, [sp, #4]

    /* USER CODE END CRC_MspInit 1 */

  }

}
 8002b86:	b002      	add	sp, #8
 8002b88:	4770      	bx	lr
 8002b8a:	bf00      	nop
 8002b8c:	40023000 	.word	0x40023000
 8002b90:	40023800 	.word	0x40023800

08002b94 <HAL_DMA2D_MspInit>:
  * This function configures the hardware resources used in this example
  * @param hdma2d: DMA2D handle pointer
  * @retval None
  */
void HAL_DMA2D_MspInit(DMA2D_HandleTypeDef* hdma2d)
{
 8002b94:	b507      	push	{r0, r1, r2, lr}
  if(hdma2d->Instance==DMA2D)
 8002b96:	4b0f      	ldr	r3, [pc, #60]	@ (8002bd4 <HAL_DMA2D_MspInit+0x40>)
 8002b98:	6802      	ldr	r2, [r0, #0]
 8002b9a:	429a      	cmp	r2, r3
 8002b9c:	d116      	bne.n	8002bcc <HAL_DMA2D_MspInit+0x38>
  {
    /* USER CODE BEGIN DMA2D_MspInit 0 */

    /* USER CODE END DMA2D_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8002b9e:	2200      	movs	r2, #0
 8002ba0:	f5a3 43f0 	sub.w	r3, r3, #30720	@ 0x7800
 8002ba4:	9201      	str	r2, [sp, #4]
 8002ba6:	6b19      	ldr	r1, [r3, #48]	@ 0x30
 8002ba8:	f441 0100 	orr.w	r1, r1, #8388608	@ 0x800000
 8002bac:	6319      	str	r1, [r3, #48]	@ 0x30
 8002bae:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002bb0:	f403 0300 	and.w	r3, r3, #8388608	@ 0x800000
 8002bb4:	9301      	str	r3, [sp, #4]
    /* DMA2D interrupt Init */
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 8002bb6:	2105      	movs	r1, #5
 8002bb8:	205a      	movs	r0, #90	@ 0x5a
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8002bba:	9b01      	ldr	r3, [sp, #4]
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 8002bbc:	f001 fde2 	bl	8004784 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 8002bc0:	205a      	movs	r0, #90	@ 0x5a

    /* USER CODE END DMA2D_MspInit 1 */

  }

}
 8002bc2:	b003      	add	sp, #12
 8002bc4:	f85d eb04 	ldr.w	lr, [sp], #4
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 8002bc8:	f001 be0e 	b.w	80047e8 <HAL_NVIC_EnableIRQ>
}
 8002bcc:	b003      	add	sp, #12
 8002bce:	f85d fb04 	ldr.w	pc, [sp], #4
 8002bd2:	bf00      	nop
 8002bd4:	4002b000 	.word	0x4002b000

08002bd8 <HAL_I2C_MspInit>:
  * This function configures the hardware resources used in this example
  * @param hi2c: I2C handle pointer
  * @retval None
  */
void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
{
 8002bd8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8002bdc:	4604      	mov	r4, r0
 8002bde:	b089      	sub	sp, #36	@ 0x24
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002be0:	2214      	movs	r2, #20
 8002be2:	2100      	movs	r1, #0
 8002be4:	a803      	add	r0, sp, #12
 8002be6:	f020 fae4 	bl	80231b2 <memset>
  if(hi2c->Instance==I2C3)
 8002bea:	6822      	ldr	r2, [r4, #0]
 8002bec:	4b24      	ldr	r3, [pc, #144]	@ (8002c80 <HAL_I2C_MspInit+0xa8>)
 8002bee:	429a      	cmp	r2, r3
 8002bf0:	d143      	bne.n	8002c7a <HAL_I2C_MspInit+0xa2>
  {
    /* USER CODE BEGIN I2C3_MspInit 0 */

    /* USER CODE END I2C3_MspInit 0 */

    __HAL_RCC_GPIOC_CLK_ENABLE();
 8002bf2:	4c24      	ldr	r4, [pc, #144]	@ (8002c84 <HAL_I2C_MspInit+0xac>)
    GPIO_InitStruct.Pin = GPIO_PIN_9;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
    GPIO_InitStruct.Pull = GPIO_PULLUP;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002bf4:	4824      	ldr	r0, [pc, #144]	@ (8002c88 <HAL_I2C_MspInit+0xb0>)
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8002bf6:	2500      	movs	r5, #0
 8002bf8:	9500      	str	r5, [sp, #0]
 8002bfa:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8002bfc:	f043 0304 	orr.w	r3, r3, #4
 8002c00:	6323      	str	r3, [r4, #48]	@ 0x30
 8002c02:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8002c04:	f003 0304 	and.w	r3, r3, #4
 8002c08:	9300      	str	r3, [sp, #0]
 8002c0a:	9b00      	ldr	r3, [sp, #0]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8002c0c:	9501      	str	r5, [sp, #4]
 8002c0e:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8002c10:	f043 0301 	orr.w	r3, r3, #1
 8002c14:	6323      	str	r3, [r4, #48]	@ 0x30
 8002c16:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8002c18:	f003 0301 	and.w	r3, r3, #1
 8002c1c:	9301      	str	r3, [sp, #4]
 8002c1e:	9b01      	ldr	r3, [sp, #4]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8002c20:	f04f 0912 	mov.w	r9, #18
 8002c24:	f44f 7300 	mov.w	r3, #512	@ 0x200
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002c28:	f04f 0801 	mov.w	r8, #1
 8002c2c:	2703      	movs	r7, #3
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8002c2e:	2604      	movs	r6, #4
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002c30:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8002c32:	e9cd 3903 	strd	r3, r9, [sp, #12]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002c36:	e9cd 8705 	strd	r8, r7, [sp, #20]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8002c3a:	9607      	str	r6, [sp, #28]
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002c3c:	f001 feec 	bl	8004a18 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_8;
 8002c40:	f44f 7380 	mov.w	r3, #256	@ 0x100
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
    GPIO_InitStruct.Pull = GPIO_PULLUP;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002c44:	4811      	ldr	r0, [pc, #68]	@ (8002c8c <HAL_I2C_MspInit+0xb4>)
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8002c46:	9607      	str	r6, [sp, #28]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002c48:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8002c4a:	e9cd 3903 	strd	r3, r9, [sp, #12]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002c4e:	e9cd 8705 	strd	r8, r7, [sp, #20]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002c52:	f001 fee1 	bl	8004a18 <HAL_GPIO_Init>

    /* Peripheral clock enable */
    __HAL_RCC_I2C3_CLK_ENABLE();
 8002c56:	9502      	str	r5, [sp, #8]
 8002c58:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8002c5a:	f443 0300 	orr.w	r3, r3, #8388608	@ 0x800000
 8002c5e:	6423      	str	r3, [r4, #64]	@ 0x40
 8002c60:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8002c62:	f403 0300 	and.w	r3, r3, #8388608	@ 0x800000
 8002c66:	9302      	str	r3, [sp, #8]
 8002c68:	9b02      	ldr	r3, [sp, #8]
    /* USER CODE BEGIN I2C3_MspInit 1 */
  /* Force the I2C Peripheral Clock Reset */  
    __HAL_RCC_I2C3_FORCE_RESET();
 8002c6a:	6a23      	ldr	r3, [r4, #32]
 8002c6c:	f443 0300 	orr.w	r3, r3, #8388608	@ 0x800000
 8002c70:	6223      	str	r3, [r4, #32]
      
    /* Release the I2C Peripheral Clock Reset */  
    __HAL_RCC_I2C3_RELEASE_RESET(); 
 8002c72:	6a23      	ldr	r3, [r4, #32]
 8002c74:	f423 0300 	bic.w	r3, r3, #8388608	@ 0x800000
 8002c78:	6223      	str	r3, [r4, #32]
    /* USER CODE END I2C3_MspInit 1 */

  }

}
 8002c7a:	b009      	add	sp, #36	@ 0x24
 8002c7c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8002c80:	40005c00 	.word	0x40005c00
 8002c84:	40023800 	.word	0x40023800
 8002c88:	40020800 	.word	0x40020800
 8002c8c:	40020000 	.word	0x40020000

08002c90 <HAL_LTDC_MspInit>:
  * This function configures the hardware resources used in this example
  * @param hltdc: LTDC handle pointer
  * @retval None
  */
void HAL_LTDC_MspInit(LTDC_HandleTypeDef* hltdc)
{
 8002c90:	b5f0      	push	{r4, r5, r6, r7, lr}
 8002c92:	b099      	sub	sp, #100	@ 0x64
 8002c94:	4604      	mov	r4, r0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002c96:	2214      	movs	r2, #20
 8002c98:	2100      	movs	r1, #0
 8002c9a:	a807      	add	r0, sp, #28
 8002c9c:	f020 fa89 	bl	80231b2 <memset>
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8002ca0:	2230      	movs	r2, #48	@ 0x30
 8002ca2:	eb0d 0002 	add.w	r0, sp, r2
 8002ca6:	2100      	movs	r1, #0
 8002ca8:	f020 fa83 	bl	80231b2 <memset>
  if(hltdc->Instance==LTDC)
 8002cac:	6822      	ldr	r2, [r4, #0]
 8002cae:	4b5e      	ldr	r3, [pc, #376]	@ (8002e28 <HAL_LTDC_MspInit+0x198>)
 8002cb0:	429a      	cmp	r2, r3
 8002cb2:	f040 80b7 	bne.w	8002e24 <HAL_LTDC_MspInit+0x194>

    /* USER CODE END LTDC_MspInit 0 */

  /** Initializes the peripherals clock
  */
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
 8002cb6:	2308      	movs	r3, #8
 8002cb8:	930c      	str	r3, [sp, #48]	@ 0x30
    PeriphClkInitStruct.PLLSAI.PLLSAIN = 192;
 8002cba:	23c0      	movs	r3, #192	@ 0xc0
 8002cbc:	9310      	str	r3, [sp, #64]	@ 0x40
    PeriphClkInitStruct.PLLSAI.PLLSAIR = 4;
 8002cbe:	2304      	movs	r3, #4
 8002cc0:	9312      	str	r3, [sp, #72]	@ 0x48
    PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8002cc2:	a80c      	add	r0, sp, #48	@ 0x30
    PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
 8002cc4:	f44f 3300 	mov.w	r3, #131072	@ 0x20000
 8002cc8:	9315      	str	r3, [sp, #84]	@ 0x54
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8002cca:	f003 fd89 	bl	80067e0 <HAL_RCCEx_PeriphCLKConfig>
 8002cce:	b108      	cbz	r0, 8002cd4 <HAL_LTDC_MspInit+0x44>
    {
      Error_Handler();
 8002cd0:	f7ff ff26 	bl	8002b20 <Error_Handler>
    }

    /* Peripheral clock enable */
    __HAL_RCC_LTDC_CLK_ENABLE();
 8002cd4:	4b55      	ldr	r3, [pc, #340]	@ (8002e2c <HAL_LTDC_MspInit+0x19c>)
    GPIO_InitStruct.Pin = GPIO_PIN_10;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8002cd6:	4856      	ldr	r0, [pc, #344]	@ (8002e30 <HAL_LTDC_MspInit+0x1a0>)
    __HAL_RCC_LTDC_CLK_ENABLE();
 8002cd8:	2400      	movs	r4, #0
 8002cda:	9400      	str	r4, [sp, #0]
 8002cdc:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 8002cde:	f042 6280 	orr.w	r2, r2, #67108864	@ 0x4000000
 8002ce2:	645a      	str	r2, [r3, #68]	@ 0x44
 8002ce4:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 8002ce6:	f002 6280 	and.w	r2, r2, #67108864	@ 0x4000000
 8002cea:	9200      	str	r2, [sp, #0]
 8002cec:	9a00      	ldr	r2, [sp, #0]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8002cee:	9401      	str	r4, [sp, #4]
 8002cf0:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8002cf2:	f042 0220 	orr.w	r2, r2, #32
 8002cf6:	631a      	str	r2, [r3, #48]	@ 0x30
 8002cf8:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8002cfa:	f002 0220 	and.w	r2, r2, #32
 8002cfe:	9201      	str	r2, [sp, #4]
 8002d00:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8002d02:	9402      	str	r4, [sp, #8]
 8002d04:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8002d06:	f042 0201 	orr.w	r2, r2, #1
 8002d0a:	631a      	str	r2, [r3, #48]	@ 0x30
 8002d0c:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8002d0e:	f002 0201 	and.w	r2, r2, #1
 8002d12:	9202      	str	r2, [sp, #8]
 8002d14:	9a02      	ldr	r2, [sp, #8]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8002d16:	9403      	str	r4, [sp, #12]
 8002d18:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8002d1a:	f042 0202 	orr.w	r2, r2, #2
 8002d1e:	631a      	str	r2, [r3, #48]	@ 0x30
 8002d20:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8002d22:	f002 0202 	and.w	r2, r2, #2
 8002d26:	9203      	str	r2, [sp, #12]
 8002d28:	9a03      	ldr	r2, [sp, #12]
    __HAL_RCC_GPIOG_CLK_ENABLE();
 8002d2a:	9404      	str	r4, [sp, #16]
 8002d2c:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8002d2e:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 8002d32:	631a      	str	r2, [r3, #48]	@ 0x30
 8002d34:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8002d36:	f002 0240 	and.w	r2, r2, #64	@ 0x40
 8002d3a:	9204      	str	r2, [sp, #16]
 8002d3c:	9a04      	ldr	r2, [sp, #16]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8002d3e:	9405      	str	r4, [sp, #20]
 8002d40:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8002d42:	f042 0204 	orr.w	r2, r2, #4
 8002d46:	631a      	str	r2, [r3, #48]	@ 0x30
 8002d48:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8002d4a:	f002 0204 	and.w	r2, r2, #4
 8002d4e:	9205      	str	r2, [sp, #20]
 8002d50:	9a05      	ldr	r2, [sp, #20]
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8002d52:	9406      	str	r4, [sp, #24]
 8002d54:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8002d56:	f042 0208 	orr.w	r2, r2, #8
 8002d5a:	631a      	str	r2, [r3, #48]	@ 0x30
 8002d5c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002d5e:	f003 0308 	and.w	r3, r3, #8
 8002d62:	9306      	str	r3, [sp, #24]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002d64:	2502      	movs	r5, #2
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8002d66:	260e      	movs	r6, #14
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8002d68:	9b06      	ldr	r3, [sp, #24]
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8002d6a:	960b      	str	r6, [sp, #44]	@ 0x2c
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002d6c:	f44f 6380 	mov.w	r3, #1024	@ 0x400
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8002d70:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002d72:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8002d76:	e9cd 4509 	strd	r4, r5, [sp, #36]	@ 0x24
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8002d7a:	f001 fe4d 	bl	8004a18 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_11
 8002d7e:	f641 0358 	movw	r3, #6232	@ 0x1858
                          |GPIO_PIN_12;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002d82:	482c      	ldr	r0, [pc, #176]	@ (8002e34 <HAL_LTDC_MspInit+0x1a4>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8002d84:	960b      	str	r6, [sp, #44]	@ 0x2c
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002d86:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002d88:	e9cd 3507 	strd	r3, r5, [sp, #28]

    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8002d8c:	2709      	movs	r7, #9
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8002d8e:	e9cd 4509 	strd	r4, r5, [sp, #36]	@ 0x24
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002d92:	f001 fe41 	bl	8004a18 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 8002d96:	2303      	movs	r3, #3
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002d98:	4827      	ldr	r0, [pc, #156]	@ (8002e38 <HAL_LTDC_MspInit+0x1a8>)
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8002d9a:	970b      	str	r7, [sp, #44]	@ 0x2c
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002d9c:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002d9e:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8002da2:	e9cd 4509 	strd	r4, r5, [sp, #36]	@ 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002da6:	f001 fe37 	bl	8004a18 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_11|GPIO_PIN_8|GPIO_PIN_9;
 8002daa:	f44f 6370 	mov.w	r3, #3840	@ 0xf00
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002dae:	4822      	ldr	r0, [pc, #136]	@ (8002e38 <HAL_LTDC_MspInit+0x1a8>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8002db0:	960b      	str	r6, [sp, #44]	@ 0x2c
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002db2:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002db4:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8002db8:	e9cd 4509 	strd	r4, r5, [sp, #36]	@ 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002dbc:	f001 fe2c 	bl	8004a18 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7|GPIO_PIN_11;
 8002dc0:	f44f 630c 	mov.w	r3, #2240	@ 0x8c0
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8002dc4:	481d      	ldr	r0, [pc, #116]	@ (8002e3c <HAL_LTDC_MspInit+0x1ac>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8002dc6:	960b      	str	r6, [sp, #44]	@ 0x2c
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8002dc8:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002dca:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8002dce:	e9cd 4509 	strd	r4, r5, [sp, #36]	@ 0x24
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8002dd2:	f001 fe21 	bl	8004a18 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 8002dd6:	23c0      	movs	r3, #192	@ 0xc0
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002dd8:	4819      	ldr	r0, [pc, #100]	@ (8002e40 <HAL_LTDC_MspInit+0x1b0>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8002dda:	960b      	str	r6, [sp, #44]	@ 0x2c
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002ddc:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002dde:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8002de2:	e9cd 4509 	strd	r4, r5, [sp, #36]	@ 0x24
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002de6:	f001 fe17 	bl	8004a18 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_3;
 8002dea:	2308      	movs	r3, #8
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8002dec:	4815      	ldr	r0, [pc, #84]	@ (8002e44 <HAL_LTDC_MspInit+0x1b4>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8002dee:	960b      	str	r6, [sp, #44]	@ 0x2c
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8002df0:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002df2:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8002df6:	e9cd 4509 	strd	r4, r5, [sp, #36]	@ 0x24
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8002dfa:	f001 fe0d 	bl	8004a18 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_12;
 8002dfe:	f44f 53a0 	mov.w	r3, #5120	@ 0x1400
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8002e02:	480e      	ldr	r0, [pc, #56]	@ (8002e3c <HAL_LTDC_MspInit+0x1ac>)
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8002e04:	970b      	str	r7, [sp, #44]	@ 0x2c
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8002e06:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002e08:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8002e0c:	e9cd 4509 	strd	r4, r5, [sp, #36]	@ 0x24
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8002e10:	f001 fe02 	bl	8004a18 <HAL_GPIO_Init>

    /* LTDC interrupt Init */
    HAL_NVIC_SetPriority(LTDC_IRQn, 5, 0);
 8002e14:	2058      	movs	r0, #88	@ 0x58
 8002e16:	4622      	mov	r2, r4
 8002e18:	2105      	movs	r1, #5
 8002e1a:	f001 fcb3 	bl	8004784 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(LTDC_IRQn);
 8002e1e:	2058      	movs	r0, #88	@ 0x58
 8002e20:	f001 fce2 	bl	80047e8 <HAL_NVIC_EnableIRQ>

    /* USER CODE END LTDC_MspInit 1 */

  }

}
 8002e24:	b019      	add	sp, #100	@ 0x64
 8002e26:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8002e28:	40016800 	.word	0x40016800
 8002e2c:	40023800 	.word	0x40023800
 8002e30:	40021400 	.word	0x40021400
 8002e34:	40020000 	.word	0x40020000
 8002e38:	40020400 	.word	0x40020400
 8002e3c:	40021800 	.word	0x40021800
 8002e40:	40020800 	.word	0x40020800
 8002e44:	40020c00 	.word	0x40020c00

08002e48 <HAL_SPI_MspInit>:
  * This function configures the hardware resources used in this example
  * @param hspi: SPI handle pointer
  * @retval None
  */
void HAL_SPI_MspInit(SPI_HandleTypeDef* hspi)
{
 8002e48:	b510      	push	{r4, lr}
 8002e4a:	4604      	mov	r4, r0
 8002e4c:	b088      	sub	sp, #32
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002e4e:	2214      	movs	r2, #20
 8002e50:	2100      	movs	r1, #0
 8002e52:	a803      	add	r0, sp, #12
 8002e54:	f020 f9ad 	bl	80231b2 <memset>
  if(hspi->Instance==SPI5)
 8002e58:	6822      	ldr	r2, [r4, #0]
 8002e5a:	4b14      	ldr	r3, [pc, #80]	@ (8002eac <HAL_SPI_MspInit+0x64>)
 8002e5c:	429a      	cmp	r2, r3
 8002e5e:	d123      	bne.n	8002ea8 <HAL_SPI_MspInit+0x60>
  {
    /* USER CODE BEGIN SPI5_MspInit 0 */

    /* USER CODE END SPI5_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_SPI5_CLK_ENABLE();
 8002e60:	f503 4368 	add.w	r3, r3, #59392	@ 0xe800
 8002e64:	2100      	movs	r1, #0
 8002e66:	9101      	str	r1, [sp, #4]
 8002e68:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
    GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8002e6a:	4811      	ldr	r0, [pc, #68]	@ (8002eb0 <HAL_SPI_MspInit+0x68>)
    __HAL_RCC_SPI5_CLK_ENABLE();
 8002e6c:	f442 1280 	orr.w	r2, r2, #1048576	@ 0x100000
 8002e70:	645a      	str	r2, [r3, #68]	@ 0x44
 8002e72:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 8002e74:	f402 1280 	and.w	r2, r2, #1048576	@ 0x100000
 8002e78:	9201      	str	r2, [sp, #4]
 8002e7a:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8002e7c:	9102      	str	r1, [sp, #8]
 8002e7e:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8002e80:	f042 0220 	orr.w	r2, r2, #32
 8002e84:	631a      	str	r2, [r3, #48]	@ 0x30
 8002e86:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002e88:	f003 0320 	and.w	r3, r3, #32
 8002e8c:	9302      	str	r3, [sp, #8]
 8002e8e:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002e90:	f44f 7260 	mov.w	r2, #896	@ 0x380
 8002e94:	2302      	movs	r3, #2
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
 8002e96:	2103      	movs	r1, #3
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002e98:	e9cd 2303 	strd	r2, r3, [sp, #12]
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
 8002e9c:	2305      	movs	r3, #5
 8002e9e:	e9cd 1306 	strd	r1, r3, [sp, #24]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8002ea2:	a903      	add	r1, sp, #12
 8002ea4:	f001 fdb8 	bl	8004a18 <HAL_GPIO_Init>

    /* USER CODE END SPI5_MspInit 1 */

  }

}
 8002ea8:	b008      	add	sp, #32
 8002eaa:	bd10      	pop	{r4, pc}
 8002eac:	40015000 	.word	0x40015000
 8002eb0:	40021400 	.word	0x40021400

08002eb4 <HAL_SDRAM_MspInit>:
  /* USER CODE BEGIN FMC_MspInit 1 */

  /* USER CODE END FMC_MspInit 1 */
}

void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
 8002eb4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8002eb8:	b086      	sub	sp, #24
  GPIO_InitTypeDef GPIO_InitStruct ={0};
 8002eba:	2300      	movs	r3, #0
 8002ebc:	9303      	str	r3, [sp, #12]
  if (FMC_Initialized) {
 8002ebe:	4b2b      	ldr	r3, [pc, #172]	@ (8002f6c <HAL_SDRAM_MspInit+0xb8>)
 8002ec0:	681c      	ldr	r4, [r3, #0]
 8002ec2:	2c00      	cmp	r4, #0
 8002ec4:	d14f      	bne.n	8002f66 <HAL_SDRAM_MspInit+0xb2>
  FMC_Initialized = 1;
 8002ec6:	f04f 0801 	mov.w	r8, #1
 8002eca:	f8c3 8000 	str.w	r8, [r3]
  __HAL_RCC_FMC_CLK_ENABLE();
 8002ece:	4b28      	ldr	r3, [pc, #160]	@ (8002f70 <HAL_SDRAM_MspInit+0xbc>)
 8002ed0:	9400      	str	r4, [sp, #0]
 8002ed2:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8002ed4:	4827      	ldr	r0, [pc, #156]	@ (8002f74 <HAL_SDRAM_MspInit+0xc0>)
  __HAL_RCC_FMC_CLK_ENABLE();
 8002ed6:	ea42 0208 	orr.w	r2, r2, r8
 8002eda:	639a      	str	r2, [r3, #56]	@ 0x38
 8002edc:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8002ede:	ea03 0308 	and.w	r3, r3, r8
 8002ee2:	9300      	str	r3, [sp, #0]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002ee4:	2702      	movs	r7, #2
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002ee6:	2603      	movs	r6, #3
 8002ee8:	250c      	movs	r5, #12
  __HAL_RCC_FMC_CLK_ENABLE();
 8002eea:	9b00      	ldr	r3, [sp, #0]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8002eec:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002eee:	f64f 033f 	movw	r3, #63551	@ 0xf83f
 8002ef2:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002ef6:	e9cd 6504 	strd	r6, r5, [sp, #16]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8002efa:	f001 fd8d 	bl	8004a18 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002efe:	481e      	ldr	r0, [pc, #120]	@ (8002f78 <HAL_SDRAM_MspInit+0xc4>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002f00:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002f02:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002f04:	e9cd 8701 	strd	r8, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002f08:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002f0c:	f001 fd84 	bl	8004a18 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_4|GPIO_PIN_5
 8002f10:	f248 1333 	movw	r3, #33075	@ 0x8133
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8002f14:	4819      	ldr	r0, [pc, #100]	@ (8002f7c <HAL_SDRAM_MspInit+0xc8>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002f16:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8002f18:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002f1a:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002f1e:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8002f22:	f001 fd79 	bl	8004a18 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10
 8002f26:	f64f 7383 	movw	r3, #65411	@ 0xff83
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8002f2a:	4815      	ldr	r0, [pc, #84]	@ (8002f80 <HAL_SDRAM_MspInit+0xcc>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002f2c:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8002f2e:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002f30:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002f34:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8002f38:	f001 fd6e 	bl	8004a18 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10|GPIO_PIN_14
 8002f3c:	f24c 7303 	movw	r3, #50947	@ 0xc703
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8002f40:	4810      	ldr	r0, [pc, #64]	@ (8002f84 <HAL_SDRAM_MspInit+0xd0>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002f42:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8002f44:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002f46:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002f4a:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8002f4e:	f001 fd63 	bl	8004a18 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6;
 8002f52:	2360      	movs	r3, #96	@ 0x60
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002f54:	480c      	ldr	r0, [pc, #48]	@ (8002f88 <HAL_SDRAM_MspInit+0xd4>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002f56:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002f58:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002f5a:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002f5e:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002f62:	f001 fd59 	bl	8004a18 <HAL_GPIO_Init>
  /* USER CODE END SDRAM_MspInit 0 */
  HAL_FMC_MspInit();
  /* USER CODE BEGIN SDRAM_MspInit 1 */

  /* USER CODE END SDRAM_MspInit 1 */
}
 8002f66:	b006      	add	sp, #24
 8002f68:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8002f6c:	2000256c 	.word	0x2000256c
 8002f70:	40023800 	.word	0x40023800
 8002f74:	40021400 	.word	0x40021400
 8002f78:	40020800 	.word	0x40020800
 8002f7c:	40021800 	.word	0x40021800
 8002f80:	40021000 	.word	0x40021000
 8002f84:	40020c00 	.word	0x40020c00
 8002f88:	40020400 	.word	0x40020400

08002f8c <HAL_InitTick>:
  *         reset by HAL_Init() or at any time when clock is configured, by HAL_RCC_ClockConfig().
  * @param  TickPriority: Tick interrupt priority.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 8002f8c:	b570      	push	{r4, r5, r6, lr}
 8002f8e:	b088      	sub	sp, #32
  uint32_t              pFLatency;

  HAL_StatusTypeDef     status;

  /* Enable TIM6 clock */
  __HAL_RCC_TIM6_CLK_ENABLE();
 8002f90:	2300      	movs	r3, #0
 8002f92:	9302      	str	r3, [sp, #8]
 8002f94:	4b20      	ldr	r3, [pc, #128]	@ (8003018 <HAL_InitTick+0x8c>)
 8002f96:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 8002f98:	f042 0210 	orr.w	r2, r2, #16
 8002f9c:	641a      	str	r2, [r3, #64]	@ 0x40
 8002f9e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002fa0:	f003 0310 	and.w	r3, r3, #16
 8002fa4:	9302      	str	r3, [sp, #8]
{
 8002fa6:	4605      	mov	r5, r0

  /* Get clock configuration */
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 8002fa8:	a901      	add	r1, sp, #4
 8002faa:	a803      	add	r0, sp, #12
  __HAL_RCC_TIM6_CLK_ENABLE();
 8002fac:	9b02      	ldr	r3, [sp, #8]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 8002fae:	f003 fbf9 	bl	80067a4 <HAL_RCC_GetClockConfig>

  /* Get APB1 prescaler */
  uwAPB1Prescaler = clkconfig.APB1CLKDivider;
  /* Compute TIM6 clock */
  if (uwAPB1Prescaler == RCC_HCLK_DIV1)
 8002fb2:	9b06      	ldr	r3, [sp, #24]
 8002fb4:	bb4b      	cbnz	r3, 800300a <HAL_InitTick+0x7e>
  {
    uwTimclock = HAL_RCC_GetPCLK1Freq();
 8002fb6:	f003 fbe5 	bl	8006784 <HAL_RCC_GetPCLK1Freq>

  /* Compute the prescaler value to have TIM6 counter clock equal to 1MHz */
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);

  /* Initialize TIM6 */
  htim6.Instance = TIM6;
 8002fba:	4e18      	ldr	r6, [pc, #96]	@ (800301c <HAL_InitTick+0x90>)
 8002fbc:	4b18      	ldr	r3, [pc, #96]	@ (8003020 <HAL_InitTick+0x94>)
 8002fbe:	6033      	str	r3, [r6, #0]
   * Period = [(TIM6CLK/1000) - 1]. to have a (1/1000) s time base.
   * Prescaler = (uwTimclock/1000000 - 1) to have a 1MHz counter clock.
   * ClockDivision = 0
   * Counter direction = Up
   */
  htim6.Init.Period = (1000000U / 1000U) - 1U;
 8002fc0:	f240 33e7 	movw	r3, #999	@ 0x3e7
 8002fc4:	60f3      	str	r3, [r6, #12]
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
 8002fc6:	4b17      	ldr	r3, [pc, #92]	@ (8003024 <HAL_InitTick+0x98>)
 8002fc8:	fbb0 f3f3 	udiv	r3, r0, r3
 8002fcc:	3b01      	subs	r3, #1
  htim6.Init.Prescaler = uwPrescalerValue;
 8002fce:	6073      	str	r3, [r6, #4]
  htim6.Init.ClockDivision = 0;
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
  htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;

  status = HAL_TIM_Base_Init(&htim6);
 8002fd0:	4630      	mov	r0, r6
  htim6.Init.ClockDivision = 0;
 8002fd2:	2300      	movs	r3, #0
 8002fd4:	6133      	str	r3, [r6, #16]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
 8002fd6:	60b3      	str	r3, [r6, #8]
  htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8002fd8:	61b3      	str	r3, [r6, #24]
  status = HAL_TIM_Base_Init(&htim6);
 8002fda:	f004 fa21 	bl	8007420 <HAL_TIM_Base_Init>
  if (status == HAL_OK)
 8002fde:	4604      	mov	r4, r0
 8002fe0:	b980      	cbnz	r0, 8003004 <HAL_InitTick+0x78>
  {
    /* Start the TIM time Base generation in interrupt mode */
    status = HAL_TIM_Base_Start_IT(&htim6);
 8002fe2:	4630      	mov	r0, r6
 8002fe4:	f004 f8f2 	bl	80071cc <HAL_TIM_Base_Start_IT>
    if (status == HAL_OK)
 8002fe8:	4604      	mov	r4, r0
 8002fea:	b958      	cbnz	r0, 8003004 <HAL_InitTick+0x78>
    {
    /* Enable the TIM6 global Interrupt */
        HAL_NVIC_EnableIRQ(TIM6_DAC_IRQn);
 8002fec:	2036      	movs	r0, #54	@ 0x36
 8002fee:	f001 fbfb 	bl	80047e8 <HAL_NVIC_EnableIRQ>
      /* Configure the SysTick IRQ priority */
      if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 8002ff2:	2d0f      	cmp	r5, #15
 8002ff4:	d80d      	bhi.n	8003012 <HAL_InitTick+0x86>
      {
        /* Configure the TIM IRQ priority */
        HAL_NVIC_SetPriority(TIM6_DAC_IRQn, TickPriority, 0U);
 8002ff6:	4622      	mov	r2, r4
 8002ff8:	4629      	mov	r1, r5
 8002ffa:	2036      	movs	r0, #54	@ 0x36
 8002ffc:	f001 fbc2 	bl	8004784 <HAL_NVIC_SetPriority>
        uwTickPrio = TickPriority;
 8003000:	4b09      	ldr	r3, [pc, #36]	@ (8003028 <HAL_InitTick+0x9c>)
 8003002:	601d      	str	r5, [r3, #0]
    }
  }

 /* Return function status */
  return status;
}
 8003004:	4620      	mov	r0, r4
 8003006:	b008      	add	sp, #32
 8003008:	bd70      	pop	{r4, r5, r6, pc}
    uwTimclock = 2UL * HAL_RCC_GetPCLK1Freq();
 800300a:	f003 fbbb 	bl	8006784 <HAL_RCC_GetPCLK1Freq>
 800300e:	0040      	lsls	r0, r0, #1
 8003010:	e7d3      	b.n	8002fba <HAL_InitTick+0x2e>
        status = HAL_ERROR;
 8003012:	2401      	movs	r4, #1
 8003014:	e7f6      	b.n	8003004 <HAL_InitTick+0x78>
 8003016:	bf00      	nop
 8003018:	40023800 	.word	0x40023800
 800301c:	20002570 	.word	0x20002570
 8003020:	40001000 	.word	0x40001000
 8003024:	000f4240 	.word	0x000f4240
 8003028:	200000cc 	.word	0x200000cc

0800302c <NMI_Handler>:

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */

  /* USER CODE END NonMaskableInt_IRQn 1 */
}
 800302c:	4770      	bx	lr

0800302e <HardFault_Handler>:
void HardFault_Handler(void)
{
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 800302e:	e7fe      	b.n	800302e <HardFault_Handler>

08003030 <MemManage_Handler>:
void MemManage_Handler(void)
{
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8003030:	e7fe      	b.n	8003030 <MemManage_Handler>

08003032 <BusFault_Handler>:
void BusFault_Handler(void)
{
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8003032:	e7fe      	b.n	8003032 <BusFault_Handler>

08003034 <UsageFault_Handler>:
void UsageFault_Handler(void)
{
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8003034:	e7fe      	b.n	8003034 <UsageFault_Handler>

08003036 <DebugMon_Handler>:
}

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
 8003036:	4770      	bx	lr

08003038 <TIM6_DAC_IRQHandler>:
void TIM6_DAC_IRQHandler(void)
{
  /* USER CODE BEGIN TIM6_DAC_IRQn 0 */

  /* USER CODE END TIM6_DAC_IRQn 0 */
  HAL_TIM_IRQHandler(&htim6);
 8003038:	4801      	ldr	r0, [pc, #4]	@ (8003040 <TIM6_DAC_IRQHandler+0x8>)
 800303a:	f004 b905 	b.w	8007248 <HAL_TIM_IRQHandler>
 800303e:	bf00      	nop
 8003040:	20002570 	.word	0x20002570

08003044 <OTG_HS_IRQHandler>:
void OTG_HS_IRQHandler(void)
{
  /* USER CODE BEGIN OTG_HS_IRQn 0 */

  /* USER CODE END OTG_HS_IRQn 0 */
  HAL_PCD_IRQHandler(&hpcd_USB_OTG_HS);
 8003044:	4801      	ldr	r0, [pc, #4]	@ (800304c <OTG_HS_IRQHandler+0x8>)
 8003046:	f002 bdb5 	b.w	8005bb4 <HAL_PCD_IRQHandler>
 800304a:	bf00      	nop
 800304c:	20001e9c 	.word	0x20001e9c

08003050 <LTDC_IRQHandler>:
void LTDC_IRQHandler(void)
{
  /* USER CODE BEGIN LTDC_IRQn 0 */

  /* USER CODE END LTDC_IRQn 0 */
  HAL_LTDC_IRQHandler(&hltdc);
 8003050:	4801      	ldr	r0, [pc, #4]	@ (8003058 <LTDC_IRQHandler+0x8>)
 8003052:	f002 bb49 	b.w	80056e8 <HAL_LTDC_IRQHandler>
 8003056:	bf00      	nop
 8003058:	20002424 	.word	0x20002424

0800305c <DMA2D_IRQHandler>:
void DMA2D_IRQHandler(void)
{
  /* USER CODE BEGIN DMA2D_IRQn 0 */

  /* USER CODE END DMA2D_IRQn 0 */
  HAL_DMA2D_IRQHandler(&hdma2d);
 800305c:	4801      	ldr	r0, [pc, #4]	@ (8003064 <DMA2D_IRQHandler+0x8>)
 800305e:	f001 bc0d 	b.w	800487c <HAL_DMA2D_IRQHandler>
 8003062:	bf00      	nop
 8003064:	20002520 	.word	0x20002520

08003068 <_getpid>:
}

int _getpid(void)
{
	return 1;
}
 8003068:	2001      	movs	r0, #1
 800306a:	4770      	bx	lr

0800306c <_kill>:

int _kill(int pid, int sig)
{
 800306c:	b508      	push	{r3, lr}
	errno = EINVAL;
 800306e:	f020 f943 	bl	80232f8 <__errno>
 8003072:	2316      	movs	r3, #22
 8003074:	6003      	str	r3, [r0, #0]
	return -1;
}
 8003076:	f04f 30ff 	mov.w	r0, #4294967295
 800307a:	bd08      	pop	{r3, pc}

0800307c <_exit>:

void _exit (int status)
{
 800307c:	b508      	push	{r3, lr}
	errno = EINVAL;
 800307e:	f020 f93b 	bl	80232f8 <__errno>
 8003082:	2316      	movs	r3, #22
 8003084:	6003      	str	r3, [r0, #0]
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
 8003086:	e7fe      	b.n	8003086 <_exit+0xa>

08003088 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8003088:	b570      	push	{r4, r5, r6, lr}
 800308a:	460d      	mov	r5, r1
 800308c:	4614      	mov	r4, r2
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800308e:	460e      	mov	r6, r1
 8003090:	1b73      	subs	r3, r6, r5
 8003092:	429c      	cmp	r4, r3
 8003094:	dc01      	bgt.n	800309a <_read+0x12>
	{
		*ptr++ = __io_getchar();
	}

return len;
}
 8003096:	4620      	mov	r0, r4
 8003098:	bd70      	pop	{r4, r5, r6, pc}
		*ptr++ = __io_getchar();
 800309a:	f3af 8000 	nop.w
 800309e:	f806 0b01 	strb.w	r0, [r6], #1
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80030a2:	e7f5      	b.n	8003090 <_read+0x8>

080030a4 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 80030a4:	b570      	push	{r4, r5, r6, lr}
 80030a6:	460d      	mov	r5, r1
 80030a8:	4614      	mov	r4, r2
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80030aa:	460e      	mov	r6, r1
 80030ac:	1b73      	subs	r3, r6, r5
 80030ae:	429c      	cmp	r4, r3
 80030b0:	dc01      	bgt.n	80030b6 <_write+0x12>
	{
		__io_putchar(*ptr++);
	}
	return len;
}
 80030b2:	4620      	mov	r0, r4
 80030b4:	bd70      	pop	{r4, r5, r6, pc}
		__io_putchar(*ptr++);
 80030b6:	f816 0b01 	ldrb.w	r0, [r6], #1
 80030ba:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80030be:	e7f5      	b.n	80030ac <_write+0x8>

080030c0 <_close>:

int _close(int file)
{
	return -1;
}
 80030c0:	f04f 30ff 	mov.w	r0, #4294967295
 80030c4:	4770      	bx	lr

080030c6 <_fstat>:


int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
 80030c6:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
 80030ca:	604b      	str	r3, [r1, #4]
	return 0;
}
 80030cc:	2000      	movs	r0, #0
 80030ce:	4770      	bx	lr

080030d0 <_isatty>:

int _isatty(int file)
{
	return 1;
}
 80030d0:	2001      	movs	r0, #1
 80030d2:	4770      	bx	lr

080030d4 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
	return 0;
}
 80030d4:	2000      	movs	r0, #0
 80030d6:	4770      	bx	lr

080030d8 <_sbrk>:
{
	extern char end asm("end");
	static char *heap_end;
	char *prev_heap_end;

	if (heap_end == 0)
 80030d8:	4a0a      	ldr	r2, [pc, #40]	@ (8003104 <_sbrk+0x2c>)
 80030da:	6811      	ldr	r1, [r2, #0]
{
 80030dc:	b508      	push	{r3, lr}
 80030de:	4603      	mov	r3, r0
	if (heap_end == 0)
 80030e0:	b909      	cbnz	r1, 80030e6 <_sbrk+0xe>
		heap_end = &end;
 80030e2:	4909      	ldr	r1, [pc, #36]	@ (8003108 <_sbrk+0x30>)
 80030e4:	6011      	str	r1, [r2, #0]

	prev_heap_end = heap_end;
 80030e6:	6810      	ldr	r0, [r2, #0]
	if (heap_end + incr > stack_ptr)
 80030e8:	4669      	mov	r1, sp
 80030ea:	4403      	add	r3, r0
 80030ec:	428b      	cmp	r3, r1
 80030ee:	d906      	bls.n	80030fe <_sbrk+0x26>
	{
		errno = ENOMEM;
 80030f0:	f020 f902 	bl	80232f8 <__errno>
 80030f4:	230c      	movs	r3, #12
 80030f6:	6003      	str	r3, [r0, #0]
		return (caddr_t) -1;
 80030f8:	f04f 30ff 	mov.w	r0, #4294967295
	}

	heap_end += incr;

	return (caddr_t) prev_heap_end;
}
 80030fc:	bd08      	pop	{r3, pc}
	heap_end += incr;
 80030fe:	6013      	str	r3, [r2, #0]
	return (caddr_t) prev_heap_end;
 8003100:	e7fc      	b.n	80030fc <_sbrk+0x24>
 8003102:	bf00      	nop
 8003104:	200025b8 	.word	0x200025b8
 8003108:	20014118 	.word	0x20014118

0800310c <_ZN23ApplicationFontProviderD1Ev>:
    static const touchgfx::FontId LARGE = 1;   // verdana_40_4bpp
    static const touchgfx::FontId SMALL = 2;   // verdana_10_4bpp
    static const uint16_t NUMBER_OF_FONTS = 3;
};

class ApplicationFontProvider : public touchgfx::FontProvider
 800310c:	4770      	bx	lr

0800310e <_ZN23ApplicationFontProviderD0Ev>:
 800310e:	b510      	push	{r4, lr}
 8003110:	2104      	movs	r1, #4
 8003112:	4604      	mov	r4, r0
 8003114:	f01e fe07 	bl	8021d26 <_ZdlPvj>
 8003118:	4620      	mov	r0, r4
 800311a:	bd10      	pop	{r4, pc}

0800311c <_ZN23ApplicationFontProvider7getFontEt>:
#include <fonts/GeneratedFont.hpp>
#include <texts/TypedTextDatabase.hpp>

touchgfx::Font* ApplicationFontProvider::getFont(touchgfx::FontId typography)
{
    switch (typography)
 800311c:	2901      	cmp	r1, #1
{
 800311e:	b508      	push	{r3, lr}
    switch (typography)
 8003120:	d006      	beq.n	8003130 <_ZN23ApplicationFontProvider7getFontEt+0x14>
 8003122:	2902      	cmp	r1, #2
 8003124:	d008      	beq.n	8003138 <_ZN23ApplicationFontProvider7getFontEt+0x1c>
 8003126:	b959      	cbnz	r1, 8003140 <_ZN23ApplicationFontProvider7getFontEt+0x24>
    {
    case Typography::DEFAULT:
        // verdana_20_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
 8003128:	f000 fda8 	bl	8003c7c <_ZN17TypedTextDatabase8getFontsEv>
 800312c:	6800      	ldr	r0, [r0, #0]
        // verdana_10_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
    default:
        return 0;
    }
}
 800312e:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[1]);
 8003130:	f000 fda4 	bl	8003c7c <_ZN17TypedTextDatabase8getFontsEv>
 8003134:	6840      	ldr	r0, [r0, #4]
 8003136:	e7fa      	b.n	800312e <_ZN23ApplicationFontProvider7getFontEt+0x12>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
 8003138:	f000 fda0 	bl	8003c7c <_ZN17TypedTextDatabase8getFontsEv>
 800313c:	6880      	ldr	r0, [r0, #8]
 800313e:	e7f6      	b.n	800312e <_ZN23ApplicationFontProvider7getFontEt+0x12>
    switch (typography)
 8003140:	2000      	movs	r0, #0
 8003142:	e7f4      	b.n	800312e <_ZN23ApplicationFontProvider7getFontEt+0x12>

08003144 <_ZN14BitmapDatabase11getInstanceEv>:
namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}
 8003144:	4800      	ldr	r0, [pc, #0]	@ (8003148 <_ZN14BitmapDatabase11getInstanceEv+0x4>)
 8003146:	4770      	bx	lr
 8003148:	08024c24 	.word	0x08024c24

0800314c <_ZN14BitmapDatabase15getInstanceSizeEv>:

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
 800314c:	2001      	movs	r0, #1
 800314e:	4770      	bx	lr

08003150 <_ZNK8touchgfx4Font8getGlyphEt>:
     *
     * @return A pointer to the glyph node or null if the glyph was not found.
     *
     * @see TextProvider::getNextLigature
     */
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
 8003150:	b513      	push	{r0, r1, r4, lr}
 8003152:	2400      	movs	r4, #0
    {
        if (unicode == 0)
 8003154:	b151      	cbz	r1, 800316c <_ZNK8touchgfx4Font8getGlyphEt+0x1c>
        {
            return 0;
        }
        const uint8_t* dummyPixelDataPointer = 0;
        uint8_t bitsPerPixelDummy = 0;
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 8003156:	6803      	ldr	r3, [r0, #0]
        const uint8_t* dummyPixelDataPointer = 0;
 8003158:	9401      	str	r4, [sp, #4]
        uint8_t bitsPerPixelDummy = 0;
 800315a:	f88d 4003 	strb.w	r4, [sp, #3]
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 800315e:	aa01      	add	r2, sp, #4
 8003160:	689c      	ldr	r4, [r3, #8]
 8003162:	f10d 0303 	add.w	r3, sp, #3
 8003166:	47a0      	blx	r4
        return glyph;
    }
 8003168:	b002      	add	sp, #8
 800316a:	bd10      	pop	{r4, pc}
            return 0;
 800316c:	4608      	mov	r0, r1
 800316e:	e7fb      	b.n	8003168 <_ZNK8touchgfx4Font8getGlyphEt+0x18>

08003170 <_ZNK8touchgfx4Font15getFallbackCharEv>:
     * @return The default character for the typography in case no glyph is available.
     */
    virtual Unicode::UnicodeChar getFallbackChar() const
    {
        return fallbackCharacter;
    }
 8003170:	89c0      	ldrh	r0, [r0, #14]
 8003172:	4770      	bx	lr

08003174 <_ZNK8touchgfx4Font15getEllipsisCharEv>:
     * @see TextArea::setWideTextAction
     */
    virtual Unicode::UnicodeChar getEllipsisChar() const
    {
        return ellipsisCharacter;
    }
 8003174:	8a00      	ldrh	r0, [r0, #16]
 8003176:	4770      	bx	lr

08003178 <_ZNK8touchgfx4Font11getBaselineEv>:
     *       getHeight for this.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getBaseline() const
    {
        return baselineHeight;
    }
 8003178:	88c0      	ldrh	r0, [r0, #6]
 800317a:	4770      	bx	lr

0800317c <_ZNK8touchgfx4Font9getHeightEv>:
     * @return The font height.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getHeight() const
    {
        return fontHeight;
    }
 800317c:	8880      	ldrh	r0, [r0, #4]
 800317e:	4770      	bx	lr

08003180 <_ZNK8touchgfx4Font15getBitsPerPixelEv>:
     *
     * @return The number of bits used per pixel in this font.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getBitsPerPixel() const
    {
        return bPerPixel;
 8003180:	7a80      	ldrb	r0, [r0, #10]
    }
 8003182:	f000 007f 	and.w	r0, r0, #127	@ 0x7f
 8003186:	4770      	bx	lr

08003188 <_ZNK8touchgfx4Font15getByteAlignRowEv>:
     *
     * @return True if each glyph row is stored byte aligned, false otherwise.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getByteAlignRow() const
    {
        return bAlignRow;
 8003188:	7a80      	ldrb	r0, [r0, #10]
    }
 800318a:	09c0      	lsrs	r0, r0, #7
 800318c:	4770      	bx	lr

0800318e <_ZNK8touchgfx4Font17isVectorBasedFontEv>:
     * @return True if this Font is vector based.
     */
    virtual bool isVectorBasedFont() const
    {
        return false;
    }
 800318e:	2000      	movs	r0, #0
 8003190:	4770      	bx	lr
	...

08003194 <_ZNK8touchgfx4Font14getScaleFactorEv>:
     * @return The scale factor
     */
    virtual float getScaleFactor() const
    {
        return 0;
    }
 8003194:	ed9f 0a01 	vldr	s0, [pc, #4]	@ 800319c <_ZNK8touchgfx4Font14getScaleFactorEv+0x8>
 8003198:	4770      	bx	lr
 800319a:	bf00      	nop
 800319c:	00000000 	.word	0x00000000

080031a0 <_ZN8touchgfx11Application19changeToStartScreenEv>:
     *       this is explicitly done in your
     *       FrontendApplication::changeToStartScreen().
     */
    virtual void changeToStartScreen()
    {
    }
 80031a0:	4770      	bx	lr

080031a2 <_ZN8touchgfx11Application15appSwitchScreenEh>:
     * @param screenId An id that maps to the desired screen.
     */
    virtual void appSwitchScreen(uint8_t screenId)
    {
        (void)screenId; // Unused variable
    }
 80031a2:	4770      	bx	lr

080031a4 <_ZN8touchgfx11Application13requestRedrawERNS_4RectE>:
     *
     * @param [in,out] rect The Rect that must be redrawn.
     */
    virtual void requestRedraw(Rect& rect)
    {
        redraw = rect;
 80031a4:	f500 7398 	add.w	r3, r0, #304	@ 0x130
 80031a8:	6808      	ldr	r0, [r1, #0]
 80031aa:	6849      	ldr	r1, [r1, #4]
 80031ac:	c303      	stmia	r3!, {r0, r1}
    }
 80031ae:	4770      	bx	lr

080031b0 <_ZN8touchgfx10Transition8tearDownEv>:
     * Tears down the Animation. Called before the destructor is called, when the
     * application changes the transition.
     */
    virtual void tearDown()
    {
    }
 80031b0:	4770      	bx	lr

080031b2 <_ZN8touchgfx10Transition4initEv>:
     * Initializes the transition. Called after the constructor is called, when the
     * application changes the transition.
     */
    virtual void init()
    {
    }
 80031b2:	4770      	bx	lr

080031b4 <_ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE>:
     *
     * @param [in] cont The Container the transition should have access to.
     */
    virtual void setScreenContainer(Container& cont)
    {
        screenContainer = &cont;
 80031b4:	6041      	str	r1, [r0, #4]
    }
 80031b6:	4770      	bx	lr

080031b8 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type>
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 80031b8:	4770      	bx	lr

080031ba <_ZN23FrontendApplicationBaseD1Ev>:

class FrontendApplicationBase : public touchgfx::MVPApplication
{
public:
    FrontendApplicationBase(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplicationBase() { }
 80031ba:	4770      	bx	lr

080031bc <_ZN23FrontendApplicationBase19changeToStartScreenEv>:
 80031bc:	4b06      	ldr	r3, [pc, #24]	@ (80031d8 <_ZN23FrontendApplicationBase19changeToStartScreenEv+0x1c>)
 80031be:	f8c0 314c 	str.w	r3, [r0, #332]	@ 0x14c
 80031c2:	2300      	movs	r3, #0
 80031c4:	f8c0 3150 	str.w	r3, [r0, #336]	@ 0x150
// Screen1

void FrontendApplicationBase::gotoScreen1ScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoScreen1ScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 80031c8:	f500 73a2 	add.w	r3, r0, #324	@ 0x144
 80031cc:	f8c0 0148 	str.w	r0, [r0, #328]	@ 0x148
 80031d0:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140

    virtual void changeToStartScreen()
    {
        gotoScreen1ScreenNoTransition();
    }
 80031d4:	4770      	bx	lr
 80031d6:	bf00      	nop
 80031d8:	0800327d 	.word	0x0800327d

080031dc <_ZN8touchgfx12NoTransition15handleTickEventEv>:
{
public:
    /** Indicates that the transition is done after the first tick. */
    virtual void handleTickEvent()
    {
        done = true;
 80031dc:	2301      	movs	r3, #1
 80031de:	7203      	strb	r3, [r0, #8]
    }
 80031e0:	4770      	bx	lr

080031e2 <_ZN8touchgfx12NoTransitionD1Ev>:
class NoTransition : public Transition
 80031e2:	4770      	bx	lr

080031e4 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv>:

    /**
     * Calls the member function. Do not call execute unless isValid() returns true (ie. a
     * pointer to the object and the function has been set).
     */
    virtual void execute()
 80031e4:	b410      	push	{r4}
    {
        (pobject->*pmemfun)();
 80031e6:	68c2      	ldr	r2, [r0, #12]
 80031e8:	6841      	ldr	r1, [r0, #4]
 80031ea:	1054      	asrs	r4, r2, #1
    virtual void execute()
 80031ec:	4603      	mov	r3, r0
        (pobject->*pmemfun)();
 80031ee:	eb01 0062 	add.w	r0, r1, r2, asr #1
 80031f2:	07d2      	lsls	r2, r2, #31
 80031f4:	bf48      	it	mi
 80031f6:	590a      	ldrmi	r2, [r1, r4]
 80031f8:	689b      	ldr	r3, [r3, #8]
    }
 80031fa:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)();
 80031fe:	bf48      	it	mi
 8003200:	58d3      	ldrmi	r3, [r2, r3]
 8003202:	4718      	bx	r3

08003204 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv>:
    /**
     * Function to check whether the Callback has been initialized with values.
     *
     * @return true If the callback is valid (i.e. safe to call execute).
     */
    virtual bool isValid() const
 8003204:	4603      	mov	r3, r0
    {
        return (pobject != 0) && (pmemfun != 0);
 8003206:	6840      	ldr	r0, [r0, #4]
 8003208:	b130      	cbz	r0, 8003218 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x14>
 800320a:	689a      	ldr	r2, [r3, #8]
 800320c:	b91a      	cbnz	r2, 8003216 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x12>
 800320e:	68d8      	ldr	r0, [r3, #12]
 8003210:	f000 0001 	and.w	r0, r0, #1
 8003214:	4770      	bx	lr
 8003216:	2001      	movs	r0, #1
    }
 8003218:	4770      	bx	lr

0800321a <_ZN8touchgfx12NoTransitionD0Ev>:
 800321a:	b510      	push	{r4, lr}
 800321c:	210c      	movs	r1, #12
 800321e:	4604      	mov	r4, r0
 8003220:	f01e fd81 	bl	8021d26 <_ZdlPvj>
 8003224:	4620      	mov	r0, r4
 8003226:	bd10      	pop	{r4, pc}

08003228 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8003228:	b510      	push	{r4, lr}
 800322a:	2110      	movs	r1, #16
 800322c:	4604      	mov	r4, r0
 800322e:	f01e fd7a 	bl	8021d26 <_ZdlPvj>
 8003232:	4620      	mov	r0, r4
 8003234:	bd10      	pop	{r4, pc}

08003236 <_ZN23FrontendApplicationBaseD0Ev>:
    virtual ~FrontendApplicationBase() { }
 8003236:	b510      	push	{r4, lr}
 8003238:	f44f 71ae 	mov.w	r1, #348	@ 0x15c
 800323c:	4604      	mov	r4, r0
 800323e:	f01e fd72 	bl	8021d26 <_ZdlPvj>
 8003242:	4620      	mov	r0, r4
 8003244:	bd10      	pop	{r4, pc}

08003246 <_ZN8touchgfx10Transition10invalidateEv>:
    virtual void invalidate()
 8003246:	b510      	push	{r4, lr}
        Application::getInstance()->invalidate();
 8003248:	f00c fb64 	bl	800f914 <_ZN8touchgfx11Application11getInstanceEv>
 800324c:	6803      	ldr	r3, [r0, #0]
    }
 800324e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        Application::getInstance()->invalidate();
 8003252:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8003254:	4718      	bx	r3

08003256 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv>:
    /**
     * Handles the pending screen transition.
     *
     * Delegates the work to evaluatePendingScreenTransition()
     */
    virtual void handlePendingScreenTransition()
 8003256:	b510      	push	{r4, lr}
 8003258:	4604      	mov	r4, r0
     * Evaluates the pending Callback instances. If a callback is valid, it is executed and
     * a Screen transition is executed.
     */
    void evaluatePendingScreenTransition()
    {
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
 800325a:	f8d0 0140 	ldr.w	r0, [r0, #320]	@ 0x140
 800325e:	b158      	cbz	r0, 8003278 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
 8003260:	6803      	ldr	r3, [r0, #0]
 8003262:	68db      	ldr	r3, [r3, #12]
 8003264:	4798      	blx	r3
 8003266:	b138      	cbz	r0, 8003278 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
        {
            pendingScreenTransitionCallback->execute();
 8003268:	f8d4 0140 	ldr.w	r0, [r4, #320]	@ 0x140
 800326c:	6803      	ldr	r3, [r0, #0]
 800326e:	689b      	ldr	r3, [r3, #8]
 8003270:	4798      	blx	r3
            pendingScreenTransitionCallback = 0;
 8003272:	2300      	movs	r3, #0
 8003274:	f8c4 3140 	str.w	r3, [r4, #320]	@ 0x140
    }
 8003278:	bd10      	pop	{r4, pc}
	...

0800327c <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv>:
}

void FrontendApplicationBase::gotoScreen1ScreenNoTransitionImpl()
{
 800327c:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<Screen1View, Screen1Presenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8003280:	e9d0 6a55 	ldrd	r6, sl, [r0, #340]	@ 0x154
{
 8003284:	4607      	mov	r7, r0
 *         value as the old presenter due to memory reuse.
 */
template <class ScreenType, class PresenterType, class TransType, class ModelType>
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
{
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8003286:	68b0      	ldr	r0, [r6, #8]
 8003288:	6803      	ldr	r3, [r0, #0]
 800328a:	6a1b      	ldr	r3, [r3, #32]
 800328c:	4798      	blx	r3
 800328e:	f5b0 7f69 	cmp.w	r0, #932	@ 0x3a4
 8003292:	d205      	bcs.n	80032a0 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x24>
 8003294:	4b44      	ldr	r3, [pc, #272]	@ (80033a8 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x12c>)
 8003296:	4a45      	ldr	r2, [pc, #276]	@ (80033ac <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x130>)
 8003298:	21a3      	movs	r1, #163	@ 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 800329a:	4845      	ldr	r0, [pc, #276]	@ (80033b0 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x134>)
 800329c:	f01f fd82 	bl	8022da4 <__assert_func>
 80032a0:	6870      	ldr	r0, [r6, #4]
 80032a2:	6803      	ldr	r3, [r0, #0]
 80032a4:	6a1b      	ldr	r3, [r3, #32]
 80032a6:	4798      	blx	r3
 80032a8:	280f      	cmp	r0, #15
 80032aa:	d803      	bhi.n	80032b4 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x38>
 80032ac:	4b41      	ldr	r3, [pc, #260]	@ (80033b4 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x138>)
 80032ae:	4a3f      	ldr	r2, [pc, #252]	@ (80033ac <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x130>)
 80032b0:	21a4      	movs	r1, #164	@ 0xa4
 80032b2:	e7f2      	b.n	800329a <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80032b4:	68f0      	ldr	r0, [r6, #12]
 80032b6:	6803      	ldr	r3, [r0, #0]
 80032b8:	6a1b      	ldr	r3, [r3, #32]
 80032ba:	4798      	blx	r3
 80032bc:	280b      	cmp	r0, #11
 80032be:	d803      	bhi.n	80032c8 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x4c>
 80032c0:	4b3d      	ldr	r3, [pc, #244]	@ (80033b8 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x13c>)
 80032c2:	4a3a      	ldr	r2, [pc, #232]	@ (80033ac <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x130>)
 80032c4:	21a5      	movs	r1, #165	@ 0xa5
 80032c6:	e7e8      	b.n	800329a <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 80032c8:	f00c fb24 	bl	800f914 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 80032cc:	f8df 90f0 	ldr.w	r9, [pc, #240]	@ 80033c0 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x144>

    /** Clears all currently registered timer widgets. */

    void clearAllTimerWidgets()
    {
        timerWidgets.clear();
 80032d0:	3004      	adds	r0, #4
 80032d2:	f00c fb44 	bl	800f95e <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 80032d6:	f8d9 0000 	ldr.w	r0, [r9]
 80032da:	b110      	cbz	r0, 80032e2 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x66>
        (*currentTrans)->tearDown();
 80032dc:	6803      	ldr	r3, [r0, #0]
 80032de:	68db      	ldr	r3, [r3, #12]
 80032e0:	4798      	blx	r3
    if (*currentTrans)
 80032e2:	f8d9 0000 	ldr.w	r0, [r9]
 80032e6:	b110      	cbz	r0, 80032ee <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x72>
        (*currentTrans)->~Transition();
 80032e8:	6803      	ldr	r3, [r0, #0]
 80032ea:	681b      	ldr	r3, [r3, #0]
 80032ec:	4798      	blx	r3
    if (*currentScreen)
 80032ee:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 80033c4 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x148>
 80032f2:	f8d8 0000 	ldr.w	r0, [r8]
 80032f6:	b110      	cbz	r0, 80032fe <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 80032f8:	6803      	ldr	r3, [r0, #0]
 80032fa:	695b      	ldr	r3, [r3, #20]
 80032fc:	4798      	blx	r3
    if (*currentPresenter)
 80032fe:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 8003302:	b110      	cbz	r0, 800330a <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8003304:	6803      	ldr	r3, [r0, #0]
 8003306:	685b      	ldr	r3, [r3, #4]
 8003308:	4798      	blx	r3
    if (*currentScreen)
 800330a:	f8d8 0000 	ldr.w	r0, [r8]
 800330e:	b110      	cbz	r0, 8003316 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x9a>
        (*currentScreen)->~Screen();
 8003310:	6803      	ldr	r3, [r0, #0]
 8003312:	681b      	ldr	r3, [r3, #0]
 8003314:	4798      	blx	r3
    if (*currentPresenter)
 8003316:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 800331a:	b110      	cbz	r0, 8003322 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 800331c:	6803      	ldr	r3, [r0, #0]
 800331e:	689b      	ldr	r3, [r3, #8]
 8003320:	4798      	blx	r3

    prepareTransition(currentScreen, currentPresenter, currentTrans);

    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8003322:	68f0      	ldr	r0, [r6, #12]
     * @return A typed reference to the object at the specified index.
     */
    template <typename T>
    T& at(const uint16_t index)
    {
        return *static_cast<T*>(element(index));
 8003324:	6803      	ldr	r3, [r0, #0]
 8003326:	2100      	movs	r1, #0
 8003328:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800332a:	4798      	blx	r3
        : screenContainer(0), done(false)
 800332c:	f04f 0b00 	mov.w	fp, #0
 8003330:	4b22      	ldr	r3, [pc, #136]	@ (80033bc <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x140>)
 8003332:	f8c0 b004 	str.w	fp, [r0, #4]
 8003336:	4604      	mov	r4, r0
 8003338:	f880 b008 	strb.w	fp, [r0, #8]
 800333c:	6003      	str	r3, [r0, #0]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 800333e:	68b0      	ldr	r0, [r6, #8]
 8003340:	6803      	ldr	r3, [r0, #0]
 8003342:	4659      	mov	r1, fp
 8003344:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003346:	4798      	blx	r3
 8003348:	4605      	mov	r5, r0
 800334a:	f000 fd87 	bl	8003e5c <_ZN11Screen1ViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 800334e:	6870      	ldr	r0, [r6, #4]
 8003350:	6803      	ldr	r3, [r0, #0]
 8003352:	4659      	mov	r1, fp
 8003354:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003356:	4798      	blx	r3
 8003358:	4629      	mov	r1, r5
 800335a:	4606      	mov	r6, r0
 800335c:	f000 fcd8 	bl	8003d10 <_ZN16Screen1PresenterC1ER11Screen1View>
    *currentTrans = newTransition;
    *currentPresenter = newPresenter;
    *currentScreen = newScreen;
    model->bind(newPresenter);
 8003360:	1d33      	adds	r3, r6, #4
    *currentPresenter = newPresenter;
 8003362:	f8c7 613c 	str.w	r6, [r7, #316]	@ 0x13c
    *currentTrans = newTransition;
 8003366:	f8c9 4000 	str.w	r4, [r9]
    *currentScreen = newScreen;
 800336a:	f8c8 5000 	str.w	r5, [r8]
public:
    Model();

    void bind(ModelListener* listener)
    {
        modelListener = listener;
 800336e:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8003372:	682b      	ldr	r3, [r5, #0]
    
    virtual ~ModelListener() {}

    void bind(Model* m)
    {
        model = m;
 8003374:	f8c6 a008 	str.w	sl, [r6, #8]
 8003378:	4628      	mov	r0, r5
 800337a:	68db      	ldr	r3, [r3, #12]
     *
     * @param [in] newPresenter The specific Presenter to be associated with the View.
     */
    void bind(T& newPresenter)
    {
        presenter = &newPresenter;
 800337c:	63ee      	str	r6, [r5, #60]	@ 0x3c
 800337e:	4798      	blx	r3
    newPresenter->activate();
 8003380:	6833      	ldr	r3, [r6, #0]
 8003382:	4630      	mov	r0, r6
 8003384:	681b      	ldr	r3, [r3, #0]
 8003386:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8003388:	4621      	mov	r1, r4
 800338a:	4628      	mov	r0, r5
 800338c:	f00e fc72 	bl	8011c74 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8003390:	6823      	ldr	r3, [r4, #0]
 8003392:	4620      	mov	r0, r4
 8003394:	691b      	ldr	r3, [r3, #16]
 8003396:	4798      	blx	r3
    newTransition->invalidate();
 8003398:	6823      	ldr	r3, [r4, #0]
 800339a:	695b      	ldr	r3, [r3, #20]
 800339c:	4620      	mov	r0, r4
}
 800339e:	b001      	add	sp, #4
 80033a0:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80033a4:	4718      	bx	r3
 80033a6:	bf00      	nop
 80033a8:	0802436e 	.word	0x0802436e
 80033ac:	080243fc 	.word	0x080243fc
 80033b0:	080244ce 	.word	0x080244ce
 80033b4:	08024515 	.word	0x08024515
 80033b8:	080245b8 	.word	0x080245b8
 80033bc:	08024cac 	.word	0x08024cac
 80033c0:	2001341c 	.word	0x2001341c
 80033c4:	20013418 	.word	0x20013418

080033c8 <_ZN8touchgfx3HAL3lcdEv>:
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 80033c8:	4b04      	ldr	r3, [pc, #16]	@ (80033dc <_ZN8touchgfx3HAL3lcdEv+0x14>)
 80033ca:	681b      	ldr	r3, [r3, #0]
 80033cc:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
 80033d0:	b10a      	cbz	r2, 80033d6 <_ZN8touchgfx3HAL3lcdEv+0xe>
 80033d2:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 80033d4:	b900      	cbnz	r0, 80033d8 <_ZN8touchgfx3HAL3lcdEv+0x10>
        return instance->lcdRef;
 80033d6:	6898      	ldr	r0, [r3, #8]
    }
 80033d8:	4770      	bx	lr
 80033da:	bf00      	nop
 80033dc:	200133d4 	.word	0x200133d4

080033e0 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>:
FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
 80033e0:	b570      	push	{r4, r5, r6, lr}
 80033e2:	4604      	mov	r4, r0
 80033e4:	460d      	mov	r5, r1
 80033e6:	4616      	mov	r6, r2
          pendingScreenTransitionCallback(0)
 80033e8:	f00c fb56 	bl	800fa98 <_ZN8touchgfx11ApplicationC1Ev>
        instance = this;
 80033ec:	4a10      	ldr	r2, [pc, #64]	@ (8003430 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x50>)
 80033ee:	6014      	str	r4, [r2, #0]
      model(m)
 80033f0:	4a10      	ldr	r2, [pc, #64]	@ (8003434 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x54>)
 80033f2:	6022      	str	r2, [r4, #0]
        : pobject(0), pmemfun(0)
 80033f4:	4a10      	ldr	r2, [pc, #64]	@ (8003438 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x58>)
        : currentPresenter(0),
 80033f6:	2300      	movs	r3, #0
 80033f8:	e9c4 2351 	strd	r2, r3, [r4, #324]	@ 0x144
 80033fc:	e9c4 3353 	strd	r3, r3, [r4, #332]	@ 0x14c
          pendingScreenTransitionCallback(0)
 8003400:	e9c4 334f 	strd	r3, r3, [r4, #316]	@ 0x13c
        return instance;
 8003404:	4b0d      	ldr	r3, [pc, #52]	@ (800343c <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x5c>)
 8003406:	6818      	ldr	r0, [r3, #0]
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_PORTRAIT);
 8003408:	6803      	ldr	r3, [r0, #0]
 800340a:	2101      	movs	r1, #1
 800340c:	689b      	ldr	r3, [r3, #8]
      model(m)
 800340e:	e9c4 6555 	strd	r6, r5, [r4, #340]	@ 0x154
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_PORTRAIT);
 8003412:	4798      	blx	r3
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
 8003414:	f7ff ffd8 	bl	80033c8 <_ZN8touchgfx3HAL3lcdEv>
 8003418:	f016 fba1 	bl	8019b5e <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableDecompressorL8_All();
 800341c:	f7ff ffd4 	bl	80033c8 <_ZN8touchgfx3HAL3lcdEv>
 8003420:	f016 fc18 	bl	8019c54 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableDecompressorRGB();
 8003424:	f7ff ffd0 	bl	80033c8 <_ZN8touchgfx3HAL3lcdEv>
 8003428:	f016 fc20 	bl	8019c6c <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv>
}
 800342c:	4620      	mov	r0, r4
 800342e:	bd70      	pop	{r4, r5, r6, pc}
 8003430:	20013428 	.word	0x20013428
 8003434:	08024c58 	.word	0x08024c58
 8003438:	08024c40 	.word	0x08024c40
 800343c:	200133d4 	.word	0x200133d4

08003440 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8003440:	4b06      	ldr	r3, [pc, #24]	@ (800345c <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv+0x1c>)
 8003442:	f8c0 314c 	str.w	r3, [r0, #332]	@ 0x14c
 8003446:	2300      	movs	r3, #0
 8003448:	f8c0 3150 	str.w	r3, [r0, #336]	@ 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 800344c:	f500 73a2 	add.w	r3, r0, #324	@ 0x144
 8003450:	f8c0 0148 	str.w	r0, [r0, #328]	@ 0x148
 8003454:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140
}
 8003458:	4770      	bx	lr
 800345a:	bf00      	nop
 800345c:	0800327d 	.word	0x0800327d

08003460 <_ZNK8touchgfx13GeneratedFont12getGSUBTableEv>:
    virtual int8_t getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const;

    virtual const uint16_t* getGSUBTable() const
    {
        return gsubTable;
    }
 8003460:	6a40      	ldr	r0, [r0, #36]	@ 0x24
 8003462:	4770      	bx	lr

08003464 <_ZNK8touchgfx13GeneratedFont23getContextualFormsTableEv>:

    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return arabicTable;
    }
 8003464:	6a80      	ldr	r0, [r0, #40]	@ 0x28
 8003466:	4770      	bx	lr

08003468 <_ZN8touchgfx13GeneratedFontD1Ev>:
class GeneratedFont : public ConstFont
 8003468:	4770      	bx	lr

0800346a <_ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE>:
    volatile const uint16_t* dataOffset = (const uint16_t*)((const uint8_t*)glyph + offsetof(GlyphNode, dataOffset));
    uint32_t offset = dataOffset[0];
    offset |= dataOffset[1] << 16;

    const uint8_t* const* table = (const uint8_t* const*)glyphData;
    const uint8_t* pixels = table[glyph->unicode / 2048];
 800346a:	888a      	ldrh	r2, [r1, #4]
    uint32_t offset = dataOffset[0];
 800346c:	880b      	ldrh	r3, [r1, #0]
{
 800346e:	b510      	push	{r4, lr}
    const uint8_t* pixels = table[glyph->unicode / 2048];
 8003470:	0ad2      	lsrs	r2, r2, #11
    offset |= dataOffset[1] << 16;
 8003472:	884c      	ldrh	r4, [r1, #2]
    const uint8_t* pixels = table[glyph->unicode / 2048];
 8003474:	69c1      	ldr	r1, [r0, #28]
    uint32_t offset = dataOffset[0];
 8003476:	b29b      	uxth	r3, r3
    return pixels + offset;
 8003478:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
    offset |= dataOffset[1] << 16;
 800347c:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
}
 8003480:	4418      	add	r0, r3
 8003482:	bd10      	pop	{r4, pc}

08003484 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE>:

int8_t GeneratedFont::getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
{
 8003484:	b510      	push	{r4, lr}
 8003486:	4604      	mov	r4, r0
    if (!glyph || glyph->kerningTableSize == 0)
 8003488:	b1ba      	cbz	r2, 80034ba <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
 800348a:	7b10      	ldrb	r0, [r2, #12]
 800348c:	b168      	cbz	r0, 80034aa <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>
        return ((flags & GLYPH_DATA_KERNINGTABLEPOS_BIT8_10) << 8) | _kerningTablePos;
 800348e:	7b53      	ldrb	r3, [r2, #13]
 8003490:	7ad2      	ldrb	r2, [r2, #11]
 8003492:	021b      	lsls	r3, r3, #8
 8003494:	f403 63e0 	and.w	r3, r3, #1792	@ 0x700
    {
        return 0;
    }

    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 8003498:	431a      	orrs	r2, r3
 800349a:	6a23      	ldr	r3, [r4, #32]
 800349c:	eb03 0382 	add.w	r3, r3, r2, lsl #2
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
    {
        if (prevChar == kerndata->unicodePrevChar)
 80034a0:	881a      	ldrh	r2, [r3, #0]
 80034a2:	428a      	cmp	r2, r1
 80034a4:	d102      	bne.n	80034ac <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x28>
        {
            return kerndata->distance;
 80034a6:	f993 0002 	ldrsb.w	r0, [r3, #2]
        {
            break;
        }
    }
    return 0;
}
 80034aa:	bd10      	pop	{r4, pc}
        if (prevChar < kerndata->unicodePrevChar)
 80034ac:	d805      	bhi.n	80034ba <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 80034ae:	3801      	subs	r0, #1
 80034b0:	b280      	uxth	r0, r0
 80034b2:	3304      	adds	r3, #4
 80034b4:	2800      	cmp	r0, #0
 80034b6:	d1f3      	bne.n	80034a0 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x1c>
 80034b8:	e7f7      	b.n	80034aa <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>
        return 0;
 80034ba:	2000      	movs	r0, #0
 80034bc:	e7f5      	b.n	80034aa <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>

080034be <_ZN8touchgfx13GeneratedFontD0Ev>:
 80034be:	b510      	push	{r4, lr}
 80034c0:	212c      	movs	r1, #44	@ 0x2c
 80034c2:	4604      	mov	r4, r0
 80034c4:	f01e fc2f 	bl	8021d26 <_ZdlPvj>
 80034c8:	4620      	mov	r0, r4
 80034ca:	bd10      	pop	{r4, pc}

080034cc <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>:
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
 80034cc:	b530      	push	{r4, r5, lr}
 80034ce:	b08b      	sub	sp, #44	@ 0x2c
 80034d0:	4604      	mov	r4, r0
      arabicTable(formsTable)
 80034d2:	f8bd 5060 	ldrh.w	r5, [sp, #96]	@ 0x60
 80034d6:	9508      	str	r5, [sp, #32]
 80034d8:	f8bd 505c 	ldrh.w	r5, [sp, #92]	@ 0x5c
 80034dc:	9507      	str	r5, [sp, #28]
 80034de:	f89d 5050 	ldrb.w	r5, [sp, #80]	@ 0x50
 80034e2:	9506      	str	r5, [sp, #24]
 80034e4:	f89d 504c 	ldrb.w	r5, [sp, #76]	@ 0x4c
 80034e8:	9505      	str	r5, [sp, #20]
 80034ea:	f89d 5048 	ldrb.w	r5, [sp, #72]	@ 0x48
 80034ee:	9504      	str	r5, [sp, #16]
 80034f0:	f89d 5044 	ldrb.w	r5, [sp, #68]	@ 0x44
 80034f4:	9503      	str	r5, [sp, #12]
 80034f6:	f89d 5040 	ldrb.w	r5, [sp, #64]	@ 0x40
 80034fa:	9502      	str	r5, [sp, #8]
 80034fc:	f89d 503c 	ldrb.w	r5, [sp, #60]	@ 0x3c
 8003500:	9501      	str	r5, [sp, #4]
 8003502:	f8bd 5038 	ldrh.w	r5, [sp, #56]	@ 0x38
 8003506:	9500      	str	r5, [sp, #0]
 8003508:	f00e f80e 	bl	8011528 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>
 800350c:	4b06      	ldr	r3, [pc, #24]	@ (8003528 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE+0x5c>)
 800350e:	6023      	str	r3, [r4, #0]
      glyphData(glyphDataInternalFlash),
 8003510:	9b15      	ldr	r3, [sp, #84]	@ 0x54
 8003512:	61e3      	str	r3, [r4, #28]
      kerningData(kerningList),
 8003514:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 8003516:	6223      	str	r3, [r4, #32]
      gsubTable(gsubData),
 8003518:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 800351a:	6263      	str	r3, [r4, #36]	@ 0x24
      arabicTable(formsTable)
 800351c:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
 800351e:	62a3      	str	r3, [r4, #40]	@ 0x28
}
 8003520:	4620      	mov	r0, r4
 8003522:	b00b      	add	sp, #44	@ 0x2c
 8003524:	bd30      	pop	{r4, r5, pc}
 8003526:	bf00      	nop
 8003528:	08024cd0 	.word	0x08024cd0

0800352c <_ZN8touchgfx9Container13getFirstChildEv>:
     * @see getNextSibling
     */
    virtual Drawable* getFirstChild()
    {
        return firstChild;
    }
 800352c:	6a80      	ldr	r0, [r0, #40]	@ 0x28
 800352e:	4770      	bx	lr

08003530 <_ZN8touchgfx6Screen11setupScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void setupScreen()
    {
    }
 8003530:	4770      	bx	lr

08003532 <_ZN8touchgfx6Screen15afterTransitionEv>:
     *
     * @see Application::handleTickEvent
     */
    virtual void afterTransition()
    {
    }
 8003532:	4770      	bx	lr

08003534 <_ZN8touchgfx6Screen14tearDownScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void tearDownScreen()
    {
    }
 8003534:	4770      	bx	lr

08003536 <_ZN8touchgfx6Screen15handleTickEventEv>:
     * Called by the Application on the current screen with a frequency of
     * Application::TICK_INTERVAL_MS.
     */
    virtual void handleTickEvent()
    {
    }
 8003536:	4770      	bx	lr

08003538 <_ZN8touchgfx6Screen14handleKeyEventEh>:
     * @param  key The key to handle.
     */
    virtual void handleKeyEvent(uint8_t key)
    {
        (void)key; // Unused variable
    }
 8003538:	4770      	bx	lr

0800353a <_ZN15Screen1ViewBase9leftMouseEv>:
     * Virtual Action Handlers
     */
    virtual void leftMouse()
    {
        // Override and implement this function in Screen1
    }
 800353a:	4770      	bx	lr

0800353c <_ZN15Screen1ViewBase10rightMouseEv>:
    virtual void rightMouse()
    {
        // Override and implement this function in Screen1
    }
 800353c:	4770      	bx	lr

0800353e <_ZN15Screen1ViewBase9moveRightEv>:
    virtual void moveRight()
    {
        // Override and implement this function in Screen1
    }
 800353e:	4770      	bx	lr

08003540 <_ZN15Screen1ViewBase8moveLeftEv>:
    virtual void moveLeft()
    {
        // Override and implement this function in Screen1
    }
 8003540:	4770      	bx	lr

08003542 <_ZN15Screen1ViewBase6moveUpEv>:
    virtual void moveUp()
    {
        // Override and implement this function in Screen1
    }
 8003542:	4770      	bx	lr

08003544 <_ZN15Screen1ViewBase8moveDownEv>:
    virtual void moveDown()
    {
        // Override and implement this function in Screen1
    }
 8003544:	4770      	bx	lr

08003546 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEED1Ev>:
 * @tparam T Generic type parameter. Typically a AbstractButtonContainer subclass.
 *
 * @see AbstractButtonContainer, BoxWithBorder
 */
template <class T>
class BoxWithBorderButtonStyle : public T
 8003546:	4770      	bx	lr

08003548 <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8003548:	4770      	bx	lr

0800354a <_ZN15Screen1ViewBaseD1Ev>:
}

Screen1ViewBase::~Screen1ViewBase()
{

}
 800354a:	4770      	bx	lr

0800354c <_ZN15Screen1ViewBase11setupScreenEv>:

void Screen1ViewBase::setupScreen()
{

}
 800354c:	4770      	bx	lr

0800354e <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE>:

void Screen1ViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
    if (&src == &LeftMouse)
 800354e:	f100 036c 	add.w	r3, r0, #108	@ 0x6c
 8003552:	4299      	cmp	r1, r3
{
 8003554:	b570      	push	{r4, r5, r6, lr}
 8003556:	4604      	mov	r4, r0
 8003558:	460d      	mov	r5, r1
    if (&src == &LeftMouse)
 800355a:	d102      	bne.n	8003562 <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x14>
    {
        //Interaction1
        //When LeftMouse clicked call virtual function
        //Call leftMouse
        leftMouse();
 800355c:	6803      	ldr	r3, [r0, #0]
 800355e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8003560:	4798      	blx	r3
    }
    if (&src == &RightMouse)
 8003562:	f104 03e4 	add.w	r3, r4, #228	@ 0xe4
 8003566:	429d      	cmp	r5, r3
 8003568:	d103      	bne.n	8003572 <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x24>
    {
        //Interaction2
        //When RightMouse clicked call virtual function
        //Call rightMouse
        rightMouse();
 800356a:	6823      	ldr	r3, [r4, #0]
 800356c:	4620      	mov	r0, r4
 800356e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8003570:	4798      	blx	r3
    }
    if (&src == &right)
 8003572:	f504 73ae 	add.w	r3, r4, #348	@ 0x15c
 8003576:	429d      	cmp	r5, r3
 8003578:	d103      	bne.n	8003582 <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x34>
    {
        //Interaction3
        //When right clicked call virtual function
        //Call moveRight
        moveRight();
 800357a:	6823      	ldr	r3, [r4, #0]
 800357c:	4620      	mov	r0, r4
 800357e:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8003580:	4798      	blx	r3
    }
    if (&src == &left)
 8003582:	f504 73ea 	add.w	r3, r4, #468	@ 0x1d4
 8003586:	429d      	cmp	r5, r3
 8003588:	d103      	bne.n	8003592 <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x44>
    {
        //Interaction4
        //When left clicked call virtual function
        //Call moveLeft
        moveLeft();
 800358a:	6823      	ldr	r3, [r4, #0]
 800358c:	4620      	mov	r0, r4
 800358e:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8003590:	4798      	blx	r3
    }
    if (&src == &up)
 8003592:	f504 7313 	add.w	r3, r4, #588	@ 0x24c
 8003596:	429d      	cmp	r5, r3
 8003598:	d103      	bne.n	80035a2 <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x54>
    {
        //Interaction5
        //When up clicked call virtual function
        //Call moveUp
        moveUp();
 800359a:	6823      	ldr	r3, [r4, #0]
 800359c:	4620      	mov	r0, r4
 800359e:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80035a0:	4798      	blx	r3
    }
    if (&src == &down)
 80035a2:	f504 7331 	add.w	r3, r4, #708	@ 0x2c4
 80035a6:	429d      	cmp	r5, r3
 80035a8:	d105      	bne.n	80035b6 <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x68>
    {
        //Interaction6
        //When down clicked call virtual function
        //Call moveDown
        moveDown();
 80035aa:	6823      	ldr	r3, [r4, #0]
 80035ac:	4620      	mov	r0, r4
 80035ae:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
    }
}
 80035b0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        moveDown();
 80035b4:	4718      	bx	r3
}
 80035b6:	bd70      	pop	{r4, r5, r6, pc}

080035b8 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv>:
     *
     * @see setPressed
     */
    bool getPressed() const
    {
        return pressed;
 80035b8:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c
    colortype borderDown;    ///< The border down

    /** @copydoc AbstractButtonContainer::handlePressedUpdated() */
    virtual void handlePressedUpdated()
    {
        borderBox.setColor(T::getPressed() ? down : up);
 80035bc:	b14b      	cbz	r3, 80035d2 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0x1a>
 80035be:	f100 026c 	add.w	r2, r0, #108	@ 0x6c
 80035c2:	6812      	ldr	r2, [r2, #0]
     *
     * @see getColor, Color::getColorFromRGB
     */
    void setColor(colortype newColor)
    {
        color = newColor;
 80035c4:	65c2      	str	r2, [r0, #92]	@ 0x5c
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
 80035c6:	b13b      	cbz	r3, 80035d8 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0x20>
 80035c8:	f100 0374 	add.w	r3, r0, #116	@ 0x74
 80035cc:	681b      	ldr	r3, [r3, #0]
     *
     * @see setColor, getBorderColor, Color::getColorFromRGB
     */
    void setBorderColor(colortype colorBorder)
    {
        borderColor = colorBorder;
 80035ce:	6603      	str	r3, [r0, #96]	@ 0x60
        T::handlePressedUpdated();
    }
 80035d0:	4770      	bx	lr
        borderBox.setColor(T::getPressed() ? down : up);
 80035d2:	f100 0268 	add.w	r2, r0, #104	@ 0x68
 80035d6:	e7f4      	b.n	80035c2 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0xa>
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
 80035d8:	f100 0370 	add.w	r3, r0, #112	@ 0x70
 80035dc:	e7f6      	b.n	80035cc <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0x14>

080035de <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvE7executeES4_>:
    virtual void execute(T1 t1)
 80035de:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 80035e0:	68c2      	ldr	r2, [r0, #12]
 80035e2:	6844      	ldr	r4, [r0, #4]
 80035e4:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 80035e6:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 80035e8:	eb04 0062 	add.w	r0, r4, r2, asr #1
 80035ec:	07d2      	lsls	r2, r2, #31
 80035ee:	bf48      	it	mi
 80035f0:	5962      	ldrmi	r2, [r4, r5]
 80035f2:	689b      	ldr	r3, [r3, #8]
    }
 80035f4:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 80035f6:	bf48      	it	mi
 80035f8:	58d3      	ldrmi	r3, [r2, r3]
 80035fa:	4718      	bx	r3

080035fc <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv>:
    virtual bool isValid() const
 80035fc:	4603      	mov	r3, r0
        return (pobject != 0) && (pmemfun != 0);
 80035fe:	6840      	ldr	r0, [r0, #4]
 8003600:	b130      	cbz	r0, 8003610 <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x14>
 8003602:	689a      	ldr	r2, [r3, #8]
 8003604:	b91a      	cbnz	r2, 800360e <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x12>
 8003606:	68d8      	ldr	r0, [r3, #12]
 8003608:	f000 0001 	and.w	r0, r0, #1
 800360c:	4770      	bx	lr
 800360e:	2001      	movs	r0, #1
    }
 8003610:	4770      	bx	lr

08003612 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE18handleAlphaUpdatedEv>:
    /**
     * @copydoc Image::setAlpha
     */
    void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 8003612:	f890 302d 	ldrb.w	r3, [r0, #45]	@ 0x2d
 8003616:	f880 305a 	strb.w	r3, [r0, #90]	@ 0x5a
    /** @copydoc AbstractButtonContainer::handleAlphaUpdated() */
    virtual void handleAlphaUpdated()
    {
        borderBox.setAlpha(T::getAlpha());
        T::handleAlphaUpdated();
    }
 800361a:	4770      	bx	lr

0800361c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEED0Ev>:
class BoxWithBorderButtonStyle : public T
 800361c:	b510      	push	{r4, lr}
 800361e:	2178      	movs	r1, #120	@ 0x78
 8003620:	4604      	mov	r4, r0
 8003622:	f01e fb80 	bl	8021d26 <_ZdlPvj>
 8003626:	4620      	mov	r0, r4
 8003628:	bd10      	pop	{r4, pc}

0800362a <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800362a:	b510      	push	{r4, lr}
 800362c:	2110      	movs	r1, #16
 800362e:	4604      	mov	r4, r0
 8003630:	f01e fb79 	bl	8021d26 <_ZdlPvj>
 8003634:	4620      	mov	r0, r4
 8003636:	bd10      	pop	{r4, pc}

08003638 <_ZN15Screen1ViewBaseD0Ev>:
Screen1ViewBase::~Screen1ViewBase()
 8003638:	b510      	push	{r4, lr}
}
 800363a:	f44f 7153 	mov.w	r1, #844	@ 0x34c
Screen1ViewBase::~Screen1ViewBase()
 800363e:	4604      	mov	r4, r0
}
 8003640:	f01e fb71 	bl	8021d26 <_ZdlPvj>
 8003644:	4620      	mov	r0, r4
 8003646:	bd10      	pop	{r4, pc}

08003648 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv>:
    /**
     * Executes the previously set action.
     *
     * @see setAction
     */
    virtual void executeAction()
 8003648:	b510      	push	{r4, lr}
 800364a:	4604      	mov	r4, r0
    {
        if (action && action->isValid())
 800364c:	6b00      	ldr	r0, [r0, #48]	@ 0x30
 800364e:	b150      	cbz	r0, 8003666 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x1e>
 8003650:	6803      	ldr	r3, [r0, #0]
 8003652:	68db      	ldr	r3, [r3, #12]
 8003654:	4798      	blx	r3
 8003656:	b130      	cbz	r0, 8003666 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x1e>
        {
            action->execute(*this);
 8003658:	6b20      	ldr	r0, [r4, #48]	@ 0x30
 800365a:	6803      	ldr	r3, [r0, #0]
 800365c:	4621      	mov	r1, r4
 800365e:	689b      	ldr	r3, [r3, #8]
        }
    }
 8003660:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            action->execute(*this);
 8003664:	4718      	bx	r3
    }
 8003666:	bd10      	pop	{r4, pc}

08003668 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE>:
     *
     * @return The click type of this event.
     */
    ClickEventType getType() const
    {
        return clickEventType;
 8003668:	790b      	ldrb	r3, [r1, #4]
     *
     * @param  event The click event.
     *
     * @see setAction, setPressed, getPressed
     */
    virtual void handleClickEvent(const ClickEvent& event)
 800366a:	b570      	push	{r4, r5, r6, lr}
        return pressed;
 800366c:	f890 602c 	ldrb.w	r6, [r0, #44]	@ 0x2c
 8003670:	4604      	mov	r4, r0
 8003672:	460d      	mov	r5, r1
    {
        bool wasPressed = getPressed();
        bool newPressedValue = (event.getType() == ClickEvent::PRESSED);
        if ((newPressedValue && !wasPressed) || (!newPressedValue && wasPressed))
 8003674:	b90b      	cbnz	r3, 800367a <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x12>
 8003676:	b116      	cbz	r6, 800367e <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x16>
        }
        if (wasPressed && (event.getType() == ClickEvent::RELEASED))
        {
            executeAction();
        }
    }
 8003678:	bd70      	pop	{r4, r5, r6, pc}
        if ((newPressedValue && !wasPressed) || (!newPressedValue && wasPressed))
 800367a:	2e00      	cmp	r6, #0
 800367c:	d0fc      	beq.n	8003678 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x10>
        bool newPressedValue = (event.getType() == ClickEvent::PRESSED);
 800367e:	fab3 f383 	clz	r3, r3
 8003682:	095b      	lsrs	r3, r3, #5
 8003684:	f884 302c 	strb.w	r3, [r4, #44]	@ 0x2c
        handlePressedUpdated();
 8003688:	6823      	ldr	r3, [r4, #0]
 800368a:	4620      	mov	r0, r4
 800368c:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 8003690:	4798      	blx	r3
            invalidate();
 8003692:	6823      	ldr	r3, [r4, #0]
 8003694:	4620      	mov	r0, r4
 8003696:	695b      	ldr	r3, [r3, #20]
 8003698:	4798      	blx	r3
        if (wasPressed && (event.getType() == ClickEvent::RELEASED))
 800369a:	2e00      	cmp	r6, #0
 800369c:	d0ec      	beq.n	8003678 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x10>
 800369e:	792b      	ldrb	r3, [r5, #4]
 80036a0:	2b01      	cmp	r3, #1
 80036a2:	d1e9      	bne.n	8003678 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x10>
            executeAction();
 80036a4:	6823      	ldr	r3, [r4, #0]
 80036a6:	4620      	mov	r0, r4
 80036a8:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
    }
 80036ac:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
            executeAction();
 80036b0:	4718      	bx	r3

080036b2 <_ZN8touchgfx8Drawable5setXYEss>:
    void setXY(int16_t x, int16_t y)
 80036b2:	b570      	push	{r4, r5, r6, lr}
        setX(x);
 80036b4:	6803      	ldr	r3, [r0, #0]
    void setXY(int16_t x, int16_t y)
 80036b6:	4604      	mov	r4, r0
        setX(x);
 80036b8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
    void setXY(int16_t x, int16_t y)
 80036ba:	4615      	mov	r5, r2
        setX(x);
 80036bc:	4798      	blx	r3
        setY(y);
 80036be:	6823      	ldr	r3, [r4, #0]
 80036c0:	4629      	mov	r1, r5
 80036c2:	4620      	mov	r0, r4
 80036c4:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
    }
 80036c6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(y);
 80036ca:	4718      	bx	r3

080036cc <_ZN8touchgfx8Drawable11setPositionEssss>:
    void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 80036cc:	b570      	push	{r4, r5, r6, lr}
 80036ce:	4604      	mov	r4, r0
 80036d0:	461d      	mov	r5, r3
 80036d2:	f9bd 6010 	ldrsh.w	r6, [sp, #16]
        setXY(x, y);
 80036d6:	f7ff ffec 	bl	80036b2 <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 80036da:	6823      	ldr	r3, [r4, #0]
 80036dc:	4629      	mov	r1, r5
 80036de:	4620      	mov	r0, r4
 80036e0:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80036e2:	4798      	blx	r3
        setHeight(height);
 80036e4:	6823      	ldr	r3, [r4, #0]
 80036e6:	4631      	mov	r1, r6
 80036e8:	4620      	mov	r0, r4
 80036ea:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
    }
 80036ec:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setHeight(height);
 80036f0:	4718      	bx	r3
	...

080036f4 <_ZN8touchgfx3BoxC1Ev>:
        : Widget(), alpha(255), color(0)
 80036f4:	4a09      	ldr	r2, [pc, #36]	@ (800371c <_ZN8touchgfx3BoxC1Ev+0x28>)
 80036f6:	6002      	str	r2, [r0, #0]
          touchable(false),
 80036f8:	f44f 7180 	mov.w	r1, #256	@ 0x100
 80036fc:	2200      	movs	r2, #0
 80036fe:	8481      	strh	r1, [r0, #36]	@ 0x24
 8003700:	21ff      	movs	r1, #255	@ 0xff
 8003702:	e9c0 2201 	strd	r2, r2, [r0, #4]
 8003706:	e9c0 2203 	strd	r2, r2, [r0, #12]
          nextSibling(0),
 800370a:	e9c0 2205 	strd	r2, r2, [r0, #20]
          cachedAbsX(0),
 800370e:	e9c0 2207 	strd	r2, r2, [r0, #28]
 8003712:	f880 1026 	strb.w	r1, [r0, #38]	@ 0x26
        : color(col)
 8003716:	6282      	str	r2, [r0, #40]	@ 0x28
    }
 8003718:	4770      	bx	lr
 800371a:	bf00      	nop
 800371c:	08025144 	.word	0x08025144

08003720 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev>:
        : pressed(false), alpha(255), action(0)
 8003720:	f44f 437f 	mov.w	r3, #65280	@ 0xff00
    BoxWithBorderButtonStyle()
 8003724:	b570      	push	{r4, r5, r6, lr}
        : T(), up(), down()
 8003726:	4606      	mov	r6, r0
 8003728:	8583      	strh	r3, [r0, #44]	@ 0x2c
        touchable = touch;
 800372a:	f240 1301 	movw	r3, #257	@ 0x101
          firstChild(0)
 800372e:	2500      	movs	r5, #0
 8003730:	8483      	strh	r3, [r0, #36]	@ 0x24
 8003732:	4b12      	ldr	r3, [pc, #72]	@ (800377c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev+0x5c>)
 8003734:	6285      	str	r5, [r0, #40]	@ 0x28
        : x(0), y(0), width(0), height(0)
 8003736:	e9c0 5501 	strd	r5, r5, [r0, #4]
 800373a:	e9c0 5503 	strd	r5, r5, [r0, #12]
          nextSibling(0),
 800373e:	e9c0 5505 	strd	r5, r5, [r0, #20]
          cachedAbsX(0),
 8003742:	e9c0 5507 	strd	r5, r5, [r0, #28]
 8003746:	6305      	str	r5, [r0, #48]	@ 0x30
 8003748:	f846 3b34 	str.w	r3, [r6], #52
    BoxWithBorderButtonStyle()
 800374c:	4604      	mov	r4, r0
        : Box(), borderColor(0), borderSize(0)
 800374e:	4630      	mov	r0, r6
 8003750:	f7ff ffd0 	bl	80036f4 <_ZN8touchgfx3BoxC1Ev>
 8003754:	4b0a      	ldr	r3, [pc, #40]	@ (8003780 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev+0x60>)
 8003756:	6363      	str	r3, [r4, #52]	@ 0x34
        borderBox.setXY(0, 0);
 8003758:	462a      	mov	r2, r5
 800375a:	4629      	mov	r1, r5
 800375c:	4630      	mov	r0, r6
        : color(0)
 800375e:	e9c4 551a 	strd	r5, r5, [r4, #104]	@ 0x68
 8003762:	e9c4 551c 	strd	r5, r5, [r4, #112]	@ 0x70
        : color(col)
 8003766:	6625      	str	r5, [r4, #96]	@ 0x60
 8003768:	f8a4 5064 	strh.w	r5, [r4, #100]	@ 0x64
 800376c:	f7ff ffa1 	bl	80036b2 <_ZN8touchgfx8Drawable5setXYEss>
        T::add(borderBox);
 8003770:	4620      	mov	r0, r4
 8003772:	4631      	mov	r1, r6
 8003774:	f007 fa9a 	bl	800acac <_ZN8touchgfx9Container3addERNS_8DrawableE>
    }
 8003778:	4620      	mov	r0, r4
 800377a:	bd70      	pop	{r4, r5, r6, pc}
 800377c:	08024d38 	.word	0x08024d38
 8003780:	080251ac 	.word	0x080251ac

08003784 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>:
    void setBoxWithBorderColors(const colortype colorReleased, const colortype colorPressed, const colortype borderColorReleased, const colortype borderColorPressed)
 8003784:	b410      	push	{r4}
        borderUp = borderColorReleased;
 8003786:	6703      	str	r3, [r0, #112]	@ 0x70
        borderDown = borderColorPressed;
 8003788:	9b01      	ldr	r3, [sp, #4]
 800378a:	6743      	str	r3, [r0, #116]	@ 0x74
        handlePressedUpdated();
 800378c:	6803      	ldr	r3, [r0, #0]
    }
 800378e:	f85d 4b04 	ldr.w	r4, [sp], #4
        handlePressedUpdated();
 8003792:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
        down = colorPressed;
 8003796:	e9c0 121a 	strd	r1, r2, [r0, #104]	@ 0x68
        handlePressedUpdated();
 800379a:	4718      	bx	r3

0800379c <_ZN15Screen1ViewBaseC1Ev>:
Screen1ViewBase::Screen1ViewBase() :
 800379c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80037a0:	4604      	mov	r4, r0
 80037a2:	b089      	sub	sp, #36	@ 0x24
    flexButtonCallback(this, &Screen1ViewBase::flexButtonCallbackHandler)
 80037a4:	4625      	mov	r5, r4
        : presenter(0)
 80037a6:	2600      	movs	r6, #0
 80037a8:	f00e f8b8 	bl	801191c <_ZN8touchgfx6ScreenC1Ev>
 80037ac:	4b81      	ldr	r3, [pc, #516]	@ (80039b4 <_ZN15Screen1ViewBaseC1Ev+0x218>)
 80037ae:	63e6      	str	r6, [r4, #60]	@ 0x3c
 80037b0:	f845 3b40 	str.w	r3, [r5], #64
 80037b4:	4628      	mov	r0, r5
 80037b6:	f7ff ff9d 	bl	80036f4 <_ZN8touchgfx3BoxC1Ev>
 80037ba:	f104 036c 	add.w	r3, r4, #108	@ 0x6c
 80037be:	4618      	mov	r0, r3
 80037c0:	9302      	str	r3, [sp, #8]
 80037c2:	f7ff ffad 	bl	8003720 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev>
 80037c6:	f104 03e4 	add.w	r3, r4, #228	@ 0xe4
 80037ca:	4618      	mov	r0, r3
 80037cc:	9303      	str	r3, [sp, #12]
 80037ce:	f7ff ffa7 	bl	8003720 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev>
 80037d2:	f504 73ae 	add.w	r3, r4, #348	@ 0x15c
 80037d6:	4618      	mov	r0, r3
 80037d8:	9304      	str	r3, [sp, #16]
 80037da:	f7ff ffa1 	bl	8003720 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev>
 80037de:	f504 73ea 	add.w	r3, r4, #468	@ 0x1d4
 80037e2:	4618      	mov	r0, r3
 80037e4:	9305      	str	r3, [sp, #20]
 80037e6:	f7ff ff9b 	bl	8003720 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev>
 80037ea:	f504 7313 	add.w	r3, r4, #588	@ 0x24c
 80037ee:	4618      	mov	r0, r3
 80037f0:	9306      	str	r3, [sp, #24]
 80037f2:	f7ff ff95 	bl	8003720 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev>
 80037f6:	f504 7331 	add.w	r3, r4, #708	@ 0x2c4
 80037fa:	4618      	mov	r0, r3
 80037fc:	9307      	str	r3, [sp, #28]
 80037fe:	f7ff ff8f 	bl	8003720 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8003802:	4b6d      	ldr	r3, [pc, #436]	@ (80039b8 <_ZN15Screen1ViewBaseC1Ev+0x21c>)
 8003804:	f8df a1c0 	ldr.w	sl, [pc, #448]	@ 80039c8 <_ZN15Screen1ViewBaseC1Ev+0x22c>
 8003808:	f8df b1c0 	ldr.w	fp, [pc, #448]	@ 80039cc <_ZN15Screen1ViewBaseC1Ev+0x230>
 800380c:	4f6b      	ldr	r7, [pc, #428]	@ (80039bc <_ZN15Screen1ViewBaseC1Ev+0x220>)
 800380e:	e9c4 34cf 	strd	r3, r4, [r4, #828]	@ 0x33c
 8003812:	4b6b      	ldr	r3, [pc, #428]	@ (80039c0 <_ZN15Screen1ViewBaseC1Ev+0x224>)
 8003814:	e9c4 36d1 	strd	r3, r6, [r4, #836]	@ 0x344
    __background.setPosition(0, 0, 240, 320);
 8003818:	f44f 73a0 	mov.w	r3, #320	@ 0x140
 800381c:	4632      	mov	r2, r6
 800381e:	9300      	str	r3, [sp, #0]
 8003820:	4631      	mov	r1, r6
 8003822:	4628      	mov	r0, r5
 8003824:	23f0      	movs	r3, #240	@ 0xf0
 8003826:	f7ff ff51 	bl	80036cc <_ZN8touchgfx8Drawable11setPositionEssss>
        color = newColor;
 800382a:	f04f 437f 	mov.w	r3, #4278190080	@ 0xff000000
 800382e:	66a3      	str	r3, [r4, #104]	@ 0x68
     * @note Must not be called with a Drawable that was already added to the screen. If in doubt,
     *       call remove() first.
     */
    void add(Drawable& d)
    {
        container.add(d);
 8003830:	4629      	mov	r1, r5
 8003832:	1d20      	adds	r0, r4, #4
        borderBox.setPosition(x, y, width, height);
 8003834:	2532      	movs	r5, #50	@ 0x32
 8003836:	f007 fa39 	bl	800acac <_ZN8touchgfx9Container3addERNS_8DrawableE>
     *
     * @see getBorderSize
     */
    void setBorderSize(uint16_t size)
    {
        borderSize = size;
 800383a:	f04f 0905 	mov.w	r9, #5
 800383e:	462b      	mov	r3, r5
 8003840:	4632      	mov	r2, r6
 8003842:	4631      	mov	r1, r6
 8003844:	f104 00a0 	add.w	r0, r4, #160	@ 0xa0
 8003848:	9500      	str	r5, [sp, #0]
 800384a:	f7ff ff3f 	bl	80036cc <_ZN8touchgfx8Drawable11setPositionEssss>
    LeftMouse.setAction(flexButtonCallback);
 800384e:	f504 784f 	add.w	r8, r4, #828	@ 0x33c
    LeftMouse.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 8003852:	9802      	ldr	r0, [sp, #8]
 8003854:	f8a4 90d0 	strh.w	r9, [r4, #208]	@ 0xd0
 8003858:	465a      	mov	r2, fp
 800385a:	4651      	mov	r1, sl
 800385c:	4b59      	ldr	r3, [pc, #356]	@ (80039c4 <_ZN15Screen1ViewBaseC1Ev+0x228>)
 800385e:	9700      	str	r7, [sp, #0]
 8003860:	f7ff ff90 	bl	8003784 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
    LeftMouse.setPosition(190, 270, 50, 50);
 8003864:	462b      	mov	r3, r5
 8003866:	9802      	ldr	r0, [sp, #8]
        action = &callback;
 8003868:	f8c4 809c 	str.w	r8, [r4, #156]	@ 0x9c
 800386c:	f44f 7287 	mov.w	r2, #270	@ 0x10e
 8003870:	9500      	str	r5, [sp, #0]
 8003872:	21be      	movs	r1, #190	@ 0xbe
 8003874:	f7ff ff2a 	bl	80036cc <_ZN8touchgfx8Drawable11setPositionEssss>
 8003878:	9902      	ldr	r1, [sp, #8]
 800387a:	1d20      	adds	r0, r4, #4
 800387c:	f007 fa16 	bl	800acac <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003880:	462b      	mov	r3, r5
 8003882:	4632      	mov	r2, r6
 8003884:	4631      	mov	r1, r6
 8003886:	f504 708c 	add.w	r0, r4, #280	@ 0x118
 800388a:	9500      	str	r5, [sp, #0]
 800388c:	f7ff ff1e 	bl	80036cc <_ZN8touchgfx8Drawable11setPositionEssss>
    RightMouse.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 8003890:	9803      	ldr	r0, [sp, #12]
 8003892:	f8a4 9148 	strh.w	r9, [r4, #328]	@ 0x148
 8003896:	465a      	mov	r2, fp
 8003898:	4651      	mov	r1, sl
 800389a:	4b4a      	ldr	r3, [pc, #296]	@ (80039c4 <_ZN15Screen1ViewBaseC1Ev+0x228>)
 800389c:	9700      	str	r7, [sp, #0]
 800389e:	f7ff ff71 	bl	8003784 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
    RightMouse.setPosition(190, 0, 50, 50);
 80038a2:	462b      	mov	r3, r5
 80038a4:	4632      	mov	r2, r6
 80038a6:	9803      	ldr	r0, [sp, #12]
 80038a8:	f8c4 8114 	str.w	r8, [r4, #276]	@ 0x114
 80038ac:	21be      	movs	r1, #190	@ 0xbe
 80038ae:	9500      	str	r5, [sp, #0]
 80038b0:	f7ff ff0c 	bl	80036cc <_ZN8touchgfx8Drawable11setPositionEssss>
 80038b4:	9903      	ldr	r1, [sp, #12]
 80038b6:	1d20      	adds	r0, r4, #4
 80038b8:	f007 f9f8 	bl	800acac <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80038bc:	462b      	mov	r3, r5
 80038be:	4632      	mov	r2, r6
 80038c0:	4631      	mov	r1, r6
 80038c2:	f504 70c8 	add.w	r0, r4, #400	@ 0x190
 80038c6:	9500      	str	r5, [sp, #0]
 80038c8:	f7ff ff00 	bl	80036cc <_ZN8touchgfx8Drawable11setPositionEssss>
    right.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 80038cc:	9804      	ldr	r0, [sp, #16]
 80038ce:	f8a4 91c0 	strh.w	r9, [r4, #448]	@ 0x1c0
 80038d2:	465a      	mov	r2, fp
 80038d4:	4651      	mov	r1, sl
 80038d6:	4b3b      	ldr	r3, [pc, #236]	@ (80039c4 <_ZN15Screen1ViewBaseC1Ev+0x228>)
 80038d8:	9700      	str	r7, [sp, #0]
 80038da:	f7ff ff53 	bl	8003784 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
    right.setPosition(64, 62, 50, 50);
 80038de:	462b      	mov	r3, r5
 80038e0:	9804      	ldr	r0, [sp, #16]
 80038e2:	f8c4 818c 	str.w	r8, [r4, #396]	@ 0x18c
 80038e6:	223e      	movs	r2, #62	@ 0x3e
 80038e8:	9500      	str	r5, [sp, #0]
 80038ea:	2140      	movs	r1, #64	@ 0x40
 80038ec:	f7ff feee 	bl	80036cc <_ZN8touchgfx8Drawable11setPositionEssss>
 80038f0:	9904      	ldr	r1, [sp, #16]
 80038f2:	1d20      	adds	r0, r4, #4
 80038f4:	f007 f9da 	bl	800acac <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80038f8:	462b      	mov	r3, r5
 80038fa:	4632      	mov	r2, r6
 80038fc:	4631      	mov	r1, r6
 80038fe:	f504 7002 	add.w	r0, r4, #520	@ 0x208
 8003902:	9500      	str	r5, [sp, #0]
 8003904:	f7ff fee2 	bl	80036cc <_ZN8touchgfx8Drawable11setPositionEssss>
    left.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 8003908:	9805      	ldr	r0, [sp, #20]
 800390a:	f8a4 9238 	strh.w	r9, [r4, #568]	@ 0x238
 800390e:	465a      	mov	r2, fp
 8003910:	4651      	mov	r1, sl
 8003912:	4b2c      	ldr	r3, [pc, #176]	@ (80039c4 <_ZN15Screen1ViewBaseC1Ev+0x228>)
 8003914:	9700      	str	r7, [sp, #0]
 8003916:	f7ff ff35 	bl	8003784 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
    left.setPosition(64, 191, 50, 50);
 800391a:	462b      	mov	r3, r5
 800391c:	9805      	ldr	r0, [sp, #20]
 800391e:	f8c4 8204 	str.w	r8, [r4, #516]	@ 0x204
 8003922:	22bf      	movs	r2, #191	@ 0xbf
 8003924:	9500      	str	r5, [sp, #0]
 8003926:	2140      	movs	r1, #64	@ 0x40
 8003928:	f7ff fed0 	bl	80036cc <_ZN8touchgfx8Drawable11setPositionEssss>
 800392c:	9905      	ldr	r1, [sp, #20]
 800392e:	1d20      	adds	r0, r4, #4
 8003930:	f007 f9bc 	bl	800acac <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003934:	462b      	mov	r3, r5
 8003936:	4632      	mov	r2, r6
 8003938:	4631      	mov	r1, r6
 800393a:	f504 7020 	add.w	r0, r4, #640	@ 0x280
 800393e:	9500      	str	r5, [sp, #0]
 8003940:	f7ff fec4 	bl	80036cc <_ZN8touchgfx8Drawable11setPositionEssss>
    up.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 8003944:	9806      	ldr	r0, [sp, #24]
 8003946:	f8a4 92b0 	strh.w	r9, [r4, #688]	@ 0x2b0
 800394a:	465a      	mov	r2, fp
 800394c:	4651      	mov	r1, sl
 800394e:	4b1d      	ldr	r3, [pc, #116]	@ (80039c4 <_ZN15Screen1ViewBaseC1Ev+0x228>)
 8003950:	9700      	str	r7, [sp, #0]
 8003952:	f7ff ff17 	bl	8003784 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
    up.setPosition(0, 128, 50, 50);
 8003956:	462b      	mov	r3, r5
 8003958:	9806      	ldr	r0, [sp, #24]
 800395a:	f8c4 827c 	str.w	r8, [r4, #636]	@ 0x27c
 800395e:	2280      	movs	r2, #128	@ 0x80
 8003960:	4631      	mov	r1, r6
 8003962:	9500      	str	r5, [sp, #0]
 8003964:	f7ff feb2 	bl	80036cc <_ZN8touchgfx8Drawable11setPositionEssss>
 8003968:	9906      	ldr	r1, [sp, #24]
 800396a:	1d20      	adds	r0, r4, #4
 800396c:	f007 f99e 	bl	800acac <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003970:	462b      	mov	r3, r5
 8003972:	4632      	mov	r2, r6
 8003974:	4631      	mov	r1, r6
 8003976:	f504 703e 	add.w	r0, r4, #760	@ 0x2f8
 800397a:	9500      	str	r5, [sp, #0]
 800397c:	f7ff fea6 	bl	80036cc <_ZN8touchgfx8Drawable11setPositionEssss>
    down.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 8003980:	9807      	ldr	r0, [sp, #28]
 8003982:	f8a4 9328 	strh.w	r9, [r4, #808]	@ 0x328
 8003986:	465a      	mov	r2, fp
 8003988:	4651      	mov	r1, sl
 800398a:	4b0e      	ldr	r3, [pc, #56]	@ (80039c4 <_ZN15Screen1ViewBaseC1Ev+0x228>)
 800398c:	9700      	str	r7, [sp, #0]
 800398e:	f7ff fef9 	bl	8003784 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
    down.setPosition(128, 128, 50, 50);
 8003992:	2280      	movs	r2, #128	@ 0x80
 8003994:	4611      	mov	r1, r2
 8003996:	9807      	ldr	r0, [sp, #28]
 8003998:	f8c4 82f4 	str.w	r8, [r4, #756]	@ 0x2f4
 800399c:	462b      	mov	r3, r5
 800399e:	9500      	str	r5, [sp, #0]
 80039a0:	f7ff fe94 	bl	80036cc <_ZN8touchgfx8Drawable11setPositionEssss>
 80039a4:	1d20      	adds	r0, r4, #4
 80039a6:	9907      	ldr	r1, [sp, #28]
 80039a8:	f007 f980 	bl	800acac <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 80039ac:	4620      	mov	r0, r4
 80039ae:	b009      	add	sp, #36	@ 0x24
 80039b0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80039b4:	08024dec 	.word	0x08024dec
 80039b8:	08024dd4 	.word	0x08024dd4
 80039bc:	ff336699 	.word	0xff336699
 80039c0:	0800354f 	.word	0x0800354f
 80039c4:	ff003366 	.word	0xff003366
 80039c8:	ff006699 	.word	0xff006699
 80039cc:	ff0099cc 	.word	0xff0099cc

080039d0 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_10_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_10_4bpp();

touchgfx::GeneratedFont& getFont_verdana_10_4bpp()
{
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 10, 0, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 80039d0:	4770      	bx	lr
	...

080039d4 <_Z23getFont_verdana_10_4bppv>:
{
 80039d4:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 10, 0, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 80039d6:	4d16      	ldr	r5, [pc, #88]	@ (8003a30 <_Z23getFont_verdana_10_4bppv+0x5c>)
 80039d8:	682c      	ldr	r4, [r5, #0]
 80039da:	f014 0401 	ands.w	r4, r4, #1
{
 80039de:	b08f      	sub	sp, #60	@ 0x3c
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 10, 0, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 80039e0:	f3bf 8f5b 	dmb	ish
 80039e4:	d120      	bne.n	8003a28 <_Z23getFont_verdana_10_4bppv+0x54>
 80039e6:	4628      	mov	r0, r5
 80039e8:	f01e f99f 	bl	8021d2a <__cxa_guard_acquire>
 80039ec:	b1e0      	cbz	r0, 8003a28 <_Z23getFont_verdana_10_4bppv+0x54>
 80039ee:	233f      	movs	r3, #63	@ 0x3f
 80039f0:	9309      	str	r3, [sp, #36]	@ 0x24
 80039f2:	4b10      	ldr	r3, [pc, #64]	@ (8003a34 <_Z23getFont_verdana_10_4bppv+0x60>)
 80039f4:	9308      	str	r3, [sp, #32]
 80039f6:	4b10      	ldr	r3, [pc, #64]	@ (8003a38 <_Z23getFont_verdana_10_4bppv+0x64>)
 80039f8:	4910      	ldr	r1, [pc, #64]	@ (8003a3c <_Z23getFont_verdana_10_4bppv+0x68>)
 80039fa:	4811      	ldr	r0, [pc, #68]	@ (8003a40 <_Z23getFont_verdana_10_4bppv+0x6c>)
 80039fc:	940a      	str	r4, [sp, #40]	@ 0x28
 80039fe:	2201      	movs	r2, #1
 8003a00:	e9cd 4306 	strd	r4, r3, [sp, #24]
 8003a04:	2304      	movs	r3, #4
 8003a06:	e9cd 3203 	strd	r3, r2, [sp, #12]
 8003a0a:	230a      	movs	r3, #10
 8003a0c:	9300      	str	r3, [sp, #0]
 8003a0e:	e9cd 440b 	strd	r4, r4, [sp, #44]	@ 0x2c
 8003a12:	e9cd 4401 	strd	r4, r4, [sp, #4]
 8003a16:	9405      	str	r4, [sp, #20]
 8003a18:	f7ff fd58 	bl	80034cc <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8003a1c:	4809      	ldr	r0, [pc, #36]	@ (8003a44 <_Z23getFont_verdana_10_4bppv+0x70>)
 8003a1e:	f01f f9df 	bl	8022de0 <atexit>
 8003a22:	4628      	mov	r0, r5
 8003a24:	f01e f98d 	bl	8021d42 <__cxa_guard_release>
    return verdana_10_4bpp;
}
 8003a28:	4805      	ldr	r0, [pc, #20]	@ (8003a40 <_Z23getFont_verdana_10_4bppv+0x6c>)
 8003a2a:	b00f      	add	sp, #60	@ 0x3c
 8003a2c:	bd30      	pop	{r4, r5, pc}
 8003a2e:	bf00      	nop
 8003a30:	200025bc 	.word	0x200025bc
 8003a34:	08025c2c 	.word	0x08025c2c
 8003a38:	08025c38 	.word	0x08025c38
 8003a3c:	08025bfc 	.word	0x08025bfc
 8003a40:	200025c0 	.word	0x200025c0
 8003a44:	080039d1 	.word	0x080039d1

08003a48 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_20_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_20_4bpp();

touchgfx::GeneratedFont& getFont_verdana_20_4bpp()
{
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 1, 20, 20, 0, 0, 4, 1, 0, 0, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
 8003a48:	4770      	bx	lr
	...

08003a4c <_Z23getFont_verdana_20_4bppv>:
{
 8003a4c:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 1, 20, 20, 0, 0, 4, 1, 0, 0, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
 8003a4e:	4d16      	ldr	r5, [pc, #88]	@ (8003aa8 <_Z23getFont_verdana_20_4bppv+0x5c>)
 8003a50:	682c      	ldr	r4, [r5, #0]
 8003a52:	f014 0401 	ands.w	r4, r4, #1
{
 8003a56:	b08f      	sub	sp, #60	@ 0x3c
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 1, 20, 20, 0, 0, 4, 1, 0, 0, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
 8003a58:	f3bf 8f5b 	dmb	ish
 8003a5c:	d120      	bne.n	8003aa0 <_Z23getFont_verdana_20_4bppv+0x54>
 8003a5e:	4628      	mov	r0, r5
 8003a60:	f01e f963 	bl	8021d2a <__cxa_guard_acquire>
 8003a64:	b1e0      	cbz	r0, 8003aa0 <_Z23getFont_verdana_20_4bppv+0x54>
 8003a66:	233f      	movs	r3, #63	@ 0x3f
 8003a68:	9309      	str	r3, [sp, #36]	@ 0x24
 8003a6a:	4b10      	ldr	r3, [pc, #64]	@ (8003aac <_Z23getFont_verdana_20_4bppv+0x60>)
 8003a6c:	9308      	str	r3, [sp, #32]
 8003a6e:	4b10      	ldr	r3, [pc, #64]	@ (8003ab0 <_Z23getFont_verdana_20_4bppv+0x64>)
 8003a70:	4910      	ldr	r1, [pc, #64]	@ (8003ab4 <_Z23getFont_verdana_20_4bppv+0x68>)
 8003a72:	4811      	ldr	r0, [pc, #68]	@ (8003ab8 <_Z23getFont_verdana_20_4bppv+0x6c>)
 8003a74:	940a      	str	r4, [sp, #40]	@ 0x28
 8003a76:	2201      	movs	r2, #1
 8003a78:	e9cd 4306 	strd	r4, r3, [sp, #24]
 8003a7c:	2304      	movs	r3, #4
 8003a7e:	e9cd 3203 	strd	r3, r2, [sp, #12]
 8003a82:	2314      	movs	r3, #20
 8003a84:	9300      	str	r3, [sp, #0]
 8003a86:	e9cd 440b 	strd	r4, r4, [sp, #44]	@ 0x2c
 8003a8a:	e9cd 4401 	strd	r4, r4, [sp, #4]
 8003a8e:	9405      	str	r4, [sp, #20]
 8003a90:	f7ff fd1c 	bl	80034cc <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8003a94:	4809      	ldr	r0, [pc, #36]	@ (8003abc <_Z23getFont_verdana_20_4bppv+0x70>)
 8003a96:	f01f f9a3 	bl	8022de0 <atexit>
 8003a9a:	4628      	mov	r0, r5
 8003a9c:	f01e f951 	bl	8021d42 <__cxa_guard_release>
    return verdana_20_4bpp;
}
 8003aa0:	4805      	ldr	r0, [pc, #20]	@ (8003ab8 <_Z23getFont_verdana_20_4bppv+0x6c>)
 8003aa2:	b00f      	add	sp, #60	@ 0x3c
 8003aa4:	bd30      	pop	{r4, r5, pc}
 8003aa6:	bf00      	nop
 8003aa8:	200025ec 	.word	0x200025ec
 8003aac:	08025c30 	.word	0x08025c30
 8003ab0:	08025c3c 	.word	0x08025c3c
 8003ab4:	08025c0c 	.word	0x08025c0c
 8003ab8:	200025f0 	.word	0x200025f0
 8003abc:	08003a49 	.word	0x08003a49

08003ac0 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_40_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_40_4bpp();

touchgfx::GeneratedFont& getFont_verdana_40_4bpp()
{
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8003ac0:	4770      	bx	lr
	...

08003ac4 <_Z23getFont_verdana_40_4bppv>:
{
 8003ac4:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8003ac6:	4d16      	ldr	r5, [pc, #88]	@ (8003b20 <_Z23getFont_verdana_40_4bppv+0x5c>)
 8003ac8:	682c      	ldr	r4, [r5, #0]
 8003aca:	f014 0401 	ands.w	r4, r4, #1
{
 8003ace:	b08f      	sub	sp, #60	@ 0x3c
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8003ad0:	f3bf 8f5b 	dmb	ish
 8003ad4:	d120      	bne.n	8003b18 <_Z23getFont_verdana_40_4bppv+0x54>
 8003ad6:	4628      	mov	r0, r5
 8003ad8:	f01e f927 	bl	8021d2a <__cxa_guard_acquire>
 8003adc:	b1e0      	cbz	r0, 8003b18 <_Z23getFont_verdana_40_4bppv+0x54>
 8003ade:	233f      	movs	r3, #63	@ 0x3f
 8003ae0:	9309      	str	r3, [sp, #36]	@ 0x24
 8003ae2:	4b10      	ldr	r3, [pc, #64]	@ (8003b24 <_Z23getFont_verdana_40_4bppv+0x60>)
 8003ae4:	9308      	str	r3, [sp, #32]
 8003ae6:	4b10      	ldr	r3, [pc, #64]	@ (8003b28 <_Z23getFont_verdana_40_4bppv+0x64>)
 8003ae8:	4910      	ldr	r1, [pc, #64]	@ (8003b2c <_Z23getFont_verdana_40_4bppv+0x68>)
 8003aea:	4811      	ldr	r0, [pc, #68]	@ (8003b30 <_Z23getFont_verdana_40_4bppv+0x6c>)
 8003aec:	940a      	str	r4, [sp, #40]	@ 0x28
 8003aee:	2201      	movs	r2, #1
 8003af0:	e9cd 4306 	strd	r4, r3, [sp, #24]
 8003af4:	2304      	movs	r3, #4
 8003af6:	e9cd 3203 	strd	r3, r2, [sp, #12]
 8003afa:	2328      	movs	r3, #40	@ 0x28
 8003afc:	9300      	str	r3, [sp, #0]
 8003afe:	e9cd 440b 	strd	r4, r4, [sp, #44]	@ 0x2c
 8003b02:	e9cd 4401 	strd	r4, r4, [sp, #4]
 8003b06:	9405      	str	r4, [sp, #20]
 8003b08:	f7ff fce0 	bl	80034cc <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8003b0c:	4809      	ldr	r0, [pc, #36]	@ (8003b34 <_Z23getFont_verdana_40_4bppv+0x70>)
 8003b0e:	f01f f967 	bl	8022de0 <atexit>
 8003b12:	4628      	mov	r0, r5
 8003b14:	f01e f915 	bl	8021d42 <__cxa_guard_release>
    return verdana_40_4bpp;
}
 8003b18:	4805      	ldr	r0, [pc, #20]	@ (8003b30 <_Z23getFont_verdana_40_4bppv+0x6c>)
 8003b1a:	b00f      	add	sp, #60	@ 0x3c
 8003b1c:	bd30      	pop	{r4, r5, pc}
 8003b1e:	bf00      	nop
 8003b20:	2000261c 	.word	0x2000261c
 8003b24:	08025c34 	.word	0x08025c34
 8003b28:	08025c40 	.word	0x08025c40
 8003b2c:	08025c1c 	.word	0x08025c1c
 8003b30:	20002620 	.word	0x20002620
 8003b34:	08003ac1 	.word	0x08003ac1

08003b38 <_ZNK8touchgfx4Font12getGSUBTableEv>:
    }
 8003b38:	2000      	movs	r0, #0
 8003b3a:	4770      	bx	lr

08003b3c <_ZNK8touchgfx4Font23getContextualFormsTableEv>:
    }
 8003b3c:	2000      	movs	r0, #0
 8003b3e:	4770      	bx	lr

08003b40 <_ZNK8touchgfx4Font14getStringWidthEPKtz>:
#include <touchgfx/hal/HAL.hpp>
#include <touchgfx/lcd/LCD.hpp>
#include <texts/TypedTextDatabase.hpp>

uint16_t touchgfx::Font::getStringWidth(const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 8003b40:	b40e      	push	{r1, r2, r3}
 8003b42:	b503      	push	{r0, r1, lr}
 8003b44:	ab03      	add	r3, sp, #12
    va_list pArg;
    va_start(pArg, text);
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 8003b46:	2100      	movs	r1, #0
{
 8003b48:	f853 2b04 	ldr.w	r2, [r3], #4
    va_start(pArg, text);
 8003b4c:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 8003b4e:	f00c ff69 	bl	8010a24 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 8003b52:	b002      	add	sp, #8
 8003b54:	f85d eb04 	ldr.w	lr, [sp], #4
 8003b58:	b003      	add	sp, #12
 8003b5a:	4770      	bx	lr

08003b5c <_ZNK8touchgfx4Font14getStringWidthEhPKtz>:

uint16_t touchgfx::Font::getStringWidth(touchgfx::TextDirection textDirection, const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 8003b5c:	b40c      	push	{r2, r3}
 8003b5e:	b507      	push	{r0, r1, r2, lr}
 8003b60:	ab04      	add	r3, sp, #16
 8003b62:	f853 2b04 	ldr.w	r2, [r3], #4
    va_list pArg;
    va_start(pArg, text);
 8003b66:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(textDirection, text, pArg);
 8003b68:	f00c ff5c 	bl	8010a24 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 8003b6c:	b003      	add	sp, #12
 8003b6e:	f85d eb04 	ldr.w	lr, [sp], #4
 8003b72:	b002      	add	sp, #8
 8003b74:	4770      	bx	lr
	...

08003b78 <_ZN8touchgfx12TextProvider15getNextLigatureEh>:

touchgfx::Unicode::UnicodeChar touchgfx::TextProvider::getNextLigature(TextDirection direction)
{
    if (fontGsubTable && nextCharacters.peekChar())
 8003b78:	6c43      	ldr	r3, [r0, #68]	@ 0x44
{
 8003b7a:	b510      	push	{r4, lr}
 8003b7c:	4604      	mov	r4, r0
    if (fontGsubTable && nextCharacters.peekChar())
 8003b7e:	b373      	cbz	r3, 8003bde <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
            return used == size;
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
        {
            assert(used > 0);
 8003b80:	8f03      	ldrh	r3, [r0, #56]	@ 0x38
 8003b82:	b92b      	cbnz	r3, 8003b90 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x18>
 8003b84:	4b18      	ldr	r3, [pc, #96]	@ (8003be8 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x70>)
 8003b86:	4a19      	ldr	r2, [pc, #100]	@ (8003bec <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x74>)
 8003b88:	21c5      	movs	r1, #197	@ 0xc5
            return buffer[pos];
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar(uint16_t offset)
        {
            assert(offset < used);
 8003b8a:	4819      	ldr	r0, [pc, #100]	@ (8003bf0 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x78>)
 8003b8c:	f01f f90a 	bl	8022da4 <__assert_func>
            return buffer[pos];
 8003b90:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
 8003b92:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8003b96:	8c5b      	ldrh	r3, [r3, #34]	@ 0x22
 8003b98:	b30b      	cbz	r3, 8003bde <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
    {
        substituteGlyphs();
 8003b9a:	f00e fd5e 	bl	801265a <_ZN8touchgfx12TextProvider16substituteGlyphsEv>
            assert(offset < used);
 8003b9e:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
 8003ba0:	2b01      	cmp	r3, #1
 8003ba2:	d803      	bhi.n	8003bac <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x34>
 8003ba4:	4b13      	ldr	r3, [pc, #76]	@ (8003bf4 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x7c>)
 8003ba6:	4a14      	ldr	r2, [pc, #80]	@ (8003bf8 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x80>)
 8003ba8:	21cb      	movs	r1, #203	@ 0xcb
 8003baa:	e7ee      	b.n	8003b8a <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x12>
            const uint16_t index = pos + offset;
 8003bac:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
 8003bae:	1c53      	adds	r3, r2, #1
 8003bb0:	b29b      	uxth	r3, r3
            return buffer[index < size ? index : index - size];
 8003bb2:	2b09      	cmp	r3, #9
 8003bb4:	4619      	mov	r1, r3
 8003bb6:	bf88      	it	hi
 8003bb8:	f1a3 010a 	subhi.w	r1, r3, #10
 8003bbc:	eb04 0141 	add.w	r1, r4, r1, lsl #1
        if (nextCharacters.peekChar(1) == 0x093F) // Hindi I-matra
 8003bc0:	f640 103f 	movw	r0, #2367	@ 0x93f
 8003bc4:	8c49      	ldrh	r1, [r1, #34]	@ 0x22
 8003bc6:	4281      	cmp	r1, r0
 8003bc8:	d109      	bne.n	8003bde <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>

        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
        {
            assert(used > 1);
            const uint16_t index = pos + 1;
            buffer[index < size ? index : 0] = newChar;
 8003bca:	2b0a      	cmp	r3, #10
 8003bcc:	eb04 0242 	add.w	r2, r4, r2, lsl #1
 8003bd0:	bf28      	it	cs
 8003bd2:	2300      	movcs	r3, #0
 8003bd4:	eb04 0343 	add.w	r3, r4, r3, lsl #1
            return buffer[pos];
 8003bd8:	8c50      	ldrh	r0, [r2, #34]	@ 0x22
            buffer[index < size ? index : 0] = newChar;
 8003bda:	8458      	strh	r0, [r3, #34]	@ 0x22
            buffer[pos] = newChar;
 8003bdc:	8451      	strh	r1, [r2, #34]	@ 0x22
        {
            nextCharacters.replaceAt1(nextCharacters.peekChar());
            nextCharacters.replaceAt0(0x093F);
        }
    }
    return getNextChar();
 8003bde:	4620      	mov	r0, r4
}
 8003be0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    return getNextChar();
 8003be4:	f00e bc3c 	b.w	8012460 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8003be8:	0802465b 	.word	0x0802465b
 8003bec:	08024664 	.word	0x08024664
 8003bf0:	0802470f 	.word	0x0802470f
 8003bf4:	08024759 	.word	0x08024759
 8003bf8:	08024767 	.word	0x08024767

08003bfc <_ZN8touchgfx12TextProvider18initializeInternalEv>:

void touchgfx::TextProvider::initializeInternal()
{
    fillInputBuffer();
 8003bfc:	f00e bbf7 	b.w	80123ee <_ZN8touchgfx12TextProvider15fillInputBufferEv>

08003c00 <_ZN8touchgfx5Texts11setLanguageEt>:
touchgfx::LanguageId touchgfx::Texts::currentLanguage = static_cast<touchgfx::LanguageId>(0);
static const touchgfx::Unicode::UnicodeChar* currentLanguagePtr = 0;
static const uint32_t* currentLanguageIndices = 0;

void touchgfx::Texts::setLanguage(touchgfx::LanguageId id)
{
 8003c00:	b538      	push	{r3, r4, r5, lr}
    const touchgfx::TypedText::TypedTextData* currentLanguageTypedText = 0;
    if (id < 1)
 8003c02:	bb18      	cbnz	r0, 8003c4c <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
    {
        if (languagesArray[id] != 0)
 8003c04:	4b12      	ldr	r3, [pc, #72]	@ (8003c50 <_ZN8touchgfx5Texts11setLanguageEt+0x50>)
 8003c06:	4813      	ldr	r0, [pc, #76]	@ (8003c54 <_ZN8touchgfx5Texts11setLanguageEt+0x54>)
 8003c08:	681c      	ldr	r4, [r3, #0]
 8003c0a:	4913      	ldr	r1, [pc, #76]	@ (8003c58 <_ZN8touchgfx5Texts11setLanguageEt+0x58>)
 8003c0c:	b1b4      	cbz	r4, 8003c3c <_ZN8touchgfx5Texts11setLanguageEt+0x3c>
        {
            // Dynamic translation is added
            const TranslationHeader* translation = languagesArray[id];
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 8003c0e:	6822      	ldr	r2, [r4, #0]
 8003c10:	4422      	add	r2, r4
 8003c12:	6002      	str	r2, [r0, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
 8003c14:	6862      	ldr	r2, [r4, #4]
 8003c16:	4422      	add	r2, r4
 8003c18:	600a      	str	r2, [r1, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 8003c1a:	68a2      	ldr	r2, [r4, #8]
 8003c1c:	4414      	add	r4, r2
        }
    }

    if (currentLanguageTypedText)
    {
        currentLanguage = id;
 8003c1e:	4b0f      	ldr	r3, [pc, #60]	@ (8003c5c <_ZN8touchgfx5Texts11setLanguageEt+0x5c>)
 8003c20:	2200      	movs	r2, #0
 8003c22:	801a      	strh	r2, [r3, #0]
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
                                                       TypedTextDatabase::getFonts(), TypedTextDatabase::getInstanceSize());
 8003c24:	f000 f82a 	bl	8003c7c <_ZN17TypedTextDatabase8getFontsEv>
 8003c28:	4605      	mov	r5, r0
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
 8003c2a:	f000 f825 	bl	8003c78 <_ZN17TypedTextDatabase15getInstanceSizeEv>
        typedTexts = data;
 8003c2e:	4b0c      	ldr	r3, [pc, #48]	@ (8003c60 <_ZN8touchgfx5Texts11setLanguageEt+0x60>)
 8003c30:	601c      	str	r4, [r3, #0]
        fonts = f;
 8003c32:	4b0c      	ldr	r3, [pc, #48]	@ (8003c64 <_ZN8touchgfx5Texts11setLanguageEt+0x64>)
 8003c34:	601d      	str	r5, [r3, #0]
        numberOfTypedTexts = n;
 8003c36:	4b0c      	ldr	r3, [pc, #48]	@ (8003c68 <_ZN8touchgfx5Texts11setLanguageEt+0x68>)
 8003c38:	8018      	strh	r0, [r3, #0]
    }
}
 8003c3a:	e007      	b.n	8003c4c <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
            currentLanguagePtr = texts_all_languages;
 8003c3c:	4b0b      	ldr	r3, [pc, #44]	@ (8003c6c <_ZN8touchgfx5Texts11setLanguageEt+0x6c>)
 8003c3e:	6003      	str	r3, [r0, #0]
            currentLanguageIndices = staticLanguageIndices[id];
 8003c40:	4b0b      	ldr	r3, [pc, #44]	@ (8003c70 <_ZN8touchgfx5Texts11setLanguageEt+0x70>)
 8003c42:	600b      	str	r3, [r1, #0]
            currentLanguageTypedText = typedTextDatabaseArray[id];
 8003c44:	4b0b      	ldr	r3, [pc, #44]	@ (8003c74 <_ZN8touchgfx5Texts11setLanguageEt+0x74>)
 8003c46:	681c      	ldr	r4, [r3, #0]
    if (currentLanguageTypedText)
 8003c48:	2c00      	cmp	r4, #0
 8003c4a:	d1e8      	bne.n	8003c1e <_ZN8touchgfx5Texts11setLanguageEt+0x1e>
}
 8003c4c:	bd38      	pop	{r3, r4, r5, pc}
 8003c4e:	bf00      	nop
 8003c50:	20002658 	.word	0x20002658
 8003c54:	20002650 	.word	0x20002650
 8003c58:	2000264c 	.word	0x2000264c
 8003c5c:	20002654 	.word	0x20002654
 8003c60:	2001342c 	.word	0x2001342c
 8003c64:	20013434 	.word	0x20013434
 8003c68:	20013430 	.word	0x20013430
 8003c6c:	08025c48 	.word	0x08025c48
 8003c70:	08025c44 	.word	0x08025c44
 8003c74:	08025c4c 	.word	0x08025c4c

08003c78 <_ZN17TypedTextDatabase15getInstanceSizeEv>:
}

uint16_t getInstanceSize()
{
    return 0;
}
 8003c78:	2000      	movs	r0, #0
 8003c7a:	4770      	bx	lr

08003c7c <_ZN17TypedTextDatabase8getFontsEv>:

const touchgfx::Font** getFonts()
{
    return touchgfx_fonts;
}
 8003c7c:	4800      	ldr	r0, [pc, #0]	@ (8003c80 <_ZN17TypedTextDatabase8getFontsEv+0x4>)
 8003c7e:	4770      	bx	lr
 8003c80:	2000265c 	.word	0x2000265c

08003c84 <_GLOBAL__sub_I_touchgfx_fonts>:
    case 2:
        touchgfx_fonts[2] = &(getFont_verdana_10_4bpp());
        break;
    }
}
} // namespace TypedTextDatabase
 8003c84:	b510      	push	{r4, lr}
    &(getFont_verdana_20_4bpp()),
 8003c86:	f7ff fee1 	bl	8003a4c <_Z23getFont_verdana_20_4bppv>
};
 8003c8a:	4c04      	ldr	r4, [pc, #16]	@ (8003c9c <_GLOBAL__sub_I_touchgfx_fonts+0x18>)
 8003c8c:	6020      	str	r0, [r4, #0]
    &(getFont_verdana_40_4bpp()),
 8003c8e:	f7ff ff19 	bl	8003ac4 <_Z23getFont_verdana_40_4bppv>
};
 8003c92:	6060      	str	r0, [r4, #4]
    &(getFont_verdana_10_4bpp())
 8003c94:	f7ff fe9e 	bl	80039d4 <_Z23getFont_verdana_10_4bppv>
};
 8003c98:	60a0      	str	r0, [r4, #8]
} // namespace TypedTextDatabase
 8003c9a:	bd10      	pop	{r4, pc}
 8003c9c:	2000265c 	.word	0x2000265c

08003ca0 <_ZN8touchgfx22VectorFontRendererImpl20getVectorFontBuffersERPfRiRPhS3_>:
/* DO NOT EDIT THIS FILE */
/* This file is autogenerated by the text-database code generator */
#include <touchgfx/VectorFontRendererImpl.hpp>

void touchgfx::VectorFontRendererImpl::getVectorFontBuffers(float*& pointArray, int& pointArraySize, uint8_t*& commandArray, int& commandArraySize)
{
 8003ca0:	b510      	push	{r4, lr}
    pointArray = 0;
 8003ca2:	2400      	movs	r4, #0
 8003ca4:	6004      	str	r4, [r0, #0]
    pointArraySize = 0;
 8003ca6:	600c      	str	r4, [r1, #0]
    commandArray = 0;
 8003ca8:	6014      	str	r4, [r2, #0]
    commandArraySize = 0;
 8003caa:	601c      	str	r4, [r3, #0]
}
 8003cac:	bd10      	pop	{r4, pc}

08003cae <_ZN19FrontendApplicationD1Ev>:

class FrontendApplication : public FrontendApplicationBase
{
public:
    FrontendApplication(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplication() { }
 8003cae:	4770      	bx	lr

08003cb0 <_ZN19FrontendApplicationD0Ev>:
 8003cb0:	b510      	push	{r4, lr}
 8003cb2:	f44f 71ae 	mov.w	r1, #348	@ 0x15c
 8003cb6:	4604      	mov	r4, r0
 8003cb8:	f01e f835 	bl	8021d26 <_ZdlPvj>
 8003cbc:	4620      	mov	r0, r4
 8003cbe:	bd10      	pop	{r4, pc}

08003cc0 <_ZN19FrontendApplication15handleTickEventEv>:

    virtual void handleTickEvent()
 8003cc0:	b510      	push	{r4, lr}
 8003cc2:	4604      	mov	r4, r0
    {
        model.tick();
 8003cc4:	f8d0 0158 	ldr.w	r0, [r0, #344]	@ 0x158
 8003cc8:	f000 f813 	bl	8003cf2 <_ZN5Model4tickEv>
        FrontendApplicationBase::handleTickEvent();
 8003ccc:	4620      	mov	r0, r4
    }
 8003cce:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        FrontendApplicationBase::handleTickEvent();
 8003cd2:	f00b bea1 	b.w	800fa18 <_ZN8touchgfx11Application15handleTickEventEv>
	...

08003cd8 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>:
#include <gui/common/FrontendApplication.hpp>

FrontendApplication::FrontendApplication(Model& m, FrontendHeap& heap)
 8003cd8:	b510      	push	{r4, lr}
 8003cda:	4604      	mov	r4, r0
    : FrontendApplicationBase(m, heap)
 8003cdc:	f7ff fb80 	bl	80033e0 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>
 8003ce0:	4b01      	ldr	r3, [pc, #4]	@ (8003ce8 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap+0x10>)
 8003ce2:	6023      	str	r3, [r4, #0]
{

}
 8003ce4:	4620      	mov	r0, r4
 8003ce6:	bd10      	pop	{r4, pc}
 8003ce8:	08024e38 	.word	0x08024e38

08003cec <_ZN5ModelC1Ev>:
#include <gui/model/Model.hpp>
#include <gui/model/ModelListener.hpp>

Model::Model() : modelListener(0)
 8003cec:	2200      	movs	r2, #0
 8003cee:	6002      	str	r2, [r0, #0]
{

}
 8003cf0:	4770      	bx	lr

08003cf2 <_ZN5Model4tickEv>:

void Model::tick()
{

}
 8003cf2:	4770      	bx	lr

08003cf4 <_ZN16Screen1PresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Screen1Presenter() {}
 8003cf4:	4770      	bx	lr

08003cf6 <_ZThn4_N16Screen1PresenterD1Ev>:
 8003cf6:	3804      	subs	r0, #4
 8003cf8:	4770      	bx	lr

08003cfa <_ZN16Screen1Presenter10deactivateEv>:
}

void Screen1Presenter::activate()
{

}
 8003cfa:	4770      	bx	lr

08003cfc <_ZN16Screen1PresenterD0Ev>:
 8003cfc:	b510      	push	{r4, lr}
 8003cfe:	2110      	movs	r1, #16
 8003d00:	4604      	mov	r4, r0
 8003d02:	f01e f810 	bl	8021d26 <_ZdlPvj>
 8003d06:	4620      	mov	r0, r4
 8003d08:	bd10      	pop	{r4, pc}

08003d0a <_ZThn4_N16Screen1PresenterD0Ev>:
 8003d0a:	f1a0 0004 	sub.w	r0, r0, #4
 8003d0e:	e7f5      	b.n	8003cfc <_ZN16Screen1PresenterD0Ev>

08003d10 <_ZN16Screen1PresenterC1ER11Screen1View>:
    ModelListener() : model(0) {}
 8003d10:	2200      	movs	r2, #0
 8003d12:	6082      	str	r2, [r0, #8]
    : view(v)
 8003d14:	4a02      	ldr	r2, [pc, #8]	@ (8003d20 <_ZN16Screen1PresenterC1ER11Screen1View+0x10>)
 8003d16:	6002      	str	r2, [r0, #0]
 8003d18:	3218      	adds	r2, #24
 8003d1a:	6042      	str	r2, [r0, #4]
 8003d1c:	60c1      	str	r1, [r0, #12]
}
 8003d1e:	4770      	bx	lr
 8003d20:	08024e8c 	.word	0x08024e8c

08003d24 <_ZN11Screen1View14tearDownScreenEv>:
}

void Screen1View::tearDownScreen()
{
    Screen1ViewBase::tearDownScreen();
}
 8003d24:	4770      	bx	lr
	...

08003d28 <_ZN11Screen1View9leftMouseEv>:
void Screen1View::leftMouse()
{
 8003d28:	b513      	push	{r0, r1, r4, lr}
    uint8_t move = 'L';
    if (osMessageQueueGetCount(myQueue01Handle) < 5)
 8003d2a:	4c09      	ldr	r4, [pc, #36]	@ (8003d50 <_ZN11Screen1View9leftMouseEv+0x28>)
    uint8_t move = 'L';
 8003d2c:	234c      	movs	r3, #76	@ 0x4c
    if (osMessageQueueGetCount(myQueue01Handle) < 5)
 8003d2e:	6820      	ldr	r0, [r4, #0]
    uint8_t move = 'L';
 8003d30:	f88d 3007 	strb.w	r3, [sp, #7]
    if (osMessageQueueGetCount(myQueue01Handle) < 5)
 8003d34:	f004 fb20 	bl	8008378 <osMessageQueueGetCount>
 8003d38:	2804      	cmp	r0, #4
 8003d3a:	d806      	bhi.n	8003d4a <_ZN11Screen1View9leftMouseEv+0x22>
    {
        osMessageQueuePut(myQueue01Handle, &move, 0, 10);
 8003d3c:	6820      	ldr	r0, [r4, #0]
 8003d3e:	230a      	movs	r3, #10
 8003d40:	2200      	movs	r2, #0
 8003d42:	f10d 0107 	add.w	r1, sp, #7
 8003d46:	f004 fab6 	bl	80082b6 <osMessageQueuePut>
    }
}
 8003d4a:	b002      	add	sp, #8
 8003d4c:	bd10      	pop	{r4, pc}
 8003d4e:	bf00      	nop
 8003d50:	20002388 	.word	0x20002388

08003d54 <_ZN11Screen1View10rightMouseEv>:

void Screen1View::rightMouse()
{
 8003d54:	b513      	push	{r0, r1, r4, lr}
    uint8_t move = 'R';
    if (osMessageQueueGetCount(myQueue01Handle) < 5)
 8003d56:	4c09      	ldr	r4, [pc, #36]	@ (8003d7c <_ZN11Screen1View10rightMouseEv+0x28>)
    uint8_t move = 'R';
 8003d58:	2352      	movs	r3, #82	@ 0x52
    if (osMessageQueueGetCount(myQueue01Handle) < 5)
 8003d5a:	6820      	ldr	r0, [r4, #0]
    uint8_t move = 'R';
 8003d5c:	f88d 3007 	strb.w	r3, [sp, #7]
    if (osMessageQueueGetCount(myQueue01Handle) < 5)
 8003d60:	f004 fb0a 	bl	8008378 <osMessageQueueGetCount>
 8003d64:	2804      	cmp	r0, #4
 8003d66:	d806      	bhi.n	8003d76 <_ZN11Screen1View10rightMouseEv+0x22>
    {
        osMessageQueuePut(myQueue01Handle, &move, 0, 10);
 8003d68:	6820      	ldr	r0, [r4, #0]
 8003d6a:	230a      	movs	r3, #10
 8003d6c:	2200      	movs	r2, #0
 8003d6e:	f10d 0107 	add.w	r1, sp, #7
 8003d72:	f004 faa0 	bl	80082b6 <osMessageQueuePut>
    }
}
 8003d76:	b002      	add	sp, #8
 8003d78:	bd10      	pop	{r4, pc}
 8003d7a:	bf00      	nop
 8003d7c:	20002388 	.word	0x20002388

08003d80 <_ZN11Screen1View9moveRightEv>:

void Screen1View::moveRight()
{
 8003d80:	b513      	push	{r0, r1, r4, lr}
    uint8_t move = 'D';
    if (osMessageQueueGetCount(myQueue01Handle) < 5)
 8003d82:	4c09      	ldr	r4, [pc, #36]	@ (8003da8 <_ZN11Screen1View9moveRightEv+0x28>)
    uint8_t move = 'D';
 8003d84:	2344      	movs	r3, #68	@ 0x44
    if (osMessageQueueGetCount(myQueue01Handle) < 5)
 8003d86:	6820      	ldr	r0, [r4, #0]
    uint8_t move = 'D';
 8003d88:	f88d 3007 	strb.w	r3, [sp, #7]
    if (osMessageQueueGetCount(myQueue01Handle) < 5)
 8003d8c:	f004 faf4 	bl	8008378 <osMessageQueueGetCount>
 8003d90:	2804      	cmp	r0, #4
 8003d92:	d806      	bhi.n	8003da2 <_ZN11Screen1View9moveRightEv+0x22>
    {
        osMessageQueuePut(myQueue01Handle, &move, 0, 10);
 8003d94:	6820      	ldr	r0, [r4, #0]
 8003d96:	230a      	movs	r3, #10
 8003d98:	2200      	movs	r2, #0
 8003d9a:	f10d 0107 	add.w	r1, sp, #7
 8003d9e:	f004 fa8a 	bl	80082b6 <osMessageQueuePut>
    }
}
 8003da2:	b002      	add	sp, #8
 8003da4:	bd10      	pop	{r4, pc}
 8003da6:	bf00      	nop
 8003da8:	20002388 	.word	0x20002388

08003dac <_ZN11Screen1View8moveLeftEv>:

void Screen1View::moveLeft()
{
 8003dac:	b513      	push	{r0, r1, r4, lr}
    uint8_t move = 'A';
    if (osMessageQueueGetCount(myQueue01Handle) < 5)
 8003dae:	4c09      	ldr	r4, [pc, #36]	@ (8003dd4 <_ZN11Screen1View8moveLeftEv+0x28>)
    uint8_t move = 'A';
 8003db0:	2341      	movs	r3, #65	@ 0x41
    if (osMessageQueueGetCount(myQueue01Handle) < 5)
 8003db2:	6820      	ldr	r0, [r4, #0]
    uint8_t move = 'A';
 8003db4:	f88d 3007 	strb.w	r3, [sp, #7]
    if (osMessageQueueGetCount(myQueue01Handle) < 5)
 8003db8:	f004 fade 	bl	8008378 <osMessageQueueGetCount>
 8003dbc:	2804      	cmp	r0, #4
 8003dbe:	d806      	bhi.n	8003dce <_ZN11Screen1View8moveLeftEv+0x22>
    {
        osMessageQueuePut(myQueue01Handle, &move, 0, 10);
 8003dc0:	6820      	ldr	r0, [r4, #0]
 8003dc2:	230a      	movs	r3, #10
 8003dc4:	2200      	movs	r2, #0
 8003dc6:	f10d 0107 	add.w	r1, sp, #7
 8003dca:	f004 fa74 	bl	80082b6 <osMessageQueuePut>
    }
}
 8003dce:	b002      	add	sp, #8
 8003dd0:	bd10      	pop	{r4, pc}
 8003dd2:	bf00      	nop
 8003dd4:	20002388 	.word	0x20002388

08003dd8 <_ZN11Screen1View6moveUpEv>:

void Screen1View::moveUp()
{
 8003dd8:	b513      	push	{r0, r1, r4, lr}
    uint8_t move = 'W';
    if (osMessageQueueGetCount(myQueue01Handle) < 5)
 8003dda:	4c09      	ldr	r4, [pc, #36]	@ (8003e00 <_ZN11Screen1View6moveUpEv+0x28>)
    uint8_t move = 'W';
 8003ddc:	2357      	movs	r3, #87	@ 0x57
    if (osMessageQueueGetCount(myQueue01Handle) < 5)
 8003dde:	6820      	ldr	r0, [r4, #0]
    uint8_t move = 'W';
 8003de0:	f88d 3007 	strb.w	r3, [sp, #7]
    if (osMessageQueueGetCount(myQueue01Handle) < 5)
 8003de4:	f004 fac8 	bl	8008378 <osMessageQueueGetCount>
 8003de8:	2804      	cmp	r0, #4
 8003dea:	d806      	bhi.n	8003dfa <_ZN11Screen1View6moveUpEv+0x22>
    {
        osMessageQueuePut(myQueue01Handle, &move, 0, 10);
 8003dec:	6820      	ldr	r0, [r4, #0]
 8003dee:	230a      	movs	r3, #10
 8003df0:	2200      	movs	r2, #0
 8003df2:	f10d 0107 	add.w	r1, sp, #7
 8003df6:	f004 fa5e 	bl	80082b6 <osMessageQueuePut>
    }
}
 8003dfa:	b002      	add	sp, #8
 8003dfc:	bd10      	pop	{r4, pc}
 8003dfe:	bf00      	nop
 8003e00:	20002388 	.word	0x20002388

08003e04 <_ZN11Screen1View8moveDownEv>:

void Screen1View::moveDown()
{
 8003e04:	b513      	push	{r0, r1, r4, lr}
    uint8_t move = 'S';
    if (osMessageQueueGetCount(myQueue01Handle) < 5)
 8003e06:	4c09      	ldr	r4, [pc, #36]	@ (8003e2c <_ZN11Screen1View8moveDownEv+0x28>)
    uint8_t move = 'S';
 8003e08:	2353      	movs	r3, #83	@ 0x53
    if (osMessageQueueGetCount(myQueue01Handle) < 5)
 8003e0a:	6820      	ldr	r0, [r4, #0]
    uint8_t move = 'S';
 8003e0c:	f88d 3007 	strb.w	r3, [sp, #7]
    if (osMessageQueueGetCount(myQueue01Handle) < 5)
 8003e10:	f004 fab2 	bl	8008378 <osMessageQueueGetCount>
 8003e14:	2804      	cmp	r0, #4
 8003e16:	d806      	bhi.n	8003e26 <_ZN11Screen1View8moveDownEv+0x22>
    {
        osMessageQueuePut(myQueue01Handle, &move, 0, 10);
 8003e18:	6820      	ldr	r0, [r4, #0]
 8003e1a:	230a      	movs	r3, #10
 8003e1c:	2200      	movs	r2, #0
 8003e1e:	f10d 0107 	add.w	r1, sp, #7
 8003e22:	f004 fa48 	bl	80082b6 <osMessageQueuePut>
    }
}
 8003e26:	b002      	add	sp, #8
 8003e28:	bd10      	pop	{r4, pc}
 8003e2a:	bf00      	nop
 8003e2c:	20002388 	.word	0x20002388

08003e30 <_ZN11Screen1ViewD1Ev>:

class Screen1View : public Screen1ViewBase
{
public:
    Screen1View();
    virtual ~Screen1View() {}
 8003e30:	b510      	push	{r4, lr}
 8003e32:	4b03      	ldr	r3, [pc, #12]	@ (8003e40 <_ZN11Screen1ViewD1Ev+0x10>)
 8003e34:	6003      	str	r3, [r0, #0]
 8003e36:	4604      	mov	r4, r0
 8003e38:	f7ff fb87 	bl	800354a <_ZN15Screen1ViewBaseD1Ev>
 8003e3c:	4620      	mov	r0, r4
 8003e3e:	bd10      	pop	{r4, pc}
 8003e40:	08024eb4 	.word	0x08024eb4

08003e44 <_ZN11Screen1ViewD0Ev>:
 8003e44:	b510      	push	{r4, lr}
 8003e46:	4604      	mov	r4, r0
 8003e48:	f7ff fff2 	bl	8003e30 <_ZN11Screen1ViewD1Ev>
 8003e4c:	4620      	mov	r0, r4
 8003e4e:	f44f 7169 	mov.w	r1, #932	@ 0x3a4
 8003e52:	f01d ff68 	bl	8021d26 <_ZdlPvj>
 8003e56:	4620      	mov	r0, r4
 8003e58:	bd10      	pop	{r4, pc}
	...

08003e5c <_ZN11Screen1ViewC1Ev>:
Screen1View::Screen1View()
 8003e5c:	b510      	push	{r4, lr}
 8003e5e:	4604      	mov	r4, r0
 8003e60:	f7ff fc9c 	bl	800379c <_ZN15Screen1ViewBaseC1Ev>
 8003e64:	4b0a      	ldr	r3, [pc, #40]	@ (8003e90 <_ZN11Screen1ViewC1Ev+0x34>)
 8003e66:	6023      	str	r3, [r4, #0]
 8003e68:	f04f 33ff 	mov.w	r3, #4294967295
 8003e6c:	f8c4 334c 	str.w	r3, [r4, #844]	@ 0x34c
 8003e70:	2300      	movs	r3, #0
 8003e72:	f884 3350 	strb.w	r3, [r4, #848]	@ 0x350
        touchEffects[i].active = false;
 8003e76:	f884 335b 	strb.w	r3, [r4, #859]	@ 0x35b
 8003e7a:	f884 336b 	strb.w	r3, [r4, #875]	@ 0x36b
 8003e7e:	f884 337b 	strb.w	r3, [r4, #891]	@ 0x37b
 8003e82:	f884 338b 	strb.w	r3, [r4, #907]	@ 0x38b
 8003e86:	f884 339b 	strb.w	r3, [r4, #923]	@ 0x39b
}
 8003e8a:	4620      	mov	r0, r4
 8003e8c:	bd10      	pop	{r4, pc}
 8003e8e:	bf00      	nop
 8003e90:	08024eb4 	.word	0x08024eb4

08003e94 <_ZN11Screen1View14addTouchEffectEss>:
        invalidate();
    }
}

void Screen1View::addTouchEffect(int16_t x, int16_t y)
{
 8003e94:	b570      	push	{r4, r5, r6, lr}
 8003e96:	2300      	movs	r3, #0
    // Find an inactive effect slot
    for (uint8_t i = 0; i < MAX_TOUCH_EFFECTS; i++)
    {
        if (!touchEffects[i].active)
 8003e98:	f200 355b 	addw	r5, r0, #859	@ 0x35b
 8003e9c:	011c      	lsls	r4, r3, #4
 8003e9e:	5d2e      	ldrb	r6, [r5, r4]
 8003ea0:	b996      	cbnz	r6, 8003ec8 <_ZN11Screen1View14addTouchEffectEss+0x34>
        {
            touchEffects[i].x = x;
 8003ea2:	4404      	add	r4, r0
            touchEffects[i].y = y;
            touchEffects[i].radius = MAX_CIRCLE_RADIUS;
 8003ea4:	2332      	movs	r3, #50	@ 0x32
 8003ea6:	f8a4 3358 	strh.w	r3, [r4, #856]	@ 0x358
            touchEffects[i].startRadius = MAX_CIRCLE_RADIUS;
 8003eaa:	f8a4 335c 	strh.w	r3, [r4, #860]	@ 0x35c
            touchEffects[i].alpha = 255;
 8003eae:	f240 13ff 	movw	r3, #511	@ 0x1ff
            touchEffects[i].x = x;
 8003eb2:	f8a4 1354 	strh.w	r1, [r4, #852]	@ 0x354
            touchEffects[i].y = y;
 8003eb6:	f8a4 2356 	strh.w	r2, [r4, #854]	@ 0x356
            touchEffects[i].alpha = 255;
 8003eba:	f8a4 335a 	strh.w	r3, [r4, #858]	@ 0x35a
            touchEffects[i].active = true;
            touchEffects[i].startTime = HAL_GetTick();
 8003ebe:	f000 fc35 	bl	800472c <HAL_GetTick>
 8003ec2:	f8c4 0360 	str.w	r0, [r4, #864]	@ 0x360
            break;
        }
    }
}
 8003ec6:	bd70      	pop	{r4, r5, r6, pc}
    for (uint8_t i = 0; i < MAX_TOUCH_EFFECTS; i++)
 8003ec8:	3301      	adds	r3, #1
 8003eca:	2b05      	cmp	r3, #5
 8003ecc:	d1e6      	bne.n	8003e9c <_ZN11Screen1View14addTouchEffectEss+0x8>
 8003ece:	e7fa      	b.n	8003ec6 <_ZN11Screen1View14addTouchEffectEss+0x32>

08003ed0 <_ZN11Screen1View18updateTouchEffectsEv>:

void Screen1View::updateTouchEffects()
{
 8003ed0:	b510      	push	{r4, lr}
 8003ed2:	4604      	mov	r4, r0
    uint32_t currentTime = HAL_GetTick();
 8003ed4:	f000 fc2a 	bl	800472c <HAL_GetTick>
                touchEffects[i].active = false;
            }
            else
            {
                // Calculate animation progress (0.0 to 1.0)
                float progress = (float)elapsedTime / EFFECT_DURATION_MS;
 8003ed8:	eddf 6a1b 	vldr	s13, [pc, #108]	@ 8003f48 <_ZN11Screen1View18updateTouchEffectsEv+0x78>

                // Shrink circle to center (radius reduces to 0)
                touchEffects[i].radius = (uint16_t)(touchEffects[i].startRadius * (1.0f - progress));

                // Fade out (alpha reduces to 0)
                touchEffects[i].alpha = (uint8_t)(255 * (1.0f - progress));
 8003edc:	eddf 5a1b 	vldr	s11, [pc, #108]	@ 8003f4c <_ZN11Screen1View18updateTouchEffectsEv+0x7c>
 8003ee0:	4623      	mov	r3, r4
 8003ee2:	f104 0150 	add.w	r1, r4, #80	@ 0x50
                touchEffects[i].radius = (uint16_t)(touchEffects[i].startRadius * (1.0f - progress));
 8003ee6:	eeb7 6a00 	vmov.f32	s12, #112	@ 0x3f800000  1.0
                touchEffects[i].active = false;
 8003eea:	2400      	movs	r4, #0
        if (touchEffects[i].active)
 8003eec:	f893 235b 	ldrb.w	r2, [r3, #859]	@ 0x35b
 8003ef0:	b13a      	cbz	r2, 8003f02 <_ZN11Screen1View18updateTouchEffectsEv+0x32>
            uint32_t elapsedTime = currentTime - touchEffects[i].startTime;
 8003ef2:	f8d3 2360 	ldr.w	r2, [r3, #864]	@ 0x360
 8003ef6:	1a82      	subs	r2, r0, r2
            if (elapsedTime >= EFFECT_DURATION_MS)
 8003ef8:	f5b2 7f7a 	cmp.w	r2, #1000	@ 0x3e8
 8003efc:	d305      	bcc.n	8003f0a <_ZN11Screen1View18updateTouchEffectsEv+0x3a>
                touchEffects[i].active = false;
 8003efe:	f883 435b 	strb.w	r4, [r3, #859]	@ 0x35b
    for (uint8_t i = 0; i < MAX_TOUCH_EFFECTS; i++)
 8003f02:	3310      	adds	r3, #16
 8003f04:	428b      	cmp	r3, r1
 8003f06:	d1f1      	bne.n	8003eec <_ZN11Screen1View18updateTouchEffectsEv+0x1c>
            }
        }
    }
}
 8003f08:	bd10      	pop	{r4, pc}
                float progress = (float)elapsedTime / EFFECT_DURATION_MS;
 8003f0a:	ee07 2a90 	vmov	s15, r2
 8003f0e:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
                touchEffects[i].radius = (uint16_t)(touchEffects[i].startRadius * (1.0f - progress));
 8003f12:	f8b3 235c 	ldrh.w	r2, [r3, #860]	@ 0x35c
                float progress = (float)elapsedTime / EFFECT_DURATION_MS;
 8003f16:	eec7 7a26 	vdiv.f32	s15, s14, s13
                touchEffects[i].radius = (uint16_t)(touchEffects[i].startRadius * (1.0f - progress));
 8003f1a:	ee07 2a10 	vmov	s14, r2
 8003f1e:	ee76 7a67 	vsub.f32	s15, s12, s15
 8003f22:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8003f26:	ee27 7a27 	vmul.f32	s14, s14, s15
                touchEffects[i].alpha = (uint8_t)(255 * (1.0f - progress));
 8003f2a:	ee67 7aa5 	vmul.f32	s15, s15, s11
                touchEffects[i].radius = (uint16_t)(touchEffects[i].startRadius * (1.0f - progress));
 8003f2e:	eebc 7ac7 	vcvt.u32.f32	s14, s14
                touchEffects[i].alpha = (uint8_t)(255 * (1.0f - progress));
 8003f32:	eefc 7ae7 	vcvt.u32.f32	s15, s15
                touchEffects[i].radius = (uint16_t)(touchEffects[i].startRadius * (1.0f - progress));
 8003f36:	ee17 2a10 	vmov	r2, s14
 8003f3a:	f8a3 2358 	strh.w	r2, [r3, #856]	@ 0x358
                touchEffects[i].alpha = (uint8_t)(255 * (1.0f - progress));
 8003f3e:	ee17 2a90 	vmov	r2, s15
 8003f42:	f883 235a 	strb.w	r2, [r3, #858]	@ 0x35a
 8003f46:	e7dc      	b.n	8003f02 <_ZN11Screen1View18updateTouchEffectsEv+0x32>
 8003f48:	447a0000 	.word	0x447a0000
 8003f4c:	437f0000 	.word	0x437f0000

08003f50 <_ZN11Screen1View17sendMousePositionEss>:

void Screen1View::sendMousePosition(int16_t deltaX, int16_t deltaY)
{
 8003f50:	b507      	push	{r0, r1, r2, lr}
    mouseHID mouseReport = {0};
 8003f52:	2300      	movs	r3, #0
 8003f54:	9301      	str	r3, [sp, #4]

    // Clamp delta values to int8_t range
    if (deltaX > 127)
        deltaX = 127;
    if (deltaX < -128)
 8003f56:	f06f 037f 	mvn.w	r3, #127	@ 0x7f
    if (deltaY > 127)
        deltaY = 127;
    if (deltaY < -128)
        deltaY = -128;

    mouseReport.mouse_x = (int8_t)deltaX;
 8003f5a:	4299      	cmp	r1, r3
 8003f5c:	bfb8      	it	lt
 8003f5e:	4619      	movlt	r1, r3
 8003f60:	297f      	cmp	r1, #127	@ 0x7f
 8003f62:	bfa8      	it	ge
 8003f64:	217f      	movge	r1, #127	@ 0x7f
    mouseReport.mouse_y = (int8_t)deltaY;
 8003f66:	429a      	cmp	r2, r3
 8003f68:	bfb8      	it	lt
 8003f6a:	461a      	movlt	r2, r3
 8003f6c:	2a7f      	cmp	r2, #127	@ 0x7f
 8003f6e:	bfa8      	it	ge
 8003f70:	227f      	movge	r2, #127	@ 0x7f
 8003f72:	f88d 2006 	strb.w	r2, [sp, #6]
    mouseReport.button = 0;
    mouseReport.wheel = 0;

    // Send HID report
    USBD_HID_SendReport(&hUsbDeviceHS, (uint8_t *)&mouseReport, sizeof(mouseReport));
 8003f76:	2204      	movs	r2, #4
    mouseReport.mouse_x = (int8_t)deltaX;
 8003f78:	f88d 1005 	strb.w	r1, [sp, #5]
    USBD_HID_SendReport(&hUsbDeviceHS, (uint8_t *)&mouseReport, sizeof(mouseReport));
 8003f7c:	4803      	ldr	r0, [pc, #12]	@ (8003f8c <_ZN11Screen1View17sendMousePositionEss+0x3c>)
 8003f7e:	eb0d 0102 	add.w	r1, sp, r2
 8003f82:	f006 fe10 	bl	800aba6 <USBD_HID_SendReport>
}
 8003f86:	b003      	add	sp, #12
 8003f88:	f85d fb04 	ldr.w	pc, [sp], #4
 8003f8c:	200019ac 	.word	0x200019ac

08003f90 <_ZN11Screen1View14sendMouseClickEb>:

void Screen1View::sendMouseClick(bool leftClick)
{
 8003f90:	b507      	push	{r0, r1, r2, lr}
    mouseReport.mouse_x = 0;
    mouseReport.mouse_y = 0;
    mouseReport.wheel = 0;

    // Send HID report
    USBD_HID_SendReport(&hUsbDeviceHS, (uint8_t *)&mouseReport, sizeof(mouseReport));
 8003f92:	2204      	movs	r2, #4
    mouseHID mouseReport = {0};
 8003f94:	2300      	movs	r3, #0
    mouseReport.button = leftClick ? 1 : 0; // Left button bit
 8003f96:	f88d 1004 	strb.w	r1, [sp, #4]
    USBD_HID_SendReport(&hUsbDeviceHS, (uint8_t *)&mouseReport, sizeof(mouseReport));
 8003f9a:	4806      	ldr	r0, [pc, #24]	@ (8003fb4 <_ZN11Screen1View14sendMouseClickEb+0x24>)
    mouseHID mouseReport = {0};
 8003f9c:	f8ad 3005 	strh.w	r3, [sp, #5]
    USBD_HID_SendReport(&hUsbDeviceHS, (uint8_t *)&mouseReport, sizeof(mouseReport));
 8003fa0:	eb0d 0102 	add.w	r1, sp, r2
    mouseHID mouseReport = {0};
 8003fa4:	f88d 3007 	strb.w	r3, [sp, #7]
    USBD_HID_SendReport(&hUsbDeviceHS, (uint8_t *)&mouseReport, sizeof(mouseReport));
 8003fa8:	f006 fdfd 	bl	800aba6 <USBD_HID_SendReport>
}
 8003fac:	b003      	add	sp, #12
 8003fae:	f85d fb04 	ldr.w	pc, [sp], #4
 8003fb2:	bf00      	nop
 8003fb4:	200019ac 	.word	0x200019ac

08003fb8 <_ZN11Screen1View32calculateMouseMovementFromCenterEssRsS0_>:

void Screen1View::calculateMouseMovementFromCenter(int16_t touchX, int16_t touchY, int16_t &deltaX, int16_t &deltaY)
{
    // Tính khoảng cách từ điểm touch đến tâm màn hình
    int16_t distanceFromCenterX = touchX - SCREEN_CENTER_X;
    int16_t distanceFromCenterY = touchY - SCREEN_CENTER_Y;
 8003fb8:	3aa0      	subs	r2, #160	@ 0xa0
{
 8003fba:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    int16_t distanceFromCenterX = touchX - SCREEN_CENTER_X;
 8003fbc:	f1a1 0078 	sub.w	r0, r1, #120	@ 0x78
    int16_t distanceFromCenterY = touchY - SCREEN_CENTER_Y;
 8003fc0:	b216      	sxth	r6, r2

    // Tính khoảng cách tổng (radius)
    float distance = sqrt(distanceFromCenterX * distanceFromCenterX + distanceFromCenterY * distanceFromCenterY);
 8003fc2:	fb12 f202 	smulbb	r2, r2, r2
    int16_t distanceFromCenterX = touchX - SCREEN_CENTER_X;
 8003fc6:	b207      	sxth	r7, r0
    float distance = sqrt(distanceFromCenterX * distanceFromCenterX + distanceFromCenterY * distanceFromCenterY);
 8003fc8:	fb10 2000 	smlabb	r0, r0, r0, r2
{
 8003fcc:	461c      	mov	r4, r3
    float distance = sqrt(distanceFromCenterX * distanceFromCenterX + distanceFromCenterY * distanceFromCenterY);
 8003fce:	f7fc fab9 	bl	8000544 <__aeabi_i2d>
 8003fd2:	ec41 0b10 	vmov	d0, r0, r1
{
 8003fd6:	9d06      	ldr	r5, [sp, #24]
    float distance = sqrt(distanceFromCenterX * distanceFromCenterX + distanceFromCenterY * distanceFromCenterY);
 8003fd8:	f01d fecd 	bl	8021d76 <sqrt>
 8003fdc:	ec51 0b10 	vmov	r0, r1, d0
 8003fe0:	f7fc fdca 	bl	8000b78 <__aeabi_d2f>
 8003fe4:	ee07 0a10 	vmov	s14, r0

    // Nếu trong vùng chết (gần tâm) thì không di chuyển
    if (distance < DEAD_ZONE_RADIUS)
 8003fe8:	eef1 7a04 	vmov.f32	s15, #20	@ 0x40a00000  5.0
 8003fec:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8003ff0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8003ff4:	d503      	bpl.n	8003ffe <_ZN11Screen1View32calculateMouseMovementFromCenterEssRsS0_+0x46>
    {
        deltaX = 0;
 8003ff6:	2300      	movs	r3, #0
 8003ff8:	8023      	strh	r3, [r4, #0]
        deltaY = 0;
 8003ffa:	802b      	strh	r3, [r5, #0]
        deltaX = -128;
    if (deltaY > 127)
        deltaY = 127;
    if (deltaY < -128)
        deltaY = -128;
}
 8003ffc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    float movementScale = (distance / (SCREEN_WIDTH / 4)) * MOUSE_SENSITIVITY; // Chia 4 thay vì 2
 8003ffe:	eddf 6a26 	vldr	s13, [pc, #152]	@ 8004098 <_ZN11Screen1View32calculateMouseMovementFromCenterEssRsS0_+0xe0>
 8004002:	eec7 7a26 	vdiv.f32	s15, s14, s13
 8004006:	eef2 6a00 	vmov.f32	s13, #32	@ 0x41000000  8.0
 800400a:	ee67 7aa6 	vmul.f32	s15, s15, s13
    if (distance < 30)
 800400e:	eef3 6a0e 	vmov.f32	s13, #62	@ 0x41f00000  30.0
 8004012:	eeb4 7ae6 	vcmpe.f32	s14, s13
 8004016:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800401a:	d530      	bpl.n	800407e <_ZN11Screen1View32calculateMouseMovementFromCenterEssRsS0_+0xc6>
        movementScale *= 1.5f; // Boost 50% cho touch gần tâm
 800401c:	eef7 6a08 	vmov.f32	s13, #120	@ 0x3fc00000  1.5
 8004020:	ee67 7aa6 	vmul.f32	s15, s15, s13
    deltaX = (int16_t)(distanceFromCenterX * movementScale / distance);
 8004024:	ee06 7a90 	vmov	s13, r7
 8004028:	eef8 6ae6 	vcvt.f32.s32	s13, s13
    if (deltaX < -128)
 800402c:	f06f 027f 	mvn.w	r2, #127	@ 0x7f
    deltaX = (int16_t)(distanceFromCenterX * movementScale / distance);
 8004030:	ee66 6aa7 	vmul.f32	s13, s13, s15
 8004034:	ee86 6a87 	vdiv.f32	s12, s13, s14
    deltaY = (int16_t)(distanceFromCenterY * movementScale / distance);
 8004038:	ee06 6a90 	vmov	s13, r6
 800403c:	eef8 6ae6 	vcvt.f32.s32	s13, s13
    deltaX = (int16_t)(distanceFromCenterX * movementScale / distance);
 8004040:	eebd 6ac6 	vcvt.s32.f32	s12, s12
    deltaY = (int16_t)(distanceFromCenterY * movementScale / distance);
 8004044:	ee66 7aa7 	vmul.f32	s15, s13, s15
    deltaX = (int16_t)(distanceFromCenterX * movementScale / distance);
 8004048:	ee16 3a10 	vmov	r3, s12
    deltaY = (int16_t)(distanceFromCenterY * movementScale / distance);
 800404c:	eec7 6a87 	vdiv.f32	s13, s15, s14
    deltaX = (int16_t)(distanceFromCenterX * movementScale / distance);
 8004050:	8023      	strh	r3, [r4, #0]
    deltaY = (int16_t)(distanceFromCenterY * movementScale / distance);
 8004052:	eefd 6ae6 	vcvt.s32.f32	s13, s13
 8004056:	ee16 3a90 	vmov	r3, s13
 800405a:	802b      	strh	r3, [r5, #0]
    if (deltaX > 127)
 800405c:	f9b4 3000 	ldrsh.w	r3, [r4]
    if (deltaX < -128)
 8004060:	2b7f      	cmp	r3, #127	@ 0x7f
 8004062:	bfa8      	it	ge
 8004064:	237f      	movge	r3, #127	@ 0x7f
 8004066:	4293      	cmp	r3, r2
 8004068:	bfb8      	it	lt
 800406a:	4613      	movlt	r3, r2
 800406c:	8023      	strh	r3, [r4, #0]
    if (deltaY > 127)
 800406e:	f9b5 3000 	ldrsh.w	r3, [r5]
    if (deltaY < -128)
 8004072:	4293      	cmp	r3, r2
 8004074:	db0d      	blt.n	8004092 <_ZN11Screen1View32calculateMouseMovementFromCenterEssRsS0_+0xda>
    if (deltaY > 127)
 8004076:	2b7f      	cmp	r3, #127	@ 0x7f
 8004078:	bfa8      	it	ge
 800407a:	237f      	movge	r3, #127	@ 0x7f
 800407c:	e7bd      	b.n	8003ffa <_ZN11Screen1View32calculateMouseMovementFromCenterEssRsS0_+0x42>
    if (movementScale > 20.0f)
 800407e:	eef3 6a04 	vmov.f32	s13, #52	@ 0x41a00000  20.0
        movementScale = 20.0f;
 8004082:	eef4 7a66 	vcmp.f32	s15, s13
 8004086:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800408a:	bfc8      	it	gt
 800408c:	eef0 7a66 	vmovgt.f32	s15, s13
 8004090:	e7c8      	b.n	8004024 <_ZN11Screen1View32calculateMouseMovementFromCenterEssRsS0_+0x6c>
        deltaY = -128;
 8004092:	802a      	strh	r2, [r5, #0]
 8004094:	e7b2      	b.n	8003ffc <_ZN11Screen1View32calculateMouseMovementFromCenterEssRsS0_+0x44>
 8004096:	bf00      	nop
 8004098:	42700000 	.word	0x42700000

0800409c <_ZN11Screen1View16handleClickEventERKN8touchgfx10ClickEventE>:
{
 800409c:	b530      	push	{r4, r5, lr}
 800409e:	790b      	ldrb	r3, [r1, #4]
 80040a0:	b085      	sub	sp, #20
 80040a2:	4604      	mov	r4, r0
 80040a4:	460d      	mov	r5, r1
    if (evt.getType() == touchgfx::ClickEvent::PRESSED)
 80040a6:	bb4b      	cbnz	r3, 80040fc <_ZN11Screen1View16handleClickEventERKN8touchgfx10ClickEventE+0x60>
        addTouchEffect(evt.getX(), evt.getY());
 80040a8:	f9b1 2008 	ldrsh.w	r2, [r1, #8]
 80040ac:	f9b1 1006 	ldrsh.w	r1, [r1, #6]
 80040b0:	f7ff fef0 	bl	8003e94 <_ZN11Screen1View14addTouchEffectEss>
        calculateMouseMovementFromCenter(evt.getX(), evt.getY(), deltaX, deltaY);
 80040b4:	f10d 030e 	add.w	r3, sp, #14
 80040b8:	9300      	str	r3, [sp, #0]
 80040ba:	f9b5 2008 	ldrsh.w	r2, [r5, #8]
 80040be:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 80040c2:	ab03      	add	r3, sp, #12
 80040c4:	4620      	mov	r0, r4
 80040c6:	f7ff ff77 	bl	8003fb8 <_ZN11Screen1View32calculateMouseMovementFromCenterEssRsS0_>
        if (deltaX != 0 || deltaY != 0)
 80040ca:	f9bd 100c 	ldrsh.w	r1, [sp, #12]
 80040ce:	f9bd 200e 	ldrsh.w	r2, [sp, #14]
 80040d2:	ea51 0302 	orrs.w	r3, r1, r2
 80040d6:	d002      	beq.n	80040de <_ZN11Screen1View16handleClickEventERKN8touchgfx10ClickEventE+0x42>
            sendMousePosition(deltaX, deltaY);
 80040d8:	4620      	mov	r0, r4
 80040da:	f7ff ff39 	bl	8003f50 <_ZN11Screen1View17sendMousePositionEss>
        sendMouseClick(true);
 80040de:	2101      	movs	r1, #1
 80040e0:	4620      	mov	r0, r4
 80040e2:	f7ff ff55 	bl	8003f90 <_ZN11Screen1View14sendMouseClickEb>
        touchStartX = evt.getX();
 80040e6:	88eb      	ldrh	r3, [r5, #6]
 80040e8:	f8a4 334c 	strh.w	r3, [r4, #844]	@ 0x34c
        touchStartY = evt.getY();
 80040ec:	892b      	ldrh	r3, [r5, #8]
 80040ee:	f8a4 334e 	strh.w	r3, [r4, #846]	@ 0x34e
        dragging = false;
 80040f2:	2300      	movs	r3, #0
 80040f4:	f884 3350 	strb.w	r3, [r4, #848]	@ 0x350
}
 80040f8:	b005      	add	sp, #20
 80040fa:	bd30      	pop	{r4, r5, pc}
    else if (evt.getType() == touchgfx::ClickEvent::RELEASED)
 80040fc:	2b01      	cmp	r3, #1
 80040fe:	d1fb      	bne.n	80040f8 <_ZN11Screen1View16handleClickEventERKN8touchgfx10ClickEventE+0x5c>
        sendMouseClick(false);
 8004100:	2100      	movs	r1, #0
 8004102:	f7ff ff45 	bl	8003f90 <_ZN11Screen1View14sendMouseClickEb>
        touchStartX = -1;
 8004106:	f04f 33ff 	mov.w	r3, #4294967295
 800410a:	f8c4 334c 	str.w	r3, [r4, #844]	@ 0x34c
 800410e:	e7f0      	b.n	80040f2 <_ZN11Screen1View16handleClickEventERKN8touchgfx10ClickEventE+0x56>

08004110 <_ZN11Screen1View15handleDragEventERKN8touchgfx9DragEventE>:
{
 8004110:	b530      	push	{r4, r5, lr}
 8004112:	b085      	sub	sp, #20
    calculateMouseMovementFromCenter(evt.getNewX(), evt.getNewY(), deltaX, deltaY);
 8004114:	f10d 030e 	add.w	r3, sp, #14
 8004118:	9300      	str	r3, [sp, #0]
 800411a:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 800411e:	ab03      	add	r3, sp, #12
{
 8004120:	460d      	mov	r5, r1
    calculateMouseMovementFromCenter(evt.getNewX(), evt.getNewY(), deltaX, deltaY);
 8004122:	f9b1 100a 	ldrsh.w	r1, [r1, #10]
{
 8004126:	4604      	mov	r4, r0
    calculateMouseMovementFromCenter(evt.getNewX(), evt.getNewY(), deltaX, deltaY);
 8004128:	f7ff ff46 	bl	8003fb8 <_ZN11Screen1View32calculateMouseMovementFromCenterEssRsS0_>
    if (deltaX != 0 || deltaY != 0)
 800412c:	f9bd 100c 	ldrsh.w	r1, [sp, #12]
 8004130:	f9bd 200e 	ldrsh.w	r2, [sp, #14]
 8004134:	ea51 0302 	orrs.w	r3, r1, r2
 8004138:	d002      	beq.n	8004140 <_ZN11Screen1View15handleDragEventERKN8touchgfx9DragEventE+0x30>
        sendMousePosition(deltaX, deltaY);
 800413a:	4620      	mov	r0, r4
 800413c:	f7ff ff08 	bl	8003f50 <_ZN11Screen1View17sendMousePositionEss>
    touchStartX = evt.getNewX();
 8004140:	896b      	ldrh	r3, [r5, #10]
 8004142:	f8a4 334c 	strh.w	r3, [r4, #844]	@ 0x34c
    touchStartY = evt.getNewY();
 8004146:	89ab      	ldrh	r3, [r5, #12]
 8004148:	f8a4 334e 	strh.w	r3, [r4, #846]	@ 0x34e
    dragging = true;
 800414c:	2301      	movs	r3, #1
 800414e:	f884 3350 	strb.w	r3, [r4, #848]	@ 0x350
}
 8004152:	b005      	add	sp, #20
 8004154:	bd30      	pop	{r4, r5, pc}

08004156 <_ZN11Screen1View11setupScreenEv>:
    Screen1ViewBase::setupScreen();
 8004156:	f7ff b9f9 	b.w	800354c <_ZN15Screen1ViewBase11setupScreenEv>

0800415a <_ZN11Screen1View15handleTickEventEv>:
{
 800415a:	b510      	push	{r4, lr}
 800415c:	4604      	mov	r4, r0
    updateTouchEffects();
 800415e:	f7ff feb7 	bl	8003ed0 <_ZN11Screen1View18updateTouchEffectsEv>
    for (uint8_t i = 0; i < MAX_TOUCH_EFFECTS; i++)
 8004162:	4623      	mov	r3, r4
 8004164:	f104 0250 	add.w	r2, r4, #80	@ 0x50
        if (touchEffects[i].active)
 8004168:	f893 135b 	ldrb.w	r1, [r3, #859]	@ 0x35b
 800416c:	b919      	cbnz	r1, 8004176 <_ZN11Screen1View15handleTickEventEv+0x1c>
    for (uint8_t i = 0; i < MAX_TOUCH_EFFECTS; i++)
 800416e:	3310      	adds	r3, #16
 8004170:	4293      	cmp	r3, r2
 8004172:	d1f9      	bne.n	8004168 <_ZN11Screen1View15handleTickEventEv+0xe>
}
 8004174:	bd10      	pop	{r4, pc}
     *
     * @see Container::invalidate
     */
    void invalidate() const
    {
        container.invalidate();
 8004176:	1d20      	adds	r0, r4, #4
 8004178:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800417c:	f00c bd7c 	b.w	8010c78 <_ZNK8touchgfx8Drawable10invalidateEv>

08004180 <_ZN11Screen1View4drawERN8touchgfx4RectE>:
    Screen1ViewBase::draw(invalidatedArea);
 8004180:	f00d bd49 	b.w	8011c16 <_ZN8touchgfx6Screen4drawERNS_4RectE>

08004184 <ili9341_GetLcdPixelWidth>:
  */
uint16_t ili9341_GetLcdPixelWidth(void)
{
  /* Return LCD PIXEL WIDTH */
  return ILI9341_LCD_PIXEL_WIDTH;
}
 8004184:	20f0      	movs	r0, #240	@ 0xf0
 8004186:	4770      	bx	lr

08004188 <ili9341_GetLcdPixelHeight>:
  */
uint16_t ili9341_GetLcdPixelHeight(void)
{
  /* Return LCD PIXEL HEIGHT */
  return ILI9341_LCD_PIXEL_HEIGHT;
}
 8004188:	f44f 70a0 	mov.w	r0, #320	@ 0x140
 800418c:	4770      	bx	lr

0800418e <ili9341_DisplayOn>:
  LCD_IO_WriteReg(LCD_Reg);
 800418e:	2029      	movs	r0, #41	@ 0x29
 8004190:	f7fe bc6c 	b.w	8002a6c <LCD_IO_WriteReg>

08004194 <ili9341_DisplayOff>:
 8004194:	2028      	movs	r0, #40	@ 0x28
 8004196:	f7fe bc69 	b.w	8002a6c <LCD_IO_WriteReg>

0800419a <ili9341_Init>:
{
 800419a:	b508      	push	{r3, lr}
  LCD_IO_Init();
 800419c:	f7fe fc3a 	bl	8002a14 <LCD_IO_Init>
  LCD_IO_WriteReg(LCD_Reg);
 80041a0:	20ca      	movs	r0, #202	@ 0xca
 80041a2:	f7fe fc63 	bl	8002a6c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80041a6:	20c3      	movs	r0, #195	@ 0xc3
 80041a8:	f7fe fc44 	bl	8002a34 <LCD_IO_WriteData>
 80041ac:	2008      	movs	r0, #8
 80041ae:	f7fe fc41 	bl	8002a34 <LCD_IO_WriteData>
 80041b2:	2050      	movs	r0, #80	@ 0x50
 80041b4:	f7fe fc3e 	bl	8002a34 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80041b8:	20cf      	movs	r0, #207	@ 0xcf
 80041ba:	f7fe fc57 	bl	8002a6c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80041be:	2000      	movs	r0, #0
 80041c0:	f7fe fc38 	bl	8002a34 <LCD_IO_WriteData>
 80041c4:	20c1      	movs	r0, #193	@ 0xc1
 80041c6:	f7fe fc35 	bl	8002a34 <LCD_IO_WriteData>
 80041ca:	2030      	movs	r0, #48	@ 0x30
 80041cc:	f7fe fc32 	bl	8002a34 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80041d0:	20ed      	movs	r0, #237	@ 0xed
 80041d2:	f7fe fc4b 	bl	8002a6c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80041d6:	2064      	movs	r0, #100	@ 0x64
 80041d8:	f7fe fc2c 	bl	8002a34 <LCD_IO_WriteData>
 80041dc:	2003      	movs	r0, #3
 80041de:	f7fe fc29 	bl	8002a34 <LCD_IO_WriteData>
 80041e2:	2012      	movs	r0, #18
 80041e4:	f7fe fc26 	bl	8002a34 <LCD_IO_WriteData>
 80041e8:	2081      	movs	r0, #129	@ 0x81
 80041ea:	f7fe fc23 	bl	8002a34 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80041ee:	20e8      	movs	r0, #232	@ 0xe8
 80041f0:	f7fe fc3c 	bl	8002a6c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80041f4:	2085      	movs	r0, #133	@ 0x85
 80041f6:	f7fe fc1d 	bl	8002a34 <LCD_IO_WriteData>
 80041fa:	2000      	movs	r0, #0
 80041fc:	f7fe fc1a 	bl	8002a34 <LCD_IO_WriteData>
 8004200:	2078      	movs	r0, #120	@ 0x78
 8004202:	f7fe fc17 	bl	8002a34 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8004206:	20cb      	movs	r0, #203	@ 0xcb
 8004208:	f7fe fc30 	bl	8002a6c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800420c:	2039      	movs	r0, #57	@ 0x39
 800420e:	f7fe fc11 	bl	8002a34 <LCD_IO_WriteData>
 8004212:	202c      	movs	r0, #44	@ 0x2c
 8004214:	f7fe fc0e 	bl	8002a34 <LCD_IO_WriteData>
 8004218:	2000      	movs	r0, #0
 800421a:	f7fe fc0b 	bl	8002a34 <LCD_IO_WriteData>
 800421e:	2034      	movs	r0, #52	@ 0x34
 8004220:	f7fe fc08 	bl	8002a34 <LCD_IO_WriteData>
 8004224:	2002      	movs	r0, #2
 8004226:	f7fe fc05 	bl	8002a34 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800422a:	20f7      	movs	r0, #247	@ 0xf7
 800422c:	f7fe fc1e 	bl	8002a6c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8004230:	2020      	movs	r0, #32
 8004232:	f7fe fbff 	bl	8002a34 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8004236:	20ea      	movs	r0, #234	@ 0xea
 8004238:	f7fe fc18 	bl	8002a6c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800423c:	2000      	movs	r0, #0
 800423e:	f7fe fbf9 	bl	8002a34 <LCD_IO_WriteData>
 8004242:	2000      	movs	r0, #0
 8004244:	f7fe fbf6 	bl	8002a34 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8004248:	20b1      	movs	r0, #177	@ 0xb1
 800424a:	f7fe fc0f 	bl	8002a6c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800424e:	2000      	movs	r0, #0
 8004250:	f7fe fbf0 	bl	8002a34 <LCD_IO_WriteData>
 8004254:	201b      	movs	r0, #27
 8004256:	f7fe fbed 	bl	8002a34 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800425a:	20b6      	movs	r0, #182	@ 0xb6
 800425c:	f7fe fc06 	bl	8002a6c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8004260:	200a      	movs	r0, #10
 8004262:	f7fe fbe7 	bl	8002a34 <LCD_IO_WriteData>
 8004266:	20a2      	movs	r0, #162	@ 0xa2
 8004268:	f7fe fbe4 	bl	8002a34 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800426c:	20c0      	movs	r0, #192	@ 0xc0
 800426e:	f7fe fbfd 	bl	8002a6c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8004272:	2010      	movs	r0, #16
 8004274:	f7fe fbde 	bl	8002a34 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8004278:	20c1      	movs	r0, #193	@ 0xc1
 800427a:	f7fe fbf7 	bl	8002a6c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800427e:	2010      	movs	r0, #16
 8004280:	f7fe fbd8 	bl	8002a34 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8004284:	20c5      	movs	r0, #197	@ 0xc5
 8004286:	f7fe fbf1 	bl	8002a6c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800428a:	2045      	movs	r0, #69	@ 0x45
 800428c:	f7fe fbd2 	bl	8002a34 <LCD_IO_WriteData>
 8004290:	2015      	movs	r0, #21
 8004292:	f7fe fbcf 	bl	8002a34 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8004296:	20c7      	movs	r0, #199	@ 0xc7
 8004298:	f7fe fbe8 	bl	8002a6c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800429c:	2090      	movs	r0, #144	@ 0x90
 800429e:	f7fe fbc9 	bl	8002a34 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80042a2:	2036      	movs	r0, #54	@ 0x36
 80042a4:	f7fe fbe2 	bl	8002a6c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80042a8:	20c8      	movs	r0, #200	@ 0xc8
 80042aa:	f7fe fbc3 	bl	8002a34 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80042ae:	20f2      	movs	r0, #242	@ 0xf2
 80042b0:	f7fe fbdc 	bl	8002a6c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80042b4:	2000      	movs	r0, #0
 80042b6:	f7fe fbbd 	bl	8002a34 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80042ba:	20b0      	movs	r0, #176	@ 0xb0
 80042bc:	f7fe fbd6 	bl	8002a6c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80042c0:	20c2      	movs	r0, #194	@ 0xc2
 80042c2:	f7fe fbb7 	bl	8002a34 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80042c6:	20b6      	movs	r0, #182	@ 0xb6
 80042c8:	f7fe fbd0 	bl	8002a6c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80042cc:	200a      	movs	r0, #10
 80042ce:	f7fe fbb1 	bl	8002a34 <LCD_IO_WriteData>
 80042d2:	20a7      	movs	r0, #167	@ 0xa7
 80042d4:	f7fe fbae 	bl	8002a34 <LCD_IO_WriteData>
 80042d8:	2027      	movs	r0, #39	@ 0x27
 80042da:	f7fe fbab 	bl	8002a34 <LCD_IO_WriteData>
 80042de:	2004      	movs	r0, #4
 80042e0:	f7fe fba8 	bl	8002a34 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80042e4:	202a      	movs	r0, #42	@ 0x2a
 80042e6:	f7fe fbc1 	bl	8002a6c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80042ea:	2000      	movs	r0, #0
 80042ec:	f7fe fba2 	bl	8002a34 <LCD_IO_WriteData>
 80042f0:	2000      	movs	r0, #0
 80042f2:	f7fe fb9f 	bl	8002a34 <LCD_IO_WriteData>
 80042f6:	2000      	movs	r0, #0
 80042f8:	f7fe fb9c 	bl	8002a34 <LCD_IO_WriteData>
 80042fc:	20ef      	movs	r0, #239	@ 0xef
 80042fe:	f7fe fb99 	bl	8002a34 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8004302:	202b      	movs	r0, #43	@ 0x2b
 8004304:	f7fe fbb2 	bl	8002a6c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8004308:	2000      	movs	r0, #0
 800430a:	f7fe fb93 	bl	8002a34 <LCD_IO_WriteData>
 800430e:	2000      	movs	r0, #0
 8004310:	f7fe fb90 	bl	8002a34 <LCD_IO_WriteData>
 8004314:	2001      	movs	r0, #1
 8004316:	f7fe fb8d 	bl	8002a34 <LCD_IO_WriteData>
 800431a:	203f      	movs	r0, #63	@ 0x3f
 800431c:	f7fe fb8a 	bl	8002a34 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8004320:	20f6      	movs	r0, #246	@ 0xf6
 8004322:	f7fe fba3 	bl	8002a6c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8004326:	2001      	movs	r0, #1
 8004328:	f7fe fb84 	bl	8002a34 <LCD_IO_WriteData>
 800432c:	2000      	movs	r0, #0
 800432e:	f7fe fb81 	bl	8002a34 <LCD_IO_WriteData>
 8004332:	2006      	movs	r0, #6
 8004334:	f7fe fb7e 	bl	8002a34 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8004338:	202c      	movs	r0, #44	@ 0x2c
 800433a:	f7fe fb97 	bl	8002a6c <LCD_IO_WriteReg>
  LCD_Delay(200);
 800433e:	20c8      	movs	r0, #200	@ 0xc8
 8004340:	f7fe fbe2 	bl	8002b08 <LCD_Delay>
  LCD_IO_WriteReg(LCD_Reg);
 8004344:	2026      	movs	r0, #38	@ 0x26
 8004346:	f7fe fb91 	bl	8002a6c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800434a:	2001      	movs	r0, #1
 800434c:	f7fe fb72 	bl	8002a34 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8004350:	20e0      	movs	r0, #224	@ 0xe0
 8004352:	f7fe fb8b 	bl	8002a6c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8004356:	200f      	movs	r0, #15
 8004358:	f7fe fb6c 	bl	8002a34 <LCD_IO_WriteData>
 800435c:	2029      	movs	r0, #41	@ 0x29
 800435e:	f7fe fb69 	bl	8002a34 <LCD_IO_WriteData>
 8004362:	2024      	movs	r0, #36	@ 0x24
 8004364:	f7fe fb66 	bl	8002a34 <LCD_IO_WriteData>
 8004368:	200c      	movs	r0, #12
 800436a:	f7fe fb63 	bl	8002a34 <LCD_IO_WriteData>
 800436e:	200e      	movs	r0, #14
 8004370:	f7fe fb60 	bl	8002a34 <LCD_IO_WriteData>
 8004374:	2009      	movs	r0, #9
 8004376:	f7fe fb5d 	bl	8002a34 <LCD_IO_WriteData>
 800437a:	204e      	movs	r0, #78	@ 0x4e
 800437c:	f7fe fb5a 	bl	8002a34 <LCD_IO_WriteData>
 8004380:	2078      	movs	r0, #120	@ 0x78
 8004382:	f7fe fb57 	bl	8002a34 <LCD_IO_WriteData>
 8004386:	203c      	movs	r0, #60	@ 0x3c
 8004388:	f7fe fb54 	bl	8002a34 <LCD_IO_WriteData>
 800438c:	2009      	movs	r0, #9
 800438e:	f7fe fb51 	bl	8002a34 <LCD_IO_WriteData>
 8004392:	2013      	movs	r0, #19
 8004394:	f7fe fb4e 	bl	8002a34 <LCD_IO_WriteData>
 8004398:	2005      	movs	r0, #5
 800439a:	f7fe fb4b 	bl	8002a34 <LCD_IO_WriteData>
 800439e:	2017      	movs	r0, #23
 80043a0:	f7fe fb48 	bl	8002a34 <LCD_IO_WriteData>
 80043a4:	2011      	movs	r0, #17
 80043a6:	f7fe fb45 	bl	8002a34 <LCD_IO_WriteData>
 80043aa:	2000      	movs	r0, #0
 80043ac:	f7fe fb42 	bl	8002a34 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80043b0:	20e1      	movs	r0, #225	@ 0xe1
 80043b2:	f7fe fb5b 	bl	8002a6c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80043b6:	2000      	movs	r0, #0
 80043b8:	f7fe fb3c 	bl	8002a34 <LCD_IO_WriteData>
 80043bc:	2016      	movs	r0, #22
 80043be:	f7fe fb39 	bl	8002a34 <LCD_IO_WriteData>
 80043c2:	201b      	movs	r0, #27
 80043c4:	f7fe fb36 	bl	8002a34 <LCD_IO_WriteData>
 80043c8:	2004      	movs	r0, #4
 80043ca:	f7fe fb33 	bl	8002a34 <LCD_IO_WriteData>
 80043ce:	2011      	movs	r0, #17
 80043d0:	f7fe fb30 	bl	8002a34 <LCD_IO_WriteData>
 80043d4:	2007      	movs	r0, #7
 80043d6:	f7fe fb2d 	bl	8002a34 <LCD_IO_WriteData>
 80043da:	2031      	movs	r0, #49	@ 0x31
 80043dc:	f7fe fb2a 	bl	8002a34 <LCD_IO_WriteData>
 80043e0:	2033      	movs	r0, #51	@ 0x33
 80043e2:	f7fe fb27 	bl	8002a34 <LCD_IO_WriteData>
 80043e6:	2042      	movs	r0, #66	@ 0x42
 80043e8:	f7fe fb24 	bl	8002a34 <LCD_IO_WriteData>
 80043ec:	2005      	movs	r0, #5
 80043ee:	f7fe fb21 	bl	8002a34 <LCD_IO_WriteData>
 80043f2:	200c      	movs	r0, #12
 80043f4:	f7fe fb1e 	bl	8002a34 <LCD_IO_WriteData>
 80043f8:	200a      	movs	r0, #10
 80043fa:	f7fe fb1b 	bl	8002a34 <LCD_IO_WriteData>
 80043fe:	2028      	movs	r0, #40	@ 0x28
 8004400:	f7fe fb18 	bl	8002a34 <LCD_IO_WriteData>
 8004404:	202f      	movs	r0, #47	@ 0x2f
 8004406:	f7fe fb15 	bl	8002a34 <LCD_IO_WriteData>
 800440a:	200f      	movs	r0, #15
 800440c:	f7fe fb12 	bl	8002a34 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8004410:	2011      	movs	r0, #17
 8004412:	f7fe fb2b 	bl	8002a6c <LCD_IO_WriteReg>
  LCD_Delay(200);
 8004416:	20c8      	movs	r0, #200	@ 0xc8
 8004418:	f7fe fb76 	bl	8002b08 <LCD_Delay>
  LCD_IO_WriteReg(LCD_Reg);
 800441c:	2029      	movs	r0, #41	@ 0x29
 800441e:	f7fe fb25 	bl	8002a6c <LCD_IO_WriteReg>
}
 8004422:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  LCD_IO_WriteReg(LCD_Reg);
 8004426:	202c      	movs	r0, #44	@ 0x2c
 8004428:	f7fe bb20 	b.w	8002a6c <LCD_IO_WriteReg>

0800442c <ili9341_ReadID>:
{
 800442c:	b508      	push	{r3, lr}
  LCD_IO_Init();
 800442e:	f7fe faf1 	bl	8002a14 <LCD_IO_Init>
  return (LCD_IO_ReadData(RegValue, ReadSize));
 8004432:	2103      	movs	r1, #3
 8004434:	20d3      	movs	r0, #211	@ 0xd3
 8004436:	f7fe fb35 	bl	8002aa4 <LCD_IO_ReadData>
}
 800443a:	b280      	uxth	r0, r0
 800443c:	bd08      	pop	{r3, pc}

0800443e <stmpe811_Reset>:
  * @brief  Reset the stmpe811 by Software.
  * @param  DeviceAddr: Device address on communication Bus.  
  * @retval None
  */
void stmpe811_Reset(uint16_t DeviceAddr)
{
 800443e:	b510      	push	{r4, lr}
  /* Power Down the stmpe811 */  
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 2);
 8004440:	b2c4      	uxtb	r4, r0
 8004442:	2202      	movs	r2, #2
 8004444:	2103      	movs	r1, #3
 8004446:	4620      	mov	r0, r4
 8004448:	f7fe fa9a 	bl	8002980 <IOE_Write>

  /* Wait for a delay to ensure registers erasing */
  IOE_Delay(10); 
 800444c:	200a      	movs	r0, #10
 800444e:	f7fe fadf 	bl	8002a10 <IOE_Delay>
  
  /* Power On the Codec after the power off => all registers are reinitialized */
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 0);
 8004452:	4620      	mov	r0, r4
 8004454:	2200      	movs	r2, #0
 8004456:	2103      	movs	r1, #3
 8004458:	f7fe fa92 	bl	8002980 <IOE_Write>
  
  /* Wait for a delay to ensure registers erasing */
  IOE_Delay(2); 
}
 800445c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Delay(2); 
 8004460:	2002      	movs	r0, #2
 8004462:	f7fe bad5 	b.w	8002a10 <IOE_Delay>

08004466 <stmpe811_ReadID>:
  * @brief  Read the stmpe811 IO Expander device ID.
  * @param  DeviceAddr: Device address on communication Bus.  
  * @retval The Device ID (two bytes).
  */
uint16_t stmpe811_ReadID(uint16_t DeviceAddr)
{
 8004466:	b538      	push	{r3, r4, r5, lr}
 8004468:	4604      	mov	r4, r0
  /* Initialize IO BUS layer */
  IOE_Init(); 
  
  /* Return the device ID value */
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 800446a:	b2e4      	uxtb	r4, r4
  IOE_Init(); 
 800446c:	f7fe fa86 	bl	800297c <IOE_Init>
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8004470:	2100      	movs	r1, #0
 8004472:	4620      	mov	r0, r4
 8004474:	f7fe fa9c 	bl	80029b0 <IOE_Read>
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 8004478:	2101      	movs	r1, #1
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 800447a:	4605      	mov	r5, r0
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 800447c:	4620      	mov	r0, r4
 800447e:	f7fe fa97 	bl	80029b0 <IOE_Read>
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8004482:	ea40 2005 	orr.w	r0, r0, r5, lsl #8
}
 8004486:	b280      	uxth	r0, r0
 8004488:	bd38      	pop	{r3, r4, r5, pc}

0800448a <stmpe811_TS_DetectTouch>:
  * @brief  Return if there is touch detected or not.
  * @param  DeviceAddr: Device address on communication Bus.
  * @retval Touch detected state.
  */
uint8_t stmpe811_TS_DetectTouch(uint16_t DeviceAddr)
{
 800448a:	b510      	push	{r4, lr}
  uint8_t state;
  uint8_t ret = 0;
  
  state = ((IOE_Read(DeviceAddr, STMPE811_REG_TSC_CTRL) & (uint8_t)STMPE811_TS_CTRL_STATUS) == (uint8_t)0x80);
 800448c:	b2c4      	uxtb	r4, r0
 800448e:	2140      	movs	r1, #64	@ 0x40
 8004490:	4620      	mov	r0, r4
 8004492:	f7fe fa8d 	bl	80029b0 <IOE_Read>
  
  if(state > 0)
 8004496:	0603      	lsls	r3, r0, #24
 8004498:	d507      	bpl.n	80044aa <stmpe811_TS_DetectTouch+0x20>
  {
    if(IOE_Read(DeviceAddr, STMPE811_REG_FIFO_SIZE) > 0)
 800449a:	214c      	movs	r1, #76	@ 0x4c
 800449c:	4620      	mov	r0, r4
 800449e:	f7fe fa87 	bl	80029b0 <IOE_Read>
 80044a2:	3800      	subs	r0, #0
 80044a4:	bf18      	it	ne
 80044a6:	2001      	movne	r0, #1
    /* Enable the FIFO again */
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
  }
  
  return ret;
}
 80044a8:	bd10      	pop	{r4, pc}
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 80044aa:	2201      	movs	r2, #1
 80044ac:	214b      	movs	r1, #75	@ 0x4b
 80044ae:	4620      	mov	r0, r4
 80044b0:	f7fe fa66 	bl	8002980 <IOE_Write>
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 80044b4:	4620      	mov	r0, r4
 80044b6:	2200      	movs	r2, #0
 80044b8:	214b      	movs	r1, #75	@ 0x4b
 80044ba:	f7fe fa61 	bl	8002980 <IOE_Write>
  uint8_t ret = 0;
 80044be:	2000      	movs	r0, #0
 80044c0:	e7f2      	b.n	80044a8 <stmpe811_TS_DetectTouch+0x1e>

080044c2 <stmpe811_TS_GetXY>:
  * @param  X: Pointer to X position value
  * @param  Y: Pointer to Y position value   
  * @retval None.
  */
void stmpe811_TS_GetXY(uint16_t DeviceAddr, uint16_t *X, uint16_t *Y)
{
 80044c2:	b573      	push	{r0, r1, r4, r5, r6, lr}
  uint8_t  dataXYZ[4];
  uint32_t uldataXYZ;
  
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 80044c4:	2304      	movs	r3, #4
 80044c6:	b2c4      	uxtb	r4, r0
{
 80044c8:	460e      	mov	r6, r1
 80044ca:	4615      	mov	r5, r2
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 80044cc:	21d7      	movs	r1, #215	@ 0xd7
 80044ce:	eb0d 0203 	add.w	r2, sp, r3
 80044d2:	4620      	mov	r0, r4
 80044d4:	f7fe fa86 	bl	80029e4 <IOE_ReadMultiple>
  
  /* Calculate positions values */
  uldataXYZ = (dataXYZ[0] << 24)|(dataXYZ[1] << 16)|(dataXYZ[2] << 8)|(dataXYZ[3] << 0);     
 80044d8:	9b01      	ldr	r3, [sp, #4]
 80044da:	ba1b      	rev	r3, r3
  *X = (uldataXYZ >> 20) & 0x00000FFF;     
 80044dc:	0d1a      	lsrs	r2, r3, #20
  *Y = (uldataXYZ >>  8) & 0x00000FFF;     
 80044de:	f3c3 230b 	ubfx	r3, r3, #8, #12
  *X = (uldataXYZ >> 20) & 0x00000FFF;     
 80044e2:	8032      	strh	r2, [r6, #0]
  
  /* Reset FIFO */
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 80044e4:	4620      	mov	r0, r4
  *Y = (uldataXYZ >>  8) & 0x00000FFF;     
 80044e6:	802b      	strh	r3, [r5, #0]
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 80044e8:	2201      	movs	r2, #1
 80044ea:	214b      	movs	r1, #75	@ 0x4b
 80044ec:	f7fe fa48 	bl	8002980 <IOE_Write>
  /* Enable the FIFO again */
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 80044f0:	2200      	movs	r2, #0
 80044f2:	214b      	movs	r1, #75	@ 0x4b
 80044f4:	4620      	mov	r0, r4
 80044f6:	f7fe fa43 	bl	8002980 <IOE_Write>
}
 80044fa:	b002      	add	sp, #8
 80044fc:	bd70      	pop	{r4, r5, r6, pc}
	...

08004500 <stmpe811_Init>:
{
 8004500:	b510      	push	{r4, lr}
  uint8_t idx = 0;
  
  /* Check all the registered instances */
  for(idx = 0; idx < STMPE811_MAX_INSTANCE ; idx ++)
  {
    if(stmpe811[idx] == DeviceAddr)
 8004502:	4a0a      	ldr	r2, [pc, #40]	@ (800452c <stmpe811_Init+0x2c>)
 8004504:	7813      	ldrb	r3, [r2, #0]
 8004506:	4298      	cmp	r0, r3
{
 8004508:	4604      	mov	r4, r0
    if(stmpe811[idx] == DeviceAddr)
 800450a:	d00d      	beq.n	8004528 <stmpe811_Init+0x28>
 800450c:	7851      	ldrb	r1, [r2, #1]
 800450e:	4288      	cmp	r0, r1
 8004510:	d00a      	beq.n	8004528 <stmpe811_Init+0x28>
 8004512:	b10b      	cbz	r3, 8004518 <stmpe811_Init+0x18>
 8004514:	b941      	cbnz	r1, 8004528 <stmpe811_Init+0x28>
  for(idx = 0; idx < STMPE811_MAX_INSTANCE ; idx ++)
 8004516:	2301      	movs	r3, #1
      stmpe811[empty] = DeviceAddr;
 8004518:	54d4      	strb	r4, [r2, r3]
      IOE_Init(); 
 800451a:	f7fe fa2f 	bl	800297c <IOE_Init>
      stmpe811_Reset(DeviceAddr);
 800451e:	4620      	mov	r0, r4
}
 8004520:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
      stmpe811_Reset(DeviceAddr);
 8004524:	f7ff bf8b 	b.w	800443e <stmpe811_Reset>
}
 8004528:	bd10      	pop	{r4, pc}
 800452a:	bf00      	nop
 800452c:	20002668 	.word	0x20002668

08004530 <stmpe811_EnableGlobalIT>:
{
 8004530:	b510      	push	{r4, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_CTRL);
 8004532:	b2c4      	uxtb	r4, r0
 8004534:	2109      	movs	r1, #9
 8004536:	4620      	mov	r0, r4
 8004538:	f7fe fa3a 	bl	80029b0 <IOE_Read>
  tmp |= (uint8_t)STMPE811_GIT_EN;
 800453c:	f040 0201 	orr.w	r2, r0, #1
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp); 
 8004540:	b2d2      	uxtb	r2, r2
 8004542:	4620      	mov	r0, r4
 8004544:	2109      	movs	r1, #9
}
 8004546:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp); 
 800454a:	f7fe ba19 	b.w	8002980 <IOE_Write>

0800454e <stmpe811_DisableGlobalIT>:
{
 800454e:	b510      	push	{r4, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_CTRL);
 8004550:	b2c4      	uxtb	r4, r0
 8004552:	2109      	movs	r1, #9
 8004554:	4620      	mov	r0, r4
 8004556:	f7fe fa2b 	bl	80029b0 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp);
 800455a:	2109      	movs	r1, #9
 800455c:	f000 02fe 	and.w	r2, r0, #254	@ 0xfe
 8004560:	4620      	mov	r0, r4
}
 8004562:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp);
 8004566:	f7fe ba0b 	b.w	8002980 <IOE_Write>

0800456a <stmpe811_EnableITSource>:
{
 800456a:	b538      	push	{r3, r4, r5, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 800456c:	b2c4      	uxtb	r4, r0
{
 800456e:	460d      	mov	r5, r1
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 8004570:	4620      	mov	r0, r4
 8004572:	210a      	movs	r1, #10
 8004574:	f7fe fa1c 	bl	80029b0 <IOE_Read>
  tmp |= Source; 
 8004578:	ea40 0205 	orr.w	r2, r0, r5
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 800457c:	b2d2      	uxtb	r2, r2
 800457e:	4620      	mov	r0, r4
 8004580:	210a      	movs	r1, #10
}
 8004582:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 8004586:	f7fe b9fb 	b.w	8002980 <IOE_Write>

0800458a <stmpe811_TS_EnableIT>:
{
 800458a:	b510      	push	{r4, lr}
 800458c:	4604      	mov	r4, r0
  IOE_ITConfig();
 800458e:	f7fe f9f6 	bl	800297e <IOE_ITConfig>
  stmpe811_EnableITSource(DeviceAddr, STMPE811_TS_IT); 
 8004592:	4620      	mov	r0, r4
 8004594:	211f      	movs	r1, #31
 8004596:	f7ff ffe8 	bl	800456a <stmpe811_EnableITSource>
  stmpe811_EnableGlobalIT(DeviceAddr);
 800459a:	4620      	mov	r0, r4
}
 800459c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  stmpe811_EnableGlobalIT(DeviceAddr);
 80045a0:	f7ff bfc6 	b.w	8004530 <stmpe811_EnableGlobalIT>

080045a4 <stmpe811_DisableITSource>:
{
 80045a4:	b538      	push	{r3, r4, r5, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 80045a6:	b2c4      	uxtb	r4, r0
{
 80045a8:	460d      	mov	r5, r1
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 80045aa:	4620      	mov	r0, r4
 80045ac:	210a      	movs	r1, #10
 80045ae:	f7fe f9ff 	bl	80029b0 <IOE_Read>
  tmp &= ~Source; 
 80045b2:	ea20 0205 	bic.w	r2, r0, r5
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 80045b6:	b2d2      	uxtb	r2, r2
 80045b8:	4620      	mov	r0, r4
 80045ba:	210a      	movs	r1, #10
}
 80045bc:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 80045c0:	f7fe b9de 	b.w	8002980 <IOE_Write>

080045c4 <stmpe811_TS_DisableIT>:
{
 80045c4:	b510      	push	{r4, lr}
 80045c6:	4604      	mov	r4, r0
  stmpe811_DisableGlobalIT(DeviceAddr);
 80045c8:	f7ff ffc1 	bl	800454e <stmpe811_DisableGlobalIT>
  stmpe811_DisableITSource(DeviceAddr, STMPE811_TS_IT); 
 80045cc:	4620      	mov	r0, r4
 80045ce:	211f      	movs	r1, #31
}
 80045d0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  stmpe811_DisableITSource(DeviceAddr, STMPE811_TS_IT); 
 80045d4:	f7ff bfe6 	b.w	80045a4 <stmpe811_DisableITSource>

080045d8 <stmpe811_ReadGITStatus>:
{
 80045d8:	b510      	push	{r4, lr}
  return((IOE_Read(DeviceAddr, STMPE811_REG_INT_STA) & Source));
 80045da:	b2c0      	uxtb	r0, r0
{
 80045dc:	460c      	mov	r4, r1
  return((IOE_Read(DeviceAddr, STMPE811_REG_INT_STA) & Source));
 80045de:	210b      	movs	r1, #11
 80045e0:	f7fe f9e6 	bl	80029b0 <IOE_Read>
}
 80045e4:	4020      	ands	r0, r4
 80045e6:	bd10      	pop	{r4, pc}

080045e8 <stmpe811_TS_ITStatus>:
  return(stmpe811_ReadGITStatus(DeviceAddr, STMPE811_TS_IT));
 80045e8:	211f      	movs	r1, #31
 80045ea:	f7ff bff5 	b.w	80045d8 <stmpe811_ReadGITStatus>

080045ee <stmpe811_ClearGlobalIT>:
{
 80045ee:	460a      	mov	r2, r1
  IOE_Write(DeviceAddr, STMPE811_REG_INT_STA, Source);
 80045f0:	b2c0      	uxtb	r0, r0
 80045f2:	210b      	movs	r1, #11
 80045f4:	f7fe b9c4 	b.w	8002980 <IOE_Write>

080045f8 <stmpe811_TS_ClearIT>:
  stmpe811_ClearGlobalIT(DeviceAddr, STMPE811_TS_IT);
 80045f8:	211f      	movs	r1, #31
 80045fa:	f7ff bff8 	b.w	80045ee <stmpe811_ClearGlobalIT>

080045fe <stmpe811_IO_EnableAF>:
{
 80045fe:	b538      	push	{r3, r4, r5, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_IO_AF);
 8004600:	b2c4      	uxtb	r4, r0
{
 8004602:	460d      	mov	r5, r1
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_IO_AF);
 8004604:	4620      	mov	r0, r4
 8004606:	2117      	movs	r1, #23
 8004608:	f7fe f9d2 	bl	80029b0 <IOE_Read>
  tmp &= ~(uint8_t)IO_Pin;   
 800460c:	ea20 0205 	bic.w	r2, r0, r5
  IOE_Write(DeviceAddr, STMPE811_REG_IO_AF, tmp); 
 8004610:	b2d2      	uxtb	r2, r2
 8004612:	4620      	mov	r0, r4
 8004614:	2117      	movs	r1, #23
}
 8004616:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_IO_AF, tmp); 
 800461a:	f7fe b9b1 	b.w	8002980 <IOE_Write>

0800461e <stmpe811_TS_Start>:
{
 800461e:	b570      	push	{r4, r5, r6, lr}
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 8004620:	b2c4      	uxtb	r4, r0
{
 8004622:	4606      	mov	r6, r0
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 8004624:	2104      	movs	r1, #4
 8004626:	4620      	mov	r0, r4
 8004628:	f7fe f9c2 	bl	80029b0 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 800462c:	2104      	movs	r1, #4
 800462e:	f000 02fb 	and.w	r2, r0, #251	@ 0xfb
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 8004632:	4605      	mov	r5, r0
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 8004634:	4620      	mov	r0, r4
 8004636:	f7fe f9a3 	bl	8002980 <IOE_Write>
  stmpe811_IO_EnableAF(DeviceAddr, STMPE811_TOUCH_IO_ALL);
 800463a:	4630      	mov	r0, r6
 800463c:	21f0      	movs	r1, #240	@ 0xf0
 800463e:	f7ff ffde 	bl	80045fe <stmpe811_IO_EnableAF>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 8004642:	f005 02f8 	and.w	r2, r5, #248	@ 0xf8
 8004646:	4620      	mov	r0, r4
 8004648:	2104      	movs	r1, #4
 800464a:	f7fe f999 	bl	8002980 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_ADC_CTRL1, 0x49);
 800464e:	2249      	movs	r2, #73	@ 0x49
 8004650:	2120      	movs	r1, #32
 8004652:	4620      	mov	r0, r4
 8004654:	f7fe f994 	bl	8002980 <IOE_Write>
  IOE_Delay(2); 
 8004658:	2002      	movs	r0, #2
 800465a:	f7fe f9d9 	bl	8002a10 <IOE_Delay>
  IOE_Write(DeviceAddr, STMPE811_REG_ADC_CTRL2, 0x01);
 800465e:	4620      	mov	r0, r4
 8004660:	2201      	movs	r2, #1
 8004662:	2121      	movs	r1, #33	@ 0x21
 8004664:	f7fe f98c 	bl	8002980 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_CFG, 0x9A); 
 8004668:	4620      	mov	r0, r4
 800466a:	229a      	movs	r2, #154	@ 0x9a
 800466c:	2141      	movs	r1, #65	@ 0x41
 800466e:	f7fe f987 	bl	8002980 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_TH, 0x01);
 8004672:	4620      	mov	r0, r4
 8004674:	2201      	movs	r2, #1
 8004676:	214a      	movs	r1, #74	@ 0x4a
 8004678:	f7fe f982 	bl	8002980 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 800467c:	4620      	mov	r0, r4
 800467e:	2201      	movs	r2, #1
 8004680:	214b      	movs	r1, #75	@ 0x4b
 8004682:	f7fe f97d 	bl	8002980 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 8004686:	4620      	mov	r0, r4
 8004688:	2200      	movs	r2, #0
 800468a:	214b      	movs	r1, #75	@ 0x4b
 800468c:	f7fe f978 	bl	8002980 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_FRACT_XYZ, 0x01);
 8004690:	4620      	mov	r0, r4
 8004692:	2201      	movs	r2, #1
 8004694:	2156      	movs	r1, #86	@ 0x56
 8004696:	f7fe f973 	bl	8002980 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_I_DRIVE, 0x01);
 800469a:	4620      	mov	r0, r4
 800469c:	2201      	movs	r2, #1
 800469e:	2158      	movs	r1, #88	@ 0x58
 80046a0:	f7fe f96e 	bl	8002980 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_CTRL, 0x01);
 80046a4:	4620      	mov	r0, r4
 80046a6:	2201      	movs	r2, #1
 80046a8:	2140      	movs	r1, #64	@ 0x40
 80046aa:	f7fe f969 	bl	8002980 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_STA, 0xFF);
 80046ae:	4620      	mov	r0, r4
 80046b0:	22ff      	movs	r2, #255	@ 0xff
 80046b2:	210b      	movs	r1, #11
 80046b4:	f7fe f964 	bl	8002980 <IOE_Write>
}
 80046b8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
  IOE_Delay(2); 
 80046bc:	2002      	movs	r0, #2
 80046be:	f7fe b9a7 	b.w	8002a10 <IOE_Delay>
	...

080046c4 <SystemInit>:
  */
void SystemInit(void)
{
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 80046c4:	4b05      	ldr	r3, [pc, #20]	@ (80046dc <SystemInit+0x18>)
 80046c6:	f8d3 2088 	ldr.w	r2, [r3, #136]	@ 0x88
 80046ca:	f442 0270 	orr.w	r2, r2, #15728640	@ 0xf00000
 80046ce:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88

  /* Configure the Vector Table location add offset address ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#else
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 80046d2:	f04f 6200 	mov.w	r2, #134217728	@ 0x8000000
 80046d6:	609a      	str	r2, [r3, #8]
#endif
}
 80046d8:	4770      	bx	lr
 80046da:	bf00      	nop
 80046dc:	e000ed00 	.word	0xe000ed00

080046e0 <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 80046e0:	b508      	push	{r3, lr}
  /* Configure Flash prefetch, Instruction cache, Data cache */ 
#if (INSTRUCTION_CACHE_ENABLE != 0U)
  __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
 80046e2:	4b0b      	ldr	r3, [pc, #44]	@ (8004710 <HAL_Init+0x30>)
 80046e4:	681a      	ldr	r2, [r3, #0]
 80046e6:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 80046ea:	601a      	str	r2, [r3, #0]
#endif /* INSTRUCTION_CACHE_ENABLE */

#if (DATA_CACHE_ENABLE != 0U)
  __HAL_FLASH_DATA_CACHE_ENABLE();
 80046ec:	681a      	ldr	r2, [r3, #0]
 80046ee:	f442 6280 	orr.w	r2, r2, #1024	@ 0x400
 80046f2:	601a      	str	r2, [r3, #0]
#endif /* DATA_CACHE_ENABLE */

#if (PREFETCH_ENABLE != 0U)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 80046f4:	681a      	ldr	r2, [r3, #0]
 80046f6:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 80046fa:	601a      	str	r2, [r3, #0]
#endif /* PREFETCH_ENABLE */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 80046fc:	2003      	movs	r0, #3
 80046fe:	f000 f82f 	bl	8004760 <HAL_NVIC_SetPriorityGrouping>

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  HAL_InitTick(TICK_INT_PRIORITY);
 8004702:	2000      	movs	r0, #0
 8004704:	f7fe fc42 	bl	8002f8c <HAL_InitTick>

  /* Init the low level hardware */
  HAL_MspInit();
 8004708:	f7fe fa0c 	bl	8002b24 <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
}
 800470c:	2000      	movs	r0, #0
 800470e:	bd08      	pop	{r3, pc}
 8004710:	40023c00 	.word	0x40023c00

08004714 <HAL_IncTick>:
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick += uwTickFreq;
 8004714:	4a03      	ldr	r2, [pc, #12]	@ (8004724 <HAL_IncTick+0x10>)
 8004716:	4b04      	ldr	r3, [pc, #16]	@ (8004728 <HAL_IncTick+0x14>)
 8004718:	6811      	ldr	r1, [r2, #0]
 800471a:	781b      	ldrb	r3, [r3, #0]
 800471c:	440b      	add	r3, r1
 800471e:	6013      	str	r3, [r2, #0]
}
 8004720:	4770      	bx	lr
 8004722:	bf00      	nop
 8004724:	2000266c 	.word	0x2000266c
 8004728:	200000c8 	.word	0x200000c8

0800472c <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
 800472c:	4b01      	ldr	r3, [pc, #4]	@ (8004734 <HAL_GetTick+0x8>)
 800472e:	6818      	ldr	r0, [r3, #0]
}
 8004730:	4770      	bx	lr
 8004732:	bf00      	nop
 8004734:	2000266c 	.word	0x2000266c

08004738 <HAL_Delay>:
  *       implementations in user file.
  * @param Delay specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 8004738:	b538      	push	{r3, r4, r5, lr}
 800473a:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 800473c:	f7ff fff6 	bl	800472c <HAL_GetTick>
  uint32_t wait = Delay;

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 8004740:	1c63      	adds	r3, r4, #1
  {
    wait += (uint32_t)(uwTickFreq);
 8004742:	bf1c      	itt	ne
 8004744:	4b05      	ldrne	r3, [pc, #20]	@ (800475c <HAL_Delay+0x24>)
 8004746:	781b      	ldrbne	r3, [r3, #0]
  uint32_t tickstart = HAL_GetTick();
 8004748:	4605      	mov	r5, r0
    wait += (uint32_t)(uwTickFreq);
 800474a:	bf18      	it	ne
 800474c:	18e4      	addne	r4, r4, r3
  }

  while((HAL_GetTick() - tickstart) < wait)
 800474e:	f7ff ffed 	bl	800472c <HAL_GetTick>
 8004752:	1b43      	subs	r3, r0, r5
 8004754:	42a3      	cmp	r3, r4
 8004756:	d3fa      	bcc.n	800474e <HAL_Delay+0x16>
  {
  }
}
 8004758:	bd38      	pop	{r3, r4, r5, pc}
 800475a:	bf00      	nop
 800475c:	200000c8 	.word	0x200000c8

08004760 <HAL_NVIC_SetPriorityGrouping>:
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 8004760:	4907      	ldr	r1, [pc, #28]	@ (8004780 <HAL_NVIC_SetPriorityGrouping+0x20>)
 8004762:	68ca      	ldr	r2, [r1, #12]
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 8004764:	f422 62e0 	bic.w	r2, r2, #1792	@ 0x700
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 8004768:	0203      	lsls	r3, r0, #8
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 800476a:	0412      	lsls	r2, r2, #16
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 800476c:	f403 63e0 	and.w	r3, r3, #1792	@ 0x700
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 8004770:	0c12      	lsrs	r2, r2, #16
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 8004772:	4313      	orrs	r3, r2
  reg_value  =  (reg_value                                   |
 8004774:	f043 63bf 	orr.w	r3, r3, #100139008	@ 0x5f80000
 8004778:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
  SCB->AIRCR =  reg_value;
 800477c:	60cb      	str	r3, [r1, #12]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
  
  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
}
 800477e:	4770      	bx	lr
 8004780:	e000ed00 	.word	0xe000ed00

08004784 <HAL_NVIC_SetPriority>:
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 8004784:	4b16      	ldr	r3, [pc, #88]	@ (80047e0 <HAL_NVIC_SetPriority+0x5c>)
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.          
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 8004786:	b530      	push	{r4, r5, lr}
 8004788:	68dc      	ldr	r4, [r3, #12]
 800478a:	f3c4 2402 	ubfx	r4, r4, #8, #3
{
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 800478e:	f1c4 0307 	rsb	r3, r4, #7
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8004792:	1d25      	adds	r5, r4, #4
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 8004794:	2b04      	cmp	r3, #4
 8004796:	bf28      	it	cs
 8004798:	2304      	movcs	r3, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 800479a:	2d06      	cmp	r5, #6

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 800479c:	f04f 35ff 	mov.w	r5, #4294967295
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 80047a0:	bf8c      	ite	hi
 80047a2:	3c03      	subhi	r4, #3
 80047a4:	2400      	movls	r4, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 80047a6:	fa05 f303 	lsl.w	r3, r5, r3
 80047aa:	ea21 0303 	bic.w	r3, r1, r3
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 80047ae:	40a5      	lsls	r5, r4
 80047b0:	ea22 0205 	bic.w	r2, r2, r5
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 80047b4:	40a3      	lsls	r3, r4
  if ((int32_t)(IRQn) >= 0)
 80047b6:	2800      	cmp	r0, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 80047b8:	ea43 0302 	orr.w	r3, r3, r2
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80047bc:	bfac      	ite	ge
 80047be:	f100 4060 	addge.w	r0, r0, #3758096384	@ 0xe0000000
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80047c2:	4a08      	ldrlt	r2, [pc, #32]	@ (80047e4 <HAL_NVIC_SetPriority+0x60>)
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80047c4:	ea4f 1303 	mov.w	r3, r3, lsl #4
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80047c8:	bfb8      	it	lt
 80047ca:	f000 000f 	andlt.w	r0, r0, #15
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80047ce:	b2db      	uxtb	r3, r3
 80047d0:	bfaa      	itet	ge
 80047d2:	f500 4061 	addge.w	r0, r0, #57600	@ 0xe100
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80047d6:	5413      	strblt	r3, [r2, r0]
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80047d8:	f880 3300 	strbge.w	r3, [r0, #768]	@ 0x300
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  
  prioritygroup = NVIC_GetPriorityGrouping();
  
  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
}
 80047dc:	bd30      	pop	{r4, r5, pc}
 80047de:	bf00      	nop
 80047e0:	e000ed00 	.word	0xe000ed00
 80047e4:	e000ed14 	.word	0xe000ed14

080047e8 <HAL_NVIC_EnableIRQ>:
  if ((int32_t)(IRQn) >= 0)
 80047e8:	2800      	cmp	r0, #0
 80047ea:	db07      	blt.n	80047fc <HAL_NVIC_EnableIRQ+0x14>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80047ec:	4a04      	ldr	r2, [pc, #16]	@ (8004800 <HAL_NVIC_EnableIRQ+0x18>)
 80047ee:	0941      	lsrs	r1, r0, #5
 80047f0:	2301      	movs	r3, #1
 80047f2:	f000 001f 	and.w	r0, r0, #31
 80047f6:	4083      	lsls	r3, r0
 80047f8:	f842 3021 	str.w	r3, [r2, r1, lsl #2]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
}
 80047fc:	4770      	bx	lr
 80047fe:	bf00      	nop
 8004800:	e000e100 	.word	0xe000e100

08004804 <HAL_CRC_Init>:
  *         parameters in the CRC_InitTypeDef and create the associated handle.
  * @param  hcrc CRC handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
 8004804:	b510      	push	{r4, lr}
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
 8004806:	4604      	mov	r4, r0
 8004808:	b150      	cbz	r0, 8004820 <HAL_CRC_Init+0x1c>
  }

  /* Check the parameters */
  assert_param(IS_CRC_ALL_INSTANCE(hcrc->Instance));

  if (hcrc->State == HAL_CRC_STATE_RESET)
 800480a:	7943      	ldrb	r3, [r0, #5]
 800480c:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 8004810:	b913      	cbnz	r3, 8004818 <HAL_CRC_Init+0x14>
  {
    /* Allocate lock resource and initialize it */
    hcrc->Lock = HAL_UNLOCKED;
 8004812:	7102      	strb	r2, [r0, #4]
    /* Init the low level hardware */
    HAL_CRC_MspInit(hcrc);
 8004814:	f7fe f9a6 	bl	8002b64 <HAL_CRC_MspInit>
  }

  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;
 8004818:	2301      	movs	r3, #1
 800481a:	7163      	strb	r3, [r4, #5]

  /* Return function status */
  return HAL_OK;
 800481c:	2000      	movs	r0, #0
}
 800481e:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8004820:	2001      	movs	r0, #1
 8004822:	e7fc      	b.n	800481e <HAL_CRC_Init+0x1a>

08004824 <HAL_DMA2D_Init>:
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_Init(DMA2D_HandleTypeDef *hdma2d)
{
 8004824:	b510      	push	{r4, lr}
  /* Check the DMA2D peripheral state */
  if (hdma2d == NULL)
 8004826:	4604      	mov	r4, r0
 8004828:	b320      	cbz	r0, 8004874 <HAL_DMA2D_Init+0x50>

    /* Init the low level hardware */
    hdma2d->MspInitCallback(hdma2d);
  }
#else
  if (hdma2d->State == HAL_DMA2D_STATE_RESET)
 800482a:	f890 3039 	ldrb.w	r3, [r0, #57]	@ 0x39
 800482e:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 8004832:	b91b      	cbnz	r3, 800483c <HAL_DMA2D_Init+0x18>
  {
    /* Allocate lock resource and initialize it */
    hdma2d->Lock = HAL_UNLOCKED;
 8004834:	f880 2038 	strb.w	r2, [r0, #56]	@ 0x38
    /* Init the low level hardware */
    HAL_DMA2D_MspInit(hdma2d);
 8004838:	f7fe f9ac 	bl	8002b94 <HAL_DMA2D_MspInit>
  }
#endif /* (USE_HAL_DMA2D_REGISTER_CALLBACKS) */

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 800483c:	2302      	movs	r3, #2
 800483e:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39

  /* DMA2D CR register configuration -------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, hdma2d->Init.Mode);
 8004842:	6823      	ldr	r3, [r4, #0]
 8004844:	6861      	ldr	r1, [r4, #4]
 8004846:	681a      	ldr	r2, [r3, #0]
 8004848:	f422 3240 	bic.w	r2, r2, #196608	@ 0x30000
 800484c:	430a      	orrs	r2, r1
 800484e:	601a      	str	r2, [r3, #0]

  /* DMA2D OPFCCR register configuration ---------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM, hdma2d->Init.ColorMode);
 8004850:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8004852:	68a1      	ldr	r1, [r4, #8]
 8004854:	f022 0207 	bic.w	r2, r2, #7
 8004858:	430a      	orrs	r2, r1
 800485a:	635a      	str	r2, [r3, #52]	@ 0x34

  /* DMA2D OOR register configuration ------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
 800485c:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 800485e:	68e1      	ldr	r1, [r4, #12]
 8004860:	f36f 020d 	bfc	r2, #0, #14
 8004864:	430a      	orrs	r2, r1
 8004866:	641a      	str	r2, [r3, #64]	@ 0x40


  /* Update error code */
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 8004868:	2000      	movs	r0, #0

  /* Initialize the DMA2D state*/
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 800486a:	2301      	movs	r3, #1
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 800486c:	63e0      	str	r0, [r4, #60]	@ 0x3c
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 800486e:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39

  return HAL_OK;
}
 8004872:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8004874:	2001      	movs	r0, #1
 8004876:	e7fc      	b.n	8004872 <HAL_DMA2D_Init+0x4e>

08004878 <HAL_DMA2D_LineEventCallback>:
  * @brief  Transfer watermark callback.
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval None
  */
__weak void HAL_DMA2D_LineEventCallback(DMA2D_HandleTypeDef *hdma2d)
 8004878:	4770      	bx	lr

0800487a <HAL_DMA2D_CLUTLoadingCpltCallback>:
  * @brief  CLUT Transfer Complete callback.
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval None
  */
__weak void HAL_DMA2D_CLUTLoadingCpltCallback(DMA2D_HandleTypeDef *hdma2d)
 800487a:	4770      	bx	lr

0800487c <HAL_DMA2D_IRQHandler>:
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 800487c:	6803      	ldr	r3, [r0, #0]
{
 800487e:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 8004880:	685e      	ldr	r6, [r3, #4]
  uint32_t crflags = READ_REG(hdma2d->Instance->CR);
 8004882:	681d      	ldr	r5, [r3, #0]
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
 8004884:	07f2      	lsls	r2, r6, #31
{
 8004886:	4604      	mov	r4, r0
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
 8004888:	d514      	bpl.n	80048b4 <HAL_DMA2D_IRQHandler+0x38>
    if ((crflags & DMA2D_IT_TE) != 0U)
 800488a:	05e9      	lsls	r1, r5, #23
 800488c:	d512      	bpl.n	80048b4 <HAL_DMA2D_IRQHandler+0x38>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TE);
 800488e:	681a      	ldr	r2, [r3, #0]
 8004890:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
 8004894:	601a      	str	r2, [r3, #0]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TE;
 8004896:	6bc2      	ldr	r2, [r0, #60]	@ 0x3c
 8004898:	f042 0201 	orr.w	r2, r2, #1
 800489c:	63c2      	str	r2, [r0, #60]	@ 0x3c
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TE);
 800489e:	2201      	movs	r2, #1
 80048a0:	609a      	str	r2, [r3, #8]
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 80048a2:	2304      	movs	r3, #4
 80048a4:	f880 3039 	strb.w	r3, [r0, #57]	@ 0x39
      __HAL_UNLOCK(hdma2d);
 80048a8:	2300      	movs	r3, #0
 80048aa:	f880 3038 	strb.w	r3, [r0, #56]	@ 0x38
      if (hdma2d->XferErrorCallback != NULL)
 80048ae:	6943      	ldr	r3, [r0, #20]
 80048b0:	b103      	cbz	r3, 80048b4 <HAL_DMA2D_IRQHandler+0x38>
        hdma2d->XferErrorCallback(hdma2d);
 80048b2:	4798      	blx	r3
  if ((isrflags & DMA2D_FLAG_CE) != 0U)
 80048b4:	06b2      	lsls	r2, r6, #26
 80048b6:	d516      	bpl.n	80048e6 <HAL_DMA2D_IRQHandler+0x6a>
    if ((crflags & DMA2D_IT_CE) != 0U)
 80048b8:	04ab      	lsls	r3, r5, #18
 80048ba:	d514      	bpl.n	80048e6 <HAL_DMA2D_IRQHandler+0x6a>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CE);
 80048bc:	6823      	ldr	r3, [r4, #0]
 80048be:	681a      	ldr	r2, [r3, #0]
 80048c0:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
 80048c4:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CE);
 80048c6:	2220      	movs	r2, #32
 80048c8:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CE;
 80048ca:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 80048cc:	f043 0302 	orr.w	r3, r3, #2
 80048d0:	63e3      	str	r3, [r4, #60]	@ 0x3c
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 80048d2:	2304      	movs	r3, #4
 80048d4:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39
      __HAL_UNLOCK(hdma2d);
 80048d8:	2300      	movs	r3, #0
 80048da:	f884 3038 	strb.w	r3, [r4, #56]	@ 0x38
      if (hdma2d->XferErrorCallback != NULL)
 80048de:	6963      	ldr	r3, [r4, #20]
 80048e0:	b10b      	cbz	r3, 80048e6 <HAL_DMA2D_IRQHandler+0x6a>
        hdma2d->XferErrorCallback(hdma2d);
 80048e2:	4620      	mov	r0, r4
 80048e4:	4798      	blx	r3
  if ((isrflags & DMA2D_FLAG_CAE) != 0U)
 80048e6:	0730      	lsls	r0, r6, #28
 80048e8:	d516      	bpl.n	8004918 <HAL_DMA2D_IRQHandler+0x9c>
    if ((crflags & DMA2D_IT_CAE) != 0U)
 80048ea:	0529      	lsls	r1, r5, #20
 80048ec:	d514      	bpl.n	8004918 <HAL_DMA2D_IRQHandler+0x9c>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CAE);
 80048ee:	6823      	ldr	r3, [r4, #0]
 80048f0:	681a      	ldr	r2, [r3, #0]
 80048f2:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 80048f6:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CAE);
 80048f8:	2208      	movs	r2, #8
 80048fa:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CAE;
 80048fc:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 80048fe:	f043 0304 	orr.w	r3, r3, #4
 8004902:	63e3      	str	r3, [r4, #60]	@ 0x3c
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 8004904:	2304      	movs	r3, #4
 8004906:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39
      __HAL_UNLOCK(hdma2d);
 800490a:	2300      	movs	r3, #0
 800490c:	f884 3038 	strb.w	r3, [r4, #56]	@ 0x38
      if (hdma2d->XferErrorCallback != NULL)
 8004910:	6963      	ldr	r3, [r4, #20]
 8004912:	b10b      	cbz	r3, 8004918 <HAL_DMA2D_IRQHandler+0x9c>
        hdma2d->XferErrorCallback(hdma2d);
 8004914:	4620      	mov	r0, r4
 8004916:	4798      	blx	r3
  if ((isrflags & DMA2D_FLAG_TW) != 0U)
 8004918:	0772      	lsls	r2, r6, #29
 800491a:	d50b      	bpl.n	8004934 <HAL_DMA2D_IRQHandler+0xb8>
    if ((crflags & DMA2D_IT_TW) != 0U)
 800491c:	056b      	lsls	r3, r5, #21
 800491e:	d509      	bpl.n	8004934 <HAL_DMA2D_IRQHandler+0xb8>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TW);
 8004920:	6823      	ldr	r3, [r4, #0]
 8004922:	681a      	ldr	r2, [r3, #0]
 8004924:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 8004928:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TW);
 800492a:	2204      	movs	r2, #4
 800492c:	609a      	str	r2, [r3, #8]
      HAL_DMA2D_LineEventCallback(hdma2d);
 800492e:	4620      	mov	r0, r4
 8004930:	f7ff ffa2 	bl	8004878 <HAL_DMA2D_LineEventCallback>
  if ((isrflags & DMA2D_FLAG_TC) != 0U)
 8004934:	07b0      	lsls	r0, r6, #30
 8004936:	d514      	bpl.n	8004962 <HAL_DMA2D_IRQHandler+0xe6>
    if ((crflags & DMA2D_IT_TC) != 0U)
 8004938:	05a9      	lsls	r1, r5, #22
 800493a:	d512      	bpl.n	8004962 <HAL_DMA2D_IRQHandler+0xe6>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TC);
 800493c:	6823      	ldr	r3, [r4, #0]
 800493e:	681a      	ldr	r2, [r3, #0]
 8004940:	f422 7200 	bic.w	r2, r2, #512	@ 0x200
 8004944:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TC);
 8004946:	2202      	movs	r2, #2
 8004948:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 800494a:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 800494c:	63e3      	str	r3, [r4, #60]	@ 0x3c
      hdma2d->State = HAL_DMA2D_STATE_READY;
 800494e:	2301      	movs	r3, #1
 8004950:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39
      __HAL_UNLOCK(hdma2d);
 8004954:	2300      	movs	r3, #0
 8004956:	f884 3038 	strb.w	r3, [r4, #56]	@ 0x38
      if (hdma2d->XferCpltCallback != NULL)
 800495a:	6923      	ldr	r3, [r4, #16]
 800495c:	b10b      	cbz	r3, 8004962 <HAL_DMA2D_IRQHandler+0xe6>
        hdma2d->XferCpltCallback(hdma2d);
 800495e:	4620      	mov	r0, r4
 8004960:	4798      	blx	r3
  if ((isrflags & DMA2D_FLAG_CTC) != 0U)
 8004962:	06f2      	lsls	r2, r6, #27
 8004964:	d513      	bpl.n	800498e <HAL_DMA2D_IRQHandler+0x112>
    if ((crflags & DMA2D_IT_CTC) != 0U)
 8004966:	04eb      	lsls	r3, r5, #19
 8004968:	d511      	bpl.n	800498e <HAL_DMA2D_IRQHandler+0x112>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC);
 800496a:	6823      	ldr	r3, [r4, #0]
 800496c:	681a      	ldr	r2, [r3, #0]
 800496e:	f422 5280 	bic.w	r2, r2, #4096	@ 0x1000
 8004972:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CTC);
 8004974:	2210      	movs	r2, #16
 8004976:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 8004978:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 800497a:	63e3      	str	r3, [r4, #60]	@ 0x3c
      hdma2d->State = HAL_DMA2D_STATE_READY;
 800497c:	2301      	movs	r3, #1
 800497e:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39
      __HAL_UNLOCK(hdma2d);
 8004982:	2300      	movs	r3, #0
 8004984:	f884 3038 	strb.w	r3, [r4, #56]	@ 0x38
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
 8004988:	4620      	mov	r0, r4
 800498a:	f7ff ff76 	bl	800487a <HAL_DMA2D_CLUTLoadingCpltCallback>
}
 800498e:	bd70      	pop	{r4, r5, r6, pc}

08004990 <HAL_DMA2D_ConfigLayer>:
  *                   This parameter can be one of the following values:
  *                   DMA2D_BACKGROUND_LAYER(0) / DMA2D_FOREGROUND_LAYER(1)
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_ConfigLayer(DMA2D_HandleTypeDef *hdma2d, uint32_t LayerIdx)
{
 8004990:	b5f0      	push	{r4, r5, r6, r7, lr}
      assert_param(IS_DMA2D_ALPHA_MODE(hdma2d->LayerCfg[LayerIdx].AlphaMode));
    }
  }

  /* Process locked */
  __HAL_LOCK(hdma2d);
 8004992:	f890 2038 	ldrb.w	r2, [r0, #56]	@ 0x38
 8004996:	2a01      	cmp	r2, #1
{
 8004998:	4603      	mov	r3, r0
 800499a:	f04f 0002 	mov.w	r0, #2
  __HAL_LOCK(hdma2d);
 800499e:	d02b      	beq.n	80049f8 <HAL_DMA2D_ConfigLayer+0x68>
 80049a0:	2201      	movs	r2, #1
 80049a2:	f883 2038 	strb.w	r2, [r3, #56]	@ 0x38

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 80049a6:	f883 0039 	strb.w	r0, [r3, #57]	@ 0x39

  pLayerCfg = &hdma2d->LayerCfg[LayerIdx];

  /* Prepare the value to be written to the BGPFCCR or FGPFCCR register */
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 80049aa:	eb03 1201 	add.w	r2, r3, r1, lsl #4
 80049ae:	e9d2 4007 	ldrd	r4, r0, [r2, #28]
 80049b2:	6a55      	ldr	r5, [r2, #36]	@ 0x24
 80049b4:	4f17      	ldr	r7, [pc, #92]	@ (8004a14 <HAL_DMA2D_ConfigLayer+0x84>)
 80049b6:	ea44 4000 	orr.w	r0, r4, r0, lsl #16
  regMask  = DMA2D_BGPFCCR_CM | DMA2D_BGPFCCR_AM | DMA2D_BGPFCCR_ALPHA;


  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 80049ba:	3c09      	subs	r4, #9
 80049bc:	2c01      	cmp	r4, #1
  {
    regValue |= (pLayerCfg->InputAlpha & DMA2D_BGPFCCR_ALPHA);
 80049be:	bf9c      	itt	ls
 80049c0:	f005 427f 	andls.w	r2, r5, #4278190080	@ 0xff000000
 80049c4:	4310      	orrls	r0, r2
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 80049c6:	ea4f 1601 	mov.w	r6, r1, lsl #4

  /* Configure the background DMA2D layer */
  if (LayerIdx == DMA2D_BACKGROUND_LAYER)
  {
    /* Write DMA2D BGPFCCR register */
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 80049ca:	681a      	ldr	r2, [r3, #0]
    regValue |= (pLayerCfg->InputAlpha << DMA2D_BGPFCCR_ALPHA_Pos);
 80049cc:	bf88      	it	hi
 80049ce:	ea40 6005 	orrhi.w	r0, r0, r5, lsl #24
  if (LayerIdx == DMA2D_BACKGROUND_LAYER)
 80049d2:	b991      	cbnz	r1, 80049fa <HAL_DMA2D_ConfigLayer+0x6a>
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 80049d4:	6a51      	ldr	r1, [r2, #36]	@ 0x24
 80049d6:	4039      	ands	r1, r7
 80049d8:	4301      	orrs	r1, r0
 80049da:	6251      	str	r1, [r2, #36]	@ 0x24

    /* DMA2D BGOR register configuration -------------------------------------*/
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);

    /* DMA2D BGCOLR register configuration -------------------------------------*/
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 80049dc:	2c01      	cmp	r4, #1
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
 80049de:	6999      	ldr	r1, [r3, #24]
 80049e0:	6191      	str	r1, [r2, #24]
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 80049e2:	d803      	bhi.n	80049ec <HAL_DMA2D_ConfigLayer+0x5c>
    {
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE | DMA2D_BGCOLR_GREEN | \
 80049e4:	6a59      	ldr	r1, [r3, #36]	@ 0x24
 80049e6:	f021 417f 	bic.w	r1, r1, #4278190080	@ 0xff000000
 80049ea:	6291      	str	r1, [r2, #40]	@ 0x28
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | \
                                                                   DMA2D_FGCOLR_RED));
    }
  }
  /* Initialize the DMA2D state*/
  hdma2d->State = HAL_DMA2D_STATE_READY;
 80049ec:	2201      	movs	r2, #1

  /* Process unlocked */
  __HAL_UNLOCK(hdma2d);
 80049ee:	2000      	movs	r0, #0
  hdma2d->State = HAL_DMA2D_STATE_READY;
 80049f0:	f883 2039 	strb.w	r2, [r3, #57]	@ 0x39
  __HAL_UNLOCK(hdma2d);
 80049f4:	f883 0038 	strb.w	r0, [r3, #56]	@ 0x38

  return HAL_OK;
}
 80049f8:	bdf0      	pop	{r4, r5, r6, r7, pc}
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
 80049fa:	69d1      	ldr	r1, [r2, #28]
 80049fc:	4039      	ands	r1, r7
 80049fe:	4301      	orrs	r1, r0
 8004a00:	61d1      	str	r1, [r2, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 8004a02:	1999      	adds	r1, r3, r6
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8004a04:	2c01      	cmp	r4, #1
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 8004a06:	6989      	ldr	r1, [r1, #24]
 8004a08:	6111      	str	r1, [r2, #16]
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | \
 8004a0a:	bf9c      	itt	ls
 8004a0c:	f025 457f 	bicls.w	r5, r5, #4278190080	@ 0xff000000
 8004a10:	6215      	strls	r5, [r2, #32]
 8004a12:	e7eb      	b.n	80049ec <HAL_DMA2D_ConfigLayer+0x5c>
 8004a14:	00fcfff0 	.word	0x00fcfff0

08004a18 <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 8004a18:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8004a1c:	f8df 91bc 	ldr.w	r9, [pc, #444]	@ 8004bdc <HAL_GPIO_Init+0x1c4>
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
        SYSCFG->EXTICR[position >> 2U] = temp;

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
 8004a20:	4a6c      	ldr	r2, [pc, #432]	@ (8004bd4 <HAL_GPIO_Init+0x1bc>)
  for(position = 0U; position < GPIO_NUMBER; position++)
 8004a22:	2300      	movs	r3, #0
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 8004a24:	680d      	ldr	r5, [r1, #0]
    ioposition = 0x01U << position;
 8004a26:	2401      	movs	r4, #1
 8004a28:	409c      	lsls	r4, r3
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 8004a2a:	ea04 0605 	and.w	r6, r4, r5
    if(iocurrent == ioposition)
 8004a2e:	43ac      	bics	r4, r5
 8004a30:	f040 80b7 	bne.w	8004ba2 <HAL_GPIO_Init+0x18a>
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 8004a34:	684d      	ldr	r5, [r1, #4]
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8004a36:	2703      	movs	r7, #3
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 8004a38:	f005 0403 	and.w	r4, r5, #3
 8004a3c:	ea4f 0843 	mov.w	r8, r3, lsl #1
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8004a40:	fa07 fc08 	lsl.w	ip, r7, r8
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 8004a44:	1e67      	subs	r7, r4, #1
 8004a46:	2f01      	cmp	r7, #1
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8004a48:	ea6f 0c0c 	mvn.w	ip, ip
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 8004a4c:	d834      	bhi.n	8004ab8 <HAL_GPIO_Init+0xa0>
        temp = GPIOx->OSPEEDR; 
 8004a4e:	6887      	ldr	r7, [r0, #8]
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8004a50:	ea07 0e0c 	and.w	lr, r7, ip
        temp |= (GPIO_Init->Speed << (position * 2U));
 8004a54:	68cf      	ldr	r7, [r1, #12]
 8004a56:	fa07 f708 	lsl.w	r7, r7, r8
 8004a5a:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->OSPEEDR = temp;
 8004a5e:	6087      	str	r7, [r0, #8]
        temp = GPIOx->OTYPER;
 8004a60:	6847      	ldr	r7, [r0, #4]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 8004a62:	ea27 0e06 	bic.w	lr, r7, r6
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
 8004a66:	f3c5 1700 	ubfx	r7, r5, #4, #1
 8004a6a:	409f      	lsls	r7, r3
 8004a6c:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->OTYPER = temp;
 8004a70:	6047      	str	r7, [r0, #4]
        temp = GPIOx->PUPDR;
 8004a72:	68c7      	ldr	r7, [r0, #12]
        temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 8004a74:	ea07 0e0c 	and.w	lr, r7, ip
        temp |= ((GPIO_Init->Pull) << (position * 2U));
 8004a78:	688f      	ldr	r7, [r1, #8]
 8004a7a:	fa07 f708 	lsl.w	r7, r7, r8
 8004a7e:	ea47 070e 	orr.w	r7, r7, lr
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 8004a82:	2c02      	cmp	r4, #2
        GPIOx->PUPDR = temp;
 8004a84:	60c7      	str	r7, [r0, #12]
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 8004a86:	d119      	bne.n	8004abc <HAL_GPIO_Init+0xa4>
        temp = GPIOx->AFR[position >> 3U];
 8004a88:	ea4f 0ad3 	mov.w	sl, r3, lsr #3
 8004a8c:	eb00 0a8a 	add.w	sl, r0, sl, lsl #2
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 8004a90:	f003 0b07 	and.w	fp, r3, #7
        temp = GPIOx->AFR[position >> 3U];
 8004a94:	f8da 7020 	ldr.w	r7, [sl, #32]
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 8004a98:	ea4f 0b8b 	mov.w	fp, fp, lsl #2
 8004a9c:	f04f 0e0f 	mov.w	lr, #15
 8004aa0:	fa0e fe0b 	lsl.w	lr, lr, fp
 8004aa4:	ea27 0e0e 	bic.w	lr, r7, lr
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 8004aa8:	690f      	ldr	r7, [r1, #16]
 8004aaa:	fa07 f70b 	lsl.w	r7, r7, fp
 8004aae:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->AFR[position >> 3U] = temp;
 8004ab2:	f8ca 7020 	str.w	r7, [sl, #32]
 8004ab6:	e001      	b.n	8004abc <HAL_GPIO_Init+0xa4>
      if((GPIO_Init->Mode & GPIO_MODE) != MODE_ANALOG)
 8004ab8:	2c03      	cmp	r4, #3
 8004aba:	d1da      	bne.n	8004a72 <HAL_GPIO_Init+0x5a>
      temp = GPIOx->MODER;
 8004abc:	6807      	ldr	r7, [r0, #0]
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 8004abe:	fa04 f408 	lsl.w	r4, r4, r8
      temp &= ~(GPIO_MODER_MODER0 << (position * 2U));
 8004ac2:	ea07 070c 	and.w	r7, r7, ip
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 8004ac6:	433c      	orrs	r4, r7
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 8004ac8:	f415 3f40 	tst.w	r5, #196608	@ 0x30000
      GPIOx->MODER = temp;
 8004acc:	6004      	str	r4, [r0, #0]
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 8004ace:	d068      	beq.n	8004ba2 <HAL_GPIO_Init+0x18a>
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8004ad0:	2400      	movs	r4, #0
 8004ad2:	9401      	str	r4, [sp, #4]
 8004ad4:	f8d9 4044 	ldr.w	r4, [r9, #68]	@ 0x44
 8004ad8:	f444 4480 	orr.w	r4, r4, #16384	@ 0x4000
 8004adc:	f8c9 4044 	str.w	r4, [r9, #68]	@ 0x44
 8004ae0:	f8d9 4044 	ldr.w	r4, [r9, #68]	@ 0x44
 8004ae4:	f023 0703 	bic.w	r7, r3, #3
 8004ae8:	f107 4780 	add.w	r7, r7, #1073741824	@ 0x40000000
 8004aec:	f404 4480 	and.w	r4, r4, #16384	@ 0x4000
 8004af0:	f507 379c 	add.w	r7, r7, #79872	@ 0x13800
 8004af4:	9401      	str	r4, [sp, #4]
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 8004af6:	f003 0c03 	and.w	ip, r3, #3
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8004afa:	9c01      	ldr	r4, [sp, #4]
        temp = SYSCFG->EXTICR[position >> 2U];
 8004afc:	f8d7 e008 	ldr.w	lr, [r7, #8]
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 8004b00:	ea4f 0c8c 	mov.w	ip, ip, lsl #2
 8004b04:	240f      	movs	r4, #15
 8004b06:	fa04 f40c 	lsl.w	r4, r4, ip
 8004b0a:	ea2e 0e04 	bic.w	lr, lr, r4
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8004b0e:	4c32      	ldr	r4, [pc, #200]	@ (8004bd8 <HAL_GPIO_Init+0x1c0>)
 8004b10:	42a0      	cmp	r0, r4
 8004b12:	d04d      	beq.n	8004bb0 <HAL_GPIO_Init+0x198>
 8004b14:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 8004b18:	42a0      	cmp	r0, r4
 8004b1a:	d04b      	beq.n	8004bb4 <HAL_GPIO_Init+0x19c>
 8004b1c:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 8004b20:	42a0      	cmp	r0, r4
 8004b22:	d049      	beq.n	8004bb8 <HAL_GPIO_Init+0x1a0>
 8004b24:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 8004b28:	42a0      	cmp	r0, r4
 8004b2a:	d047      	beq.n	8004bbc <HAL_GPIO_Init+0x1a4>
 8004b2c:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 8004b30:	42a0      	cmp	r0, r4
 8004b32:	d045      	beq.n	8004bc0 <HAL_GPIO_Init+0x1a8>
 8004b34:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 8004b38:	42a0      	cmp	r0, r4
 8004b3a:	d043      	beq.n	8004bc4 <HAL_GPIO_Init+0x1ac>
 8004b3c:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 8004b40:	42a0      	cmp	r0, r4
 8004b42:	d041      	beq.n	8004bc8 <HAL_GPIO_Init+0x1b0>
 8004b44:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 8004b48:	42a0      	cmp	r0, r4
 8004b4a:	d03f      	beq.n	8004bcc <HAL_GPIO_Init+0x1b4>
 8004b4c:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 8004b50:	42a0      	cmp	r0, r4
 8004b52:	d03d      	beq.n	8004bd0 <HAL_GPIO_Init+0x1b8>
 8004b54:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 8004b58:	42a0      	cmp	r0, r4
 8004b5a:	bf14      	ite	ne
 8004b5c:	240a      	movne	r4, #10
 8004b5e:	2409      	moveq	r4, #9
 8004b60:	fa04 f40c 	lsl.w	r4, r4, ip
 8004b64:	ea44 040e 	orr.w	r4, r4, lr
        SYSCFG->EXTICR[position >> 2U] = temp;
 8004b68:	60bc      	str	r4, [r7, #8]
        temp = EXTI->RTSR;
 8004b6a:	6894      	ldr	r4, [r2, #8]
        temp &= ~((uint32_t)iocurrent);
 8004b6c:	43f7      	mvns	r7, r6
        if((GPIO_Init->Mode & TRIGGER_RISING) != 0x00U)
 8004b6e:	f415 1f80 	tst.w	r5, #1048576	@ 0x100000
        temp &= ~((uint32_t)iocurrent);
 8004b72:	bf0c      	ite	eq
 8004b74:	403c      	andeq	r4, r7
        {
          temp |= iocurrent;
 8004b76:	4334      	orrne	r4, r6
        }
        EXTI->RTSR = temp;
 8004b78:	6094      	str	r4, [r2, #8]

        temp = EXTI->FTSR;
 8004b7a:	68d4      	ldr	r4, [r2, #12]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00U)
 8004b7c:	f415 1f00 	tst.w	r5, #2097152	@ 0x200000
        temp &= ~((uint32_t)iocurrent);
 8004b80:	bf0c      	ite	eq
 8004b82:	403c      	andeq	r4, r7
        {
          temp |= iocurrent;
 8004b84:	4334      	orrne	r4, r6
        }
        EXTI->FTSR = temp;
 8004b86:	60d4      	str	r4, [r2, #12]

        temp = EXTI->EMR;
 8004b88:	6854      	ldr	r4, [r2, #4]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & EXTI_EVT) != 0x00U)
 8004b8a:	f415 3f00 	tst.w	r5, #131072	@ 0x20000
        temp &= ~((uint32_t)iocurrent);
 8004b8e:	bf0c      	ite	eq
 8004b90:	403c      	andeq	r4, r7
        {
          temp |= iocurrent;
 8004b92:	4334      	orrne	r4, r6
        }
        EXTI->EMR = temp;
 8004b94:	6054      	str	r4, [r2, #4]

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
 8004b96:	6814      	ldr	r4, [r2, #0]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & EXTI_IT) != 0x00U)
 8004b98:	03ed      	lsls	r5, r5, #15
        temp &= ~((uint32_t)iocurrent);
 8004b9a:	bf54      	ite	pl
 8004b9c:	403c      	andpl	r4, r7
        {
          temp |= iocurrent;
 8004b9e:	4334      	orrmi	r4, r6
        }
        EXTI->IMR = temp;
 8004ba0:	6014      	str	r4, [r2, #0]
  for(position = 0U; position < GPIO_NUMBER; position++)
 8004ba2:	3301      	adds	r3, #1
 8004ba4:	2b10      	cmp	r3, #16
 8004ba6:	f47f af3d 	bne.w	8004a24 <HAL_GPIO_Init+0xc>
      }
    }
  }
}
 8004baa:	b003      	add	sp, #12
 8004bac:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8004bb0:	2400      	movs	r4, #0
 8004bb2:	e7d5      	b.n	8004b60 <HAL_GPIO_Init+0x148>
 8004bb4:	2401      	movs	r4, #1
 8004bb6:	e7d3      	b.n	8004b60 <HAL_GPIO_Init+0x148>
 8004bb8:	2402      	movs	r4, #2
 8004bba:	e7d1      	b.n	8004b60 <HAL_GPIO_Init+0x148>
 8004bbc:	2403      	movs	r4, #3
 8004bbe:	e7cf      	b.n	8004b60 <HAL_GPIO_Init+0x148>
 8004bc0:	2404      	movs	r4, #4
 8004bc2:	e7cd      	b.n	8004b60 <HAL_GPIO_Init+0x148>
 8004bc4:	2405      	movs	r4, #5
 8004bc6:	e7cb      	b.n	8004b60 <HAL_GPIO_Init+0x148>
 8004bc8:	2406      	movs	r4, #6
 8004bca:	e7c9      	b.n	8004b60 <HAL_GPIO_Init+0x148>
 8004bcc:	2407      	movs	r4, #7
 8004bce:	e7c7      	b.n	8004b60 <HAL_GPIO_Init+0x148>
 8004bd0:	2408      	movs	r4, #8
 8004bd2:	e7c5      	b.n	8004b60 <HAL_GPIO_Init+0x148>
 8004bd4:	40013c00 	.word	0x40013c00
 8004bd8:	40020000 	.word	0x40020000
 8004bdc:	40023800 	.word	0x40023800

08004be0 <HAL_GPIO_ReadPin>:
  GPIO_PinState bitstatus;

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  if((GPIOx->IDR & GPIO_Pin) != (uint32_t)GPIO_PIN_RESET)
 8004be0:	6903      	ldr	r3, [r0, #16]
 8004be2:	4219      	tst	r1, r3
  else
  {
    bitstatus = GPIO_PIN_RESET;
  }
  return bitstatus;
}
 8004be4:	bf14      	ite	ne
 8004be6:	2001      	movne	r0, #1
 8004be8:	2000      	moveq	r0, #0
 8004bea:	4770      	bx	lr

08004bec <HAL_GPIO_WritePin>:
{
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if(PinState != GPIO_PIN_RESET)
 8004bec:	b10a      	cbz	r2, 8004bf2 <HAL_GPIO_WritePin+0x6>
  {
    GPIOx->BSRR = GPIO_Pin;
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 8004bee:	6181      	str	r1, [r0, #24]
  }
}
 8004bf0:	4770      	bx	lr
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 8004bf2:	0409      	lsls	r1, r1, #16
 8004bf4:	e7fb      	b.n	8004bee <HAL_GPIO_WritePin+0x2>

08004bf6 <HAL_GPIO_TogglePin>:

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  /* get current Output Data Register value */
  odr = GPIOx->ODR;
 8004bf6:	6943      	ldr	r3, [r0, #20]

  /* Set selected pins that were at low level, and reset ones that were high */
  GPIOx->BSRR = ((odr & GPIO_Pin) << GPIO_NUMBER) | (~odr & GPIO_Pin);
 8004bf8:	ea01 0203 	and.w	r2, r1, r3
 8004bfc:	ea21 0103 	bic.w	r1, r1, r3
 8004c00:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 8004c04:	6181      	str	r1, [r0, #24]
}
 8004c06:	4770      	bx	lr

08004c08 <I2C_IsAcknowledgeFailed>:
  *                the configuration information for the specified I2C.
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_IsAcknowledgeFailed(I2C_HandleTypeDef *hi2c)
{
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8004c08:	6801      	ldr	r1, [r0, #0]
 8004c0a:	694b      	ldr	r3, [r1, #20]
 8004c0c:	f413 6380 	ands.w	r3, r3, #1024	@ 0x400
 8004c10:	f04f 0200 	mov.w	r2, #0
 8004c14:	d010      	beq.n	8004c38 <I2C_IsAcknowledgeFailed+0x30>
  {
    /* Clear NACKF Flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8004c16:	f46f 6380 	mvn.w	r3, #1024	@ 0x400
 8004c1a:	614b      	str	r3, [r1, #20]

    hi2c->PreviousState       = I2C_STATE_NONE;
    hi2c->State               = HAL_I2C_STATE_READY;
 8004c1c:	2320      	movs	r3, #32
    hi2c->PreviousState       = I2C_STATE_NONE;
 8004c1e:	6302      	str	r2, [r0, #48]	@ 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 8004c20:	f880 303d 	strb.w	r3, [r0, #61]	@ 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 8004c24:	f880 203e 	strb.w	r2, [r0, #62]	@ 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8004c28:	6c03      	ldr	r3, [r0, #64]	@ 0x40

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 8004c2a:	f880 203c 	strb.w	r2, [r0, #60]	@ 0x3c
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8004c2e:	f043 0304 	orr.w	r3, r3, #4
 8004c32:	6403      	str	r3, [r0, #64]	@ 0x40

    return HAL_ERROR;
 8004c34:	2001      	movs	r0, #1
 8004c36:	4770      	bx	lr
  }
  return HAL_OK;
 8004c38:	4618      	mov	r0, r3
}
 8004c3a:	4770      	bx	lr

08004c3c <I2C_WaitOnFlagUntilTimeout>:
{
 8004c3c:	e92d 46f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r9, sl, lr}
 8004c40:	4606      	mov	r6, r0
 8004c42:	460f      	mov	r7, r1
 8004c44:	4691      	mov	r9, r2
 8004c46:	461d      	mov	r5, r3
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8004c48:	ea4f 4a11 	mov.w	sl, r1, lsr #16
 8004c4c:	6833      	ldr	r3, [r6, #0]
 8004c4e:	f1ba 0f01 	cmp.w	sl, #1
 8004c52:	bf0c      	ite	eq
 8004c54:	695c      	ldreq	r4, [r3, #20]
 8004c56:	699c      	ldrne	r4, [r3, #24]
 8004c58:	ea27 0404 	bic.w	r4, r7, r4
 8004c5c:	b2a4      	uxth	r4, r4
 8004c5e:	fab4 f484 	clz	r4, r4
 8004c62:	0964      	lsrs	r4, r4, #5
 8004c64:	45a1      	cmp	r9, r4
 8004c66:	d001      	beq.n	8004c6c <I2C_WaitOnFlagUntilTimeout+0x30>
  return HAL_OK;
 8004c68:	2000      	movs	r0, #0
 8004c6a:	e025      	b.n	8004cb8 <I2C_WaitOnFlagUntilTimeout+0x7c>
    if (Timeout != HAL_MAX_DELAY)
 8004c6c:	1c6a      	adds	r2, r5, #1
 8004c6e:	d0ee      	beq.n	8004c4e <I2C_WaitOnFlagUntilTimeout+0x12>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8004c70:	f7ff fd5c 	bl	800472c <HAL_GetTick>
 8004c74:	9b08      	ldr	r3, [sp, #32]
 8004c76:	1ac0      	subs	r0, r0, r3
 8004c78:	42a8      	cmp	r0, r5
 8004c7a:	d801      	bhi.n	8004c80 <I2C_WaitOnFlagUntilTimeout+0x44>
 8004c7c:	2d00      	cmp	r5, #0
 8004c7e:	d1e5      	bne.n	8004c4c <I2C_WaitOnFlagUntilTimeout+0x10>
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
 8004c80:	6833      	ldr	r3, [r6, #0]
 8004c82:	f1ba 0f01 	cmp.w	sl, #1
 8004c86:	bf0c      	ite	eq
 8004c88:	695b      	ldreq	r3, [r3, #20]
 8004c8a:	699b      	ldrne	r3, [r3, #24]
 8004c8c:	ea27 0303 	bic.w	r3, r7, r3
 8004c90:	b29b      	uxth	r3, r3
 8004c92:	fab3 f383 	clz	r3, r3
 8004c96:	095b      	lsrs	r3, r3, #5
 8004c98:	4599      	cmp	r9, r3
 8004c9a:	d1d7      	bne.n	8004c4c <I2C_WaitOnFlagUntilTimeout+0x10>
          hi2c->PreviousState     = I2C_STATE_NONE;
 8004c9c:	2300      	movs	r3, #0
          hi2c->State             = HAL_I2C_STATE_READY;
 8004c9e:	2220      	movs	r2, #32
          hi2c->PreviousState     = I2C_STATE_NONE;
 8004ca0:	6333      	str	r3, [r6, #48]	@ 0x30
          hi2c->State             = HAL_I2C_STATE_READY;
 8004ca2:	f886 203d 	strb.w	r2, [r6, #61]	@ 0x3d
          hi2c->Mode              = HAL_I2C_MODE_NONE;
 8004ca6:	f886 303e 	strb.w	r3, [r6, #62]	@ 0x3e
          hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8004caa:	6c32      	ldr	r2, [r6, #64]	@ 0x40
          __HAL_UNLOCK(hi2c);
 8004cac:	f886 303c 	strb.w	r3, [r6, #60]	@ 0x3c
          hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8004cb0:	f042 0220 	orr.w	r2, r2, #32
 8004cb4:	6432      	str	r2, [r6, #64]	@ 0x40
          return HAL_ERROR;
 8004cb6:	2001      	movs	r0, #1
}
 8004cb8:	e8bd 86f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r9, sl, pc}

08004cbc <I2C_WaitOnMasterAddressFlagUntilTimeout>:
{
 8004cbc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8004cc0:	4604      	mov	r4, r0
 8004cc2:	460f      	mov	r7, r1
 8004cc4:	4616      	mov	r6, r2
 8004cc6:	4698      	mov	r8, r3
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 8004cc8:	6825      	ldr	r5, [r4, #0]
 8004cca:	6968      	ldr	r0, [r5, #20]
 8004ccc:	ea27 0000 	bic.w	r0, r7, r0
 8004cd0:	b280      	uxth	r0, r0
 8004cd2:	b1c0      	cbz	r0, 8004d06 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x4a>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8004cd4:	696b      	ldr	r3, [r5, #20]
 8004cd6:	055a      	lsls	r2, r3, #21
 8004cd8:	d517      	bpl.n	8004d0a <I2C_WaitOnMasterAddressFlagUntilTimeout+0x4e>
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8004cda:	682b      	ldr	r3, [r5, #0]
 8004cdc:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 8004ce0:	602b      	str	r3, [r5, #0]
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8004ce2:	f46f 6380 	mvn.w	r3, #1024	@ 0x400
 8004ce6:	616b      	str	r3, [r5, #20]
      hi2c->State               = HAL_I2C_STATE_READY;
 8004ce8:	2220      	movs	r2, #32
      hi2c->PreviousState       = I2C_STATE_NONE;
 8004cea:	2300      	movs	r3, #0
 8004cec:	6323      	str	r3, [r4, #48]	@ 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 8004cee:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 8004cf2:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8004cf6:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8004cf8:	f043 0304 	orr.w	r3, r3, #4
          hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8004cfc:	6423      	str	r3, [r4, #64]	@ 0x40
          __HAL_UNLOCK(hi2c);
 8004cfe:	2300      	movs	r3, #0
 8004d00:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
      return HAL_ERROR;
 8004d04:	2001      	movs	r0, #1
}
 8004d06:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if (Timeout != HAL_MAX_DELAY)
 8004d0a:	1c73      	adds	r3, r6, #1
 8004d0c:	d0dd      	beq.n	8004cca <I2C_WaitOnMasterAddressFlagUntilTimeout+0xe>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8004d0e:	f7ff fd0d 	bl	800472c <HAL_GetTick>
 8004d12:	eba0 0008 	sub.w	r0, r0, r8
 8004d16:	42b0      	cmp	r0, r6
 8004d18:	d801      	bhi.n	8004d1e <I2C_WaitOnMasterAddressFlagUntilTimeout+0x62>
 8004d1a:	2e00      	cmp	r6, #0
 8004d1c:	d1d4      	bne.n	8004cc8 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xc>
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET))
 8004d1e:	6823      	ldr	r3, [r4, #0]
 8004d20:	695a      	ldr	r2, [r3, #20]
 8004d22:	ea27 0202 	bic.w	r2, r7, r2
 8004d26:	b292      	uxth	r2, r2
 8004d28:	2a00      	cmp	r2, #0
 8004d2a:	d0cd      	beq.n	8004cc8 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xc>
          hi2c->PreviousState       = I2C_STATE_NONE;
 8004d2c:	2300      	movs	r3, #0
          hi2c->State               = HAL_I2C_STATE_READY;
 8004d2e:	2220      	movs	r2, #32
          hi2c->PreviousState       = I2C_STATE_NONE;
 8004d30:	6323      	str	r3, [r4, #48]	@ 0x30
          hi2c->State               = HAL_I2C_STATE_READY;
 8004d32:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
          hi2c->Mode                = HAL_I2C_MODE_NONE;
 8004d36:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
          hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8004d3a:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8004d3c:	4313      	orrs	r3, r2
 8004d3e:	e7dd      	b.n	8004cfc <I2C_WaitOnMasterAddressFlagUntilTimeout+0x40>

08004d40 <I2C_WaitOnTXEFlagUntilTimeout>:
{
 8004d40:	b570      	push	{r4, r5, r6, lr}
 8004d42:	4604      	mov	r4, r0
 8004d44:	460d      	mov	r5, r1
 8004d46:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8004d48:	6823      	ldr	r3, [r4, #0]
 8004d4a:	695b      	ldr	r3, [r3, #20]
 8004d4c:	061b      	lsls	r3, r3, #24
 8004d4e:	d501      	bpl.n	8004d54 <I2C_WaitOnTXEFlagUntilTimeout+0x14>
  return HAL_OK;
 8004d50:	2000      	movs	r0, #0
 8004d52:	e01e      	b.n	8004d92 <I2C_WaitOnTXEFlagUntilTimeout+0x52>
    if (I2C_IsAcknowledgeFailed(hi2c) != HAL_OK)
 8004d54:	4620      	mov	r0, r4
 8004d56:	f7ff ff57 	bl	8004c08 <I2C_IsAcknowledgeFailed>
 8004d5a:	b9c8      	cbnz	r0, 8004d90 <I2C_WaitOnTXEFlagUntilTimeout+0x50>
    if (Timeout != HAL_MAX_DELAY)
 8004d5c:	1c6a      	adds	r2, r5, #1
 8004d5e:	d0f3      	beq.n	8004d48 <I2C_WaitOnTXEFlagUntilTimeout+0x8>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8004d60:	f7ff fce4 	bl	800472c <HAL_GetTick>
 8004d64:	1b80      	subs	r0, r0, r6
 8004d66:	42a8      	cmp	r0, r5
 8004d68:	d801      	bhi.n	8004d6e <I2C_WaitOnTXEFlagUntilTimeout+0x2e>
 8004d6a:	2d00      	cmp	r5, #0
 8004d6c:	d1ec      	bne.n	8004d48 <I2C_WaitOnTXEFlagUntilTimeout+0x8>
        if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET))
 8004d6e:	6823      	ldr	r3, [r4, #0]
 8004d70:	695b      	ldr	r3, [r3, #20]
 8004d72:	f013 0380 	ands.w	r3, r3, #128	@ 0x80
 8004d76:	d1e7      	bne.n	8004d48 <I2C_WaitOnTXEFlagUntilTimeout+0x8>
          hi2c->State               = HAL_I2C_STATE_READY;
 8004d78:	2220      	movs	r2, #32
          hi2c->PreviousState       = I2C_STATE_NONE;
 8004d7a:	6323      	str	r3, [r4, #48]	@ 0x30
          hi2c->State               = HAL_I2C_STATE_READY;
 8004d7c:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
          hi2c->Mode                = HAL_I2C_MODE_NONE;
 8004d80:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
          hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8004d84:	6c22      	ldr	r2, [r4, #64]	@ 0x40
          __HAL_UNLOCK(hi2c);
 8004d86:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
          hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8004d8a:	f042 0220 	orr.w	r2, r2, #32
 8004d8e:	6422      	str	r2, [r4, #64]	@ 0x40
      return HAL_ERROR;
 8004d90:	2001      	movs	r0, #1
}
 8004d92:	bd70      	pop	{r4, r5, r6, pc}

08004d94 <I2C_RequestMemoryWrite>:
{
 8004d94:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8004d98:	4615      	mov	r5, r2
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8004d9a:	6802      	ldr	r2, [r0, #0]
{
 8004d9c:	b085      	sub	sp, #20
 8004d9e:	e9dd 780c 	ldrd	r7, r8, [sp, #48]	@ 0x30
 8004da2:	4699      	mov	r9, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8004da4:	6813      	ldr	r3, [r2, #0]
 8004da6:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8004daa:	6013      	str	r3, [r2, #0]
{
 8004dac:	460e      	mov	r6, r1
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8004dae:	463b      	mov	r3, r7
 8004db0:	f8cd 8000 	str.w	r8, [sp]
 8004db4:	2200      	movs	r2, #0
 8004db6:	f04f 1101 	mov.w	r1, #65537	@ 0x10001
{
 8004dba:	4604      	mov	r4, r0
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8004dbc:	f7ff ff3e 	bl	8004c3c <I2C_WaitOnFlagUntilTimeout>
 8004dc0:	6823      	ldr	r3, [r4, #0]
 8004dc2:	b138      	cbz	r0, 8004dd4 <I2C_RequestMemoryWrite+0x40>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8004dc4:	681b      	ldr	r3, [r3, #0]
 8004dc6:	05db      	lsls	r3, r3, #23
 8004dc8:	d502      	bpl.n	8004dd0 <I2C_RequestMemoryWrite+0x3c>
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 8004dca:	f44f 7300 	mov.w	r3, #512	@ 0x200
 8004dce:	6423      	str	r3, [r4, #64]	@ 0x40
    return HAL_TIMEOUT;
 8004dd0:	2603      	movs	r6, #3
 8004dd2:	e020      	b.n	8004e16 <I2C_RequestMemoryWrite+0x82>
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 8004dd4:	f006 06fe 	and.w	r6, r6, #254	@ 0xfe
 8004dd8:	611e      	str	r6, [r3, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 8004dda:	491a      	ldr	r1, [pc, #104]	@ (8004e44 <I2C_RequestMemoryWrite+0xb0>)
 8004ddc:	4643      	mov	r3, r8
 8004dde:	463a      	mov	r2, r7
 8004de0:	4620      	mov	r0, r4
 8004de2:	f7ff ff6b 	bl	8004cbc <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8004de6:	b9a8      	cbnz	r0, 8004e14 <I2C_RequestMemoryWrite+0x80>
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8004de8:	6823      	ldr	r3, [r4, #0]
 8004dea:	9003      	str	r0, [sp, #12]
 8004dec:	695a      	ldr	r2, [r3, #20]
 8004dee:	9203      	str	r2, [sp, #12]
 8004df0:	699b      	ldr	r3, [r3, #24]
 8004df2:	9303      	str	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8004df4:	4642      	mov	r2, r8
 8004df6:	4639      	mov	r1, r7
 8004df8:	4620      	mov	r0, r4
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8004dfa:	9b03      	ldr	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8004dfc:	f7ff ffa0 	bl	8004d40 <I2C_WaitOnTXEFlagUntilTimeout>
 8004e00:	4606      	mov	r6, r0
 8004e02:	b160      	cbz	r0, 8004e1e <I2C_RequestMemoryWrite+0x8a>
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8004e04:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8004e06:	2b04      	cmp	r3, #4
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8004e08:	bf01      	itttt	eq
 8004e0a:	6822      	ldreq	r2, [r4, #0]
 8004e0c:	6813      	ldreq	r3, [r2, #0]
 8004e0e:	f443 7300 	orreq.w	r3, r3, #512	@ 0x200
 8004e12:	6013      	streq	r3, [r2, #0]
    return HAL_ERROR;
 8004e14:	2601      	movs	r6, #1
}
 8004e16:	4630      	mov	r0, r6
 8004e18:	b005      	add	sp, #20
 8004e1a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8004e1e:	f1b9 0f01 	cmp.w	r9, #1
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8004e22:	6823      	ldr	r3, [r4, #0]
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8004e24:	d102      	bne.n	8004e2c <I2C_RequestMemoryWrite+0x98>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8004e26:	b2ed      	uxtb	r5, r5
 8004e28:	611d      	str	r5, [r3, #16]
 8004e2a:	e7f4      	b.n	8004e16 <I2C_RequestMemoryWrite+0x82>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 8004e2c:	0a2a      	lsrs	r2, r5, #8
 8004e2e:	611a      	str	r2, [r3, #16]
    if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8004e30:	4639      	mov	r1, r7
 8004e32:	4642      	mov	r2, r8
 8004e34:	4620      	mov	r0, r4
 8004e36:	f7ff ff83 	bl	8004d40 <I2C_WaitOnTXEFlagUntilTimeout>
 8004e3a:	2800      	cmp	r0, #0
 8004e3c:	d1e2      	bne.n	8004e04 <I2C_RequestMemoryWrite+0x70>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8004e3e:	6823      	ldr	r3, [r4, #0]
 8004e40:	e7f1      	b.n	8004e26 <I2C_RequestMemoryWrite+0x92>
 8004e42:	bf00      	nop
 8004e44:	00010002 	.word	0x00010002

08004e48 <I2C_RequestMemoryRead>:
{
 8004e48:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8004e4c:	469a      	mov	sl, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8004e4e:	6803      	ldr	r3, [r0, #0]
{
 8004e50:	4615      	mov	r5, r2
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8004e52:	681a      	ldr	r2, [r3, #0]
 8004e54:	f442 6280 	orr.w	r2, r2, #1024	@ 0x400
 8004e58:	601a      	str	r2, [r3, #0]
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8004e5a:	681a      	ldr	r2, [r3, #0]
{
 8004e5c:	e9dd 780c 	ldrd	r7, r8, [sp, #48]	@ 0x30
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8004e60:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 8004e64:	601a      	str	r2, [r3, #0]
{
 8004e66:	460e      	mov	r6, r1
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8004e68:	463b      	mov	r3, r7
 8004e6a:	f8cd 8000 	str.w	r8, [sp]
 8004e6e:	2200      	movs	r2, #0
 8004e70:	f04f 1101 	mov.w	r1, #65537	@ 0x10001
{
 8004e74:	4604      	mov	r4, r0
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8004e76:	f7ff fee1 	bl	8004c3c <I2C_WaitOnFlagUntilTimeout>
 8004e7a:	6823      	ldr	r3, [r4, #0]
 8004e7c:	b138      	cbz	r0, 8004e8e <I2C_RequestMemoryRead+0x46>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8004e7e:	681b      	ldr	r3, [r3, #0]
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8004e80:	05db      	lsls	r3, r3, #23
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 8004e82:	bf44      	itt	mi
 8004e84:	f44f 7300 	movmi.w	r3, #512	@ 0x200
 8004e88:	6423      	strmi	r3, [r4, #64]	@ 0x40
    return HAL_TIMEOUT;
 8004e8a:	2003      	movs	r0, #3
 8004e8c:	e021      	b.n	8004ed2 <I2C_RequestMemoryRead+0x8a>
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 8004e8e:	fa5f f986 	uxtb.w	r9, r6
 8004e92:	f006 06fe 	and.w	r6, r6, #254	@ 0xfe
 8004e96:	611e      	str	r6, [r3, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 8004e98:	492b      	ldr	r1, [pc, #172]	@ (8004f48 <I2C_RequestMemoryRead+0x100>)
 8004e9a:	4643      	mov	r3, r8
 8004e9c:	463a      	mov	r2, r7
 8004e9e:	4620      	mov	r0, r4
 8004ea0:	f7ff ff0c 	bl	8004cbc <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8004ea4:	b9a0      	cbnz	r0, 8004ed0 <I2C_RequestMemoryRead+0x88>
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8004ea6:	6823      	ldr	r3, [r4, #0]
 8004ea8:	9003      	str	r0, [sp, #12]
 8004eaa:	695a      	ldr	r2, [r3, #20]
 8004eac:	9203      	str	r2, [sp, #12]
 8004eae:	699b      	ldr	r3, [r3, #24]
 8004eb0:	9303      	str	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8004eb2:	4642      	mov	r2, r8
 8004eb4:	4639      	mov	r1, r7
 8004eb6:	4620      	mov	r0, r4
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8004eb8:	9b03      	ldr	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8004eba:	f7ff ff41 	bl	8004d40 <I2C_WaitOnTXEFlagUntilTimeout>
 8004ebe:	b158      	cbz	r0, 8004ed8 <I2C_RequestMemoryRead+0x90>
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8004ec0:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8004ec2:	2b04      	cmp	r3, #4
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8004ec4:	bf01      	itttt	eq
 8004ec6:	6822      	ldreq	r2, [r4, #0]
 8004ec8:	6813      	ldreq	r3, [r2, #0]
 8004eca:	f443 7300 	orreq.w	r3, r3, #512	@ 0x200
 8004ece:	6013      	streq	r3, [r2, #0]
    return HAL_ERROR;
 8004ed0:	2001      	movs	r0, #1
}
 8004ed2:	b004      	add	sp, #16
 8004ed4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8004ed8:	f1ba 0f01 	cmp.w	sl, #1
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8004edc:	6823      	ldr	r3, [r4, #0]
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8004ede:	d11a      	bne.n	8004f16 <I2C_RequestMemoryRead+0xce>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8004ee0:	b2ed      	uxtb	r5, r5
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8004ee2:	4642      	mov	r2, r8
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8004ee4:	611d      	str	r5, [r3, #16]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8004ee6:	4639      	mov	r1, r7
 8004ee8:	4620      	mov	r0, r4
 8004eea:	f7ff ff29 	bl	8004d40 <I2C_WaitOnTXEFlagUntilTimeout>
 8004eee:	4602      	mov	r2, r0
 8004ef0:	2800      	cmp	r0, #0
 8004ef2:	d1e5      	bne.n	8004ec0 <I2C_RequestMemoryRead+0x78>
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8004ef4:	6821      	ldr	r1, [r4, #0]
 8004ef6:	680b      	ldr	r3, [r1, #0]
 8004ef8:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8004efc:	600b      	str	r3, [r1, #0]
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8004efe:	4620      	mov	r0, r4
 8004f00:	f8cd 8000 	str.w	r8, [sp]
 8004f04:	463b      	mov	r3, r7
 8004f06:	f04f 1101 	mov.w	r1, #65537	@ 0x10001
 8004f0a:	f7ff fe97 	bl	8004c3c <I2C_WaitOnFlagUntilTimeout>
 8004f0e:	6822      	ldr	r2, [r4, #0]
 8004f10:	b160      	cbz	r0, 8004f2c <I2C_RequestMemoryRead+0xe4>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8004f12:	6813      	ldr	r3, [r2, #0]
 8004f14:	e7b4      	b.n	8004e80 <I2C_RequestMemoryRead+0x38>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 8004f16:	0a2a      	lsrs	r2, r5, #8
 8004f18:	611a      	str	r2, [r3, #16]
    if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8004f1a:	4639      	mov	r1, r7
 8004f1c:	4642      	mov	r2, r8
 8004f1e:	4620      	mov	r0, r4
 8004f20:	f7ff ff0e 	bl	8004d40 <I2C_WaitOnTXEFlagUntilTimeout>
 8004f24:	2800      	cmp	r0, #0
 8004f26:	d1cb      	bne.n	8004ec0 <I2C_RequestMemoryRead+0x78>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8004f28:	6823      	ldr	r3, [r4, #0]
 8004f2a:	e7d9      	b.n	8004ee0 <I2C_RequestMemoryRead+0x98>
  hi2c->Instance->DR = I2C_7BIT_ADD_READ(DevAddress);
 8004f2c:	f049 0301 	orr.w	r3, r9, #1
 8004f30:	6113      	str	r3, [r2, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 8004f32:	4905      	ldr	r1, [pc, #20]	@ (8004f48 <I2C_RequestMemoryRead+0x100>)
 8004f34:	4643      	mov	r3, r8
 8004f36:	463a      	mov	r2, r7
 8004f38:	4620      	mov	r0, r4
 8004f3a:	f7ff febf 	bl	8004cbc <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8004f3e:	3800      	subs	r0, #0
 8004f40:	bf18      	it	ne
 8004f42:	2001      	movne	r0, #1
 8004f44:	e7c5      	b.n	8004ed2 <I2C_RequestMemoryRead+0x8a>
 8004f46:	bf00      	nop
 8004f48:	00010002 	.word	0x00010002

08004f4c <I2C_WaitOnBTFFlagUntilTimeout>:
{
 8004f4c:	b570      	push	{r4, r5, r6, lr}
 8004f4e:	4604      	mov	r4, r0
 8004f50:	460d      	mov	r5, r1
 8004f52:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 8004f54:	6823      	ldr	r3, [r4, #0]
 8004f56:	695b      	ldr	r3, [r3, #20]
 8004f58:	075b      	lsls	r3, r3, #29
 8004f5a:	d501      	bpl.n	8004f60 <I2C_WaitOnBTFFlagUntilTimeout+0x14>
  return HAL_OK;
 8004f5c:	2000      	movs	r0, #0
 8004f5e:	e01e      	b.n	8004f9e <I2C_WaitOnBTFFlagUntilTimeout+0x52>
    if (I2C_IsAcknowledgeFailed(hi2c) != HAL_OK)
 8004f60:	4620      	mov	r0, r4
 8004f62:	f7ff fe51 	bl	8004c08 <I2C_IsAcknowledgeFailed>
 8004f66:	b9c8      	cbnz	r0, 8004f9c <I2C_WaitOnBTFFlagUntilTimeout+0x50>
    if (Timeout != HAL_MAX_DELAY)
 8004f68:	1c6a      	adds	r2, r5, #1
 8004f6a:	d0f3      	beq.n	8004f54 <I2C_WaitOnBTFFlagUntilTimeout+0x8>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8004f6c:	f7ff fbde 	bl	800472c <HAL_GetTick>
 8004f70:	1b80      	subs	r0, r0, r6
 8004f72:	42a8      	cmp	r0, r5
 8004f74:	d801      	bhi.n	8004f7a <I2C_WaitOnBTFFlagUntilTimeout+0x2e>
 8004f76:	2d00      	cmp	r5, #0
 8004f78:	d1ec      	bne.n	8004f54 <I2C_WaitOnBTFFlagUntilTimeout+0x8>
        if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET))
 8004f7a:	6823      	ldr	r3, [r4, #0]
 8004f7c:	695b      	ldr	r3, [r3, #20]
 8004f7e:	f013 0304 	ands.w	r3, r3, #4
 8004f82:	d1e7      	bne.n	8004f54 <I2C_WaitOnBTFFlagUntilTimeout+0x8>
          hi2c->State               = HAL_I2C_STATE_READY;
 8004f84:	2220      	movs	r2, #32
          hi2c->PreviousState       = I2C_STATE_NONE;
 8004f86:	6323      	str	r3, [r4, #48]	@ 0x30
          hi2c->State               = HAL_I2C_STATE_READY;
 8004f88:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
          hi2c->Mode                = HAL_I2C_MODE_NONE;
 8004f8c:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
          hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8004f90:	6c22      	ldr	r2, [r4, #64]	@ 0x40
          __HAL_UNLOCK(hi2c);
 8004f92:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
          hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8004f96:	f042 0220 	orr.w	r2, r2, #32
 8004f9a:	6422      	str	r2, [r4, #64]	@ 0x40
      return HAL_ERROR;
 8004f9c:	2001      	movs	r0, #1
}
 8004f9e:	bd70      	pop	{r4, r5, r6, pc}

08004fa0 <I2C_WaitOnRXNEFlagUntilTimeout>:
{
 8004fa0:	b570      	push	{r4, r5, r6, lr}
 8004fa2:	4604      	mov	r4, r0
 8004fa4:	460d      	mov	r5, r1
 8004fa6:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 8004fa8:	6821      	ldr	r1, [r4, #0]
 8004faa:	694b      	ldr	r3, [r1, #20]
 8004fac:	f013 0340 	ands.w	r3, r3, #64	@ 0x40
 8004fb0:	d001      	beq.n	8004fb6 <I2C_WaitOnRXNEFlagUntilTimeout+0x16>
  return HAL_OK;
 8004fb2:	2000      	movs	r0, #0
 8004fb4:	e011      	b.n	8004fda <I2C_WaitOnRXNEFlagUntilTimeout+0x3a>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 8004fb6:	694a      	ldr	r2, [r1, #20]
 8004fb8:	06d2      	lsls	r2, r2, #27
 8004fba:	d50f      	bpl.n	8004fdc <I2C_WaitOnRXNEFlagUntilTimeout+0x3c>
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 8004fbc:	f06f 0210 	mvn.w	r2, #16
 8004fc0:	614a      	str	r2, [r1, #20]
      hi2c->State               = HAL_I2C_STATE_READY;
 8004fc2:	2220      	movs	r2, #32
      hi2c->PreviousState       = I2C_STATE_NONE;
 8004fc4:	6323      	str	r3, [r4, #48]	@ 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 8004fc6:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 8004fca:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_NONE;
 8004fce:	6c23      	ldr	r3, [r4, #64]	@ 0x40
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8004fd0:	6423      	str	r3, [r4, #64]	@ 0x40
        __HAL_UNLOCK(hi2c);
 8004fd2:	2300      	movs	r3, #0
 8004fd4:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
      return HAL_ERROR;
 8004fd8:	2001      	movs	r0, #1
}
 8004fda:	bd70      	pop	{r4, r5, r6, pc}
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8004fdc:	f7ff fba6 	bl	800472c <HAL_GetTick>
 8004fe0:	1b80      	subs	r0, r0, r6
 8004fe2:	42a8      	cmp	r0, r5
 8004fe4:	d801      	bhi.n	8004fea <I2C_WaitOnRXNEFlagUntilTimeout+0x4a>
 8004fe6:	2d00      	cmp	r5, #0
 8004fe8:	d1de      	bne.n	8004fa8 <I2C_WaitOnRXNEFlagUntilTimeout+0x8>
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET))
 8004fea:	6823      	ldr	r3, [r4, #0]
 8004fec:	695b      	ldr	r3, [r3, #20]
 8004fee:	f013 0340 	ands.w	r3, r3, #64	@ 0x40
 8004ff2:	d1d9      	bne.n	8004fa8 <I2C_WaitOnRXNEFlagUntilTimeout+0x8>
        hi2c->State               = HAL_I2C_STATE_READY;
 8004ff4:	2220      	movs	r2, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 8004ff6:	6323      	str	r3, [r4, #48]	@ 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 8004ff8:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 8004ffc:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8005000:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8005002:	4313      	orrs	r3, r2
 8005004:	e7e4      	b.n	8004fd0 <I2C_WaitOnRXNEFlagUntilTimeout+0x30>
	...

08005008 <HAL_I2C_Init>:
{
 8005008:	b570      	push	{r4, r5, r6, lr}
  if (hi2c == NULL)
 800500a:	4604      	mov	r4, r0
 800500c:	b908      	cbnz	r0, 8005012 <HAL_I2C_Init+0xa>
    return HAL_ERROR;
 800500e:	2001      	movs	r0, #1
}
 8005010:	bd70      	pop	{r4, r5, r6, pc}
  if (hi2c->State == HAL_I2C_STATE_RESET)
 8005012:	f890 303d 	ldrb.w	r3, [r0, #61]	@ 0x3d
 8005016:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 800501a:	b91b      	cbnz	r3, 8005024 <HAL_I2C_Init+0x1c>
    hi2c->Lock = HAL_UNLOCKED;
 800501c:	f880 203c 	strb.w	r2, [r0, #60]	@ 0x3c
    HAL_I2C_MspInit(hi2c);
 8005020:	f7fd fdda 	bl	8002bd8 <HAL_I2C_MspInit>
  hi2c->State = HAL_I2C_STATE_BUSY;
 8005024:	2324      	movs	r3, #36	@ 0x24
 8005026:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
  __HAL_I2C_DISABLE(hi2c);
 800502a:	6823      	ldr	r3, [r4, #0]
 800502c:	681a      	ldr	r2, [r3, #0]
 800502e:	f022 0201 	bic.w	r2, r2, #1
 8005032:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 |= I2C_CR1_SWRST;
 8005034:	681a      	ldr	r2, [r3, #0]
 8005036:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 800503a:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 &= ~I2C_CR1_SWRST;
 800503c:	681a      	ldr	r2, [r3, #0]
 800503e:	f422 4200 	bic.w	r2, r2, #32768	@ 0x8000
 8005042:	601a      	str	r2, [r3, #0]
  pclk1 = HAL_RCC_GetPCLK1Freq();
 8005044:	f001 fb9e 	bl	8006784 <HAL_RCC_GetPCLK1Freq>
  if (I2C_MIN_PCLK_FREQ(pclk1, hi2c->Init.ClockSpeed) == 1U)
 8005048:	4b3f      	ldr	r3, [pc, #252]	@ (8005148 <HAL_I2C_Init+0x140>)
 800504a:	6865      	ldr	r5, [r4, #4]
 800504c:	429d      	cmp	r5, r3
 800504e:	bf94      	ite	ls
 8005050:	4b3e      	ldrls	r3, [pc, #248]	@ (800514c <HAL_I2C_Init+0x144>)
 8005052:	4b3f      	ldrhi	r3, [pc, #252]	@ (8005150 <HAL_I2C_Init+0x148>)
 8005054:	4298      	cmp	r0, r3
 8005056:	bf8c      	ite	hi
 8005058:	2300      	movhi	r3, #0
 800505a:	2301      	movls	r3, #1
 800505c:	2b00      	cmp	r3, #0
 800505e:	d1d6      	bne.n	800500e <HAL_I2C_Init+0x6>
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8005060:	6822      	ldr	r2, [r4, #0]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 8005062:	4e39      	ldr	r6, [pc, #228]	@ (8005148 <HAL_I2C_Init+0x140>)
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8005064:	6851      	ldr	r1, [r2, #4]
  freqrange = I2C_FREQRANGE(pclk1);
 8005066:	4b3b      	ldr	r3, [pc, #236]	@ (8005154 <HAL_I2C_Init+0x14c>)
 8005068:	fbb0 f3f3 	udiv	r3, r0, r3
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 800506c:	f021 013f 	bic.w	r1, r1, #63	@ 0x3f
 8005070:	4319      	orrs	r1, r3
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 8005072:	42b5      	cmp	r5, r6
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8005074:	6051      	str	r1, [r2, #4]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 8005076:	bf88      	it	hi
 8005078:	f44f 7696 	movhi.w	r6, #300	@ 0x12c
 800507c:	6a11      	ldr	r1, [r2, #32]
 800507e:	bf88      	it	hi
 8005080:	4373      	mulhi	r3, r6
 8005082:	f021 013f 	bic.w	r1, r1, #63	@ 0x3f
 8005086:	bf84      	itt	hi
 8005088:	f44f 767a 	movhi.w	r6, #1000	@ 0x3e8
 800508c:	fbb3 f3f6 	udivhi	r3, r3, r6
 8005090:	3301      	adds	r3, #1
 8005092:	430b      	orrs	r3, r1
 8005094:	6213      	str	r3, [r2, #32]
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 8005096:	69d1      	ldr	r1, [r2, #28]
 8005098:	1e43      	subs	r3, r0, #1
 800509a:	482b      	ldr	r0, [pc, #172]	@ (8005148 <HAL_I2C_Init+0x140>)
 800509c:	f421 414f 	bic.w	r1, r1, #52992	@ 0xcf00
 80050a0:	4285      	cmp	r5, r0
 80050a2:	f021 01ff 	bic.w	r1, r1, #255	@ 0xff
 80050a6:	d832      	bhi.n	800510e <HAL_I2C_Init+0x106>
 80050a8:	006d      	lsls	r5, r5, #1
 80050aa:	f640 70fc 	movw	r0, #4092	@ 0xffc
 80050ae:	fbb3 f3f5 	udiv	r3, r3, r5
 80050b2:	3301      	adds	r3, #1
 80050b4:	4203      	tst	r3, r0
 80050b6:	d042      	beq.n	800513e <HAL_I2C_Init+0x136>
 80050b8:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80050bc:	4319      	orrs	r1, r3
 80050be:	61d1      	str	r1, [r2, #28]
  MODIFY_REG(hi2c->Instance->CR1, (I2C_CR1_ENGC | I2C_CR1_NOSTRETCH), (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode));
 80050c0:	e9d4 3007 	ldrd	r3, r0, [r4, #28]
 80050c4:	6811      	ldr	r1, [r2, #0]
 80050c6:	4303      	orrs	r3, r0
 80050c8:	f021 01c0 	bic.w	r1, r1, #192	@ 0xc0
 80050cc:	430b      	orrs	r3, r1
 80050ce:	6013      	str	r3, [r2, #0]
  MODIFY_REG(hi2c->Instance->OAR1, (I2C_OAR1_ADDMODE | I2C_OAR1_ADD8_9 | I2C_OAR1_ADD1_7 | I2C_OAR1_ADD0), (hi2c->Init.AddressingMode | hi2c->Init.OwnAddress1));
 80050d0:	6891      	ldr	r1, [r2, #8]
 80050d2:	e9d4 0303 	ldrd	r0, r3, [r4, #12]
 80050d6:	f421 4103 	bic.w	r1, r1, #33536	@ 0x8300
 80050da:	4303      	orrs	r3, r0
 80050dc:	f021 01ff 	bic.w	r1, r1, #255	@ 0xff
 80050e0:	430b      	orrs	r3, r1
 80050e2:	6093      	str	r3, [r2, #8]
  MODIFY_REG(hi2c->Instance->OAR2, (I2C_OAR2_ENDUAL | I2C_OAR2_ADD2), (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2));
 80050e4:	e9d4 3005 	ldrd	r3, r0, [r4, #20]
 80050e8:	68d1      	ldr	r1, [r2, #12]
 80050ea:	4303      	orrs	r3, r0
 80050ec:	f021 01ff 	bic.w	r1, r1, #255	@ 0xff
 80050f0:	430b      	orrs	r3, r1
 80050f2:	60d3      	str	r3, [r2, #12]
  __HAL_I2C_ENABLE(hi2c);
 80050f4:	6813      	ldr	r3, [r2, #0]
 80050f6:	f043 0301 	orr.w	r3, r3, #1
 80050fa:	6013      	str	r3, [r2, #0]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 80050fc:	2000      	movs	r0, #0
  hi2c->State = HAL_I2C_STATE_READY;
 80050fe:	2320      	movs	r3, #32
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8005100:	6420      	str	r0, [r4, #64]	@ 0x40
  hi2c->State = HAL_I2C_STATE_READY;
 8005102:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
  hi2c->PreviousState = I2C_STATE_NONE;
 8005106:	6320      	str	r0, [r4, #48]	@ 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
 8005108:	f884 003e 	strb.w	r0, [r4, #62]	@ 0x3e
  return HAL_OK;
 800510c:	e780      	b.n	8005010 <HAL_I2C_Init+0x8>
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 800510e:	68a0      	ldr	r0, [r4, #8]
 8005110:	b950      	cbnz	r0, 8005128 <HAL_I2C_Init+0x120>
 8005112:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8005116:	fbb3 f3f5 	udiv	r3, r3, r5
 800511a:	3301      	adds	r3, #1
 800511c:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8005120:	b17b      	cbz	r3, 8005142 <HAL_I2C_Init+0x13a>
 8005122:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 8005126:	e7c9      	b.n	80050bc <HAL_I2C_Init+0xb4>
 8005128:	2019      	movs	r0, #25
 800512a:	4368      	muls	r0, r5
 800512c:	fbb3 f3f0 	udiv	r3, r3, r0
 8005130:	3301      	adds	r3, #1
 8005132:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8005136:	b123      	cbz	r3, 8005142 <HAL_I2C_Init+0x13a>
 8005138:	f443 4340 	orr.w	r3, r3, #49152	@ 0xc000
 800513c:	e7be      	b.n	80050bc <HAL_I2C_Init+0xb4>
 800513e:	2304      	movs	r3, #4
 8005140:	e7bc      	b.n	80050bc <HAL_I2C_Init+0xb4>
 8005142:	2301      	movs	r3, #1
 8005144:	e7ba      	b.n	80050bc <HAL_I2C_Init+0xb4>
 8005146:	bf00      	nop
 8005148:	000186a0 	.word	0x000186a0
 800514c:	001e847f 	.word	0x001e847f
 8005150:	003d08ff 	.word	0x003d08ff
 8005154:	000f4240 	.word	0x000f4240

08005158 <HAL_I2C_Mem_Write>:
{
 8005158:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800515c:	4604      	mov	r4, r0
 800515e:	4699      	mov	r9, r3
 8005160:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 8005162:	460f      	mov	r7, r1
 8005164:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 8005166:	f7ff fae1 	bl	800472c <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 800516a:	f894 303d 	ldrb.w	r3, [r4, #61]	@ 0x3d
 800516e:	2b20      	cmp	r3, #32
  uint32_t tickstart = HAL_GetTick();
 8005170:	4605      	mov	r5, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 8005172:	d003      	beq.n	800517c <HAL_I2C_Mem_Write+0x24>
      return HAL_BUSY;
 8005174:	2002      	movs	r0, #2
}
 8005176:	b003      	add	sp, #12
 8005178:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 800517c:	9000      	str	r0, [sp, #0]
 800517e:	493c      	ldr	r1, [pc, #240]	@ (8005270 <HAL_I2C_Mem_Write+0x118>)
 8005180:	2319      	movs	r3, #25
 8005182:	2201      	movs	r2, #1
 8005184:	4620      	mov	r0, r4
 8005186:	f7ff fd59 	bl	8004c3c <I2C_WaitOnFlagUntilTimeout>
 800518a:	2800      	cmp	r0, #0
 800518c:	d1f2      	bne.n	8005174 <HAL_I2C_Mem_Write+0x1c>
    __HAL_LOCK(hi2c);
 800518e:	f894 303c 	ldrb.w	r3, [r4, #60]	@ 0x3c
 8005192:	2b01      	cmp	r3, #1
 8005194:	d0ee      	beq.n	8005174 <HAL_I2C_Mem_Write+0x1c>
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8005196:	6820      	ldr	r0, [r4, #0]
    __HAL_LOCK(hi2c);
 8005198:	2301      	movs	r3, #1
 800519a:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 800519e:	6803      	ldr	r3, [r0, #0]
 80051a0:	07d9      	lsls	r1, r3, #31
      __HAL_I2C_ENABLE(hi2c);
 80051a2:	bf5e      	ittt	pl
 80051a4:	6803      	ldrpl	r3, [r0, #0]
 80051a6:	f043 0301 	orrpl.w	r3, r3, #1
 80051aa:	6003      	strpl	r3, [r0, #0]
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 80051ac:	6803      	ldr	r3, [r0, #0]
 80051ae:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 80051b2:	6003      	str	r3, [r0, #0]
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 80051b4:	2321      	movs	r3, #33	@ 0x21
 80051b6:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 80051ba:	2340      	movs	r3, #64	@ 0x40
 80051bc:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 80051c0:	2300      	movs	r3, #0
 80051c2:	6423      	str	r3, [r4, #64]	@ 0x40
    hi2c->pBuffPtr    = pData;
 80051c4:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80051c6:	6263      	str	r3, [r4, #36]	@ 0x24
    hi2c->XferCount   = Size;
 80051c8:	f8bd 302c 	ldrh.w	r3, [sp, #44]	@ 0x2c
 80051cc:	8563      	strh	r3, [r4, #42]	@ 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 80051ce:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 80051d0:	8523      	strh	r3, [r4, #40]	@ 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 80051d2:	4b28      	ldr	r3, [pc, #160]	@ (8005274 <HAL_I2C_Mem_Write+0x11c>)
 80051d4:	62e3      	str	r3, [r4, #44]	@ 0x2c
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 80051d6:	4642      	mov	r2, r8
 80051d8:	e9cd 6500 	strd	r6, r5, [sp]
 80051dc:	464b      	mov	r3, r9
 80051de:	4639      	mov	r1, r7
 80051e0:	4620      	mov	r0, r4
 80051e2:	f7ff fdd7 	bl	8004d94 <I2C_RequestMemoryWrite>
 80051e6:	2800      	cmp	r0, #0
 80051e8:	d02a      	beq.n	8005240 <HAL_I2C_Mem_Write+0xe8>
      return HAL_ERROR;
 80051ea:	2001      	movs	r0, #1
 80051ec:	e7c3      	b.n	8005176 <HAL_I2C_Mem_Write+0x1e>
      if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 80051ee:	f7ff fda7 	bl	8004d40 <I2C_WaitOnTXEFlagUntilTimeout>
 80051f2:	b140      	cbz	r0, 8005206 <HAL_I2C_Mem_Write+0xae>
        if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 80051f4:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 80051f6:	2b04      	cmp	r3, #4
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80051f8:	bf01      	itttt	eq
 80051fa:	6822      	ldreq	r2, [r4, #0]
 80051fc:	6813      	ldreq	r3, [r2, #0]
 80051fe:	f443 7300 	orreq.w	r3, r3, #512	@ 0x200
 8005202:	6013      	streq	r3, [r2, #0]
 8005204:	e7f1      	b.n	80051ea <HAL_I2C_Mem_Write+0x92>
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 8005206:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8005208:	6827      	ldr	r7, [r4, #0]
 800520a:	461a      	mov	r2, r3
 800520c:	f812 1b01 	ldrb.w	r1, [r2], #1
 8005210:	6139      	str	r1, [r7, #16]
      hi2c->pBuffPtr++;
 8005212:	6262      	str	r2, [r4, #36]	@ 0x24
      hi2c->XferCount--;
 8005214:	8d62      	ldrh	r2, [r4, #42]	@ 0x2a
      hi2c->XferSize--;
 8005216:	8d21      	ldrh	r1, [r4, #40]	@ 0x28
      hi2c->XferCount--;
 8005218:	3a01      	subs	r2, #1
 800521a:	b292      	uxth	r2, r2
 800521c:	8562      	strh	r2, [r4, #42]	@ 0x2a
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 800521e:	697a      	ldr	r2, [r7, #20]
      hi2c->XferSize--;
 8005220:	1e48      	subs	r0, r1, #1
 8005222:	b280      	uxth	r0, r0
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 8005224:	0752      	lsls	r2, r2, #29
      hi2c->XferSize--;
 8005226:	8520      	strh	r0, [r4, #40]	@ 0x28
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 8005228:	d50a      	bpl.n	8005240 <HAL_I2C_Mem_Write+0xe8>
 800522a:	b148      	cbz	r0, 8005240 <HAL_I2C_Mem_Write+0xe8>
        hi2c->Instance->DR = *hi2c->pBuffPtr;
 800522c:	785a      	ldrb	r2, [r3, #1]
 800522e:	613a      	str	r2, [r7, #16]
        hi2c->pBuffPtr++;
 8005230:	3302      	adds	r3, #2
 8005232:	6263      	str	r3, [r4, #36]	@ 0x24
        hi2c->XferCount--;
 8005234:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 8005236:	3b01      	subs	r3, #1
        hi2c->XferSize--;
 8005238:	3902      	subs	r1, #2
        hi2c->XferCount--;
 800523a:	b29b      	uxth	r3, r3
        hi2c->XferSize--;
 800523c:	8521      	strh	r1, [r4, #40]	@ 0x28
        hi2c->XferCount--;
 800523e:	8563      	strh	r3, [r4, #42]	@ 0x2a
    while (hi2c->XferSize > 0U)
 8005240:	8d23      	ldrh	r3, [r4, #40]	@ 0x28
      if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8005242:	462a      	mov	r2, r5
 8005244:	4631      	mov	r1, r6
 8005246:	4620      	mov	r0, r4
    while (hi2c->XferSize > 0U)
 8005248:	2b00      	cmp	r3, #0
 800524a:	d1d0      	bne.n	80051ee <HAL_I2C_Mem_Write+0x96>
    if (I2C_WaitOnBTFFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 800524c:	f7ff fe7e 	bl	8004f4c <I2C_WaitOnBTFFlagUntilTimeout>
 8005250:	2800      	cmp	r0, #0
 8005252:	d1cf      	bne.n	80051f4 <HAL_I2C_Mem_Write+0x9c>
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8005254:	6822      	ldr	r2, [r4, #0]
 8005256:	6813      	ldr	r3, [r2, #0]
 8005258:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 800525c:	6013      	str	r3, [r2, #0]
    hi2c->State = HAL_I2C_STATE_READY;
 800525e:	2320      	movs	r3, #32
 8005260:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
    __HAL_UNLOCK(hi2c);
 8005264:	f884 003c 	strb.w	r0, [r4, #60]	@ 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 8005268:	f884 003e 	strb.w	r0, [r4, #62]	@ 0x3e
    return HAL_OK;
 800526c:	e783      	b.n	8005176 <HAL_I2C_Mem_Write+0x1e>
 800526e:	bf00      	nop
 8005270:	00100002 	.word	0x00100002
 8005274:	ffff0000 	.word	0xffff0000

08005278 <HAL_I2C_Mem_Read>:
{
 8005278:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800527c:	4604      	mov	r4, r0
 800527e:	b087      	sub	sp, #28
 8005280:	4699      	mov	r9, r3
 8005282:	9f10      	ldr	r7, [sp, #64]	@ 0x40
 8005284:	460d      	mov	r5, r1
 8005286:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 8005288:	f7ff fa50 	bl	800472c <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 800528c:	f894 303d 	ldrb.w	r3, [r4, #61]	@ 0x3d
 8005290:	2b20      	cmp	r3, #32
  uint32_t tickstart = HAL_GetTick();
 8005292:	4606      	mov	r6, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 8005294:	d004      	beq.n	80052a0 <HAL_I2C_Mem_Read+0x28>
      return HAL_BUSY;
 8005296:	2502      	movs	r5, #2
}
 8005298:	4628      	mov	r0, r5
 800529a:	b007      	add	sp, #28
 800529c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 80052a0:	9000      	str	r0, [sp, #0]
 80052a2:	497a      	ldr	r1, [pc, #488]	@ (800548c <HAL_I2C_Mem_Read+0x214>)
 80052a4:	2319      	movs	r3, #25
 80052a6:	2201      	movs	r2, #1
 80052a8:	4620      	mov	r0, r4
 80052aa:	f7ff fcc7 	bl	8004c3c <I2C_WaitOnFlagUntilTimeout>
 80052ae:	2800      	cmp	r0, #0
 80052b0:	d1f1      	bne.n	8005296 <HAL_I2C_Mem_Read+0x1e>
    __HAL_LOCK(hi2c);
 80052b2:	f894 303c 	ldrb.w	r3, [r4, #60]	@ 0x3c
 80052b6:	2b01      	cmp	r3, #1
 80052b8:	d0ed      	beq.n	8005296 <HAL_I2C_Mem_Read+0x1e>
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 80052ba:	6820      	ldr	r0, [r4, #0]
    __HAL_LOCK(hi2c);
 80052bc:	2301      	movs	r3, #1
 80052be:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 80052c2:	6803      	ldr	r3, [r0, #0]
 80052c4:	07db      	lsls	r3, r3, #31
      __HAL_I2C_ENABLE(hi2c);
 80052c6:	bf5e      	ittt	pl
 80052c8:	6803      	ldrpl	r3, [r0, #0]
 80052ca:	f043 0301 	orrpl.w	r3, r3, #1
 80052ce:	6003      	strpl	r3, [r0, #0]
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 80052d0:	6803      	ldr	r3, [r0, #0]
 80052d2:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 80052d6:	6003      	str	r3, [r0, #0]
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 80052d8:	2322      	movs	r3, #34	@ 0x22
 80052da:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 80052de:	2340      	movs	r3, #64	@ 0x40
 80052e0:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 80052e4:	2300      	movs	r3, #0
 80052e6:	6423      	str	r3, [r4, #64]	@ 0x40
    hi2c->pBuffPtr    = pData;
 80052e8:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80052ea:	6263      	str	r3, [r4, #36]	@ 0x24
    hi2c->XferCount   = Size;
 80052ec:	f8bd 303c 	ldrh.w	r3, [sp, #60]	@ 0x3c
 80052f0:	8563      	strh	r3, [r4, #42]	@ 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 80052f2:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 80052f4:	8523      	strh	r3, [r4, #40]	@ 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 80052f6:	4b66      	ldr	r3, [pc, #408]	@ (8005490 <HAL_I2C_Mem_Read+0x218>)
 80052f8:	62e3      	str	r3, [r4, #44]	@ 0x2c
    if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 80052fa:	4629      	mov	r1, r5
 80052fc:	e9cd 7600 	strd	r7, r6, [sp]
 8005300:	464b      	mov	r3, r9
 8005302:	4642      	mov	r2, r8
 8005304:	4620      	mov	r0, r4
 8005306:	f7ff fd9f 	bl	8004e48 <I2C_RequestMemoryRead>
 800530a:	4605      	mov	r5, r0
 800530c:	b108      	cbz	r0, 8005312 <HAL_I2C_Mem_Read+0x9a>
      return HAL_ERROR;
 800530e:	2501      	movs	r5, #1
 8005310:	e7c2      	b.n	8005298 <HAL_I2C_Mem_Read+0x20>
    if (hi2c->XferSize == 0U)
 8005312:	8d22      	ldrh	r2, [r4, #40]	@ 0x28
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8005314:	6823      	ldr	r3, [r4, #0]
    if (hi2c->XferSize == 0U)
 8005316:	b9b2      	cbnz	r2, 8005346 <HAL_I2C_Mem_Read+0xce>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8005318:	9002      	str	r0, [sp, #8]
 800531a:	695a      	ldr	r2, [r3, #20]
 800531c:	9202      	str	r2, [sp, #8]
 800531e:	699a      	ldr	r2, [r3, #24]
 8005320:	9202      	str	r2, [sp, #8]
 8005322:	9a02      	ldr	r2, [sp, #8]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8005324:	681a      	ldr	r2, [r3, #0]
 8005326:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 800532a:	601a      	str	r2, [r3, #0]
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 800532c:	f8df 8164 	ldr.w	r8, [pc, #356]	@ 8005494 <HAL_I2C_Mem_Read+0x21c>
    while (hi2c->XferSize > 0U)
 8005330:	8d23      	ldrh	r3, [r4, #40]	@ 0x28
 8005332:	2b00      	cmp	r3, #0
 8005334:	d12c      	bne.n	8005390 <HAL_I2C_Mem_Read+0x118>
    hi2c->State = HAL_I2C_STATE_READY;
 8005336:	2220      	movs	r2, #32
 8005338:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
    __HAL_UNLOCK(hi2c);
 800533c:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 8005340:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
    return HAL_OK;
 8005344:	e7a8      	b.n	8005298 <HAL_I2C_Mem_Read+0x20>
    else if (hi2c->XferSize == 1U)
 8005346:	2a01      	cmp	r2, #1
 8005348:	d10a      	bne.n	8005360 <HAL_I2C_Mem_Read+0xe8>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800534a:	681a      	ldr	r2, [r3, #0]
 800534c:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 8005350:	601a      	str	r2, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8005352:	9003      	str	r0, [sp, #12]
 8005354:	695a      	ldr	r2, [r3, #20]
 8005356:	9203      	str	r2, [sp, #12]
 8005358:	699a      	ldr	r2, [r3, #24]
 800535a:	9203      	str	r2, [sp, #12]
 800535c:	9a03      	ldr	r2, [sp, #12]
 800535e:	e7e1      	b.n	8005324 <HAL_I2C_Mem_Read+0xac>
    else if (hi2c->XferSize == 2U)
 8005360:	2a02      	cmp	r2, #2
 8005362:	d10e      	bne.n	8005382 <HAL_I2C_Mem_Read+0x10a>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8005364:	681a      	ldr	r2, [r3, #0]
 8005366:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 800536a:	601a      	str	r2, [r3, #0]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 800536c:	681a      	ldr	r2, [r3, #0]
 800536e:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 8005372:	601a      	str	r2, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8005374:	9004      	str	r0, [sp, #16]
 8005376:	695a      	ldr	r2, [r3, #20]
 8005378:	9204      	str	r2, [sp, #16]
 800537a:	699b      	ldr	r3, [r3, #24]
 800537c:	9304      	str	r3, [sp, #16]
 800537e:	9b04      	ldr	r3, [sp, #16]
 8005380:	e7d4      	b.n	800532c <HAL_I2C_Mem_Read+0xb4>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8005382:	9005      	str	r0, [sp, #20]
 8005384:	695a      	ldr	r2, [r3, #20]
 8005386:	9205      	str	r2, [sp, #20]
 8005388:	699b      	ldr	r3, [r3, #24]
 800538a:	9305      	str	r3, [sp, #20]
 800538c:	9b05      	ldr	r3, [sp, #20]
 800538e:	e7cd      	b.n	800532c <HAL_I2C_Mem_Read+0xb4>
      if (hi2c->XferSize <= 3U)
 8005390:	2b03      	cmp	r3, #3
 8005392:	d856      	bhi.n	8005442 <HAL_I2C_Mem_Read+0x1ca>
        if (hi2c->XferSize == 1U)
 8005394:	2b01      	cmp	r3, #1
 8005396:	d115      	bne.n	80053c4 <HAL_I2C_Mem_Read+0x14c>
          if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8005398:	4632      	mov	r2, r6
 800539a:	4639      	mov	r1, r7
 800539c:	4620      	mov	r0, r4
 800539e:	f7ff fdff 	bl	8004fa0 <I2C_WaitOnRXNEFlagUntilTimeout>
 80053a2:	2800      	cmp	r0, #0
 80053a4:	d1b3      	bne.n	800530e <HAL_I2C_Mem_Read+0x96>
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 80053a6:	6823      	ldr	r3, [r4, #0]
 80053a8:	691a      	ldr	r2, [r3, #16]
 80053aa:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 80053ac:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 80053ae:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 80053b0:	3301      	adds	r3, #1
 80053b2:	6263      	str	r3, [r4, #36]	@ 0x24
          hi2c->XferSize--;
 80053b4:	8d23      	ldrh	r3, [r4, #40]	@ 0x28
 80053b6:	3b01      	subs	r3, #1
 80053b8:	8523      	strh	r3, [r4, #40]	@ 0x28
          hi2c->XferCount--;
 80053ba:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 80053bc:	3b01      	subs	r3, #1
 80053be:	b29b      	uxth	r3, r3
 80053c0:	8563      	strh	r3, [r4, #42]	@ 0x2a
 80053c2:	e7b5      	b.n	8005330 <HAL_I2C_Mem_Read+0xb8>
        else if (hi2c->XferSize == 2U)
 80053c4:	2b02      	cmp	r3, #2
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 80053c6:	9600      	str	r6, [sp, #0]
 80053c8:	463b      	mov	r3, r7
 80053ca:	f04f 0200 	mov.w	r2, #0
 80053ce:	4641      	mov	r1, r8
 80053d0:	4620      	mov	r0, r4
        else if (hi2c->XferSize == 2U)
 80053d2:	d119      	bne.n	8005408 <HAL_I2C_Mem_Read+0x190>
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 80053d4:	f7ff fc32 	bl	8004c3c <I2C_WaitOnFlagUntilTimeout>
 80053d8:	2800      	cmp	r0, #0
 80053da:	d198      	bne.n	800530e <HAL_I2C_Mem_Read+0x96>
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80053dc:	6823      	ldr	r3, [r4, #0]
 80053de:	681a      	ldr	r2, [r3, #0]
 80053e0:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 80053e4:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 80053e6:	691a      	ldr	r2, [r3, #16]
 80053e8:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 80053ea:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 80053ec:	6a62      	ldr	r2, [r4, #36]	@ 0x24
 80053ee:	1c53      	adds	r3, r2, #1
 80053f0:	6263      	str	r3, [r4, #36]	@ 0x24
          hi2c->XferSize--;
 80053f2:	8d23      	ldrh	r3, [r4, #40]	@ 0x28
 80053f4:	3b01      	subs	r3, #1
 80053f6:	8523      	strh	r3, [r4, #40]	@ 0x28
          hi2c->XferCount--;
 80053f8:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 80053fa:	3b01      	subs	r3, #1
 80053fc:	b29b      	uxth	r3, r3
 80053fe:	8563      	strh	r3, [r4, #42]	@ 0x2a
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8005400:	6823      	ldr	r3, [r4, #0]
 8005402:	691b      	ldr	r3, [r3, #16]
 8005404:	7053      	strb	r3, [r2, #1]
          hi2c->pBuffPtr++;
 8005406:	e7d2      	b.n	80053ae <HAL_I2C_Mem_Read+0x136>
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8005408:	f7ff fc18 	bl	8004c3c <I2C_WaitOnFlagUntilTimeout>
 800540c:	4602      	mov	r2, r0
 800540e:	2800      	cmp	r0, #0
 8005410:	f47f af7d 	bne.w	800530e <HAL_I2C_Mem_Read+0x96>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8005414:	6823      	ldr	r3, [r4, #0]
 8005416:	6819      	ldr	r1, [r3, #0]
 8005418:	f421 6180 	bic.w	r1, r1, #1024	@ 0x400
 800541c:	6019      	str	r1, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800541e:	6919      	ldr	r1, [r3, #16]
 8005420:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8005422:	7019      	strb	r1, [r3, #0]
          hi2c->pBuffPtr++;
 8005424:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8005426:	3301      	adds	r3, #1
 8005428:	6263      	str	r3, [r4, #36]	@ 0x24
          hi2c->XferSize--;
 800542a:	8d23      	ldrh	r3, [r4, #40]	@ 0x28
 800542c:	3b01      	subs	r3, #1
 800542e:	8523      	strh	r3, [r4, #40]	@ 0x28
          hi2c->XferCount--;
 8005430:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 8005432:	3b01      	subs	r3, #1
 8005434:	b29b      	uxth	r3, r3
 8005436:	8563      	strh	r3, [r4, #42]	@ 0x2a
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8005438:	4641      	mov	r1, r8
 800543a:	9600      	str	r6, [sp, #0]
 800543c:	463b      	mov	r3, r7
 800543e:	4620      	mov	r0, r4
 8005440:	e7c8      	b.n	80053d4 <HAL_I2C_Mem_Read+0x15c>
        if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8005442:	4632      	mov	r2, r6
 8005444:	4639      	mov	r1, r7
 8005446:	4620      	mov	r0, r4
 8005448:	f7ff fdaa 	bl	8004fa0 <I2C_WaitOnRXNEFlagUntilTimeout>
 800544c:	2800      	cmp	r0, #0
 800544e:	f47f af5e 	bne.w	800530e <HAL_I2C_Mem_Read+0x96>
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8005452:	6823      	ldr	r3, [r4, #0]
 8005454:	691a      	ldr	r2, [r3, #16]
 8005456:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8005458:	701a      	strb	r2, [r3, #0]
        hi2c->XferCount--;
 800545a:	8d62      	ldrh	r2, [r4, #42]	@ 0x2a
        hi2c->pBuffPtr++;
 800545c:	6a61      	ldr	r1, [r4, #36]	@ 0x24
        hi2c->XferCount--;
 800545e:	3a01      	subs	r2, #1
 8005460:	b292      	uxth	r2, r2
        hi2c->pBuffPtr++;
 8005462:	1c4b      	adds	r3, r1, #1
        hi2c->XferCount--;
 8005464:	8562      	strh	r2, [r4, #42]	@ 0x2a
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 8005466:	6822      	ldr	r2, [r4, #0]
        hi2c->pBuffPtr++;
 8005468:	6263      	str	r3, [r4, #36]	@ 0x24
        hi2c->XferSize--;
 800546a:	8d23      	ldrh	r3, [r4, #40]	@ 0x28
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 800546c:	6950      	ldr	r0, [r2, #20]
        hi2c->XferSize--;
 800546e:	3b01      	subs	r3, #1
 8005470:	b29b      	uxth	r3, r3
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 8005472:	0740      	lsls	r0, r0, #29
        hi2c->XferSize--;
 8005474:	8523      	strh	r3, [r4, #40]	@ 0x28
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 8005476:	f57f af5b 	bpl.w	8005330 <HAL_I2C_Mem_Read+0xb8>
          if (hi2c->XferSize == 3U)
 800547a:	2b03      	cmp	r3, #3
            CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800547c:	bf02      	ittt	eq
 800547e:	6813      	ldreq	r3, [r2, #0]
 8005480:	f423 6380 	biceq.w	r3, r3, #1024	@ 0x400
 8005484:	6013      	streq	r3, [r2, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8005486:	6913      	ldr	r3, [r2, #16]
 8005488:	704b      	strb	r3, [r1, #1]
 800548a:	e790      	b.n	80053ae <HAL_I2C_Mem_Read+0x136>
 800548c:	00100002 	.word	0x00100002
 8005490:	ffff0000 	.word	0xffff0000
 8005494:	00010004 	.word	0x00010004

08005498 <HAL_I2CEx_ConfigAnalogFilter>:
  *                the configuration information for the specified I2Cx peripheral.
  * @param  AnalogFilter new state of the Analog filter.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2CEx_ConfigAnalogFilter(I2C_HandleTypeDef *hi2c, uint32_t AnalogFilter)
{
 8005498:	b510      	push	{r4, lr}
  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_ANALOG_FILTER(AnalogFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 800549a:	f890 303d 	ldrb.w	r3, [r0, #61]	@ 0x3d
 800549e:	2b20      	cmp	r3, #32
 80054a0:	b2dc      	uxtb	r4, r3
 80054a2:	d116      	bne.n	80054d2 <HAL_I2CEx_ConfigAnalogFilter+0x3a>
  {
    hi2c->State = HAL_I2C_STATE_BUSY;
 80054a4:	2324      	movs	r3, #36	@ 0x24
 80054a6:	f880 303d 	strb.w	r3, [r0, #61]	@ 0x3d

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
 80054aa:	6803      	ldr	r3, [r0, #0]
 80054ac:	681a      	ldr	r2, [r3, #0]
 80054ae:	f022 0201 	bic.w	r2, r2, #1
 80054b2:	601a      	str	r2, [r3, #0]

    /* Reset I2Cx ANOFF bit */
    hi2c->Instance->FLTR &= ~(I2C_FLTR_ANOFF);
 80054b4:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 80054b6:	f022 0210 	bic.w	r2, r2, #16
 80054ba:	625a      	str	r2, [r3, #36]	@ 0x24

    /* Disable the analog filter */
    hi2c->Instance->FLTR |= AnalogFilter;
 80054bc:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 80054be:	4311      	orrs	r1, r2
 80054c0:	6259      	str	r1, [r3, #36]	@ 0x24

    __HAL_I2C_ENABLE(hi2c);
 80054c2:	681a      	ldr	r2, [r3, #0]
 80054c4:	f042 0201 	orr.w	r2, r2, #1
 80054c8:	601a      	str	r2, [r3, #0]

    hi2c->State = HAL_I2C_STATE_READY;
 80054ca:	f880 403d 	strb.w	r4, [r0, #61]	@ 0x3d

    return HAL_OK;
 80054ce:	2000      	movs	r0, #0
  }
  else
  {
    return HAL_BUSY;
  }
}
 80054d0:	bd10      	pop	{r4, pc}
    return HAL_BUSY;
 80054d2:	2002      	movs	r0, #2
 80054d4:	e7fc      	b.n	80054d0 <HAL_I2CEx_ConfigAnalogFilter+0x38>

080054d6 <HAL_I2CEx_ConfigDigitalFilter>:
  *                the configuration information for the specified I2Cx peripheral.
  * @param  DigitalFilter Coefficient of digital noise filter between 0x00 and 0x0F.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2CEx_ConfigDigitalFilter(I2C_HandleTypeDef *hi2c, uint32_t DigitalFilter)
{
 80054d6:	b530      	push	{r4, r5, lr}

  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_DIGITAL_FILTER(DigitalFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 80054d8:	f890 303d 	ldrb.w	r3, [r0, #61]	@ 0x3d
 80054dc:	2b20      	cmp	r3, #32
 80054de:	b2dc      	uxtb	r4, r3
 80054e0:	d116      	bne.n	8005510 <HAL_I2CEx_ConfigDigitalFilter+0x3a>
  {
    hi2c->State = HAL_I2C_STATE_BUSY;

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
 80054e2:	6802      	ldr	r2, [r0, #0]
    hi2c->State = HAL_I2C_STATE_BUSY;
 80054e4:	2324      	movs	r3, #36	@ 0x24
 80054e6:	f880 303d 	strb.w	r3, [r0, #61]	@ 0x3d
    __HAL_I2C_DISABLE(hi2c);
 80054ea:	6813      	ldr	r3, [r2, #0]
 80054ec:	f023 0301 	bic.w	r3, r3, #1
 80054f0:	6013      	str	r3, [r2, #0]

    /* Get the old register value */
    tmpreg = hi2c->Instance->FLTR;
 80054f2:	6a55      	ldr	r5, [r2, #36]	@ 0x24

    /* Reset I2Cx DNF bit [3:0] */
    tmpreg &= ~(I2C_FLTR_DNF);
 80054f4:	f64f 73f0 	movw	r3, #65520	@ 0xfff0
 80054f8:	402b      	ands	r3, r5

    /* Set I2Cx DNF coefficient */
    tmpreg |= DigitalFilter;
 80054fa:	430b      	orrs	r3, r1

    /* Store the new register value */
    hi2c->Instance->FLTR = tmpreg;
 80054fc:	b29b      	uxth	r3, r3
 80054fe:	6253      	str	r3, [r2, #36]	@ 0x24

    __HAL_I2C_ENABLE(hi2c);
 8005500:	6813      	ldr	r3, [r2, #0]
 8005502:	f043 0301 	orr.w	r3, r3, #1
 8005506:	6013      	str	r3, [r2, #0]

    hi2c->State = HAL_I2C_STATE_READY;
 8005508:	f880 403d 	strb.w	r4, [r0, #61]	@ 0x3d

    return HAL_OK;
 800550c:	2000      	movs	r0, #0
  }
  else
  {
    return HAL_BUSY;
  }
}
 800550e:	bd30      	pop	{r4, r5, pc}
    return HAL_BUSY;
 8005510:	2002      	movs	r0, #2
 8005512:	e7fc      	b.n	800550e <HAL_I2CEx_ConfigDigitalFilter+0x38>

08005514 <LTDC_SetConfig>:
  uint32_t tmp;
  uint32_t tmp1;
  uint32_t tmp2;

  /* Configure the horizontal start and stop position */
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8005514:	6800      	ldr	r0, [r0, #0]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 8005516:	f8d1 c000 	ldr.w	ip, [r1]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800551a:	01d2      	lsls	r2, r2, #7
 800551c:	3284      	adds	r2, #132	@ 0x84
 800551e:	1883      	adds	r3, r0, r2
{
 8005520:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8005524:	68c6      	ldr	r6, [r0, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8005526:	685d      	ldr	r5, [r3, #4]
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8005528:	684c      	ldr	r4, [r1, #4]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);

  /* Configure the default color values */
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
  tmp2 = (pLayerCfg->Alpha0 << 24U);
 800552a:	f8d1 9018 	ldr.w	r9, [r1, #24]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800552e:	f405 4570 	and.w	r5, r5, #61440	@ 0xf000
 8005532:	605d      	str	r5, [r3, #4]
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8005534:	68c5      	ldr	r5, [r0, #12]
 8005536:	f10c 0701 	add.w	r7, ip, #1
 800553a:	f3c5 450b 	ubfx	r5, r5, #16, #12
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800553e:	f3c6 460b 	ubfx	r6, r6, #16, #12
 8005542:	4426      	add	r6, r4
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8005544:	443d      	add	r5, r7
 8005546:	ea45 4506 	orr.w	r5, r5, r6, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 800554a:	605d      	str	r5, [r3, #4]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 800554c:	68c6      	ldr	r6, [r0, #12]
 800554e:	68cd      	ldr	r5, [r1, #12]
 8005550:	f3c6 060a 	ubfx	r6, r6, #0, #11
 8005554:	442e      	add	r6, r5
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
 8005556:	689d      	ldr	r5, [r3, #8]
 8005558:	f405 4570 	and.w	r5, r5, #61440	@ 0xf000
 800555c:	609d      	str	r5, [r3, #8]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
 800555e:	68c7      	ldr	r7, [r0, #12]
 8005560:	688d      	ldr	r5, [r1, #8]
 8005562:	f3c7 070a 	ubfx	r7, r7, #0, #11
 8005566:	3501      	adds	r5, #1
 8005568:	443d      	add	r5, r7
 800556a:	ea45 4506 	orr.w	r5, r5, r6, lsl #16
 800556e:	609d      	str	r5, [r3, #8]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 8005570:	691d      	ldr	r5, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 8005572:	690e      	ldr	r6, [r1, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 8005574:	f025 0507 	bic.w	r5, r5, #7
 8005578:	611d      	str	r5, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 800557a:	f04f 0e00 	mov.w	lr, #0
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 800557e:	611e      	str	r6, [r3, #16]
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
 8005580:	f891 7032 	ldrb.w	r7, [r1, #50]	@ 0x32
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 8005584:	699d      	ldr	r5, [r3, #24]
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
 8005586:	f891 8031 	ldrb.w	r8, [r1, #49]	@ 0x31
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 800558a:	f8c3 e018 	str.w	lr, [r3, #24]
                                         LTDC_LxDCCR_DCALPHA);
  LTDC_LAYER(hltdc, LayerIdx)->DCCR = (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2);
 800558e:	f891 5030 	ldrb.w	r5, [r1, #48]	@ 0x30
 8005592:	ea45 6509 	orr.w	r5, r5, r9, lsl #24
 8005596:	ea45 2508 	orr.w	r5, r5, r8, lsl #8
 800559a:	ea45 4507 	orr.w	r5, r5, r7, lsl #16
 800559e:	619d      	str	r5, [r3, #24]

  /* Specifies the constant alpha value */
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
 80055a0:	695d      	ldr	r5, [r3, #20]
 80055a2:	f025 05ff 	bic.w	r5, r5, #255	@ 0xff
 80055a6:	615d      	str	r5, [r3, #20]
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);
 80055a8:	694d      	ldr	r5, [r1, #20]
 80055aa:	615d      	str	r5, [r3, #20]

  /* Specifies the blending factors */
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
 80055ac:	69dd      	ldr	r5, [r3, #28]
 80055ae:	f425 65e0 	bic.w	r5, r5, #1792	@ 0x700
 80055b2:	f025 0507 	bic.w	r5, r5, #7
 80055b6:	61dd      	str	r5, [r3, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
 80055b8:	e9d1 5707 	ldrd	r5, r7, [r1, #28]
 80055bc:	433d      	orrs	r5, r7
 80055be:	61dd      	str	r5, [r3, #28]

  /* Configure the color frame buffer start address */
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 80055c0:	6a9d      	ldr	r5, [r3, #40]	@ 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 80055c2:	6a4d      	ldr	r5, [r1, #36]	@ 0x24
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 80055c4:	f8c3 e028 	str.w	lr, [r3, #40]	@ 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 80055c8:	2e07      	cmp	r6, #7
 80055ca:	629d      	str	r5, [r3, #40]	@ 0x28

  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 80055cc:	bf9c      	itt	ls
 80055ce:	4d0e      	ldrls	r5, [pc, #56]	@ (8005608 <LTDC_SetConfig+0xf4>)
 80055d0:	5dae      	ldrbls	r6, [r5, r6]
  {
    tmp = 1U;
  }

  /* Configure the color frame buffer pitch in byte */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 80055d2:	6add      	ldr	r5, [r3, #44]	@ 0x2c
 80055d4:	f005 25e0 	and.w	r5, r5, #3758153728	@ 0xe000e000
 80055d8:	62dd      	str	r5, [r3, #44]	@ 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 80055da:	bf88      	it	hi
 80055dc:	2601      	movhi	r6, #1
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 80055de:	6a8d      	ldr	r5, [r1, #40]	@ 0x28
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
  /* Configure the frame buffer line number */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 80055e0:	6ac9      	ldr	r1, [r1, #44]	@ 0x2c
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 80055e2:	eba4 040c 	sub.w	r4, r4, ip
 80055e6:	4374      	muls	r4, r6
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 80055e8:	4375      	muls	r5, r6
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 80055ea:	3403      	adds	r4, #3
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 80055ec:	ea44 4405 	orr.w	r4, r4, r5, lsl #16
 80055f0:	62dc      	str	r4, [r3, #44]	@ 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
 80055f2:	6b1c      	ldr	r4, [r3, #48]	@ 0x30
 80055f4:	f36f 040a 	bfc	r4, #0, #11
 80055f8:	631c      	str	r4, [r3, #48]	@ 0x30
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 80055fa:	6319      	str	r1, [r3, #48]	@ 0x30

  /* Enable LTDC_Layer by setting LEN bit */
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
 80055fc:	5883      	ldr	r3, [r0, r2]
 80055fe:	f043 0301 	orr.w	r3, r3, #1
 8005602:	5083      	str	r3, [r0, r2]
}
 8005604:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8005608:	08024f10 	.word	0x08024f10

0800560c <HAL_LTDC_Init>:
{
 800560c:	b538      	push	{r3, r4, r5, lr}
  if (hltdc == NULL)
 800560e:	4604      	mov	r4, r0
 8005610:	2800      	cmp	r0, #0
 8005612:	d063      	beq.n	80056dc <HAL_LTDC_Init+0xd0>
  if (hltdc->State == HAL_LTDC_STATE_RESET)
 8005614:	f890 30a1 	ldrb.w	r3, [r0, #161]	@ 0xa1
 8005618:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 800561c:	b91b      	cbnz	r3, 8005626 <HAL_LTDC_Init+0x1a>
    hltdc->Lock = HAL_UNLOCKED;
 800561e:	f880 20a0 	strb.w	r2, [r0, #160]	@ 0xa0
    HAL_LTDC_MspInit(hltdc);
 8005622:	f7fd fb35 	bl	8002c90 <HAL_LTDC_MspInit>
  hltdc->State = HAL_LTDC_STATE_BUSY;
 8005626:	2302      	movs	r3, #2
 8005628:	f884 30a1 	strb.w	r3, [r4, #161]	@ 0xa1
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 800562c:	6823      	ldr	r3, [r4, #0]
 800562e:	699a      	ldr	r2, [r3, #24]
 8005630:	f022 4270 	bic.w	r2, r2, #4026531840	@ 0xf0000000
 8005634:	619a      	str	r2, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 8005636:	e9d4 2001 	ldrd	r2, r0, [r4, #4]
 800563a:	4302      	orrs	r2, r0
 800563c:	68e0      	ldr	r0, [r4, #12]
 800563e:	6999      	ldr	r1, [r3, #24]
 8005640:	4302      	orrs	r2, r0
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
 8005642:	6920      	ldr	r0, [r4, #16]
 8005644:	4302      	orrs	r2, r0
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 8005646:	430a      	orrs	r2, r1
 8005648:	619a      	str	r2, [r3, #24]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 800564a:	689a      	ldr	r2, [r3, #8]
 800564c:	4924      	ldr	r1, [pc, #144]	@ (80056e0 <HAL_LTDC_Init+0xd4>)
  tmp = (hltdc->Init.HorizontalSync << 16U);
 800564e:	6960      	ldr	r0, [r4, #20]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 8005650:	400a      	ands	r2, r1
 8005652:	609a      	str	r2, [r3, #8]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
 8005654:	689a      	ldr	r2, [r3, #8]
 8005656:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800565a:	69a0      	ldr	r0, [r4, #24]
 800565c:	4302      	orrs	r2, r0
 800565e:	609a      	str	r2, [r3, #8]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 8005660:	68da      	ldr	r2, [r3, #12]
  tmp = (hltdc->Init.AccumulatedHBP << 16U);
 8005662:	69e0      	ldr	r0, [r4, #28]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 8005664:	400a      	ands	r2, r1
 8005666:	60da      	str	r2, [r3, #12]
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
 8005668:	68da      	ldr	r2, [r3, #12]
 800566a:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800566e:	6a20      	ldr	r0, [r4, #32]
 8005670:	4302      	orrs	r2, r0
 8005672:	60da      	str	r2, [r3, #12]
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 8005674:	691a      	ldr	r2, [r3, #16]
  tmp = (hltdc->Init.AccumulatedActiveW << 16U);
 8005676:	6a60      	ldr	r0, [r4, #36]	@ 0x24
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 8005678:	400a      	ands	r2, r1
 800567a:	611a      	str	r2, [r3, #16]
  hltdc->Instance->AWCR |= (tmp | hltdc->Init.AccumulatedActiveH);
 800567c:	691a      	ldr	r2, [r3, #16]
 800567e:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8005682:	6aa0      	ldr	r0, [r4, #40]	@ 0x28
 8005684:	4302      	orrs	r2, r0
 8005686:	611a      	str	r2, [r3, #16]
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
 8005688:	695a      	ldr	r2, [r3, #20]
 800568a:	400a      	ands	r2, r1
 800568c:	615a      	str	r2, [r3, #20]
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 800568e:	695a      	ldr	r2, [r3, #20]
  tmp = (hltdc->Init.TotalWidth << 16U);
 8005690:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 8005692:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8005696:	6b21      	ldr	r1, [r4, #48]	@ 0x30
 8005698:	430a      	orrs	r2, r1
 800569a:	615a      	str	r2, [r3, #20]
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 800569c:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
 800569e:	f894 0035 	ldrb.w	r0, [r4, #53]	@ 0x35
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
 80056a2:	f894 1036 	ldrb.w	r1, [r4, #54]	@ 0x36
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 80056a6:	f002 427f 	and.w	r2, r2, #4278190080	@ 0xff000000
 80056aa:	62da      	str	r2, [r3, #44]	@ 0x2c
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
 80056ac:	6add      	ldr	r5, [r3, #44]	@ 0x2c
 80056ae:	f894 2034 	ldrb.w	r2, [r4, #52]	@ 0x34
 80056b2:	432a      	orrs	r2, r5
 80056b4:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
 80056b8:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 80056bc:	62da      	str	r2, [r3, #44]	@ 0x2c
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_TE | LTDC_IT_FU);
 80056be:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 80056c0:	f042 0206 	orr.w	r2, r2, #6
 80056c4:	635a      	str	r2, [r3, #52]	@ 0x34
  __HAL_LTDC_ENABLE(hltdc);
 80056c6:	699a      	ldr	r2, [r3, #24]
 80056c8:	f042 0201 	orr.w	r2, r2, #1
 80056cc:	619a      	str	r2, [r3, #24]
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 80056ce:	2000      	movs	r0, #0
  hltdc->State = HAL_LTDC_STATE_READY;
 80056d0:	2301      	movs	r3, #1
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 80056d2:	f8c4 00a4 	str.w	r0, [r4, #164]	@ 0xa4
  hltdc->State = HAL_LTDC_STATE_READY;
 80056d6:	f884 30a1 	strb.w	r3, [r4, #161]	@ 0xa1
}
 80056da:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 80056dc:	2001      	movs	r0, #1
 80056de:	e7fc      	b.n	80056da <HAL_LTDC_Init+0xce>
 80056e0:	f000f800 	.word	0xf000f800

080056e4 <HAL_LTDC_ErrorCallback>:
__weak void HAL_LTDC_ErrorCallback(LTDC_HandleTypeDef *hltdc)
 80056e4:	4770      	bx	lr

080056e6 <HAL_LTDC_ReloadEventCallback>:
__weak void HAL_LTDC_ReloadEventCallback(LTDC_HandleTypeDef *hltdc)
 80056e6:	4770      	bx	lr

080056e8 <HAL_LTDC_IRQHandler>:
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 80056e8:	6803      	ldr	r3, [r0, #0]
{
 80056ea:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 80056ec:	6b9e      	ldr	r6, [r3, #56]	@ 0x38
  uint32_t itsources = READ_REG(hltdc->Instance->IER);
 80056ee:	6b5d      	ldr	r5, [r3, #52]	@ 0x34
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 80056f0:	0772      	lsls	r2, r6, #29
{
 80056f2:	4604      	mov	r4, r0
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 80056f4:	d514      	bpl.n	8005720 <HAL_LTDC_IRQHandler+0x38>
 80056f6:	0769      	lsls	r1, r5, #29
 80056f8:	d512      	bpl.n	8005720 <HAL_LTDC_IRQHandler+0x38>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_TE);
 80056fa:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 80056fc:	f022 0204 	bic.w	r2, r2, #4
 8005700:	635a      	str	r2, [r3, #52]	@ 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_TE);
 8005702:	2204      	movs	r2, #4
 8005704:	63da      	str	r2, [r3, #60]	@ 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_TE;
 8005706:	f8d0 30a4 	ldr.w	r3, [r0, #164]	@ 0xa4
 800570a:	f043 0301 	orr.w	r3, r3, #1
 800570e:	f8c0 30a4 	str.w	r3, [r0, #164]	@ 0xa4
    __HAL_UNLOCK(hltdc);
 8005712:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
 8005714:	f880 20a1 	strb.w	r2, [r0, #161]	@ 0xa1
    __HAL_UNLOCK(hltdc);
 8005718:	f880 30a0 	strb.w	r3, [r0, #160]	@ 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 800571c:	f7ff ffe2 	bl	80056e4 <HAL_LTDC_ErrorCallback>
  if (((isrflags & LTDC_ISR_FUIF) != 0U) && ((itsources & LTDC_IER_FUIE) != 0U))
 8005720:	07b2      	lsls	r2, r6, #30
 8005722:	d516      	bpl.n	8005752 <HAL_LTDC_IRQHandler+0x6a>
 8005724:	07ab      	lsls	r3, r5, #30
 8005726:	d514      	bpl.n	8005752 <HAL_LTDC_IRQHandler+0x6a>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
 8005728:	6823      	ldr	r3, [r4, #0]
 800572a:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 800572c:	f022 0202 	bic.w	r2, r2, #2
 8005730:	635a      	str	r2, [r3, #52]	@ 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_FU);
 8005732:	2202      	movs	r2, #2
 8005734:	63da      	str	r2, [r3, #60]	@ 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_FU;
 8005736:	f8d4 30a4 	ldr.w	r3, [r4, #164]	@ 0xa4
 800573a:	4313      	orrs	r3, r2
 800573c:	f8c4 30a4 	str.w	r3, [r4, #164]	@ 0xa4
    hltdc->State = HAL_LTDC_STATE_ERROR;
 8005740:	2304      	movs	r3, #4
 8005742:	f884 30a1 	strb.w	r3, [r4, #161]	@ 0xa1
    __HAL_UNLOCK(hltdc);
 8005746:	2300      	movs	r3, #0
 8005748:	f884 30a0 	strb.w	r3, [r4, #160]	@ 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 800574c:	4620      	mov	r0, r4
 800574e:	f7ff ffc9 	bl	80056e4 <HAL_LTDC_ErrorCallback>
  if (((isrflags & LTDC_ISR_LIF) != 0U) && ((itsources & LTDC_IER_LIE) != 0U))
 8005752:	07f0      	lsls	r0, r6, #31
 8005754:	d510      	bpl.n	8005778 <HAL_LTDC_IRQHandler+0x90>
 8005756:	07e9      	lsls	r1, r5, #31
 8005758:	d50e      	bpl.n	8005778 <HAL_LTDC_IRQHandler+0x90>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 800575a:	6823      	ldr	r3, [r4, #0]
 800575c:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 800575e:	f022 0201 	bic.w	r2, r2, #1
 8005762:	635a      	str	r2, [r3, #52]	@ 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_LI);
 8005764:	2201      	movs	r2, #1
 8005766:	63da      	str	r2, [r3, #60]	@ 0x3c
    __HAL_UNLOCK(hltdc);
 8005768:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_READY;
 800576a:	f884 20a1 	strb.w	r2, [r4, #161]	@ 0xa1
    __HAL_UNLOCK(hltdc);
 800576e:	f884 30a0 	strb.w	r3, [r4, #160]	@ 0xa0
    HAL_LTDC_LineEventCallback(hltdc);
 8005772:	4620      	mov	r0, r4
 8005774:	f7fc fc14 	bl	8001fa0 <HAL_LTDC_LineEventCallback>
  if (((isrflags & LTDC_ISR_RRIF) != 0U) && ((itsources & LTDC_IER_RRIE) != 0U))
 8005778:	0732      	lsls	r2, r6, #28
 800577a:	d511      	bpl.n	80057a0 <HAL_LTDC_IRQHandler+0xb8>
 800577c:	072b      	lsls	r3, r5, #28
 800577e:	d50f      	bpl.n	80057a0 <HAL_LTDC_IRQHandler+0xb8>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 8005780:	6823      	ldr	r3, [r4, #0]
 8005782:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8005784:	f022 0208 	bic.w	r2, r2, #8
 8005788:	635a      	str	r2, [r3, #52]	@ 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
 800578a:	2208      	movs	r2, #8
 800578c:	63da      	str	r2, [r3, #60]	@ 0x3c
    hltdc->State = HAL_LTDC_STATE_READY;
 800578e:	2301      	movs	r3, #1
 8005790:	f884 30a1 	strb.w	r3, [r4, #161]	@ 0xa1
    __HAL_UNLOCK(hltdc);
 8005794:	2300      	movs	r3, #0
 8005796:	f884 30a0 	strb.w	r3, [r4, #160]	@ 0xa0
    HAL_LTDC_ReloadEventCallback(hltdc);
 800579a:	4620      	mov	r0, r4
 800579c:	f7ff ffa3 	bl	80056e6 <HAL_LTDC_ReloadEventCallback>
}
 80057a0:	bd70      	pop	{r4, r5, r6, pc}

080057a2 <HAL_LTDC_ConfigLayer>:
{
 80057a2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  __HAL_LOCK(hltdc);
 80057a6:	f890 30a0 	ldrb.w	r3, [r0, #160]	@ 0xa0
 80057aa:	2b01      	cmp	r3, #1
{
 80057ac:	4606      	mov	r6, r0
 80057ae:	460f      	mov	r7, r1
 80057b0:	4694      	mov	ip, r2
 80057b2:	f04f 0002 	mov.w	r0, #2
  __HAL_LOCK(hltdc);
 80057b6:	d01f      	beq.n	80057f8 <HAL_LTDC_ConfigLayer+0x56>
 80057b8:	f04f 0801 	mov.w	r8, #1
 80057bc:	f886 80a0 	strb.w	r8, [r6, #160]	@ 0xa0
  hltdc->State = HAL_LTDC_STATE_BUSY;
 80057c0:	f886 00a1 	strb.w	r0, [r6, #161]	@ 0xa1
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 80057c4:	2434      	movs	r4, #52	@ 0x34
 80057c6:	460d      	mov	r5, r1
 80057c8:	fb04 6402 	mla	r4, r4, r2, r6
 80057cc:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80057ce:	3438      	adds	r4, #56	@ 0x38
 80057d0:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80057d2:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80057d4:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80057d6:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80057d8:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80057da:	682b      	ldr	r3, [r5, #0]
 80057dc:	6023      	str	r3, [r4, #0]
  LTDC_SetConfig(hltdc, pLayerCfg, LayerIdx);
 80057de:	4630      	mov	r0, r6
 80057e0:	4662      	mov	r2, ip
 80057e2:	4639      	mov	r1, r7
 80057e4:	f7ff fe96 	bl	8005514 <LTDC_SetConfig>
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 80057e8:	6833      	ldr	r3, [r6, #0]
  __HAL_UNLOCK(hltdc);
 80057ea:	2000      	movs	r0, #0
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 80057ec:	f8c3 8024 	str.w	r8, [r3, #36]	@ 0x24
  hltdc->State  = HAL_LTDC_STATE_READY;
 80057f0:	f886 80a1 	strb.w	r8, [r6, #161]	@ 0xa1
  __HAL_UNLOCK(hltdc);
 80057f4:	f886 00a0 	strb.w	r0, [r6, #160]	@ 0xa0
}
 80057f8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080057fc <HAL_LTDC_ProgramLineEvent>:
  __HAL_LOCK(hltdc);
 80057fc:	f890 20a0 	ldrb.w	r2, [r0, #160]	@ 0xa0
 8005800:	2a01      	cmp	r2, #1
{
 8005802:	4603      	mov	r3, r0
 8005804:	f04f 0002 	mov.w	r0, #2
  __HAL_LOCK(hltdc);
 8005808:	d012      	beq.n	8005830 <HAL_LTDC_ProgramLineEvent+0x34>
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 800580a:	681a      	ldr	r2, [r3, #0]
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800580c:	f883 00a1 	strb.w	r0, [r3, #161]	@ 0xa1
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 8005810:	6b50      	ldr	r0, [r2, #52]	@ 0x34
 8005812:	f020 0001 	bic.w	r0, r0, #1
 8005816:	6350      	str	r0, [r2, #52]	@ 0x34
  LTDC->LIPCR = (uint32_t)Line;
 8005818:	4806      	ldr	r0, [pc, #24]	@ (8005834 <HAL_LTDC_ProgramLineEvent+0x38>)
 800581a:	6401      	str	r1, [r0, #64]	@ 0x40
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
 800581c:	6b51      	ldr	r1, [r2, #52]	@ 0x34
 800581e:	f041 0101 	orr.w	r1, r1, #1
 8005822:	6351      	str	r1, [r2, #52]	@ 0x34
  __HAL_UNLOCK(hltdc);
 8005824:	2000      	movs	r0, #0
  hltdc->State = HAL_LTDC_STATE_READY;
 8005826:	2201      	movs	r2, #1
 8005828:	f883 20a1 	strb.w	r2, [r3, #161]	@ 0xa1
  __HAL_UNLOCK(hltdc);
 800582c:	f883 00a0 	strb.w	r0, [r3, #160]	@ 0xa0
}
 8005830:	4770      	bx	lr
 8005832:	bf00      	nop
 8005834:	40016800 	.word	0x40016800

08005838 <HAL_PCD_Init>:
  *         parameters in the PCD_InitTypeDef and initialize the associated handle.
  * @param  hpcd PCD handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_PCD_Init(PCD_HandleTypeDef *hpcd)
{
 8005838:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
  const USB_OTG_GlobalTypeDef *USBx;
#endif /* defined (USB_OTG_FS) */
  uint8_t i;

  /* Check the PCD handle allocation */
  if (hpcd == NULL)
 800583a:	4604      	mov	r4, r0
 800583c:	b310      	cbz	r0, 8005884 <HAL_PCD_Init+0x4c>

#if defined (USB_OTG_FS)
  USBx = hpcd->Instance;
#endif /* defined (USB_OTG_FS) */

  if (hpcd->State == HAL_PCD_STATE_RESET)
 800583e:	f890 3495 	ldrb.w	r3, [r0, #1173]	@ 0x495
  USBx = hpcd->Instance;
 8005842:	6805      	ldr	r5, [r0, #0]
  if (hpcd->State == HAL_PCD_STATE_RESET)
 8005844:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 8005848:	b91b      	cbnz	r3, 8005852 <HAL_PCD_Init+0x1a>
  {
    /* Allocate lock resource and initialize it */
    hpcd->Lock = HAL_UNLOCKED;
 800584a:	f880 2494 	strb.w	r2, [r0, #1172]	@ 0x494

    /* Init the low level hardware */
    hpcd->MspInitCallback(hpcd);
#else
    /* Init the low level hardware : GPIO, CLOCK, NVIC... */
    HAL_PCD_MspInit(hpcd);
 800584e:	f7fc fc79 	bl	8002144 <HAL_PCD_MspInit>
#endif /* (USE_HAL_PCD_REGISTER_CALLBACKS) */
  }

  hpcd->State = HAL_PCD_STATE_BUSY;
 8005852:	2303      	movs	r3, #3

#if defined (USB_OTG_FS)
  /* Disable DMA mode for FS instance */
  if (USBx == USB_OTG_FS)
 8005854:	f1b5 4fa0 	cmp.w	r5, #1342177280	@ 0x50000000
  hpcd->State = HAL_PCD_STATE_BUSY;
 8005858:	f884 3495 	strb.w	r3, [r4, #1173]	@ 0x495
  {
    hpcd->Init.dma_enable = 0U;
 800585c:	bf04      	itt	eq
 800585e:	2300      	moveq	r3, #0
 8005860:	71a3      	strbeq	r3, [r4, #6]
  }
#endif /* defined (USB_OTG_FS) */

  /* Disable the Interrupts */
  __HAL_PCD_DISABLE(hpcd);
 8005862:	6820      	ldr	r0, [r4, #0]
 8005864:	f001 ff80 	bl	8007768 <USB_DisableGlobalInt>

  /*Init the Core (common init.) */
  if (USB_CoreInit(hpcd->Instance, hpcd->Init) != HAL_OK)
 8005868:	7c23      	ldrb	r3, [r4, #16]
 800586a:	f88d 3000 	strb.w	r3, [sp]
 800586e:	1d25      	adds	r5, r4, #4
 8005870:	e895 000e 	ldmia.w	r5, {r1, r2, r3}
 8005874:	6820      	ldr	r0, [r4, #0]
 8005876:	f001 febc 	bl	80075f2 <USB_CoreInit>
 800587a:	4601      	mov	r1, r0
 800587c:	b130      	cbz	r0, 800588c <HAL_PCD_Init+0x54>
  {
    hpcd->State = HAL_PCD_STATE_ERROR;
 800587e:	2302      	movs	r3, #2
 8005880:	f884 3495 	strb.w	r3, [r4, #1173]	@ 0x495
    return HAL_ERROR;
 8005884:	2501      	movs	r5, #1
          defined(STM32F412Vx) || defined(STM32F412Rx) || defined(STM32F412Cx) || defined(STM32F413xx) ||
          defined(STM32F423xx) */
  (void)USB_DevDisconnect(hpcd->Instance);

  return HAL_OK;
}
 8005886:	4628      	mov	r0, r5
 8005888:	b003      	add	sp, #12
 800588a:	bdf0      	pop	{r4, r5, r6, r7, pc}
  if (USB_SetCurrentMode(hpcd->Instance, USB_DEVICE_MODE) != HAL_OK)
 800588c:	6820      	ldr	r0, [r4, #0]
 800588e:	f001 ff71 	bl	8007774 <USB_SetCurrentMode>
 8005892:	2800      	cmp	r0, #0
 8005894:	d1f3      	bne.n	800587e <HAL_PCD_Init+0x46>
  for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
 8005896:	7926      	ldrb	r6, [r4, #4]
 8005898:	f104 0314 	add.w	r3, r4, #20
    hpcd->IN_ep[i].is_in = 1U;
 800589c:	2701      	movs	r7, #1
    hpcd->IN_ep[i].type = EP_TYPE_CTRL;
 800589e:	4602      	mov	r2, r0
 80058a0:	b2c1      	uxtb	r1, r0
  for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
 80058a2:	428e      	cmp	r6, r1
 80058a4:	f103 0324 	add.w	r3, r3, #36	@ 0x24
 80058a8:	d81b      	bhi.n	80058e2 <HAL_PCD_Init+0xaa>
 80058aa:	2100      	movs	r1, #0
 80058ac:	f504 7315 	add.w	r3, r4, #596	@ 0x254
    hpcd->OUT_ep[i].is_in = 0U;
 80058b0:	460a      	mov	r2, r1
 80058b2:	b2c8      	uxtb	r0, r1
  for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
 80058b4:	4286      	cmp	r6, r0
 80058b6:	f103 0324 	add.w	r3, r3, #36	@ 0x24
 80058ba:	d820      	bhi.n	80058fe <HAL_PCD_Init+0xc6>
  if (USB_DevInit(hpcd->Instance, hpcd->Init) != HAL_OK)
 80058bc:	7c23      	ldrb	r3, [r4, #16]
 80058be:	f88d 3000 	strb.w	r3, [sp]
 80058c2:	e895 000e 	ldmia.w	r5, {r1, r2, r3}
 80058c6:	6820      	ldr	r0, [r4, #0]
 80058c8:	f001 ffd0 	bl	800786c <USB_DevInit>
 80058cc:	4605      	mov	r5, r0
 80058ce:	2800      	cmp	r0, #0
 80058d0:	d1d5      	bne.n	800587e <HAL_PCD_Init+0x46>
  hpcd->State = HAL_PCD_STATE_READY;
 80058d2:	2301      	movs	r3, #1
  hpcd->USB_Address = 0U;
 80058d4:	7460      	strb	r0, [r4, #17]
  (void)USB_DevDisconnect(hpcd->Instance);
 80058d6:	6820      	ldr	r0, [r4, #0]
  hpcd->State = HAL_PCD_STATE_READY;
 80058d8:	f884 3495 	strb.w	r3, [r4, #1173]	@ 0x495
  (void)USB_DevDisconnect(hpcd->Instance);
 80058dc:	f002 fb0a 	bl	8007ef4 <USB_DevDisconnect>
  return HAL_OK;
 80058e0:	e7d1      	b.n	8005886 <HAL_PCD_Init+0x4e>
    hpcd->IN_ep[i].tx_fifo_num = i;
 80058e2:	f823 0c0a 	strh.w	r0, [r3, #-10]
    hpcd->IN_ep[i].xfer_buff = 0U;
 80058e6:	e943 2207 	strd	r2, r2, [r3, #-28]
    hpcd->IN_ep[i].is_in = 1U;
 80058ea:	f803 7c23 	strb.w	r7, [r3, #-35]
    hpcd->IN_ep[i].num = i;
 80058ee:	f803 1c24 	strb.w	r1, [r3, #-36]
    hpcd->IN_ep[i].type = EP_TYPE_CTRL;
 80058f2:	f803 2c20 	strb.w	r2, [r3, #-32]
    hpcd->IN_ep[i].xfer_len = 0U;
 80058f6:	f843 2c14 	str.w	r2, [r3, #-20]
  for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
 80058fa:	3001      	adds	r0, #1
 80058fc:	e7d0      	b.n	80058a0 <HAL_PCD_Init+0x68>
    hpcd->OUT_ep[i].xfer_buff = 0U;
 80058fe:	e943 2207 	strd	r2, r2, [r3, #-28]
    hpcd->OUT_ep[i].is_in = 0U;
 8005902:	f803 2c23 	strb.w	r2, [r3, #-35]
    hpcd->OUT_ep[i].num = i;
 8005906:	f803 0c24 	strb.w	r0, [r3, #-36]
    hpcd->OUT_ep[i].type = EP_TYPE_CTRL;
 800590a:	f803 2c20 	strb.w	r2, [r3, #-32]
    hpcd->OUT_ep[i].xfer_len = 0U;
 800590e:	f843 2c14 	str.w	r2, [r3, #-20]
  for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
 8005912:	3101      	adds	r1, #1
 8005914:	e7cd      	b.n	80058b2 <HAL_PCD_Init+0x7a>

08005916 <HAL_PCD_Start>:
  * @brief  Start the USB device
  * @param  hpcd PCD handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_PCD_Start(PCD_HandleTypeDef *hpcd)
{
 8005916:	b510      	push	{r4, lr}
 8005918:	4604      	mov	r4, r0
  USB_OTG_GlobalTypeDef *USBx = hpcd->Instance;
 800591a:	6800      	ldr	r0, [r0, #0]

  __HAL_LOCK(hpcd);
 800591c:	f894 3494 	ldrb.w	r3, [r4, #1172]	@ 0x494
 8005920:	2b01      	cmp	r3, #1
 8005922:	d015      	beq.n	8005950 <HAL_PCD_Start+0x3a>
 8005924:	2301      	movs	r3, #1
 8005926:	f884 3494 	strb.w	r3, [r4, #1172]	@ 0x494

  if (((USBx->GUSBCFG & USB_OTG_GUSBCFG_PHYSEL) != 0U) &&
 800592a:	68c3      	ldr	r3, [r0, #12]
 800592c:	065b      	lsls	r3, r3, #25
 800592e:	d506      	bpl.n	800593e <HAL_PCD_Start+0x28>
 8005930:	7b63      	ldrb	r3, [r4, #13]
 8005932:	2b01      	cmp	r3, #1
      (hpcd->Init.battery_charging_enable == 1U))
  {
    /* Enable USB Transceiver */
    USBx->GCCFG |= USB_OTG_GCCFG_PWRDWN;
 8005934:	bf02      	ittt	eq
 8005936:	6b83      	ldreq	r3, [r0, #56]	@ 0x38
 8005938:	f443 3380 	orreq.w	r3, r3, #65536	@ 0x10000
 800593c:	6383      	streq	r3, [r0, #56]	@ 0x38
  }

  __HAL_PCD_ENABLE(hpcd);
 800593e:	f001 ff0d 	bl	800775c <USB_EnableGlobalInt>
  (void)USB_DevConnect(hpcd->Instance);
 8005942:	6820      	ldr	r0, [r4, #0]
 8005944:	f002 fac8 	bl	8007ed8 <USB_DevConnect>
  __HAL_UNLOCK(hpcd);
 8005948:	2000      	movs	r0, #0
 800594a:	f884 0494 	strb.w	r0, [r4, #1172]	@ 0x494

  return HAL_OK;
}
 800594e:	bd10      	pop	{r4, pc}
  __HAL_LOCK(hpcd);
 8005950:	2002      	movs	r0, #2
 8005952:	e7fc      	b.n	800594e <HAL_PCD_Start+0x38>

08005954 <HAL_PCD_SetAddress>:
  * @param  hpcd PCD handle
  * @param  address new device address
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_PCD_SetAddress(PCD_HandleTypeDef *hpcd, uint8_t address)
{
 8005954:	b510      	push	{r4, lr}
  __HAL_LOCK(hpcd);
 8005956:	f890 2494 	ldrb.w	r2, [r0, #1172]	@ 0x494
 800595a:	2a01      	cmp	r2, #1
{
 800595c:	4604      	mov	r4, r0
  __HAL_LOCK(hpcd);
 800595e:	d00a      	beq.n	8005976 <HAL_PCD_SetAddress+0x22>
 8005960:	2201      	movs	r2, #1
 8005962:	f880 2494 	strb.w	r2, [r0, #1172]	@ 0x494
  hpcd->USB_Address = address;
 8005966:	7441      	strb	r1, [r0, #17]
  (void)USB_SetDevAddress(hpcd->Instance, address);
 8005968:	6800      	ldr	r0, [r0, #0]
 800596a:	f002 faa5 	bl	8007eb8 <USB_SetDevAddress>
  __HAL_UNLOCK(hpcd);
 800596e:	2000      	movs	r0, #0
 8005970:	f884 0494 	strb.w	r0, [r4, #1172]	@ 0x494

  return HAL_OK;
}
 8005974:	bd10      	pop	{r4, pc}
  __HAL_LOCK(hpcd);
 8005976:	2002      	movs	r0, #2
 8005978:	e7fc      	b.n	8005974 <HAL_PCD_SetAddress+0x20>

0800597a <HAL_PCD_EP_Open>:
  * @param  ep_type endpoint type
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_PCD_EP_Open(PCD_HandleTypeDef *hpcd, uint8_t ep_addr,
                                  uint16_t ep_mps, uint8_t ep_type)
{
 800597a:	b570      	push	{r4, r5, r6, lr}
 800597c:	f001 060f 	and.w	r6, r1, #15
 8005980:	eb06 04c6 	add.w	r4, r6, r6, lsl #3
  HAL_StatusTypeDef ret = HAL_OK;
  PCD_EPTypeDef *ep;

  if ((ep_addr & 0x80U) == 0x80U)
 8005984:	f011 0f80 	tst.w	r1, #128	@ 0x80
{
 8005988:	4605      	mov	r5, r0
 800598a:	ea4f 0484 	mov.w	r4, r4, lsl #2
 800598e:	f04f 0024 	mov.w	r0, #36	@ 0x24
  if ((ep_addr & 0x80U) == 0x80U)
 8005992:	d020      	beq.n	80059d6 <HAL_PCD_EP_Open+0x5c>
  {
    ep = &hpcd->IN_ep[ep_addr & EP_ADDR_MSK];
    ep->is_in = 1U;
 8005994:	fb00 5006 	mla	r0, r0, r6, r5
    ep = &hpcd->IN_ep[ep_addr & EP_ADDR_MSK];
 8005998:	f104 0114 	add.w	r1, r4, #20
    ep->is_in = 1U;
 800599c:	2401      	movs	r4, #1
    ep = &hpcd->IN_ep[ep_addr & EP_ADDR_MSK];
 800599e:	4429      	add	r1, r5
    ep->is_in = 1U;
 80059a0:	7544      	strb	r4, [r0, #21]
    ep = &hpcd->OUT_ep[ep_addr & EP_ADDR_MSK];
    ep->is_in = 0U;
  }

  ep->num = ep_addr & EP_ADDR_MSK;
  ep->maxpacket = (uint32_t)ep_mps & 0x7FFU;
 80059a2:	f3c2 020a 	ubfx	r2, r2, #0, #11
 80059a6:	608a      	str	r2, [r1, #8]
  ep->type = ep_type;

  if (ep->is_in != 0U)
 80059a8:	784a      	ldrb	r2, [r1, #1]
  ep->num = ep_addr & EP_ADDR_MSK;
 80059aa:	700e      	strb	r6, [r1, #0]
  ep->type = ep_type;
 80059ac:	710b      	strb	r3, [r1, #4]
  if (ep->is_in != 0U)
 80059ae:	b102      	cbz	r2, 80059b2 <HAL_PCD_EP_Open+0x38>
  {
    /* Assign a Tx FIFO */
    ep->tx_fifo_num = ep->num;
 80059b0:	834e      	strh	r6, [r1, #26]
  }

  /* Set initial data PID. */
  if (ep_type == EP_TYPE_BULK)
 80059b2:	2b02      	cmp	r3, #2
  {
    ep->data_pid_start = 0U;
 80059b4:	bf04      	itt	eq
 80059b6:	2300      	moveq	r3, #0
 80059b8:	714b      	strbeq	r3, [r1, #5]
  }

  __HAL_LOCK(hpcd);
 80059ba:	f895 3494 	ldrb.w	r3, [r5, #1172]	@ 0x494
 80059be:	2b01      	cmp	r3, #1
 80059c0:	d012      	beq.n	80059e8 <HAL_PCD_EP_Open+0x6e>
 80059c2:	2301      	movs	r3, #1
  (void)USB_ActivateEndpoint(hpcd->Instance, ep);
 80059c4:	6828      	ldr	r0, [r5, #0]
  __HAL_LOCK(hpcd);
 80059c6:	f885 3494 	strb.w	r3, [r5, #1172]	@ 0x494
  (void)USB_ActivateEndpoint(hpcd->Instance, ep);
 80059ca:	f002 f814 	bl	80079f6 <USB_ActivateEndpoint>
  __HAL_UNLOCK(hpcd);
 80059ce:	2000      	movs	r0, #0
 80059d0:	f885 0494 	strb.w	r0, [r5, #1172]	@ 0x494

  return ret;
}
 80059d4:	bd70      	pop	{r4, r5, r6, pc}
    ep->is_in = 0U;
 80059d6:	fb00 5006 	mla	r0, r0, r6, r5
    ep = &hpcd->OUT_ep[ep_addr & EP_ADDR_MSK];
 80059da:	f504 7115 	add.w	r1, r4, #596	@ 0x254
    ep->is_in = 0U;
 80059de:	2400      	movs	r4, #0
    ep = &hpcd->OUT_ep[ep_addr & EP_ADDR_MSK];
 80059e0:	4429      	add	r1, r5
    ep->is_in = 0U;
 80059e2:	f880 4255 	strb.w	r4, [r0, #597]	@ 0x255
 80059e6:	e7dc      	b.n	80059a2 <HAL_PCD_EP_Open+0x28>
  __HAL_LOCK(hpcd);
 80059e8:	2002      	movs	r0, #2
 80059ea:	e7f3      	b.n	80059d4 <HAL_PCD_EP_Open+0x5a>

080059ec <HAL_PCD_EP_Close>:
  * @param  hpcd PCD handle
  * @param  ep_addr endpoint address
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_PCD_EP_Close(PCD_HandleTypeDef *hpcd, uint8_t ep_addr)
{
 80059ec:	b510      	push	{r4, lr}
 80059ee:	4604      	mov	r4, r0
 80059f0:	f001 000f 	and.w	r0, r1, #15
 80059f4:	eb00 03c0 	add.w	r3, r0, r0, lsl #3
  PCD_EPTypeDef *ep;

  if ((ep_addr & 0x80U) == 0x80U)
 80059f8:	f011 0f80 	tst.w	r1, #128	@ 0x80
 80059fc:	ea4f 0383 	mov.w	r3, r3, lsl #2
 8005a00:	f04f 0224 	mov.w	r2, #36	@ 0x24
 8005a04:	d015      	beq.n	8005a32 <HAL_PCD_EP_Close+0x46>
  {
    ep = &hpcd->IN_ep[ep_addr & EP_ADDR_MSK];
    ep->is_in = 1U;
 8005a06:	fb02 4200 	mla	r2, r2, r0, r4
    ep = &hpcd->IN_ep[ep_addr & EP_ADDR_MSK];
 8005a0a:	f103 0114 	add.w	r1, r3, #20
    ep->is_in = 1U;
 8005a0e:	2301      	movs	r3, #1
    ep = &hpcd->IN_ep[ep_addr & EP_ADDR_MSK];
 8005a10:	4421      	add	r1, r4
    ep->is_in = 1U;
 8005a12:	7553      	strb	r3, [r2, #21]
  else
  {
    ep = &hpcd->OUT_ep[ep_addr & EP_ADDR_MSK];
    ep->is_in = 0U;
  }
  ep->num = ep_addr & EP_ADDR_MSK;
 8005a14:	7008      	strb	r0, [r1, #0]

  __HAL_LOCK(hpcd);
 8005a16:	f894 3494 	ldrb.w	r3, [r4, #1172]	@ 0x494
 8005a1a:	2b01      	cmp	r3, #1
 8005a1c:	d012      	beq.n	8005a44 <HAL_PCD_EP_Close+0x58>
 8005a1e:	2301      	movs	r3, #1
  (void)USB_DeactivateEndpoint(hpcd->Instance, ep);
 8005a20:	6820      	ldr	r0, [r4, #0]
  __HAL_LOCK(hpcd);
 8005a22:	f884 3494 	strb.w	r3, [r4, #1172]	@ 0x494
  (void)USB_DeactivateEndpoint(hpcd->Instance, ep);
 8005a26:	f002 f825 	bl	8007a74 <USB_DeactivateEndpoint>
  __HAL_UNLOCK(hpcd);
 8005a2a:	2000      	movs	r0, #0
 8005a2c:	f884 0494 	strb.w	r0, [r4, #1172]	@ 0x494
  return HAL_OK;
}
 8005a30:	bd10      	pop	{r4, pc}
    ep->is_in = 0U;
 8005a32:	fb02 4200 	mla	r2, r2, r0, r4
    ep = &hpcd->OUT_ep[ep_addr & EP_ADDR_MSK];
 8005a36:	f503 7115 	add.w	r1, r3, #596	@ 0x254
    ep->is_in = 0U;
 8005a3a:	2300      	movs	r3, #0
    ep = &hpcd->OUT_ep[ep_addr & EP_ADDR_MSK];
 8005a3c:	4421      	add	r1, r4
    ep->is_in = 0U;
 8005a3e:	f882 3255 	strb.w	r3, [r2, #597]	@ 0x255
 8005a42:	e7e7      	b.n	8005a14 <HAL_PCD_EP_Close+0x28>
  __HAL_LOCK(hpcd);
 8005a44:	2002      	movs	r0, #2
 8005a46:	e7f3      	b.n	8005a30 <HAL_PCD_EP_Close+0x44>

08005a48 <HAL_PCD_EP_Receive>:
  * @param  pBuf pointer to the reception buffer
  * @param  len amount of data to be received
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_PCD_EP_Receive(PCD_HandleTypeDef *hpcd, uint8_t ep_addr, uint8_t *pBuf, uint32_t len)
{
 8005a48:	b570      	push	{r4, r5, r6, lr}
 8005a4a:	f001 050f 	and.w	r5, r1, #15
  PCD_EPTypeDef *ep;

  ep = &hpcd->OUT_ep[ep_addr & EP_ADDR_MSK];
 8005a4e:	2424      	movs	r4, #36	@ 0x24
 8005a50:	fb04 0105 	mla	r1, r4, r5, r0

  /*setup and start the Xfer */
  ep->xfer_buff = pBuf;
 8005a54:	fb04 0405 	mla	r4, r4, r5, r0
  ep->xfer_len = len;
 8005a58:	e9c4 2398 	strd	r2, r3, [r4, #608]	@ 0x260
  ep->xfer_count = 0U;
 8005a5c:	2300      	movs	r3, #0
 8005a5e:	f8c4 3268 	str.w	r3, [r4, #616]	@ 0x268
  ep->is_in = 0U;
 8005a62:	f884 3255 	strb.w	r3, [r4, #597]	@ 0x255
  ep->num = ep_addr & EP_ADDR_MSK;
 8005a66:	f884 5254 	strb.w	r5, [r4, #596]	@ 0x254
{
 8005a6a:	4616      	mov	r6, r2

  if (hpcd->Init.dma_enable == 1U)
 8005a6c:	7982      	ldrb	r2, [r0, #6]
  {
    ep->dma_addr = (uint32_t)pBuf;
  }

  (void)USB_EPStartXfer(hpcd->Instance, ep, (uint8_t)hpcd->Init.dma_enable);
 8005a6e:	6800      	ldr	r0, [r0, #0]
  if (hpcd->Init.dma_enable == 1U)
 8005a70:	2a01      	cmp	r2, #1
  ep = &hpcd->OUT_ep[ep_addr & EP_ADDR_MSK];
 8005a72:	f501 7115 	add.w	r1, r1, #596	@ 0x254
    ep->dma_addr = (uint32_t)pBuf;
 8005a76:	bf08      	it	eq
 8005a78:	f8c4 6270 	streq.w	r6, [r4, #624]	@ 0x270
  (void)USB_EPStartXfer(hpcd->Instance, ep, (uint8_t)hpcd->Init.dma_enable);
 8005a7c:	f002 f8a6 	bl	8007bcc <USB_EPStartXfer>

  return HAL_OK;
}
 8005a80:	2000      	movs	r0, #0
 8005a82:	bd70      	pop	{r4, r5, r6, pc}

08005a84 <HAL_PCD_EP_Transmit>:
  * @param  pBuf pointer to the transmission buffer
  * @param  len amount of data to be sent
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_PCD_EP_Transmit(PCD_HandleTypeDef *hpcd, uint8_t ep_addr, uint8_t *pBuf, uint32_t len)
{
 8005a84:	b570      	push	{r4, r5, r6, lr}
 8005a86:	f001 050f 	and.w	r5, r1, #15
  PCD_EPTypeDef *ep;

  ep = &hpcd->IN_ep[ep_addr & EP_ADDR_MSK];
 8005a8a:	2424      	movs	r4, #36	@ 0x24
 8005a8c:	fb04 0105 	mla	r1, r4, r5, r0

  /*setup and start the Xfer */
  ep->xfer_buff = pBuf;
 8005a90:	fb04 0405 	mla	r4, r4, r5, r0
  ep->xfer_len = len;
 8005a94:	e9c4 2308 	strd	r2, r3, [r4, #32]
  ep->xfer_count = 0U;
 8005a98:	2300      	movs	r3, #0
 8005a9a:	62a3      	str	r3, [r4, #40]	@ 0x28
  ep->is_in = 1U;
 8005a9c:	2301      	movs	r3, #1
 8005a9e:	7563      	strb	r3, [r4, #21]
  ep->num = ep_addr & EP_ADDR_MSK;
 8005aa0:	7525      	strb	r5, [r4, #20]
{
 8005aa2:	4616      	mov	r6, r2

  if (hpcd->Init.dma_enable == 1U)
 8005aa4:	7982      	ldrb	r2, [r0, #6]
  {
    ep->dma_addr = (uint32_t)pBuf;
  }

  (void)USB_EPStartXfer(hpcd->Instance, ep, (uint8_t)hpcd->Init.dma_enable);
 8005aa6:	6800      	ldr	r0, [r0, #0]
  if (hpcd->Init.dma_enable == 1U)
 8005aa8:	429a      	cmp	r2, r3
  ep = &hpcd->IN_ep[ep_addr & EP_ADDR_MSK];
 8005aaa:	f101 0114 	add.w	r1, r1, #20
    ep->dma_addr = (uint32_t)pBuf;
 8005aae:	bf08      	it	eq
 8005ab0:	6326      	streq	r6, [r4, #48]	@ 0x30
  (void)USB_EPStartXfer(hpcd->Instance, ep, (uint8_t)hpcd->Init.dma_enable);
 8005ab2:	f002 f88b 	bl	8007bcc <USB_EPStartXfer>

  return HAL_OK;
}
 8005ab6:	2000      	movs	r0, #0
 8005ab8:	bd70      	pop	{r4, r5, r6, pc}

08005aba <HAL_PCD_EP_SetStall>:
  * @param  hpcd PCD handle
  * @param  ep_addr endpoint address
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_PCD_EP_SetStall(PCD_HandleTypeDef *hpcd, uint8_t ep_addr)
{
 8005aba:	b538      	push	{r3, r4, r5, lr}
  PCD_EPTypeDef *ep;

  if (((uint32_t)ep_addr & EP_ADDR_MSK) > hpcd->Init.dev_endpoints)
 8005abc:	7903      	ldrb	r3, [r0, #4]
 8005abe:	f001 050f 	and.w	r5, r1, #15
 8005ac2:	42ab      	cmp	r3, r5
{
 8005ac4:	4604      	mov	r4, r0
  if (((uint32_t)ep_addr & EP_ADDR_MSK) > hpcd->Init.dev_endpoints)
 8005ac6:	d32b      	bcc.n	8005b20 <HAL_PCD_EP_SetStall+0x66>
  {
    return HAL_ERROR;
  }

  if ((0x80U & ep_addr) == 0x80U)
 8005ac8:	f011 0f80 	tst.w	r1, #128	@ 0x80
 8005acc:	f04f 0024 	mov.w	r0, #36	@ 0x24
 8005ad0:	d01d      	beq.n	8005b0e <HAL_PCD_EP_SetStall+0x54>
  {
    ep = &hpcd->IN_ep[ep_addr & EP_ADDR_MSK];
 8005ad2:	fb00 4105 	mla	r1, r0, r5, r4
    ep->is_in = 1U;
 8005ad6:	fb00 4005 	mla	r0, r0, r5, r4
 8005ada:	2301      	movs	r3, #1
    ep = &hpcd->IN_ep[ep_addr & EP_ADDR_MSK];
 8005adc:	3114      	adds	r1, #20
    ep->is_in = 1U;
 8005ade:	7543      	strb	r3, [r0, #21]
  {
    ep = &hpcd->OUT_ep[ep_addr];
    ep->is_in = 0U;
  }

  ep->is_stall = 1U;
 8005ae0:	2301      	movs	r3, #1
 8005ae2:	708b      	strb	r3, [r1, #2]
  ep->num = ep_addr & EP_ADDR_MSK;
 8005ae4:	700d      	strb	r5, [r1, #0]

  __HAL_LOCK(hpcd);
 8005ae6:	f894 2494 	ldrb.w	r2, [r4, #1172]	@ 0x494
 8005aea:	429a      	cmp	r2, r3
 8005aec:	d01a      	beq.n	8005b24 <HAL_PCD_EP_SetStall+0x6a>

  (void)USB_EPSetStall(hpcd->Instance, ep);
 8005aee:	6820      	ldr	r0, [r4, #0]
  __HAL_LOCK(hpcd);
 8005af0:	f884 3494 	strb.w	r3, [r4, #1172]	@ 0x494
  (void)USB_EPSetStall(hpcd->Instance, ep);
 8005af4:	f002 f98c 	bl	8007e10 <USB_EPSetStall>

  if ((ep_addr & EP_ADDR_MSK) == 0U)
 8005af8:	b92d      	cbnz	r5, 8005b06 <HAL_PCD_EP_SetStall+0x4c>
  {
    (void)USB_EP0_OutStart(hpcd->Instance, (uint8_t)hpcd->Init.dma_enable, (uint8_t *)hpcd->Setup);
 8005afa:	79a1      	ldrb	r1, [r4, #6]
 8005afc:	6820      	ldr	r0, [r4, #0]
 8005afe:	f204 429c 	addw	r2, r4, #1180	@ 0x49c
 8005b02:	f002 fa45 	bl	8007f90 <USB_EP0_OutStart>
  }

  __HAL_UNLOCK(hpcd);
 8005b06:	2000      	movs	r0, #0
 8005b08:	f884 0494 	strb.w	r0, [r4, #1172]	@ 0x494

  return HAL_OK;
}
 8005b0c:	bd38      	pop	{r3, r4, r5, pc}
    ep = &hpcd->OUT_ep[ep_addr];
 8005b0e:	fb00 4301 	mla	r3, r0, r1, r4
    ep->is_in = 0U;
 8005b12:	461a      	mov	r2, r3
    ep = &hpcd->OUT_ep[ep_addr];
 8005b14:	f503 7115 	add.w	r1, r3, #596	@ 0x254
    ep->is_in = 0U;
 8005b18:	2300      	movs	r3, #0
 8005b1a:	f882 3255 	strb.w	r3, [r2, #597]	@ 0x255
 8005b1e:	e7df      	b.n	8005ae0 <HAL_PCD_EP_SetStall+0x26>
    return HAL_ERROR;
 8005b20:	2001      	movs	r0, #1
 8005b22:	e7f3      	b.n	8005b0c <HAL_PCD_EP_SetStall+0x52>
  __HAL_LOCK(hpcd);
 8005b24:	2002      	movs	r0, #2
 8005b26:	e7f1      	b.n	8005b0c <HAL_PCD_EP_SetStall+0x52>

08005b28 <HAL_PCD_EP_ClrStall>:
  * @param  hpcd PCD handle
  * @param  ep_addr endpoint address
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_PCD_EP_ClrStall(PCD_HandleTypeDef *hpcd, uint8_t ep_addr)
{
 8005b28:	b538      	push	{r3, r4, r5, lr}
  PCD_EPTypeDef *ep;

  if (((uint32_t)ep_addr & 0x0FU) > hpcd->Init.dev_endpoints)
 8005b2a:	7903      	ldrb	r3, [r0, #4]
 8005b2c:	f001 020f 	and.w	r2, r1, #15
 8005b30:	4293      	cmp	r3, r2
{
 8005b32:	4604      	mov	r4, r0
  if (((uint32_t)ep_addr & 0x0FU) > hpcd->Init.dev_endpoints)
 8005b34:	d329      	bcc.n	8005b8a <HAL_PCD_EP_ClrStall+0x62>
  {
    return HAL_ERROR;
  }

  if ((0x80U & ep_addr) == 0x80U)
 8005b36:	eb02 03c2 	add.w	r3, r2, r2, lsl #3
 8005b3a:	f011 0f80 	tst.w	r1, #128	@ 0x80
 8005b3e:	ea4f 0383 	mov.w	r3, r3, lsl #2
 8005b42:	f04f 0024 	mov.w	r0, #36	@ 0x24
 8005b46:	d017      	beq.n	8005b78 <HAL_PCD_EP_ClrStall+0x50>
  {
    ep = &hpcd->IN_ep[ep_addr & EP_ADDR_MSK];
    ep->is_in = 1U;
 8005b48:	fb00 4002 	mla	r0, r0, r2, r4
    ep = &hpcd->IN_ep[ep_addr & EP_ADDR_MSK];
 8005b4c:	f103 0114 	add.w	r1, r3, #20
    ep->is_in = 1U;
 8005b50:	2301      	movs	r3, #1
    ep = &hpcd->IN_ep[ep_addr & EP_ADDR_MSK];
 8005b52:	4421      	add	r1, r4
    ep->is_in = 1U;
 8005b54:	7543      	strb	r3, [r0, #21]
  {
    ep = &hpcd->OUT_ep[ep_addr & EP_ADDR_MSK];
    ep->is_in = 0U;
  }

  ep->is_stall = 0U;
 8005b56:	2500      	movs	r5, #0
 8005b58:	708d      	strb	r5, [r1, #2]
  ep->num = ep_addr & EP_ADDR_MSK;
 8005b5a:	700a      	strb	r2, [r1, #0]

  __HAL_LOCK(hpcd);
 8005b5c:	f894 3494 	ldrb.w	r3, [r4, #1172]	@ 0x494
 8005b60:	2b01      	cmp	r3, #1
 8005b62:	d014      	beq.n	8005b8e <HAL_PCD_EP_ClrStall+0x66>
 8005b64:	2301      	movs	r3, #1
  (void)USB_EPClearStall(hpcd->Instance, ep);
 8005b66:	6820      	ldr	r0, [r4, #0]
  __HAL_LOCK(hpcd);
 8005b68:	f884 3494 	strb.w	r3, [r4, #1172]	@ 0x494
  (void)USB_EPClearStall(hpcd->Instance, ep);
 8005b6c:	f002 f97b 	bl	8007e66 <USB_EPClearStall>
  __HAL_UNLOCK(hpcd);
 8005b70:	f884 5494 	strb.w	r5, [r4, #1172]	@ 0x494

  return HAL_OK;
 8005b74:	4628      	mov	r0, r5
}
 8005b76:	bd38      	pop	{r3, r4, r5, pc}
    ep->is_in = 0U;
 8005b78:	fb00 4002 	mla	r0, r0, r2, r4
    ep = &hpcd->OUT_ep[ep_addr & EP_ADDR_MSK];
 8005b7c:	f503 7115 	add.w	r1, r3, #596	@ 0x254
    ep->is_in = 0U;
 8005b80:	2300      	movs	r3, #0
    ep = &hpcd->OUT_ep[ep_addr & EP_ADDR_MSK];
 8005b82:	4421      	add	r1, r4
    ep->is_in = 0U;
 8005b84:	f880 3255 	strb.w	r3, [r0, #597]	@ 0x255
 8005b88:	e7e5      	b.n	8005b56 <HAL_PCD_EP_ClrStall+0x2e>
    return HAL_ERROR;
 8005b8a:	2001      	movs	r0, #1
 8005b8c:	e7f3      	b.n	8005b76 <HAL_PCD_EP_ClrStall+0x4e>
  __HAL_LOCK(hpcd);
 8005b8e:	2002      	movs	r0, #2
 8005b90:	e7f1      	b.n	8005b76 <HAL_PCD_EP_ClrStall+0x4e>

08005b92 <HAL_PCD_EP_Abort>:
HAL_StatusTypeDef HAL_PCD_EP_Abort(PCD_HandleTypeDef *hpcd, uint8_t ep_addr)
{
  HAL_StatusTypeDef ret;
  PCD_EPTypeDef *ep;

  if ((0x80U & ep_addr) == 0x80U)
 8005b92:	f001 030f 	and.w	r3, r1, #15
 8005b96:	eb03 03c3 	add.w	r3, r3, r3, lsl #3
 8005b9a:	060a      	lsls	r2, r1, #24
  {
    ep = &hpcd->IN_ep[ep_addr & EP_ADDR_MSK];
 8005b9c:	ea4f 0383 	mov.w	r3, r3, lsl #2
 8005ba0:	bf4c      	ite	mi
 8005ba2:	f103 0114 	addmi.w	r1, r3, #20
  }
  else
  {
    ep = &hpcd->OUT_ep[ep_addr & EP_ADDR_MSK];
 8005ba6:	f503 7115 	addpl.w	r1, r3, #596	@ 0x254
 8005baa:	4401      	add	r1, r0
  }

  /* Stop Xfer */
  ret = USB_EPStopXfer(hpcd->Instance, ep);
 8005bac:	6800      	ldr	r0, [r0, #0]
 8005bae:	f001 bfb7 	b.w	8007b20 <USB_EPStopXfer>
	...

08005bb4 <HAL_PCD_IRQHandler>:
{
 8005bb4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  USB_OTG_GlobalTypeDef *USBx = hpcd->Instance;
 8005bb8:	6806      	ldr	r6, [r0, #0]
{
 8005bba:	b089      	sub	sp, #36	@ 0x24
 8005bbc:	4604      	mov	r4, r0
  if (USB_GetMode(hpcd->Instance) == USB_OTG_MODE_DEVICE)
 8005bbe:	4630      	mov	r0, r6
 8005bc0:	f002 f9d4 	bl	8007f6c <USB_GetMode>
 8005bc4:	9003      	str	r0, [sp, #12]
 8005bc6:	2800      	cmp	r0, #0
 8005bc8:	f040 8158 	bne.w	8005e7c <HAL_PCD_IRQHandler+0x2c8>
    if (__HAL_PCD_IS_INVALID_INTERRUPT(hpcd))
 8005bcc:	6820      	ldr	r0, [r4, #0]
 8005bce:	f002 f99f 	bl	8007f10 <USB_ReadInterrupts>
 8005bd2:	2800      	cmp	r0, #0
 8005bd4:	f000 8152 	beq.w	8005e7c <HAL_PCD_IRQHandler+0x2c8>
    hpcd->FrameNumber = (USBx_DEVICE->DSTS & USB_OTG_DSTS_FNSOF_Msk) >> USB_OTG_DSTS_FNSOF_Pos;
 8005bd8:	f8d6 3808 	ldr.w	r3, [r6, #2056]	@ 0x808
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_MMIS))
 8005bdc:	6820      	ldr	r0, [r4, #0]
    hpcd->FrameNumber = (USBx_DEVICE->DSTS & USB_OTG_DSTS_FNSOF_Msk) >> USB_OTG_DSTS_FNSOF_Pos;
 8005bde:	f3c3 230d 	ubfx	r3, r3, #8, #14
 8005be2:	f8c4 34d4 	str.w	r3, [r4, #1236]	@ 0x4d4
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_MMIS))
 8005be6:	f002 f993 	bl	8007f10 <USB_ReadInterrupts>
 8005bea:	0787      	lsls	r7, r0, #30
      __HAL_PCD_CLEAR_FLAG(hpcd, USB_OTG_GINTSTS_MMIS);
 8005bec:	bf48      	it	mi
 8005bee:	6822      	ldrmi	r2, [r4, #0]
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_RXFLVL))
 8005bf0:	6820      	ldr	r0, [r4, #0]
      __HAL_PCD_CLEAR_FLAG(hpcd, USB_OTG_GINTSTS_MMIS);
 8005bf2:	bf42      	ittt	mi
 8005bf4:	6953      	ldrmi	r3, [r2, #20]
 8005bf6:	f003 0302 	andmi.w	r3, r3, #2
 8005bfa:	6153      	strmi	r3, [r2, #20]
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_RXFLVL))
 8005bfc:	f002 f988 	bl	8007f10 <USB_ReadInterrupts>
 8005c00:	06c0      	lsls	r0, r0, #27
    hpcd->FrameNumber = (USBx_DEVICE->DSTS & USB_OTG_DSTS_FNSOF_Msk) >> USB_OTG_DSTS_FNSOF_Pos;
 8005c02:	f506 6500 	add.w	r5, r6, #2048	@ 0x800
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_RXFLVL))
 8005c06:	d52d      	bpl.n	8005c64 <HAL_PCD_IRQHandler+0xb0>
      USB_MASK_INTERRUPT(hpcd->Instance, USB_OTG_GINTSTS_RXFLVL);
 8005c08:	6822      	ldr	r2, [r4, #0]
 8005c0a:	6993      	ldr	r3, [r2, #24]
 8005c0c:	f023 0310 	bic.w	r3, r3, #16
 8005c10:	6193      	str	r3, [r2, #24]
      RegVal = USBx->GRXSTSP;
 8005c12:	f8d6 8020 	ldr.w	r8, [r6, #32]
      if (((RegVal & USB_OTG_GRXSTSP_PKTSTS) >> 17) ==  STS_DATA_UPDT)
 8005c16:	f408 13f0 	and.w	r3, r8, #1966080	@ 0x1e0000
 8005c1a:	f5b3 2f80 	cmp.w	r3, #262144	@ 0x40000
      ep = &hpcd->OUT_ep[RegVal & USB_OTG_GRXSTSP_EPNUM];
 8005c1e:	f008 070f 	and.w	r7, r8, #15
      if (((RegVal & USB_OTG_GRXSTSP_PKTSTS) >> 17) ==  STS_DATA_UPDT)
 8005c22:	f040 812e 	bne.w	8005e82 <HAL_PCD_IRQHandler+0x2ce>
        if ((RegVal & USB_OTG_GRXSTSP_BCNT) != 0U)
 8005c26:	f647 73f0 	movw	r3, #32752	@ 0x7ff0
 8005c2a:	ea18 0f03 	tst.w	r8, r3
 8005c2e:	d014      	beq.n	8005c5a <HAL_PCD_IRQHandler+0xa6>
          (void)USB_ReadPacket(USBx, ep->xfer_buff,
 8005c30:	2324      	movs	r3, #36	@ 0x24
 8005c32:	fb03 4707 	mla	r7, r3, r7, r4
 8005c36:	f3c8 190a 	ubfx	r9, r8, #4, #11
 8005c3a:	f8d7 1260 	ldr.w	r1, [r7, #608]	@ 0x260
 8005c3e:	464a      	mov	r2, r9
 8005c40:	4630      	mov	r0, r6
 8005c42:	f002 f8c5 	bl	8007dd0 <USB_ReadPacket>
          ep->xfer_buff += (RegVal & USB_OTG_GRXSTSP_BCNT) >> 4;
 8005c46:	f8d7 3260 	ldr.w	r3, [r7, #608]	@ 0x260
 8005c4a:	444b      	add	r3, r9
 8005c4c:	f8c7 3260 	str.w	r3, [r7, #608]	@ 0x260
          ep->xfer_count += (RegVal & USB_OTG_GRXSTSP_BCNT) >> 4;
 8005c50:	f8d7 3268 	ldr.w	r3, [r7, #616]	@ 0x268
 8005c54:	444b      	add	r3, r9
        ep->xfer_count += (RegVal & USB_OTG_GRXSTSP_BCNT) >> 4;
 8005c56:	f8c7 3268 	str.w	r3, [r7, #616]	@ 0x268
      USB_UNMASK_INTERRUPT(hpcd->Instance, USB_OTG_GINTSTS_RXFLVL);
 8005c5a:	6822      	ldr	r2, [r4, #0]
 8005c5c:	6993      	ldr	r3, [r2, #24]
 8005c5e:	f043 0310 	orr.w	r3, r3, #16
 8005c62:	6193      	str	r3, [r2, #24]
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_OEPINT))
 8005c64:	6820      	ldr	r0, [r4, #0]
 8005c66:	f002 f953 	bl	8007f10 <USB_ReadInterrupts>
 8005c6a:	0301      	lsls	r1, r0, #12
 8005c6c:	f100 811c 	bmi.w	8005ea8 <HAL_PCD_IRQHandler+0x2f4>
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_IEPINT))
 8005c70:	6820      	ldr	r0, [r4, #0]
 8005c72:	f002 f94d 	bl	8007f10 <USB_ReadInterrupts>
 8005c76:	0342      	lsls	r2, r0, #13
 8005c78:	d50d      	bpl.n	8005c96 <HAL_PCD_IRQHandler+0xe2>
      ep_intr = USB_ReadDevAllInEpInterrupt(hpcd->Instance);
 8005c7a:	6820      	ldr	r0, [r4, #0]
 8005c7c:	f002 f954 	bl	8007f28 <USB_ReadDevAllInEpInterrupt>
 8005c80:	4627      	mov	r7, r4
 8005c82:	9004      	str	r0, [sp, #16]
      while (ep_intr != 0U)
 8005c84:	f506 6b10 	add.w	fp, r6, #2304	@ 0x900
      epnum = 0U;
 8005c88:	f04f 0a00 	mov.w	sl, #0
      while (ep_intr != 0U)
 8005c8c:	9b04      	ldr	r3, [sp, #16]
          epint = USB_ReadDevInEPInterrupt(hpcd->Instance, (uint8_t)epnum);
 8005c8e:	6820      	ldr	r0, [r4, #0]
      while (ep_intr != 0U)
 8005c90:	2b00      	cmp	r3, #0
 8005c92:	f040 81d3 	bne.w	800603c <HAL_PCD_IRQHandler+0x488>
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_WKUINT))
 8005c96:	6820      	ldr	r0, [r4, #0]
 8005c98:	f002 f93a 	bl	8007f10 <USB_ReadInterrupts>
 8005c9c:	2800      	cmp	r0, #0
 8005c9e:	da13      	bge.n	8005cc8 <HAL_PCD_IRQHandler+0x114>
      USBx_DEVICE->DCTL &= ~USB_OTG_DCTL_RWUSIG;
 8005ca0:	686b      	ldr	r3, [r5, #4]
 8005ca2:	f023 0301 	bic.w	r3, r3, #1
 8005ca6:	606b      	str	r3, [r5, #4]
      if (hpcd->LPM_State == LPM_L1)
 8005ca8:	f894 34cc 	ldrb.w	r3, [r4, #1228]	@ 0x4cc
 8005cac:	2b01      	cmp	r3, #1
 8005cae:	f040 826b 	bne.w	8006188 <HAL_PCD_IRQHandler+0x5d4>
        hpcd->LPM_State = LPM_L0;
 8005cb2:	2100      	movs	r1, #0
 8005cb4:	f884 14cc 	strb.w	r1, [r4, #1228]	@ 0x4cc
        HAL_PCDEx_LPM_Callback(hpcd, PCD_LPM_L0_ACTIVE);
 8005cb8:	4620      	mov	r0, r4
 8005cba:	f000 fae6 	bl	800628a <HAL_PCDEx_LPM_Callback>
      __HAL_PCD_CLEAR_FLAG(hpcd, USB_OTG_GINTSTS_WKUINT);
 8005cbe:	6822      	ldr	r2, [r4, #0]
 8005cc0:	6953      	ldr	r3, [r2, #20]
 8005cc2:	f003 4300 	and.w	r3, r3, #2147483648	@ 0x80000000
 8005cc6:	6153      	str	r3, [r2, #20]
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_USBSUSP))
 8005cc8:	6820      	ldr	r0, [r4, #0]
 8005cca:	f002 f921 	bl	8007f10 <USB_ReadInterrupts>
 8005cce:	0501      	lsls	r1, r0, #20
 8005cd0:	d50a      	bpl.n	8005ce8 <HAL_PCD_IRQHandler+0x134>
      if ((USBx_DEVICE->DSTS & USB_OTG_DSTS_SUSPSTS) == USB_OTG_DSTS_SUSPSTS)
 8005cd2:	68ab      	ldr	r3, [r5, #8]
 8005cd4:	07da      	lsls	r2, r3, #31
 8005cd6:	d502      	bpl.n	8005cde <HAL_PCD_IRQHandler+0x12a>
        HAL_PCD_SuspendCallback(hpcd);
 8005cd8:	4620      	mov	r0, r4
 8005cda:	f7fc faa9 	bl	8002230 <HAL_PCD_SuspendCallback>
      __HAL_PCD_CLEAR_FLAG(hpcd, USB_OTG_GINTSTS_USBSUSP);
 8005cde:	6822      	ldr	r2, [r4, #0]
 8005ce0:	6953      	ldr	r3, [r2, #20]
 8005ce2:	f403 6300 	and.w	r3, r3, #2048	@ 0x800
 8005ce6:	6153      	str	r3, [r2, #20]
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_USBRST))
 8005ce8:	6820      	ldr	r0, [r4, #0]
 8005cea:	f002 f911 	bl	8007f10 <USB_ReadInterrupts>
 8005cee:	04c3      	lsls	r3, r0, #19
 8005cf0:	d533      	bpl.n	8005d5a <HAL_PCD_IRQHandler+0x1a6>
      USBx_DEVICE->DCTL &= ~USB_OTG_DCTL_RWUSIG;
 8005cf2:	686b      	ldr	r3, [r5, #4]
      (void)USB_FlushTxFifo(hpcd->Instance, 0x10U);
 8005cf4:	6820      	ldr	r0, [r4, #0]
      USBx_DEVICE->DCTL &= ~USB_OTG_DCTL_RWUSIG;
 8005cf6:	f023 0301 	bic.w	r3, r3, #1
 8005cfa:	606b      	str	r3, [r5, #4]
      (void)USB_FlushTxFifo(hpcd->Instance, 0x10U);
 8005cfc:	2110      	movs	r1, #16
 8005cfe:	f001 fd69 	bl	80077d4 <USB_FlushTxFifo>
      for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
 8005d02:	7920      	ldrb	r0, [r4, #4]
 8005d04:	f506 6310 	add.w	r3, r6, #2304	@ 0x900
        USBx_INEP(i)->DIEPINT = 0xFB7FU;
 8005d08:	f64f 317f 	movw	r1, #64383	@ 0xfb7f
      for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
 8005d0c:	9a03      	ldr	r2, [sp, #12]
 8005d0e:	4290      	cmp	r0, r2
 8005d10:	f200 823e 	bhi.w	8006190 <HAL_PCD_IRQHandler+0x5dc>
      USBx_DEVICE->DAINTMSK |= 0x10001U;
 8005d14:	69eb      	ldr	r3, [r5, #28]
 8005d16:	f043 1301 	orr.w	r3, r3, #65537	@ 0x10001
 8005d1a:	61eb      	str	r3, [r5, #28]
      if (hpcd->Init.use_dedicated_ep1 != 0U)
 8005d1c:	7be3      	ldrb	r3, [r4, #15]
 8005d1e:	2b00      	cmp	r3, #0
 8005d20:	f000 8252 	beq.w	80061c8 <HAL_PCD_IRQHandler+0x614>
        USBx_DEVICE->DOUTEP1MSK |= USB_OTG_DOEPMSK_STUPM |
 8005d24:	f8d5 3084 	ldr.w	r3, [r5, #132]	@ 0x84
 8005d28:	f043 030b 	orr.w	r3, r3, #11
 8005d2c:	f8c5 3084 	str.w	r3, [r5, #132]	@ 0x84
        USBx_DEVICE->DINEP1MSK |= USB_OTG_DIEPMSK_TOM |
 8005d30:	6c6b      	ldr	r3, [r5, #68]	@ 0x44
 8005d32:	f043 030b 	orr.w	r3, r3, #11
 8005d36:	646b      	str	r3, [r5, #68]	@ 0x44
      USBx_DEVICE->DCFG &= ~USB_OTG_DCFG_DAD;
 8005d38:	f8d6 3800 	ldr.w	r3, [r6, #2048]	@ 0x800
      (void)USB_EP0_OutStart(hpcd->Instance, (uint8_t)hpcd->Init.dma_enable,
 8005d3c:	6820      	ldr	r0, [r4, #0]
      USBx_DEVICE->DCFG &= ~USB_OTG_DCFG_DAD;
 8005d3e:	f423 63fe 	bic.w	r3, r3, #2032	@ 0x7f0
 8005d42:	f8c6 3800 	str.w	r3, [r6, #2048]	@ 0x800
      (void)USB_EP0_OutStart(hpcd->Instance, (uint8_t)hpcd->Init.dma_enable,
 8005d46:	f204 429c 	addw	r2, r4, #1180	@ 0x49c
 8005d4a:	79a1      	ldrb	r1, [r4, #6]
 8005d4c:	f002 f920 	bl	8007f90 <USB_EP0_OutStart>
      __HAL_PCD_CLEAR_FLAG(hpcd, USB_OTG_GINTSTS_USBRST);
 8005d50:	6822      	ldr	r2, [r4, #0]
 8005d52:	6953      	ldr	r3, [r2, #20]
 8005d54:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 8005d58:	6153      	str	r3, [r2, #20]
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_ENUMDNE))
 8005d5a:	6820      	ldr	r0, [r4, #0]
 8005d5c:	f002 f8d8 	bl	8007f10 <USB_ReadInterrupts>
 8005d60:	0487      	lsls	r7, r0, #18
 8005d62:	d516      	bpl.n	8005d92 <HAL_PCD_IRQHandler+0x1de>
      (void)USB_ActivateSetup(hpcd->Instance);
 8005d64:	6820      	ldr	r0, [r4, #0]
 8005d66:	f002 f905 	bl	8007f74 <USB_ActivateSetup>
      hpcd->Init.speed = USB_GetDevSpeed(hpcd->Instance);
 8005d6a:	6820      	ldr	r0, [r4, #0]
 8005d6c:	f001 fe38 	bl	80079e0 <USB_GetDevSpeed>
 8005d70:	71e0      	strb	r0, [r4, #7]
      (void)USB_SetTurnaroundTime(hpcd->Instance,
 8005d72:	6827      	ldr	r7, [r4, #0]
 8005d74:	f000 fd00 	bl	8006778 <HAL_RCC_GetHCLKFreq>
 8005d78:	79e2      	ldrb	r2, [r4, #7]
 8005d7a:	4601      	mov	r1, r0
 8005d7c:	4638      	mov	r0, r7
 8005d7e:	f001 fc7d 	bl	800767c <USB_SetTurnaroundTime>
      HAL_PCD_ResetCallback(hpcd);
 8005d82:	4620      	mov	r0, r4
 8005d84:	f7fc fa41 	bl	800220a <HAL_PCD_ResetCallback>
      __HAL_PCD_CLEAR_FLAG(hpcd, USB_OTG_GINTSTS_ENUMDNE);
 8005d88:	6822      	ldr	r2, [r4, #0]
 8005d8a:	6953      	ldr	r3, [r2, #20]
 8005d8c:	f403 5300 	and.w	r3, r3, #8192	@ 0x2000
 8005d90:	6153      	str	r3, [r2, #20]
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_SOF))
 8005d92:	6820      	ldr	r0, [r4, #0]
 8005d94:	f002 f8bc 	bl	8007f10 <USB_ReadInterrupts>
 8005d98:	0700      	lsls	r0, r0, #28
 8005d9a:	d507      	bpl.n	8005dac <HAL_PCD_IRQHandler+0x1f8>
      HAL_PCD_SOFCallback(hpcd);
 8005d9c:	4620      	mov	r0, r4
 8005d9e:	f7fc fa30 	bl	8002202 <HAL_PCD_SOFCallback>
      __HAL_PCD_CLEAR_FLAG(hpcd, USB_OTG_GINTSTS_SOF);
 8005da2:	6822      	ldr	r2, [r4, #0]
 8005da4:	6953      	ldr	r3, [r2, #20]
 8005da6:	f003 0308 	and.w	r3, r3, #8
 8005daa:	6153      	str	r3, [r2, #20]
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_BOUTNAKEFF))
 8005dac:	6820      	ldr	r0, [r4, #0]
 8005dae:	f002 f8af 	bl	8007f10 <USB_ReadInterrupts>
 8005db2:	0601      	lsls	r1, r0, #24
 8005db4:	f100 8213 	bmi.w	80061de <HAL_PCD_IRQHandler+0x62a>
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_IISOIXFR))
 8005db8:	6820      	ldr	r0, [r4, #0]
 8005dba:	f002 f8a9 	bl	8007f10 <USB_ReadInterrupts>
 8005dbe:	02c2      	lsls	r2, r0, #11
 8005dc0:	d50c      	bpl.n	8005ddc <HAL_PCD_IRQHandler+0x228>
 8005dc2:	46a0      	mov	r8, r4
 8005dc4:	f506 6912 	add.w	r9, r6, #2336	@ 0x920
      for (epnum = 1U; epnum < hpcd->Init.dev_endpoints; epnum++)
 8005dc8:	2701      	movs	r7, #1
 8005dca:	7923      	ldrb	r3, [r4, #4]
 8005dcc:	42bb      	cmp	r3, r7
 8005dce:	f200 821f 	bhi.w	8006210 <HAL_PCD_IRQHandler+0x65c>
      __HAL_PCD_CLEAR_FLAG(hpcd, USB_OTG_GINTSTS_IISOIXFR);
 8005dd2:	6822      	ldr	r2, [r4, #0]
 8005dd4:	6953      	ldr	r3, [r2, #20]
 8005dd6:	f403 1380 	and.w	r3, r3, #1048576	@ 0x100000
 8005dda:	6153      	str	r3, [r2, #20]
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_PXFR_INCOMPISOOUT))
 8005ddc:	6820      	ldr	r0, [r4, #0]
 8005dde:	f002 f897 	bl	8007f10 <USB_ReadInterrupts>
 8005de2:	0283      	lsls	r3, r0, #10
 8005de4:	d52d      	bpl.n	8005e42 <HAL_PCD_IRQHandler+0x28e>
      for (epnum = 1U; epnum < hpcd->Init.dev_endpoints; epnum++)
 8005de6:	f894 e004 	ldrb.w	lr, [r4, #4]
 8005dea:	4623      	mov	r3, r4
 8005dec:	f506 6032 	add.w	r0, r6, #2848	@ 0xb20
 8005df0:	2101      	movs	r1, #1
 8005df2:	458e      	cmp	lr, r1
 8005df4:	d920      	bls.n	8005e38 <HAL_PCD_IRQHandler+0x284>
        if ((hpcd->OUT_ep[epnum].type == EP_TYPE_ISOC) &&
 8005df6:	f893 c27c 	ldrb.w	ip, [r3, #636]	@ 0x27c
        RegVal = USBx_OUTEP(epnum)->DOEPCTL;
 8005dfa:	6802      	ldr	r2, [r0, #0]
        if ((hpcd->OUT_ep[epnum].type == EP_TYPE_ISOC) &&
 8005dfc:	f1bc 0f01 	cmp.w	ip, #1
 8005e00:	f040 821c 	bne.w	800623c <HAL_PCD_IRQHandler+0x688>
 8005e04:	2a00      	cmp	r2, #0
 8005e06:	f280 8219 	bge.w	800623c <HAL_PCD_IRQHandler+0x688>
            ((RegVal & (0x1U << 16)) == (hpcd->FrameNumber & 0x1U)))
 8005e0a:	f8d4 74d4 	ldr.w	r7, [r4, #1236]	@ 0x4d4
 8005e0e:	f402 3280 	and.w	r2, r2, #65536	@ 0x10000
 8005e12:	f007 0701 	and.w	r7, r7, #1
            ((RegVal & USB_OTG_DOEPCTL_EPENA) == USB_OTG_DOEPCTL_EPENA) &&
 8005e16:	42ba      	cmp	r2, r7
 8005e18:	f040 8210 	bne.w	800623c <HAL_PCD_IRQHandler+0x688>
          hpcd->OUT_ep[epnum].is_iso_incomplete = 1U;
 8005e1c:	f883 c27b 	strb.w	ip, [r3, #635]	@ 0x27b
          USBx->GINTMSK |= USB_OTG_GINTMSK_GONAKEFFM;
 8005e20:	69b2      	ldr	r2, [r6, #24]
 8005e22:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
 8005e26:	61b2      	str	r2, [r6, #24]
          if ((USBx->GINTSTS & USB_OTG_GINTSTS_BOUTNAKEFF) == 0U)
 8005e28:	6972      	ldr	r2, [r6, #20]
 8005e2a:	0617      	lsls	r7, r2, #24
 8005e2c:	f100 8206 	bmi.w	800623c <HAL_PCD_IRQHandler+0x688>
            USBx_DEVICE->DCTL |= USB_OTG_DCTL_SGONAK;
 8005e30:	686b      	ldr	r3, [r5, #4]
 8005e32:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 8005e36:	606b      	str	r3, [r5, #4]
      __HAL_PCD_CLEAR_FLAG(hpcd, USB_OTG_GINTSTS_PXFR_INCOMPISOOUT);
 8005e38:	6822      	ldr	r2, [r4, #0]
 8005e3a:	6953      	ldr	r3, [r2, #20]
 8005e3c:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 8005e40:	6153      	str	r3, [r2, #20]
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_SRQINT))
 8005e42:	6820      	ldr	r0, [r4, #0]
 8005e44:	f002 f864 	bl	8007f10 <USB_ReadInterrupts>
 8005e48:	0041      	lsls	r1, r0, #1
 8005e4a:	d507      	bpl.n	8005e5c <HAL_PCD_IRQHandler+0x2a8>
      HAL_PCD_ConnectCallback(hpcd);
 8005e4c:	4620      	mov	r0, r4
 8005e4e:	f7fc fa13 	bl	8002278 <HAL_PCD_ConnectCallback>
      __HAL_PCD_CLEAR_FLAG(hpcd, USB_OTG_GINTSTS_SRQINT);
 8005e52:	6822      	ldr	r2, [r4, #0]
 8005e54:	6953      	ldr	r3, [r2, #20]
 8005e56:	f003 4380 	and.w	r3, r3, #1073741824	@ 0x40000000
 8005e5a:	6153      	str	r3, [r2, #20]
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_OTGINT))
 8005e5c:	6820      	ldr	r0, [r4, #0]
 8005e5e:	f002 f857 	bl	8007f10 <USB_ReadInterrupts>
 8005e62:	0742      	lsls	r2, r0, #29
 8005e64:	d50a      	bpl.n	8005e7c <HAL_PCD_IRQHandler+0x2c8>
      RegVal = hpcd->Instance->GOTGINT;
 8005e66:	6823      	ldr	r3, [r4, #0]
 8005e68:	685d      	ldr	r5, [r3, #4]
      if ((RegVal & USB_OTG_GOTGINT_SEDET) == USB_OTG_GOTGINT_SEDET)
 8005e6a:	076b      	lsls	r3, r5, #29
 8005e6c:	d502      	bpl.n	8005e74 <HAL_PCD_IRQHandler+0x2c0>
        HAL_PCD_DisconnectCallback(hpcd);
 8005e6e:	4620      	mov	r0, r4
 8005e70:	f7fc fa06 	bl	8002280 <HAL_PCD_DisconnectCallback>
      hpcd->Instance->GOTGINT |= RegVal;
 8005e74:	6822      	ldr	r2, [r4, #0]
 8005e76:	6853      	ldr	r3, [r2, #4]
 8005e78:	432b      	orrs	r3, r5
 8005e7a:	6053      	str	r3, [r2, #4]
}
 8005e7c:	b009      	add	sp, #36	@ 0x24
 8005e7e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      else if (((RegVal & USB_OTG_GRXSTSP_PKTSTS) >> 17) == STS_SETUP_UPDT)
 8005e82:	f5b3 2f40 	cmp.w	r3, #786432	@ 0xc0000
 8005e86:	f47f aee8 	bne.w	8005c5a <HAL_PCD_IRQHandler+0xa6>
        (void)USB_ReadPacket(USBx, (uint8_t *)hpcd->Setup, 8U);
 8005e8a:	2208      	movs	r2, #8
 8005e8c:	f204 419c 	addw	r1, r4, #1180	@ 0x49c
 8005e90:	4630      	mov	r0, r6
 8005e92:	f001 ff9d 	bl	8007dd0 <USB_ReadPacket>
        ep->xfer_count += (RegVal & USB_OTG_GRXSTSP_BCNT) >> 4;
 8005e96:	2324      	movs	r3, #36	@ 0x24
 8005e98:	fb03 4707 	mla	r7, r3, r7, r4
 8005e9c:	f3c8 180a 	ubfx	r8, r8, #4, #11
 8005ea0:	f8d7 3268 	ldr.w	r3, [r7, #616]	@ 0x268
 8005ea4:	4443      	add	r3, r8
 8005ea6:	e6d6      	b.n	8005c56 <HAL_PCD_IRQHandler+0xa2>
      ep_intr = USB_ReadDevAllOutEpInterrupt(hpcd->Instance);
 8005ea8:	6820      	ldr	r0, [r4, #0]
 8005eaa:	f002 f835 	bl	8007f18 <USB_ReadDevAllOutEpInterrupt>
 8005eae:	f506 6830 	add.w	r8, r6, #2816	@ 0xb00
 8005eb2:	9004      	str	r0, [sp, #16]
      while (ep_intr != 0U)
 8005eb4:	46a2      	mov	sl, r4
      epnum = 0U;
 8005eb6:	2700      	movs	r7, #0
      while (ep_intr != 0U)
 8005eb8:	9b04      	ldr	r3, [sp, #16]
          epint = USB_ReadDevOutEPInterrupt(hpcd->Instance, (uint8_t)epnum);
 8005eba:	6820      	ldr	r0, [r4, #0]
      while (ep_intr != 0U)
 8005ebc:	2b00      	cmp	r3, #0
 8005ebe:	f43f aed7 	beq.w	8005c70 <HAL_PCD_IRQHandler+0xbc>
        if ((ep_intr & 0x1U) != 0U)
 8005ec2:	9b04      	ldr	r3, [sp, #16]
 8005ec4:	07db      	lsls	r3, r3, #31
 8005ec6:	d578      	bpl.n	8005fba <HAL_PCD_IRQHandler+0x406>
          epint = USB_ReadDevOutEPInterrupt(hpcd->Instance, (uint8_t)epnum);
 8005ec8:	fa5f fb87 	uxtb.w	fp, r7
 8005ecc:	4659      	mov	r1, fp
 8005ece:	f002 f833 	bl	8007f38 <USB_ReadDevOutEPInterrupt>
          if ((epint & USB_OTG_DOEPINT_XFRC) == USB_OTG_DOEPINT_XFRC)
 8005ed2:	f010 0f01 	tst.w	r0, #1
          epint = USB_ReadDevOutEPInterrupt(hpcd->Instance, (uint8_t)epnum);
 8005ed6:	4681      	mov	r9, r0
          if ((epint & USB_OTG_DOEPINT_XFRC) == USB_OTG_DOEPINT_XFRC)
 8005ed8:	d01f      	beq.n	8005f1a <HAL_PCD_IRQHandler+0x366>
  * @retval HAL status
  */
static HAL_StatusTypeDef PCD_EP_OutXfrComplete_int(PCD_HandleTypeDef *hpcd, uint32_t epnum)
{
  USB_OTG_EPTypeDef *ep;
  const USB_OTG_GlobalTypeDef *USBx = hpcd->Instance;
 8005eda:	6820      	ldr	r0, [r4, #0]
            CLEAR_OUT_EP_INTR(epnum, USB_OTG_DOEPINT_XFRC);
 8005edc:	2301      	movs	r3, #1
 8005ede:	f8c8 3008 	str.w	r3, [r8, #8]
  uint32_t USBx_BASE = (uint32_t)USBx;
  uint32_t gSNPSiD = *(__IO const uint32_t *)(&USBx->CID + 0x1U);
  uint32_t DoepintReg = USBx_OUTEP(epnum)->DOEPINT;

  if (hpcd->Init.dma_enable == 1U)
 8005ee2:	f894 c006 	ldrb.w	ip, [r4, #6]
  uint32_t gSNPSiD = *(__IO const uint32_t *)(&USBx->CID + 0x1U);
 8005ee6:	6c01      	ldr	r1, [r0, #64]	@ 0x40
  uint32_t DoepintReg = USBx_OUTEP(epnum)->DOEPINT;
 8005ee8:	f500 6330 	add.w	r3, r0, #2816	@ 0xb00
 8005eec:	eb03 1347 	add.w	r3, r3, r7, lsl #5
  if (hpcd->Init.dma_enable == 1U)
 8005ef0:	f1bc 0f01 	cmp.w	ip, #1
  uint32_t DoepintReg = USBx_OUTEP(epnum)->DOEPINT;
 8005ef4:	689a      	ldr	r2, [r3, #8]
  if (hpcd->Init.dma_enable == 1U)
 8005ef6:	f040 808b 	bne.w	8006010 <HAL_PCD_IRQHandler+0x45c>
  {
    if ((DoepintReg & USB_OTG_DOEPINT_STUP) == USB_OTG_DOEPINT_STUP) /* Class C */
 8005efa:	f012 0f08 	tst.w	r2, #8
 8005efe:	d007      	beq.n	8005f10 <HAL_PCD_IRQHandler+0x35c>
    {
      /* StupPktRcvd = 1 this is a setup packet */
      if ((gSNPSiD > USB_OTG_CORE_ID_300A) &&
 8005f00:	48af      	ldr	r0, [pc, #700]	@ (80061c0 <HAL_PCD_IRQHandler+0x60c>)
 8005f02:	4281      	cmp	r1, r0
 8005f04:	d909      	bls.n	8005f1a <HAL_PCD_IRQHandler+0x366>
 8005f06:	0412      	lsls	r2, r2, #16
 8005f08:	d507      	bpl.n	8005f1a <HAL_PCD_IRQHandler+0x366>
    if (gSNPSiD == USB_OTG_CORE_ID_310A)
    {
      /* StupPktRcvd = 1 this is a setup packet */
      if ((DoepintReg & USB_OTG_DOEPINT_STPKTRX) == USB_OTG_DOEPINT_STPKTRX)
      {
        CLEAR_OUT_EP_INTR(epnum, USB_OTG_DOEPINT_STPKTRX);
 8005f0a:	f44f 4200 	mov.w	r2, #32768	@ 0x8000
 8005f0e:	e003      	b.n	8005f18 <HAL_PCD_IRQHandler+0x364>
    else if ((DoepintReg & USB_OTG_DOEPINT_OTEPSPR) == USB_OTG_DOEPINT_OTEPSPR) /* Class E */
 8005f10:	f012 0f20 	tst.w	r2, #32
 8005f14:	d05a      	beq.n	8005fcc <HAL_PCD_IRQHandler+0x418>
      CLEAR_OUT_EP_INTR(epnum, USB_OTG_DOEPINT_OTEPSPR);
 8005f16:	2220      	movs	r2, #32
        CLEAR_OUT_EP_INTR(epnum, USB_OTG_DOEPINT_STPKTRX);
 8005f18:	609a      	str	r2, [r3, #8]
          if ((epint & USB_OTG_DOEPINT_STUP) == USB_OTG_DOEPINT_STUP)
 8005f1a:	f019 0f08 	tst.w	r9, #8
 8005f1e:	d021      	beq.n	8005f64 <HAL_PCD_IRQHandler+0x3b0>
            CLEAR_OUT_EP_INTR(epnum, USB_OTG_DOEPINT_STUP);
 8005f20:	2308      	movs	r3, #8
 8005f22:	f8c8 3008 	str.w	r3, [r8, #8]
  * @param  epnum endpoint number
  * @retval HAL status
  */
static HAL_StatusTypeDef PCD_EP_OutSetupPacket_int(PCD_HandleTypeDef *hpcd, uint32_t epnum)
{
  const USB_OTG_GlobalTypeDef *USBx = hpcd->Instance;
 8005f26:	6823      	ldr	r3, [r4, #0]
  uint32_t USBx_BASE = (uint32_t)USBx;
  uint32_t gSNPSiD = *(__IO const uint32_t *)(&USBx->CID + 0x1U);
  uint32_t DoepintReg = USBx_OUTEP(epnum)->DOEPINT;

  if ((gSNPSiD > USB_OTG_CORE_ID_300A) &&
 8005f28:	49a5      	ldr	r1, [pc, #660]	@ (80061c0 <HAL_PCD_IRQHandler+0x60c>)
  uint32_t gSNPSiD = *(__IO const uint32_t *)(&USBx->CID + 0x1U);
 8005f2a:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
  uint32_t DoepintReg = USBx_OUTEP(epnum)->DOEPINT;
 8005f2c:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8005f30:	eb03 1347 	add.w	r3, r3, r7, lsl #5
  if ((gSNPSiD > USB_OTG_CORE_ID_300A) &&
 8005f34:	428a      	cmp	r2, r1
  uint32_t DoepintReg = USBx_OUTEP(epnum)->DOEPINT;
 8005f36:	6898      	ldr	r0, [r3, #8]
  if ((gSNPSiD > USB_OTG_CORE_ID_300A) &&
 8005f38:	d904      	bls.n	8005f44 <HAL_PCD_IRQHandler+0x390>
 8005f3a:	0401      	lsls	r1, r0, #16
      ((DoepintReg & USB_OTG_DOEPINT_STPKTRX) == USB_OTG_DOEPINT_STPKTRX))
  {
    CLEAR_OUT_EP_INTR(epnum, USB_OTG_DOEPINT_STPKTRX);
 8005f3c:	bf44      	itt	mi
 8005f3e:	f44f 4000 	movmi.w	r0, #32768	@ 0x8000
 8005f42:	6098      	strmi	r0, [r3, #8]

  /* Inform the upper layer that a setup packet is available */
#if (USE_HAL_PCD_REGISTER_CALLBACKS == 1U)
  hpcd->SetupStageCallback(hpcd);
#else
  HAL_PCD_SetupStageCallback(hpcd);
 8005f44:	4620      	mov	r0, r4
 8005f46:	9205      	str	r2, [sp, #20]
 8005f48:	f7fc f944 	bl	80021d4 <HAL_PCD_SetupStageCallback>
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */

  if ((gSNPSiD > USB_OTG_CORE_ID_300A) && (hpcd->Init.dma_enable == 1U))
 8005f4c:	9a05      	ldr	r2, [sp, #20]
 8005f4e:	499c      	ldr	r1, [pc, #624]	@ (80061c0 <HAL_PCD_IRQHandler+0x60c>)
 8005f50:	428a      	cmp	r2, r1
 8005f52:	d907      	bls.n	8005f64 <HAL_PCD_IRQHandler+0x3b0>
 8005f54:	79a1      	ldrb	r1, [r4, #6]
 8005f56:	2901      	cmp	r1, #1
 8005f58:	d104      	bne.n	8005f64 <HAL_PCD_IRQHandler+0x3b0>
  {
    (void)USB_EP0_OutStart(hpcd->Instance, 1U, (uint8_t *)hpcd->Setup);
 8005f5a:	6820      	ldr	r0, [r4, #0]
 8005f5c:	f204 429c 	addw	r2, r4, #1180	@ 0x49c
 8005f60:	f002 f816 	bl	8007f90 <USB_EP0_OutStart>
          if ((epint & USB_OTG_DOEPINT_OTEPDIS) == USB_OTG_DOEPINT_OTEPDIS)
 8005f64:	f019 0f10 	tst.w	r9, #16
            CLEAR_OUT_EP_INTR(epnum, USB_OTG_DOEPINT_OTEPDIS);
 8005f68:	bf1c      	itt	ne
 8005f6a:	2310      	movne	r3, #16
 8005f6c:	f8c8 3008 	strne.w	r3, [r8, #8]
          if ((epint & USB_OTG_DOEPINT_EPDISD) == USB_OTG_DOEPINT_EPDISD)
 8005f70:	f019 0f02 	tst.w	r9, #2
 8005f74:	d014      	beq.n	8005fa0 <HAL_PCD_IRQHandler+0x3ec>
            if ((USBx->GINTSTS & USB_OTG_GINTSTS_BOUTNAKEFF) == USB_OTG_GINTSTS_BOUTNAKEFF)
 8005f76:	6973      	ldr	r3, [r6, #20]
 8005f78:	061a      	lsls	r2, r3, #24
              USBx_DEVICE->DCTL |= USB_OTG_DCTL_CGONAK;
 8005f7a:	bf42      	ittt	mi
 8005f7c:	686b      	ldrmi	r3, [r5, #4]
 8005f7e:	f443 6380 	orrmi.w	r3, r3, #1024	@ 0x400
 8005f82:	606b      	strmi	r3, [r5, #4]
            if (ep->is_iso_incomplete == 1U)
 8005f84:	f89a 3257 	ldrb.w	r3, [sl, #599]	@ 0x257
 8005f88:	2b01      	cmp	r3, #1
 8005f8a:	d106      	bne.n	8005f9a <HAL_PCD_IRQHandler+0x3e6>
              ep->is_iso_incomplete = 0U;
 8005f8c:	2300      	movs	r3, #0
 8005f8e:	f88a 3257 	strb.w	r3, [sl, #599]	@ 0x257
              HAL_PCD_ISOOUTIncompleteCallback(hpcd, (uint8_t)epnum);
 8005f92:	4659      	mov	r1, fp
 8005f94:	4620      	mov	r0, r4
 8005f96:	f7fc f967 	bl	8002268 <HAL_PCD_ISOOUTIncompleteCallback>
            CLEAR_OUT_EP_INTR(epnum, USB_OTG_DOEPINT_EPDISD);
 8005f9a:	2302      	movs	r3, #2
 8005f9c:	f8c8 3008 	str.w	r3, [r8, #8]
          if ((epint & USB_OTG_DOEPINT_OTEPSPR) == USB_OTG_DOEPINT_OTEPSPR)
 8005fa0:	f019 0f20 	tst.w	r9, #32
            CLEAR_OUT_EP_INTR(epnum, USB_OTG_DOEPINT_OTEPSPR);
 8005fa4:	bf1c      	itt	ne
 8005fa6:	2320      	movne	r3, #32
 8005fa8:	f8c8 3008 	strne.w	r3, [r8, #8]
          if ((epint & USB_OTG_DOEPINT_NAK) == USB_OTG_DOEPINT_NAK)
 8005fac:	f419 5f00 	tst.w	r9, #8192	@ 0x2000
            CLEAR_OUT_EP_INTR(epnum, USB_OTG_DOEPINT_NAK);
 8005fb0:	bf1c      	itt	ne
 8005fb2:	f44f 5300 	movne.w	r3, #8192	@ 0x2000
 8005fb6:	f8c8 3008 	strne.w	r3, [r8, #8]
        ep_intr >>= 1U;
 8005fba:	9b04      	ldr	r3, [sp, #16]
 8005fbc:	085b      	lsrs	r3, r3, #1
        epnum++;
 8005fbe:	3701      	adds	r7, #1
        ep_intr >>= 1U;
 8005fc0:	9304      	str	r3, [sp, #16]
 8005fc2:	f108 0820 	add.w	r8, r8, #32
 8005fc6:	f10a 0a24 	add.w	sl, sl, #36	@ 0x24
 8005fca:	e775      	b.n	8005eb8 <HAL_PCD_IRQHandler+0x304>
      if ((gSNPSiD > USB_OTG_CORE_ID_300A) &&
 8005fcc:	f8df c1f0 	ldr.w	ip, [pc, #496]	@ 80061c0 <HAL_PCD_IRQHandler+0x60c>
 8005fd0:	4561      	cmp	r1, ip
 8005fd2:	d901      	bls.n	8005fd8 <HAL_PCD_IRQHandler+0x424>
 8005fd4:	0412      	lsls	r2, r2, #16
 8005fd6:	d498      	bmi.n	8005f0a <HAL_PCD_IRQHandler+0x356>
        ep->xfer_count = ep->xfer_size - (USBx_OUTEP(epnum)->DOEPTSIZ & USB_OTG_DOEPTSIZ_XFRSIZ);
 8005fd8:	691a      	ldr	r2, [r3, #16]
 8005fda:	f8da 3274 	ldr.w	r3, [sl, #628]	@ 0x274
 8005fde:	f3c2 0212 	ubfx	r2, r2, #0, #19
 8005fe2:	1a9b      	subs	r3, r3, r2
 8005fe4:	f8ca 3268 	str.w	r3, [sl, #616]	@ 0x268
        if (epnum == 0U)
 8005fe8:	b96f      	cbnz	r7, 8006006 <HAL_PCD_IRQHandler+0x452>
          if (ep->xfer_len == 0U)
 8005fea:	f8d4 2264 	ldr.w	r2, [r4, #612]	@ 0x264
 8005fee:	b92a      	cbnz	r2, 8005ffc <HAL_PCD_IRQHandler+0x448>
            (void)USB_EP0_OutStart(hpcd->Instance, 1U, (uint8_t *)hpcd->Setup);
 8005ff0:	f204 429c 	addw	r2, r4, #1180	@ 0x49c
 8005ff4:	2101      	movs	r1, #1
        (void)USB_EP0_OutStart(hpcd->Instance, 0U, (uint8_t *)hpcd->Setup);
 8005ff6:	f001 ffcb 	bl	8007f90 <USB_EP0_OutStart>
 8005ffa:	e004      	b.n	8006006 <HAL_PCD_IRQHandler+0x452>
            ep->xfer_buff += ep->xfer_count;
 8005ffc:	f8d4 2260 	ldr.w	r2, [r4, #608]	@ 0x260
 8006000:	441a      	add	r2, r3
 8006002:	f8c4 2260 	str.w	r2, [r4, #608]	@ 0x260
      HAL_PCD_DataOutStageCallback(hpcd, (uint8_t)epnum);
 8006006:	4659      	mov	r1, fp
 8006008:	4620      	mov	r0, r4
 800600a:	f7fc f8e9 	bl	80021e0 <HAL_PCD_DataOutStageCallback>
 800600e:	e784      	b.n	8005f1a <HAL_PCD_IRQHandler+0x366>
    if (gSNPSiD == USB_OTG_CORE_ID_310A)
 8006010:	f8df c1b0 	ldr.w	ip, [pc, #432]	@ 80061c4 <HAL_PCD_IRQHandler+0x610>
 8006014:	4561      	cmp	r1, ip
 8006016:	d107      	bne.n	8006028 <HAL_PCD_IRQHandler+0x474>
      if ((DoepintReg & USB_OTG_DOEPINT_STPKTRX) == USB_OTG_DOEPINT_STPKTRX)
 8006018:	0411      	lsls	r1, r2, #16
 800601a:	f53f af76 	bmi.w	8005f0a <HAL_PCD_IRQHandler+0x356>
        if ((DoepintReg & USB_OTG_DOEPINT_OTEPSPR) == USB_OTG_DOEPINT_OTEPSPR)
 800601e:	0690      	lsls	r0, r2, #26
 8006020:	d5f1      	bpl.n	8006006 <HAL_PCD_IRQHandler+0x452>
          CLEAR_OUT_EP_INTR(epnum, USB_OTG_DOEPINT_OTEPSPR);
 8006022:	2220      	movs	r2, #32
 8006024:	609a      	str	r2, [r3, #8]
        HAL_PCD_DataOutStageCallback(hpcd, (uint8_t)epnum);
 8006026:	e7ee      	b.n	8006006 <HAL_PCD_IRQHandler+0x452>
      if ((epnum == 0U) && (hpcd->OUT_ep[epnum].xfer_len == 0U))
 8006028:	2f00      	cmp	r7, #0
 800602a:	d1ec      	bne.n	8006006 <HAL_PCD_IRQHandler+0x452>
 800602c:	f8d4 3264 	ldr.w	r3, [r4, #612]	@ 0x264
 8006030:	2b00      	cmp	r3, #0
 8006032:	d1e8      	bne.n	8006006 <HAL_PCD_IRQHandler+0x452>
        (void)USB_EP0_OutStart(hpcd->Instance, 0U, (uint8_t *)hpcd->Setup);
 8006034:	f204 429c 	addw	r2, r4, #1180	@ 0x49c
 8006038:	4639      	mov	r1, r7
 800603a:	e7dc      	b.n	8005ff6 <HAL_PCD_IRQHandler+0x442>
        if ((ep_intr & 0x1U) != 0U) /* In ITR */
 800603c:	9b04      	ldr	r3, [sp, #16]
 800603e:	07db      	lsls	r3, r3, #31
 8006040:	f140 8099 	bpl.w	8006176 <HAL_PCD_IRQHandler+0x5c2>
          epint = USB_ReadDevInEPInterrupt(hpcd->Instance, (uint8_t)epnum);
 8006044:	fa5f f38a 	uxtb.w	r3, sl
 8006048:	4619      	mov	r1, r3
 800604a:	9305      	str	r3, [sp, #20]
 800604c:	f001 ff7d 	bl	8007f4a <USB_ReadDevInEPInterrupt>
          if ((epint & USB_OTG_DIEPINT_XFRC) == USB_OTG_DIEPINT_XFRC)
 8006050:	f010 0f01 	tst.w	r0, #1
          epint = USB_ReadDevInEPInterrupt(hpcd->Instance, (uint8_t)epnum);
 8006054:	4680      	mov	r8, r0
          if ((epint & USB_OTG_DIEPINT_XFRC) == USB_OTG_DIEPINT_XFRC)
 8006056:	d01f      	beq.n	8006098 <HAL_PCD_IRQHandler+0x4e4>
            USBx_DEVICE->DIEPEMPMSK &= ~fifoemptymsk;
 8006058:	6b6b      	ldr	r3, [r5, #52]	@ 0x34
            fifoemptymsk = (uint32_t)(0x1UL << (epnum & EP_ADDR_MSK));
 800605a:	2101      	movs	r1, #1
 800605c:	f00a 020f 	and.w	r2, sl, #15
 8006060:	fa01 f202 	lsl.w	r2, r1, r2
            USBx_DEVICE->DIEPEMPMSK &= ~fifoemptymsk;
 8006064:	ea23 0302 	bic.w	r3, r3, r2
 8006068:	636b      	str	r3, [r5, #52]	@ 0x34
            CLEAR_IN_EP_INTR(epnum, USB_OTG_DIEPINT_XFRC);
 800606a:	f8cb 1008 	str.w	r1, [fp, #8]
            if (hpcd->Init.dma_enable == 1U)
 800606e:	79a1      	ldrb	r1, [r4, #6]
 8006070:	2901      	cmp	r1, #1
 8006072:	d10d      	bne.n	8006090 <HAL_PCD_IRQHandler+0x4dc>
              hpcd->IN_ep[epnum].xfer_buff += hpcd->IN_ep[epnum].maxpacket;
 8006074:	e9d7 2307 	ldrd	r2, r3, [r7, #28]
 8006078:	4413      	add	r3, r2
 800607a:	623b      	str	r3, [r7, #32]
              if ((epnum == 0U) && (hpcd->IN_ep[epnum].xfer_len == 0U))
 800607c:	f1ba 0f00 	cmp.w	sl, #0
 8006080:	d106      	bne.n	8006090 <HAL_PCD_IRQHandler+0x4dc>
 8006082:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8006084:	b923      	cbnz	r3, 8006090 <HAL_PCD_IRQHandler+0x4dc>
                (void)USB_EP0_OutStart(hpcd->Instance, 1U, (uint8_t *)hpcd->Setup);
 8006086:	6820      	ldr	r0, [r4, #0]
 8006088:	f204 429c 	addw	r2, r4, #1180	@ 0x49c
 800608c:	f001 ff80 	bl	8007f90 <USB_EP0_OutStart>
            HAL_PCD_DataInStageCallback(hpcd, (uint8_t)epnum);
 8006090:	9905      	ldr	r1, [sp, #20]
 8006092:	4620      	mov	r0, r4
 8006094:	f7fc f8ad 	bl	80021f2 <HAL_PCD_DataInStageCallback>
          if ((epint & USB_OTG_DIEPINT_TOC) == USB_OTG_DIEPINT_TOC)
 8006098:	f018 0f08 	tst.w	r8, #8
            CLEAR_IN_EP_INTR(epnum, USB_OTG_DIEPINT_TOC);
 800609c:	bf1c      	itt	ne
 800609e:	2308      	movne	r3, #8
 80060a0:	f8cb 3008 	strne.w	r3, [fp, #8]
          if ((epint & USB_OTG_DIEPINT_ITTXFE) == USB_OTG_DIEPINT_ITTXFE)
 80060a4:	f018 0f10 	tst.w	r8, #16
            CLEAR_IN_EP_INTR(epnum, USB_OTG_DIEPINT_ITTXFE);
 80060a8:	bf1c      	itt	ne
 80060aa:	2310      	movne	r3, #16
 80060ac:	f8cb 3008 	strne.w	r3, [fp, #8]
          if ((epint & USB_OTG_DIEPINT_INEPNE) == USB_OTG_DIEPINT_INEPNE)
 80060b0:	f018 0f40 	tst.w	r8, #64	@ 0x40
            CLEAR_IN_EP_INTR(epnum, USB_OTG_DIEPINT_INEPNE);
 80060b4:	bf1c      	itt	ne
 80060b6:	2340      	movne	r3, #64	@ 0x40
 80060b8:	f8cb 3008 	strne.w	r3, [fp, #8]
          if ((epint & USB_OTG_DIEPINT_EPDISD) == USB_OTG_DIEPINT_EPDISD)
 80060bc:	f018 0f02 	tst.w	r8, #2
 80060c0:	d00f      	beq.n	80060e2 <HAL_PCD_IRQHandler+0x52e>
            (void)USB_FlushTxFifo(USBx, epnum);
 80060c2:	4651      	mov	r1, sl
 80060c4:	4630      	mov	r0, r6
 80060c6:	f001 fb85 	bl	80077d4 <USB_FlushTxFifo>
            if (ep->is_iso_incomplete == 1U)
 80060ca:	7dfb      	ldrb	r3, [r7, #23]
 80060cc:	2b01      	cmp	r3, #1
 80060ce:	d105      	bne.n	80060dc <HAL_PCD_IRQHandler+0x528>
              ep->is_iso_incomplete = 0U;
 80060d0:	2300      	movs	r3, #0
              HAL_PCD_ISOINIncompleteCallback(hpcd, (uint8_t)epnum);
 80060d2:	9905      	ldr	r1, [sp, #20]
              ep->is_iso_incomplete = 0U;
 80060d4:	75fb      	strb	r3, [r7, #23]
              HAL_PCD_ISOINIncompleteCallback(hpcd, (uint8_t)epnum);
 80060d6:	4620      	mov	r0, r4
 80060d8:	f7fc f8ca 	bl	8002270 <HAL_PCD_ISOINIncompleteCallback>
            CLEAR_IN_EP_INTR(epnum, USB_OTG_DIEPINT_EPDISD);
 80060dc:	2302      	movs	r3, #2
 80060de:	f8cb 3008 	str.w	r3, [fp, #8]
  USB_OTG_GlobalTypeDef *USBx = hpcd->Instance;
 80060e2:	6823      	ldr	r3, [r4, #0]
 80060e4:	9306      	str	r3, [sp, #24]
          if ((epint & USB_OTG_DIEPINT_TXFE) == USB_OTG_DIEPINT_TXFE)
 80060e6:	f018 0f80 	tst.w	r8, #128	@ 0x80
 80060ea:	d044      	beq.n	8006176 <HAL_PCD_IRQHandler+0x5c2>
  if (ep->xfer_count > ep->xfer_len)
 80060ec:	e9d7 3209 	ldrd	r3, r2, [r7, #36]	@ 0x24
 80060f0:	429a      	cmp	r2, r3
 80060f2:	d840      	bhi.n	8006176 <HAL_PCD_IRQHandler+0x5c2>
  len = ep->xfer_len - ep->xfer_count;
 80060f4:	eba3 0802 	sub.w	r8, r3, r2
  if (len > ep->maxpacket)
 80060f8:	69fb      	ldr	r3, [r7, #28]
 80060fa:	4598      	cmp	r8, r3
 80060fc:	bf28      	it	cs
 80060fe:	4698      	movcs	r8, r3
  while (((USBx_INEP(epnum)->DTXFSTS & USB_OTG_DTXFSTS_INEPTFSAV) >= len32b) &&
 8006100:	9b06      	ldr	r3, [sp, #24]
 8006102:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
  len32b = (len + 3U) / 4U;
 8006106:	f108 0803 	add.w	r8, r8, #3
  while (((USBx_INEP(epnum)->DTXFSTS & USB_OTG_DTXFSTS_INEPTFSAV) >= len32b) &&
 800610a:	eb03 134a 	add.w	r3, r3, sl, lsl #5
  len32b = (len + 3U) / 4U;
 800610e:	ea4f 0898 	mov.w	r8, r8, lsr #2
  while (((USBx_INEP(epnum)->DTXFSTS & USB_OTG_DTXFSTS_INEPTFSAV) >= len32b) &&
 8006112:	9307      	str	r3, [sp, #28]
 8006114:	9b07      	ldr	r3, [sp, #28]
 8006116:	6999      	ldr	r1, [r3, #24]
 8006118:	b289      	uxth	r1, r1
         (ep->xfer_count < ep->xfer_len) && (ep->xfer_len != 0U))
 800611a:	4541      	cmp	r1, r8
 800611c:	e9d7 3209 	ldrd	r3, r2, [r7, #36]	@ 0x24
 8006120:	d327      	bcc.n	8006172 <HAL_PCD_IRQHandler+0x5be>
  while (((USBx_INEP(epnum)->DTXFSTS & USB_OTG_DTXFSTS_INEPTFSAV) >= len32b) &&
 8006122:	4293      	cmp	r3, r2
 8006124:	d80b      	bhi.n	800613e <HAL_PCD_IRQHandler+0x58a>
    USBx_DEVICE->DIEPEMPMSK &= ~fifoemptymsk;
 8006126:	9b06      	ldr	r3, [sp, #24]
    fifoemptymsk = (uint32_t)(0x1UL << (epnum & EP_ADDR_MSK));
 8006128:	f00a 000f 	and.w	r0, sl, #15
    USBx_DEVICE->DIEPEMPMSK &= ~fifoemptymsk;
 800612c:	f8d3 2834 	ldr.w	r2, [r3, #2100]	@ 0x834
    fifoemptymsk = (uint32_t)(0x1UL << (epnum & EP_ADDR_MSK));
 8006130:	2101      	movs	r1, #1
 8006132:	4081      	lsls	r1, r0
    USBx_DEVICE->DIEPEMPMSK &= ~fifoemptymsk;
 8006134:	ea22 0201 	bic.w	r2, r2, r1
 8006138:	f8c3 2834 	str.w	r2, [r3, #2100]	@ 0x834
 800613c:	e01b      	b.n	8006176 <HAL_PCD_IRQHandler+0x5c2>
    len = ep->xfer_len - ep->xfer_count;
 800613e:	eba3 0902 	sub.w	r9, r3, r2
    if (len > ep->maxpacket)
 8006142:	69fb      	ldr	r3, [r7, #28]
    (void)USB_WritePacket(USBx, ep->xfer_buff, (uint8_t)epnum, (uint16_t)len,
 8006144:	9a05      	ldr	r2, [sp, #20]
 8006146:	9806      	ldr	r0, [sp, #24]
    if (len > ep->maxpacket)
 8006148:	4599      	cmp	r9, r3
 800614a:	bf28      	it	cs
 800614c:	4699      	movcs	r9, r3
    (void)USB_WritePacket(USBx, ep->xfer_buff, (uint8_t)epnum, (uint16_t)len,
 800614e:	79a3      	ldrb	r3, [r4, #6]
 8006150:	9300      	str	r3, [sp, #0]
 8006152:	6a39      	ldr	r1, [r7, #32]
 8006154:	fa1f f389 	uxth.w	r3, r9
 8006158:	f001 fd24 	bl	8007ba4 <USB_WritePacket>
    ep->xfer_buff  += len;
 800615c:	6a3b      	ldr	r3, [r7, #32]
 800615e:	444b      	add	r3, r9
 8006160:	623b      	str	r3, [r7, #32]
    ep->xfer_count += len;
 8006162:	6abb      	ldr	r3, [r7, #40]	@ 0x28
    len32b = (len + 3U) / 4U;
 8006164:	f109 0803 	add.w	r8, r9, #3
    ep->xfer_count += len;
 8006168:	444b      	add	r3, r9
    len32b = (len + 3U) / 4U;
 800616a:	ea4f 0898 	mov.w	r8, r8, lsr #2
    ep->xfer_count += len;
 800616e:	62bb      	str	r3, [r7, #40]	@ 0x28
 8006170:	e7d0      	b.n	8006114 <HAL_PCD_IRQHandler+0x560>
  if (ep->xfer_len <= ep->xfer_count)
 8006172:	4293      	cmp	r3, r2
 8006174:	d9d7      	bls.n	8006126 <HAL_PCD_IRQHandler+0x572>
        ep_intr >>= 1U;
 8006176:	9b04      	ldr	r3, [sp, #16]
 8006178:	085b      	lsrs	r3, r3, #1
        epnum++;
 800617a:	f10a 0a01 	add.w	sl, sl, #1
        ep_intr >>= 1U;
 800617e:	9304      	str	r3, [sp, #16]
 8006180:	3724      	adds	r7, #36	@ 0x24
 8006182:	f10b 0b20 	add.w	fp, fp, #32
 8006186:	e581      	b.n	8005c8c <HAL_PCD_IRQHandler+0xd8>
        HAL_PCD_ResumeCallback(hpcd);
 8006188:	4620      	mov	r0, r4
 800618a:	f7fc f869 	bl	8002260 <HAL_PCD_ResumeCallback>
 800618e:	e596      	b.n	8005cbe <HAL_PCD_IRQHandler+0x10a>
        USBx_INEP(i)->DIEPINT = 0xFB7FU;
 8006190:	6099      	str	r1, [r3, #8]
        USBx_INEP(i)->DIEPCTL &= ~USB_OTG_DIEPCTL_STALL;
 8006192:	681a      	ldr	r2, [r3, #0]
 8006194:	f422 1200 	bic.w	r2, r2, #2097152	@ 0x200000
 8006198:	601a      	str	r2, [r3, #0]
        USBx_OUTEP(i)->DOEPINT = 0xFB7FU;
 800619a:	f8c3 1208 	str.w	r1, [r3, #520]	@ 0x208
        USBx_OUTEP(i)->DOEPCTL &= ~USB_OTG_DOEPCTL_STALL;
 800619e:	f8d3 2200 	ldr.w	r2, [r3, #512]	@ 0x200
 80061a2:	f422 1200 	bic.w	r2, r2, #2097152	@ 0x200000
 80061a6:	f8c3 2200 	str.w	r2, [r3, #512]	@ 0x200
        USBx_OUTEP(i)->DOEPCTL |= USB_OTG_DOEPCTL_SNAK;
 80061aa:	f8d3 2200 	ldr.w	r2, [r3, #512]	@ 0x200
 80061ae:	f042 6200 	orr.w	r2, r2, #134217728	@ 0x8000000
 80061b2:	f8c3 2200 	str.w	r2, [r3, #512]	@ 0x200
      for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
 80061b6:	9a03      	ldr	r2, [sp, #12]
 80061b8:	3201      	adds	r2, #1
 80061ba:	9203      	str	r2, [sp, #12]
 80061bc:	3320      	adds	r3, #32
 80061be:	e5a5      	b.n	8005d0c <HAL_PCD_IRQHandler+0x158>
 80061c0:	4f54300a 	.word	0x4f54300a
 80061c4:	4f54310a 	.word	0x4f54310a
        USBx_DEVICE->DOEPMSK |= USB_OTG_DOEPMSK_STUPM |
 80061c8:	696b      	ldr	r3, [r5, #20]
 80061ca:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
 80061ce:	f043 032b 	orr.w	r3, r3, #43	@ 0x2b
 80061d2:	616b      	str	r3, [r5, #20]
        USBx_DEVICE->DIEPMSK |= USB_OTG_DIEPMSK_TOM |
 80061d4:	692b      	ldr	r3, [r5, #16]
 80061d6:	f043 030b 	orr.w	r3, r3, #11
 80061da:	612b      	str	r3, [r5, #16]
 80061dc:	e5ac      	b.n	8005d38 <HAL_PCD_IRQHandler+0x184>
      USBx->GINTMSK &= ~USB_OTG_GINTMSK_GONAKEFFM;
 80061de:	69b3      	ldr	r3, [r6, #24]
 80061e0:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 80061e4:	61b3      	str	r3, [r6, #24]
      for (epnum = 1U; epnum < hpcd->Init.dev_endpoints; epnum++)
 80061e6:	2701      	movs	r7, #1
        if (hpcd->OUT_ep[epnum].is_iso_incomplete == 1U)
 80061e8:	f204 2857 	addw	r8, r4, #599	@ 0x257
 80061ec:	f04f 0924 	mov.w	r9, #36	@ 0x24
      for (epnum = 1U; epnum < hpcd->Init.dev_endpoints; epnum++)
 80061f0:	7923      	ldrb	r3, [r4, #4]
 80061f2:	42bb      	cmp	r3, r7
 80061f4:	f67f ade0 	bls.w	8005db8 <HAL_PCD_IRQHandler+0x204>
        if (hpcd->OUT_ep[epnum].is_iso_incomplete == 1U)
 80061f8:	fb09 f307 	mul.w	r3, r9, r7
 80061fc:	f818 3003 	ldrb.w	r3, [r8, r3]
 8006200:	2b01      	cmp	r3, #1
 8006202:	d103      	bne.n	800620c <HAL_PCD_IRQHandler+0x658>
          (void)HAL_PCD_EP_Abort(hpcd, (uint8_t)epnum);
 8006204:	b2f9      	uxtb	r1, r7
 8006206:	4620      	mov	r0, r4
 8006208:	f7ff fcc3 	bl	8005b92 <HAL_PCD_EP_Abort>
      for (epnum = 1U; epnum < hpcd->Init.dev_endpoints; epnum++)
 800620c:	3701      	adds	r7, #1
 800620e:	e7ef      	b.n	80061f0 <HAL_PCD_IRQHandler+0x63c>
        if ((hpcd->IN_ep[epnum].type == EP_TYPE_ISOC) &&
 8006210:	f898 303c 	ldrb.w	r3, [r8, #60]	@ 0x3c
        RegVal = USBx_INEP(epnum)->DIEPCTL;
 8006214:	f8d9 2000 	ldr.w	r2, [r9]
        if ((hpcd->IN_ep[epnum].type == EP_TYPE_ISOC) &&
 8006218:	2b01      	cmp	r3, #1
 800621a:	d109      	bne.n	8006230 <HAL_PCD_IRQHandler+0x67c>
 800621c:	2a00      	cmp	r2, #0
 800621e:	da07      	bge.n	8006230 <HAL_PCD_IRQHandler+0x67c>
          (void)HAL_PCD_EP_Abort(hpcd, (uint8_t)(epnum | 0x80U));
 8006220:	f067 017f 	orn	r1, r7, #127	@ 0x7f
          hpcd->IN_ep[epnum].is_iso_incomplete = 1U;
 8006224:	f888 303b 	strb.w	r3, [r8, #59]	@ 0x3b
          (void)HAL_PCD_EP_Abort(hpcd, (uint8_t)(epnum | 0x80U));
 8006228:	b2c9      	uxtb	r1, r1
 800622a:	4620      	mov	r0, r4
 800622c:	f7ff fcb1 	bl	8005b92 <HAL_PCD_EP_Abort>
      for (epnum = 1U; epnum < hpcd->Init.dev_endpoints; epnum++)
 8006230:	3701      	adds	r7, #1
 8006232:	f108 0824 	add.w	r8, r8, #36	@ 0x24
 8006236:	f109 0920 	add.w	r9, r9, #32
 800623a:	e5c6      	b.n	8005dca <HAL_PCD_IRQHandler+0x216>
      for (epnum = 1U; epnum < hpcd->Init.dev_endpoints; epnum++)
 800623c:	3101      	adds	r1, #1
 800623e:	3324      	adds	r3, #36	@ 0x24
 8006240:	3020      	adds	r0, #32
 8006242:	e5d6      	b.n	8005df2 <HAL_PCD_IRQHandler+0x23e>

08006244 <HAL_PCDEx_SetTxFiFo>:
         --> Txn should be configured with the minimum space of 16 words
     The FIFO is used optimally when used TxFIFOs are allocated in the top
         of the FIFO.Ex: use EP1 and EP2 as IN instead of EP1 and EP3 as IN ones.
     When DMA is used 3n * FIFO locations should be reserved for internal DMA registers */

  Tx_Offset = hpcd->Instance->GRXFSIZ;
 8006244:	6800      	ldr	r0, [r0, #0]
{
 8006246:	b570      	push	{r4, r5, r6, lr}
  Tx_Offset = hpcd->Instance->GRXFSIZ;
 8006248:	6a43      	ldr	r3, [r0, #36]	@ 0x24

  if (fifo == 0U)
  {
    hpcd->Instance->DIEPTXF0_HNPTXFSIZ = ((uint32_t)size << 16) | Tx_Offset;
 800624a:	0412      	lsls	r2, r2, #16
  if (fifo == 0U)
 800624c:	b919      	cbnz	r1, 8006256 <HAL_PCDEx_SetTxFiFo+0x12>
    hpcd->Instance->DIEPTXF0_HNPTXFSIZ = ((uint32_t)size << 16) | Tx_Offset;
 800624e:	4313      	orrs	r3, r2
 8006250:	6283      	str	r3, [r0, #40]	@ 0x28
    /* Multiply Tx_Size by 2 to get higher performance */
    hpcd->Instance->DIEPTXF[fifo - 1U] = ((uint32_t)size << 16) | Tx_Offset;
  }

  return HAL_OK;
}
 8006252:	2000      	movs	r0, #0
 8006254:	bd70      	pop	{r4, r5, r6, pc}
    Tx_Offset += (hpcd->Instance->DIEPTXF0_HNPTXFSIZ) >> 16;
 8006256:	6a84      	ldr	r4, [r0, #40]	@ 0x28
    for (i = 0U; i < (fifo - 1U); i++)
 8006258:	1e4e      	subs	r6, r1, #1
    Tx_Offset += (hpcd->Instance->DIEPTXF0_HNPTXFSIZ) >> 16;
 800625a:	eb03 4314 	add.w	r3, r3, r4, lsr #16
    for (i = 0U; i < (fifo - 1U); i++)
 800625e:	2400      	movs	r4, #0
 8006260:	42b4      	cmp	r4, r6
 8006262:	d305      	bcc.n	8006270 <HAL_PCDEx_SetTxFiFo+0x2c>
    hpcd->Instance->DIEPTXF[fifo - 1U] = ((uint32_t)size << 16) | Tx_Offset;
 8006264:	313f      	adds	r1, #63	@ 0x3f
 8006266:	eb00 0081 	add.w	r0, r0, r1, lsl #2
 800626a:	4313      	orrs	r3, r2
 800626c:	6043      	str	r3, [r0, #4]
 800626e:	e7f0      	b.n	8006252 <HAL_PCDEx_SetTxFiFo+0xe>
      Tx_Offset += (hpcd->Instance->DIEPTXF[i] >> 16);
 8006270:	f104 0540 	add.w	r5, r4, #64	@ 0x40
 8006274:	eb00 0585 	add.w	r5, r0, r5, lsl #2
 8006278:	3401      	adds	r4, #1
 800627a:	686d      	ldr	r5, [r5, #4]
 800627c:	eb03 4315 	add.w	r3, r3, r5, lsr #16
    for (i = 0U; i < (fifo - 1U); i++)
 8006280:	e7ee      	b.n	8006260 <HAL_PCDEx_SetTxFiFo+0x1c>

08006282 <HAL_PCDEx_SetRxFiFo>:
  * @param  size Size of Rx fifo
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_PCDEx_SetRxFiFo(PCD_HandleTypeDef *hpcd, uint16_t size)
{
  hpcd->Instance->GRXFSIZ = size;
 8006282:	6803      	ldr	r3, [r0, #0]

  return HAL_OK;
}
 8006284:	2000      	movs	r0, #0
  hpcd->Instance->GRXFSIZ = size;
 8006286:	6259      	str	r1, [r3, #36]	@ 0x24
}
 8006288:	4770      	bx	lr

0800628a <HAL_PCDEx_LPM_Callback>:
  UNUSED(msg);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_PCDEx_LPM_Callback could be implemented in the user file
   */
}
 800628a:	4770      	bx	lr

0800628c <HAL_RCC_OscConfig>:
  *         supported by this API. User should request a transition to HSE Off
  *         first and then HSE On or HSE Bypass.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
 800628c:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
  uint32_t tickstart;
  uint32_t pll_config;
  /* Check Null pointer */
  if (RCC_OscInitStruct == NULL)
 8006290:	4604      	mov	r4, r0
 8006292:	b340      	cbz	r0, 80062e6 <HAL_RCC_OscConfig+0x5a>
  }

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
  /*------------------------------- HSE Configuration ------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 8006294:	6803      	ldr	r3, [r0, #0]
 8006296:	07de      	lsls	r6, r3, #31
 8006298:	d410      	bmi.n	80062bc <HAL_RCC_OscConfig+0x30>
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 800629a:	6823      	ldr	r3, [r4, #0]
 800629c:	079d      	lsls	r5, r3, #30
 800629e:	d45b      	bmi.n	8006358 <HAL_RCC_OscConfig+0xcc>
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 80062a0:	6823      	ldr	r3, [r4, #0]
 80062a2:	0719      	lsls	r1, r3, #28
 80062a4:	f100 809d 	bmi.w	80063e2 <HAL_RCC_OscConfig+0x156>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 80062a8:	6823      	ldr	r3, [r4, #0]
 80062aa:	075a      	lsls	r2, r3, #29
 80062ac:	f100 80bd 	bmi.w	800642a <HAL_RCC_OscConfig+0x19e>
    }
  }
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 80062b0:	69a3      	ldr	r3, [r4, #24]
 80062b2:	2b00      	cmp	r3, #0
 80062b4:	f040 8124 	bne.w	8006500 <HAL_RCC_OscConfig+0x274>
          return HAL_ERROR;
        }
      }
    }
  }
  return HAL_OK;
 80062b8:	2000      	movs	r0, #0
 80062ba:	e02c      	b.n	8006316 <HAL_RCC_OscConfig+0x8a>
    if ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) || \
 80062bc:	4b8d      	ldr	r3, [pc, #564]	@ (80064f4 <HAL_RCC_OscConfig+0x268>)
 80062be:	689a      	ldr	r2, [r3, #8]
 80062c0:	f002 020c 	and.w	r2, r2, #12
 80062c4:	2a04      	cmp	r2, #4
 80062c6:	d007      	beq.n	80062d8 <HAL_RCC_OscConfig+0x4c>
        ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 80062c8:	689a      	ldr	r2, [r3, #8]
 80062ca:	f002 020c 	and.w	r2, r2, #12
    if ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) || \
 80062ce:	2a08      	cmp	r2, #8
 80062d0:	d10b      	bne.n	80062ea <HAL_RCC_OscConfig+0x5e>
        ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 80062d2:	685b      	ldr	r3, [r3, #4]
 80062d4:	0259      	lsls	r1, r3, #9
 80062d6:	d508      	bpl.n	80062ea <HAL_RCC_OscConfig+0x5e>
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 80062d8:	4b86      	ldr	r3, [pc, #536]	@ (80064f4 <HAL_RCC_OscConfig+0x268>)
 80062da:	681b      	ldr	r3, [r3, #0]
 80062dc:	039a      	lsls	r2, r3, #14
 80062de:	d5dc      	bpl.n	800629a <HAL_RCC_OscConfig+0xe>
 80062e0:	6863      	ldr	r3, [r4, #4]
 80062e2:	2b00      	cmp	r3, #0
 80062e4:	d1d9      	bne.n	800629a <HAL_RCC_OscConfig+0xe>
    return HAL_ERROR;
 80062e6:	2001      	movs	r0, #1
 80062e8:	e015      	b.n	8006316 <HAL_RCC_OscConfig+0x8a>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 80062ea:	6863      	ldr	r3, [r4, #4]
 80062ec:	4d81      	ldr	r5, [pc, #516]	@ (80064f4 <HAL_RCC_OscConfig+0x268>)
 80062ee:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 80062f2:	d113      	bne.n	800631c <HAL_RCC_OscConfig+0x90>
 80062f4:	682b      	ldr	r3, [r5, #0]
 80062f6:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 80062fa:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
 80062fc:	f7fe fa16 	bl	800472c <HAL_GetTick>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8006300:	4e7c      	ldr	r6, [pc, #496]	@ (80064f4 <HAL_RCC_OscConfig+0x268>)
        tickstart = HAL_GetTick();
 8006302:	4605      	mov	r5, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8006304:	6833      	ldr	r3, [r6, #0]
 8006306:	039b      	lsls	r3, r3, #14
 8006308:	d4c7      	bmi.n	800629a <HAL_RCC_OscConfig+0xe>
          if ((HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
 800630a:	f7fe fa0f 	bl	800472c <HAL_GetTick>
 800630e:	1b40      	subs	r0, r0, r5
 8006310:	2864      	cmp	r0, #100	@ 0x64
 8006312:	d9f7      	bls.n	8006304 <HAL_RCC_OscConfig+0x78>
            return HAL_TIMEOUT;
 8006314:	2003      	movs	r0, #3
}
 8006316:	b002      	add	sp, #8
 8006318:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800631c:	f5b3 2fa0 	cmp.w	r3, #327680	@ 0x50000
 8006320:	d104      	bne.n	800632c <HAL_RCC_OscConfig+0xa0>
 8006322:	682b      	ldr	r3, [r5, #0]
 8006324:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 8006328:	602b      	str	r3, [r5, #0]
 800632a:	e7e3      	b.n	80062f4 <HAL_RCC_OscConfig+0x68>
 800632c:	682a      	ldr	r2, [r5, #0]
 800632e:	f422 3280 	bic.w	r2, r2, #65536	@ 0x10000
 8006332:	602a      	str	r2, [r5, #0]
 8006334:	682a      	ldr	r2, [r5, #0]
 8006336:	f422 2280 	bic.w	r2, r2, #262144	@ 0x40000
 800633a:	602a      	str	r2, [r5, #0]
      if ((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 800633c:	2b00      	cmp	r3, #0
 800633e:	d1dd      	bne.n	80062fc <HAL_RCC_OscConfig+0x70>
        tickstart = HAL_GetTick();
 8006340:	f7fe f9f4 	bl	800472c <HAL_GetTick>
 8006344:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 8006346:	682b      	ldr	r3, [r5, #0]
 8006348:	039f      	lsls	r7, r3, #14
 800634a:	d5a6      	bpl.n	800629a <HAL_RCC_OscConfig+0xe>
          if ((HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
 800634c:	f7fe f9ee 	bl	800472c <HAL_GetTick>
 8006350:	1b80      	subs	r0, r0, r6
 8006352:	2864      	cmp	r0, #100	@ 0x64
 8006354:	d9f7      	bls.n	8006346 <HAL_RCC_OscConfig+0xba>
 8006356:	e7dd      	b.n	8006314 <HAL_RCC_OscConfig+0x88>
    if ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) || \
 8006358:	4b66      	ldr	r3, [pc, #408]	@ (80064f4 <HAL_RCC_OscConfig+0x268>)
 800635a:	689a      	ldr	r2, [r3, #8]
 800635c:	f012 0f0c 	tst.w	r2, #12
 8006360:	d007      	beq.n	8006372 <HAL_RCC_OscConfig+0xe6>
        ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 8006362:	689a      	ldr	r2, [r3, #8]
 8006364:	f002 020c 	and.w	r2, r2, #12
    if ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) || \
 8006368:	2a08      	cmp	r2, #8
 800636a:	d111      	bne.n	8006390 <HAL_RCC_OscConfig+0x104>
        ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 800636c:	685b      	ldr	r3, [r3, #4]
 800636e:	025d      	lsls	r5, r3, #9
 8006370:	d40e      	bmi.n	8006390 <HAL_RCC_OscConfig+0x104>
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 8006372:	4a60      	ldr	r2, [pc, #384]	@ (80064f4 <HAL_RCC_OscConfig+0x268>)
 8006374:	6813      	ldr	r3, [r2, #0]
 8006376:	0799      	lsls	r1, r3, #30
 8006378:	d502      	bpl.n	8006380 <HAL_RCC_OscConfig+0xf4>
 800637a:	68e3      	ldr	r3, [r4, #12]
 800637c:	2b01      	cmp	r3, #1
 800637e:	d1b2      	bne.n	80062e6 <HAL_RCC_OscConfig+0x5a>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8006380:	6813      	ldr	r3, [r2, #0]
 8006382:	6921      	ldr	r1, [r4, #16]
 8006384:	f023 03f8 	bic.w	r3, r3, #248	@ 0xf8
 8006388:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 800638c:	6013      	str	r3, [r2, #0]
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 800638e:	e787      	b.n	80062a0 <HAL_RCC_OscConfig+0x14>
      if ((RCC_OscInitStruct->HSIState) != RCC_HSI_OFF)
 8006390:	68e2      	ldr	r2, [r4, #12]
 8006392:	4b59      	ldr	r3, [pc, #356]	@ (80064f8 <HAL_RCC_OscConfig+0x26c>)
 8006394:	b1b2      	cbz	r2, 80063c4 <HAL_RCC_OscConfig+0x138>
        __HAL_RCC_HSI_ENABLE();
 8006396:	2201      	movs	r2, #1
 8006398:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 800639a:	f7fe f9c7 	bl	800472c <HAL_GetTick>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800639e:	4d55      	ldr	r5, [pc, #340]	@ (80064f4 <HAL_RCC_OscConfig+0x268>)
        tickstart = HAL_GetTick();
 80063a0:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 80063a2:	682b      	ldr	r3, [r5, #0]
 80063a4:	079b      	lsls	r3, r3, #30
 80063a6:	d507      	bpl.n	80063b8 <HAL_RCC_OscConfig+0x12c>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 80063a8:	682b      	ldr	r3, [r5, #0]
 80063aa:	6922      	ldr	r2, [r4, #16]
 80063ac:	f023 03f8 	bic.w	r3, r3, #248	@ 0xf8
 80063b0:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 80063b4:	602b      	str	r3, [r5, #0]
 80063b6:	e773      	b.n	80062a0 <HAL_RCC_OscConfig+0x14>
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 80063b8:	f7fe f9b8 	bl	800472c <HAL_GetTick>
 80063bc:	1b80      	subs	r0, r0, r6
 80063be:	2802      	cmp	r0, #2
 80063c0:	d9ef      	bls.n	80063a2 <HAL_RCC_OscConfig+0x116>
 80063c2:	e7a7      	b.n	8006314 <HAL_RCC_OscConfig+0x88>
        __HAL_RCC_HSI_DISABLE();
 80063c4:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 80063c6:	f7fe f9b1 	bl	800472c <HAL_GetTick>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 80063ca:	4e4a      	ldr	r6, [pc, #296]	@ (80064f4 <HAL_RCC_OscConfig+0x268>)
        tickstart = HAL_GetTick();
 80063cc:	4605      	mov	r5, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 80063ce:	6833      	ldr	r3, [r6, #0]
 80063d0:	079f      	lsls	r7, r3, #30
 80063d2:	f57f af65 	bpl.w	80062a0 <HAL_RCC_OscConfig+0x14>
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 80063d6:	f7fe f9a9 	bl	800472c <HAL_GetTick>
 80063da:	1b40      	subs	r0, r0, r5
 80063dc:	2802      	cmp	r0, #2
 80063de:	d9f6      	bls.n	80063ce <HAL_RCC_OscConfig+0x142>
 80063e0:	e798      	b.n	8006314 <HAL_RCC_OscConfig+0x88>
    if ((RCC_OscInitStruct->LSIState) != RCC_LSI_OFF)
 80063e2:	6962      	ldr	r2, [r4, #20]
 80063e4:	4b44      	ldr	r3, [pc, #272]	@ (80064f8 <HAL_RCC_OscConfig+0x26c>)
 80063e6:	b182      	cbz	r2, 800640a <HAL_RCC_OscConfig+0x17e>
      __HAL_RCC_LSI_ENABLE();
 80063e8:	2201      	movs	r2, #1
 80063ea:	f8c3 2e80 	str.w	r2, [r3, #3712]	@ 0xe80
      tickstart = HAL_GetTick();
 80063ee:	f7fe f99d 	bl	800472c <HAL_GetTick>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 80063f2:	4e40      	ldr	r6, [pc, #256]	@ (80064f4 <HAL_RCC_OscConfig+0x268>)
      tickstart = HAL_GetTick();
 80063f4:	4605      	mov	r5, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 80063f6:	6f73      	ldr	r3, [r6, #116]	@ 0x74
 80063f8:	079b      	lsls	r3, r3, #30
 80063fa:	f53f af55 	bmi.w	80062a8 <HAL_RCC_OscConfig+0x1c>
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 80063fe:	f7fe f995 	bl	800472c <HAL_GetTick>
 8006402:	1b40      	subs	r0, r0, r5
 8006404:	2802      	cmp	r0, #2
 8006406:	d9f6      	bls.n	80063f6 <HAL_RCC_OscConfig+0x16a>
 8006408:	e784      	b.n	8006314 <HAL_RCC_OscConfig+0x88>
      __HAL_RCC_LSI_DISABLE();
 800640a:	f8c3 2e80 	str.w	r2, [r3, #3712]	@ 0xe80
      tickstart = HAL_GetTick();
 800640e:	f7fe f98d 	bl	800472c <HAL_GetTick>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 8006412:	4e38      	ldr	r6, [pc, #224]	@ (80064f4 <HAL_RCC_OscConfig+0x268>)
      tickstart = HAL_GetTick();
 8006414:	4605      	mov	r5, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 8006416:	6f73      	ldr	r3, [r6, #116]	@ 0x74
 8006418:	079f      	lsls	r7, r3, #30
 800641a:	f57f af45 	bpl.w	80062a8 <HAL_RCC_OscConfig+0x1c>
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 800641e:	f7fe f985 	bl	800472c <HAL_GetTick>
 8006422:	1b40      	subs	r0, r0, r5
 8006424:	2802      	cmp	r0, #2
 8006426:	d9f6      	bls.n	8006416 <HAL_RCC_OscConfig+0x18a>
 8006428:	e774      	b.n	8006314 <HAL_RCC_OscConfig+0x88>
    if (__HAL_RCC_PWR_IS_CLK_DISABLED())
 800642a:	4b32      	ldr	r3, [pc, #200]	@ (80064f4 <HAL_RCC_OscConfig+0x268>)
 800642c:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 800642e:	f012 5280 	ands.w	r2, r2, #268435456	@ 0x10000000
 8006432:	d128      	bne.n	8006486 <HAL_RCC_OscConfig+0x1fa>
      __HAL_RCC_PWR_CLK_ENABLE();
 8006434:	9201      	str	r2, [sp, #4]
 8006436:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 8006438:	f042 5280 	orr.w	r2, r2, #268435456	@ 0x10000000
 800643c:	641a      	str	r2, [r3, #64]	@ 0x40
 800643e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8006440:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8006444:	9301      	str	r3, [sp, #4]
 8006446:	9b01      	ldr	r3, [sp, #4]
      pwrclkchanged = SET;
 8006448:	2701      	movs	r7, #1
    if (HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 800644a:	4d2c      	ldr	r5, [pc, #176]	@ (80064fc <HAL_RCC_OscConfig+0x270>)
 800644c:	682b      	ldr	r3, [r5, #0]
 800644e:	05d8      	lsls	r0, r3, #23
 8006450:	d51b      	bpl.n	800648a <HAL_RCC_OscConfig+0x1fe>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8006452:	68a3      	ldr	r3, [r4, #8]
 8006454:	4d27      	ldr	r5, [pc, #156]	@ (80064f4 <HAL_RCC_OscConfig+0x268>)
 8006456:	2b01      	cmp	r3, #1
 8006458:	d127      	bne.n	80064aa <HAL_RCC_OscConfig+0x21e>
 800645a:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
 800645c:	f043 0301 	orr.w	r3, r3, #1
 8006460:	672b      	str	r3, [r5, #112]	@ 0x70
      tickstart = HAL_GetTick();
 8006462:	f7fe f963 	bl	800472c <HAL_GetTick>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8006466:	4e23      	ldr	r6, [pc, #140]	@ (80064f4 <HAL_RCC_OscConfig+0x268>)
      tickstart = HAL_GetTick();
 8006468:	4605      	mov	r5, r0
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 800646a:	f241 3888 	movw	r8, #5000	@ 0x1388
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800646e:	6f33      	ldr	r3, [r6, #112]	@ 0x70
 8006470:	079a      	lsls	r2, r3, #30
 8006472:	d539      	bpl.n	80064e8 <HAL_RCC_OscConfig+0x25c>
    if (pwrclkchanged == SET)
 8006474:	2f00      	cmp	r7, #0
 8006476:	f43f af1b 	beq.w	80062b0 <HAL_RCC_OscConfig+0x24>
      __HAL_RCC_PWR_CLK_DISABLE();
 800647a:	4a1e      	ldr	r2, [pc, #120]	@ (80064f4 <HAL_RCC_OscConfig+0x268>)
 800647c:	6c13      	ldr	r3, [r2, #64]	@ 0x40
 800647e:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 8006482:	6413      	str	r3, [r2, #64]	@ 0x40
 8006484:	e714      	b.n	80062b0 <HAL_RCC_OscConfig+0x24>
    FlagStatus       pwrclkchanged = RESET;
 8006486:	2700      	movs	r7, #0
 8006488:	e7df      	b.n	800644a <HAL_RCC_OscConfig+0x1be>
      SET_BIT(PWR->CR, PWR_CR_DBP);
 800648a:	682b      	ldr	r3, [r5, #0]
 800648c:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8006490:	602b      	str	r3, [r5, #0]
      tickstart = HAL_GetTick();
 8006492:	f7fe f94b 	bl	800472c <HAL_GetTick>
 8006496:	4606      	mov	r6, r0
      while (HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8006498:	682b      	ldr	r3, [r5, #0]
 800649a:	05d9      	lsls	r1, r3, #23
 800649c:	d4d9      	bmi.n	8006452 <HAL_RCC_OscConfig+0x1c6>
        if ((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 800649e:	f7fe f945 	bl	800472c <HAL_GetTick>
 80064a2:	1b80      	subs	r0, r0, r6
 80064a4:	2802      	cmp	r0, #2
 80064a6:	d9f7      	bls.n	8006498 <HAL_RCC_OscConfig+0x20c>
 80064a8:	e734      	b.n	8006314 <HAL_RCC_OscConfig+0x88>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 80064aa:	2b05      	cmp	r3, #5
 80064ac:	d104      	bne.n	80064b8 <HAL_RCC_OscConfig+0x22c>
 80064ae:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
 80064b0:	f043 0304 	orr.w	r3, r3, #4
 80064b4:	672b      	str	r3, [r5, #112]	@ 0x70
 80064b6:	e7d0      	b.n	800645a <HAL_RCC_OscConfig+0x1ce>
 80064b8:	6f2a      	ldr	r2, [r5, #112]	@ 0x70
 80064ba:	f022 0201 	bic.w	r2, r2, #1
 80064be:	672a      	str	r2, [r5, #112]	@ 0x70
 80064c0:	6f2a      	ldr	r2, [r5, #112]	@ 0x70
 80064c2:	f022 0204 	bic.w	r2, r2, #4
 80064c6:	672a      	str	r2, [r5, #112]	@ 0x70
    if ((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 80064c8:	2b00      	cmp	r3, #0
 80064ca:	d1ca      	bne.n	8006462 <HAL_RCC_OscConfig+0x1d6>
      tickstart = HAL_GetTick();
 80064cc:	f7fe f92e 	bl	800472c <HAL_GetTick>
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 80064d0:	f241 3888 	movw	r8, #5000	@ 0x1388
      tickstart = HAL_GetTick();
 80064d4:	4606      	mov	r6, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 80064d6:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
 80064d8:	079b      	lsls	r3, r3, #30
 80064da:	d5cb      	bpl.n	8006474 <HAL_RCC_OscConfig+0x1e8>
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 80064dc:	f7fe f926 	bl	800472c <HAL_GetTick>
 80064e0:	1b80      	subs	r0, r0, r6
 80064e2:	4540      	cmp	r0, r8
 80064e4:	d9f7      	bls.n	80064d6 <HAL_RCC_OscConfig+0x24a>
 80064e6:	e715      	b.n	8006314 <HAL_RCC_OscConfig+0x88>
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 80064e8:	f7fe f920 	bl	800472c <HAL_GetTick>
 80064ec:	1b40      	subs	r0, r0, r5
 80064ee:	4540      	cmp	r0, r8
 80064f0:	d9bd      	bls.n	800646e <HAL_RCC_OscConfig+0x1e2>
 80064f2:	e70f      	b.n	8006314 <HAL_RCC_OscConfig+0x88>
 80064f4:	40023800 	.word	0x40023800
 80064f8:	42470000 	.word	0x42470000
 80064fc:	40007000 	.word	0x40007000
    if (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
 8006500:	4d37      	ldr	r5, [pc, #220]	@ (80065e0 <HAL_RCC_OscConfig+0x354>)
 8006502:	68aa      	ldr	r2, [r5, #8]
 8006504:	f002 020c 	and.w	r2, r2, #12
 8006508:	2a08      	cmp	r2, #8
 800650a:	d03e      	beq.n	800658a <HAL_RCC_OscConfig+0x2fe>
      if ((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 800650c:	2b02      	cmp	r3, #2
 800650e:	4b35      	ldr	r3, [pc, #212]	@ (80065e4 <HAL_RCC_OscConfig+0x358>)
 8006510:	f04f 0200 	mov.w	r2, #0
        __HAL_RCC_PLL_DISABLE();
 8006514:	661a      	str	r2, [r3, #96]	@ 0x60
      if ((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 8006516:	d12b      	bne.n	8006570 <HAL_RCC_OscConfig+0x2e4>
        tickstart = HAL_GetTick();
 8006518:	f7fe f908 	bl	800472c <HAL_GetTick>
 800651c:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800651e:	682b      	ldr	r3, [r5, #0]
 8006520:	0199      	lsls	r1, r3, #6
 8006522:	d41f      	bmi.n	8006564 <HAL_RCC_OscConfig+0x2d8>
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 8006524:	e9d4 3207 	ldrd	r3, r2, [r4, #28]
 8006528:	4313      	orrs	r3, r2
 800652a:	6a62      	ldr	r2, [r4, #36]	@ 0x24
 800652c:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 8006530:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 8006532:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 8006536:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
 8006538:	0852      	lsrs	r2, r2, #1
 800653a:	3a01      	subs	r2, #1
 800653c:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8006540:	606b      	str	r3, [r5, #4]
        __HAL_RCC_PLL_ENABLE();
 8006542:	4b28      	ldr	r3, [pc, #160]	@ (80065e4 <HAL_RCC_OscConfig+0x358>)
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8006544:	4d26      	ldr	r5, [pc, #152]	@ (80065e0 <HAL_RCC_OscConfig+0x354>)
        __HAL_RCC_PLL_ENABLE();
 8006546:	2201      	movs	r2, #1
 8006548:	661a      	str	r2, [r3, #96]	@ 0x60
        tickstart = HAL_GetTick();
 800654a:	f7fe f8ef 	bl	800472c <HAL_GetTick>
 800654e:	4604      	mov	r4, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8006550:	682b      	ldr	r3, [r5, #0]
 8006552:	019a      	lsls	r2, r3, #6
 8006554:	f53f aeb0 	bmi.w	80062b8 <HAL_RCC_OscConfig+0x2c>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 8006558:	f7fe f8e8 	bl	800472c <HAL_GetTick>
 800655c:	1b00      	subs	r0, r0, r4
 800655e:	2802      	cmp	r0, #2
 8006560:	d9f6      	bls.n	8006550 <HAL_RCC_OscConfig+0x2c4>
 8006562:	e6d7      	b.n	8006314 <HAL_RCC_OscConfig+0x88>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 8006564:	f7fe f8e2 	bl	800472c <HAL_GetTick>
 8006568:	1b80      	subs	r0, r0, r6
 800656a:	2802      	cmp	r0, #2
 800656c:	d9d7      	bls.n	800651e <HAL_RCC_OscConfig+0x292>
 800656e:	e6d1      	b.n	8006314 <HAL_RCC_OscConfig+0x88>
        tickstart = HAL_GetTick();
 8006570:	f7fe f8dc 	bl	800472c <HAL_GetTick>
 8006574:	4604      	mov	r4, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8006576:	682b      	ldr	r3, [r5, #0]
 8006578:	019b      	lsls	r3, r3, #6
 800657a:	f57f ae9d 	bpl.w	80062b8 <HAL_RCC_OscConfig+0x2c>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 800657e:	f7fe f8d5 	bl	800472c <HAL_GetTick>
 8006582:	1b00      	subs	r0, r0, r4
 8006584:	2802      	cmp	r0, #2
 8006586:	d9f6      	bls.n	8006576 <HAL_RCC_OscConfig+0x2ea>
 8006588:	e6c4      	b.n	8006314 <HAL_RCC_OscConfig+0x88>
      if ((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 800658a:	2b01      	cmp	r3, #1
 800658c:	f43f aeab 	beq.w	80062e6 <HAL_RCC_OscConfig+0x5a>
        pll_config = RCC->PLLCFGR;
 8006590:	686b      	ldr	r3, [r5, #4]
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 8006592:	69e2      	ldr	r2, [r4, #28]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8006594:	f403 0180 	and.w	r1, r3, #4194304	@ 0x400000
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 8006598:	4291      	cmp	r1, r2
 800659a:	f47f aea4 	bne.w	80062e6 <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800659e:	6a21      	ldr	r1, [r4, #32]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 80065a0:	f003 023f 	and.w	r2, r3, #63	@ 0x3f
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 80065a4:	428a      	cmp	r2, r1
 80065a6:	f47f ae9e 	bne.w	80062e6 <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 80065aa:	6a61      	ldr	r1, [r4, #36]	@ 0x24
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 80065ac:	f647 72c0 	movw	r2, #32704	@ 0x7fc0
 80065b0:	401a      	ands	r2, r3
 80065b2:	ebb2 1f81 	cmp.w	r2, r1, lsl #6
 80065b6:	f47f ae96 	bne.w	80062e6 <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 80065ba:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
 80065bc:	0852      	lsrs	r2, r2, #1
 80065be:	f403 3140 	and.w	r1, r3, #196608	@ 0x30000
 80065c2:	3a01      	subs	r2, #1
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 80065c4:	ebb1 4f02 	cmp.w	r1, r2, lsl #16
 80065c8:	f47f ae8d 	bne.w	80062e6 <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)))
 80065cc:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 80065ce:	f003 6370 	and.w	r3, r3, #251658240	@ 0xf000000
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 80065d2:	ebb3 6f02 	cmp.w	r3, r2, lsl #24
 80065d6:	bf14      	ite	ne
 80065d8:	2001      	movne	r0, #1
 80065da:	2000      	moveq	r0, #0
 80065dc:	e69b      	b.n	8006316 <HAL_RCC_OscConfig+0x8a>
 80065de:	bf00      	nop
 80065e0:	40023800 	.word	0x40023800
 80065e4:	42470000 	.word	0x42470000

080065e8 <HAL_RCC_GetSysClockFreq>:
  uint32_t pllvco = 0U;
  uint32_t pllp = 0U;
  uint32_t sysclockfreq = 0U;

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (RCC->CFGR & RCC_CFGR_SWS)
 80065e8:	4913      	ldr	r1, [pc, #76]	@ (8006638 <HAL_RCC_GetSysClockFreq+0x50>)
{
 80065ea:	b508      	push	{r3, lr}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 80065ec:	688b      	ldr	r3, [r1, #8]
 80065ee:	f003 030c 	and.w	r3, r3, #12
 80065f2:	2b04      	cmp	r3, #4
 80065f4:	d01c      	beq.n	8006630 <HAL_RCC_GetSysClockFreq+0x48>
 80065f6:	2b08      	cmp	r3, #8
 80065f8:	d11c      	bne.n	8006634 <HAL_RCC_GetSysClockFreq+0x4c>
    }
    case RCC_CFGR_SWS_PLL:  /* PLL used as system clock  source */
    {
      /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLP */
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 80065fa:	684a      	ldr	r2, [r1, #4]
      if (__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 80065fc:	684b      	ldr	r3, [r1, #4]
      {
        /* HSE used as PLL clock source */
        pllvco = (uint32_t)((((uint64_t) HSE_VALUE * ((uint64_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 80065fe:	6849      	ldr	r1, [r1, #4]
      if (__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 8006600:	f413 0380 	ands.w	r3, r3, #4194304	@ 0x400000
        pllvco = (uint32_t)((((uint64_t) HSE_VALUE * ((uint64_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8006604:	bf14      	ite	ne
 8006606:	480d      	ldrne	r0, [pc, #52]	@ (800663c <HAL_RCC_GetSysClockFreq+0x54>)
      }
      else
      {
        /* HSI used as PLL clock source */
        pllvco = (uint32_t)((((uint64_t) HSI_VALUE * ((uint64_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8006608:	480d      	ldreq	r0, [pc, #52]	@ (8006640 <HAL_RCC_GetSysClockFreq+0x58>)
        pllvco = (uint32_t)((((uint64_t) HSE_VALUE * ((uint64_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800660a:	f3c1 1188 	ubfx	r1, r1, #6, #9
 800660e:	bf18      	it	ne
 8006610:	2300      	movne	r3, #0
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 8006612:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
        pllvco = (uint32_t)((((uint64_t) HSI_VALUE * ((uint64_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8006616:	fba1 0100 	umull	r0, r1, r1, r0
 800661a:	f7fa fb4d 	bl	8000cb8 <__aeabi_uldivmod>
      }
      pllp = ((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >> RCC_PLLCFGR_PLLP_Pos) + 1U) * 2U);
 800661e:	4b06      	ldr	r3, [pc, #24]	@ (8006638 <HAL_RCC_GetSysClockFreq+0x50>)
 8006620:	685b      	ldr	r3, [r3, #4]
 8006622:	f3c3 4301 	ubfx	r3, r3, #16, #2
 8006626:	3301      	adds	r3, #1
 8006628:	005b      	lsls	r3, r3, #1

      sysclockfreq = pllvco / pllp;
 800662a:	fbb0 f0f3 	udiv	r0, r0, r3
      sysclockfreq = HSI_VALUE;
      break;
    }
  }
  return sysclockfreq;
}
 800662e:	bd08      	pop	{r3, pc}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 8006630:	4802      	ldr	r0, [pc, #8]	@ (800663c <HAL_RCC_GetSysClockFreq+0x54>)
 8006632:	e7fc      	b.n	800662e <HAL_RCC_GetSysClockFreq+0x46>
      sysclockfreq = HSI_VALUE;
 8006634:	4802      	ldr	r0, [pc, #8]	@ (8006640 <HAL_RCC_GetSysClockFreq+0x58>)
  return sysclockfreq;
 8006636:	e7fa      	b.n	800662e <HAL_RCC_GetSysClockFreq+0x46>
 8006638:	40023800 	.word	0x40023800
 800663c:	007a1200 	.word	0x007a1200
 8006640:	00f42400 	.word	0x00f42400

08006644 <HAL_RCC_ClockConfig>:
{
 8006644:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8006648:	460d      	mov	r5, r1
  if (RCC_ClkInitStruct == NULL)
 800664a:	4604      	mov	r4, r0
 800664c:	b910      	cbnz	r0, 8006654 <HAL_RCC_ClockConfig+0x10>
    return HAL_ERROR;
 800664e:	2001      	movs	r0, #1
}
 8006650:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if (FLatency > __HAL_FLASH_GET_LATENCY())
 8006654:	4b43      	ldr	r3, [pc, #268]	@ (8006764 <HAL_RCC_ClockConfig+0x120>)
 8006656:	681a      	ldr	r2, [r3, #0]
 8006658:	f002 020f 	and.w	r2, r2, #15
 800665c:	428a      	cmp	r2, r1
 800665e:	d328      	bcc.n	80066b2 <HAL_RCC_ClockConfig+0x6e>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 8006660:	6821      	ldr	r1, [r4, #0]
 8006662:	078f      	lsls	r7, r1, #30
 8006664:	d42d      	bmi.n	80066c2 <HAL_RCC_ClockConfig+0x7e>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 8006666:	07c8      	lsls	r0, r1, #31
 8006668:	d440      	bmi.n	80066ec <HAL_RCC_ClockConfig+0xa8>
  if (FLatency < __HAL_FLASH_GET_LATENCY())
 800666a:	4b3e      	ldr	r3, [pc, #248]	@ (8006764 <HAL_RCC_ClockConfig+0x120>)
 800666c:	681a      	ldr	r2, [r3, #0]
 800666e:	f002 020f 	and.w	r2, r2, #15
 8006672:	42aa      	cmp	r2, r5
 8006674:	d865      	bhi.n	8006742 <HAL_RCC_ClockConfig+0xfe>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8006676:	6822      	ldr	r2, [r4, #0]
 8006678:	0751      	lsls	r1, r2, #29
 800667a:	d46b      	bmi.n	8006754 <HAL_RCC_ClockConfig+0x110>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 800667c:	0713      	lsls	r3, r2, #28
 800667e:	d507      	bpl.n	8006690 <HAL_RCC_ClockConfig+0x4c>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
 8006680:	4a39      	ldr	r2, [pc, #228]	@ (8006768 <HAL_RCC_ClockConfig+0x124>)
 8006682:	6921      	ldr	r1, [r4, #16]
 8006684:	6893      	ldr	r3, [r2, #8]
 8006686:	f423 4360 	bic.w	r3, r3, #57344	@ 0xe000
 800668a:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 800668e:	6093      	str	r3, [r2, #8]
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE) >> RCC_CFGR_HPRE_Pos];
 8006690:	f7ff ffaa 	bl	80065e8 <HAL_RCC_GetSysClockFreq>
 8006694:	4b34      	ldr	r3, [pc, #208]	@ (8006768 <HAL_RCC_ClockConfig+0x124>)
 8006696:	4a35      	ldr	r2, [pc, #212]	@ (800676c <HAL_RCC_ClockConfig+0x128>)
 8006698:	689b      	ldr	r3, [r3, #8]
 800669a:	f3c3 1303 	ubfx	r3, r3, #4, #4
 800669e:	5cd3      	ldrb	r3, [r2, r3]
 80066a0:	40d8      	lsrs	r0, r3
 80066a2:	4b33      	ldr	r3, [pc, #204]	@ (8006770 <HAL_RCC_ClockConfig+0x12c>)
 80066a4:	6018      	str	r0, [r3, #0]
  HAL_InitTick(uwTickPrio);
 80066a6:	4b33      	ldr	r3, [pc, #204]	@ (8006774 <HAL_RCC_ClockConfig+0x130>)
 80066a8:	6818      	ldr	r0, [r3, #0]
 80066aa:	f7fc fc6f 	bl	8002f8c <HAL_InitTick>
  return HAL_OK;
 80066ae:	2000      	movs	r0, #0
 80066b0:	e7ce      	b.n	8006650 <HAL_RCC_ClockConfig+0xc>
    __HAL_FLASH_SET_LATENCY(FLatency);
 80066b2:	b2ca      	uxtb	r2, r1
 80066b4:	701a      	strb	r2, [r3, #0]
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
 80066b6:	681b      	ldr	r3, [r3, #0]
 80066b8:	f003 030f 	and.w	r3, r3, #15
 80066bc:	428b      	cmp	r3, r1
 80066be:	d1c6      	bne.n	800664e <HAL_RCC_ClockConfig+0xa>
 80066c0:	e7ce      	b.n	8006660 <HAL_RCC_ClockConfig+0x1c>
    if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 80066c2:	4b29      	ldr	r3, [pc, #164]	@ (8006768 <HAL_RCC_ClockConfig+0x124>)
 80066c4:	f011 0f04 	tst.w	r1, #4
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 80066c8:	bf1e      	ittt	ne
 80066ca:	689a      	ldrne	r2, [r3, #8]
 80066cc:	f442 52e0 	orrne.w	r2, r2, #7168	@ 0x1c00
 80066d0:	609a      	strne	r2, [r3, #8]
    if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 80066d2:	070e      	lsls	r6, r1, #28
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3));
 80066d4:	bf42      	ittt	mi
 80066d6:	689a      	ldrmi	r2, [r3, #8]
 80066d8:	f442 4260 	orrmi.w	r2, r2, #57344	@ 0xe000
 80066dc:	609a      	strmi	r2, [r3, #8]
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 80066de:	689a      	ldr	r2, [r3, #8]
 80066e0:	68a0      	ldr	r0, [r4, #8]
 80066e2:	f022 02f0 	bic.w	r2, r2, #240	@ 0xf0
 80066e6:	4302      	orrs	r2, r0
 80066e8:	609a      	str	r2, [r3, #8]
 80066ea:	e7bc      	b.n	8006666 <HAL_RCC_ClockConfig+0x22>
    if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 80066ec:	6862      	ldr	r2, [r4, #4]
 80066ee:	4b1e      	ldr	r3, [pc, #120]	@ (8006768 <HAL_RCC_ClockConfig+0x124>)
 80066f0:	2a01      	cmp	r2, #1
 80066f2:	d11c      	bne.n	800672e <HAL_RCC_ClockConfig+0xea>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 80066f4:	681b      	ldr	r3, [r3, #0]
 80066f6:	f413 3f00 	tst.w	r3, #131072	@ 0x20000
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 80066fa:	d0a8      	beq.n	800664e <HAL_RCC_ClockConfig+0xa>
    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 80066fc:	4e1a      	ldr	r6, [pc, #104]	@ (8006768 <HAL_RCC_ClockConfig+0x124>)
 80066fe:	68b3      	ldr	r3, [r6, #8]
 8006700:	f023 0303 	bic.w	r3, r3, #3
 8006704:	4313      	orrs	r3, r2
 8006706:	60b3      	str	r3, [r6, #8]
    tickstart = HAL_GetTick();
 8006708:	f7fe f810 	bl	800472c <HAL_GetTick>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 800670c:	f241 3888 	movw	r8, #5000	@ 0x1388
    tickstart = HAL_GetTick();
 8006710:	4607      	mov	r7, r0
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 8006712:	68b3      	ldr	r3, [r6, #8]
 8006714:	6862      	ldr	r2, [r4, #4]
 8006716:	f003 030c 	and.w	r3, r3, #12
 800671a:	ebb3 0f82 	cmp.w	r3, r2, lsl #2
 800671e:	d0a4      	beq.n	800666a <HAL_RCC_ClockConfig+0x26>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 8006720:	f7fe f804 	bl	800472c <HAL_GetTick>
 8006724:	1bc0      	subs	r0, r0, r7
 8006726:	4540      	cmp	r0, r8
 8006728:	d9f3      	bls.n	8006712 <HAL_RCC_ClockConfig+0xce>
        return HAL_TIMEOUT;
 800672a:	2003      	movs	r0, #3
 800672c:	e790      	b.n	8006650 <HAL_RCC_ClockConfig+0xc>
    else if ((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 800672e:	1e91      	subs	r1, r2, #2
 8006730:	2901      	cmp	r1, #1
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8006732:	681b      	ldr	r3, [r3, #0]
    else if ((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 8006734:	d802      	bhi.n	800673c <HAL_RCC_ClockConfig+0xf8>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8006736:	f013 7f00 	tst.w	r3, #33554432	@ 0x2000000
 800673a:	e7de      	b.n	80066fa <HAL_RCC_ClockConfig+0xb6>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800673c:	f013 0f02 	tst.w	r3, #2
 8006740:	e7db      	b.n	80066fa <HAL_RCC_ClockConfig+0xb6>
    __HAL_FLASH_SET_LATENCY(FLatency);
 8006742:	b2ea      	uxtb	r2, r5
 8006744:	701a      	strb	r2, [r3, #0]
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
 8006746:	681b      	ldr	r3, [r3, #0]
 8006748:	f003 030f 	and.w	r3, r3, #15
 800674c:	42ab      	cmp	r3, r5
 800674e:	f47f af7e 	bne.w	800664e <HAL_RCC_ClockConfig+0xa>
 8006752:	e790      	b.n	8006676 <HAL_RCC_ClockConfig+0x32>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 8006754:	4904      	ldr	r1, [pc, #16]	@ (8006768 <HAL_RCC_ClockConfig+0x124>)
 8006756:	68e0      	ldr	r0, [r4, #12]
 8006758:	688b      	ldr	r3, [r1, #8]
 800675a:	f423 53e0 	bic.w	r3, r3, #7168	@ 0x1c00
 800675e:	4303      	orrs	r3, r0
 8006760:	608b      	str	r3, [r1, #8]
 8006762:	e78b      	b.n	800667c <HAL_RCC_ClockConfig+0x38>
 8006764:	40023c00 	.word	0x40023c00
 8006768:	40023800 	.word	0x40023800
 800676c:	08024f00 	.word	0x08024f00
 8006770:	200000c4 	.word	0x200000c4
 8006774:	200000cc 	.word	0x200000cc

08006778 <HAL_RCC_GetHCLKFreq>:
  * @retval HCLK frequency
  */
uint32_t HAL_RCC_GetHCLKFreq(void)
{
  return SystemCoreClock;
}
 8006778:	4b01      	ldr	r3, [pc, #4]	@ (8006780 <HAL_RCC_GetHCLKFreq+0x8>)
 800677a:	6818      	ldr	r0, [r3, #0]
 800677c:	4770      	bx	lr
 800677e:	bf00      	nop
 8006780:	200000c4 	.word	0x200000c4

08006784 <HAL_RCC_GetPCLK1Freq>:
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1) >> RCC_CFGR_PPRE1_Pos]);
 8006784:	4b04      	ldr	r3, [pc, #16]	@ (8006798 <HAL_RCC_GetPCLK1Freq+0x14>)
 8006786:	4a05      	ldr	r2, [pc, #20]	@ (800679c <HAL_RCC_GetPCLK1Freq+0x18>)
 8006788:	689b      	ldr	r3, [r3, #8]
 800678a:	f3c3 2382 	ubfx	r3, r3, #10, #3
 800678e:	5cd3      	ldrb	r3, [r2, r3]
 8006790:	4a03      	ldr	r2, [pc, #12]	@ (80067a0 <HAL_RCC_GetPCLK1Freq+0x1c>)
 8006792:	6810      	ldr	r0, [r2, #0]
}
 8006794:	40d8      	lsrs	r0, r3
 8006796:	4770      	bx	lr
 8006798:	40023800 	.word	0x40023800
 800679c:	08024ef8 	.word	0x08024ef8
 80067a0:	200000c4 	.word	0x200000c4

080067a4 <HAL_RCC_GetClockConfig>:
  * @retval None
  */
void HAL_RCC_GetClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t *pFLatency)
{
  /* Set all possible values for the Clock type parameter --------------------*/
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;
 80067a4:	230f      	movs	r3, #15
 80067a6:	6003      	str	r3, [r0, #0]

  /* Get the SYSCLK configuration --------------------------------------------*/
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 80067a8:	4b0b      	ldr	r3, [pc, #44]	@ (80067d8 <HAL_RCC_GetClockConfig+0x34>)
 80067aa:	689a      	ldr	r2, [r3, #8]
 80067ac:	f002 0203 	and.w	r2, r2, #3
 80067b0:	6042      	str	r2, [r0, #4]

  /* Get the HCLK configuration ----------------------------------------------*/
  RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_HPRE);
 80067b2:	689a      	ldr	r2, [r3, #8]
 80067b4:	f002 02f0 	and.w	r2, r2, #240	@ 0xf0
 80067b8:	6082      	str	r2, [r0, #8]

  /* Get the APB1 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_PPRE1);
 80067ba:	689a      	ldr	r2, [r3, #8]
 80067bc:	f402 52e0 	and.w	r2, r2, #7168	@ 0x1c00
 80067c0:	60c2      	str	r2, [r0, #12]

  /* Get the APB2 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 80067c2:	689b      	ldr	r3, [r3, #8]
 80067c4:	08db      	lsrs	r3, r3, #3
 80067c6:	f403 53e0 	and.w	r3, r3, #7168	@ 0x1c00
 80067ca:	6103      	str	r3, [r0, #16]

  /* Get the Flash Wait State (Latency) configuration ------------------------*/
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 80067cc:	4b03      	ldr	r3, [pc, #12]	@ (80067dc <HAL_RCC_GetClockConfig+0x38>)
 80067ce:	681b      	ldr	r3, [r3, #0]
 80067d0:	f003 030f 	and.w	r3, r3, #15
 80067d4:	600b      	str	r3, [r1, #0]
}
 80067d6:	4770      	bx	lr
 80067d8:	40023800 	.word	0x40023800
 80067dc:	40023c00 	.word	0x40023c00

080067e0 <HAL_RCCEx_PeriphCLKConfig>:
  /*----------------------- SAI/I2S Configuration (PLLI2S) -------------------*/
  /*----------------------- Common configuration SAI/I2S ---------------------*/
  /* In Case of SAI or I2S Clock Configuration through PLLI2S, PLLI2SN division
     factor is common parameters for both peripherals */
  if ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
      (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == RCC_PERIPHCLK_SAI_PLLI2S) ||
 80067e0:	6803      	ldr	r3, [r0, #0]
  if ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 80067e2:	f013 0f43 	tst.w	r3, #67	@ 0x43
{
 80067e6:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80067e8:	4604      	mov	r4, r0
  if ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 80067ea:	f040 8088 	bne.w	80068fe <HAL_RCCEx_PeriphCLKConfig+0x11e>

  /*----------------------- SAI/LTDC Configuration (PLLSAI) ------------------*/
  /*----------------------- Common configuration SAI/LTDC --------------------*/
  /* In Case of SAI or LTDC Clock Configuration through PLLSAI, PLLSAIN division
     factor is common parameters for both peripherals */
  if ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == RCC_PERIPHCLK_SAI_PLLSAI) ||
 80067ee:	6823      	ldr	r3, [r4, #0]
 80067f0:	f013 0f0c 	tst.w	r3, #12
 80067f4:	d045      	beq.n	8006882 <HAL_RCCEx_PeriphCLKConfig+0xa2>
  {
    /* Check the PLLSAI division factors */
    assert_param(IS_RCC_PLLSAIN_VALUE(PeriphClkInit->PLLSAI.PLLSAIN));

    /* Disable PLLSAI Clock */
    __HAL_RCC_PLLSAI_DISABLE();
 80067f6:	4b8c      	ldr	r3, [pc, #560]	@ (8006a28 <HAL_RCCEx_PeriphCLKConfig+0x248>)
    /* Get tick */
    tickstart = HAL_GetTick();
    /* Wait till PLLSAI is disabled */
    while (__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 80067f8:	4d8c      	ldr	r5, [pc, #560]	@ (8006a2c <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    __HAL_RCC_PLLSAI_DISABLE();
 80067fa:	2200      	movs	r2, #0
 80067fc:	671a      	str	r2, [r3, #112]	@ 0x70
    tickstart = HAL_GetTick();
 80067fe:	f7fd ff95 	bl	800472c <HAL_GetTick>
 8006802:	4606      	mov	r6, r0
    while (__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 8006804:	682b      	ldr	r3, [r5, #0]
 8006806:	0099      	lsls	r1, r3, #2
 8006808:	f100 80cb 	bmi.w	80069a2 <HAL_RCCEx_PeriphCLKConfig+0x1c2>
    }

    /*---------------------------- SAI configuration -------------------------*/
    /* In Case of SAI Clock Configuration through PLLSAI, PLLSAIQ and PLLSAI_DIVQ must
       be added only for SAI configuration */
    if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == (RCC_PERIPHCLK_SAI_PLLSAI))
 800680c:	6821      	ldr	r1, [r4, #0]
 800680e:	074a      	lsls	r2, r1, #29
 8006810:	d515      	bpl.n	800683e <HAL_RCCEx_PeriphCLKConfig+0x5e>
      /* Read PLLSAIR value from PLLSAICFGR register (this value is not need for SAI configuration) */
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* SAI_CLK(first level) = PLLSAI_VCO Output/PLLSAIQ */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN, PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 8006812:	e9d4 0304 	ldrd	r0, r3, [r4, #16]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
 8006816:	f8d5 2088 	ldr.w	r2, [r5, #136]	@ 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN, PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 800681a:	061b      	lsls	r3, r3, #24
 800681c:	f002 42e0 	and.w	r2, r2, #1879048192	@ 0x70000000
 8006820:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 8006824:	4313      	orrs	r3, r2
 8006826:	f8c5 3088 	str.w	r3, [r5, #136]	@ 0x88
      /* SAI_CLK_x = SAI_CLK(first level)/PLLSAIDIVQ */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLSAIDivQ);
 800682a:	f8d5 308c 	ldr.w	r3, [r5, #140]	@ 0x8c
 800682e:	6a22      	ldr	r2, [r4, #32]
 8006830:	f423 53f8 	bic.w	r3, r3, #7936	@ 0x1f00
 8006834:	3a01      	subs	r2, #1
 8006836:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 800683a:	f8c5 308c 	str.w	r3, [r5, #140]	@ 0x8c
    }

    /*---------------------------- LTDC configuration ------------------------*/
    if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == (RCC_PERIPHCLK_LTDC))
 800683e:	070b      	lsls	r3, r1, #28
 8006840:	d514      	bpl.n	800686c <HAL_RCCEx_PeriphCLKConfig+0x8c>
    {
      assert_param(IS_RCC_PLLSAIR_VALUE(PeriphClkInit->PLLSAI.PLLSAIR));
      assert_param(IS_RCC_PLLSAI_DIVR_VALUE(PeriphClkInit->PLLSAIDivR));

      /* Read PLLSAIR value from PLLSAICFGR register (this value is not need for SAI configuration) */
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 8006842:	4a7a      	ldr	r2, [pc, #488]	@ (8006a2c <HAL_RCCEx_PeriphCLKConfig+0x24c>)
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* LTDC_CLK(first level) = PLLSAI_VCO Output/PLLSAIR */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN, tmpreg1, PeriphClkInit->PLLSAI.PLLSAIR);
 8006844:	69a3      	ldr	r3, [r4, #24]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 8006846:	f8d2 1088 	ldr.w	r1, [r2, #136]	@ 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN, tmpreg1, PeriphClkInit->PLLSAI.PLLSAIR);
 800684a:	6920      	ldr	r0, [r4, #16]
 800684c:	071b      	lsls	r3, r3, #28
 800684e:	f001 6170 	and.w	r1, r1, #251658240	@ 0xf000000
 8006852:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 8006856:	430b      	orrs	r3, r1
 8006858:	f8c2 3088 	str.w	r3, [r2, #136]	@ 0x88
      /* LTDC_CLK = LTDC_CLK(first level)/PLLSAIDIVR */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVR_CONFIG(PeriphClkInit->PLLSAIDivR);
 800685c:	f8d2 308c 	ldr.w	r3, [r2, #140]	@ 0x8c
 8006860:	6a61      	ldr	r1, [r4, #36]	@ 0x24
 8006862:	f423 3340 	bic.w	r3, r3, #196608	@ 0x30000
 8006866:	430b      	orrs	r3, r1
 8006868:	f8c2 308c 	str.w	r3, [r2, #140]	@ 0x8c
    }
    /* Enable PLLSAI Clock */
    __HAL_RCC_PLLSAI_ENABLE();
 800686c:	4b6e      	ldr	r3, [pc, #440]	@ (8006a28 <HAL_RCCEx_PeriphCLKConfig+0x248>)
    /* Get tick */
    tickstart = HAL_GetTick();
    /* Wait till PLLSAI is ready */
    while (__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 800686e:	4e6f      	ldr	r6, [pc, #444]	@ (8006a2c <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    __HAL_RCC_PLLSAI_ENABLE();
 8006870:	2201      	movs	r2, #1
 8006872:	671a      	str	r2, [r3, #112]	@ 0x70
    tickstart = HAL_GetTick();
 8006874:	f7fd ff5a 	bl	800472c <HAL_GetTick>
 8006878:	4605      	mov	r5, r0
    while (__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 800687a:	6833      	ldr	r3, [r6, #0]
 800687c:	009f      	lsls	r7, r3, #2
 800687e:	f140 8097 	bpl.w	80069b0 <HAL_RCCEx_PeriphCLKConfig+0x1d0>
    }
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- RTC configuration ---------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 8006882:	6823      	ldr	r3, [r4, #0]
 8006884:	0698      	lsls	r0, r3, #26
 8006886:	d534      	bpl.n	80068f2 <HAL_RCCEx_PeriphCLKConfig+0x112>
  {
    /* Check for RTC Parameters used to output RTCCLK */
    assert_param(IS_RCC_RTCCLKSOURCE(PeriphClkInit->RTCClockSelection));

    /* Enable Power Clock*/
    __HAL_RCC_PWR_CLK_ENABLE();
 8006888:	2300      	movs	r3, #0
 800688a:	9301      	str	r3, [sp, #4]
 800688c:	4b67      	ldr	r3, [pc, #412]	@ (8006a2c <HAL_RCCEx_PeriphCLKConfig+0x24c>)

    /* Enable write access to Backup domain */
    PWR->CR |= PWR_CR_DBP;
 800688e:	4d68      	ldr	r5, [pc, #416]	@ (8006a30 <HAL_RCCEx_PeriphCLKConfig+0x250>)
    __HAL_RCC_PWR_CLK_ENABLE();
 8006890:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 8006892:	f042 5280 	orr.w	r2, r2, #268435456	@ 0x10000000
 8006896:	641a      	str	r2, [r3, #64]	@ 0x40
 8006898:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800689a:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 800689e:	9301      	str	r3, [sp, #4]
 80068a0:	9b01      	ldr	r3, [sp, #4]
    PWR->CR |= PWR_CR_DBP;
 80068a2:	682b      	ldr	r3, [r5, #0]
 80068a4:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 80068a8:	602b      	str	r3, [r5, #0]

    /* Get tick */
    tickstart = HAL_GetTick();
 80068aa:	f7fd ff3f 	bl	800472c <HAL_GetTick>
 80068ae:	4606      	mov	r6, r0

    while ((PWR->CR & PWR_CR_DBP) == RESET)
 80068b0:	682b      	ldr	r3, [r5, #0]
 80068b2:	05d8      	lsls	r0, r3, #23
 80068b4:	f140 8083 	bpl.w	80069be <HAL_RCCEx_PeriphCLKConfig+0x1de>
      {
        return HAL_TIMEOUT;
      }
    }
    /* Reset the Backup domain only if the RTC Clock source selection is modified from reset value */
    tmpreg1 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 80068b8:	4d5c      	ldr	r5, [pc, #368]	@ (8006a2c <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    if ((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 80068ba:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
    tmpreg1 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 80068bc:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
    if ((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 80068be:	f413 7340 	ands.w	r3, r3, #768	@ 0x300
 80068c2:	f040 8083 	bne.w	80069cc <HAL_RCCEx_PeriphCLKConfig+0x1ec>
            return HAL_TIMEOUT;
          }
        }
      }
    }
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 80068c6:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
 80068c8:	f403 7240 	and.w	r2, r3, #768	@ 0x300
 80068cc:	f5b2 7f40 	cmp.w	r2, #768	@ 0x300
 80068d0:	4a56      	ldr	r2, [pc, #344]	@ (8006a2c <HAL_RCCEx_PeriphCLKConfig+0x24c>)
 80068d2:	f040 809e 	bne.w	8006a12 <HAL_RCCEx_PeriphCLKConfig+0x232>
 80068d6:	6891      	ldr	r1, [r2, #8]
 80068d8:	f023 4070 	bic.w	r0, r3, #4026531840	@ 0xf0000000
 80068dc:	f421 11f8 	bic.w	r1, r1, #2031616	@ 0x1f0000
 80068e0:	f420 7040 	bic.w	r0, r0, #768	@ 0x300
 80068e4:	4301      	orrs	r1, r0
 80068e6:	6091      	str	r1, [r2, #8]
 80068e8:	6f11      	ldr	r1, [r2, #112]	@ 0x70
 80068ea:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80068ee:	430b      	orrs	r3, r1
 80068f0:	6713      	str	r3, [r2, #112]	@ 0x70
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- TIM configuration ---------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
 80068f2:	6823      	ldr	r3, [r4, #0]
 80068f4:	06db      	lsls	r3, r3, #27
 80068f6:	f100 8090 	bmi.w	8006a1a <HAL_RCCEx_PeriphCLKConfig+0x23a>
  {
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
  }
  return HAL_OK;
 80068fa:	2000      	movs	r0, #0
 80068fc:	e04f      	b.n	800699e <HAL_RCCEx_PeriphCLKConfig+0x1be>
    __HAL_RCC_PLLI2S_DISABLE();
 80068fe:	4b4a      	ldr	r3, [pc, #296]	@ (8006a28 <HAL_RCCEx_PeriphCLKConfig+0x248>)
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 8006900:	4e4a      	ldr	r6, [pc, #296]	@ (8006a2c <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    __HAL_RCC_PLLI2S_DISABLE();
 8006902:	2200      	movs	r2, #0
 8006904:	669a      	str	r2, [r3, #104]	@ 0x68
    tickstart = HAL_GetTick();
 8006906:	f7fd ff11 	bl	800472c <HAL_GetTick>
 800690a:	4605      	mov	r5, r0
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 800690c:	6833      	ldr	r3, [r6, #0]
 800690e:	011f      	lsls	r7, r3, #4
 8006910:	d43f      	bmi.n	8006992 <HAL_RCCEx_PeriphCLKConfig+0x1b2>
    if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == (RCC_PERIPHCLK_I2S))
 8006912:	6821      	ldr	r1, [r4, #0]
 8006914:	07c8      	lsls	r0, r1, #31
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, PeriphClkInit->PLLI2S.PLLI2SR);
 8006916:	bf41      	itttt	mi
 8006918:	e9d4 2301 	ldrdmi	r2, r3, [r4, #4]
 800691c:	071b      	lslmi	r3, r3, #28
 800691e:	ea43 1382 	orrmi.w	r3, r3, r2, lsl #6
 8006922:	f8c6 3084 	strmi.w	r3, [r6, #132]	@ 0x84
    if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == (RCC_PERIPHCLK_SAI_PLLI2S))
 8006926:	078a      	lsls	r2, r1, #30
 8006928:	d515      	bpl.n	8006956 <HAL_RCCEx_PeriphCLKConfig+0x176>
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 800692a:	4a40      	ldr	r2, [pc, #256]	@ (8006a2c <HAL_RCCEx_PeriphCLKConfig+0x24c>)
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, PeriphClkInit->PLLI2S.PLLI2SQ, tmpreg1);
 800692c:	68e3      	ldr	r3, [r4, #12]
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 800692e:	f8d2 0084 	ldr.w	r0, [r2, #132]	@ 0x84
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, PeriphClkInit->PLLI2S.PLLI2SQ, tmpreg1);
 8006932:	6865      	ldr	r5, [r4, #4]
 8006934:	061b      	lsls	r3, r3, #24
 8006936:	f000 40e0 	and.w	r0, r0, #1879048192	@ 0x70000000
 800693a:	ea43 1385 	orr.w	r3, r3, r5, lsl #6
 800693e:	4303      	orrs	r3, r0
 8006940:	f8c2 3084 	str.w	r3, [r2, #132]	@ 0x84
      __HAL_RCC_PLLI2S_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLI2SDivQ);
 8006944:	f8d2 008c 	ldr.w	r0, [r2, #140]	@ 0x8c
 8006948:	69e3      	ldr	r3, [r4, #28]
 800694a:	f020 001f 	bic.w	r0, r0, #31
 800694e:	3b01      	subs	r3, #1
 8006950:	4303      	orrs	r3, r0
 8006952:	f8c2 308c 	str.w	r3, [r2, #140]	@ 0x8c
    if ((PeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_PLLI2S) == RCC_PERIPHCLK_PLLI2S)
 8006956:	064b      	lsls	r3, r1, #25
 8006958:	d50a      	bpl.n	8006970 <HAL_RCCEx_PeriphCLKConfig+0x190>
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, PeriphClkInit->PLLI2S.PLLI2SQ,
 800695a:	68e3      	ldr	r3, [r4, #12]
 800695c:	6862      	ldr	r2, [r4, #4]
 800695e:	061b      	lsls	r3, r3, #24
 8006960:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 8006964:	68a2      	ldr	r2, [r4, #8]
 8006966:	ea43 7302 	orr.w	r3, r3, r2, lsl #28
 800696a:	4a30      	ldr	r2, [pc, #192]	@ (8006a2c <HAL_RCCEx_PeriphCLKConfig+0x24c>)
 800696c:	f8c2 3084 	str.w	r3, [r2, #132]	@ 0x84
    __HAL_RCC_PLLI2S_ENABLE();
 8006970:	4b2d      	ldr	r3, [pc, #180]	@ (8006a28 <HAL_RCCEx_PeriphCLKConfig+0x248>)
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 8006972:	4e2e      	ldr	r6, [pc, #184]	@ (8006a2c <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    __HAL_RCC_PLLI2S_ENABLE();
 8006974:	2201      	movs	r2, #1
 8006976:	669a      	str	r2, [r3, #104]	@ 0x68
    tickstart = HAL_GetTick();
 8006978:	f7fd fed8 	bl	800472c <HAL_GetTick>
 800697c:	4605      	mov	r5, r0
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 800697e:	6833      	ldr	r3, [r6, #0]
 8006980:	011f      	lsls	r7, r3, #4
 8006982:	f53f af34 	bmi.w	80067ee <HAL_RCCEx_PeriphCLKConfig+0xe>
      if ((HAL_GetTick() - tickstart) > PLLI2S_TIMEOUT_VALUE)
 8006986:	f7fd fed1 	bl	800472c <HAL_GetTick>
 800698a:	1b40      	subs	r0, r0, r5
 800698c:	2802      	cmp	r0, #2
 800698e:	d9f6      	bls.n	800697e <HAL_RCCEx_PeriphCLKConfig+0x19e>
 8006990:	e004      	b.n	800699c <HAL_RCCEx_PeriphCLKConfig+0x1bc>
      if ((HAL_GetTick() - tickstart) > PLLI2S_TIMEOUT_VALUE)
 8006992:	f7fd fecb 	bl	800472c <HAL_GetTick>
 8006996:	1b40      	subs	r0, r0, r5
 8006998:	2802      	cmp	r0, #2
 800699a:	d9b7      	bls.n	800690c <HAL_RCCEx_PeriphCLKConfig+0x12c>
        return HAL_TIMEOUT;
 800699c:	2003      	movs	r0, #3
}
 800699e:	b003      	add	sp, #12
 80069a0:	bdf0      	pop	{r4, r5, r6, r7, pc}
      if ((HAL_GetTick() - tickstart) > PLLSAI_TIMEOUT_VALUE)
 80069a2:	f7fd fec3 	bl	800472c <HAL_GetTick>
 80069a6:	1b80      	subs	r0, r0, r6
 80069a8:	2802      	cmp	r0, #2
 80069aa:	f67f af2b 	bls.w	8006804 <HAL_RCCEx_PeriphCLKConfig+0x24>
 80069ae:	e7f5      	b.n	800699c <HAL_RCCEx_PeriphCLKConfig+0x1bc>
      if ((HAL_GetTick() - tickstart) > PLLSAI_TIMEOUT_VALUE)
 80069b0:	f7fd febc 	bl	800472c <HAL_GetTick>
 80069b4:	1b40      	subs	r0, r0, r5
 80069b6:	2802      	cmp	r0, #2
 80069b8:	f67f af5f 	bls.w	800687a <HAL_RCCEx_PeriphCLKConfig+0x9a>
 80069bc:	e7ee      	b.n	800699c <HAL_RCCEx_PeriphCLKConfig+0x1bc>
      if ((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 80069be:	f7fd feb5 	bl	800472c <HAL_GetTick>
 80069c2:	1b80      	subs	r0, r0, r6
 80069c4:	2802      	cmp	r0, #2
 80069c6:	f67f af73 	bls.w	80068b0 <HAL_RCCEx_PeriphCLKConfig+0xd0>
 80069ca:	e7e7      	b.n	800699c <HAL_RCCEx_PeriphCLKConfig+0x1bc>
    if ((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 80069cc:	f402 7240 	and.w	r2, r2, #768	@ 0x300
 80069d0:	4293      	cmp	r3, r2
 80069d2:	f43f af78 	beq.w	80068c6 <HAL_RCCEx_PeriphCLKConfig+0xe6>
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 80069d6:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
      __HAL_RCC_BACKUPRESET_FORCE();
 80069d8:	4a13      	ldr	r2, [pc, #76]	@ (8006a28 <HAL_RCCEx_PeriphCLKConfig+0x248>)
 80069da:	2101      	movs	r1, #1
 80069dc:	f8c2 1e40 	str.w	r1, [r2, #3648]	@ 0xe40
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 80069e0:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
      __HAL_RCC_BACKUPRESET_RELEASE();
 80069e4:	2100      	movs	r1, #0
 80069e6:	f8c2 1e40 	str.w	r1, [r2, #3648]	@ 0xe40
      RCC->BDCR = tmpreg1;
 80069ea:	672b      	str	r3, [r5, #112]	@ 0x70
      if (HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSEON))
 80069ec:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
 80069ee:	07d9      	lsls	r1, r3, #31
 80069f0:	f57f af69 	bpl.w	80068c6 <HAL_RCCEx_PeriphCLKConfig+0xe6>
        tickstart = HAL_GetTick();
 80069f4:	f7fd fe9a 	bl	800472c <HAL_GetTick>
          if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 80069f8:	f241 3788 	movw	r7, #5000	@ 0x1388
        tickstart = HAL_GetTick();
 80069fc:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 80069fe:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
 8006a00:	079a      	lsls	r2, r3, #30
 8006a02:	f53f af60 	bmi.w	80068c6 <HAL_RCCEx_PeriphCLKConfig+0xe6>
          if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8006a06:	f7fd fe91 	bl	800472c <HAL_GetTick>
 8006a0a:	1b80      	subs	r0, r0, r6
 8006a0c:	42b8      	cmp	r0, r7
 8006a0e:	d9f6      	bls.n	80069fe <HAL_RCCEx_PeriphCLKConfig+0x21e>
 8006a10:	e7c4      	b.n	800699c <HAL_RCCEx_PeriphCLKConfig+0x1bc>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 8006a12:	6891      	ldr	r1, [r2, #8]
 8006a14:	f421 11f8 	bic.w	r1, r1, #2031616	@ 0x1f0000
 8006a18:	e765      	b.n	80068e6 <HAL_RCCEx_PeriphCLKConfig+0x106>
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
 8006a1a:	4b06      	ldr	r3, [pc, #24]	@ (8006a34 <HAL_RCCEx_PeriphCLKConfig+0x254>)
 8006a1c:	f894 202c 	ldrb.w	r2, [r4, #44]	@ 0x2c
 8006a20:	f8c3 21e0 	str.w	r2, [r3, #480]	@ 0x1e0
 8006a24:	e769      	b.n	80068fa <HAL_RCCEx_PeriphCLKConfig+0x11a>
 8006a26:	bf00      	nop
 8006a28:	42470000 	.word	0x42470000
 8006a2c:	40023800 	.word	0x40023800
 8006a30:	40007000 	.word	0x40007000
 8006a34:	42471000 	.word	0x42471000

08006a38 <HAL_SDRAM_Init>:
  *                the configuration information for SDRAM module.
  * @param  Timing Pointer to SDRAM control timing structure
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_Init(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_TimingTypeDef *Timing)
{
 8006a38:	b538      	push	{r3, r4, r5, lr}
 8006a3a:	460d      	mov	r5, r1
  /* Check the SDRAM handle parameter */
  if (hsdram == NULL)
 8006a3c:	4604      	mov	r4, r0
 8006a3e:	b1c8      	cbz	r0, 8006a74 <HAL_SDRAM_Init+0x3c>
  {
    return HAL_ERROR;
  }

  if (hsdram->State == HAL_SDRAM_STATE_RESET)
 8006a40:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c
 8006a44:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 8006a48:	b91b      	cbnz	r3, 8006a52 <HAL_SDRAM_Init+0x1a>
  {
    /* Allocate lock resource and initialize it */
    hsdram->Lock = HAL_UNLOCKED;
 8006a4a:	f880 202d 	strb.w	r2, [r0, #45]	@ 0x2d

    /* Init the low level hardware */
    hsdram->MspInitCallback(hsdram);
#else
    /* Initialize the low level hardware (MSP) */
    HAL_SDRAM_MspInit(hsdram);
 8006a4e:	f7fc fa31 	bl	8002eb4 <HAL_SDRAM_MspInit>
#endif /* USE_HAL_SDRAM_REGISTER_CALLBACKS */
  }

  /* Initialize the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 8006a52:	2302      	movs	r3, #2
 8006a54:	f884 302c 	strb.w	r3, [r4, #44]	@ 0x2c

  /* Initialize SDRAM control Interface */
  (void)FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
 8006a58:	1d21      	adds	r1, r4, #4
 8006a5a:	6820      	ldr	r0, [r4, #0]
 8006a5c:	f000 fd0e 	bl	800747c <FMC_SDRAM_Init>

  /* Initialize SDRAM timing Interface */
  (void)FMC_SDRAM_Timing_Init(hsdram->Instance, Timing, hsdram->Init.SDBank);
 8006a60:	6862      	ldr	r2, [r4, #4]
 8006a62:	6820      	ldr	r0, [r4, #0]
 8006a64:	4629      	mov	r1, r5
 8006a66:	f000 fd3f 	bl	80074e8 <FMC_SDRAM_Timing_Init>
  /* Update the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_READY;
 8006a6a:	2301      	movs	r3, #1
 8006a6c:	f884 302c 	strb.w	r3, [r4, #44]	@ 0x2c

  return HAL_OK;
 8006a70:	2000      	movs	r0, #0
}
 8006a72:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 8006a74:	2001      	movs	r0, #1
 8006a76:	e7fc      	b.n	8006a72 <HAL_SDRAM_Init+0x3a>

08006a78 <HAL_SDRAM_SendCommand>:
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_SendCommand(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_CommandTypeDef *Command,
                                        uint32_t Timeout)
{
 8006a78:	b570      	push	{r4, r5, r6, lr}
  HAL_SDRAM_StateTypeDef state = hsdram->State;
 8006a7a:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c

  /* Check the SDRAM controller state */
  if (state == HAL_SDRAM_STATE_BUSY)
 8006a7e:	2b02      	cmp	r3, #2
{
 8006a80:	4605      	mov	r5, r0
 8006a82:	460e      	mov	r6, r1
  HAL_SDRAM_StateTypeDef state = hsdram->State;
 8006a84:	b2d8      	uxtb	r0, r3
  if (state == HAL_SDRAM_STATE_BUSY)
 8006a86:	d012      	beq.n	8006aae <HAL_SDRAM_SendCommand+0x36>
  {
    return HAL_BUSY;
  }
  else if ((state == HAL_SDRAM_STATE_READY) || (state == HAL_SDRAM_STATE_PRECHARGED))
 8006a88:	f000 04fb 	and.w	r4, r0, #251	@ 0xfb
 8006a8c:	2c01      	cmp	r4, #1
 8006a8e:	d10f      	bne.n	8006ab0 <HAL_SDRAM_SendCommand+0x38>
  {
    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 8006a90:	2302      	movs	r3, #2
 8006a92:	f885 302c 	strb.w	r3, [r5, #44]	@ 0x2c

    /* Send SDRAM command */
    (void)FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
 8006a96:	6828      	ldr	r0, [r5, #0]
 8006a98:	f000 fd5c 	bl	8007554 <FMC_SDRAM_SendCommand>

    /* Update the SDRAM controller state state */
    if (Command->CommandMode == FMC_SDRAM_CMD_PALL)
 8006a9c:	6833      	ldr	r3, [r6, #0]
 8006a9e:	2b02      	cmp	r3, #2
    {
      hsdram->State = HAL_SDRAM_STATE_PRECHARGED;
 8006aa0:	bf06      	itte	eq
 8006aa2:	2305      	moveq	r3, #5
 8006aa4:	f885 302c 	strbeq.w	r3, [r5, #44]	@ 0x2c
    }
    else
    {
      hsdram->State = HAL_SDRAM_STATE_READY;
 8006aa8:	f885 402c 	strbne.w	r4, [r5, #44]	@ 0x2c
  else
  {
    return HAL_ERROR;
  }

  return HAL_OK;
 8006aac:	2000      	movs	r0, #0
}
 8006aae:	bd70      	pop	{r4, r5, r6, pc}
    return HAL_ERROR;
 8006ab0:	2001      	movs	r0, #1
 8006ab2:	e7fc      	b.n	8006aae <HAL_SDRAM_SendCommand+0x36>

08006ab4 <HAL_SDRAM_ProgramRefreshRate>:
  *                the configuration information for SDRAM module.
  * @param  RefreshRate The SDRAM refresh rate value
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_ProgramRefreshRate(SDRAM_HandleTypeDef *hsdram, uint32_t RefreshRate)
{
 8006ab4:	b538      	push	{r3, r4, r5, lr}
  /* Check the SDRAM controller state */
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
 8006ab6:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c
 8006aba:	2b02      	cmp	r3, #2
{
 8006abc:	4604      	mov	r4, r0
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
 8006abe:	b2d8      	uxtb	r0, r3
 8006ac0:	d00d      	beq.n	8006ade <HAL_SDRAM_ProgramRefreshRate+0x2a>
  {
    return HAL_BUSY;
  }
  else if (hsdram->State == HAL_SDRAM_STATE_READY)
 8006ac2:	f894 302c 	ldrb.w	r3, [r4, #44]	@ 0x2c
 8006ac6:	2b01      	cmp	r3, #1
 8006ac8:	b2dd      	uxtb	r5, r3
 8006aca:	d109      	bne.n	8006ae0 <HAL_SDRAM_ProgramRefreshRate+0x2c>
  {
    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 8006acc:	2302      	movs	r3, #2

    /* Program the refresh rate */
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
 8006ace:	6820      	ldr	r0, [r4, #0]
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 8006ad0:	f884 302c 	strb.w	r3, [r4, #44]	@ 0x2c
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
 8006ad4:	f000 fd62 	bl	800759c <FMC_SDRAM_ProgramRefreshRate>

    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_READY;
 8006ad8:	f884 502c 	strb.w	r5, [r4, #44]	@ 0x2c
  else
  {
    return HAL_ERROR;
  }

  return HAL_OK;
 8006adc:	2000      	movs	r0, #0
}
 8006ade:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 8006ae0:	2001      	movs	r0, #1
 8006ae2:	e7fc      	b.n	8006ade <HAL_SDRAM_ProgramRefreshRate+0x2a>

08006ae4 <SPI_WaitFlagStateUntilTimeout>:
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_WaitFlagStateUntilTimeout(SPI_HandleTypeDef *hspi, uint32_t Flag, FlagStatus State,
                                                       uint32_t Timeout, uint32_t Tickstart)
{
 8006ae4:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 8006ae8:	461f      	mov	r7, r3
 8006aea:	4689      	mov	r9, r1
 8006aec:	4690      	mov	r8, r2
 8006aee:	4604      	mov	r4, r0
  __IO uint32_t count;
  uint32_t tmp_timeout;
  uint32_t tmp_tickstart;

  /* Adjust Timeout value  in case of end of transfer */
  tmp_timeout   = Timeout - (HAL_GetTick() - Tickstart);
 8006af0:	f7fd fe1c 	bl	800472c <HAL_GetTick>
 8006af4:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
 8006af6:	443d      	add	r5, r7
 8006af8:	1a2d      	subs	r5, r5, r0
  tmp_tickstart = HAL_GetTick();
 8006afa:	f7fd fe17 	bl	800472c <HAL_GetTick>

  /* Calculate Timeout based on a software loop to avoid blocking issue if Systick is disabled */
  count = tmp_timeout * ((SystemCoreClock * 32U) >> 20U);
 8006afe:	4b26      	ldr	r3, [pc, #152]	@ (8006b98 <SPI_WaitFlagStateUntilTimeout+0xb4>)
 8006b00:	681e      	ldr	r6, [r3, #0]
 8006b02:	f3c6 36cb 	ubfx	r6, r6, #15, #12
 8006b06:	436e      	muls	r6, r5
  tmp_tickstart = HAL_GetTick();
 8006b08:	4682      	mov	sl, r0
  count = tmp_timeout * ((SystemCoreClock * 32U) >> 20U);
 8006b0a:	9601      	str	r6, [sp, #4]

  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 8006b0c:	6822      	ldr	r2, [r4, #0]
 8006b0e:	6893      	ldr	r3, [r2, #8]
 8006b10:	ea39 0303 	bics.w	r3, r9, r3
 8006b14:	bf0c      	ite	eq
 8006b16:	2301      	moveq	r3, #1
 8006b18:	2300      	movne	r3, #0
 8006b1a:	4543      	cmp	r3, r8
 8006b1c:	d101      	bne.n	8006b22 <SPI_WaitFlagStateUntilTimeout+0x3e>
      }
      count--;
    }
  }

  return HAL_OK;
 8006b1e:	2000      	movs	r0, #0
 8006b20:	e02e      	b.n	8006b80 <SPI_WaitFlagStateUntilTimeout+0x9c>
    if (Timeout != HAL_MAX_DELAY)
 8006b22:	1c7b      	adds	r3, r7, #1
 8006b24:	d0f3      	beq.n	8006b0e <SPI_WaitFlagStateUntilTimeout+0x2a>
      if (((HAL_GetTick() - tmp_tickstart) >= tmp_timeout) || (tmp_timeout == 0U))
 8006b26:	f7fd fe01 	bl	800472c <HAL_GetTick>
 8006b2a:	eba0 000a 	sub.w	r0, r0, sl
 8006b2e:	42a8      	cmp	r0, r5
 8006b30:	d329      	bcc.n	8006b86 <SPI_WaitFlagStateUntilTimeout+0xa2>
        __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
 8006b32:	6823      	ldr	r3, [r4, #0]
 8006b34:	685a      	ldr	r2, [r3, #4]
 8006b36:	f022 02e0 	bic.w	r2, r2, #224	@ 0xe0
 8006b3a:	605a      	str	r2, [r3, #4]
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8006b3c:	6862      	ldr	r2, [r4, #4]
 8006b3e:	f5b2 7f82 	cmp.w	r2, #260	@ 0x104
 8006b42:	d10a      	bne.n	8006b5a <SPI_WaitFlagStateUntilTimeout+0x76>
 8006b44:	68a2      	ldr	r2, [r4, #8]
 8006b46:	f5b2 4f00 	cmp.w	r2, #32768	@ 0x8000
 8006b4a:	d002      	beq.n	8006b52 <SPI_WaitFlagStateUntilTimeout+0x6e>
                                                     || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 8006b4c:	f5b2 6f80 	cmp.w	r2, #1024	@ 0x400
 8006b50:	d103      	bne.n	8006b5a <SPI_WaitFlagStateUntilTimeout+0x76>
          __HAL_SPI_DISABLE(hspi);
 8006b52:	681a      	ldr	r2, [r3, #0]
 8006b54:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 8006b58:	601a      	str	r2, [r3, #0]
        if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 8006b5a:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
 8006b5c:	f5b2 5f00 	cmp.w	r2, #8192	@ 0x2000
 8006b60:	d107      	bne.n	8006b72 <SPI_WaitFlagStateUntilTimeout+0x8e>
          SPI_RESET_CRC(hspi);
 8006b62:	681a      	ldr	r2, [r3, #0]
 8006b64:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
 8006b68:	601a      	str	r2, [r3, #0]
 8006b6a:	681a      	ldr	r2, [r3, #0]
 8006b6c:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
 8006b70:	601a      	str	r2, [r3, #0]
        hspi->State = HAL_SPI_STATE_READY;
 8006b72:	2301      	movs	r3, #1
 8006b74:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
        __HAL_UNLOCK(hspi);
 8006b78:	2300      	movs	r3, #0
 8006b7a:	f884 3050 	strb.w	r3, [r4, #80]	@ 0x50
        return HAL_TIMEOUT;
 8006b7e:	2003      	movs	r0, #3
}
 8006b80:	b002      	add	sp, #8
 8006b82:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
      if (count == 0U)
 8006b86:	9a01      	ldr	r2, [sp, #4]
      count--;
 8006b88:	9b01      	ldr	r3, [sp, #4]
      if (count == 0U)
 8006b8a:	2a00      	cmp	r2, #0
      count--;
 8006b8c:	f103 33ff 	add.w	r3, r3, #4294967295
 8006b90:	9301      	str	r3, [sp, #4]
 8006b92:	bf08      	it	eq
 8006b94:	4615      	moveq	r5, r2
 8006b96:	e7b9      	b.n	8006b0c <SPI_WaitFlagStateUntilTimeout+0x28>
 8006b98:	200000c4 	.word	0x200000c4

08006b9c <SPI_EndRxTxTransaction>:
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_EndRxTxTransaction(SPI_HandleTypeDef *hspi, uint32_t Timeout, uint32_t Tickstart)
{
 8006b9c:	b5f0      	push	{r4, r5, r6, r7, lr}
 8006b9e:	b085      	sub	sp, #20
  /* Wait until TXE flag */
  if(SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_TXE, SET, Timeout, Tickstart) != HAL_OK)
 8006ba0:	460b      	mov	r3, r1
 8006ba2:	9200      	str	r2, [sp, #0]
{
 8006ba4:	460e      	mov	r6, r1
 8006ba6:	4617      	mov	r7, r2
  if(SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_TXE, SET, Timeout, Tickstart) != HAL_OK)
 8006ba8:	2102      	movs	r1, #2
 8006baa:	2201      	movs	r2, #1
{
 8006bac:	4604      	mov	r4, r0
  if(SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_TXE, SET, Timeout, Tickstart) != HAL_OK)
 8006bae:	f7ff ff99 	bl	8006ae4 <SPI_WaitFlagStateUntilTimeout>
 8006bb2:	4605      	mov	r5, r0
 8006bb4:	b128      	cbz	r0, 8006bc2 <SPI_EndRxTxTransaction+0x26>
  if (hspi->Init.Mode == SPI_MODE_MASTER)
  {
    /* Control the BSY flag */
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 8006bb6:	6d63      	ldr	r3, [r4, #84]	@ 0x54
 8006bb8:	f043 0320 	orr.w	r3, r3, #32
 8006bbc:	6563      	str	r3, [r4, #84]	@ 0x54
    return HAL_TIMEOUT;
 8006bbe:	2503      	movs	r5, #3
 8006bc0:	e015      	b.n	8006bee <SPI_EndRxTxTransaction+0x52>
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 8006bc2:	4b12      	ldr	r3, [pc, #72]	@ (8006c0c <SPI_EndRxTxTransaction+0x70>)
 8006bc4:	6818      	ldr	r0, [r3, #0]
 8006bc6:	4b12      	ldr	r3, [pc, #72]	@ (8006c10 <SPI_EndRxTxTransaction+0x74>)
 8006bc8:	fbb0 f0f3 	udiv	r0, r0, r3
 8006bcc:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 8006bd0:	4358      	muls	r0, r3
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 8006bd2:	6863      	ldr	r3, [r4, #4]
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 8006bd4:	9003      	str	r0, [sp, #12]
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 8006bd6:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 8006bda:	d10b      	bne.n	8006bf4 <SPI_EndRxTxTransaction+0x58>
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 8006bdc:	9700      	str	r7, [sp, #0]
 8006bde:	4633      	mov	r3, r6
 8006be0:	462a      	mov	r2, r5
 8006be2:	2180      	movs	r1, #128	@ 0x80
 8006be4:	4620      	mov	r0, r4
 8006be6:	f7ff ff7d 	bl	8006ae4 <SPI_WaitFlagStateUntilTimeout>
 8006bea:	2800      	cmp	r0, #0
 8006bec:	d1e3      	bne.n	8006bb6 <SPI_EndRxTxTransaction+0x1a>
      count--;
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
  }

  return HAL_OK;
}
 8006bee:	4628      	mov	r0, r5
 8006bf0:	b005      	add	sp, #20
 8006bf2:	bdf0      	pop	{r4, r5, r6, r7, pc}
      if (count == 0U)
 8006bf4:	9b03      	ldr	r3, [sp, #12]
 8006bf6:	2b00      	cmp	r3, #0
 8006bf8:	d0f9      	beq.n	8006bee <SPI_EndRxTxTransaction+0x52>
      count--;
 8006bfa:	9b03      	ldr	r3, [sp, #12]
 8006bfc:	3b01      	subs	r3, #1
 8006bfe:	9303      	str	r3, [sp, #12]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 8006c00:	6823      	ldr	r3, [r4, #0]
 8006c02:	689b      	ldr	r3, [r3, #8]
 8006c04:	061b      	lsls	r3, r3, #24
 8006c06:	d4f5      	bmi.n	8006bf4 <SPI_EndRxTxTransaction+0x58>
 8006c08:	e7f1      	b.n	8006bee <SPI_EndRxTxTransaction+0x52>
 8006c0a:	bf00      	nop
 8006c0c:	200000c4 	.word	0x200000c4
 8006c10:	016e3600 	.word	0x016e3600

08006c14 <SPI_EndRxTransaction>:
{
 8006c14:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8006c16:	460b      	mov	r3, r1
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8006c18:	6841      	ldr	r1, [r0, #4]
 8006c1a:	f5b1 7f82 	cmp.w	r1, #260	@ 0x104
{
 8006c1e:	4604      	mov	r4, r0
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8006c20:	d008      	beq.n	8006c34 <SPI_EndRxTransaction+0x20>
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 8006c22:	9200      	str	r2, [sp, #0]
 8006c24:	2101      	movs	r1, #1
 8006c26:	2200      	movs	r2, #0
 8006c28:	f7ff ff5c 	bl	8006ae4 <SPI_WaitFlagStateUntilTimeout>
 8006c2c:	b9d0      	cbnz	r0, 8006c64 <SPI_EndRxTransaction+0x50>
  return HAL_OK;
 8006c2e:	2000      	movs	r0, #0
}
 8006c30:	b003      	add	sp, #12
 8006c32:	bd30      	pop	{r4, r5, pc}
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8006c34:	6881      	ldr	r1, [r0, #8]
 8006c36:	f5b1 4f00 	cmp.w	r1, #32768	@ 0x8000
 8006c3a:	d002      	beq.n	8006c42 <SPI_EndRxTransaction+0x2e>
                                               || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 8006c3c:	f5b1 6f80 	cmp.w	r1, #1024	@ 0x400
 8006c40:	d107      	bne.n	8006c52 <SPI_EndRxTransaction+0x3e>
    __HAL_SPI_DISABLE(hspi);
 8006c42:	6825      	ldr	r5, [r4, #0]
 8006c44:	6828      	ldr	r0, [r5, #0]
    if (hspi->Init.Direction != SPI_DIRECTION_2LINES_RXONLY)
 8006c46:	f5b1 6f80 	cmp.w	r1, #1024	@ 0x400
    __HAL_SPI_DISABLE(hspi);
 8006c4a:	f020 0040 	bic.w	r0, r0, #64	@ 0x40
 8006c4e:	6028      	str	r0, [r5, #0]
    if (hspi->Init.Direction != SPI_DIRECTION_2LINES_RXONLY)
 8006c50:	d004      	beq.n	8006c5c <SPI_EndRxTransaction+0x48>
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 8006c52:	9200      	str	r2, [sp, #0]
 8006c54:	2180      	movs	r1, #128	@ 0x80
 8006c56:	2200      	movs	r2, #0
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 8006c58:	4620      	mov	r0, r4
 8006c5a:	e7e5      	b.n	8006c28 <SPI_EndRxTransaction+0x14>
 8006c5c:	9200      	str	r2, [sp, #0]
 8006c5e:	2101      	movs	r1, #1
 8006c60:	2200      	movs	r2, #0
 8006c62:	e7f9      	b.n	8006c58 <SPI_EndRxTransaction+0x44>
        SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 8006c64:	6d63      	ldr	r3, [r4, #84]	@ 0x54
 8006c66:	f043 0320 	orr.w	r3, r3, #32
 8006c6a:	6563      	str	r3, [r4, #84]	@ 0x54
        return HAL_TIMEOUT;
 8006c6c:	2003      	movs	r0, #3
 8006c6e:	e7df      	b.n	8006c30 <SPI_EndRxTransaction+0x1c>

08006c70 <HAL_SPI_Init>:
{
 8006c70:	b510      	push	{r4, lr}
  if (hspi == NULL)
 8006c72:	4604      	mov	r4, r0
 8006c74:	2800      	cmp	r0, #0
 8006c76:	d055      	beq.n	8006d24 <HAL_SPI_Init+0xb4>
  if (hspi->Init.TIMode == SPI_TIMODE_DISABLE)
 8006c78:	6a43      	ldr	r3, [r0, #36]	@ 0x24
 8006c7a:	2b00      	cmp	r3, #0
 8006c7c:	d14e      	bne.n	8006d1c <HAL_SPI_Init+0xac>
    if (hspi->Init.Mode == SPI_MODE_MASTER)
 8006c7e:	6842      	ldr	r2, [r0, #4]
 8006c80:	f5b2 7f82 	cmp.w	r2, #260	@ 0x104
 8006c84:	d000      	beq.n	8006c88 <HAL_SPI_Init+0x18>
      hspi->Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 8006c86:	61c3      	str	r3, [r0, #28]
  hspi->Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8006c88:	2300      	movs	r3, #0
 8006c8a:	62a3      	str	r3, [r4, #40]	@ 0x28
  if (hspi->State == HAL_SPI_STATE_RESET)
 8006c8c:	f894 3051 	ldrb.w	r3, [r4, #81]	@ 0x51
 8006c90:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 8006c94:	b923      	cbnz	r3, 8006ca0 <HAL_SPI_Init+0x30>
    hspi->Lock = HAL_UNLOCKED;
 8006c96:	f884 2050 	strb.w	r2, [r4, #80]	@ 0x50
    HAL_SPI_MspInit(hspi);
 8006c9a:	4620      	mov	r0, r4
 8006c9c:	f7fc f8d4 	bl	8002e48 <HAL_SPI_MspInit>
  __HAL_SPI_DISABLE(hspi);
 8006ca0:	6821      	ldr	r1, [r4, #0]
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 8006ca2:	68a0      	ldr	r0, [r4, #8]
 8006ca4:	69a2      	ldr	r2, [r4, #24]
  hspi->State = HAL_SPI_STATE_BUSY;
 8006ca6:	2302      	movs	r3, #2
 8006ca8:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
  __HAL_SPI_DISABLE(hspi);
 8006cac:	680b      	ldr	r3, [r1, #0]
 8006cae:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 8006cb2:	600b      	str	r3, [r1, #0]
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 8006cb4:	6863      	ldr	r3, [r4, #4]
 8006cb6:	f400 4004 	and.w	r0, r0, #33792	@ 0x8400
 8006cba:	f403 7382 	and.w	r3, r3, #260	@ 0x104
 8006cbe:	4303      	orrs	r3, r0
 8006cc0:	68e0      	ldr	r0, [r4, #12]
 8006cc2:	f400 6000 	and.w	r0, r0, #2048	@ 0x800
 8006cc6:	4303      	orrs	r3, r0
 8006cc8:	6920      	ldr	r0, [r4, #16]
 8006cca:	f000 0002 	and.w	r0, r0, #2
 8006cce:	4303      	orrs	r3, r0
 8006cd0:	6960      	ldr	r0, [r4, #20]
 8006cd2:	f000 0001 	and.w	r0, r0, #1
 8006cd6:	4303      	orrs	r3, r0
 8006cd8:	f402 7000 	and.w	r0, r2, #512	@ 0x200
 8006cdc:	4303      	orrs	r3, r0
 8006cde:	69e0      	ldr	r0, [r4, #28]
 8006ce0:	f000 0038 	and.w	r0, r0, #56	@ 0x38
 8006ce4:	4303      	orrs	r3, r0
 8006ce6:	6a20      	ldr	r0, [r4, #32]
 8006ce8:	f000 0080 	and.w	r0, r0, #128	@ 0x80
 8006cec:	4303      	orrs	r3, r0
 8006cee:	6aa0      	ldr	r0, [r4, #40]	@ 0x28
 8006cf0:	f400 5000 	and.w	r0, r0, #8192	@ 0x2000
 8006cf4:	4303      	orrs	r3, r0
 8006cf6:	600b      	str	r3, [r1, #0]
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 8006cf8:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8006cfa:	0c12      	lsrs	r2, r2, #16
 8006cfc:	f003 0310 	and.w	r3, r3, #16
 8006d00:	f002 0204 	and.w	r2, r2, #4
 8006d04:	431a      	orrs	r2, r3
 8006d06:	604a      	str	r2, [r1, #4]
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 8006d08:	69cb      	ldr	r3, [r1, #28]
 8006d0a:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 8006d0e:	61cb      	str	r3, [r1, #28]
  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 8006d10:	2000      	movs	r0, #0
  hspi->State     = HAL_SPI_STATE_READY;
 8006d12:	2301      	movs	r3, #1
  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 8006d14:	6560      	str	r0, [r4, #84]	@ 0x54
  hspi->State     = HAL_SPI_STATE_READY;
 8006d16:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
}
 8006d1a:	bd10      	pop	{r4, pc}
    hspi->Init.CLKPolarity = SPI_POLARITY_LOW;
 8006d1c:	2300      	movs	r3, #0
    hspi->Init.CLKPhase    = SPI_PHASE_1EDGE;
 8006d1e:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8006d22:	e7b1      	b.n	8006c88 <HAL_SPI_Init+0x18>
    return HAL_ERROR;
 8006d24:	2001      	movs	r0, #1
 8006d26:	e7f8      	b.n	8006d1a <HAL_SPI_Init+0xaa>

08006d28 <HAL_SPI_Transmit>:
{
 8006d28:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8006d2c:	4604      	mov	r4, r0
 8006d2e:	461f      	mov	r7, r3
 8006d30:	460d      	mov	r5, r1
 8006d32:	4690      	mov	r8, r2
  tickstart = HAL_GetTick();
 8006d34:	f7fd fcfa 	bl	800472c <HAL_GetTick>
  if (hspi->State != HAL_SPI_STATE_READY)
 8006d38:	f894 3051 	ldrb.w	r3, [r4, #81]	@ 0x51
 8006d3c:	2b01      	cmp	r3, #1
  tickstart = HAL_GetTick();
 8006d3e:	4681      	mov	r9, r0
  if (hspi->State != HAL_SPI_STATE_READY)
 8006d40:	b2d8      	uxtb	r0, r3
 8006d42:	f040 809f 	bne.w	8006e84 <HAL_SPI_Transmit+0x15c>
  if ((pData == NULL) || (Size == 0U))
 8006d46:	2d00      	cmp	r5, #0
 8006d48:	d074      	beq.n	8006e34 <HAL_SPI_Transmit+0x10c>
 8006d4a:	f1b8 0f00 	cmp.w	r8, #0
 8006d4e:	d071      	beq.n	8006e34 <HAL_SPI_Transmit+0x10c>
  __HAL_LOCK(hspi);
 8006d50:	f894 3050 	ldrb.w	r3, [r4, #80]	@ 0x50
 8006d54:	2b01      	cmp	r3, #1
 8006d56:	f000 8095 	beq.w	8006e84 <HAL_SPI_Transmit+0x15c>
  hspi->State       = HAL_SPI_STATE_BUSY_TX;
 8006d5a:	2303      	movs	r3, #3
 8006d5c:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 8006d60:	2300      	movs	r3, #0
 8006d62:	6563      	str	r3, [r4, #84]	@ 0x54
  hspi->RxISR       = NULL;
 8006d64:	e9c4 3310 	strd	r3, r3, [r4, #64]	@ 0x40
  hspi->TxXferCount = Size;
 8006d68:	f8a4 8036 	strh.w	r8, [r4, #54]	@ 0x36
  hspi->pRxBuffPtr  = (uint8_t *)NULL;
 8006d6c:	63a3      	str	r3, [r4, #56]	@ 0x38
  hspi->RxXferSize  = 0U;
 8006d6e:	87a3      	strh	r3, [r4, #60]	@ 0x3c
  hspi->RxXferCount = 0U;
 8006d70:	87e3      	strh	r3, [r4, #62]	@ 0x3e
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8006d72:	68a3      	ldr	r3, [r4, #8]
    __HAL_SPI_DISABLE(hspi);
 8006d74:	6826      	ldr	r6, [r4, #0]
  __HAL_LOCK(hspi);
 8006d76:	f884 0050 	strb.w	r0, [r4, #80]	@ 0x50
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8006d7a:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
  hspi->pTxBuffPtr  = (const uint8_t *)pData;
 8006d7e:	6325      	str	r5, [r4, #48]	@ 0x30
  hspi->TxXferSize  = Size;
 8006d80:	f8a4 8034 	strh.w	r8, [r4, #52]	@ 0x34
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8006d84:	d107      	bne.n	8006d96 <HAL_SPI_Transmit+0x6e>
    __HAL_SPI_DISABLE(hspi);
 8006d86:	6833      	ldr	r3, [r6, #0]
 8006d88:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 8006d8c:	6033      	str	r3, [r6, #0]
    SPI_1LINE_TX(hspi);
 8006d8e:	6833      	ldr	r3, [r6, #0]
 8006d90:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8006d94:	6033      	str	r3, [r6, #0]
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8006d96:	6833      	ldr	r3, [r6, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 8006d98:	68e2      	ldr	r2, [r4, #12]
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8006d9a:	065b      	lsls	r3, r3, #25
    __HAL_SPI_ENABLE(hspi);
 8006d9c:	bf5e      	ittt	pl
 8006d9e:	6833      	ldrpl	r3, [r6, #0]
 8006da0:	f043 0340 	orrpl.w	r3, r3, #64	@ 0x40
 8006da4:	6033      	strpl	r3, [r6, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 8006da6:	f5b2 6f00 	cmp.w	r2, #2048	@ 0x800
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 8006daa:	6863      	ldr	r3, [r4, #4]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 8006dac:	d145      	bne.n	8006e3a <HAL_SPI_Transmit+0x112>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 8006dae:	b113      	cbz	r3, 8006db6 <HAL_SPI_Transmit+0x8e>
 8006db0:	f1b8 0f01 	cmp.w	r8, #1
 8006db4:	d107      	bne.n	8006dc6 <HAL_SPI_Transmit+0x9e>
      hspi->Instance->DR = *((const uint16_t *)hspi->pTxBuffPtr);
 8006db6:	f835 3b02 	ldrh.w	r3, [r5], #2
 8006dba:	60f3      	str	r3, [r6, #12]
      hspi->pTxBuffPtr += sizeof(uint16_t);
 8006dbc:	6325      	str	r5, [r4, #48]	@ 0x30
        hspi->TxXferCount--;
 8006dbe:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 8006dc0:	3b01      	subs	r3, #1
 8006dc2:	b29b      	uxth	r3, r3
 8006dc4:	86e3      	strh	r3, [r4, #54]	@ 0x36
    while (hspi->TxXferCount > 0U)
 8006dc6:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 8006dc8:	b29b      	uxth	r3, r3
 8006dca:	b9d3      	cbnz	r3, 8006e02 <HAL_SPI_Transmit+0xda>
  if (SPI_EndRxTxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 8006dcc:	464a      	mov	r2, r9
 8006dce:	4639      	mov	r1, r7
 8006dd0:	4620      	mov	r0, r4
 8006dd2:	f7ff fee3 	bl	8006b9c <SPI_EndRxTxTransaction>
 8006dd6:	2800      	cmp	r0, #0
 8006dd8:	d151      	bne.n	8006e7e <HAL_SPI_Transmit+0x156>
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 8006dda:	68a3      	ldr	r3, [r4, #8]
 8006ddc:	b933      	cbnz	r3, 8006dec <HAL_SPI_Transmit+0xc4>
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 8006dde:	9301      	str	r3, [sp, #4]
 8006de0:	6823      	ldr	r3, [r4, #0]
 8006de2:	68da      	ldr	r2, [r3, #12]
 8006de4:	9201      	str	r2, [sp, #4]
 8006de6:	689b      	ldr	r3, [r3, #8]
 8006de8:	9301      	str	r3, [sp, #4]
 8006dea:	9b01      	ldr	r3, [sp, #4]
  hspi->State = HAL_SPI_STATE_READY;
 8006dec:	2301      	movs	r3, #1
 8006dee:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 8006df2:	6d60      	ldr	r0, [r4, #84]	@ 0x54
  __HAL_UNLOCK(hspi);
 8006df4:	2300      	movs	r3, #0
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 8006df6:	1ac0      	subs	r0, r0, r3
  __HAL_UNLOCK(hspi);
 8006df8:	f884 3050 	strb.w	r3, [r4, #80]	@ 0x50
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 8006dfc:	bf18      	it	ne
 8006dfe:	2001      	movne	r0, #1
 8006e00:	e018      	b.n	8006e34 <HAL_SPI_Transmit+0x10c>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 8006e02:	6822      	ldr	r2, [r4, #0]
 8006e04:	6893      	ldr	r3, [r2, #8]
 8006e06:	0798      	lsls	r0, r3, #30
 8006e08:	d505      	bpl.n	8006e16 <HAL_SPI_Transmit+0xee>
        hspi->Instance->DR = *((const uint16_t *)hspi->pTxBuffPtr);
 8006e0a:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8006e0c:	f833 1b02 	ldrh.w	r1, [r3], #2
 8006e10:	60d1      	str	r1, [r2, #12]
        hspi->pTxBuffPtr += sizeof(uint16_t);
 8006e12:	6323      	str	r3, [r4, #48]	@ 0x30
 8006e14:	e7d3      	b.n	8006dbe <HAL_SPI_Transmit+0x96>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 8006e16:	f7fd fc89 	bl	800472c <HAL_GetTick>
 8006e1a:	eba0 0009 	sub.w	r0, r0, r9
 8006e1e:	42b8      	cmp	r0, r7
 8006e20:	d3d1      	bcc.n	8006dc6 <HAL_SPI_Transmit+0x9e>
 8006e22:	1c79      	adds	r1, r7, #1
 8006e24:	d0cf      	beq.n	8006dc6 <HAL_SPI_Transmit+0x9e>
          hspi->State = HAL_SPI_STATE_READY;
 8006e26:	2301      	movs	r3, #1
 8006e28:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
          __HAL_UNLOCK(hspi);
 8006e2c:	2300      	movs	r3, #0
 8006e2e:	f884 3050 	strb.w	r3, [r4, #80]	@ 0x50
          return HAL_TIMEOUT;
 8006e32:	2003      	movs	r0, #3
}
 8006e34:	b003      	add	sp, #12
 8006e36:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 8006e3a:	b113      	cbz	r3, 8006e42 <HAL_SPI_Transmit+0x11a>
 8006e3c:	f1b8 0f01 	cmp.w	r8, #1
 8006e40:	d108      	bne.n	8006e54 <HAL_SPI_Transmit+0x12c>
      *((__IO uint8_t *)&hspi->Instance->DR) = *((const uint8_t *)hspi->pTxBuffPtr);
 8006e42:	782b      	ldrb	r3, [r5, #0]
 8006e44:	7333      	strb	r3, [r6, #12]
        hspi->pTxBuffPtr += sizeof(uint8_t);
 8006e46:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8006e48:	3301      	adds	r3, #1
 8006e4a:	6323      	str	r3, [r4, #48]	@ 0x30
        hspi->TxXferCount--;
 8006e4c:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 8006e4e:	3b01      	subs	r3, #1
 8006e50:	b29b      	uxth	r3, r3
 8006e52:	86e3      	strh	r3, [r4, #54]	@ 0x36
    while (hspi->TxXferCount > 0U)
 8006e54:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 8006e56:	b29b      	uxth	r3, r3
 8006e58:	2b00      	cmp	r3, #0
 8006e5a:	d0b7      	beq.n	8006dcc <HAL_SPI_Transmit+0xa4>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 8006e5c:	6823      	ldr	r3, [r4, #0]
 8006e5e:	689a      	ldr	r2, [r3, #8]
 8006e60:	0792      	lsls	r2, r2, #30
 8006e62:	d503      	bpl.n	8006e6c <HAL_SPI_Transmit+0x144>
        *((__IO uint8_t *)&hspi->Instance->DR) = *((const uint8_t *)hspi->pTxBuffPtr);
 8006e64:	6b22      	ldr	r2, [r4, #48]	@ 0x30
 8006e66:	7812      	ldrb	r2, [r2, #0]
 8006e68:	731a      	strb	r2, [r3, #12]
 8006e6a:	e7ec      	b.n	8006e46 <HAL_SPI_Transmit+0x11e>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 8006e6c:	f7fd fc5e 	bl	800472c <HAL_GetTick>
 8006e70:	eba0 0009 	sub.w	r0, r0, r9
 8006e74:	42b8      	cmp	r0, r7
 8006e76:	d3ed      	bcc.n	8006e54 <HAL_SPI_Transmit+0x12c>
 8006e78:	1c7b      	adds	r3, r7, #1
 8006e7a:	d0eb      	beq.n	8006e54 <HAL_SPI_Transmit+0x12c>
 8006e7c:	e7d3      	b.n	8006e26 <HAL_SPI_Transmit+0xfe>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 8006e7e:	2320      	movs	r3, #32
 8006e80:	6563      	str	r3, [r4, #84]	@ 0x54
 8006e82:	e7aa      	b.n	8006dda <HAL_SPI_Transmit+0xb2>
    return HAL_BUSY;
 8006e84:	2002      	movs	r0, #2
 8006e86:	e7d5      	b.n	8006e34 <HAL_SPI_Transmit+0x10c>

08006e88 <HAL_SPI_TransmitReceive>:
{
 8006e88:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8006e8c:	4604      	mov	r4, r0
 8006e8e:	460d      	mov	r5, r1
 8006e90:	4691      	mov	r9, r2
 8006e92:	461e      	mov	r6, r3
 8006e94:	f8dd 8028 	ldr.w	r8, [sp, #40]	@ 0x28
  tickstart = HAL_GetTick();
 8006e98:	f7fd fc48 	bl	800472c <HAL_GetTick>
  tmp_state           = hspi->State;
 8006e9c:	f894 3051 	ldrb.w	r3, [r4, #81]	@ 0x51
  tmp_mode            = hspi->Init.Mode;
 8006ea0:	6862      	ldr	r2, [r4, #4]
  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 8006ea2:	2b01      	cmp	r3, #1
  tickstart = HAL_GetTick();
 8006ea4:	4607      	mov	r7, r0
  tmp_state           = hspi->State;
 8006ea6:	b2d9      	uxtb	r1, r3
  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 8006ea8:	d00a      	beq.n	8006ec0 <HAL_SPI_TransmitReceive+0x38>
 8006eaa:	f5b2 7f82 	cmp.w	r2, #260	@ 0x104
 8006eae:	f040 80e5 	bne.w	800707c <HAL_SPI_TransmitReceive+0x1f4>
        ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_state == HAL_SPI_STATE_BUSY_RX))))
 8006eb2:	68a3      	ldr	r3, [r4, #8]
 8006eb4:	2b00      	cmp	r3, #0
 8006eb6:	f040 80e1 	bne.w	800707c <HAL_SPI_TransmitReceive+0x1f4>
 8006eba:	2904      	cmp	r1, #4
 8006ebc:	f040 80de 	bne.w	800707c <HAL_SPI_TransmitReceive+0x1f4>
  if ((pTxData == NULL) || (pRxData == NULL) || (Size == 0U))
 8006ec0:	2d00      	cmp	r5, #0
 8006ec2:	d04b      	beq.n	8006f5c <HAL_SPI_TransmitReceive+0xd4>
 8006ec4:	f1b9 0f00 	cmp.w	r9, #0
 8006ec8:	d048      	beq.n	8006f5c <HAL_SPI_TransmitReceive+0xd4>
 8006eca:	2e00      	cmp	r6, #0
 8006ecc:	d046      	beq.n	8006f5c <HAL_SPI_TransmitReceive+0xd4>
  __HAL_LOCK(hspi);
 8006ece:	f894 3050 	ldrb.w	r3, [r4, #80]	@ 0x50
 8006ed2:	2b01      	cmp	r3, #1
 8006ed4:	f000 80d2 	beq.w	800707c <HAL_SPI_TransmitReceive+0x1f4>
 8006ed8:	2301      	movs	r3, #1
 8006eda:	f884 3050 	strb.w	r3, [r4, #80]	@ 0x50
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 8006ede:	f894 3051 	ldrb.w	r3, [r4, #81]	@ 0x51
  hspi->pRxBuffPtr  = (uint8_t *)pRxData;
 8006ee2:	f8c4 9038 	str.w	r9, [r4, #56]	@ 0x38
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 8006ee6:	2b04      	cmp	r3, #4
    hspi->State = HAL_SPI_STATE_BUSY_TX_RX;
 8006ee8:	bf1c      	itt	ne
 8006eea:	2305      	movne	r3, #5
 8006eec:	f884 3051 	strbne.w	r3, [r4, #81]	@ 0x51
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 8006ef0:	2300      	movs	r3, #0
 8006ef2:	6563      	str	r3, [r4, #84]	@ 0x54
  hspi->TxISR       = NULL;
 8006ef4:	e9c4 3310 	strd	r3, r3, [r4, #64]	@ 0x40
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8006ef8:	6823      	ldr	r3, [r4, #0]
  hspi->RxXferCount = Size;
 8006efa:	87e6      	strh	r6, [r4, #62]	@ 0x3e
  hspi->TxXferCount = Size;
 8006efc:	86e6      	strh	r6, [r4, #54]	@ 0x36
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8006efe:	6819      	ldr	r1, [r3, #0]
  hspi->RxXferSize  = Size;
 8006f00:	87a6      	strh	r6, [r4, #60]	@ 0x3c
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8006f02:	0649      	lsls	r1, r1, #25
    __HAL_SPI_ENABLE(hspi);
 8006f04:	bf58      	it	pl
 8006f06:	6819      	ldrpl	r1, [r3, #0]
  hspi->pTxBuffPtr  = (const uint8_t *)pTxData;
 8006f08:	6325      	str	r5, [r4, #48]	@ 0x30
    __HAL_SPI_ENABLE(hspi);
 8006f0a:	bf58      	it	pl
 8006f0c:	f041 0140 	orrpl.w	r1, r1, #64	@ 0x40
  hspi->TxXferSize  = Size;
 8006f10:	86a6      	strh	r6, [r4, #52]	@ 0x34
    __HAL_SPI_ENABLE(hspi);
 8006f12:	bf58      	it	pl
 8006f14:	6019      	strpl	r1, [r3, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 8006f16:	68e1      	ldr	r1, [r4, #12]
 8006f18:	f5b1 6f00 	cmp.w	r1, #2048	@ 0x800
 8006f1c:	d155      	bne.n	8006fca <HAL_SPI_TransmitReceive+0x142>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 8006f1e:	b10a      	cbz	r2, 8006f24 <HAL_SPI_TransmitReceive+0x9c>
 8006f20:	2e01      	cmp	r6, #1
 8006f22:	d107      	bne.n	8006f34 <HAL_SPI_TransmitReceive+0xac>
      hspi->Instance->DR = *((const uint16_t *)hspi->pTxBuffPtr);
 8006f24:	f835 2b02 	ldrh.w	r2, [r5], #2
 8006f28:	60da      	str	r2, [r3, #12]
      hspi->TxXferCount--;
 8006f2a:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
      hspi->pTxBuffPtr += sizeof(uint16_t);
 8006f2c:	6325      	str	r5, [r4, #48]	@ 0x30
      hspi->TxXferCount--;
 8006f2e:	3b01      	subs	r3, #1
 8006f30:	b29b      	uxth	r3, r3
 8006f32:	86e3      	strh	r3, [r4, #54]	@ 0x36
        txallowed = 1U;
 8006f34:	2501      	movs	r5, #1
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 8006f36:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 8006f38:	b29b      	uxth	r3, r3
 8006f3a:	b98b      	cbnz	r3, 8006f60 <HAL_SPI_TransmitReceive+0xd8>
 8006f3c:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 8006f3e:	b29b      	uxth	r3, r3
 8006f40:	b973      	cbnz	r3, 8006f60 <HAL_SPI_TransmitReceive+0xd8>
  if (SPI_EndRxTxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 8006f42:	463a      	mov	r2, r7
 8006f44:	4641      	mov	r1, r8
 8006f46:	4620      	mov	r0, r4
 8006f48:	f7ff fe28 	bl	8006b9c <SPI_EndRxTxTransaction>
 8006f4c:	2800      	cmp	r0, #0
 8006f4e:	f000 8081 	beq.w	8007054 <HAL_SPI_TransmitReceive+0x1cc>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 8006f52:	2320      	movs	r3, #32
 8006f54:	6563      	str	r3, [r4, #84]	@ 0x54
    __HAL_UNLOCK(hspi);
 8006f56:	2300      	movs	r3, #0
 8006f58:	f884 3050 	strb.w	r3, [r4, #80]	@ 0x50
    return HAL_ERROR;
 8006f5c:	2001      	movs	r0, #1
 8006f5e:	e031      	b.n	8006fc4 <HAL_SPI_TransmitReceive+0x13c>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 8006f60:	6821      	ldr	r1, [r4, #0]
 8006f62:	688b      	ldr	r3, [r1, #8]
 8006f64:	079a      	lsls	r2, r3, #30
 8006f66:	d50d      	bpl.n	8006f84 <HAL_SPI_TransmitReceive+0xfc>
 8006f68:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 8006f6a:	b29b      	uxth	r3, r3
 8006f6c:	b153      	cbz	r3, 8006f84 <HAL_SPI_TransmitReceive+0xfc>
 8006f6e:	b145      	cbz	r5, 8006f82 <HAL_SPI_TransmitReceive+0xfa>
        hspi->Instance->DR = *((const uint16_t *)hspi->pTxBuffPtr);
 8006f70:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8006f72:	f833 2b02 	ldrh.w	r2, [r3], #2
 8006f76:	60ca      	str	r2, [r1, #12]
        hspi->pTxBuffPtr += sizeof(uint16_t);
 8006f78:	6323      	str	r3, [r4, #48]	@ 0x30
        hspi->TxXferCount--;
 8006f7a:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 8006f7c:	3b01      	subs	r3, #1
 8006f7e:	b29b      	uxth	r3, r3
 8006f80:	86e3      	strh	r3, [r4, #54]	@ 0x36
{
 8006f82:	2500      	movs	r5, #0
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 8006f84:	688a      	ldr	r2, [r1, #8]
 8006f86:	f012 0201 	ands.w	r2, r2, #1
 8006f8a:	d00c      	beq.n	8006fa6 <HAL_SPI_TransmitReceive+0x11e>
 8006f8c:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 8006f8e:	b29b      	uxth	r3, r3
 8006f90:	b14b      	cbz	r3, 8006fa6 <HAL_SPI_TransmitReceive+0x11e>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 8006f92:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 8006f94:	68c9      	ldr	r1, [r1, #12]
 8006f96:	f823 1b02 	strh.w	r1, [r3], #2
        hspi->pRxBuffPtr += sizeof(uint16_t);
 8006f9a:	63a3      	str	r3, [r4, #56]	@ 0x38
        hspi->RxXferCount--;
 8006f9c:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 8006f9e:	3b01      	subs	r3, #1
 8006fa0:	b29b      	uxth	r3, r3
 8006fa2:	87e3      	strh	r3, [r4, #62]	@ 0x3e
        txallowed = 1U;
 8006fa4:	4615      	mov	r5, r2
      if (((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY))
 8006fa6:	f7fd fbc1 	bl	800472c <HAL_GetTick>
 8006faa:	1bc0      	subs	r0, r0, r7
 8006fac:	4540      	cmp	r0, r8
 8006fae:	d3c2      	bcc.n	8006f36 <HAL_SPI_TransmitReceive+0xae>
 8006fb0:	f1b8 3fff 	cmp.w	r8, #4294967295
 8006fb4:	d0bf      	beq.n	8006f36 <HAL_SPI_TransmitReceive+0xae>
        hspi->State = HAL_SPI_STATE_READY;
 8006fb6:	2301      	movs	r3, #1
 8006fb8:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
        __HAL_UNLOCK(hspi);
 8006fbc:	2300      	movs	r3, #0
 8006fbe:	f884 3050 	strb.w	r3, [r4, #80]	@ 0x50
        return HAL_TIMEOUT;
 8006fc2:	2003      	movs	r0, #3
}
 8006fc4:	b003      	add	sp, #12
 8006fc6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 8006fca:	b10a      	cbz	r2, 8006fd0 <HAL_SPI_TransmitReceive+0x148>
 8006fcc:	2e01      	cmp	r6, #1
 8006fce:	d108      	bne.n	8006fe2 <HAL_SPI_TransmitReceive+0x15a>
      *((__IO uint8_t *)&hspi->Instance->DR) = *((const uint8_t *)hspi->pTxBuffPtr);
 8006fd0:	782a      	ldrb	r2, [r5, #0]
 8006fd2:	731a      	strb	r2, [r3, #12]
      hspi->pTxBuffPtr += sizeof(uint8_t);
 8006fd4:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8006fd6:	3301      	adds	r3, #1
 8006fd8:	6323      	str	r3, [r4, #48]	@ 0x30
      hspi->TxXferCount--;
 8006fda:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 8006fdc:	3b01      	subs	r3, #1
 8006fde:	b29b      	uxth	r3, r3
 8006fe0:	86e3      	strh	r3, [r4, #54]	@ 0x36
        txallowed = 1U;
 8006fe2:	2501      	movs	r5, #1
 8006fe4:	e02d      	b.n	8007042 <HAL_SPI_TransmitReceive+0x1ba>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 8006fe6:	6822      	ldr	r2, [r4, #0]
 8006fe8:	6893      	ldr	r3, [r2, #8]
 8006fea:	079b      	lsls	r3, r3, #30
 8006fec:	d50e      	bpl.n	800700c <HAL_SPI_TransmitReceive+0x184>
 8006fee:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 8006ff0:	b29b      	uxth	r3, r3
 8006ff2:	b15b      	cbz	r3, 800700c <HAL_SPI_TransmitReceive+0x184>
 8006ff4:	b14d      	cbz	r5, 800700a <HAL_SPI_TransmitReceive+0x182>
        *(__IO uint8_t *)&hspi->Instance->DR = *((const uint8_t *)hspi->pTxBuffPtr);
 8006ff6:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8006ff8:	781b      	ldrb	r3, [r3, #0]
 8006ffa:	7313      	strb	r3, [r2, #12]
        hspi->pTxBuffPtr++;
 8006ffc:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8006ffe:	3301      	adds	r3, #1
 8007000:	6323      	str	r3, [r4, #48]	@ 0x30
        hspi->TxXferCount--;
 8007002:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 8007004:	3b01      	subs	r3, #1
 8007006:	b29b      	uxth	r3, r3
 8007008:	86e3      	strh	r3, [r4, #54]	@ 0x36
        txallowed = 1U;
 800700a:	2500      	movs	r5, #0
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800700c:	6822      	ldr	r2, [r4, #0]
 800700e:	6891      	ldr	r1, [r2, #8]
 8007010:	f011 0101 	ands.w	r1, r1, #1
 8007014:	d00d      	beq.n	8007032 <HAL_SPI_TransmitReceive+0x1aa>
 8007016:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 8007018:	b29b      	uxth	r3, r3
 800701a:	b153      	cbz	r3, 8007032 <HAL_SPI_TransmitReceive+0x1aa>
        (*(uint8_t *)hspi->pRxBuffPtr) = hspi->Instance->DR;
 800701c:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 800701e:	68d2      	ldr	r2, [r2, #12]
 8007020:	701a      	strb	r2, [r3, #0]
        hspi->pRxBuffPtr++;
 8007022:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 8007024:	3301      	adds	r3, #1
 8007026:	63a3      	str	r3, [r4, #56]	@ 0x38
        hspi->RxXferCount--;
 8007028:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 800702a:	3b01      	subs	r3, #1
 800702c:	b29b      	uxth	r3, r3
 800702e:	87e3      	strh	r3, [r4, #62]	@ 0x3e
        txallowed = 1U;
 8007030:	460d      	mov	r5, r1
      if ((((HAL_GetTick() - tickstart) >=  Timeout) && ((Timeout != HAL_MAX_DELAY))) || (Timeout == 0U))
 8007032:	f7fd fb7b 	bl	800472c <HAL_GetTick>
 8007036:	1bc0      	subs	r0, r0, r7
 8007038:	4540      	cmp	r0, r8
 800703a:	d302      	bcc.n	8007042 <HAL_SPI_TransmitReceive+0x1ba>
 800703c:	f1b8 3fff 	cmp.w	r8, #4294967295
 8007040:	d1b9      	bne.n	8006fb6 <HAL_SPI_TransmitReceive+0x12e>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 8007042:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 8007044:	b29b      	uxth	r3, r3
 8007046:	2b00      	cmp	r3, #0
 8007048:	d1cd      	bne.n	8006fe6 <HAL_SPI_TransmitReceive+0x15e>
 800704a:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 800704c:	b29b      	uxth	r3, r3
 800704e:	2b00      	cmp	r3, #0
 8007050:	d1c9      	bne.n	8006fe6 <HAL_SPI_TransmitReceive+0x15e>
 8007052:	e776      	b.n	8006f42 <HAL_SPI_TransmitReceive+0xba>
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 8007054:	68a3      	ldr	r3, [r4, #8]
 8007056:	b933      	cbnz	r3, 8007066 <HAL_SPI_TransmitReceive+0x1de>
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 8007058:	9301      	str	r3, [sp, #4]
 800705a:	6823      	ldr	r3, [r4, #0]
 800705c:	68da      	ldr	r2, [r3, #12]
 800705e:	9201      	str	r2, [sp, #4]
 8007060:	689b      	ldr	r3, [r3, #8]
 8007062:	9301      	str	r3, [sp, #4]
 8007064:	9b01      	ldr	r3, [sp, #4]
  hspi->State = HAL_SPI_STATE_READY;
 8007066:	2301      	movs	r3, #1
 8007068:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 800706c:	6d60      	ldr	r0, [r4, #84]	@ 0x54
  __HAL_UNLOCK(hspi);
 800706e:	2300      	movs	r3, #0
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 8007070:	1ac0      	subs	r0, r0, r3
  __HAL_UNLOCK(hspi);
 8007072:	f884 3050 	strb.w	r3, [r4, #80]	@ 0x50
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 8007076:	bf18      	it	ne
 8007078:	2001      	movne	r0, #1
 800707a:	e7a3      	b.n	8006fc4 <HAL_SPI_TransmitReceive+0x13c>
    return HAL_BUSY;
 800707c:	2002      	movs	r0, #2
 800707e:	e7a1      	b.n	8006fc4 <HAL_SPI_TransmitReceive+0x13c>

08007080 <HAL_SPI_Receive>:
{
 8007080:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8007084:	461e      	mov	r6, r3
  if (hspi->State != HAL_SPI_STATE_READY)
 8007086:	f890 3051 	ldrb.w	r3, [r0, #81]	@ 0x51
 800708a:	2b01      	cmp	r3, #1
{
 800708c:	4604      	mov	r4, r0
 800708e:	4689      	mov	r9, r1
 8007090:	4617      	mov	r7, r2
  if (hspi->State != HAL_SPI_STATE_READY)
 8007092:	b2dd      	uxtb	r5, r3
 8007094:	d004      	beq.n	80070a0 <HAL_SPI_Receive+0x20>
    return HAL_BUSY;
 8007096:	2502      	movs	r5, #2
}
 8007098:	4628      	mov	r0, r5
 800709a:	b003      	add	sp, #12
 800709c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 80070a0:	6843      	ldr	r3, [r0, #4]
 80070a2:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 80070a6:	d10b      	bne.n	80070c0 <HAL_SPI_Receive+0x40>
 80070a8:	6883      	ldr	r3, [r0, #8]
 80070aa:	b94b      	cbnz	r3, 80070c0 <HAL_SPI_Receive+0x40>
    hspi->State = HAL_SPI_STATE_BUSY_RX;
 80070ac:	2304      	movs	r3, #4
 80070ae:	f880 3051 	strb.w	r3, [r0, #81]	@ 0x51
    return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
 80070b2:	4613      	mov	r3, r2
 80070b4:	9600      	str	r6, [sp, #0]
 80070b6:	460a      	mov	r2, r1
 80070b8:	f7ff fee6 	bl	8006e88 <HAL_SPI_TransmitReceive>
 80070bc:	4605      	mov	r5, r0
 80070be:	e7eb      	b.n	8007098 <HAL_SPI_Receive+0x18>
  tickstart = HAL_GetTick();
 80070c0:	f7fd fb34 	bl	800472c <HAL_GetTick>
 80070c4:	4680      	mov	r8, r0
  if ((pData == NULL) || (Size == 0U))
 80070c6:	f1b9 0f00 	cmp.w	r9, #0
 80070ca:	d0e5      	beq.n	8007098 <HAL_SPI_Receive+0x18>
 80070cc:	2f00      	cmp	r7, #0
 80070ce:	d0e3      	beq.n	8007098 <HAL_SPI_Receive+0x18>
  __HAL_LOCK(hspi);
 80070d0:	f894 3050 	ldrb.w	r3, [r4, #80]	@ 0x50
 80070d4:	2b01      	cmp	r3, #1
 80070d6:	d0de      	beq.n	8007096 <HAL_SPI_Receive+0x16>
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 80070d8:	68a2      	ldr	r2, [r4, #8]
  hspi->pRxBuffPtr  = (uint8_t *)pData;
 80070da:	f8c4 9038 	str.w	r9, [r4, #56]	@ 0x38
  __HAL_LOCK(hspi);
 80070de:	2301      	movs	r3, #1
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 80070e0:	2500      	movs	r5, #0
  __HAL_LOCK(hspi);
 80070e2:	f884 3050 	strb.w	r3, [r4, #80]	@ 0x50
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 80070e6:	f5b2 4f00 	cmp.w	r2, #32768	@ 0x8000
  hspi->State       = HAL_SPI_STATE_BUSY_RX;
 80070ea:	f04f 0304 	mov.w	r3, #4
 80070ee:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
  hspi->TxISR       = NULL;
 80070f2:	e9c4 5510 	strd	r5, r5, [r4, #64]	@ 0x40
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 80070f6:	6565      	str	r5, [r4, #84]	@ 0x54
    __HAL_SPI_DISABLE(hspi);
 80070f8:	6823      	ldr	r3, [r4, #0]
  hspi->RxXferCount = Size;
 80070fa:	87e7      	strh	r7, [r4, #62]	@ 0x3e
  hspi->RxXferSize  = Size;
 80070fc:	87a7      	strh	r7, [r4, #60]	@ 0x3c
  hspi->pTxBuffPtr  = (uint8_t *)NULL;
 80070fe:	6325      	str	r5, [r4, #48]	@ 0x30
  hspi->TxXferSize  = 0U;
 8007100:	86a5      	strh	r5, [r4, #52]	@ 0x34
  hspi->TxXferCount = 0U;
 8007102:	86e5      	strh	r5, [r4, #54]	@ 0x36
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8007104:	d107      	bne.n	8007116 <HAL_SPI_Receive+0x96>
    __HAL_SPI_DISABLE(hspi);
 8007106:	681a      	ldr	r2, [r3, #0]
 8007108:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 800710c:	601a      	str	r2, [r3, #0]
    SPI_1LINE_RX(hspi);
 800710e:	681a      	ldr	r2, [r3, #0]
 8007110:	f422 4280 	bic.w	r2, r2, #16384	@ 0x4000
 8007114:	601a      	str	r2, [r3, #0]
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8007116:	681a      	ldr	r2, [r3, #0]
 8007118:	0655      	lsls	r5, r2, #25
    __HAL_SPI_ENABLE(hspi);
 800711a:	bf5e      	ittt	pl
 800711c:	681a      	ldrpl	r2, [r3, #0]
 800711e:	f042 0240 	orrpl.w	r2, r2, #64	@ 0x40
 8007122:	601a      	strpl	r2, [r3, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_8BIT)
 8007124:	68e3      	ldr	r3, [r4, #12]
 8007126:	b1f3      	cbz	r3, 8007166 <HAL_SPI_Receive+0xe6>
    while (hspi->RxXferCount > 0U)
 8007128:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 800712a:	b29b      	uxth	r3, r3
 800712c:	b1fb      	cbz	r3, 800716e <HAL_SPI_Receive+0xee>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 800712e:	6823      	ldr	r3, [r4, #0]
 8007130:	689a      	ldr	r2, [r3, #8]
 8007132:	07d2      	lsls	r2, r2, #31
 8007134:	d53c      	bpl.n	80071b0 <HAL_SPI_Receive+0x130>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 8007136:	68da      	ldr	r2, [r3, #12]
 8007138:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 800713a:	f823 2b02 	strh.w	r2, [r3], #2
        hspi->pRxBuffPtr += sizeof(uint16_t);
 800713e:	63a3      	str	r3, [r4, #56]	@ 0x38
        hspi->RxXferCount--;
 8007140:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 8007142:	3b01      	subs	r3, #1
 8007144:	b29b      	uxth	r3, r3
 8007146:	87e3      	strh	r3, [r4, #62]	@ 0x3e
 8007148:	e7ee      	b.n	8007128 <HAL_SPI_Receive+0xa8>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 800714a:	6823      	ldr	r3, [r4, #0]
 800714c:	689a      	ldr	r2, [r3, #8]
 800714e:	07d0      	lsls	r0, r2, #31
 8007150:	d51e      	bpl.n	8007190 <HAL_SPI_Receive+0x110>
        (* (uint8_t *)hspi->pRxBuffPtr) = *(__IO uint8_t *)&hspi->Instance->DR;
 8007152:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
 8007154:	7b1b      	ldrb	r3, [r3, #12]
 8007156:	7013      	strb	r3, [r2, #0]
        hspi->pRxBuffPtr += sizeof(uint8_t);
 8007158:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 800715a:	3301      	adds	r3, #1
 800715c:	63a3      	str	r3, [r4, #56]	@ 0x38
        hspi->RxXferCount--;
 800715e:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 8007160:	3b01      	subs	r3, #1
 8007162:	b29b      	uxth	r3, r3
 8007164:	87e3      	strh	r3, [r4, #62]	@ 0x3e
    while (hspi->RxXferCount > 0U)
 8007166:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 8007168:	b29b      	uxth	r3, r3
 800716a:	2b00      	cmp	r3, #0
 800716c:	d1ed      	bne.n	800714a <HAL_SPI_Receive+0xca>
  if (SPI_EndRxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 800716e:	4642      	mov	r2, r8
 8007170:	4631      	mov	r1, r6
 8007172:	4620      	mov	r0, r4
 8007174:	f7ff fd4e 	bl	8006c14 <SPI_EndRxTransaction>
 8007178:	bb18      	cbnz	r0, 80071c2 <HAL_SPI_Receive+0x142>
  hspi->State = HAL_SPI_STATE_READY;
 800717a:	2301      	movs	r3, #1
 800717c:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 8007180:	6d65      	ldr	r5, [r4, #84]	@ 0x54
  __HAL_UNLOCK(hspi);
 8007182:	2300      	movs	r3, #0
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 8007184:	1aed      	subs	r5, r5, r3
  __HAL_UNLOCK(hspi);
 8007186:	f884 3050 	strb.w	r3, [r4, #80]	@ 0x50
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 800718a:	bf18      	it	ne
 800718c:	2501      	movne	r5, #1
 800718e:	e783      	b.n	8007098 <HAL_SPI_Receive+0x18>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 8007190:	f7fd facc 	bl	800472c <HAL_GetTick>
 8007194:	eba0 0008 	sub.w	r0, r0, r8
 8007198:	42b0      	cmp	r0, r6
 800719a:	d3e4      	bcc.n	8007166 <HAL_SPI_Receive+0xe6>
 800719c:	1c71      	adds	r1, r6, #1
 800719e:	d0e2      	beq.n	8007166 <HAL_SPI_Receive+0xe6>
          hspi->State = HAL_SPI_STATE_READY;
 80071a0:	2301      	movs	r3, #1
 80071a2:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
          __HAL_UNLOCK(hspi);
 80071a6:	2300      	movs	r3, #0
 80071a8:	f884 3050 	strb.w	r3, [r4, #80]	@ 0x50
          return HAL_TIMEOUT;
 80071ac:	2503      	movs	r5, #3
 80071ae:	e773      	b.n	8007098 <HAL_SPI_Receive+0x18>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 80071b0:	f7fd fabc 	bl	800472c <HAL_GetTick>
 80071b4:	eba0 0008 	sub.w	r0, r0, r8
 80071b8:	42b0      	cmp	r0, r6
 80071ba:	d3b5      	bcc.n	8007128 <HAL_SPI_Receive+0xa8>
 80071bc:	1c73      	adds	r3, r6, #1
 80071be:	d0b3      	beq.n	8007128 <HAL_SPI_Receive+0xa8>
 80071c0:	e7ee      	b.n	80071a0 <HAL_SPI_Receive+0x120>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 80071c2:	2320      	movs	r3, #32
 80071c4:	6563      	str	r3, [r4, #84]	@ 0x54
 80071c6:	e7d8      	b.n	800717a <HAL_SPI_Receive+0xfa>

080071c8 <HAL_TIM_Base_MspInit>:
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_Base_MspInit could be implemented in the user file
   */
}
 80071c8:	4770      	bx	lr
	...

080071cc <HAL_TIM_Base_Start_IT>:

  /* Check the parameters */
  assert_param(IS_TIM_INSTANCE(htim->Instance));

  /* Check the TIM state */
  if (htim->State != HAL_TIM_STATE_READY)
 80071cc:	f890 303d 	ldrb.w	r3, [r0, #61]	@ 0x3d
 80071d0:	2b01      	cmp	r3, #1
 80071d2:	d130      	bne.n	8007236 <HAL_TIM_Base_Start_IT+0x6a>
  {
    return HAL_ERROR;
  }

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_BUSY;
 80071d4:	2302      	movs	r3, #2
 80071d6:	f880 303d 	strb.w	r3, [r0, #61]	@ 0x3d

  /* Enable the TIM Update interrupt */
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 80071da:	6803      	ldr	r3, [r0, #0]
 80071dc:	68da      	ldr	r2, [r3, #12]
 80071de:	f042 0201 	orr.w	r2, r2, #1
 80071e2:	60da      	str	r2, [r3, #12]

  /* Enable the Peripheral, except in trigger mode where enable is automatically done with trigger */
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 80071e4:	4a15      	ldr	r2, [pc, #84]	@ (800723c <HAL_TIM_Base_Start_IT+0x70>)
 80071e6:	4293      	cmp	r3, r2
 80071e8:	d01a      	beq.n	8007220 <HAL_TIM_Base_Start_IT+0x54>
 80071ea:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 80071ee:	d017      	beq.n	8007220 <HAL_TIM_Base_Start_IT+0x54>
 80071f0:	f5a2 427c 	sub.w	r2, r2, #64512	@ 0xfc00
 80071f4:	4293      	cmp	r3, r2
 80071f6:	d013      	beq.n	8007220 <HAL_TIM_Base_Start_IT+0x54>
 80071f8:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 80071fc:	4293      	cmp	r3, r2
 80071fe:	d00f      	beq.n	8007220 <HAL_TIM_Base_Start_IT+0x54>
 8007200:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 8007204:	4293      	cmp	r3, r2
 8007206:	d00b      	beq.n	8007220 <HAL_TIM_Base_Start_IT+0x54>
 8007208:	f502 4278 	add.w	r2, r2, #63488	@ 0xf800
 800720c:	4293      	cmp	r3, r2
 800720e:	d007      	beq.n	8007220 <HAL_TIM_Base_Start_IT+0x54>
 8007210:	f502 5270 	add.w	r2, r2, #15360	@ 0x3c00
 8007214:	4293      	cmp	r3, r2
 8007216:	d003      	beq.n	8007220 <HAL_TIM_Base_Start_IT+0x54>
 8007218:	f5a2 3294 	sub.w	r2, r2, #75776	@ 0x12800
 800721c:	4293      	cmp	r3, r2
 800721e:	d104      	bne.n	800722a <HAL_TIM_Base_Start_IT+0x5e>
  {
    tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 8007220:	689a      	ldr	r2, [r3, #8]
 8007222:	f002 0207 	and.w	r2, r2, #7
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 8007226:	2a06      	cmp	r2, #6
 8007228:	d003      	beq.n	8007232 <HAL_TIM_Base_Start_IT+0x66>
    {
      __HAL_TIM_ENABLE(htim);
 800722a:	681a      	ldr	r2, [r3, #0]
 800722c:	f042 0201 	orr.w	r2, r2, #1
 8007230:	601a      	str	r2, [r3, #0]
  {
    __HAL_TIM_ENABLE(htim);
  }

  /* Return function status */
  return HAL_OK;
 8007232:	2000      	movs	r0, #0
 8007234:	4770      	bx	lr
    return HAL_ERROR;
 8007236:	2001      	movs	r0, #1
}
 8007238:	4770      	bx	lr
 800723a:	bf00      	nop
 800723c:	40010000 	.word	0x40010000

08007240 <HAL_TIM_OC_DelayElapsedCallback>:
/**
  * @brief  Output Compare callback in non-blocking mode
  * @param  htim TIM OC handle
  * @retval None
  */
__weak void HAL_TIM_OC_DelayElapsedCallback(TIM_HandleTypeDef *htim)
 8007240:	4770      	bx	lr

08007242 <HAL_TIM_IC_CaptureCallback>:
/**
  * @brief  Input Capture callback in non-blocking mode
  * @param  htim TIM IC handle
  * @retval None
  */
__weak void HAL_TIM_IC_CaptureCallback(TIM_HandleTypeDef *htim)
 8007242:	4770      	bx	lr

08007244 <HAL_TIM_PWM_PulseFinishedCallback>:
/**
  * @brief  PWM Pulse finished callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIM_PWM_PulseFinishedCallback(TIM_HandleTypeDef *htim)
 8007244:	4770      	bx	lr

08007246 <HAL_TIM_TriggerCallback>:
/**
  * @brief  Hall Trigger detection callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIM_TriggerCallback(TIM_HandleTypeDef *htim)
 8007246:	4770      	bx	lr

08007248 <HAL_TIM_IRQHandler>:
  uint32_t itsource = htim->Instance->DIER;
 8007248:	6803      	ldr	r3, [r0, #0]
{
 800724a:	b570      	push	{r4, r5, r6, lr}
  uint32_t itsource = htim->Instance->DIER;
 800724c:	68dd      	ldr	r5, [r3, #12]
  uint32_t itflag   = htim->Instance->SR;
 800724e:	691e      	ldr	r6, [r3, #16]
  if ((itflag & (TIM_FLAG_CC1)) == (TIM_FLAG_CC1))
 8007250:	07b1      	lsls	r1, r6, #30
{
 8007252:	4604      	mov	r4, r0
  if ((itflag & (TIM_FLAG_CC1)) == (TIM_FLAG_CC1))
 8007254:	d50d      	bpl.n	8007272 <HAL_TIM_IRQHandler+0x2a>
    if ((itsource & (TIM_IT_CC1)) == (TIM_IT_CC1))
 8007256:	07aa      	lsls	r2, r5, #30
 8007258:	d50b      	bpl.n	8007272 <HAL_TIM_IRQHandler+0x2a>
        __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC1);
 800725a:	f06f 0202 	mvn.w	r2, #2
 800725e:	611a      	str	r2, [r3, #16]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 8007260:	2201      	movs	r2, #1
 8007262:	7702      	strb	r2, [r0, #28]
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
 8007264:	699b      	ldr	r3, [r3, #24]
 8007266:	079b      	lsls	r3, r3, #30
 8007268:	d069      	beq.n	800733e <HAL_TIM_IRQHandler+0xf6>
          HAL_TIM_IC_CaptureCallback(htim);
 800726a:	f7ff ffea 	bl	8007242 <HAL_TIM_IC_CaptureCallback>
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800726e:	2300      	movs	r3, #0
 8007270:	7723      	strb	r3, [r4, #28]
  if ((itflag & (TIM_FLAG_CC2)) == (TIM_FLAG_CC2))
 8007272:	0771      	lsls	r1, r6, #29
 8007274:	d510      	bpl.n	8007298 <HAL_TIM_IRQHandler+0x50>
    if ((itsource & (TIM_IT_CC2)) == (TIM_IT_CC2))
 8007276:	076a      	lsls	r2, r5, #29
 8007278:	d50e      	bpl.n	8007298 <HAL_TIM_IRQHandler+0x50>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC2);
 800727a:	6823      	ldr	r3, [r4, #0]
 800727c:	f06f 0204 	mvn.w	r2, #4
 8007280:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 8007282:	2202      	movs	r2, #2
 8007284:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 8007286:	699b      	ldr	r3, [r3, #24]
 8007288:	f413 7f40 	tst.w	r3, #768	@ 0x300
        HAL_TIM_IC_CaptureCallback(htim);
 800728c:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 800728e:	d05c      	beq.n	800734a <HAL_TIM_IRQHandler+0x102>
        HAL_TIM_IC_CaptureCallback(htim);
 8007290:	f7ff ffd7 	bl	8007242 <HAL_TIM_IC_CaptureCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8007294:	2300      	movs	r3, #0
 8007296:	7723      	strb	r3, [r4, #28]
  if ((itflag & (TIM_FLAG_CC3)) == (TIM_FLAG_CC3))
 8007298:	0733      	lsls	r3, r6, #28
 800729a:	d50f      	bpl.n	80072bc <HAL_TIM_IRQHandler+0x74>
    if ((itsource & (TIM_IT_CC3)) == (TIM_IT_CC3))
 800729c:	0728      	lsls	r0, r5, #28
 800729e:	d50d      	bpl.n	80072bc <HAL_TIM_IRQHandler+0x74>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC3);
 80072a0:	6823      	ldr	r3, [r4, #0]
 80072a2:	f06f 0208 	mvn.w	r2, #8
 80072a6:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 80072a8:	2204      	movs	r2, #4
 80072aa:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 80072ac:	69db      	ldr	r3, [r3, #28]
 80072ae:	0799      	lsls	r1, r3, #30
        HAL_TIM_IC_CaptureCallback(htim);
 80072b0:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 80072b2:	d050      	beq.n	8007356 <HAL_TIM_IRQHandler+0x10e>
        HAL_TIM_IC_CaptureCallback(htim);
 80072b4:	f7ff ffc5 	bl	8007242 <HAL_TIM_IC_CaptureCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 80072b8:	2300      	movs	r3, #0
 80072ba:	7723      	strb	r3, [r4, #28]
  if ((itflag & (TIM_FLAG_CC4)) == (TIM_FLAG_CC4))
 80072bc:	06f2      	lsls	r2, r6, #27
 80072be:	d510      	bpl.n	80072e2 <HAL_TIM_IRQHandler+0x9a>
    if ((itsource & (TIM_IT_CC4)) == (TIM_IT_CC4))
 80072c0:	06eb      	lsls	r3, r5, #27
 80072c2:	d50e      	bpl.n	80072e2 <HAL_TIM_IRQHandler+0x9a>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC4);
 80072c4:	6823      	ldr	r3, [r4, #0]
 80072c6:	f06f 0210 	mvn.w	r2, #16
 80072ca:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 80072cc:	2208      	movs	r2, #8
 80072ce:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 80072d0:	69db      	ldr	r3, [r3, #28]
 80072d2:	f413 7f40 	tst.w	r3, #768	@ 0x300
        HAL_TIM_IC_CaptureCallback(htim);
 80072d6:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 80072d8:	d043      	beq.n	8007362 <HAL_TIM_IRQHandler+0x11a>
        HAL_TIM_IC_CaptureCallback(htim);
 80072da:	f7ff ffb2 	bl	8007242 <HAL_TIM_IC_CaptureCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 80072de:	2300      	movs	r3, #0
 80072e0:	7723      	strb	r3, [r4, #28]
  if ((itflag & (TIM_FLAG_UPDATE)) == (TIM_FLAG_UPDATE))
 80072e2:	07f0      	lsls	r0, r6, #31
 80072e4:	d508      	bpl.n	80072f8 <HAL_TIM_IRQHandler+0xb0>
    if ((itsource & (TIM_IT_UPDATE)) == (TIM_IT_UPDATE))
 80072e6:	07e9      	lsls	r1, r5, #31
 80072e8:	d506      	bpl.n	80072f8 <HAL_TIM_IRQHandler+0xb0>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_UPDATE);
 80072ea:	6823      	ldr	r3, [r4, #0]
 80072ec:	f06f 0201 	mvn.w	r2, #1
 80072f0:	611a      	str	r2, [r3, #16]
      HAL_TIM_PeriodElapsedCallback(htim);
 80072f2:	4620      	mov	r0, r4
 80072f4:	f7fb fc0a 	bl	8002b0c <HAL_TIM_PeriodElapsedCallback>
  if ((itflag & (TIM_FLAG_BREAK)) == (TIM_FLAG_BREAK))
 80072f8:	0632      	lsls	r2, r6, #24
 80072fa:	d508      	bpl.n	800730e <HAL_TIM_IRQHandler+0xc6>
    if ((itsource & (TIM_IT_BREAK)) == (TIM_IT_BREAK))
 80072fc:	062b      	lsls	r3, r5, #24
 80072fe:	d506      	bpl.n	800730e <HAL_TIM_IRQHandler+0xc6>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_BREAK);
 8007300:	6823      	ldr	r3, [r4, #0]
 8007302:	f06f 0280 	mvn.w	r2, #128	@ 0x80
 8007306:	611a      	str	r2, [r3, #16]
      HAL_TIMEx_BreakCallback(htim);
 8007308:	4620      	mov	r0, r4
 800730a:	f000 f8b6 	bl	800747a <HAL_TIMEx_BreakCallback>
  if ((itflag & (TIM_FLAG_TRIGGER)) == (TIM_FLAG_TRIGGER))
 800730e:	0670      	lsls	r0, r6, #25
 8007310:	d508      	bpl.n	8007324 <HAL_TIM_IRQHandler+0xdc>
    if ((itsource & (TIM_IT_TRIGGER)) == (TIM_IT_TRIGGER))
 8007312:	0669      	lsls	r1, r5, #25
 8007314:	d506      	bpl.n	8007324 <HAL_TIM_IRQHandler+0xdc>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_TRIGGER);
 8007316:	6823      	ldr	r3, [r4, #0]
 8007318:	f06f 0240 	mvn.w	r2, #64	@ 0x40
 800731c:	611a      	str	r2, [r3, #16]
      HAL_TIM_TriggerCallback(htim);
 800731e:	4620      	mov	r0, r4
 8007320:	f7ff ff91 	bl	8007246 <HAL_TIM_TriggerCallback>
  if ((itflag & (TIM_FLAG_COM)) == (TIM_FLAG_COM))
 8007324:	06b2      	lsls	r2, r6, #26
 8007326:	d522      	bpl.n	800736e <HAL_TIM_IRQHandler+0x126>
    if ((itsource & (TIM_IT_COM)) == (TIM_IT_COM))
 8007328:	06ab      	lsls	r3, r5, #26
 800732a:	d520      	bpl.n	800736e <HAL_TIM_IRQHandler+0x126>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_COM);
 800732c:	6823      	ldr	r3, [r4, #0]
 800732e:	f06f 0220 	mvn.w	r2, #32
      HAL_TIMEx_CommutCallback(htim);
 8007332:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_COM);
 8007334:	611a      	str	r2, [r3, #16]
}
 8007336:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
      HAL_TIMEx_CommutCallback(htim);
 800733a:	f000 b89d 	b.w	8007478 <HAL_TIMEx_CommutCallback>
          HAL_TIM_OC_DelayElapsedCallback(htim);
 800733e:	f7ff ff7f 	bl	8007240 <HAL_TIM_OC_DelayElapsedCallback>
          HAL_TIM_PWM_PulseFinishedCallback(htim);
 8007342:	4620      	mov	r0, r4
 8007344:	f7ff ff7e 	bl	8007244 <HAL_TIM_PWM_PulseFinishedCallback>
 8007348:	e791      	b.n	800726e <HAL_TIM_IRQHandler+0x26>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800734a:	f7ff ff79 	bl	8007240 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800734e:	4620      	mov	r0, r4
 8007350:	f7ff ff78 	bl	8007244 <HAL_TIM_PWM_PulseFinishedCallback>
 8007354:	e79e      	b.n	8007294 <HAL_TIM_IRQHandler+0x4c>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 8007356:	f7ff ff73 	bl	8007240 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800735a:	4620      	mov	r0, r4
 800735c:	f7ff ff72 	bl	8007244 <HAL_TIM_PWM_PulseFinishedCallback>
 8007360:	e7aa      	b.n	80072b8 <HAL_TIM_IRQHandler+0x70>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 8007362:	f7ff ff6d 	bl	8007240 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 8007366:	4620      	mov	r0, r4
 8007368:	f7ff ff6c 	bl	8007244 <HAL_TIM_PWM_PulseFinishedCallback>
 800736c:	e7b7      	b.n	80072de <HAL_TIM_IRQHandler+0x96>
}
 800736e:	bd70      	pop	{r4, r5, r6, pc}

08007370 <TIM_Base_SetConfig>:
{
  uint32_t tmpcr1;
  tmpcr1 = TIMx->CR1;

  /* Set TIM Time Base Unit parameters ---------------------------------------*/
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 8007370:	4a29      	ldr	r2, [pc, #164]	@ (8007418 <TIM_Base_SetConfig+0xa8>)
  tmpcr1 = TIMx->CR1;
 8007372:	6803      	ldr	r3, [r0, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 8007374:	4290      	cmp	r0, r2
 8007376:	d012      	beq.n	800739e <TIM_Base_SetConfig+0x2e>
 8007378:	f1b0 4f80 	cmp.w	r0, #1073741824	@ 0x40000000
 800737c:	d00f      	beq.n	800739e <TIM_Base_SetConfig+0x2e>
 800737e:	f5a2 427c 	sub.w	r2, r2, #64512	@ 0xfc00
 8007382:	4290      	cmp	r0, r2
 8007384:	d00b      	beq.n	800739e <TIM_Base_SetConfig+0x2e>
 8007386:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 800738a:	4290      	cmp	r0, r2
 800738c:	d007      	beq.n	800739e <TIM_Base_SetConfig+0x2e>
 800738e:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 8007392:	4290      	cmp	r0, r2
 8007394:	d003      	beq.n	800739e <TIM_Base_SetConfig+0x2e>
 8007396:	f502 4278 	add.w	r2, r2, #63488	@ 0xf800
 800739a:	4290      	cmp	r0, r2
 800739c:	d108      	bne.n	80073b0 <TIM_Base_SetConfig+0x40>
  {
    /* Select the Counter Mode */
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
    tmpcr1 |= Structure->CounterMode;
 800739e:	684a      	ldr	r2, [r1, #4]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 80073a0:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
    tmpcr1 |= Structure->CounterMode;
 80073a4:	4313      	orrs	r3, r2

  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
  {
    /* Set the clock division */
    tmpcr1 &= ~TIM_CR1_CKD;
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 80073a6:	68ca      	ldr	r2, [r1, #12]
    tmpcr1 &= ~TIM_CR1_CKD;
 80073a8:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 80073ac:	4313      	orrs	r3, r2
 80073ae:	e016      	b.n	80073de <TIM_Base_SetConfig+0x6e>
  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 80073b0:	4a1a      	ldr	r2, [pc, #104]	@ (800741c <TIM_Base_SetConfig+0xac>)
 80073b2:	4290      	cmp	r0, r2
 80073b4:	d0f7      	beq.n	80073a6 <TIM_Base_SetConfig+0x36>
 80073b6:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 80073ba:	4290      	cmp	r0, r2
 80073bc:	d0f3      	beq.n	80073a6 <TIM_Base_SetConfig+0x36>
 80073be:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 80073c2:	4290      	cmp	r0, r2
 80073c4:	d0ef      	beq.n	80073a6 <TIM_Base_SetConfig+0x36>
 80073c6:	f5a2 3298 	sub.w	r2, r2, #77824	@ 0x13000
 80073ca:	4290      	cmp	r0, r2
 80073cc:	d0eb      	beq.n	80073a6 <TIM_Base_SetConfig+0x36>
 80073ce:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 80073d2:	4290      	cmp	r0, r2
 80073d4:	d0e7      	beq.n	80073a6 <TIM_Base_SetConfig+0x36>
 80073d6:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 80073da:	4290      	cmp	r0, r2
 80073dc:	d0e3      	beq.n	80073a6 <TIM_Base_SetConfig+0x36>
  }

  /* Set the auto-reload preload */
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 80073de:	694a      	ldr	r2, [r1, #20]
 80073e0:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 80073e4:	4313      	orrs	r3, r2

  TIMx->CR1 = tmpcr1;
 80073e6:	6003      	str	r3, [r0, #0]

  /* Set the Autoreload value */
  TIMx->ARR = (uint32_t)Structure->Period ;
 80073e8:	688b      	ldr	r3, [r1, #8]
 80073ea:	62c3      	str	r3, [r0, #44]	@ 0x2c

  /* Set the Prescaler value */
  TIMx->PSC = Structure->Prescaler;
 80073ec:	680b      	ldr	r3, [r1, #0]
 80073ee:	6283      	str	r3, [r0, #40]	@ 0x28

  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
 80073f0:	4b09      	ldr	r3, [pc, #36]	@ (8007418 <TIM_Base_SetConfig+0xa8>)
 80073f2:	4298      	cmp	r0, r3
 80073f4:	d003      	beq.n	80073fe <TIM_Base_SetConfig+0x8e>
 80073f6:	f503 6380 	add.w	r3, r3, #1024	@ 0x400
 80073fa:	4298      	cmp	r0, r3
 80073fc:	d101      	bne.n	8007402 <TIM_Base_SetConfig+0x92>
  {
    /* Set the Repetition Counter value */
    TIMx->RCR = Structure->RepetitionCounter;
 80073fe:	690b      	ldr	r3, [r1, #16]
 8007400:	6303      	str	r3, [r0, #48]	@ 0x30
  }

  /* Generate an update event to reload the Prescaler
     and the repetition counter (only for advanced timer) value immediately */
  TIMx->EGR = TIM_EGR_UG;
 8007402:	2301      	movs	r3, #1
 8007404:	6143      	str	r3, [r0, #20]

  /* Check if the update flag is set after the Update Generation, if so clear the UIF flag */
  if (HAL_IS_BIT_SET(TIMx->SR, TIM_FLAG_UPDATE))
 8007406:	6903      	ldr	r3, [r0, #16]
 8007408:	07db      	lsls	r3, r3, #31
  {
    /* Clear the update flag */
    CLEAR_BIT(TIMx->SR, TIM_FLAG_UPDATE);
 800740a:	bf42      	ittt	mi
 800740c:	6903      	ldrmi	r3, [r0, #16]
 800740e:	f023 0301 	bicmi.w	r3, r3, #1
 8007412:	6103      	strmi	r3, [r0, #16]
  }
}
 8007414:	4770      	bx	lr
 8007416:	bf00      	nop
 8007418:	40010000 	.word	0x40010000
 800741c:	40014000 	.word	0x40014000

08007420 <HAL_TIM_Base_Init>:
{
 8007420:	b510      	push	{r4, lr}
  if (htim == NULL)
 8007422:	4604      	mov	r4, r0
 8007424:	b330      	cbz	r0, 8007474 <HAL_TIM_Base_Init+0x54>
  if (htim->State == HAL_TIM_STATE_RESET)
 8007426:	f890 303d 	ldrb.w	r3, [r0, #61]	@ 0x3d
 800742a:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 800742e:	b91b      	cbnz	r3, 8007438 <HAL_TIM_Base_Init+0x18>
    htim->Lock = HAL_UNLOCKED;
 8007430:	f880 203c 	strb.w	r2, [r0, #60]	@ 0x3c
    HAL_TIM_Base_MspInit(htim);
 8007434:	f7ff fec8 	bl	80071c8 <HAL_TIM_Base_MspInit>
  htim->State = HAL_TIM_STATE_BUSY;
 8007438:	2302      	movs	r3, #2
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 800743a:	6820      	ldr	r0, [r4, #0]
  htim->State = HAL_TIM_STATE_BUSY;
 800743c:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 8007440:	1d21      	adds	r1, r4, #4
 8007442:	f7ff ff95 	bl	8007370 <TIM_Base_SetConfig>
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 8007446:	2301      	movs	r3, #1
 8007448:	f884 3046 	strb.w	r3, [r4, #70]	@ 0x46
  return HAL_OK;
 800744c:	2000      	movs	r0, #0
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 800744e:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
 8007452:	f884 303f 	strb.w	r3, [r4, #63]	@ 0x3f
 8007456:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
 800745a:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 800745e:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 8007462:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8007466:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
 800746a:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
  htim->State = HAL_TIM_STATE_READY;
 800746e:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
}
 8007472:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8007474:	2001      	movs	r0, #1
 8007476:	e7fc      	b.n	8007472 <HAL_TIM_Base_Init+0x52>

08007478 <HAL_TIMEx_CommutCallback>:
/**
  * @brief  Commutation callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_CommutCallback(TIM_HandleTypeDef *htim)
 8007478:	4770      	bx	lr

0800747a <HAL_TIMEx_BreakCallback>:
/**
  * @brief  Break detection callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_BreakCallback(TIM_HandleTypeDef *htim)
 800747a:	4770      	bx	lr

0800747c <FMC_SDRAM_Init>:
  * @param  Device Pointer to SDRAM device instance
  * @param  Init Pointer to SDRAM Initialization structure
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_Init(FMC_SDRAM_TypeDef *Device, FMC_SDRAM_InitTypeDef *Init)
{
 800747c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  assert_param(IS_FMC_READPIPE_DELAY(Init->ReadPipeDelay));

  /* Set SDRAM bank configuration parameters */
  if (Init->SDBank == FMC_SDRAM_BANK1)
  {
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 8007480:	e9d1 3807 	ldrd	r3, r8, [r1, #28]
 8007484:	e9d1 2c01 	ldrd	r2, ip, [r1, #4]
 8007488:	e9d1 7603 	ldrd	r7, r6, [r1, #12]
 800748c:	e9d1 5405 	ldrd	r5, r4, [r1, #20]
 8007490:	f8d1 e024 	ldr.w	lr, [r1, #36]	@ 0x24
  if (Init->SDBank == FMC_SDRAM_BANK1)
 8007494:	6809      	ldr	r1, [r1, #0]
 8007496:	ea43 0308 	orr.w	r3, r3, r8
 800749a:	b981      	cbnz	r1, 80074be <FMC_SDRAM_Init+0x42>
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 800749c:	ea43 030e 	orr.w	r3, r3, lr
 80074a0:	4313      	orrs	r3, r2
 80074a2:	ea43 030c 	orr.w	r3, r3, ip
 80074a6:	433b      	orrs	r3, r7
 80074a8:	6801      	ldr	r1, [r0, #0]
 80074aa:	4333      	orrs	r3, r6
 80074ac:	432b      	orrs	r3, r5
 80074ae:	4323      	orrs	r3, r4
 80074b0:	f36f 010e 	bfc	r1, #0, #15
 80074b4:	430b      	orrs	r3, r1
 80074b6:	6003      	str	r3, [r0, #0]
                Init->CASLatency         |
                Init->WriteProtection));
  }

  return HAL_OK;
}
 80074b8:	2000      	movs	r0, #0
 80074ba:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 80074be:	6801      	ldr	r1, [r0, #0]
 80074c0:	ea43 030e 	orr.w	r3, r3, lr
 80074c4:	f421 41f8 	bic.w	r1, r1, #31744	@ 0x7c00
 80074c8:	430b      	orrs	r3, r1
 80074ca:	6003      	str	r3, [r0, #0]
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
 80074cc:	ea42 030c 	orr.w	r3, r2, ip
 80074d0:	6841      	ldr	r1, [r0, #4]
 80074d2:	433b      	orrs	r3, r7
 80074d4:	4333      	orrs	r3, r6
 80074d6:	432b      	orrs	r3, r5
 80074d8:	f421 42ff 	bic.w	r2, r1, #32640	@ 0x7f80
 80074dc:	4323      	orrs	r3, r4
 80074de:	f022 027f 	bic.w	r2, r2, #127	@ 0x7f
 80074e2:	4313      	orrs	r3, r2
 80074e4:	6043      	str	r3, [r0, #4]
 80074e6:	e7e7      	b.n	80074b8 <FMC_SDRAM_Init+0x3c>

080074e8 <FMC_SDRAM_Timing_Init>:
  assert_param(IS_FMC_SDRAM_BANK(Bank));

  /* Set SDRAM device timing parameters */
  if (Bank == FMC_SDRAM_BANK1)
  {
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 80074e8:	68cb      	ldr	r3, [r1, #12]
 80074ea:	f103 3cff 	add.w	ip, r3, #4294967295
 80074ee:	694b      	ldr	r3, [r1, #20]
{
 80074f0:	b5f0      	push	{r4, r5, r6, r7, lr}
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 80074f2:	684c      	ldr	r4, [r1, #4]
 80074f4:	688f      	ldr	r7, [r1, #8]
 80074f6:	690e      	ldr	r6, [r1, #16]
 80074f8:	698d      	ldr	r5, [r1, #24]
 80074fa:	6809      	ldr	r1, [r1, #0]
 80074fc:	3b01      	subs	r3, #1
 80074fe:	051b      	lsls	r3, r3, #20
 8007500:	3c01      	subs	r4, #1
 8007502:	3f01      	subs	r7, #1
 8007504:	3e01      	subs	r6, #1
 8007506:	3d01      	subs	r5, #1
 8007508:	0124      	lsls	r4, r4, #4
 800750a:	023f      	lsls	r7, r7, #8
 800750c:	0436      	lsls	r6, r6, #16
 800750e:	062d      	lsls	r5, r5, #24
 8007510:	3901      	subs	r1, #1
 8007512:	ea43 330c 	orr.w	r3, r3, ip, lsl #12
  if (Bank == FMC_SDRAM_BANK1)
 8007516:	b95a      	cbnz	r2, 8007530 <FMC_SDRAM_Timing_Init+0x48>
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 8007518:	430b      	orrs	r3, r1
 800751a:	4323      	orrs	r3, r4
 800751c:	6882      	ldr	r2, [r0, #8]
 800751e:	433b      	orrs	r3, r7
 8007520:	4333      	orrs	r3, r6
 8007522:	432b      	orrs	r3, r5
 8007524:	f002 4270 	and.w	r2, r2, #4026531840	@ 0xf0000000
 8007528:	4313      	orrs	r3, r2
 800752a:	6083      	str	r3, [r0, #8]
                (((Timing->WriteRecoveryTime) - 1U)    << FMC_SDTR1_TWR_Pos)  |
                (((Timing->RCDDelay) - 1U)             << FMC_SDTR1_TRCD_Pos)));
  }

  return HAL_OK;
}
 800752c:	2000      	movs	r0, #0
 800752e:	bdf0      	pop	{r4, r5, r6, r7, pc}
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 8007530:	6882      	ldr	r2, [r0, #8]
 8007532:	f422 0270 	bic.w	r2, r2, #15728640	@ 0xf00000
 8007536:	f422 4270 	bic.w	r2, r2, #61440	@ 0xf000
 800753a:	4313      	orrs	r3, r2
 800753c:	6083      	str	r3, [r0, #8]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
 800753e:	ea44 0307 	orr.w	r3, r4, r7
 8007542:	68c2      	ldr	r2, [r0, #12]
 8007544:	430b      	orrs	r3, r1
 8007546:	4333      	orrs	r3, r6
 8007548:	432b      	orrs	r3, r5
 800754a:	f002 4270 	and.w	r2, r2, #4026531840	@ 0xf0000000
 800754e:	4313      	orrs	r3, r2
 8007550:	60c3      	str	r3, [r0, #12]
 8007552:	e7eb      	b.n	800752c <FMC_SDRAM_Timing_Init+0x44>

08007554 <FMC_SDRAM_SendCommand>:
  * @param  Timeout Timeout wait value
  * @retval HAL state
  */
HAL_StatusTypeDef FMC_SDRAM_SendCommand(FMC_SDRAM_TypeDef *Device,
                                        FMC_SDRAM_CommandTypeDef *Command, uint32_t Timeout)
{
 8007554:	b570      	push	{r4, r5, r6, lr}
 8007556:	4604      	mov	r4, r0
 8007558:	4615      	mov	r5, r2
  assert_param(IS_FMC_COMMAND_TARGET(Command->CommandTarget));
  assert_param(IS_FMC_AUTOREFRESH_NUMBER(Command->AutoRefreshNumber));
  assert_param(IS_FMC_MODE_REGISTER(Command->ModeRegisterDefinition));

  /* Set command register */
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
 800755a:	6902      	ldr	r2, [r0, #16]
 800755c:	e9d1 3000 	ldrd	r3, r0, [r1]
 8007560:	4303      	orrs	r3, r0
 8007562:	68c8      	ldr	r0, [r1, #12]
 8007564:	f36f 0215 	bfc	r2, #0, #22
 8007568:	ea43 2340 	orr.w	r3, r3, r0, lsl #9
 800756c:	4313      	orrs	r3, r2
 800756e:	688a      	ldr	r2, [r1, #8]
 8007570:	3a01      	subs	r2, #1
 8007572:	ea43 1342 	orr.w	r3, r3, r2, lsl #5
 8007576:	6123      	str	r3, [r4, #16]
             ((Command->CommandMode) | (Command->CommandTarget) |
              (((Command->AutoRefreshNumber) - 1U) << FMC_SDCMR_NRFS_Pos) |
              ((Command->ModeRegisterDefinition) << FMC_SDCMR_MRD_Pos)));
  /* Get tick */
  tickstart = HAL_GetTick();
 8007578:	f7fd f8d8 	bl	800472c <HAL_GetTick>
 800757c:	4606      	mov	r6, r0

  /* wait until command is send */
  while (HAL_IS_BIT_SET(Device->SDSR, FMC_SDSR_BUSY))
 800757e:	69a0      	ldr	r0, [r4, #24]
 8007580:	f010 0020 	ands.w	r0, r0, #32
 8007584:	d003      	beq.n	800758e <FMC_SDRAM_SendCommand+0x3a>
  {
    /* Check for the Timeout */
    if (Timeout != HAL_MAX_DELAY)
 8007586:	1c6b      	adds	r3, r5, #1
 8007588:	d0f9      	beq.n	800757e <FMC_SDRAM_SendCommand+0x2a>
    {
      if ((Timeout == 0U) || ((HAL_GetTick() - tickstart) > Timeout))
 800758a:	b90d      	cbnz	r5, 8007590 <FMC_SDRAM_SendCommand+0x3c>
      {
        return HAL_TIMEOUT;
 800758c:	2003      	movs	r0, #3
      }
    }
  }
  return HAL_OK;
}
 800758e:	bd70      	pop	{r4, r5, r6, pc}
      if ((Timeout == 0U) || ((HAL_GetTick() - tickstart) > Timeout))
 8007590:	f7fd f8cc 	bl	800472c <HAL_GetTick>
 8007594:	1b80      	subs	r0, r0, r6
 8007596:	42a8      	cmp	r0, r5
 8007598:	d9f1      	bls.n	800757e <FMC_SDRAM_SendCommand+0x2a>
 800759a:	e7f7      	b.n	800758c <FMC_SDRAM_SendCommand+0x38>

0800759c <FMC_SDRAM_ProgramRefreshRate>:
  /* Check the parameters */
  assert_param(IS_FMC_SDRAM_DEVICE(Device));
  assert_param(IS_FMC_REFRESH_RATE(RefreshRate));

  /* Set the refresh rate in command register */
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
 800759c:	6943      	ldr	r3, [r0, #20]
 800759e:	f36f 034d 	bfc	r3, #1, #13
 80075a2:	ea43 0341 	orr.w	r3, r3, r1, lsl #1
 80075a6:	6143      	str	r3, [r0, #20]

  return HAL_OK;
}
 80075a8:	2000      	movs	r0, #0
 80075aa:	4770      	bx	lr

080075ac <USB_CoreReset>:
  * @brief  Reset the USB Core (needed after USB clock settings change)
  * @param  USBx  Selected device
  * @retval HAL status
  */
static HAL_StatusTypeDef USB_CoreReset(USB_OTG_GlobalTypeDef *USBx)
{
 80075ac:	b082      	sub	sp, #8
  __IO uint32_t count = 0U;
 80075ae:	2300      	movs	r3, #0
{
 80075b0:	4602      	mov	r2, r0
  __IO uint32_t count = 0U;
 80075b2:	9301      	str	r3, [sp, #4]

  /* Wait for AHB master IDLE state. */
  do
  {
    count++;
 80075b4:	9b01      	ldr	r3, [sp, #4]
 80075b6:	3301      	adds	r3, #1
 80075b8:	9301      	str	r3, [sp, #4]

    if (count > HAL_USB_TIMEOUT)
 80075ba:	9b01      	ldr	r3, [sp, #4]
 80075bc:	f1b3 6f70 	cmp.w	r3, #251658240	@ 0xf000000
 80075c0:	d815      	bhi.n	80075ee <USB_CoreReset+0x42>
    {
      return HAL_TIMEOUT;
    }
  } while ((USBx->GRSTCTL & USB_OTG_GRSTCTL_AHBIDL) == 0U);
 80075c2:	6913      	ldr	r3, [r2, #16]
 80075c4:	2b00      	cmp	r3, #0
 80075c6:	daf5      	bge.n	80075b4 <USB_CoreReset+0x8>

  /* Core Soft Reset */
  count = 0U;
 80075c8:	2300      	movs	r3, #0
 80075ca:	9301      	str	r3, [sp, #4]
  USBx->GRSTCTL |= USB_OTG_GRSTCTL_CSRST;
 80075cc:	6913      	ldr	r3, [r2, #16]
 80075ce:	f043 0301 	orr.w	r3, r3, #1
 80075d2:	6113      	str	r3, [r2, #16]

  do
  {
    count++;
 80075d4:	9b01      	ldr	r3, [sp, #4]
 80075d6:	3301      	adds	r3, #1
 80075d8:	9301      	str	r3, [sp, #4]

    if (count > HAL_USB_TIMEOUT)
 80075da:	9b01      	ldr	r3, [sp, #4]
 80075dc:	f1b3 6f70 	cmp.w	r3, #251658240	@ 0xf000000
 80075e0:	d805      	bhi.n	80075ee <USB_CoreReset+0x42>
    {
      return HAL_TIMEOUT;
    }
  } while ((USBx->GRSTCTL & USB_OTG_GRSTCTL_CSRST) == USB_OTG_GRSTCTL_CSRST);
 80075e2:	6910      	ldr	r0, [r2, #16]
 80075e4:	f010 0001 	ands.w	r0, r0, #1
 80075e8:	d1f4      	bne.n	80075d4 <USB_CoreReset+0x28>

  return HAL_OK;
}
 80075ea:	b002      	add	sp, #8
 80075ec:	4770      	bx	lr
      return HAL_TIMEOUT;
 80075ee:	2003      	movs	r0, #3
 80075f0:	e7fb      	b.n	80075ea <USB_CoreReset+0x3e>

080075f2 <USB_CoreInit>:
{
 80075f2:	b084      	sub	sp, #16
 80075f4:	b538      	push	{r3, r4, r5, lr}
 80075f6:	ad05      	add	r5, sp, #20
 80075f8:	e885 000e 	stmia.w	r5, {r1, r2, r3}
  if (cfg.phy_itface == USB_OTG_ULPI_PHY)
 80075fc:	f89d 3019 	ldrb.w	r3, [sp, #25]
 8007600:	2b01      	cmp	r3, #1
{
 8007602:	4604      	mov	r4, r0
  if (cfg.phy_itface == USB_OTG_ULPI_PHY)
 8007604:	d127      	bne.n	8007656 <USB_CoreInit+0x64>
    USBx->GCCFG &= ~(USB_OTG_GCCFG_PWRDWN);
 8007606:	6b83      	ldr	r3, [r0, #56]	@ 0x38
 8007608:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 800760c:	6383      	str	r3, [r0, #56]	@ 0x38
    USBx->GUSBCFG &= ~(USB_OTG_GUSBCFG_TSDPS | USB_OTG_GUSBCFG_ULPIFSLS | USB_OTG_GUSBCFG_PHYSEL);
 800760e:	68c3      	ldr	r3, [r0, #12]
 8007610:	f423 0384 	bic.w	r3, r3, #4325376	@ 0x420000
 8007614:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 8007618:	60c3      	str	r3, [r0, #12]
    USBx->GUSBCFG &= ~(USB_OTG_GUSBCFG_ULPIEVBUSD | USB_OTG_GUSBCFG_ULPIEVBUSI);
 800761a:	68c3      	ldr	r3, [r0, #12]
 800761c:	f423 1340 	bic.w	r3, r3, #3145728	@ 0x300000
 8007620:	60c3      	str	r3, [r0, #12]
    if (cfg.use_external_vbus == 1U)
 8007622:	f89d 3020 	ldrb.w	r3, [sp, #32]
 8007626:	2b01      	cmp	r3, #1
      USBx->GUSBCFG |= USB_OTG_GUSBCFG_ULPIEVBUSD;
 8007628:	bf02      	ittt	eq
 800762a:	68c3      	ldreq	r3, [r0, #12]
 800762c:	f443 1380 	orreq.w	r3, r3, #1048576	@ 0x100000
 8007630:	60c3      	streq	r3, [r0, #12]
    ret = USB_CoreReset(USBx);
 8007632:	f7ff ffbb 	bl	80075ac <USB_CoreReset>
  if (cfg.dma_enable == 1U)
 8007636:	f89d 3016 	ldrb.w	r3, [sp, #22]
 800763a:	2b01      	cmp	r3, #1
 800763c:	d107      	bne.n	800764e <USB_CoreInit+0x5c>
    USBx->GAHBCFG |= USB_OTG_GAHBCFG_HBSTLEN_2;
 800763e:	68a3      	ldr	r3, [r4, #8]
 8007640:	f043 0306 	orr.w	r3, r3, #6
 8007644:	60a3      	str	r3, [r4, #8]
    USBx->GAHBCFG |= USB_OTG_GAHBCFG_DMAEN;
 8007646:	68a3      	ldr	r3, [r4, #8]
 8007648:	f043 0320 	orr.w	r3, r3, #32
 800764c:	60a3      	str	r3, [r4, #8]
}
 800764e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8007652:	b004      	add	sp, #16
 8007654:	4770      	bx	lr
    USBx->GUSBCFG |= USB_OTG_GUSBCFG_PHYSEL;
 8007656:	68c3      	ldr	r3, [r0, #12]
 8007658:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 800765c:	60c3      	str	r3, [r0, #12]
    ret = USB_CoreReset(USBx);
 800765e:	f7ff ffa5 	bl	80075ac <USB_CoreReset>
    if (cfg.battery_charging_enable == 0U)
 8007662:	f89d 301d 	ldrb.w	r3, [sp, #29]
 8007666:	b923      	cbnz	r3, 8007672 <USB_CoreInit+0x80>
      USBx->GCCFG |= USB_OTG_GCCFG_PWRDWN;
 8007668:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 800766a:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
      USBx->GCCFG &= ~(USB_OTG_GCCFG_PWRDWN);
 800766e:	63a3      	str	r3, [r4, #56]	@ 0x38
 8007670:	e7e1      	b.n	8007636 <USB_CoreInit+0x44>
 8007672:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 8007674:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 8007678:	e7f9      	b.n	800766e <USB_CoreInit+0x7c>
	...

0800767c <USB_SetTurnaroundTime>:
  if (speed == USBD_FS_SPEED)
 800767c:	2a02      	cmp	r2, #2
 800767e:	d14a      	bne.n	8007716 <USB_SetTurnaroundTime+0x9a>
    if ((hclk >= 14200000U) && (hclk < 15000000U))
 8007680:	4b27      	ldr	r3, [pc, #156]	@ (8007720 <USB_SetTurnaroundTime+0xa4>)
 8007682:	4a28      	ldr	r2, [pc, #160]	@ (8007724 <USB_SetTurnaroundTime+0xa8>)
 8007684:	440b      	add	r3, r1
 8007686:	4293      	cmp	r3, r2
 8007688:	d939      	bls.n	80076fe <USB_SetTurnaroundTime+0x82>
    else if ((hclk >= 15000000U) && (hclk < 16000000U))
 800768a:	4b27      	ldr	r3, [pc, #156]	@ (8007728 <USB_SetTurnaroundTime+0xac>)
 800768c:	4a27      	ldr	r2, [pc, #156]	@ (800772c <USB_SetTurnaroundTime+0xb0>)
 800768e:	440b      	add	r3, r1
 8007690:	4293      	cmp	r3, r2
 8007692:	d936      	bls.n	8007702 <USB_SetTurnaroundTime+0x86>
    else if ((hclk >= 16000000U) && (hclk < 17200000U))
 8007694:	4a26      	ldr	r2, [pc, #152]	@ (8007730 <USB_SetTurnaroundTime+0xb4>)
 8007696:	f5a1 0374 	sub.w	r3, r1, #15990784	@ 0xf40000
 800769a:	f5a3 5310 	sub.w	r3, r3, #9216	@ 0x2400
 800769e:	4293      	cmp	r3, r2
 80076a0:	d931      	bls.n	8007706 <USB_SetTurnaroundTime+0x8a>
    else if ((hclk >= 17200000U) && (hclk < 18500000U))
 80076a2:	4a24      	ldr	r2, [pc, #144]	@ (8007734 <USB_SetTurnaroundTime+0xb8>)
 80076a4:	f1a1 7383 	sub.w	r3, r1, #17170432	@ 0x1060000
 80076a8:	f5a3 43e7 	sub.w	r3, r3, #29568	@ 0x7380
 80076ac:	4293      	cmp	r3, r2
 80076ae:	d32c      	bcc.n	800770a <USB_SetTurnaroundTime+0x8e>
    else if ((hclk >= 18500000U) && (hclk < 20000000U))
 80076b0:	4b21      	ldr	r3, [pc, #132]	@ (8007738 <USB_SetTurnaroundTime+0xbc>)
 80076b2:	4a22      	ldr	r2, [pc, #136]	@ (800773c <USB_SetTurnaroundTime+0xc0>)
 80076b4:	440b      	add	r3, r1
 80076b6:	4293      	cmp	r3, r2
 80076b8:	d929      	bls.n	800770e <USB_SetTurnaroundTime+0x92>
    else if ((hclk >= 20000000U) && (hclk < 21800000U))
 80076ba:	4b21      	ldr	r3, [pc, #132]	@ (8007740 <USB_SetTurnaroundTime+0xc4>)
 80076bc:	4a21      	ldr	r2, [pc, #132]	@ (8007744 <USB_SetTurnaroundTime+0xc8>)
 80076be:	440b      	add	r3, r1
 80076c0:	4293      	cmp	r3, r2
 80076c2:	d326      	bcc.n	8007712 <USB_SetTurnaroundTime+0x96>
    else if ((hclk >= 21800000U) && (hclk < 24000000U))
 80076c4:	4b20      	ldr	r3, [pc, #128]	@ (8007748 <USB_SetTurnaroundTime+0xcc>)
 80076c6:	4a21      	ldr	r2, [pc, #132]	@ (800774c <USB_SetTurnaroundTime+0xd0>)
 80076c8:	440b      	add	r3, r1
 80076ca:	4293      	cmp	r3, r2
 80076cc:	d323      	bcc.n	8007716 <USB_SetTurnaroundTime+0x9a>
    else if ((hclk >= 24000000U) && (hclk < 27700000U))
 80076ce:	4a20      	ldr	r2, [pc, #128]	@ (8007750 <USB_SetTurnaroundTime+0xd4>)
 80076d0:	f1a1 73b7 	sub.w	r3, r1, #23986176	@ 0x16e0000
 80076d4:	f5a3 5358 	sub.w	r3, r3, #13824	@ 0x3600
 80076d8:	4293      	cmp	r3, r2
 80076da:	d31e      	bcc.n	800771a <USB_SetTurnaroundTime+0x9e>
    else if ((hclk >= 27700000U) && (hclk < 32000000U))
 80076dc:	4b1d      	ldr	r3, [pc, #116]	@ (8007754 <USB_SetTurnaroundTime+0xd8>)
      UsbTrd = 0x7U;
 80076de:	4a1e      	ldr	r2, [pc, #120]	@ (8007758 <USB_SetTurnaroundTime+0xdc>)
    else if ((hclk >= 27700000U) && (hclk < 32000000U))
 80076e0:	440b      	add	r3, r1
      UsbTrd = 0x7U;
 80076e2:	4293      	cmp	r3, r2
 80076e4:	bf2c      	ite	cs
 80076e6:	2306      	movcs	r3, #6
 80076e8:	2307      	movcc	r3, #7
  USBx->GUSBCFG &= ~USB_OTG_GUSBCFG_TRDT;
 80076ea:	68c2      	ldr	r2, [r0, #12]
 80076ec:	f422 5270 	bic.w	r2, r2, #15360	@ 0x3c00
 80076f0:	60c2      	str	r2, [r0, #12]
  USBx->GUSBCFG |= (uint32_t)((UsbTrd << 10) & USB_OTG_GUSBCFG_TRDT);
 80076f2:	68c2      	ldr	r2, [r0, #12]
 80076f4:	ea42 2383 	orr.w	r3, r2, r3, lsl #10
 80076f8:	60c3      	str	r3, [r0, #12]
}
 80076fa:	2000      	movs	r0, #0
 80076fc:	4770      	bx	lr
      UsbTrd = 0xFU;
 80076fe:	230f      	movs	r3, #15
 8007700:	e7f3      	b.n	80076ea <USB_SetTurnaroundTime+0x6e>
      UsbTrd = 0xEU;
 8007702:	230e      	movs	r3, #14
 8007704:	e7f1      	b.n	80076ea <USB_SetTurnaroundTime+0x6e>
      UsbTrd = 0xDU;
 8007706:	230d      	movs	r3, #13
 8007708:	e7ef      	b.n	80076ea <USB_SetTurnaroundTime+0x6e>
      UsbTrd = 0xCU;
 800770a:	230c      	movs	r3, #12
 800770c:	e7ed      	b.n	80076ea <USB_SetTurnaroundTime+0x6e>
      UsbTrd = 0xBU;
 800770e:	230b      	movs	r3, #11
 8007710:	e7eb      	b.n	80076ea <USB_SetTurnaroundTime+0x6e>
      UsbTrd = 0xAU;
 8007712:	230a      	movs	r3, #10
 8007714:	e7e9      	b.n	80076ea <USB_SetTurnaroundTime+0x6e>
    UsbTrd = USBD_HS_TRDT_VALUE;
 8007716:	2309      	movs	r3, #9
 8007718:	e7e7      	b.n	80076ea <USB_SetTurnaroundTime+0x6e>
      UsbTrd = 0x8U;
 800771a:	2308      	movs	r3, #8
 800771c:	e7e5      	b.n	80076ea <USB_SetTurnaroundTime+0x6e>
 800771e:	bf00      	nop
 8007720:	ff275340 	.word	0xff275340
 8007724:	000c34ff 	.word	0x000c34ff
 8007728:	ff1b1e40 	.word	0xff1b1e40
 800772c:	000f423f 	.word	0x000f423f
 8007730:	00124f7f 	.word	0x00124f7f
 8007734:	0013d620 	.word	0x0013d620
 8007738:	fee5b660 	.word	0xfee5b660
 800773c:	0016e35f 	.word	0x0016e35f
 8007740:	feced300 	.word	0xfeced300
 8007744:	001b7740 	.word	0x001b7740
 8007748:	feb35bc0 	.word	0xfeb35bc0
 800774c:	002191c0 	.word	0x002191c0
 8007750:	00387520 	.word	0x00387520
 8007754:	fe5954e0 	.word	0xfe5954e0
 8007758:	00419ce0 	.word	0x00419ce0

0800775c <USB_EnableGlobalInt>:
  USBx->GAHBCFG |= USB_OTG_GAHBCFG_GINT;
 800775c:	6883      	ldr	r3, [r0, #8]
 800775e:	f043 0301 	orr.w	r3, r3, #1
 8007762:	6083      	str	r3, [r0, #8]
}
 8007764:	2000      	movs	r0, #0
 8007766:	4770      	bx	lr

08007768 <USB_DisableGlobalInt>:
  USBx->GAHBCFG &= ~USB_OTG_GAHBCFG_GINT;
 8007768:	6883      	ldr	r3, [r0, #8]
 800776a:	f023 0301 	bic.w	r3, r3, #1
 800776e:	6083      	str	r3, [r0, #8]
}
 8007770:	2000      	movs	r0, #0
 8007772:	4770      	bx	lr

08007774 <USB_SetCurrentMode>:
{
 8007774:	b538      	push	{r3, r4, r5, lr}
  USBx->GUSBCFG &= ~(USB_OTG_GUSBCFG_FHMOD | USB_OTG_GUSBCFG_FDMOD);
 8007776:	68c3      	ldr	r3, [r0, #12]
  if (mode == USB_HOST_MODE)
 8007778:	2901      	cmp	r1, #1
  USBx->GUSBCFG &= ~(USB_OTG_GUSBCFG_FHMOD | USB_OTG_GUSBCFG_FDMOD);
 800777a:	f023 43c0 	bic.w	r3, r3, #1610612736	@ 0x60000000
{
 800777e:	4605      	mov	r5, r0
 8007780:	460c      	mov	r4, r1
  USBx->GUSBCFG &= ~(USB_OTG_GUSBCFG_FHMOD | USB_OTG_GUSBCFG_FDMOD);
 8007782:	60c3      	str	r3, [r0, #12]
  if (mode == USB_HOST_MODE)
 8007784:	d114      	bne.n	80077b0 <USB_SetCurrentMode+0x3c>
    USBx->GUSBCFG |= USB_OTG_GUSBCFG_FHMOD;
 8007786:	68c3      	ldr	r3, [r0, #12]
 8007788:	f043 5300 	orr.w	r3, r3, #536870912	@ 0x20000000
 800778c:	60c3      	str	r3, [r0, #12]
  uint32_t ms = 0U;
 800778e:	2400      	movs	r4, #0
      HAL_Delay(10U);
 8007790:	200a      	movs	r0, #10
 8007792:	f7fc ffd1 	bl	8004738 <HAL_Delay>
  return ((USBx->GINTSTS) & 0x1U);
 8007796:	696b      	ldr	r3, [r5, #20]
    } while ((USB_GetMode(USBx) != (uint32_t)USB_HOST_MODE) && (ms < HAL_USB_CURRENT_MODE_MAX_DELAY_MS));
 8007798:	07d9      	lsls	r1, r3, #31
      ms += 10U;
 800779a:	f104 040a 	add.w	r4, r4, #10
    } while ((USB_GetMode(USBx) != (uint32_t)USB_HOST_MODE) && (ms < HAL_USB_CURRENT_MODE_MAX_DELAY_MS));
 800779e:	d402      	bmi.n	80077a6 <USB_SetCurrentMode+0x32>
 80077a0:	2cc8      	cmp	r4, #200	@ 0xc8
 80077a2:	d1f5      	bne.n	8007790 <USB_SetCurrentMode+0x1c>
      ms += 10U;
 80077a4:	24c8      	movs	r4, #200	@ 0xc8
  if (ms == HAL_USB_CURRENT_MODE_MAX_DELAY_MS)
 80077a6:	f1a4 03c8 	sub.w	r3, r4, #200	@ 0xc8
 80077aa:	4258      	negs	r0, r3
 80077ac:	4158      	adcs	r0, r3
}
 80077ae:	bd38      	pop	{r3, r4, r5, pc}
  else if (mode == USB_DEVICE_MODE)
 80077b0:	b971      	cbnz	r1, 80077d0 <USB_SetCurrentMode+0x5c>
    USBx->GUSBCFG |= USB_OTG_GUSBCFG_FDMOD;
 80077b2:	68c3      	ldr	r3, [r0, #12]
 80077b4:	f043 4380 	orr.w	r3, r3, #1073741824	@ 0x40000000
 80077b8:	60c3      	str	r3, [r0, #12]
      HAL_Delay(10U);
 80077ba:	200a      	movs	r0, #10
 80077bc:	f7fc ffbc 	bl	8004738 <HAL_Delay>
  return ((USBx->GINTSTS) & 0x1U);
 80077c0:	696b      	ldr	r3, [r5, #20]
    } while ((USB_GetMode(USBx) != (uint32_t)USB_DEVICE_MODE) && (ms < HAL_USB_CURRENT_MODE_MAX_DELAY_MS));
 80077c2:	07da      	lsls	r2, r3, #31
      ms += 10U;
 80077c4:	f104 040a 	add.w	r4, r4, #10
    } while ((USB_GetMode(USBx) != (uint32_t)USB_DEVICE_MODE) && (ms < HAL_USB_CURRENT_MODE_MAX_DELAY_MS));
 80077c8:	d5ed      	bpl.n	80077a6 <USB_SetCurrentMode+0x32>
 80077ca:	2cc8      	cmp	r4, #200	@ 0xc8
 80077cc:	d1f5      	bne.n	80077ba <USB_SetCurrentMode+0x46>
 80077ce:	e7e9      	b.n	80077a4 <USB_SetCurrentMode+0x30>
    return HAL_ERROR;
 80077d0:	2001      	movs	r0, #1
 80077d2:	e7ec      	b.n	80077ae <USB_SetCurrentMode+0x3a>

080077d4 <USB_FlushTxFifo>:
{
 80077d4:	b082      	sub	sp, #8
  __IO uint32_t count = 0U;
 80077d6:	2300      	movs	r3, #0
{
 80077d8:	4602      	mov	r2, r0
  __IO uint32_t count = 0U;
 80077da:	9301      	str	r3, [sp, #4]
    count++;
 80077dc:	9b01      	ldr	r3, [sp, #4]
 80077de:	3301      	adds	r3, #1
 80077e0:	9301      	str	r3, [sp, #4]
    if (count > HAL_USB_TIMEOUT)
 80077e2:	9b01      	ldr	r3, [sp, #4]
 80077e4:	f1b3 6f70 	cmp.w	r3, #251658240	@ 0xf000000
 80077e8:	d815      	bhi.n	8007816 <USB_FlushTxFifo+0x42>
  } while ((USBx->GRSTCTL & USB_OTG_GRSTCTL_AHBIDL) == 0U);
 80077ea:	6913      	ldr	r3, [r2, #16]
 80077ec:	2b00      	cmp	r3, #0
 80077ee:	daf5      	bge.n	80077dc <USB_FlushTxFifo+0x8>
  USBx->GRSTCTL = (USB_OTG_GRSTCTL_TXFFLSH | (num << 6));
 80077f0:	0189      	lsls	r1, r1, #6
  count = 0U;
 80077f2:	2300      	movs	r3, #0
  USBx->GRSTCTL = (USB_OTG_GRSTCTL_TXFFLSH | (num << 6));
 80077f4:	f041 0120 	orr.w	r1, r1, #32
  count = 0U;
 80077f8:	9301      	str	r3, [sp, #4]
  USBx->GRSTCTL = (USB_OTG_GRSTCTL_TXFFLSH | (num << 6));
 80077fa:	6111      	str	r1, [r2, #16]
    count++;
 80077fc:	9b01      	ldr	r3, [sp, #4]
 80077fe:	3301      	adds	r3, #1
 8007800:	9301      	str	r3, [sp, #4]
    if (count > HAL_USB_TIMEOUT)
 8007802:	9b01      	ldr	r3, [sp, #4]
 8007804:	f1b3 6f70 	cmp.w	r3, #251658240	@ 0xf000000
 8007808:	d805      	bhi.n	8007816 <USB_FlushTxFifo+0x42>
  } while ((USBx->GRSTCTL & USB_OTG_GRSTCTL_TXFFLSH) == USB_OTG_GRSTCTL_TXFFLSH);
 800780a:	6910      	ldr	r0, [r2, #16]
 800780c:	f010 0020 	ands.w	r0, r0, #32
 8007810:	d1f4      	bne.n	80077fc <USB_FlushTxFifo+0x28>
}
 8007812:	b002      	add	sp, #8
 8007814:	4770      	bx	lr
      return HAL_TIMEOUT;
 8007816:	2003      	movs	r0, #3
 8007818:	e7fb      	b.n	8007812 <USB_FlushTxFifo+0x3e>

0800781a <USB_FlushRxFifo>:
{
 800781a:	b082      	sub	sp, #8
  __IO uint32_t count = 0U;
 800781c:	2300      	movs	r3, #0
{
 800781e:	4602      	mov	r2, r0
  __IO uint32_t count = 0U;
 8007820:	9301      	str	r3, [sp, #4]
    count++;
 8007822:	9b01      	ldr	r3, [sp, #4]
 8007824:	3301      	adds	r3, #1
 8007826:	9301      	str	r3, [sp, #4]
    if (count > HAL_USB_TIMEOUT)
 8007828:	9b01      	ldr	r3, [sp, #4]
 800782a:	f1b3 6f70 	cmp.w	r3, #251658240	@ 0xf000000
 800782e:	d813      	bhi.n	8007858 <USB_FlushRxFifo+0x3e>
  } while ((USBx->GRSTCTL & USB_OTG_GRSTCTL_AHBIDL) == 0U);
 8007830:	6913      	ldr	r3, [r2, #16]
 8007832:	2b00      	cmp	r3, #0
 8007834:	daf5      	bge.n	8007822 <USB_FlushRxFifo+0x8>
  count = 0U;
 8007836:	2300      	movs	r3, #0
 8007838:	9301      	str	r3, [sp, #4]
  USBx->GRSTCTL = USB_OTG_GRSTCTL_RXFFLSH;
 800783a:	2310      	movs	r3, #16
 800783c:	6113      	str	r3, [r2, #16]
    count++;
 800783e:	9b01      	ldr	r3, [sp, #4]
 8007840:	3301      	adds	r3, #1
 8007842:	9301      	str	r3, [sp, #4]
    if (count > HAL_USB_TIMEOUT)
 8007844:	9b01      	ldr	r3, [sp, #4]
 8007846:	f1b3 6f70 	cmp.w	r3, #251658240	@ 0xf000000
 800784a:	d805      	bhi.n	8007858 <USB_FlushRxFifo+0x3e>
  } while ((USBx->GRSTCTL & USB_OTG_GRSTCTL_RXFFLSH) == USB_OTG_GRSTCTL_RXFFLSH);
 800784c:	6910      	ldr	r0, [r2, #16]
 800784e:	f010 0010 	ands.w	r0, r0, #16
 8007852:	d1f4      	bne.n	800783e <USB_FlushRxFifo+0x24>
}
 8007854:	b002      	add	sp, #8
 8007856:	4770      	bx	lr
      return HAL_TIMEOUT;
 8007858:	2003      	movs	r0, #3
 800785a:	e7fb      	b.n	8007854 <USB_FlushRxFifo+0x3a>

0800785c <USB_SetDevSpeed>:
  USBx_DEVICE->DCFG |= speed;
 800785c:	f8d0 3800 	ldr.w	r3, [r0, #2048]	@ 0x800
 8007860:	4319      	orrs	r1, r3
 8007862:	f8c0 1800 	str.w	r1, [r0, #2048]	@ 0x800
}
 8007866:	2000      	movs	r0, #0
 8007868:	4770      	bx	lr
	...

0800786c <USB_DevInit>:
{
 800786c:	b084      	sub	sp, #16
 800786e:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8007872:	4604      	mov	r4, r0
 8007874:	a809      	add	r0, sp, #36	@ 0x24
 8007876:	e880 000e 	stmia.w	r0, {r1, r2, r3}
  for (i = 0U; i < 15U; i++)
 800787a:	2300      	movs	r3, #0
 800787c:	f89d 6024 	ldrb.w	r6, [sp, #36]	@ 0x24
 8007880:	f89d 502e 	ldrb.w	r5, [sp, #46]	@ 0x2e
    USBx->DIEPTXF[i] = 0U;
 8007884:	4619      	mov	r1, r3
 8007886:	f103 0240 	add.w	r2, r3, #64	@ 0x40
 800788a:	eb04 0282 	add.w	r2, r4, r2, lsl #2
  for (i = 0U; i < 15U; i++)
 800788e:	3301      	adds	r3, #1
 8007890:	2b0f      	cmp	r3, #15
    USBx->DIEPTXF[i] = 0U;
 8007892:	6051      	str	r1, [r2, #4]
  for (i = 0U; i < 15U; i++)
 8007894:	d1f7      	bne.n	8007886 <USB_DevInit+0x1a>
    USBx_DEVICE->DCTL |= USB_OTG_DCTL_SDIS;
 8007896:	f504 6700 	add.w	r7, r4, #2048	@ 0x800
  if (cfg.vbus_sensing_enable == 0U)
 800789a:	2d00      	cmp	r5, #0
 800789c:	d16c      	bne.n	8007978 <USB_DevInit+0x10c>
    USBx_DEVICE->DCTL |= USB_OTG_DCTL_SDIS;
 800789e:	687b      	ldr	r3, [r7, #4]
 80078a0:	f043 0302 	orr.w	r3, r3, #2
 80078a4:	607b      	str	r3, [r7, #4]
    USBx->GCCFG |= USB_OTG_GCCFG_NOVBUSSENS;
 80078a6:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 80078a8:	f443 1300 	orr.w	r3, r3, #2097152	@ 0x200000
 80078ac:	63a3      	str	r3, [r4, #56]	@ 0x38
    USBx->GCCFG &= ~USB_OTG_GCCFG_VBUSBSEN;
 80078ae:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 80078b0:	f423 2300 	bic.w	r3, r3, #524288	@ 0x80000
 80078b4:	63a3      	str	r3, [r4, #56]	@ 0x38
    USBx->GCCFG &= ~USB_OTG_GCCFG_VBUSASEN;
 80078b6:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 80078b8:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
    USBx->GCCFG |= USB_OTG_GCCFG_VBUSBSEN;
 80078bc:	63a3      	str	r3, [r4, #56]	@ 0x38
  USBx_PCGCCTL = 0U;
 80078be:	2300      	movs	r3, #0
 80078c0:	f8c4 3e00 	str.w	r3, [r4, #3584]	@ 0xe00
  if (cfg.phy_itface == USB_OTG_ULPI_PHY)
 80078c4:	f89d 3029 	ldrb.w	r3, [sp, #41]	@ 0x29
 80078c8:	2b01      	cmp	r3, #1
 80078ca:	d15f      	bne.n	800798c <USB_DevInit+0x120>
    if (cfg.speed == USBD_HS_SPEED)
 80078cc:	f89d 1027 	ldrb.w	r1, [sp, #39]	@ 0x27
 80078d0:	2900      	cmp	r1, #0
 80078d2:	d159      	bne.n	8007988 <USB_DevInit+0x11c>
    (void)USB_SetDevSpeed(USBx, USB_OTG_SPEED_FULL);
 80078d4:	4620      	mov	r0, r4
 80078d6:	f7ff ffc1 	bl	800785c <USB_SetDevSpeed>
  if (USB_FlushTxFifo(USBx, 0x10U) != HAL_OK) /* all Tx FIFOs */
 80078da:	2110      	movs	r1, #16
 80078dc:	4620      	mov	r0, r4
 80078de:	f7ff ff79 	bl	80077d4 <USB_FlushTxFifo>
 80078e2:	4601      	mov	r1, r0
  if (USB_FlushRxFifo(USBx) != HAL_OK)
 80078e4:	4620      	mov	r0, r4
 80078e6:	f7ff ff98 	bl	800781a <USB_FlushRxFifo>
 80078ea:	4308      	orrs	r0, r1
 80078ec:	b2c0      	uxtb	r0, r0
  USBx_DEVICE->DIEPMSK = 0U;
 80078ee:	2300      	movs	r3, #0
  if (USB_FlushRxFifo(USBx) != HAL_OK)
 80078f0:	3800      	subs	r0, #0
  USBx_DEVICE->DIEPMSK = 0U;
 80078f2:	613b      	str	r3, [r7, #16]
  if (USB_FlushRxFifo(USBx) != HAL_OK)
 80078f4:	bf18      	it	ne
 80078f6:	2001      	movne	r0, #1
  USBx_DEVICE->DOEPMSK = 0U;
 80078f8:	617b      	str	r3, [r7, #20]
  USBx_DEVICE->DAINTMSK = 0U;
 80078fa:	f504 6210 	add.w	r2, r4, #2304	@ 0x900
 80078fe:	61fb      	str	r3, [r7, #28]
      USBx_INEP(i)->DIEPCTL = 0U;
 8007900:	4619      	mov	r1, r3
        USBx_INEP(i)->DIEPCTL = USB_OTG_DIEPCTL_EPDIS | USB_OTG_DIEPCTL_SNAK;
 8007902:	f04f 4c90 	mov.w	ip, #1207959552	@ 0x48000000
        USBx_INEP(i)->DIEPCTL = USB_OTG_DIEPCTL_SNAK;
 8007906:	f04f 6e00 	mov.w	lr, #134217728	@ 0x8000000
    USBx_INEP(i)->DIEPINT  = 0xFB7FU;
 800790a:	f64f 387f 	movw	r8, #64383	@ 0xfb7f
  for (i = 0U; i < cfg.dev_endpoints; i++)
 800790e:	429e      	cmp	r6, r3
 8007910:	d83e      	bhi.n	8007990 <USB_DevInit+0x124>
  for (i = 0U; i < cfg.dev_endpoints; i++)
 8007912:	2200      	movs	r2, #0
 8007914:	f504 6330 	add.w	r3, r4, #2816	@ 0xb00
      USBx_OUTEP(i)->DOEPCTL = 0U;
 8007918:	4611      	mov	r1, r2
        USBx_OUTEP(i)->DOEPCTL = USB_OTG_DOEPCTL_EPDIS | USB_OTG_DOEPCTL_SNAK;
 800791a:	f04f 4c90 	mov.w	ip, #1207959552	@ 0x48000000
        USBx_OUTEP(i)->DOEPCTL = USB_OTG_DOEPCTL_SNAK;
 800791e:	f04f 6e00 	mov.w	lr, #134217728	@ 0x8000000
    USBx_OUTEP(i)->DOEPINT  = 0xFB7FU;
 8007922:	f64f 387f 	movw	r8, #64383	@ 0xfb7f
  for (i = 0U; i < cfg.dev_endpoints; i++)
 8007926:	4296      	cmp	r6, r2
 8007928:	d845      	bhi.n	80079b6 <USB_DevInit+0x14a>
  USBx_DEVICE->DIEPMSK &= ~(USB_OTG_DIEPMSK_TXFURM);
 800792a:	693b      	ldr	r3, [r7, #16]
 800792c:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 8007930:	613b      	str	r3, [r7, #16]
  USBx->GINTMSK = 0U;
 8007932:	2300      	movs	r3, #0
 8007934:	61a3      	str	r3, [r4, #24]
  USBx->GINTSTS = 0xBFFFFFFFU;
 8007936:	f06f 4380 	mvn.w	r3, #1073741824	@ 0x40000000
 800793a:	6163      	str	r3, [r4, #20]
  if (cfg.dma_enable == 0U)
 800793c:	f89d 3026 	ldrb.w	r3, [sp, #38]	@ 0x26
 8007940:	b91b      	cbnz	r3, 800794a <USB_DevInit+0xde>
    USBx->GINTMSK |= USB_OTG_GINTMSK_RXFLVLM;
 8007942:	69a3      	ldr	r3, [r4, #24]
 8007944:	f043 0310 	orr.w	r3, r3, #16
 8007948:	61a3      	str	r3, [r4, #24]
  USBx->GINTMSK |= USB_OTG_GINTMSK_USBSUSPM | USB_OTG_GINTMSK_USBRST |
 800794a:	69a2      	ldr	r2, [r4, #24]
 800794c:	4b23      	ldr	r3, [pc, #140]	@ (80079dc <USB_DevInit+0x170>)
 800794e:	4313      	orrs	r3, r2
 8007950:	61a3      	str	r3, [r4, #24]
  if (cfg.Sof_enable != 0U)
 8007952:	f89d 302a 	ldrb.w	r3, [sp, #42]	@ 0x2a
 8007956:	b11b      	cbz	r3, 8007960 <USB_DevInit+0xf4>
    USBx->GINTMSK |= USB_OTG_GINTMSK_SOFM;
 8007958:	69a3      	ldr	r3, [r4, #24]
 800795a:	f043 0308 	orr.w	r3, r3, #8
 800795e:	61a3      	str	r3, [r4, #24]
  if (cfg.vbus_sensing_enable == 1U)
 8007960:	2d01      	cmp	r5, #1
    USBx->GINTMSK |= (USB_OTG_GINTMSK_SRQIM | USB_OTG_GINTMSK_OTGINT);
 8007962:	bf01      	itttt	eq
 8007964:	69a3      	ldreq	r3, [r4, #24]
 8007966:	f043 4380 	orreq.w	r3, r3, #1073741824	@ 0x40000000
 800796a:	f043 0304 	orreq.w	r3, r3, #4
 800796e:	61a3      	streq	r3, [r4, #24]
}
 8007970:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8007974:	b004      	add	sp, #16
 8007976:	4770      	bx	lr
    USBx->GCCFG &= ~USB_OTG_GCCFG_NOVBUSSENS;
 8007978:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 800797a:	f423 1300 	bic.w	r3, r3, #2097152	@ 0x200000
 800797e:	63a3      	str	r3, [r4, #56]	@ 0x38
    USBx->GCCFG |= USB_OTG_GCCFG_VBUSBSEN;
 8007980:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 8007982:	f443 2300 	orr.w	r3, r3, #524288	@ 0x80000
 8007986:	e799      	b.n	80078bc <USB_DevInit+0x50>
      (void)USB_SetDevSpeed(USBx, USB_OTG_SPEED_HIGH_IN_FULL);
 8007988:	4619      	mov	r1, r3
 800798a:	e7a3      	b.n	80078d4 <USB_DevInit+0x68>
    (void)USB_SetDevSpeed(USBx, USB_OTG_SPEED_FULL);
 800798c:	2103      	movs	r1, #3
 800798e:	e7a1      	b.n	80078d4 <USB_DevInit+0x68>
    if ((USBx_INEP(i)->DIEPCTL & USB_OTG_DIEPCTL_EPENA) == USB_OTG_DIEPCTL_EPENA)
 8007990:	f8d2 9000 	ldr.w	r9, [r2]
 8007994:	f1b9 0f00 	cmp.w	r9, #0
 8007998:	da0b      	bge.n	80079b2 <USB_DevInit+0x146>
      if (i == 0U)
 800799a:	b93b      	cbnz	r3, 80079ac <USB_DevInit+0x140>
        USBx_INEP(i)->DIEPCTL = USB_OTG_DIEPCTL_SNAK;
 800799c:	f8c2 e000 	str.w	lr, [r2]
    USBx_INEP(i)->DIEPTSIZ = 0U;
 80079a0:	6111      	str	r1, [r2, #16]
  for (i = 0U; i < cfg.dev_endpoints; i++)
 80079a2:	3301      	adds	r3, #1
    USBx_INEP(i)->DIEPINT  = 0xFB7FU;
 80079a4:	f8c2 8008 	str.w	r8, [r2, #8]
  for (i = 0U; i < cfg.dev_endpoints; i++)
 80079a8:	3220      	adds	r2, #32
 80079aa:	e7b0      	b.n	800790e <USB_DevInit+0xa2>
        USBx_INEP(i)->DIEPCTL = USB_OTG_DIEPCTL_EPDIS | USB_OTG_DIEPCTL_SNAK;
 80079ac:	f8c2 c000 	str.w	ip, [r2]
 80079b0:	e7f6      	b.n	80079a0 <USB_DevInit+0x134>
      USBx_INEP(i)->DIEPCTL = 0U;
 80079b2:	6011      	str	r1, [r2, #0]
 80079b4:	e7f4      	b.n	80079a0 <USB_DevInit+0x134>
    if ((USBx_OUTEP(i)->DOEPCTL & USB_OTG_DOEPCTL_EPENA) == USB_OTG_DOEPCTL_EPENA)
 80079b6:	f8d3 9000 	ldr.w	r9, [r3]
 80079ba:	f1b9 0f00 	cmp.w	r9, #0
 80079be:	da0b      	bge.n	80079d8 <USB_DevInit+0x16c>
      if (i == 0U)
 80079c0:	b93a      	cbnz	r2, 80079d2 <USB_DevInit+0x166>
        USBx_OUTEP(i)->DOEPCTL = USB_OTG_DOEPCTL_SNAK;
 80079c2:	f8c3 e000 	str.w	lr, [r3]
    USBx_OUTEP(i)->DOEPTSIZ = 0U;
 80079c6:	6119      	str	r1, [r3, #16]
  for (i = 0U; i < cfg.dev_endpoints; i++)
 80079c8:	3201      	adds	r2, #1
    USBx_OUTEP(i)->DOEPINT  = 0xFB7FU;
 80079ca:	f8c3 8008 	str.w	r8, [r3, #8]
  for (i = 0U; i < cfg.dev_endpoints; i++)
 80079ce:	3320      	adds	r3, #32
 80079d0:	e7a9      	b.n	8007926 <USB_DevInit+0xba>
        USBx_OUTEP(i)->DOEPCTL = USB_OTG_DOEPCTL_EPDIS | USB_OTG_DOEPCTL_SNAK;
 80079d2:	f8c3 c000 	str.w	ip, [r3]
 80079d6:	e7f6      	b.n	80079c6 <USB_DevInit+0x15a>
      USBx_OUTEP(i)->DOEPCTL = 0U;
 80079d8:	6019      	str	r1, [r3, #0]
 80079da:	e7f4      	b.n	80079c6 <USB_DevInit+0x15a>
 80079dc:	803c3800 	.word	0x803c3800

080079e0 <USB_GetDevSpeed>:
  uint32_t DevEnumSpeed = USBx_DEVICE->DSTS & USB_OTG_DSTS_ENUMSPD;
 80079e0:	f8d0 3808 	ldr.w	r3, [r0, #2056]	@ 0x808
  if (DevEnumSpeed == DSTS_ENUMSPD_HS_PHY_30MHZ_OR_60MHZ)
 80079e4:	f013 0006 	ands.w	r0, r3, #6
 80079e8:	d004      	beq.n	80079f4 <USB_GetDevSpeed+0x14>
    speed = 0xFU;
 80079ea:	f013 0f02 	tst.w	r3, #2
 80079ee:	bf14      	ite	ne
 80079f0:	2002      	movne	r0, #2
 80079f2:	200f      	moveq	r0, #15
}
 80079f4:	4770      	bx	lr

080079f6 <USB_ActivateEndpoint>:
{
 80079f6:	b530      	push	{r4, r5, lr}
  uint32_t epnum = (uint32_t)ep->num;
 80079f8:	780c      	ldrb	r4, [r1, #0]
    USBx_DEVICE->DAINTMSK |= USB_OTG_DAINTMSK_IEPM & (uint32_t)(1UL << (ep->num & EP_ADDR_MSK));
 80079fa:	2201      	movs	r2, #1
 80079fc:	f004 050f 	and.w	r5, r4, #15
 8007a00:	40aa      	lsls	r2, r5
  if (ep->is_in == 1U)
 8007a02:	784d      	ldrb	r5, [r1, #1]
 8007a04:	2d01      	cmp	r5, #1
    USBx_DEVICE->DAINTMSK |= USB_OTG_DAINTMSK_IEPM & (uint32_t)(1UL << (ep->num & EP_ADDR_MSK));
 8007a06:	f500 6300 	add.w	r3, r0, #2048	@ 0x800
    if ((USBx_INEP(epnum)->DIEPCTL & USB_OTG_DIEPCTL_USBAEP) == 0U)
 8007a0a:	eb00 1044 	add.w	r0, r0, r4, lsl #5
  if (ep->is_in == 1U)
 8007a0e:	d119      	bne.n	8007a44 <USB_ActivateEndpoint+0x4e>
    USBx_DEVICE->DAINTMSK |= USB_OTG_DAINTMSK_IEPM & (uint32_t)(1UL << (ep->num & EP_ADDR_MSK));
 8007a10:	69dd      	ldr	r5, [r3, #28]
 8007a12:	432a      	orrs	r2, r5
 8007a14:	61da      	str	r2, [r3, #28]
    if ((USBx_INEP(epnum)->DIEPCTL & USB_OTG_DIEPCTL_USBAEP) == 0U)
 8007a16:	f8d0 3900 	ldr.w	r3, [r0, #2304]	@ 0x900
 8007a1a:	041a      	lsls	r2, r3, #16
 8007a1c:	d410      	bmi.n	8007a40 <USB_ActivateEndpoint+0x4a>
      USBx_INEP(epnum)->DIEPCTL |= (ep->maxpacket & USB_OTG_DIEPCTL_MPSIZ) |
 8007a1e:	688a      	ldr	r2, [r1, #8]
 8007a20:	f8d0 5900 	ldr.w	r5, [r0, #2304]	@ 0x900
 8007a24:	f3c2 030a 	ubfx	r3, r2, #0, #11
                                   ((uint32_t)ep->type << 18) | (epnum << 22) |
 8007a28:	790a      	ldrb	r2, [r1, #4]
      USBx_INEP(epnum)->DIEPCTL |= (ep->maxpacket & USB_OTG_DIEPCTL_MPSIZ) |
 8007a2a:	432b      	orrs	r3, r5
 8007a2c:	ea43 4382 	orr.w	r3, r3, r2, lsl #18
 8007a30:	ea43 5384 	orr.w	r3, r3, r4, lsl #22
 8007a34:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8007a38:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 8007a3c:	f8c0 3900 	str.w	r3, [r0, #2304]	@ 0x900
}
 8007a40:	2000      	movs	r0, #0
 8007a42:	bd30      	pop	{r4, r5, pc}
    USBx_DEVICE->DAINTMSK |= USB_OTG_DAINTMSK_OEPM & ((uint32_t)(1UL << (ep->num & EP_ADDR_MSK)) << 16);
 8007a44:	69dc      	ldr	r4, [r3, #28]
 8007a46:	ea44 4202 	orr.w	r2, r4, r2, lsl #16
 8007a4a:	61da      	str	r2, [r3, #28]
    if (((USBx_OUTEP(epnum)->DOEPCTL) & USB_OTG_DOEPCTL_USBAEP) == 0U)
 8007a4c:	f8d0 3b00 	ldr.w	r3, [r0, #2816]	@ 0xb00
 8007a50:	041b      	lsls	r3, r3, #16
 8007a52:	d4f5      	bmi.n	8007a40 <USB_ActivateEndpoint+0x4a>
      USBx_OUTEP(epnum)->DOEPCTL |= (ep->maxpacket & USB_OTG_DOEPCTL_MPSIZ) |
 8007a54:	688b      	ldr	r3, [r1, #8]
 8007a56:	f8d0 2b00 	ldr.w	r2, [r0, #2816]	@ 0xb00
 8007a5a:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8007a5e:	4313      	orrs	r3, r2
                                    ((uint32_t)ep->type << 18) |
 8007a60:	790a      	ldrb	r2, [r1, #4]
      USBx_OUTEP(epnum)->DOEPCTL |= (ep->maxpacket & USB_OTG_DOEPCTL_MPSIZ) |
 8007a62:	ea43 4382 	orr.w	r3, r3, r2, lsl #18
 8007a66:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8007a6a:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 8007a6e:	f8c0 3b00 	str.w	r3, [r0, #2816]	@ 0xb00
 8007a72:	e7e5      	b.n	8007a40 <USB_ActivateEndpoint+0x4a>

08007a74 <USB_DeactivateEndpoint>:
{
 8007a74:	b510      	push	{r4, lr}
  uint32_t epnum = (uint32_t)ep->num;
 8007a76:	780a      	ldrb	r2, [r1, #0]
  if (ep->is_in == 1U)
 8007a78:	7849      	ldrb	r1, [r1, #1]
 8007a7a:	2901      	cmp	r1, #1
    if ((USBx_INEP(epnum)->DIEPCTL & USB_OTG_DIEPCTL_EPENA) == USB_OTG_DIEPCTL_EPENA)
 8007a7c:	eb00 1342 	add.w	r3, r0, r2, lsl #5
 8007a80:	f500 6000 	add.w	r0, r0, #2048	@ 0x800
 8007a84:	f002 020f 	and.w	r2, r2, #15
  if (ep->is_in == 1U)
 8007a88:	d122      	bne.n	8007ad0 <USB_DeactivateEndpoint+0x5c>
    if ((USBx_INEP(epnum)->DIEPCTL & USB_OTG_DIEPCTL_EPENA) == USB_OTG_DIEPCTL_EPENA)
 8007a8a:	f8d3 1900 	ldr.w	r1, [r3, #2304]	@ 0x900
 8007a8e:	2900      	cmp	r1, #0
 8007a90:	da0b      	bge.n	8007aaa <USB_DeactivateEndpoint+0x36>
      USBx_INEP(epnum)->DIEPCTL |= USB_OTG_DIEPCTL_SNAK;
 8007a92:	f8d3 1900 	ldr.w	r1, [r3, #2304]	@ 0x900
 8007a96:	f041 6100 	orr.w	r1, r1, #134217728	@ 0x8000000
 8007a9a:	f8c3 1900 	str.w	r1, [r3, #2304]	@ 0x900
      USBx_INEP(epnum)->DIEPCTL |= USB_OTG_DIEPCTL_EPDIS;
 8007a9e:	f8d3 1900 	ldr.w	r1, [r3, #2304]	@ 0x900
 8007aa2:	f041 4180 	orr.w	r1, r1, #1073741824	@ 0x40000000
 8007aa6:	f8c3 1900 	str.w	r1, [r3, #2304]	@ 0x900
    USBx_DEVICE->DEACHMSK &= ~(USB_OTG_DAINTMSK_IEPM & (uint32_t)(1UL << (ep->num & EP_ADDR_MSK)));
 8007aaa:	6bc4      	ldr	r4, [r0, #60]	@ 0x3c
 8007aac:	2101      	movs	r1, #1
 8007aae:	fa01 f202 	lsl.w	r2, r1, r2
 8007ab2:	ea24 0402 	bic.w	r4, r4, r2
 8007ab6:	63c4      	str	r4, [r0, #60]	@ 0x3c
    USBx_DEVICE->DAINTMSK &= ~(USB_OTG_DAINTMSK_IEPM & (uint32_t)(1UL << (ep->num & EP_ADDR_MSK)));
 8007ab8:	69c1      	ldr	r1, [r0, #28]
 8007aba:	ea21 0202 	bic.w	r2, r1, r2
 8007abe:	61c2      	str	r2, [r0, #28]
    USBx_INEP(epnum)->DIEPCTL &= ~(USB_OTG_DIEPCTL_USBAEP |
 8007ac0:	f8d3 1900 	ldr.w	r1, [r3, #2304]	@ 0x900
 8007ac4:	4a14      	ldr	r2, [pc, #80]	@ (8007b18 <USB_DeactivateEndpoint+0xa4>)
 8007ac6:	400a      	ands	r2, r1
 8007ac8:	f8c3 2900 	str.w	r2, [r3, #2304]	@ 0x900
}
 8007acc:	2000      	movs	r0, #0
 8007ace:	bd10      	pop	{r4, pc}
    if ((USBx_OUTEP(epnum)->DOEPCTL & USB_OTG_DOEPCTL_EPENA) == USB_OTG_DOEPCTL_EPENA)
 8007ad0:	f8d3 1b00 	ldr.w	r1, [r3, #2816]	@ 0xb00
 8007ad4:	2900      	cmp	r1, #0
 8007ad6:	da0b      	bge.n	8007af0 <USB_DeactivateEndpoint+0x7c>
      USBx_OUTEP(epnum)->DOEPCTL |= USB_OTG_DOEPCTL_SNAK;
 8007ad8:	f8d3 1b00 	ldr.w	r1, [r3, #2816]	@ 0xb00
 8007adc:	f041 6100 	orr.w	r1, r1, #134217728	@ 0x8000000
 8007ae0:	f8c3 1b00 	str.w	r1, [r3, #2816]	@ 0xb00
      USBx_OUTEP(epnum)->DOEPCTL |= USB_OTG_DOEPCTL_EPDIS;
 8007ae4:	f8d3 1b00 	ldr.w	r1, [r3, #2816]	@ 0xb00
 8007ae8:	f041 4180 	orr.w	r1, r1, #1073741824	@ 0x40000000
 8007aec:	f8c3 1b00 	str.w	r1, [r3, #2816]	@ 0xb00
    USBx_DEVICE->DEACHMSK &= ~(USB_OTG_DAINTMSK_OEPM & ((uint32_t)(1UL << (ep->num & EP_ADDR_MSK)) << 16));
 8007af0:	6bc4      	ldr	r4, [r0, #60]	@ 0x3c
 8007af2:	f44f 3180 	mov.w	r1, #65536	@ 0x10000
 8007af6:	fa01 f202 	lsl.w	r2, r1, r2
 8007afa:	ea24 0402 	bic.w	r4, r4, r2
 8007afe:	63c4      	str	r4, [r0, #60]	@ 0x3c
    USBx_DEVICE->DAINTMSK &= ~(USB_OTG_DAINTMSK_OEPM & ((uint32_t)(1UL << (ep->num & EP_ADDR_MSK)) << 16));
 8007b00:	69c1      	ldr	r1, [r0, #28]
 8007b02:	ea21 0202 	bic.w	r2, r1, r2
 8007b06:	61c2      	str	r2, [r0, #28]
    USBx_OUTEP(epnum)->DOEPCTL &= ~(USB_OTG_DOEPCTL_USBAEP |
 8007b08:	f8d3 1b00 	ldr.w	r1, [r3, #2816]	@ 0xb00
 8007b0c:	4a03      	ldr	r2, [pc, #12]	@ (8007b1c <USB_DeactivateEndpoint+0xa8>)
 8007b0e:	400a      	ands	r2, r1
 8007b10:	f8c3 2b00 	str.w	r2, [r3, #2816]	@ 0xb00
 8007b14:	e7da      	b.n	8007acc <USB_DeactivateEndpoint+0x58>
 8007b16:	bf00      	nop
 8007b18:	ec337800 	.word	0xec337800
 8007b1c:	eff37800 	.word	0xeff37800

08007b20 <USB_EPStopXfer>:
{
 8007b20:	b082      	sub	sp, #8
  __IO uint32_t count = 0U;
 8007b22:	2300      	movs	r3, #0
  if (ep->is_in == 1U)
 8007b24:	784a      	ldrb	r2, [r1, #1]
  __IO uint32_t count = 0U;
 8007b26:	9301      	str	r3, [sp, #4]
    if (((USBx_INEP(ep->num)->DIEPCTL) & USB_OTG_DIEPCTL_EPENA) == USB_OTG_DIEPCTL_EPENA)
 8007b28:	780b      	ldrb	r3, [r1, #0]
  if (ep->is_in == 1U)
 8007b2a:	2a01      	cmp	r2, #1
    if (((USBx_INEP(ep->num)->DIEPCTL) & USB_OTG_DIEPCTL_EPENA) == USB_OTG_DIEPCTL_EPENA)
 8007b2c:	ea4f 1343 	mov.w	r3, r3, lsl #5
  if (ep->is_in == 1U)
 8007b30:	d11e      	bne.n	8007b70 <USB_EPStopXfer+0x50>
    if (((USBx_INEP(ep->num)->DIEPCTL) & USB_OTG_DIEPCTL_EPENA) == USB_OTG_DIEPCTL_EPENA)
 8007b32:	f500 6010 	add.w	r0, r0, #2304	@ 0x900
 8007b36:	18c1      	adds	r1, r0, r3
 8007b38:	58c2      	ldr	r2, [r0, r3]
 8007b3a:	2a00      	cmp	r2, #0
 8007b3c:	db02      	blt.n	8007b44 <USB_EPStopXfer+0x24>
  HAL_StatusTypeDef ret = HAL_OK;
 8007b3e:	2000      	movs	r0, #0
}
 8007b40:	b002      	add	sp, #8
 8007b42:	4770      	bx	lr
      USBx_INEP(ep->num)->DIEPCTL |= (USB_OTG_DIEPCTL_SNAK);
 8007b44:	58c2      	ldr	r2, [r0, r3]
 8007b46:	f042 6200 	orr.w	r2, r2, #134217728	@ 0x8000000
 8007b4a:	50c2      	str	r2, [r0, r3]
      USBx_INEP(ep->num)->DIEPCTL |= (USB_OTG_DIEPCTL_EPDIS);
 8007b4c:	58c2      	ldr	r2, [r0, r3]
 8007b4e:	f042 4280 	orr.w	r2, r2, #1073741824	@ 0x40000000
 8007b52:	50c2      	str	r2, [r0, r3]
        if (count > 10000U)
 8007b54:	f242 7210 	movw	r2, #10000	@ 0x2710
        count++;
 8007b58:	9b01      	ldr	r3, [sp, #4]
 8007b5a:	3301      	adds	r3, #1
 8007b5c:	9301      	str	r3, [sp, #4]
        if (count > 10000U)
 8007b5e:	9b01      	ldr	r3, [sp, #4]
 8007b60:	4293      	cmp	r3, r2
 8007b62:	d901      	bls.n	8007b68 <USB_EPStopXfer+0x48>
          ret = HAL_ERROR;
 8007b64:	2001      	movs	r0, #1
 8007b66:	e7eb      	b.n	8007b40 <USB_EPStopXfer+0x20>
      } while (((USBx_INEP(ep->num)->DIEPCTL) & USB_OTG_DIEPCTL_EPENA) ==  USB_OTG_DIEPCTL_EPENA);
 8007b68:	680b      	ldr	r3, [r1, #0]
 8007b6a:	2b00      	cmp	r3, #0
 8007b6c:	dbf4      	blt.n	8007b58 <USB_EPStopXfer+0x38>
 8007b6e:	e7e6      	b.n	8007b3e <USB_EPStopXfer+0x1e>
    if (((USBx_OUTEP(ep->num)->DOEPCTL) & USB_OTG_DOEPCTL_EPENA) == USB_OTG_DOEPCTL_EPENA)
 8007b70:	f500 6030 	add.w	r0, r0, #2816	@ 0xb00
 8007b74:	18c1      	adds	r1, r0, r3
 8007b76:	58c2      	ldr	r2, [r0, r3]
 8007b78:	2a00      	cmp	r2, #0
 8007b7a:	dae0      	bge.n	8007b3e <USB_EPStopXfer+0x1e>
      USBx_OUTEP(ep->num)->DOEPCTL |= (USB_OTG_DOEPCTL_SNAK);
 8007b7c:	58c2      	ldr	r2, [r0, r3]
 8007b7e:	f042 6200 	orr.w	r2, r2, #134217728	@ 0x8000000
 8007b82:	50c2      	str	r2, [r0, r3]
      USBx_OUTEP(ep->num)->DOEPCTL |= (USB_OTG_DOEPCTL_EPDIS);
 8007b84:	58c2      	ldr	r2, [r0, r3]
 8007b86:	f042 4280 	orr.w	r2, r2, #1073741824	@ 0x40000000
 8007b8a:	50c2      	str	r2, [r0, r3]
        if (count > 10000U)
 8007b8c:	f242 7210 	movw	r2, #10000	@ 0x2710
        count++;
 8007b90:	9b01      	ldr	r3, [sp, #4]
 8007b92:	3301      	adds	r3, #1
 8007b94:	9301      	str	r3, [sp, #4]
        if (count > 10000U)
 8007b96:	9b01      	ldr	r3, [sp, #4]
 8007b98:	4293      	cmp	r3, r2
 8007b9a:	d8e3      	bhi.n	8007b64 <USB_EPStopXfer+0x44>
      } while (((USBx_OUTEP(ep->num)->DOEPCTL) & USB_OTG_DOEPCTL_EPENA) ==  USB_OTG_DOEPCTL_EPENA);
 8007b9c:	680b      	ldr	r3, [r1, #0]
 8007b9e:	2b00      	cmp	r3, #0
 8007ba0:	dbf6      	blt.n	8007b90 <USB_EPStopXfer+0x70>
 8007ba2:	e7cc      	b.n	8007b3e <USB_EPStopXfer+0x1e>

08007ba4 <USB_WritePacket>:
{
 8007ba4:	b510      	push	{r4, lr}
 8007ba6:	f89d 4008 	ldrb.w	r4, [sp, #8]
  if (dma == 0U)
 8007baa:	b944      	cbnz	r4, 8007bbe <USB_WritePacket+0x1a>
    count32b = ((uint32_t)len + 3U) / 4U;
 8007bac:	3303      	adds	r3, #3
      USBx_DFIFO((uint32_t)ch_ep_num) = __UNALIGNED_UINT32_READ(pSrc);
 8007bae:	3201      	adds	r2, #1
    count32b = ((uint32_t)len + 3U) / 4U;
 8007bb0:	089b      	lsrs	r3, r3, #2
      USBx_DFIFO((uint32_t)ch_ep_num) = __UNALIGNED_UINT32_READ(pSrc);
 8007bb2:	eb00 3002 	add.w	r0, r0, r2, lsl #12
 8007bb6:	eb01 0383 	add.w	r3, r1, r3, lsl #2
    for (i = 0U; i < count32b; i++)
 8007bba:	4299      	cmp	r1, r3
 8007bbc:	d101      	bne.n	8007bc2 <USB_WritePacket+0x1e>
}
 8007bbe:	2000      	movs	r0, #0
 8007bc0:	bd10      	pop	{r4, pc}
      USBx_DFIFO((uint32_t)ch_ep_num) = __UNALIGNED_UINT32_READ(pSrc);
 8007bc2:	f851 2b04 	ldr.w	r2, [r1], #4
 8007bc6:	6002      	str	r2, [r0, #0]
    for (i = 0U; i < count32b; i++)
 8007bc8:	e7f7      	b.n	8007bba <USB_WritePacket+0x16>
	...

08007bcc <USB_EPStartXfer>:
{
 8007bcc:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
  if (ep->is_in == 1U)
 8007bd0:	784b      	ldrb	r3, [r1, #1]
    if (ep->xfer_len == 0U)
 8007bd2:	690c      	ldr	r4, [r1, #16]
        if (ep->type == EP_TYPE_ISOC)
 8007bd4:	790f      	ldrb	r7, [r1, #4]
 8007bd6:	f8df e1f0 	ldr.w	lr, [pc, #496]	@ 8007dc8 <USB_EPStartXfer+0x1fc>
 8007bda:	f8df 81f0 	ldr.w	r8, [pc, #496]	@ 8007dcc <USB_EPStartXfer+0x200>
{
 8007bde:	4616      	mov	r6, r2
  uint32_t epnum = (uint32_t)ep->num;
 8007be0:	780a      	ldrb	r2, [r1, #0]
  if (ep->is_in == 1U)
 8007be2:	2b01      	cmp	r3, #1
      USBx_INEP(epnum)->DIEPTSIZ &= ~(USB_OTG_DIEPTSIZ_PKTCNT);
 8007be4:	eb00 1542 	add.w	r5, r0, r2, lsl #5
  if (ep->is_in == 1U)
 8007be8:	f040 8097 	bne.w	8007d1a <USB_EPStartXfer+0x14e>
      USBx_INEP(epnum)->DIEPTSIZ &= ~(USB_OTG_DIEPTSIZ_PKTCNT);
 8007bec:	f505 6c10 	add.w	ip, r5, #2304	@ 0x900
 8007bf0:	f8dc 3010 	ldr.w	r3, [ip, #16]
    if (ep->xfer_len == 0U)
 8007bf4:	bb74      	cbnz	r4, 8007c54 <USB_EPStartXfer+0x88>
      USBx_INEP(epnum)->DIEPTSIZ &= ~(USB_OTG_DIEPTSIZ_PKTCNT);
 8007bf6:	ea03 030e 	and.w	r3, r3, lr
 8007bfa:	f8cc 3010 	str.w	r3, [ip, #16]
      USBx_INEP(epnum)->DIEPTSIZ |= (USB_OTG_DIEPTSIZ_PKTCNT & (1U << 19));
 8007bfe:	f8dc 3010 	ldr.w	r3, [ip, #16]
 8007c02:	f443 2300 	orr.w	r3, r3, #524288	@ 0x80000
 8007c06:	f8cc 3010 	str.w	r3, [ip, #16]
      USBx_INEP(epnum)->DIEPTSIZ &= ~(USB_OTG_DIEPTSIZ_XFRSIZ);
 8007c0a:	f8dc 3010 	ldr.w	r3, [ip, #16]
 8007c0e:	ea03 0308 	and.w	r3, r3, r8
    if (dma == 1U)
 8007c12:	2e01      	cmp	r6, #1
      USBx_INEP(epnum)->DIEPTSIZ |= (USB_OTG_DIEPTSIZ_XFRSIZ & ep->xfer_len);
 8007c14:	f8cc 3010 	str.w	r3, [ip, #16]
    if (dma == 1U)
 8007c18:	d157      	bne.n	8007cca <USB_EPStartXfer+0xfe>
      if ((uint32_t)ep->dma_addr != 0U)
 8007c1a:	69cb      	ldr	r3, [r1, #28]
 8007c1c:	b10b      	cbz	r3, 8007c22 <USB_EPStartXfer+0x56>
        USBx_INEP(epnum)->DIEPDMA = (uint32_t)(ep->dma_addr);
 8007c1e:	f8cc 3014 	str.w	r3, [ip, #20]
      if (ep->type == EP_TYPE_ISOC)
 8007c22:	2f01      	cmp	r7, #1
 8007c24:	d10c      	bne.n	8007c40 <USB_EPStartXfer+0x74>
        if ((USBx_DEVICE->DSTS & (1U << 8)) == 0U)
 8007c26:	f8d0 3808 	ldr.w	r3, [r0, #2056]	@ 0x808
 8007c2a:	f413 7f80 	tst.w	r3, #256	@ 0x100
          USBx_INEP(epnum)->DIEPCTL |= USB_OTG_DIEPCTL_SODDFRM;
 8007c2e:	f8d5 3900 	ldr.w	r3, [r5, #2304]	@ 0x900
 8007c32:	bf0c      	ite	eq
 8007c34:	f043 5300 	orreq.w	r3, r3, #536870912	@ 0x20000000
          USBx_INEP(epnum)->DIEPCTL |= USB_OTG_DIEPCTL_SD0PID_SEVNFRM;
 8007c38:	f043 5380 	orrne.w	r3, r3, #268435456	@ 0x10000000
 8007c3c:	f8c5 3900 	str.w	r3, [r5, #2304]	@ 0x900
      USBx_INEP(epnum)->DIEPCTL |= (USB_OTG_DIEPCTL_CNAK | USB_OTG_DIEPCTL_EPENA);
 8007c40:	f8d5 3900 	ldr.w	r3, [r5, #2304]	@ 0x900
 8007c44:	f043 4304 	orr.w	r3, r3, #2214592512	@ 0x84000000
 8007c48:	f8c5 3900 	str.w	r3, [r5, #2304]	@ 0x900
}
 8007c4c:	2000      	movs	r0, #0
 8007c4e:	b002      	add	sp, #8
 8007c50:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      USBx_INEP(epnum)->DIEPTSIZ &= ~(USB_OTG_DIEPTSIZ_XFRSIZ);
 8007c54:	ea03 0308 	and.w	r3, r3, r8
 8007c58:	f8cc 3010 	str.w	r3, [ip, #16]
      USBx_INEP(epnum)->DIEPTSIZ &= ~(USB_OTG_DIEPTSIZ_PKTCNT);
 8007c5c:	f8dc 3010 	ldr.w	r3, [ip, #16]
 8007c60:	ea03 030e 	and.w	r3, r3, lr
 8007c64:	f8cc 3010 	str.w	r3, [ip, #16]
        if (ep->xfer_len > ep->maxpacket)
 8007c68:	688b      	ldr	r3, [r1, #8]
      if (epnum == 0U)
 8007c6a:	b97a      	cbnz	r2, 8007c8c <USB_EPStartXfer+0xc0>
        if (ep->xfer_len > ep->maxpacket)
 8007c6c:	42a3      	cmp	r3, r4
          ep->xfer_len = ep->maxpacket;
 8007c6e:	bf38      	it	cc
 8007c70:	610b      	strcc	r3, [r1, #16]
        USBx_INEP(epnum)->DIEPTSIZ |= (USB_OTG_DIEPTSIZ_PKTCNT & (1U << 19));
 8007c72:	f8dc 3010 	ldr.w	r3, [ip, #16]
 8007c76:	f443 2300 	orr.w	r3, r3, #524288	@ 0x80000
          USBx_INEP(epnum)->DIEPTSIZ |= (USB_OTG_DIEPTSIZ_MULCNT & (pktcnt << 29));
 8007c7a:	f8cc 3010 	str.w	r3, [ip, #16]
      USBx_INEP(epnum)->DIEPTSIZ |= (USB_OTG_DIEPTSIZ_XFRSIZ & ep->xfer_len);
 8007c7e:	690b      	ldr	r3, [r1, #16]
 8007c80:	f8dc 4010 	ldr.w	r4, [ip, #16]
 8007c84:	f3c3 0312 	ubfx	r3, r3, #0, #19
 8007c88:	4323      	orrs	r3, r4
 8007c8a:	e7c2      	b.n	8007c12 <USB_EPStartXfer+0x46>
        pktcnt = (uint16_t)((ep->xfer_len + ep->maxpacket - 1U) / ep->maxpacket);
 8007c8c:	441c      	add	r4, r3
 8007c8e:	3c01      	subs	r4, #1
 8007c90:	fbb4 f4f3 	udiv	r4, r4, r3
        USBx_INEP(epnum)->DIEPTSIZ |= (USB_OTG_DIEPTSIZ_PKTCNT & (pktcnt << 19));
 8007c94:	4b4b      	ldr	r3, [pc, #300]	@ (8007dc4 <USB_EPStartXfer+0x1f8>)
 8007c96:	f8dc e010 	ldr.w	lr, [ip, #16]
 8007c9a:	fa1f f884 	uxth.w	r8, r4
 8007c9e:	ea03 44c4 	and.w	r4, r3, r4, lsl #19
 8007ca2:	ea44 040e 	orr.w	r4, r4, lr
        if (ep->type == EP_TYPE_ISOC)
 8007ca6:	2f01      	cmp	r7, #1
        USBx_INEP(epnum)->DIEPTSIZ |= (USB_OTG_DIEPTSIZ_PKTCNT & (pktcnt << 19));
 8007ca8:	f8cc 4010 	str.w	r4, [ip, #16]
        if (ep->type == EP_TYPE_ISOC)
 8007cac:	d1e7      	bne.n	8007c7e <USB_EPStartXfer+0xb2>
          USBx_INEP(epnum)->DIEPTSIZ &= ~(USB_OTG_DIEPTSIZ_MULCNT);
 8007cae:	f8dc 3010 	ldr.w	r3, [ip, #16]
 8007cb2:	f023 43c0 	bic.w	r3, r3, #1610612736	@ 0x60000000
 8007cb6:	f8cc 3010 	str.w	r3, [ip, #16]
          USBx_INEP(epnum)->DIEPTSIZ |= (USB_OTG_DIEPTSIZ_MULCNT & (pktcnt << 29));
 8007cba:	f8dc 4010 	ldr.w	r4, [ip, #16]
 8007cbe:	ea4f 7348 	mov.w	r3, r8, lsl #29
 8007cc2:	f003 43c0 	and.w	r3, r3, #1610612736	@ 0x60000000
 8007cc6:	4323      	orrs	r3, r4
 8007cc8:	e7d7      	b.n	8007c7a <USB_EPStartXfer+0xae>
      USBx_INEP(epnum)->DIEPCTL |= (USB_OTG_DIEPCTL_CNAK | USB_OTG_DIEPCTL_EPENA);
 8007cca:	f8d5 3900 	ldr.w	r3, [r5, #2304]	@ 0x900
      if (ep->type != EP_TYPE_ISOC)
 8007cce:	2f01      	cmp	r7, #1
      USBx_INEP(epnum)->DIEPCTL |= (USB_OTG_DIEPCTL_CNAK | USB_OTG_DIEPCTL_EPENA);
 8007cd0:	f043 4304 	orr.w	r3, r3, #2214592512	@ 0x84000000
 8007cd4:	f8c5 3900 	str.w	r3, [r5, #2304]	@ 0x900
        if (ep->xfer_len > 0U)
 8007cd8:	690b      	ldr	r3, [r1, #16]
      if (ep->type != EP_TYPE_ISOC)
 8007cda:	d00b      	beq.n	8007cf4 <USB_EPStartXfer+0x128>
        if (ep->xfer_len > 0U)
 8007cdc:	2b00      	cmp	r3, #0
 8007cde:	d0b5      	beq.n	8007c4c <USB_EPStartXfer+0x80>
          USBx_DEVICE->DIEPEMPMSK |= 1UL << (ep->num & EP_ADDR_MSK);
 8007ce0:	f8d0 1834 	ldr.w	r1, [r0, #2100]	@ 0x834
 8007ce4:	f002 020f 	and.w	r2, r2, #15
 8007ce8:	2301      	movs	r3, #1
 8007cea:	4093      	lsls	r3, r2
 8007cec:	430b      	orrs	r3, r1
 8007cee:	f8c0 3834 	str.w	r3, [r0, #2100]	@ 0x834
 8007cf2:	e7ab      	b.n	8007c4c <USB_EPStartXfer+0x80>
        if ((USBx_DEVICE->DSTS & (1U << 8)) == 0U)
 8007cf4:	f8d0 4808 	ldr.w	r4, [r0, #2056]	@ 0x808
 8007cf8:	f414 7f80 	tst.w	r4, #256	@ 0x100
          USBx_INEP(epnum)->DIEPCTL |= USB_OTG_DIEPCTL_SODDFRM;
 8007cfc:	f8d5 4900 	ldr.w	r4, [r5, #2304]	@ 0x900
 8007d00:	bf0c      	ite	eq
 8007d02:	f044 5400 	orreq.w	r4, r4, #536870912	@ 0x20000000
          USBx_INEP(epnum)->DIEPCTL |= USB_OTG_DIEPCTL_SD0PID_SEVNFRM;
 8007d06:	f044 5480 	orrne.w	r4, r4, #268435456	@ 0x10000000
 8007d0a:	f8c5 4900 	str.w	r4, [r5, #2304]	@ 0x900
        (void)USB_WritePacket(USBx, ep->xfer_buff, ep->num, (uint16_t)ep->xfer_len, dma);
 8007d0e:	9600      	str	r6, [sp, #0]
 8007d10:	68c9      	ldr	r1, [r1, #12]
 8007d12:	b29b      	uxth	r3, r3
 8007d14:	f7ff ff46 	bl	8007ba4 <USB_WritePacket>
 8007d18:	e798      	b.n	8007c4c <USB_EPStartXfer+0x80>
    USBx_OUTEP(epnum)->DOEPTSIZ &= ~(USB_OTG_DOEPTSIZ_XFRSIZ);
 8007d1a:	f8d5 3b10 	ldr.w	r3, [r5, #2832]	@ 0xb10
 8007d1e:	ea03 0308 	and.w	r3, r3, r8
 8007d22:	f8c5 3b10 	str.w	r3, [r5, #2832]	@ 0xb10
    USBx_OUTEP(epnum)->DOEPTSIZ &= ~(USB_OTG_DOEPTSIZ_PKTCNT);
 8007d26:	f8d5 3b10 	ldr.w	r3, [r5, #2832]	@ 0xb10
 8007d2a:	ea03 030e 	and.w	r3, r3, lr
    USBx_OUTEP(epnum)->DOEPTSIZ &= ~(USB_OTG_DOEPTSIZ_XFRSIZ);
 8007d2e:	f505 6c30 	add.w	ip, r5, #2816	@ 0xb00
    USBx_OUTEP(epnum)->DOEPTSIZ &= ~(USB_OTG_DOEPTSIZ_PKTCNT);
 8007d32:	f8cc 3010 	str.w	r3, [ip, #16]
        ep->xfer_len = ep->maxpacket;
 8007d36:	688b      	ldr	r3, [r1, #8]
    if (epnum == 0U)
 8007d38:	bb5a      	cbnz	r2, 8007d92 <USB_EPStartXfer+0x1c6>
      if (ep->xfer_len > 0U)
 8007d3a:	b104      	cbz	r4, 8007d3e <USB_EPStartXfer+0x172>
        ep->xfer_len = ep->maxpacket;
 8007d3c:	610b      	str	r3, [r1, #16]
      ep->xfer_size = ep->maxpacket;
 8007d3e:	620b      	str	r3, [r1, #32]
        USBx_OUTEP(epnum)->DOEPTSIZ |= (USB_OTG_DOEPTSIZ_XFRSIZ & ep->maxpacket);
 8007d40:	f8dc 2010 	ldr.w	r2, [ip, #16]
 8007d44:	f3c3 0312 	ubfx	r3, r3, #0, #19
 8007d48:	4313      	orrs	r3, r2
 8007d4a:	f8cc 3010 	str.w	r3, [ip, #16]
        USBx_OUTEP(epnum)->DOEPTSIZ |= (USB_OTG_DOEPTSIZ_PKTCNT & (1U << 19));
 8007d4e:	f8dc 3010 	ldr.w	r3, [ip, #16]
 8007d52:	f443 2300 	orr.w	r3, r3, #524288	@ 0x80000
    if (dma == 1U)
 8007d56:	2e01      	cmp	r6, #1
        USBx_OUTEP(epnum)->DOEPTSIZ |= USB_OTG_DOEPTSIZ_XFRSIZ & ep->xfer_size;
 8007d58:	f8cc 3010 	str.w	r3, [ip, #16]
    if (dma == 1U)
 8007d5c:	d103      	bne.n	8007d66 <USB_EPStartXfer+0x19a>
      if ((uint32_t)ep->xfer_buff != 0U)
 8007d5e:	68cb      	ldr	r3, [r1, #12]
 8007d60:	b10b      	cbz	r3, 8007d66 <USB_EPStartXfer+0x19a>
        USBx_OUTEP(epnum)->DOEPDMA = (uint32_t)(ep->xfer_buff);
 8007d62:	f8cc 3014 	str.w	r3, [ip, #20]
    if (ep->type == EP_TYPE_ISOC)
 8007d66:	2f01      	cmp	r7, #1
 8007d68:	d10c      	bne.n	8007d84 <USB_EPStartXfer+0x1b8>
      if ((USBx_DEVICE->DSTS & (1U << 8)) == 0U)
 8007d6a:	f8d0 3808 	ldr.w	r3, [r0, #2056]	@ 0x808
 8007d6e:	f413 7f80 	tst.w	r3, #256	@ 0x100
        USBx_OUTEP(epnum)->DOEPCTL |= USB_OTG_DOEPCTL_SODDFRM;
 8007d72:	f8d5 3b00 	ldr.w	r3, [r5, #2816]	@ 0xb00
 8007d76:	bf0c      	ite	eq
 8007d78:	f043 5300 	orreq.w	r3, r3, #536870912	@ 0x20000000
        USBx_OUTEP(epnum)->DOEPCTL |= USB_OTG_DOEPCTL_SD0PID_SEVNFRM;
 8007d7c:	f043 5380 	orrne.w	r3, r3, #268435456	@ 0x10000000
 8007d80:	f8c5 3b00 	str.w	r3, [r5, #2816]	@ 0xb00
    USBx_OUTEP(epnum)->DOEPCTL |= (USB_OTG_DOEPCTL_CNAK | USB_OTG_DOEPCTL_EPENA);
 8007d84:	f8d5 3b00 	ldr.w	r3, [r5, #2816]	@ 0xb00
 8007d88:	f043 4304 	orr.w	r3, r3, #2214592512	@ 0x84000000
 8007d8c:	f8c5 3b00 	str.w	r3, [r5, #2816]	@ 0xb00
 8007d90:	e75c      	b.n	8007c4c <USB_EPStartXfer+0x80>
      if (ep->xfer_len == 0U)
 8007d92:	2c00      	cmp	r4, #0
 8007d94:	d0d4      	beq.n	8007d40 <USB_EPStartXfer+0x174>
        pktcnt = (uint16_t)((ep->xfer_len + ep->maxpacket - 1U) / ep->maxpacket);
 8007d96:	441c      	add	r4, r3
        USBx_OUTEP(epnum)->DOEPTSIZ |= USB_OTG_DOEPTSIZ_PKTCNT & ((uint32_t)pktcnt << 19);
 8007d98:	4a0a      	ldr	r2, [pc, #40]	@ (8007dc4 <USB_EPStartXfer+0x1f8>)
 8007d9a:	f8dc e010 	ldr.w	lr, [ip, #16]
        pktcnt = (uint16_t)((ep->xfer_len + ep->maxpacket - 1U) / ep->maxpacket);
 8007d9e:	3c01      	subs	r4, #1
 8007da0:	fbb4 f4f3 	udiv	r4, r4, r3
 8007da4:	b2a4      	uxth	r4, r4
        USBx_OUTEP(epnum)->DOEPTSIZ |= USB_OTG_DOEPTSIZ_PKTCNT & ((uint32_t)pktcnt << 19);
 8007da6:	ea02 42c4 	and.w	r2, r2, r4, lsl #19
        ep->xfer_size = ep->maxpacket * pktcnt;
 8007daa:	4363      	muls	r3, r4
        USBx_OUTEP(epnum)->DOEPTSIZ |= USB_OTG_DOEPTSIZ_PKTCNT & ((uint32_t)pktcnt << 19);
 8007dac:	ea42 020e 	orr.w	r2, r2, lr
        ep->xfer_size = ep->maxpacket * pktcnt;
 8007db0:	620b      	str	r3, [r1, #32]
        USBx_OUTEP(epnum)->DOEPTSIZ |= USB_OTG_DOEPTSIZ_PKTCNT & ((uint32_t)pktcnt << 19);
 8007db2:	f8cc 2010 	str.w	r2, [ip, #16]
        USBx_OUTEP(epnum)->DOEPTSIZ |= USB_OTG_DOEPTSIZ_XFRSIZ & ep->xfer_size;
 8007db6:	f8dc 2010 	ldr.w	r2, [ip, #16]
 8007dba:	f3c3 0312 	ubfx	r3, r3, #0, #19
 8007dbe:	4313      	orrs	r3, r2
 8007dc0:	e7c9      	b.n	8007d56 <USB_EPStartXfer+0x18a>
 8007dc2:	bf00      	nop
 8007dc4:	1ff80000 	.word	0x1ff80000
 8007dc8:	e007ffff 	.word	0xe007ffff
 8007dcc:	fff80000 	.word	0xfff80000

08007dd0 <USB_ReadPacket>:
{
 8007dd0:	4603      	mov	r3, r0
 8007dd2:	b570      	push	{r4, r5, r6, lr}
  for (i = 0U; i < count32b; i++)
 8007dd4:	2000      	movs	r0, #0
  uint32_t count32b = (uint32_t)len >> 2U;
 8007dd6:	0894      	lsrs	r4, r2, #2
    __UNALIGNED_UINT32_WRITE(pDest, USBx_DFIFO(0U));
 8007dd8:	f503 5580 	add.w	r5, r3, #4096	@ 0x1000
  uint16_t remaining_bytes = len % 4U;
 8007ddc:	f002 0203 	and.w	r2, r2, #3
  for (i = 0U; i < count32b; i++)
 8007de0:	42a0      	cmp	r0, r4
 8007de2:	d310      	bcc.n	8007e06 <USB_ReadPacket+0x36>
 8007de4:	eb01 0084 	add.w	r0, r1, r4, lsl #2
  if (remaining_bytes != 0U)
 8007de8:	b162      	cbz	r2, 8007e04 <USB_ReadPacket+0x34>
    __UNALIGNED_UINT32_WRITE(&pData, USBx_DFIFO(0U));
 8007dea:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 8007dee:	681c      	ldr	r4, [r3, #0]
    i = 0U;
 8007df0:	2300      	movs	r3, #0
      *(uint8_t *)pDest = (uint8_t)(pData >> (8U * (uint8_t)(i)));
 8007df2:	00d9      	lsls	r1, r3, #3
 8007df4:	fa24 f101 	lsr.w	r1, r4, r1
 8007df8:	54c1      	strb	r1, [r0, r3]
      i++;
 8007dfa:	3301      	adds	r3, #1
    } while (remaining_bytes != 0U);
 8007dfc:	b299      	uxth	r1, r3
 8007dfe:	428a      	cmp	r2, r1
 8007e00:	d1f7      	bne.n	8007df2 <USB_ReadPacket+0x22>
 8007e02:	4410      	add	r0, r2
}
 8007e04:	bd70      	pop	{r4, r5, r6, pc}
    __UNALIGNED_UINT32_WRITE(pDest, USBx_DFIFO(0U));
 8007e06:	682e      	ldr	r6, [r5, #0]
 8007e08:	f841 6020 	str.w	r6, [r1, r0, lsl #2]
  for (i = 0U; i < count32b; i++)
 8007e0c:	3001      	adds	r0, #1
 8007e0e:	e7e7      	b.n	8007de0 <USB_ReadPacket+0x10>

08007e10 <USB_EPSetStall>:
  if (ep->is_in == 1U)
 8007e10:	784a      	ldrb	r2, [r1, #1]
  uint32_t epnum = (uint32_t)ep->num;
 8007e12:	780b      	ldrb	r3, [r1, #0]
  if (ep->is_in == 1U)
 8007e14:	2a01      	cmp	r2, #1
    if (((USBx_INEP(epnum)->DIEPCTL & USB_OTG_DIEPCTL_EPENA) == 0U) && (epnum != 0U))
 8007e16:	eb00 1043 	add.w	r0, r0, r3, lsl #5
  if (ep->is_in == 1U)
 8007e1a:	d112      	bne.n	8007e42 <USB_EPSetStall+0x32>
    if (((USBx_INEP(epnum)->DIEPCTL & USB_OTG_DIEPCTL_EPENA) == 0U) && (epnum != 0U))
 8007e1c:	f8d0 2900 	ldr.w	r2, [r0, #2304]	@ 0x900
 8007e20:	2a00      	cmp	r2, #0
 8007e22:	db06      	blt.n	8007e32 <USB_EPSetStall+0x22>
 8007e24:	b12b      	cbz	r3, 8007e32 <USB_EPSetStall+0x22>
      USBx_INEP(epnum)->DIEPCTL &= ~(USB_OTG_DIEPCTL_EPDIS);
 8007e26:	f8d0 3900 	ldr.w	r3, [r0, #2304]	@ 0x900
 8007e2a:	f023 4380 	bic.w	r3, r3, #1073741824	@ 0x40000000
 8007e2e:	f8c0 3900 	str.w	r3, [r0, #2304]	@ 0x900
    USBx_INEP(epnum)->DIEPCTL |= USB_OTG_DIEPCTL_STALL;
 8007e32:	f8d0 3900 	ldr.w	r3, [r0, #2304]	@ 0x900
 8007e36:	f443 1300 	orr.w	r3, r3, #2097152	@ 0x200000
 8007e3a:	f8c0 3900 	str.w	r3, [r0, #2304]	@ 0x900
}
 8007e3e:	2000      	movs	r0, #0
 8007e40:	4770      	bx	lr
    if (((USBx_OUTEP(epnum)->DOEPCTL & USB_OTG_DOEPCTL_EPENA) == 0U) && (epnum != 0U))
 8007e42:	f8d0 2b00 	ldr.w	r2, [r0, #2816]	@ 0xb00
 8007e46:	2a00      	cmp	r2, #0
 8007e48:	db06      	blt.n	8007e58 <USB_EPSetStall+0x48>
 8007e4a:	b12b      	cbz	r3, 8007e58 <USB_EPSetStall+0x48>
      USBx_OUTEP(epnum)->DOEPCTL &= ~(USB_OTG_DOEPCTL_EPDIS);
 8007e4c:	f8d0 3b00 	ldr.w	r3, [r0, #2816]	@ 0xb00
 8007e50:	f023 4380 	bic.w	r3, r3, #1073741824	@ 0x40000000
 8007e54:	f8c0 3b00 	str.w	r3, [r0, #2816]	@ 0xb00
    USBx_OUTEP(epnum)->DOEPCTL |= USB_OTG_DOEPCTL_STALL;
 8007e58:	f8d0 3b00 	ldr.w	r3, [r0, #2816]	@ 0xb00
 8007e5c:	f443 1300 	orr.w	r3, r3, #2097152	@ 0x200000
 8007e60:	f8c0 3b00 	str.w	r3, [r0, #2816]	@ 0xb00
 8007e64:	e7eb      	b.n	8007e3e <USB_EPSetStall+0x2e>

08007e66 <USB_EPClearStall>:
    USBx_INEP(epnum)->DIEPCTL &= ~USB_OTG_DIEPCTL_STALL;
 8007e66:	780b      	ldrb	r3, [r1, #0]
  if (ep->is_in == 1U)
 8007e68:	784a      	ldrb	r2, [r1, #1]
    USBx_INEP(epnum)->DIEPCTL &= ~USB_OTG_DIEPCTL_STALL;
 8007e6a:	eb00 1043 	add.w	r0, r0, r3, lsl #5
    if ((ep->type == EP_TYPE_INTR) || (ep->type == EP_TYPE_BULK))
 8007e6e:	790b      	ldrb	r3, [r1, #4]
  if (ep->is_in == 1U)
 8007e70:	2a01      	cmp	r2, #1
    if ((ep->type == EP_TYPE_INTR) || (ep->type == EP_TYPE_BULK))
 8007e72:	f1a3 0302 	sub.w	r3, r3, #2
 8007e76:	b2db      	uxtb	r3, r3
  if (ep->is_in == 1U)
 8007e78:	d10f      	bne.n	8007e9a <USB_EPClearStall+0x34>
    USBx_INEP(epnum)->DIEPCTL &= ~USB_OTG_DIEPCTL_STALL;
 8007e7a:	f8d0 2900 	ldr.w	r2, [r0, #2304]	@ 0x900
    if ((ep->type == EP_TYPE_INTR) || (ep->type == EP_TYPE_BULK))
 8007e7e:	2b01      	cmp	r3, #1
    USBx_INEP(epnum)->DIEPCTL &= ~USB_OTG_DIEPCTL_STALL;
 8007e80:	f422 1200 	bic.w	r2, r2, #2097152	@ 0x200000
 8007e84:	f8c0 2900 	str.w	r2, [r0, #2304]	@ 0x900
    if ((ep->type == EP_TYPE_INTR) || (ep->type == EP_TYPE_BULK))
 8007e88:	d805      	bhi.n	8007e96 <USB_EPClearStall+0x30>
      USBx_INEP(epnum)->DIEPCTL |= USB_OTG_DIEPCTL_SD0PID_SEVNFRM; /* DATA0 */
 8007e8a:	f8d0 3900 	ldr.w	r3, [r0, #2304]	@ 0x900
 8007e8e:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8007e92:	f8c0 3900 	str.w	r3, [r0, #2304]	@ 0x900
}
 8007e96:	2000      	movs	r0, #0
 8007e98:	4770      	bx	lr
    USBx_OUTEP(epnum)->DOEPCTL &= ~USB_OTG_DOEPCTL_STALL;
 8007e9a:	f8d0 2b00 	ldr.w	r2, [r0, #2816]	@ 0xb00
 8007e9e:	f422 1200 	bic.w	r2, r2, #2097152	@ 0x200000
    if ((ep->type == EP_TYPE_INTR) || (ep->type == EP_TYPE_BULK))
 8007ea2:	2b01      	cmp	r3, #1
    USBx_OUTEP(epnum)->DOEPCTL &= ~USB_OTG_DOEPCTL_STALL;
 8007ea4:	f8c0 2b00 	str.w	r2, [r0, #2816]	@ 0xb00
      USBx_OUTEP(epnum)->DOEPCTL |= USB_OTG_DOEPCTL_SD0PID_SEVNFRM; /* DATA0 */
 8007ea8:	bf9e      	ittt	ls
 8007eaa:	f8d0 3b00 	ldrls.w	r3, [r0, #2816]	@ 0xb00
 8007eae:	f043 5380 	orrls.w	r3, r3, #268435456	@ 0x10000000
 8007eb2:	f8c0 3b00 	strls.w	r3, [r0, #2816]	@ 0xb00
 8007eb6:	e7ee      	b.n	8007e96 <USB_EPClearStall+0x30>

08007eb8 <USB_SetDevAddress>:
  USBx_DEVICE->DCFG &= ~(USB_OTG_DCFG_DAD);
 8007eb8:	f8d0 3800 	ldr.w	r3, [r0, #2048]	@ 0x800
 8007ebc:	f423 63fe 	bic.w	r3, r3, #2032	@ 0x7f0
 8007ec0:	f8c0 3800 	str.w	r3, [r0, #2048]	@ 0x800
  USBx_DEVICE->DCFG |= ((uint32_t)address << 4) & USB_OTG_DCFG_DAD;
 8007ec4:	f8d0 3800 	ldr.w	r3, [r0, #2048]	@ 0x800
 8007ec8:	0109      	lsls	r1, r1, #4
 8007eca:	f401 61fe 	and.w	r1, r1, #2032	@ 0x7f0
 8007ece:	4319      	orrs	r1, r3
 8007ed0:	f8c0 1800 	str.w	r1, [r0, #2048]	@ 0x800
}
 8007ed4:	2000      	movs	r0, #0
 8007ed6:	4770      	bx	lr

08007ed8 <USB_DevConnect>:
  USBx_PCGCCTL &= ~(USB_OTG_PCGCCTL_STOPCLK | USB_OTG_PCGCCTL_GATECLK);
 8007ed8:	f8d0 3e00 	ldr.w	r3, [r0, #3584]	@ 0xe00
 8007edc:	f023 0303 	bic.w	r3, r3, #3
 8007ee0:	f8c0 3e00 	str.w	r3, [r0, #3584]	@ 0xe00
  USBx_DEVICE->DCTL &= ~USB_OTG_DCTL_SDIS;
 8007ee4:	f8d0 3804 	ldr.w	r3, [r0, #2052]	@ 0x804
 8007ee8:	f023 0302 	bic.w	r3, r3, #2
 8007eec:	f8c0 3804 	str.w	r3, [r0, #2052]	@ 0x804
}
 8007ef0:	2000      	movs	r0, #0
 8007ef2:	4770      	bx	lr

08007ef4 <USB_DevDisconnect>:
  USBx_PCGCCTL &= ~(USB_OTG_PCGCCTL_STOPCLK | USB_OTG_PCGCCTL_GATECLK);
 8007ef4:	f8d0 3e00 	ldr.w	r3, [r0, #3584]	@ 0xe00
 8007ef8:	f023 0303 	bic.w	r3, r3, #3
 8007efc:	f8c0 3e00 	str.w	r3, [r0, #3584]	@ 0xe00
  USBx_DEVICE->DCTL |= USB_OTG_DCTL_SDIS;
 8007f00:	f8d0 3804 	ldr.w	r3, [r0, #2052]	@ 0x804
 8007f04:	f043 0302 	orr.w	r3, r3, #2
 8007f08:	f8c0 3804 	str.w	r3, [r0, #2052]	@ 0x804
}
 8007f0c:	2000      	movs	r0, #0
 8007f0e:	4770      	bx	lr

08007f10 <USB_ReadInterrupts>:
  tmpreg = USBx->GINTSTS;
 8007f10:	6942      	ldr	r2, [r0, #20]
  tmpreg &= USBx->GINTMSK;
 8007f12:	6980      	ldr	r0, [r0, #24]
}
 8007f14:	4010      	ands	r0, r2
 8007f16:	4770      	bx	lr

08007f18 <USB_ReadDevAllOutEpInterrupt>:
  tmpreg  = USBx_DEVICE->DAINT;
 8007f18:	f8d0 3818 	ldr.w	r3, [r0, #2072]	@ 0x818
 8007f1c:	f500 6000 	add.w	r0, r0, #2048	@ 0x800
  tmpreg &= USBx_DEVICE->DAINTMSK;
 8007f20:	69c0      	ldr	r0, [r0, #28]
 8007f22:	4018      	ands	r0, r3
}
 8007f24:	0c00      	lsrs	r0, r0, #16
 8007f26:	4770      	bx	lr

08007f28 <USB_ReadDevAllInEpInterrupt>:
  tmpreg  = USBx_DEVICE->DAINT;
 8007f28:	f8d0 3818 	ldr.w	r3, [r0, #2072]	@ 0x818
 8007f2c:	f500 6000 	add.w	r0, r0, #2048	@ 0x800
  tmpreg &= USBx_DEVICE->DAINTMSK;
 8007f30:	69c0      	ldr	r0, [r0, #28]
 8007f32:	4018      	ands	r0, r3
}
 8007f34:	b280      	uxth	r0, r0
 8007f36:	4770      	bx	lr

08007f38 <USB_ReadDevOutEPInterrupt>:
  tmpreg  = USBx_OUTEP((uint32_t)epnum)->DOEPINT;
 8007f38:	eb00 1141 	add.w	r1, r0, r1, lsl #5
  tmpreg &= USBx_DEVICE->DOEPMSK;
 8007f3c:	f500 6000 	add.w	r0, r0, #2048	@ 0x800
  tmpreg  = USBx_OUTEP((uint32_t)epnum)->DOEPINT;
 8007f40:	f8d1 2b08 	ldr.w	r2, [r1, #2824]	@ 0xb08
  tmpreg &= USBx_DEVICE->DOEPMSK;
 8007f44:	6940      	ldr	r0, [r0, #20]
}
 8007f46:	4010      	ands	r0, r2
 8007f48:	4770      	bx	lr

08007f4a <USB_ReadDevInEPInterrupt>:
  msk = USBx_DEVICE->DIEPMSK;
 8007f4a:	f8d0 2810 	ldr.w	r2, [r0, #2064]	@ 0x810
  emp = USBx_DEVICE->DIEPEMPMSK;
 8007f4e:	f8d0 3834 	ldr.w	r3, [r0, #2100]	@ 0x834
  tmpreg = USBx_INEP((uint32_t)epnum)->DIEPINT & msk;
 8007f52:	eb00 1041 	add.w	r0, r0, r1, lsl #5
  msk |= ((emp >> (epnum & EP_ADDR_MSK)) & 0x1U) << 7;
 8007f56:	f001 010f 	and.w	r1, r1, #15
 8007f5a:	40cb      	lsrs	r3, r1
  tmpreg = USBx_INEP((uint32_t)epnum)->DIEPINT & msk;
 8007f5c:	f500 6010 	add.w	r0, r0, #2304	@ 0x900
  msk |= ((emp >> (epnum & EP_ADDR_MSK)) & 0x1U) << 7;
 8007f60:	01db      	lsls	r3, r3, #7
  tmpreg = USBx_INEP((uint32_t)epnum)->DIEPINT & msk;
 8007f62:	6880      	ldr	r0, [r0, #8]
  msk |= ((emp >> (epnum & EP_ADDR_MSK)) & 0x1U) << 7;
 8007f64:	b2db      	uxtb	r3, r3
 8007f66:	4313      	orrs	r3, r2
}
 8007f68:	4018      	ands	r0, r3
 8007f6a:	4770      	bx	lr

08007f6c <USB_GetMode>:
  return ((USBx->GINTSTS) & 0x1U);
 8007f6c:	6940      	ldr	r0, [r0, #20]
}
 8007f6e:	f000 0001 	and.w	r0, r0, #1
 8007f72:	4770      	bx	lr

08007f74 <USB_ActivateSetup>:
  USBx_INEP(0U)->DIEPCTL &= ~USB_OTG_DIEPCTL_MPSIZ;
 8007f74:	f8d0 3900 	ldr.w	r3, [r0, #2304]	@ 0x900
 8007f78:	f36f 030a 	bfc	r3, #0, #11
 8007f7c:	f8c0 3900 	str.w	r3, [r0, #2304]	@ 0x900
  USBx_DEVICE->DCTL |= USB_OTG_DCTL_CGINAK;
 8007f80:	f8d0 3804 	ldr.w	r3, [r0, #2052]	@ 0x804
 8007f84:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8007f88:	f8c0 3804 	str.w	r3, [r0, #2052]	@ 0x804
}
 8007f8c:	2000      	movs	r0, #0
 8007f8e:	4770      	bx	lr

08007f90 <USB_EP0_OutStart>:
{
 8007f90:	b530      	push	{r4, r5, lr}
  uint32_t gSNPSiD = *(__IO const uint32_t *)(&USBx->CID + 0x1U);
 8007f92:	6c05      	ldr	r5, [r0, #64]	@ 0x40
  if (gSNPSiD > USB_OTG_CORE_ID_300A)
 8007f94:	4c10      	ldr	r4, [pc, #64]	@ (8007fd8 <USB_EP0_OutStart+0x48>)
 8007f96:	42a5      	cmp	r5, r4
    if ((USBx_OUTEP(0U)->DOEPCTL & USB_OTG_DOEPCTL_EPENA) == USB_OTG_DOEPCTL_EPENA)
 8007f98:	f500 6330 	add.w	r3, r0, #2816	@ 0xb00
  if (gSNPSiD > USB_OTG_CORE_ID_300A)
 8007f9c:	d903      	bls.n	8007fa6 <USB_EP0_OutStart+0x16>
    if ((USBx_OUTEP(0U)->DOEPCTL & USB_OTG_DOEPCTL_EPENA) == USB_OTG_DOEPCTL_EPENA)
 8007f9e:	f8d0 4b00 	ldr.w	r4, [r0, #2816]	@ 0xb00
 8007fa2:	2c00      	cmp	r4, #0
 8007fa4:	db16      	blt.n	8007fd4 <USB_EP0_OutStart+0x44>
  USBx_OUTEP(0U)->DOEPTSIZ = 0U;
 8007fa6:	2400      	movs	r4, #0
 8007fa8:	611c      	str	r4, [r3, #16]
  USBx_OUTEP(0U)->DOEPTSIZ |= (USB_OTG_DOEPTSIZ_PKTCNT & (1U << 19));
 8007faa:	691c      	ldr	r4, [r3, #16]
 8007fac:	f444 2400 	orr.w	r4, r4, #524288	@ 0x80000
 8007fb0:	611c      	str	r4, [r3, #16]
  USBx_OUTEP(0U)->DOEPTSIZ |= (3U * 8U);
 8007fb2:	691c      	ldr	r4, [r3, #16]
 8007fb4:	f044 0418 	orr.w	r4, r4, #24
 8007fb8:	611c      	str	r4, [r3, #16]
  USBx_OUTEP(0U)->DOEPTSIZ |=  USB_OTG_DOEPTSIZ_STUPCNT;
 8007fba:	691c      	ldr	r4, [r3, #16]
  if (dma == 1U)
 8007fbc:	2901      	cmp	r1, #1
  USBx_OUTEP(0U)->DOEPTSIZ |=  USB_OTG_DOEPTSIZ_STUPCNT;
 8007fbe:	f044 44c0 	orr.w	r4, r4, #1610612736	@ 0x60000000
 8007fc2:	611c      	str	r4, [r3, #16]
    USBx_OUTEP(0U)->DOEPDMA = (uint32_t)psetup;
 8007fc4:	bf01      	itttt	eq
 8007fc6:	615a      	streq	r2, [r3, #20]
    USBx_OUTEP(0U)->DOEPCTL |= USB_OTG_DOEPCTL_EPENA | USB_OTG_DOEPCTL_USBAEP;
 8007fc8:	f8d0 3b00 	ldreq.w	r3, [r0, #2816]	@ 0xb00
 8007fcc:	f043 2380 	orreq.w	r3, r3, #2147516416	@ 0x80008000
 8007fd0:	f8c0 3b00 	streq.w	r3, [r0, #2816]	@ 0xb00
}
 8007fd4:	2000      	movs	r0, #0
 8007fd6:	bd30      	pop	{r4, r5, pc}
 8007fd8:	4f54300a 	.word	0x4f54300a

08007fdc <SysTick_Handler>:

/*
  SysTick handler implementation that also clears overflow flag.
*/
#if (USE_CUSTOM_SYSTICK_HANDLER_IMPLEMENTATION == 0)
void SysTick_Handler (void) {
 8007fdc:	b508      	push	{r3, lr}
  /* Clear overflow flag */
  SysTick->CTRL;
 8007fde:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8007fe2:	691b      	ldr	r3, [r3, #16]

  if (xTaskGetSchedulerState() != taskSCHEDULER_NOT_STARTED) {
 8007fe4:	f001 fe1a 	bl	8009c1c <xTaskGetSchedulerState>
 8007fe8:	2801      	cmp	r0, #1
 8007fea:	d003      	beq.n	8007ff4 <SysTick_Handler+0x18>
    /* Call tick handler */
    xPortSysTickHandler();
  }
}
 8007fec:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    xPortSysTickHandler();
 8007ff0:	f000 bbe8 	b.w	80087c4 <xPortSysTickHandler>
}
 8007ff4:	bd08      	pop	{r3, pc}
	...

08007ff8 <osKernelInitialize>:
 */
__STATIC_FORCEINLINE uint32_t __get_IPSR(void)
{
  uint32_t result;

  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8007ff8:	f3ef 8305 	mrs	r3, IPSR
/*---------------------------------------------------------------------------*/

osStatus_t osKernelInitialize (void) {
  osStatus_t stat;

  if (IS_IRQ()) {
 8007ffc:	b92b      	cbnz	r3, 800800a <osKernelInitialize+0x12>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelInactive) {
 8007ffe:	4b06      	ldr	r3, [pc, #24]	@ (8008018 <osKernelInitialize+0x20>)
 8008000:	6818      	ldr	r0, [r3, #0]
 8008002:	b928      	cbnz	r0, 8008010 <osKernelInitialize+0x18>
        EvrFreeRTOSSetup(0U);
      #endif
      #if defined(USE_FreeRTOS_HEAP_5) && (HEAP_5_REGION_SETUP == 1)
        vPortDefineHeapRegions (configHEAP_5_REGIONS);
      #endif
      KernelState = osKernelReady;
 8008004:	2201      	movs	r2, #1
 8008006:	601a      	str	r2, [r3, #0]
      stat = osOK;
 8008008:	4770      	bx	lr
    stat = osErrorISR;
 800800a:	f06f 0005 	mvn.w	r0, #5
 800800e:	4770      	bx	lr
    } else {
      stat = osError;
 8008010:	f04f 30ff 	mov.w	r0, #4294967295
    }
  }

  return (stat);
}
 8008014:	4770      	bx	lr
 8008016:	bf00      	nop
 8008018:	20002d30 	.word	0x20002d30

0800801c <osKernelStart>:
  }

  return (state);
}

osStatus_t osKernelStart (void) {
 800801c:	b510      	push	{r4, lr}
 800801e:	f3ef 8405 	mrs	r4, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 8008022:	b95c      	cbnz	r4, 800803c <osKernelStart+0x20>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelReady) {
 8008024:	4b08      	ldr	r3, [pc, #32]	@ (8008048 <osKernelStart+0x2c>)
 8008026:	681a      	ldr	r2, [r3, #0]
 8008028:	2a01      	cmp	r2, #1
 800802a:	d10a      	bne.n	8008042 <osKernelStart+0x26>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800802c:	4a07      	ldr	r2, [pc, #28]	@ (800804c <osKernelStart+0x30>)
 800802e:	77d4      	strb	r4, [r2, #31]
      /* Ensure SVC priority is at the reset value */
      SVC_Setup();
      /* Change state to enable IRQ masking check */
      KernelState = osKernelRunning;
 8008030:	2202      	movs	r2, #2
 8008032:	601a      	str	r2, [r3, #0]
      /* Start the kernel scheduler */
      vTaskStartScheduler();
 8008034:	f001 fb70 	bl	8009718 <vTaskStartScheduler>
      stat = osOK;
 8008038:	4620      	mov	r0, r4
      stat = osError;
    }
  }

  return (stat);
}
 800803a:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
 800803c:	f06f 0005 	mvn.w	r0, #5
 8008040:	e7fb      	b.n	800803a <osKernelStart+0x1e>
      stat = osError;
 8008042:	f04f 30ff 	mov.w	r0, #4294967295
  return (stat);
 8008046:	e7f8      	b.n	800803a <osKernelStart+0x1e>
 8008048:	20002d30 	.word	0x20002d30
 800804c:	e000ed00 	.word	0xe000ed00

08008050 <osThreadNew>:
  return (configCPU_CLOCK_HZ);
}

/*---------------------------------------------------------------------------*/

osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 8008050:	b5f0      	push	{r4, r5, r6, r7, lr}
 8008052:	b087      	sub	sp, #28
 8008054:	4614      	mov	r4, r2
  uint32_t stack;
  TaskHandle_t hTask;
  UBaseType_t prio;
  int32_t mem;

  hTask = NULL;
 8008056:	2200      	movs	r2, #0
osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 8008058:	460b      	mov	r3, r1
  hTask = NULL;
 800805a:	9205      	str	r2, [sp, #20]
 800805c:	f3ef 8205 	mrs	r2, IPSR

  if (!IS_IRQ() && (func != NULL)) {
 8008060:	b9fa      	cbnz	r2, 80080a2 <osThreadNew+0x52>
 8008062:	b1f0      	cbz	r0, 80080a2 <osThreadNew+0x52>
    prio  = (UBaseType_t)osPriorityNormal;

    name = NULL;
    mem  = -1;

    if (attr != NULL) {
 8008064:	b354      	cbz	r4, 80080bc <osThreadNew+0x6c>
      if (attr->name != NULL) {
        name = attr->name;
      }
      if (attr->priority != osPriorityNone) {
 8008066:	69a5      	ldr	r5, [r4, #24]
 8008068:	b125      	cbz	r5, 8008074 <osThreadNew+0x24>
        prio = (UBaseType_t)attr->priority;
      }

      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
 800806a:	1e69      	subs	r1, r5, #1
 800806c:	2937      	cmp	r1, #55	@ 0x37
 800806e:	d902      	bls.n	8008076 <osThreadNew+0x26>
        return (NULL);
 8008070:	2000      	movs	r0, #0
 8008072:	e017      	b.n	80080a4 <osThreadNew+0x54>
    prio  = (UBaseType_t)osPriorityNormal;
 8008074:	2518      	movs	r5, #24
      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
 8008076:	6862      	ldr	r2, [r4, #4]
 8008078:	07d2      	lsls	r2, r2, #31
 800807a:	d4f9      	bmi.n	8008070 <osThreadNew+0x20>
      }

      if (attr->stack_size > 0U) {
 800807c:	6966      	ldr	r6, [r4, #20]
 800807e:	b19e      	cbz	r6, 80080a8 <osThreadNew+0x58>
        /* In FreeRTOS stack is not in bytes, but in sizeof(StackType_t) which is 4 on ARM ports.       */
        /* Stack size should be therefore 4 byte aligned in order to avoid division caused side effects */
        stack = attr->stack_size / sizeof(StackType_t);
 8008080:	08b2      	lsrs	r2, r6, #2
      }

      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 8008082:	e9d4 7c02 	ldrd	r7, ip, [r4, #8]
      if (attr->name != NULL) {
 8008086:	6821      	ldr	r1, [r4, #0]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 8008088:	b187      	cbz	r7, 80080ac <osThreadNew+0x5c>
 800808a:	f1bc 0f5f 	cmp.w	ip, #95	@ 0x5f
 800808e:	d908      	bls.n	80080a2 <osThreadNew+0x52>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 8008090:	6924      	ldr	r4, [r4, #16]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 8008092:	b134      	cbz	r4, 80080a2 <osThreadNew+0x52>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 8008094:	b12e      	cbz	r6, 80080a2 <osThreadNew+0x52>
      mem = 0;
    }

    if (mem == 1) {
      #if (configSUPPORT_STATIC_ALLOCATION == 1)
        hTask = xTaskCreateStatic ((TaskFunction_t)func, name, stack, argument, prio, (StackType_t  *)attr->stack_mem,
 8008096:	e9cd 4701 	strd	r4, r7, [sp, #4]
 800809a:	9500      	str	r5, [sp, #0]
 800809c:	f001 fad5 	bl	800964a <xTaskCreateStatic>
 80080a0:	9005      	str	r0, [sp, #20]
        #endif
      }
    }
  }

  return ((osThreadId_t)hTask);
 80080a2:	9805      	ldr	r0, [sp, #20]
}
 80080a4:	b007      	add	sp, #28
 80080a6:	bdf0      	pop	{r4, r5, r6, r7, pc}
    stack = configMINIMAL_STACK_SIZE;
 80080a8:	2280      	movs	r2, #128	@ 0x80
 80080aa:	e7ea      	b.n	8008082 <osThreadNew+0x32>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) && (attr->stack_mem == NULL)) {
 80080ac:	f1bc 0f00 	cmp.w	ip, #0
 80080b0:	d1f7      	bne.n	80080a2 <osThreadNew+0x52>
 80080b2:	6924      	ldr	r4, [r4, #16]
 80080b4:	2c00      	cmp	r4, #0
 80080b6:	d1f4      	bne.n	80080a2 <osThreadNew+0x52>
 80080b8:	460c      	mov	r4, r1
 80080ba:	e001      	b.n	80080c0 <osThreadNew+0x70>
    prio  = (UBaseType_t)osPriorityNormal;
 80080bc:	2518      	movs	r5, #24
    stack = configMINIMAL_STACK_SIZE;
 80080be:	2280      	movs	r2, #128	@ 0x80
          if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
 80080c0:	a905      	add	r1, sp, #20
 80080c2:	e9cd 5100 	strd	r5, r1, [sp]
 80080c6:	b292      	uxth	r2, r2
 80080c8:	4621      	mov	r1, r4
 80080ca:	f001 faf6 	bl	80096ba <xTaskCreate>
 80080ce:	2801      	cmp	r0, #1
            hTask = NULL;
 80080d0:	bf1c      	itt	ne
 80080d2:	2300      	movne	r3, #0
 80080d4:	9305      	strne	r3, [sp, #20]
 80080d6:	e7e4      	b.n	80080a2 <osThreadNew+0x52>

080080d8 <osDelay>:
  /* Return flags before clearing */
  return (rflags);
}
#endif /* (configUSE_OS2_THREAD_FLAGS == 1) */

osStatus_t osDelay (uint32_t ticks) {
 80080d8:	b508      	push	{r3, lr}
 80080da:	f3ef 8205 	mrs	r2, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 80080de:	b922      	cbnz	r2, 80080ea <osDelay+0x12>
    stat = osErrorISR;
  }
  else {
    stat = osOK;

    if (ticks != 0U) {
 80080e0:	b108      	cbz	r0, 80080e6 <osDelay+0xe>
      vTaskDelay(ticks);
 80080e2:	f001 fc77 	bl	80099d4 <vTaskDelay>
    stat = osOK;
 80080e6:	2000      	movs	r0, #0
    }
  }

  return (stat);
}
 80080e8:	bd08      	pop	{r3, pc}
    stat = osErrorISR;
 80080ea:	f06f 0005 	mvn.w	r0, #5
  return (stat);
 80080ee:	e7fb      	b.n	80080e8 <osDelay+0x10>

080080f0 <osSemaphoreNew>:
}
#endif /* (configUSE_OS2_MUTEX == 1) */

/*---------------------------------------------------------------------------*/

osSemaphoreId_t osSemaphoreNew (uint32_t max_count, uint32_t initial_count, const osSemaphoreAttr_t *attr) {
 80080f0:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80080f2:	4604      	mov	r4, r0
 80080f4:	460e      	mov	r6, r1
 80080f6:	4615      	mov	r5, r2
 80080f8:	f3ef 8205 	mrs	r2, IPSR
  const char *name;
  #endif

  hSemaphore = NULL;

  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
 80080fc:	b942      	cbnz	r2, 8008110 <osSemaphoreNew+0x20>
 80080fe:	b138      	cbz	r0, 8008110 <osSemaphoreNew+0x20>
 8008100:	4288      	cmp	r0, r1
 8008102:	d305      	bcc.n	8008110 <osSemaphoreNew+0x20>
    mem = -1;

    if (attr != NULL) {
 8008104:	b155      	cbz	r5, 800811c <osSemaphoreNew+0x2c>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticSemaphore_t))) {
 8008106:	e9d5 3702 	ldrd	r3, r7, [r5, #8]
 800810a:	b12b      	cbz	r3, 8008118 <osSemaphoreNew+0x28>
 800810c:	2f4f      	cmp	r7, #79	@ 0x4f
 800810e:	d822      	bhi.n	8008156 <osSemaphoreNew+0x66>
  hSemaphore = NULL;
 8008110:	2400      	movs	r4, #0
      #endif
    }
  }

  return ((osSemaphoreId_t)hSemaphore);
}
 8008112:	4620      	mov	r0, r4
 8008114:	b003      	add	sp, #12
 8008116:	bdf0      	pop	{r4, r5, r6, r7, pc}
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U)) {
 8008118:	2f00      	cmp	r7, #0
 800811a:	d1f9      	bne.n	8008110 <osSemaphoreNew+0x20>
      if (max_count == 1U) {
 800811c:	2c01      	cmp	r4, #1
 800811e:	d00c      	beq.n	800813a <osSemaphoreNew+0x4a>
            hSemaphore = xSemaphoreCreateCounting (max_count, initial_count);
 8008120:	4620      	mov	r0, r4
 8008122:	4631      	mov	r1, r6
 8008124:	f000 fd86 	bl	8008c34 <xQueueCreateCountingSemaphore>
      if (hSemaphore != NULL) {
 8008128:	4604      	mov	r4, r0
 800812a:	2800      	cmp	r0, #0
 800812c:	d0f0      	beq.n	8008110 <osSemaphoreNew+0x20>
        if (attr != NULL) {
 800812e:	b985      	cbnz	r5, 8008152 <osSemaphoreNew+0x62>
        vQueueAddToRegistry (hSemaphore, name);
 8008130:	4629      	mov	r1, r5
 8008132:	4620      	mov	r0, r4
 8008134:	f001 f8c4 	bl	80092c0 <vQueueAddToRegistry>
  return ((osSemaphoreId_t)hSemaphore);
 8008138:	e7eb      	b.n	8008112 <osSemaphoreNew+0x22>
            hSemaphore = xSemaphoreCreateBinary();
 800813a:	2203      	movs	r2, #3
 800813c:	2100      	movs	r1, #0
 800813e:	2001      	movs	r0, #1
 8008140:	f000 fd2f 	bl	8008ba2 <xQueueGenericCreate>
 8008144:	e00e      	b.n	8008164 <osSemaphoreNew+0x74>
            hSemaphore = xSemaphoreCreateCountingStatic (max_count, initial_count, (StaticSemaphore_t *)attr->cb_mem);
 8008146:	461a      	mov	r2, r3
 8008148:	f000 fd52 	bl	8008bf0 <xQueueCreateCountingSemaphoreStatic>
      if (hSemaphore != NULL) {
 800814c:	4604      	mov	r4, r0
 800814e:	2800      	cmp	r0, #0
 8008150:	d0de      	beq.n	8008110 <osSemaphoreNew+0x20>
          name = attr->name;
 8008152:	682d      	ldr	r5, [r5, #0]
 8008154:	e7ec      	b.n	8008130 <osSemaphoreNew+0x40>
      if (max_count == 1U) {
 8008156:	2801      	cmp	r0, #1
 8008158:	d1f5      	bne.n	8008146 <osSemaphoreNew+0x56>
            hSemaphore = xSemaphoreCreateBinaryStatic ((StaticSemaphore_t *)attr->cb_mem);
 800815a:	2103      	movs	r1, #3
 800815c:	9100      	str	r1, [sp, #0]
 800815e:	4611      	mov	r1, r2
 8008160:	f000 fcd1 	bl	8008b06 <xQueueGenericCreateStatic>
            hSemaphore = xSemaphoreCreateBinary();
 8008164:	4604      	mov	r4, r0
        if ((hSemaphore != NULL) && (initial_count != 0U)) {
 8008166:	2800      	cmp	r0, #0
 8008168:	d0d2      	beq.n	8008110 <osSemaphoreNew+0x20>
 800816a:	2e00      	cmp	r6, #0
 800816c:	d0df      	beq.n	800812e <osSemaphoreNew+0x3e>
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
 800816e:	2300      	movs	r3, #0
 8008170:	461a      	mov	r2, r3
 8008172:	4619      	mov	r1, r3
 8008174:	f000 fd7c 	bl	8008c70 <xQueueGenericSend>
 8008178:	2801      	cmp	r0, #1
 800817a:	d0d8      	beq.n	800812e <osSemaphoreNew+0x3e>
            vSemaphoreDelete (hSemaphore);
 800817c:	4620      	mov	r0, r4
 800817e:	f001 f8c9 	bl	8009314 <vQueueDelete>
      if (hSemaphore != NULL) {
 8008182:	e7c5      	b.n	8008110 <osSemaphoreNew+0x20>

08008184 <osSemaphoreAcquire>:

osStatus_t osSemaphoreAcquire (osSemaphoreId_t semaphore_id, uint32_t timeout) {
 8008184:	b513      	push	{r0, r1, r4, lr}
 8008186:	460c      	mov	r4, r1
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 8008188:	b328      	cbz	r0, 80081d6 <osSemaphoreAcquire+0x52>
 800818a:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 800818e:	b1cb      	cbz	r3, 80081c4 <osSemaphoreAcquire+0x40>
    if (timeout != 0U) {
 8008190:	bb09      	cbnz	r1, 80081d6 <osSemaphoreAcquire+0x52>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 8008192:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 8008194:	9101      	str	r1, [sp, #4]
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 8008196:	f001 f826 	bl	80091e6 <xQueueReceiveFromISR>
 800819a:	2801      	cmp	r0, #1
 800819c:	d003      	beq.n	80081a6 <osSemaphoreAcquire+0x22>
        stat = osErrorResource;
 800819e:	f06f 0002 	mvn.w	r0, #2
      }
    }
  }

  return (stat);
}
 80081a2:	b002      	add	sp, #8
 80081a4:	bd10      	pop	{r4, pc}
        portYIELD_FROM_ISR (yield);
 80081a6:	9b01      	ldr	r3, [sp, #4]
 80081a8:	b90b      	cbnz	r3, 80081ae <osSemaphoreAcquire+0x2a>
  stat = osOK;
 80081aa:	2000      	movs	r0, #0
 80081ac:	e7f9      	b.n	80081a2 <osSemaphoreAcquire+0x1e>
        portYIELD_FROM_ISR (yield);
 80081ae:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 80081b2:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 80081b6:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 80081ba:	f3bf 8f4f 	dsb	sy
 80081be:	f3bf 8f6f 	isb	sy
 80081c2:	e7f2      	b.n	80081aa <osSemaphoreAcquire+0x26>
    if (xSemaphoreTake (hSemaphore, (TickType_t)timeout) != pdPASS) {
 80081c4:	f000 ff52 	bl	800906c <xQueueSemaphoreTake>
 80081c8:	2801      	cmp	r0, #1
 80081ca:	d0ee      	beq.n	80081aa <osSemaphoreAcquire+0x26>
      if (timeout != 0U) {
 80081cc:	2c00      	cmp	r4, #0
 80081ce:	d0e6      	beq.n	800819e <osSemaphoreAcquire+0x1a>
        stat = osErrorTimeout;
 80081d0:	f06f 0001 	mvn.w	r0, #1
 80081d4:	e7e5      	b.n	80081a2 <osSemaphoreAcquire+0x1e>
    stat = osErrorParameter;
 80081d6:	f06f 0003 	mvn.w	r0, #3
  return (stat);
 80081da:	e7e2      	b.n	80081a2 <osSemaphoreAcquire+0x1e>

080081dc <osSemaphoreRelease>:

osStatus_t osSemaphoreRelease (osSemaphoreId_t semaphore_id) {
 80081dc:	b507      	push	{r0, r1, r2, lr}
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 80081de:	b318      	cbz	r0, 8008228 <osSemaphoreRelease+0x4c>
 80081e0:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 80081e4:	b1cb      	cbz	r3, 800821a <osSemaphoreRelease+0x3e>
    yield = pdFALSE;
 80081e6:	2300      	movs	r3, #0

    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 80081e8:	a901      	add	r1, sp, #4
    yield = pdFALSE;
 80081ea:	9301      	str	r3, [sp, #4]
    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 80081ec:	f000 fe4f 	bl	8008e8e <xQueueGiveFromISR>
 80081f0:	2801      	cmp	r0, #1
 80081f2:	d004      	beq.n	80081fe <osSemaphoreRelease+0x22>
      portYIELD_FROM_ISR (yield);
    }
  }
  else {
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
      stat = osErrorResource;
 80081f4:	f06f 0002 	mvn.w	r0, #2
    }
  }

  return (stat);
}
 80081f8:	b003      	add	sp, #12
 80081fa:	f85d fb04 	ldr.w	pc, [sp], #4
      portYIELD_FROM_ISR (yield);
 80081fe:	9b01      	ldr	r3, [sp, #4]
 8008200:	b14b      	cbz	r3, 8008216 <osSemaphoreRelease+0x3a>
 8008202:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8008206:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800820a:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 800820e:	f3bf 8f4f 	dsb	sy
 8008212:	f3bf 8f6f 	isb	sy
  stat = osOK;
 8008216:	2000      	movs	r0, #0
 8008218:	e7ee      	b.n	80081f8 <osSemaphoreRelease+0x1c>
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
 800821a:	461a      	mov	r2, r3
 800821c:	4619      	mov	r1, r3
 800821e:	f000 fd27 	bl	8008c70 <xQueueGenericSend>
 8008222:	2801      	cmp	r0, #1
 8008224:	d0f7      	beq.n	8008216 <osSemaphoreRelease+0x3a>
 8008226:	e7e5      	b.n	80081f4 <osSemaphoreRelease+0x18>
    stat = osErrorParameter;
 8008228:	f06f 0003 	mvn.w	r0, #3
  return (stat);
 800822c:	e7e4      	b.n	80081f8 <osSemaphoreRelease+0x1c>

0800822e <osSemaphoreGetCount>:

uint32_t osSemaphoreGetCount (osSemaphoreId_t semaphore_id) {
  SemaphoreHandle_t hSemaphore = (SemaphoreHandle_t)semaphore_id;
  uint32_t count;

  if (hSemaphore == NULL) {
 800822e:	b130      	cbz	r0, 800823e <osSemaphoreGetCount+0x10>
 8008230:	f3ef 8305 	mrs	r3, IPSR
    count = 0U;
  }
  else if (IS_IRQ()) {
 8008234:	b10b      	cbz	r3, 800823a <osSemaphoreGetCount+0xc>
    count = uxQueueMessagesWaitingFromISR (hSemaphore);
 8008236:	f001 b836 	b.w	80092a6 <uxQueueMessagesWaitingFromISR>
  } else {
    count = (uint32_t)uxSemaphoreGetCount (hSemaphore);
 800823a:	f001 b821 	b.w	8009280 <uxQueueMessagesWaiting>
  }

  return (count);
}
 800823e:	4770      	bx	lr

08008240 <osMessageQueueNew>:
  return (stat);
}

/*---------------------------------------------------------------------------*/

osMessageQueueId_t osMessageQueueNew (uint32_t msg_count, uint32_t msg_size, const osMessageQueueAttr_t *attr) {
 8008240:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8008242:	4605      	mov	r5, r0
 8008244:	460e      	mov	r6, r1
 8008246:	4614      	mov	r4, r2
 8008248:	f3ef 8705 	mrs	r7, IPSR
  const char *name;
  #endif

  hQueue = NULL;

  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 800824c:	b11f      	cbz	r7, 8008256 <osMessageQueueNew+0x16>
  hQueue = NULL;
 800824e:	2500      	movs	r5, #0
    #endif

  }

  return ((osMessageQueueId_t)hQueue);
}
 8008250:	4628      	mov	r0, r5
 8008252:	b003      	add	sp, #12
 8008254:	bdf0      	pop	{r4, r5, r6, r7, pc}
  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 8008256:	2800      	cmp	r0, #0
 8008258:	d0f9      	beq.n	800824e <osMessageQueueNew+0xe>
 800825a:	2900      	cmp	r1, #0
 800825c:	d0f7      	beq.n	800824e <osMessageQueueNew+0xe>
    if (attr != NULL) {
 800825e:	b1da      	cbz	r2, 8008298 <osMessageQueueNew+0x58>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 8008260:	e9d2 3202 	ldrd	r3, r2, [r2, #8]
 8008264:	b183      	cbz	r3, 8008288 <osMessageQueueNew+0x48>
 8008266:	2a4f      	cmp	r2, #79	@ 0x4f
 8008268:	d9f1      	bls.n	800824e <osMessageQueueNew+0xe>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 800826a:	6922      	ldr	r2, [r4, #16]
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 800826c:	2a00      	cmp	r2, #0
 800826e:	d0ee      	beq.n	800824e <osMessageQueueNew+0xe>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 8008270:	6966      	ldr	r6, [r4, #20]
 8008272:	434d      	muls	r5, r1
 8008274:	42ae      	cmp	r6, r5
 8008276:	d3ea      	bcc.n	800824e <osMessageQueueNew+0xe>
        hQueue = xQueueCreateStatic (msg_count, msg_size, attr->mq_mem, attr->cb_mem);
 8008278:	9700      	str	r7, [sp, #0]
 800827a:	f000 fc44 	bl	8008b06 <xQueueGenericCreateStatic>
    if (hQueue != NULL) {
 800827e:	4605      	mov	r5, r0
 8008280:	2800      	cmp	r0, #0
 8008282:	d0e4      	beq.n	800824e <osMessageQueueNew+0xe>
        name = attr->name;
 8008284:	6824      	ldr	r4, [r4, #0]
 8008286:	e011      	b.n	80082ac <osMessageQueueNew+0x6c>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) &&
 8008288:	2a00      	cmp	r2, #0
 800828a:	d1e0      	bne.n	800824e <osMessageQueueNew+0xe>
 800828c:	6923      	ldr	r3, [r4, #16]
 800828e:	2b00      	cmp	r3, #0
 8008290:	d1dd      	bne.n	800824e <osMessageQueueNew+0xe>
            (attr->mq_mem == NULL) && (attr->mq_size == 0U)) {
 8008292:	6963      	ldr	r3, [r4, #20]
 8008294:	2b00      	cmp	r3, #0
 8008296:	d1da      	bne.n	800824e <osMessageQueueNew+0xe>
          hQueue = xQueueCreate (msg_count, msg_size);
 8008298:	4628      	mov	r0, r5
 800829a:	2200      	movs	r2, #0
 800829c:	4631      	mov	r1, r6
 800829e:	f000 fc80 	bl	8008ba2 <xQueueGenericCreate>
    if (hQueue != NULL) {
 80082a2:	4605      	mov	r5, r0
 80082a4:	2800      	cmp	r0, #0
 80082a6:	d0d2      	beq.n	800824e <osMessageQueueNew+0xe>
      if (attr != NULL) {
 80082a8:	2c00      	cmp	r4, #0
 80082aa:	d1eb      	bne.n	8008284 <osMessageQueueNew+0x44>
      vQueueAddToRegistry (hQueue, name);
 80082ac:	4621      	mov	r1, r4
 80082ae:	4628      	mov	r0, r5
 80082b0:	f001 f806 	bl	80092c0 <vQueueAddToRegistry>
  return ((osMessageQueueId_t)hQueue);
 80082b4:	e7cc      	b.n	8008250 <osMessageQueueNew+0x10>

080082b6 <osMessageQueuePut>:

osStatus_t osMessageQueuePut (osMessageQueueId_t mq_id, const void *msg_ptr, uint8_t msg_prio, uint32_t timeout) {
 80082b6:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80082b8:	461c      	mov	r4, r3
 80082ba:	f3ef 8605 	mrs	r6, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 80082be:	b1de      	cbz	r6, 80082f8 <osMessageQueuePut+0x42>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 80082c0:	b338      	cbz	r0, 8008312 <osMessageQueuePut+0x5c>
 80082c2:	b331      	cbz	r1, 8008312 <osMessageQueuePut+0x5c>
 80082c4:	bb2b      	cbnz	r3, 8008312 <osMessageQueuePut+0x5c>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 80082c6:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 80082c8:	9301      	str	r3, [sp, #4]
      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 80082ca:	f000 fd83 	bl	8008dd4 <xQueueGenericSendFromISR>
 80082ce:	2801      	cmp	r0, #1
 80082d0:	d003      	beq.n	80082da <osMessageQueuePut+0x24>
        stat = osErrorResource;
 80082d2:	f06f 0002 	mvn.w	r0, #2
      }
    }
  }

  return (stat);
}
 80082d6:	b002      	add	sp, #8
 80082d8:	bd70      	pop	{r4, r5, r6, pc}
        portYIELD_FROM_ISR (yield);
 80082da:	9b01      	ldr	r3, [sp, #4]
 80082dc:	b90b      	cbnz	r3, 80082e2 <osMessageQueuePut+0x2c>
  stat = osOK;
 80082de:	2000      	movs	r0, #0
 80082e0:	e7f9      	b.n	80082d6 <osMessageQueuePut+0x20>
        portYIELD_FROM_ISR (yield);
 80082e2:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 80082e6:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 80082ea:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 80082ee:	f3bf 8f4f 	dsb	sy
 80082f2:	f3bf 8f6f 	isb	sy
 80082f6:	e7f2      	b.n	80082de <osMessageQueuePut+0x28>
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 80082f8:	b158      	cbz	r0, 8008312 <osMessageQueuePut+0x5c>
 80082fa:	b151      	cbz	r1, 8008312 <osMessageQueuePut+0x5c>
      if (xQueueSendToBack (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 80082fc:	4633      	mov	r3, r6
 80082fe:	4622      	mov	r2, r4
 8008300:	f000 fcb6 	bl	8008c70 <xQueueGenericSend>
 8008304:	2801      	cmp	r0, #1
 8008306:	d0ea      	beq.n	80082de <osMessageQueuePut+0x28>
        if (timeout != 0U) {
 8008308:	2c00      	cmp	r4, #0
 800830a:	d0e2      	beq.n	80082d2 <osMessageQueuePut+0x1c>
          stat = osErrorTimeout;
 800830c:	f06f 0001 	mvn.w	r0, #1
 8008310:	e7e1      	b.n	80082d6 <osMessageQueuePut+0x20>
      stat = osErrorParameter;
 8008312:	f06f 0003 	mvn.w	r0, #3
  return (stat);
 8008316:	e7de      	b.n	80082d6 <osMessageQueuePut+0x20>

08008318 <osMessageQueueGet>:

osStatus_t osMessageQueueGet (osMessageQueueId_t mq_id, void *msg_ptr, uint8_t *msg_prio, uint32_t timeout) {
 8008318:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800831a:	461c      	mov	r4, r3
 800831c:	f3ef 8305 	mrs	r3, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 8008320:	b1db      	cbz	r3, 800835a <osMessageQueueGet+0x42>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 8008322:	b330      	cbz	r0, 8008372 <osMessageQueueGet+0x5a>
 8008324:	b329      	cbz	r1, 8008372 <osMessageQueueGet+0x5a>
 8008326:	bb24      	cbnz	r4, 8008372 <osMessageQueueGet+0x5a>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 8008328:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 800832a:	9401      	str	r4, [sp, #4]
      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 800832c:	f000 ff5b 	bl	80091e6 <xQueueReceiveFromISR>
 8008330:	2801      	cmp	r0, #1
 8008332:	d003      	beq.n	800833c <osMessageQueueGet+0x24>
        stat = osErrorResource;
 8008334:	f06f 0002 	mvn.w	r0, #2
      }
    }
  }

  return (stat);
}
 8008338:	b003      	add	sp, #12
 800833a:	bd30      	pop	{r4, r5, pc}
        portYIELD_FROM_ISR (yield);
 800833c:	9b01      	ldr	r3, [sp, #4]
 800833e:	b90b      	cbnz	r3, 8008344 <osMessageQueueGet+0x2c>
  stat = osOK;
 8008340:	2000      	movs	r0, #0
 8008342:	e7f9      	b.n	8008338 <osMessageQueueGet+0x20>
        portYIELD_FROM_ISR (yield);
 8008344:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8008348:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800834c:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8008350:	f3bf 8f4f 	dsb	sy
 8008354:	f3bf 8f6f 	isb	sy
 8008358:	e7f2      	b.n	8008340 <osMessageQueueGet+0x28>
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 800835a:	b150      	cbz	r0, 8008372 <osMessageQueueGet+0x5a>
 800835c:	b149      	cbz	r1, 8008372 <osMessageQueueGet+0x5a>
      if (xQueueReceive (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 800835e:	4622      	mov	r2, r4
 8008360:	f000 fde6 	bl	8008f30 <xQueueReceive>
 8008364:	2801      	cmp	r0, #1
 8008366:	d0eb      	beq.n	8008340 <osMessageQueueGet+0x28>
        if (timeout != 0U) {
 8008368:	2c00      	cmp	r4, #0
 800836a:	d0e3      	beq.n	8008334 <osMessageQueueGet+0x1c>
          stat = osErrorTimeout;
 800836c:	f06f 0001 	mvn.w	r0, #1
 8008370:	e7e2      	b.n	8008338 <osMessageQueueGet+0x20>
      stat = osErrorParameter;
 8008372:	f06f 0003 	mvn.w	r0, #3
  return (stat);
 8008376:	e7df      	b.n	8008338 <osMessageQueueGet+0x20>

08008378 <osMessageQueueGetCount>:
  }

  return (size);
}

uint32_t osMessageQueueGetCount (osMessageQueueId_t mq_id) {
 8008378:	f7ff bf59 	b.w	800822e <osSemaphoreGetCount>

0800837c <vApplicationGetIdleTaskMemory>:
__WEAK void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
  /* Idle task control block and stack */
  static StaticTask_t Idle_TCB;
  static StackType_t  Idle_Stack[configMINIMAL_STACK_SIZE];

  *ppxIdleTaskTCBBuffer   = &Idle_TCB;
 800837c:	4b03      	ldr	r3, [pc, #12]	@ (800838c <vApplicationGetIdleTaskMemory+0x10>)
 800837e:	6003      	str	r3, [r0, #0]
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
 8008380:	4b03      	ldr	r3, [pc, #12]	@ (8008390 <vApplicationGetIdleTaskMemory+0x14>)
 8008382:	600b      	str	r3, [r1, #0]
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
 8008384:	2380      	movs	r3, #128	@ 0x80
 8008386:	6013      	str	r3, [r2, #0]
}
 8008388:	4770      	bx	lr
 800838a:	bf00      	nop
 800838c:	20002cd0 	.word	0x20002cd0
 8008390:	20002ad0 	.word	0x20002ad0

08008394 <vApplicationGetTimerTaskMemory>:
__WEAK void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
  /* Timer task control block and stack */
  static StaticTask_t Timer_TCB;
  static StackType_t  Timer_Stack[configTIMER_TASK_STACK_DEPTH];

  *ppxTimerTaskTCBBuffer   = &Timer_TCB;
 8008394:	4b03      	ldr	r3, [pc, #12]	@ (80083a4 <vApplicationGetTimerTaskMemory+0x10>)
 8008396:	6003      	str	r3, [r0, #0]
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
 8008398:	4b03      	ldr	r3, [pc, #12]	@ (80083a8 <vApplicationGetTimerTaskMemory+0x14>)
 800839a:	600b      	str	r3, [r1, #0]
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
 800839c:	f44f 7380 	mov.w	r3, #256	@ 0x100
 80083a0:	6013      	str	r3, [r2, #0]
}
 80083a2:	4770      	bx	lr
 80083a4:	20002a70 	.word	0x20002a70
 80083a8:	20002670 	.word	0x20002670

080083ac <prvInsertBlockIntoFreeList>:
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
}
/*-----------------------------------------------------------*/

static void prvInsertBlockIntoFreeList( BlockLink_t *pxBlockToInsert )
{
 80083ac:	b510      	push	{r4, lr}
BlockLink_t *pxIterator;
uint8_t *puc;

	/* Iterate through the list until a block is found that has a higher address
	than the block being inserted. */
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 80083ae:	4b10      	ldr	r3, [pc, #64]	@ (80083f0 <prvInsertBlockIntoFreeList+0x44>)
 80083b0:	461a      	mov	r2, r3
 80083b2:	681b      	ldr	r3, [r3, #0]
 80083b4:	4283      	cmp	r3, r0
 80083b6:	d3fb      	bcc.n	80083b0 <prvInsertBlockIntoFreeList+0x4>
	}

	/* Do the block being inserted, and the block it is being inserted after
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxIterator;
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
 80083b8:	6854      	ldr	r4, [r2, #4]
 80083ba:	1911      	adds	r1, r2, r4
 80083bc:	4288      	cmp	r0, r1
	{
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 80083be:	bf01      	itttt	eq
 80083c0:	6841      	ldreq	r1, [r0, #4]
		pxBlockToInsert = pxIterator;
 80083c2:	4610      	moveq	r0, r2
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 80083c4:	1909      	addeq	r1, r1, r4
 80083c6:	6051      	streq	r1, [r2, #4]
	}

	/* Do the block being inserted, and the block it is being inserted before
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxBlockToInsert;
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 80083c8:	6844      	ldr	r4, [r0, #4]
 80083ca:	1901      	adds	r1, r0, r4
 80083cc:	428b      	cmp	r3, r1
 80083ce:	d10c      	bne.n	80083ea <prvInsertBlockIntoFreeList+0x3e>
	{
		if( pxIterator->pxNextFreeBlock != pxEnd )
 80083d0:	4908      	ldr	r1, [pc, #32]	@ (80083f4 <prvInsertBlockIntoFreeList+0x48>)
 80083d2:	6809      	ldr	r1, [r1, #0]
 80083d4:	428b      	cmp	r3, r1
 80083d6:	d003      	beq.n	80083e0 <prvInsertBlockIntoFreeList+0x34>
		{
			/* Form one big block from the two blocks. */
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 80083d8:	6859      	ldr	r1, [r3, #4]
 80083da:	4421      	add	r1, r4
 80083dc:	6041      	str	r1, [r0, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 80083de:	6819      	ldr	r1, [r3, #0]
		}
		else
		{
			pxBlockToInsert->pxNextFreeBlock = pxEnd;
 80083e0:	6001      	str	r1, [r0, #0]

	/* If the block being inserted plugged a gab, so was merged with the block
	before and the block after, then it's pxNextFreeBlock pointer will have
	already been set, and should not be set here as that would make it point
	to itself. */
	if( pxIterator != pxBlockToInsert )
 80083e2:	4290      	cmp	r0, r2
	{
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
 80083e4:	bf18      	it	ne
 80083e6:	6010      	strne	r0, [r2, #0]
	}
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}
}
 80083e8:	bd10      	pop	{r4, pc}
 80083ea:	4619      	mov	r1, r3
 80083ec:	e7f8      	b.n	80083e0 <prvInsertBlockIntoFreeList+0x34>
 80083ee:	bf00      	nop
 80083f0:	20002d4c 	.word	0x20002d4c
 80083f4:	20002d48 	.word	0x20002d48

080083f8 <pvPortMalloc>:
{
 80083f8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80083fc:	4604      	mov	r4, r0
	vTaskSuspendAll();
 80083fe:	f001 f9d1 	bl	80097a4 <vTaskSuspendAll>
		if( pxEnd == NULL )
 8008402:	4942      	ldr	r1, [pc, #264]	@ (800850c <pvPortMalloc+0x114>)
 8008404:	4d42      	ldr	r5, [pc, #264]	@ (8008510 <pvPortMalloc+0x118>)
 8008406:	680b      	ldr	r3, [r1, #0]
 8008408:	bb0b      	cbnz	r3, 800844e <pvPortMalloc+0x56>
	uxAddress = ( size_t ) ucHeap;
 800840a:	4a42      	ldr	r2, [pc, #264]	@ (8008514 <pvPortMalloc+0x11c>)
	if( ( uxAddress & portBYTE_ALIGNMENT_MASK ) != 0 )
 800840c:	0756      	lsls	r6, r2, #29
		uxAddress += ( portBYTE_ALIGNMENT - 1 );
 800840e:	bf1f      	itttt	ne
 8008410:	1dd0      	addne	r0, r2, #7
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 8008412:	f020 0007 	bicne.w	r0, r0, #7
		xTotalHeapSize -= uxAddress - ( size_t ) ucHeap;
 8008416:	f502 3280 	addne.w	r2, r2, #65536	@ 0x10000
 800841a:	1a13      	subne	r3, r2, r0
size_t xTotalHeapSize = configTOTAL_HEAP_SIZE;
 800841c:	bf0c      	ite	eq
 800841e:	f44f 3380 	moveq.w	r3, #65536	@ 0x10000
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 8008422:	4602      	movne	r2, r0
	uxAddress = ( ( size_t ) pucAlignedHeap ) + xTotalHeapSize;
 8008424:	4413      	add	r3, r2
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 8008426:	4e3c      	ldr	r6, [pc, #240]	@ (8008518 <pvPortMalloc+0x120>)
	uxAddress -= xHeapStructSize;
 8008428:	3b08      	subs	r3, #8
	uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 800842a:	f023 0307 	bic.w	r3, r3, #7
	xStart.xBlockSize = ( size_t ) 0;
 800842e:	2000      	movs	r0, #0
 8008430:	6070      	str	r0, [r6, #4]
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 8008432:	6032      	str	r2, [r6, #0]
	pxEnd->pxNextFreeBlock = NULL;
 8008434:	e9c3 0000 	strd	r0, r0, [r3]
	pxFirstFreeBlock->xBlockSize = uxAddress - ( size_t ) pxFirstFreeBlock;
 8008438:	1a98      	subs	r0, r3, r2
	pxFirstFreeBlock->pxNextFreeBlock = pxEnd;
 800843a:	e9c2 3000 	strd	r3, r0, [r2]
	pxEnd = ( void * ) uxAddress;
 800843e:	600b      	str	r3, [r1, #0]
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 8008440:	4b36      	ldr	r3, [pc, #216]	@ (800851c <pvPortMalloc+0x124>)
 8008442:	6018      	str	r0, [r3, #0]
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 8008444:	4b36      	ldr	r3, [pc, #216]	@ (8008520 <pvPortMalloc+0x128>)
 8008446:	6018      	str	r0, [r3, #0]
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 8008448:	f04f 4300 	mov.w	r3, #2147483648	@ 0x80000000
 800844c:	602b      	str	r3, [r5, #0]
		if( ( xWantedSize & xBlockAllocatedBit ) == 0 )
 800844e:	682e      	ldr	r6, [r5, #0]
 8008450:	4226      	tst	r6, r4
 8008452:	d155      	bne.n	8008500 <pvPortMalloc+0x108>
			if( xWantedSize > 0 )
 8008454:	2c00      	cmp	r4, #0
 8008456:	d046      	beq.n	80084e6 <pvPortMalloc+0xee>
				xWantedSize += xHeapStructSize;
 8008458:	f104 0308 	add.w	r3, r4, #8
				if( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) != 0x00 )
 800845c:	0760      	lsls	r0, r4, #29
					xWantedSize += ( portBYTE_ALIGNMENT - ( xWantedSize & portBYTE_ALIGNMENT_MASK ) );
 800845e:	bf1c      	itt	ne
 8008460:	f023 0307 	bicne.w	r3, r3, #7
 8008464:	3308      	addne	r3, #8
			if( ( xWantedSize > 0 ) && ( xWantedSize <= xFreeBytesRemaining ) )
 8008466:	2b00      	cmp	r3, #0
 8008468:	d04a      	beq.n	8008500 <pvPortMalloc+0x108>
 800846a:	4f2d      	ldr	r7, [pc, #180]	@ (8008520 <pvPortMalloc+0x128>)
 800846c:	683c      	ldr	r4, [r7, #0]
 800846e:	429c      	cmp	r4, r3
 8008470:	d346      	bcc.n	8008500 <pvPortMalloc+0x108>
				pxBlock = xStart.pxNextFreeBlock;
 8008472:	4a29      	ldr	r2, [pc, #164]	@ (8008518 <pvPortMalloc+0x120>)
 8008474:	6815      	ldr	r5, [r2, #0]
				while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
 8008476:	6868      	ldr	r0, [r5, #4]
 8008478:	4298      	cmp	r0, r3
 800847a:	d204      	bcs.n	8008486 <pvPortMalloc+0x8e>
 800847c:	f8d5 c000 	ldr.w	ip, [r5]
 8008480:	f1bc 0f00 	cmp.w	ip, #0
 8008484:	d115      	bne.n	80084b2 <pvPortMalloc+0xba>
				if( pxBlock != pxEnd )
 8008486:	6809      	ldr	r1, [r1, #0]
 8008488:	42a9      	cmp	r1, r5
 800848a:	d039      	beq.n	8008500 <pvPortMalloc+0x108>
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 800848c:	6829      	ldr	r1, [r5, #0]
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 800848e:	f8d2 8000 	ldr.w	r8, [r2]
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 8008492:	6011      	str	r1, [r2, #0]
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 8008494:	1ac2      	subs	r2, r0, r3
 8008496:	2a10      	cmp	r2, #16
 8008498:	d912      	bls.n	80084c0 <pvPortMalloc+0xc8>
						pxNewBlockLink = ( void * ) ( ( ( uint8_t * ) pxBlock ) + xWantedSize );
 800849a:	18e8      	adds	r0, r5, r3
						configASSERT( ( ( ( size_t ) pxNewBlockLink ) & portBYTE_ALIGNMENT_MASK ) == 0 );
 800849c:	0741      	lsls	r1, r0, #29
 800849e:	d00b      	beq.n	80084b8 <pvPortMalloc+0xc0>

portFORCE_INLINE static void vPortRaiseBASEPRI( void )
{
uint32_t ulNewBASEPRI;

	__asm volatile
 80084a0:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80084a4:	f383 8811 	msr	BASEPRI, r3
 80084a8:	f3bf 8f6f 	isb	sy
 80084ac:	f3bf 8f4f 	dsb	sy
 80084b0:	e7fe      	b.n	80084b0 <pvPortMalloc+0xb8>
					pxPreviousBlock = pxBlock;
 80084b2:	462a      	mov	r2, r5
					pxBlock = pxBlock->pxNextFreeBlock;
 80084b4:	4665      	mov	r5, ip
 80084b6:	e7de      	b.n	8008476 <pvPortMalloc+0x7e>
						pxNewBlockLink->xBlockSize = pxBlock->xBlockSize - xWantedSize;
 80084b8:	6042      	str	r2, [r0, #4]
						pxBlock->xBlockSize = xWantedSize;
 80084ba:	606b      	str	r3, [r5, #4]
						prvInsertBlockIntoFreeList( pxNewBlockLink );
 80084bc:	f7ff ff76 	bl	80083ac <prvInsertBlockIntoFreeList>
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 80084c0:	686a      	ldr	r2, [r5, #4]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 80084c2:	4916      	ldr	r1, [pc, #88]	@ (800851c <pvPortMalloc+0x124>)
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 80084c4:	1aa4      	subs	r4, r4, r2
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 80084c6:	4316      	orrs	r6, r2
					xNumberOfSuccessfulAllocations++;
 80084c8:	4a16      	ldr	r2, [pc, #88]	@ (8008524 <pvPortMalloc+0x12c>)
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 80084ca:	6808      	ldr	r0, [r1, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 80084cc:	603c      	str	r4, [r7, #0]
					pxBlock->pxNextFreeBlock = NULL;
 80084ce:	2300      	movs	r3, #0
 80084d0:	602b      	str	r3, [r5, #0]
					xNumberOfSuccessfulAllocations++;
 80084d2:	6813      	ldr	r3, [r2, #0]
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 80084d4:	606e      	str	r6, [r5, #4]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 80084d6:	4284      	cmp	r4, r0
					xNumberOfSuccessfulAllocations++;
 80084d8:	f103 0301 	add.w	r3, r3, #1
						xMinimumEverFreeBytesRemaining = xFreeBytesRemaining;
 80084dc:	bf38      	it	cc
 80084de:	600c      	strcc	r4, [r1, #0]
					xNumberOfSuccessfulAllocations++;
 80084e0:	6013      	str	r3, [r2, #0]
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 80084e2:	f108 0408 	add.w	r4, r8, #8
	( void ) xTaskResumeAll();
 80084e6:	f001 fa01 	bl	80098ec <xTaskResumeAll>
	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
 80084ea:	0763      	lsls	r3, r4, #29
 80084ec:	d00a      	beq.n	8008504 <pvPortMalloc+0x10c>
 80084ee:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80084f2:	f383 8811 	msr	BASEPRI, r3
 80084f6:	f3bf 8f6f 	isb	sy
 80084fa:	f3bf 8f4f 	dsb	sy
 80084fe:	e7fe      	b.n	80084fe <pvPortMalloc+0x106>
void *pvReturn = NULL;
 8008500:	2400      	movs	r4, #0
 8008502:	e7f0      	b.n	80084e6 <pvPortMalloc+0xee>
}
 8008504:	4620      	mov	r0, r4
 8008506:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800850a:	bf00      	nop
 800850c:	20002d48 	.word	0x20002d48
 8008510:	20002d34 	.word	0x20002d34
 8008514:	20002d54 	.word	0x20002d54
 8008518:	20002d4c 	.word	0x20002d4c
 800851c:	20002d40 	.word	0x20002d40
 8008520:	20002d44 	.word	0x20002d44
 8008524:	20002d3c 	.word	0x20002d3c

08008528 <vPortFree>:
{
 8008528:	b510      	push	{r4, lr}
	if( pv != NULL )
 800852a:	4604      	mov	r4, r0
 800852c:	b390      	cbz	r0, 8008594 <vPortFree+0x6c>
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
 800852e:	4a1a      	ldr	r2, [pc, #104]	@ (8008598 <vPortFree+0x70>)
 8008530:	f850 3c04 	ldr.w	r3, [r0, #-4]
 8008534:	6812      	ldr	r2, [r2, #0]
 8008536:	4213      	tst	r3, r2
 8008538:	d108      	bne.n	800854c <vPortFree+0x24>
 800853a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800853e:	f383 8811 	msr	BASEPRI, r3
 8008542:	f3bf 8f6f 	isb	sy
 8008546:	f3bf 8f4f 	dsb	sy
 800854a:	e7fe      	b.n	800854a <vPortFree+0x22>
		configASSERT( pxLink->pxNextFreeBlock == NULL );
 800854c:	f850 1c08 	ldr.w	r1, [r0, #-8]
 8008550:	b141      	cbz	r1, 8008564 <vPortFree+0x3c>
 8008552:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008556:	f383 8811 	msr	BASEPRI, r3
 800855a:	f3bf 8f6f 	isb	sy
 800855e:	f3bf 8f4f 	dsb	sy
 8008562:	e7fe      	b.n	8008562 <vPortFree+0x3a>
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 8008564:	ea23 0302 	bic.w	r3, r3, r2
 8008568:	f840 3c04 	str.w	r3, [r0, #-4]
				vTaskSuspendAll();
 800856c:	f001 f91a 	bl	80097a4 <vTaskSuspendAll>
					xFreeBytesRemaining += pxLink->xBlockSize;
 8008570:	4a0a      	ldr	r2, [pc, #40]	@ (800859c <vPortFree+0x74>)
 8008572:	f854 3c04 	ldr.w	r3, [r4, #-4]
 8008576:	6811      	ldr	r1, [r2, #0]
					prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 8008578:	f1a4 0008 	sub.w	r0, r4, #8
					xFreeBytesRemaining += pxLink->xBlockSize;
 800857c:	440b      	add	r3, r1
 800857e:	6013      	str	r3, [r2, #0]
					prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 8008580:	f7ff ff14 	bl	80083ac <prvInsertBlockIntoFreeList>
					xNumberOfSuccessfulFrees++;
 8008584:	4a06      	ldr	r2, [pc, #24]	@ (80085a0 <vPortFree+0x78>)
 8008586:	6813      	ldr	r3, [r2, #0]
}
 8008588:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
					xNumberOfSuccessfulFrees++;
 800858c:	3301      	adds	r3, #1
 800858e:	6013      	str	r3, [r2, #0]
				( void ) xTaskResumeAll();
 8008590:	f001 b9ac 	b.w	80098ec <xTaskResumeAll>
}
 8008594:	bd10      	pop	{r4, pc}
 8008596:	bf00      	nop
 8008598:	20002d34 	.word	0x20002d34
 800859c:	20002d44 	.word	0x20002d44
 80085a0:	20002d38 	.word	0x20002d38

080085a4 <vListInitialise>:
void vListInitialise( List_t * const pxList )
{
	/* The list structure contains a list item which is used to mark the
	end of the list.  To initialise the list the list end is inserted
	as the only list entry. */
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 80085a4:	f100 0308 	add.w	r3, r0, #8

	/* The list end value is the highest possible value in the list to
	ensure it remains at the end of the list. */
	pxList->xListEnd.xItemValue = portMAX_DELAY;
 80085a8:	f04f 32ff 	mov.w	r2, #4294967295

	/* The list end next and previous pointers point to itself so we know
	when the list is empty. */
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 80085ac:	e9c0 2302 	strd	r2, r3, [r0, #8]
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 80085b0:	6043      	str	r3, [r0, #4]
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 80085b2:	6103      	str	r3, [r0, #16]

	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
 80085b4:	2300      	movs	r3, #0
 80085b6:	6003      	str	r3, [r0, #0]

	/* Write known values into the list if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_LIST_INTEGRITY_CHECK_1_VALUE( pxList );
	listSET_LIST_INTEGRITY_CHECK_2_VALUE( pxList );
}
 80085b8:	4770      	bx	lr

080085ba <vListInitialiseItem>:
/*-----------------------------------------------------------*/

void vListInitialiseItem( ListItem_t * const pxItem )
{
	/* Make sure the list item is not recorded as being on a list. */
	pxItem->pxContainer = NULL;
 80085ba:	2300      	movs	r3, #0
 80085bc:	6103      	str	r3, [r0, #16]

	/* Write known values into the list item if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
	listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
}
 80085be:	4770      	bx	lr

080085c0 <vListInsertEnd>:
/*-----------------------------------------------------------*/

void vListInsertEnd( List_t * const pxList, ListItem_t * const pxNewListItem )
{
ListItem_t * const pxIndex = pxList->pxIndex;
 80085c0:	6843      	ldr	r3, [r0, #4]
	listTEST_LIST_ITEM_INTEGRITY( pxNewListItem );

	/* Insert a new list item into pxList, but rather than sort the list,
	makes the new list item the last item to be removed by a call to
	listGET_OWNER_OF_NEXT_ENTRY(). */
	pxNewListItem->pxNext = pxIndex;
 80085c2:	604b      	str	r3, [r1, #4]
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
 80085c4:	689a      	ldr	r2, [r3, #8]
 80085c6:	608a      	str	r2, [r1, #8]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	pxIndex->pxPrevious->pxNext = pxNewListItem;
 80085c8:	6051      	str	r1, [r2, #4]
	pxIndex->pxPrevious = pxNewListItem;
 80085ca:	6099      	str	r1, [r3, #8]

	/* Remember which list the item is in. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 80085cc:	6803      	ldr	r3, [r0, #0]
	pxNewListItem->pxContainer = pxList;
 80085ce:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 80085d0:	3301      	adds	r3, #1
 80085d2:	6003      	str	r3, [r0, #0]
}
 80085d4:	4770      	bx	lr

080085d6 <vListInsert>:
/*-----------------------------------------------------------*/

void vListInsert( List_t * const pxList, ListItem_t * const pxNewListItem )
{
 80085d6:	b530      	push	{r4, r5, lr}
ListItem_t *pxIterator;
const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
 80085d8:	680c      	ldr	r4, [r1, #0]
	new list item should be placed after it.  This ensures that TCBs which are
	stored in ready lists (all of which have the same xItemValue value) get a
	share of the CPU.  However, if the xItemValue is the same as the back marker
	the iteration loop below will not end.  Therefore the value is checked
	first, and the algorithm slightly modified if necessary. */
	if( xValueOfInsertion == portMAX_DELAY )
 80085da:	1c63      	adds	r3, r4, #1
 80085dc:	d10a      	bne.n	80085f4 <vListInsert+0x1e>
	{
		pxIterator = pxList->xListEnd.pxPrevious;
 80085de:	6903      	ldr	r3, [r0, #16]
			/* There is nothing to do here, just iterating to the wanted
			insertion position. */
		}
	}

	pxNewListItem->pxNext = pxIterator->pxNext;
 80085e0:	685a      	ldr	r2, [r3, #4]
 80085e2:	604a      	str	r2, [r1, #4]
	pxNewListItem->pxNext->pxPrevious = pxNewListItem;
 80085e4:	6091      	str	r1, [r2, #8]
	pxNewListItem->pxPrevious = pxIterator;
 80085e6:	608b      	str	r3, [r1, #8]
	pxIterator->pxNext = pxNewListItem;
 80085e8:	6059      	str	r1, [r3, #4]

	/* Remember which list the item is in.  This allows fast removal of the
	item later. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 80085ea:	6803      	ldr	r3, [r0, #0]
	pxNewListItem->pxContainer = pxList;
 80085ec:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 80085ee:	3301      	adds	r3, #1
 80085f0:	6003      	str	r3, [r0, #0]
}
 80085f2:	bd30      	pop	{r4, r5, pc}
		for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValueOfInsertion; pxIterator = pxIterator->pxNext ) /*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. *//*lint !e440 The iterator moves to a different value, not xValueOfInsertion. */
 80085f4:	f100 0208 	add.w	r2, r0, #8
 80085f8:	4613      	mov	r3, r2
 80085fa:	6852      	ldr	r2, [r2, #4]
 80085fc:	6815      	ldr	r5, [r2, #0]
 80085fe:	42a5      	cmp	r5, r4
 8008600:	d9fa      	bls.n	80085f8 <vListInsert+0x22>
 8008602:	e7ed      	b.n	80085e0 <vListInsert+0xa>

08008604 <uxListRemove>:
{
/* The list item knows which list it is in.  Obtain the list from the list
item. */
List_t * const pxList = pxItemToRemove->pxContainer;

	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 8008604:	e9d0 1201 	ldrd	r1, r2, [r0, #4]
List_t * const pxList = pxItemToRemove->pxContainer;
 8008608:	6903      	ldr	r3, [r0, #16]
	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 800860a:	608a      	str	r2, [r1, #8]
	pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
 800860c:	6051      	str	r1, [r2, #4]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	/* Make sure the index is left pointing to a valid item. */
	if( pxList->pxIndex == pxItemToRemove )
 800860e:	6859      	ldr	r1, [r3, #4]
 8008610:	4281      	cmp	r1, r0
	{
		pxList->pxIndex = pxItemToRemove->pxPrevious;
 8008612:	bf08      	it	eq
 8008614:	605a      	streq	r2, [r3, #4]
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}

	pxItemToRemove->pxContainer = NULL;
 8008616:	2200      	movs	r2, #0
 8008618:	6102      	str	r2, [r0, #16]
	( pxList->uxNumberOfItems )--;
 800861a:	681a      	ldr	r2, [r3, #0]
 800861c:	3a01      	subs	r2, #1
 800861e:	601a      	str	r2, [r3, #0]

	return pxList->uxNumberOfItems;
 8008620:	6818      	ldr	r0, [r3, #0]
}
 8008622:	4770      	bx	lr

08008624 <prvPortStartFirstTask>:
{
	/* Start the first task.  This also clears the bit that indicates the FPU is
	in use in case the FPU was used before the scheduler was started - which
	would otherwise result in the unnecessary leaving of space in the SVC stack
	for lazy saving of FPU registers. */
	__asm volatile(
 8008624:	4808      	ldr	r0, [pc, #32]	@ (8008648 <prvPortStartFirstTask+0x24>)
 8008626:	6800      	ldr	r0, [r0, #0]
 8008628:	6800      	ldr	r0, [r0, #0]
 800862a:	f380 8808 	msr	MSP, r0
 800862e:	f04f 0000 	mov.w	r0, #0
 8008632:	f380 8814 	msr	CONTROL, r0
 8008636:	b662      	cpsie	i
 8008638:	b661      	cpsie	f
 800863a:	f3bf 8f4f 	dsb	sy
 800863e:	f3bf 8f6f 	isb	sy
 8008642:	df00      	svc	0
 8008644:	bf00      	nop
					" dsb					\n"
					" isb					\n"
					" svc 0					\n" /* System call to start first task. */
					" nop					\n"
				);
}
 8008646:	0000      	.short	0x0000
 8008648:	e000ed08 	.word	0xe000ed08

0800864c <vPortEnableVFP>:
/*-----------------------------------------------------------*/

/* This is a naked function. */
static void vPortEnableVFP( void )
{
	__asm volatile
 800864c:	f8df 000c 	ldr.w	r0, [pc, #12]	@ 800865c <vPortEnableVFP+0x10>
 8008650:	6801      	ldr	r1, [r0, #0]
 8008652:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 8008656:	6001      	str	r1, [r0, #0]
 8008658:	4770      	bx	lr
		"								\n"
		"	orr r1, r1, #( 0xf << 20 )	\n" /* Enable CP10 and CP11 coprocessors, then save back. */
		"	str r1, [r0]				\n"
		"	bx r14						"
	);
}
 800865a:	0000      	.short	0x0000
 800865c:	e000ed88 	.word	0xe000ed88

08008660 <prvTaskExitError>:
{
 8008660:	b082      	sub	sp, #8
volatile uint32_t ulDummy = 0;
 8008662:	2300      	movs	r3, #0
 8008664:	9301      	str	r3, [sp, #4]
	configASSERT( uxCriticalNesting == ~0UL );
 8008666:	4b0d      	ldr	r3, [pc, #52]	@ (800869c <prvTaskExitError+0x3c>)
 8008668:	681b      	ldr	r3, [r3, #0]
 800866a:	3301      	adds	r3, #1
 800866c:	d008      	beq.n	8008680 <prvTaskExitError+0x20>
 800866e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008672:	f383 8811 	msr	BASEPRI, r3
 8008676:	f3bf 8f6f 	isb	sy
 800867a:	f3bf 8f4f 	dsb	sy
 800867e:	e7fe      	b.n	800867e <prvTaskExitError+0x1e>
 8008680:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008684:	f383 8811 	msr	BASEPRI, r3
 8008688:	f3bf 8f6f 	isb	sy
 800868c:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
 8008690:	9b01      	ldr	r3, [sp, #4]
 8008692:	2b00      	cmp	r3, #0
 8008694:	d0fc      	beq.n	8008690 <prvTaskExitError+0x30>
}
 8008696:	b002      	add	sp, #8
 8008698:	4770      	bx	lr
 800869a:	bf00      	nop
 800869c:	200000d0 	.word	0x200000d0

080086a0 <pxPortInitialiseStack>:
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
 80086a0:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
 80086a4:	f840 3c04 	str.w	r3, [r0, #-4]
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
 80086a8:	4b07      	ldr	r3, [pc, #28]	@ (80086c8 <pxPortInitialiseStack+0x28>)
 80086aa:	f840 3c0c 	str.w	r3, [r0, #-12]
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 80086ae:	f021 0101 	bic.w	r1, r1, #1
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 80086b2:	f06f 0302 	mvn.w	r3, #2
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 80086b6:	f840 1c08 	str.w	r1, [r0, #-8]
	*pxTopOfStack = ( StackType_t ) pvParameters;	/* R0 */
 80086ba:	f840 2c20 	str.w	r2, [r0, #-32]
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 80086be:	f840 3c24 	str.w	r3, [r0, #-36]
}
 80086c2:	3844      	subs	r0, #68	@ 0x44
 80086c4:	4770      	bx	lr
 80086c6:	bf00      	nop
 80086c8:	08008661 	.word	0x08008661
 80086cc:	00000000 	.word	0x00000000

080086d0 <SVC_Handler>:
	__asm volatile (
 80086d0:	4b07      	ldr	r3, [pc, #28]	@ (80086f0 <pxCurrentTCBConst2>)
 80086d2:	6819      	ldr	r1, [r3, #0]
 80086d4:	6808      	ldr	r0, [r1, #0]
 80086d6:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80086da:	f380 8809 	msr	PSP, r0
 80086de:	f3bf 8f6f 	isb	sy
 80086e2:	f04f 0000 	mov.w	r0, #0
 80086e6:	f380 8811 	msr	BASEPRI, r0
 80086ea:	4770      	bx	lr
 80086ec:	f3af 8000 	nop.w

080086f0 <pxCurrentTCBConst2>:
 80086f0:	20013294 	.word	0x20013294

080086f4 <vPortEnterCritical>:
 80086f4:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80086f8:	f383 8811 	msr	BASEPRI, r3
 80086fc:	f3bf 8f6f 	isb	sy
 8008700:	f3bf 8f4f 	dsb	sy
	uxCriticalNesting++;
 8008704:	4a0a      	ldr	r2, [pc, #40]	@ (8008730 <vPortEnterCritical+0x3c>)
 8008706:	6813      	ldr	r3, [r2, #0]
 8008708:	3301      	adds	r3, #1
	if( uxCriticalNesting == 1 )
 800870a:	2b01      	cmp	r3, #1
	uxCriticalNesting++;
 800870c:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 1 )
 800870e:	d10e      	bne.n	800872e <vPortEnterCritical+0x3a>
		configASSERT( ( portNVIC_INT_CTRL_REG & portVECTACTIVE_MASK ) == 0 );
 8008710:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8008714:	f8d3 3d04 	ldr.w	r3, [r3, #3332]	@ 0xd04
 8008718:	b2db      	uxtb	r3, r3
 800871a:	b143      	cbz	r3, 800872e <vPortEnterCritical+0x3a>
 800871c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008720:	f383 8811 	msr	BASEPRI, r3
 8008724:	f3bf 8f6f 	isb	sy
 8008728:	f3bf 8f4f 	dsb	sy
 800872c:	e7fe      	b.n	800872c <vPortEnterCritical+0x38>
}
 800872e:	4770      	bx	lr
 8008730:	200000d0 	.word	0x200000d0

08008734 <vPortExitCritical>:
	configASSERT( uxCriticalNesting );
 8008734:	4a08      	ldr	r2, [pc, #32]	@ (8008758 <vPortExitCritical+0x24>)
 8008736:	6813      	ldr	r3, [r2, #0]
 8008738:	b943      	cbnz	r3, 800874c <vPortExitCritical+0x18>
 800873a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800873e:	f383 8811 	msr	BASEPRI, r3
 8008742:	f3bf 8f6f 	isb	sy
 8008746:	f3bf 8f4f 	dsb	sy
 800874a:	e7fe      	b.n	800874a <vPortExitCritical+0x16>
	uxCriticalNesting--;
 800874c:	3b01      	subs	r3, #1
 800874e:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 0 )
 8008750:	b90b      	cbnz	r3, 8008756 <vPortExitCritical+0x22>
}
/*-----------------------------------------------------------*/

portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
{
	__asm volatile
 8008752:	f383 8811 	msr	BASEPRI, r3
}
 8008756:	4770      	bx	lr
 8008758:	200000d0 	.word	0x200000d0
 800875c:	00000000 	.word	0x00000000

08008760 <PendSV_Handler>:
	__asm volatile
 8008760:	f3ef 8009 	mrs	r0, PSP
 8008764:	f3bf 8f6f 	isb	sy
 8008768:	4b15      	ldr	r3, [pc, #84]	@ (80087c0 <pxCurrentTCBConst>)
 800876a:	681a      	ldr	r2, [r3, #0]
 800876c:	f01e 0f10 	tst.w	lr, #16
 8008770:	bf08      	it	eq
 8008772:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
 8008776:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800877a:	6010      	str	r0, [r2, #0]
 800877c:	e92d 0009 	stmdb	sp!, {r0, r3}
 8008780:	f04f 0050 	mov.w	r0, #80	@ 0x50
 8008784:	f380 8811 	msr	BASEPRI, r0
 8008788:	f3bf 8f4f 	dsb	sy
 800878c:	f3bf 8f6f 	isb	sy
 8008790:	f001 f944 	bl	8009a1c <vTaskSwitchContext>
 8008794:	f04f 0000 	mov.w	r0, #0
 8008798:	f380 8811 	msr	BASEPRI, r0
 800879c:	bc09      	pop	{r0, r3}
 800879e:	6819      	ldr	r1, [r3, #0]
 80087a0:	6808      	ldr	r0, [r1, #0]
 80087a2:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80087a6:	f01e 0f10 	tst.w	lr, #16
 80087aa:	bf08      	it	eq
 80087ac:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
 80087b0:	f380 8809 	msr	PSP, r0
 80087b4:	f3bf 8f6f 	isb	sy
 80087b8:	4770      	bx	lr
 80087ba:	bf00      	nop
 80087bc:	f3af 8000 	nop.w

080087c0 <pxCurrentTCBConst>:
 80087c0:	20013294 	.word	0x20013294

080087c4 <xPortSysTickHandler>:
{
 80087c4:	b508      	push	{r3, lr}
	__asm volatile
 80087c6:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80087ca:	f383 8811 	msr	BASEPRI, r3
 80087ce:	f3bf 8f6f 	isb	sy
 80087d2:	f3bf 8f4f 	dsb	sy
		if( xTaskIncrementTick() != pdFALSE )
 80087d6:	f000 fff3 	bl	80097c0 <xTaskIncrementTick>
 80087da:	b128      	cbz	r0, 80087e8 <xPortSysTickHandler+0x24>
			portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
 80087dc:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 80087e0:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 80087e4:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
	__asm volatile
 80087e8:	2300      	movs	r3, #0
 80087ea:	f383 8811 	msr	BASEPRI, r3
}
 80087ee:	bd08      	pop	{r3, pc}

080087f0 <vPortSetupTimerInterrupt>:
	portNVIC_SYSTICK_CTRL_REG = 0UL;
 80087f0:	f04f 22e0 	mov.w	r2, #3758153728	@ 0xe000e000
 80087f4:	2300      	movs	r3, #0
 80087f6:	6113      	str	r3, [r2, #16]
	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
 80087f8:	6193      	str	r3, [r2, #24]
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 80087fa:	4b05      	ldr	r3, [pc, #20]	@ (8008810 <vPortSetupTimerInterrupt+0x20>)
 80087fc:	f44f 717a 	mov.w	r1, #1000	@ 0x3e8
 8008800:	681b      	ldr	r3, [r3, #0]
 8008802:	fbb3 f3f1 	udiv	r3, r3, r1
 8008806:	3b01      	subs	r3, #1
 8008808:	6153      	str	r3, [r2, #20]
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
 800880a:	2307      	movs	r3, #7
 800880c:	6113      	str	r3, [r2, #16]
}
 800880e:	4770      	bx	lr
 8008810:	200000c4 	.word	0x200000c4

08008814 <xPortStartScheduler>:
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 8008814:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
{
 8008818:	b537      	push	{r0, r1, r2, r4, r5, lr}
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 800881a:	f8d3 1d00 	ldr.w	r1, [r3, #3328]	@ 0xd00
 800881e:	4a38      	ldr	r2, [pc, #224]	@ (8008900 <xPortStartScheduler+0xec>)
 8008820:	4291      	cmp	r1, r2
 8008822:	d108      	bne.n	8008836 <xPortStartScheduler+0x22>
	__asm volatile
 8008824:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008828:	f383 8811 	msr	BASEPRI, r3
 800882c:	f3bf 8f6f 	isb	sy
 8008830:	f3bf 8f4f 	dsb	sy
 8008834:	e7fe      	b.n	8008834 <xPortStartScheduler+0x20>
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
 8008836:	f8d3 2d00 	ldr.w	r2, [r3, #3328]	@ 0xd00
 800883a:	4b32      	ldr	r3, [pc, #200]	@ (8008904 <xPortStartScheduler+0xf0>)
 800883c:	429a      	cmp	r2, r3
 800883e:	d108      	bne.n	8008852 <xPortStartScheduler+0x3e>
 8008840:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008844:	f383 8811 	msr	BASEPRI, r3
 8008848:	f3bf 8f6f 	isb	sy
 800884c:	f3bf 8f4f 	dsb	sy
 8008850:	e7fe      	b.n	8008850 <xPortStartScheduler+0x3c>
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 8008852:	4b2d      	ldr	r3, [pc, #180]	@ (8008908 <xPortStartScheduler+0xf4>)
 8008854:	781a      	ldrb	r2, [r3, #0]
 8008856:	b2d2      	uxtb	r2, r2
 8008858:	9201      	str	r2, [sp, #4]
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
 800885a:	22ff      	movs	r2, #255	@ 0xff
 800885c:	701a      	strb	r2, [r3, #0]
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 800885e:	781b      	ldrb	r3, [r3, #0]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 8008860:	4a2a      	ldr	r2, [pc, #168]	@ (800890c <xPortStartScheduler+0xf8>)
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 8008862:	b2db      	uxtb	r3, r3
 8008864:	f88d 3003 	strb.w	r3, [sp, #3]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 8008868:	f89d 3003 	ldrb.w	r3, [sp, #3]
 800886c:	f003 0350 	and.w	r3, r3, #80	@ 0x50
 8008870:	7013      	strb	r3, [r2, #0]
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 8008872:	4a27      	ldr	r2, [pc, #156]	@ (8008910 <xPortStartScheduler+0xfc>)
 8008874:	2307      	movs	r3, #7
 8008876:	6013      	str	r3, [r2, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 8008878:	f89d 1003 	ldrb.w	r1, [sp, #3]
			ulMaxPRIGROUPValue--;
 800887c:	6813      	ldr	r3, [r2, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 800887e:	0609      	lsls	r1, r1, #24
 8008880:	d40a      	bmi.n	8008898 <xPortStartScheduler+0x84>
			configASSERT( ( portMAX_PRIGROUP_BITS - ulMaxPRIGROUPValue ) == configPRIO_BITS );
 8008882:	2b03      	cmp	r3, #3
 8008884:	d011      	beq.n	80088aa <xPortStartScheduler+0x96>
 8008886:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800888a:	f383 8811 	msr	BASEPRI, r3
 800888e:	f3bf 8f6f 	isb	sy
 8008892:	f3bf 8f4f 	dsb	sy
 8008896:	e7fe      	b.n	8008896 <xPortStartScheduler+0x82>
			ulMaxPRIGROUPValue--;
 8008898:	3b01      	subs	r3, #1
 800889a:	6013      	str	r3, [r2, #0]
			ucMaxPriorityValue <<= ( uint8_t ) 0x01;
 800889c:	f89d 3003 	ldrb.w	r3, [sp, #3]
 80088a0:	005b      	lsls	r3, r3, #1
 80088a2:	b2db      	uxtb	r3, r3
 80088a4:	f88d 3003 	strb.w	r3, [sp, #3]
 80088a8:	e7e6      	b.n	8008878 <xPortStartScheduler+0x64>
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
 80088aa:	f44f 7340 	mov.w	r3, #768	@ 0x300
 80088ae:	6013      	str	r3, [r2, #0]
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 80088b0:	9b01      	ldr	r3, [sp, #4]
 80088b2:	4a15      	ldr	r2, [pc, #84]	@ (8008908 <xPortStartScheduler+0xf4>)
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 80088b4:	f04f 24e0 	mov.w	r4, #3758153728	@ 0xe000e000
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 80088b8:	b2db      	uxtb	r3, r3
 80088ba:	7013      	strb	r3, [r2, #0]
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 80088bc:	f8d4 3d20 	ldr.w	r3, [r4, #3360]	@ 0xd20
 80088c0:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
 80088c4:	f8c4 3d20 	str.w	r3, [r4, #3360]	@ 0xd20
	portNVIC_SYSPRI2_REG |= portNVIC_SYSTICK_PRI;
 80088c8:	f8d4 3d20 	ldr.w	r3, [r4, #3360]	@ 0xd20
 80088cc:	f043 4370 	orr.w	r3, r3, #4026531840	@ 0xf0000000
 80088d0:	f8c4 3d20 	str.w	r3, [r4, #3360]	@ 0xd20
	vPortSetupTimerInterrupt();
 80088d4:	f7ff ff8c 	bl	80087f0 <vPortSetupTimerInterrupt>
	uxCriticalNesting = 0;
 80088d8:	4b0e      	ldr	r3, [pc, #56]	@ (8008914 <xPortStartScheduler+0x100>)
 80088da:	2500      	movs	r5, #0
 80088dc:	601d      	str	r5, [r3, #0]
	vPortEnableVFP();
 80088de:	f7ff feb5 	bl	800864c <vPortEnableVFP>
	*( portFPCCR ) |= portASPEN_AND_LSPEN_BITS;
 80088e2:	f8d4 3f34 	ldr.w	r3, [r4, #3892]	@ 0xf34
 80088e6:	f043 4340 	orr.w	r3, r3, #3221225472	@ 0xc0000000
 80088ea:	f8c4 3f34 	str.w	r3, [r4, #3892]	@ 0xf34
	prvPortStartFirstTask();
 80088ee:	f7ff fe99 	bl	8008624 <prvPortStartFirstTask>
	vTaskSwitchContext();
 80088f2:	f001 f893 	bl	8009a1c <vTaskSwitchContext>
	prvTaskExitError();
 80088f6:	f7ff feb3 	bl	8008660 <prvTaskExitError>
}
 80088fa:	4628      	mov	r0, r5
 80088fc:	b003      	add	sp, #12
 80088fe:	bd30      	pop	{r4, r5, pc}
 8008900:	410fc271 	.word	0x410fc271
 8008904:	410fc270 	.word	0x410fc270
 8008908:	e000e400 	.word	0xe000e400
 800890c:	20012d58 	.word	0x20012d58
 8008910:	20012d54 	.word	0x20012d54
 8008914:	200000d0 	.word	0x200000d0

08008918 <vPortValidateInterruptPriority>:
	{
	uint32_t ulCurrentInterrupt;
	uint8_t ucCurrentPriority;

		/* Obtain the number of the currently executing interrupt. */
		__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 8008918:	f3ef 8305 	mrs	r3, IPSR

		/* Is the interrupt number a user defined interrupt? */
		if( ulCurrentInterrupt >= portFIRST_USER_INTERRUPT_NUMBER )
 800891c:	2b0f      	cmp	r3, #15
 800891e:	d90e      	bls.n	800893e <vPortValidateInterruptPriority+0x26>
		{
			/* Look up the interrupt's priority. */
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
 8008920:	4a11      	ldr	r2, [pc, #68]	@ (8008968 <vPortValidateInterruptPriority+0x50>)
 8008922:	5c9b      	ldrb	r3, [r3, r2]
			interrupt entry is as fast and simple as possible.

			The following links provide detailed information:
			http://www.freertos.org/RTOS-Cortex-M3-M4.html
			http://www.freertos.org/FAQHelp.html */
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
 8008924:	4a11      	ldr	r2, [pc, #68]	@ (800896c <vPortValidateInterruptPriority+0x54>)
 8008926:	7812      	ldrb	r2, [r2, #0]
 8008928:	429a      	cmp	r2, r3
 800892a:	d908      	bls.n	800893e <vPortValidateInterruptPriority+0x26>
 800892c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008930:	f383 8811 	msr	BASEPRI, r3
 8008934:	f3bf 8f6f 	isb	sy
 8008938:	f3bf 8f4f 	dsb	sy
 800893c:	e7fe      	b.n	800893c <vPortValidateInterruptPriority+0x24>
		configuration then the correct setting can be achieved on all Cortex-M
		devices by calling NVIC_SetPriorityGrouping( 0 ); before starting the
		scheduler.  Note however that some vendor specific peripheral libraries
		assume a non-zero priority group setting, in which cases using a value
		of zero will result in unpredictable behaviour. */
		configASSERT( ( portAIRCR_REG & portPRIORITY_GROUP_MASK ) <= ulMaxPRIGROUPValue );
 800893e:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8008942:	4a0b      	ldr	r2, [pc, #44]	@ (8008970 <vPortValidateInterruptPriority+0x58>)
 8008944:	f8d3 3d0c 	ldr.w	r3, [r3, #3340]	@ 0xd0c
 8008948:	6812      	ldr	r2, [r2, #0]
 800894a:	f403 63e0 	and.w	r3, r3, #1792	@ 0x700
 800894e:	4293      	cmp	r3, r2
 8008950:	d908      	bls.n	8008964 <vPortValidateInterruptPriority+0x4c>
 8008952:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008956:	f383 8811 	msr	BASEPRI, r3
 800895a:	f3bf 8f6f 	isb	sy
 800895e:	f3bf 8f4f 	dsb	sy
 8008962:	e7fe      	b.n	8008962 <vPortValidateInterruptPriority+0x4a>
	}
 8008964:	4770      	bx	lr
 8008966:	bf00      	nop
 8008968:	e000e3f0 	.word	0xe000e3f0
 800896c:	20012d58 	.word	0x20012d58
 8008970:	20012d54 	.word	0x20012d54

08008974 <prvIsQueueEmpty>:
	taskEXIT_CRITICAL();
}
/*-----------------------------------------------------------*/

static BaseType_t prvIsQueueEmpty( const Queue_t *pxQueue )
{
 8008974:	b510      	push	{r4, lr}
 8008976:	4604      	mov	r4, r0
BaseType_t xReturn;

	taskENTER_CRITICAL();
 8008978:	f7ff febc 	bl	80086f4 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 800897c:	6ba4      	ldr	r4, [r4, #56]	@ 0x38
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 800897e:	f7ff fed9 	bl	8008734 <vPortExitCritical>

	return xReturn;
}
 8008982:	fab4 f084 	clz	r0, r4
 8008986:	0940      	lsrs	r0, r0, #5
 8008988:	bd10      	pop	{r4, pc}

0800898a <prvCopyDataToQueue>:
{
 800898a:	b570      	push	{r4, r5, r6, lr}
 800898c:	4616      	mov	r6, r2
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 800898e:	6c02      	ldr	r2, [r0, #64]	@ 0x40
	uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 8008990:	6b85      	ldr	r5, [r0, #56]	@ 0x38
{
 8008992:	4604      	mov	r4, r0
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 8008994:	b942      	cbnz	r2, 80089a8 <prvCopyDataToQueue+0x1e>
			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 8008996:	6806      	ldr	r6, [r0, #0]
 8008998:	b99e      	cbnz	r6, 80089c2 <prvCopyDataToQueue+0x38>
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
 800899a:	6880      	ldr	r0, [r0, #8]
 800899c:	f001 f98c 	bl	8009cb8 <xTaskPriorityDisinherit>
				pxQueue->u.xSemaphore.xMutexHolder = NULL;
 80089a0:	60a6      	str	r6, [r4, #8]
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 80089a2:	3501      	adds	r5, #1
 80089a4:	63a5      	str	r5, [r4, #56]	@ 0x38
}
 80089a6:	bd70      	pop	{r4, r5, r6, pc}
	else if( xPosition == queueSEND_TO_BACK )
 80089a8:	b96e      	cbnz	r6, 80089c6 <prvCopyDataToQueue+0x3c>
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 80089aa:	6840      	ldr	r0, [r0, #4]
 80089ac:	f01a fcd1 	bl	8023352 <memcpy>
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 80089b0:	6863      	ldr	r3, [r4, #4]
 80089b2:	6c22      	ldr	r2, [r4, #64]	@ 0x40
 80089b4:	4413      	add	r3, r2
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 80089b6:	68a2      	ldr	r2, [r4, #8]
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 80089b8:	6063      	str	r3, [r4, #4]
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 80089ba:	4293      	cmp	r3, r2
			pxQueue->pcWriteTo = pxQueue->pcHead;
 80089bc:	bf24      	itt	cs
 80089be:	6823      	ldrcs	r3, [r4, #0]
 80089c0:	6063      	strcs	r3, [r4, #4]
BaseType_t xReturn = pdFALSE;
 80089c2:	2000      	movs	r0, #0
 80089c4:	e7ed      	b.n	80089a2 <prvCopyDataToQueue+0x18>
		( void ) memcpy( ( void * ) pxQueue->u.xQueue.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e9087 !e418 MISRA exception as the casts are only redundant for some ports.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes.  Assert checks null pointer only used when length is 0. */
 80089c6:	68c0      	ldr	r0, [r0, #12]
 80089c8:	f01a fcc3 	bl	8023352 <memcpy>
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 80089cc:	6c22      	ldr	r2, [r4, #64]	@ 0x40
 80089ce:	68e3      	ldr	r3, [r4, #12]
 80089d0:	4251      	negs	r1, r2
 80089d2:	1a9b      	subs	r3, r3, r2
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 80089d4:	6822      	ldr	r2, [r4, #0]
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 80089d6:	60e3      	str	r3, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 80089d8:	4293      	cmp	r3, r2
			pxQueue->u.xQueue.pcReadFrom = ( pxQueue->u.xQueue.pcTail - pxQueue->uxItemSize );
 80089da:	bf3e      	ittt	cc
 80089dc:	68a3      	ldrcc	r3, [r4, #8]
 80089de:	185b      	addcc	r3, r3, r1
 80089e0:	60e3      	strcc	r3, [r4, #12]
		if( xPosition == queueOVERWRITE )
 80089e2:	2e02      	cmp	r6, #2
 80089e4:	d1ed      	bne.n	80089c2 <prvCopyDataToQueue+0x38>
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 80089e6:	b10d      	cbz	r5, 80089ec <prvCopyDataToQueue+0x62>
				--uxMessagesWaiting;
 80089e8:	3d01      	subs	r5, #1
 80089ea:	e7ea      	b.n	80089c2 <prvCopyDataToQueue+0x38>
BaseType_t xReturn = pdFALSE;
 80089ec:	4628      	mov	r0, r5
 80089ee:	e7d8      	b.n	80089a2 <prvCopyDataToQueue+0x18>

080089f0 <prvCopyDataFromQueue>:
{
 80089f0:	4603      	mov	r3, r0
 80089f2:	b410      	push	{r4}
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 80089f4:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
{
 80089f6:	4608      	mov	r0, r1
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 80089f8:	b16a      	cbz	r2, 8008a16 <prvCopyDataFromQueue+0x26>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 80089fa:	68dc      	ldr	r4, [r3, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 80089fc:	6899      	ldr	r1, [r3, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 80089fe:	4414      	add	r4, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 8008a00:	428c      	cmp	r4, r1
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 8008a02:	bf28      	it	cs
 8008a04:	6819      	ldrcs	r1, [r3, #0]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8008a06:	60dc      	str	r4, [r3, #12]
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 8008a08:	bf28      	it	cs
 8008a0a:	60d9      	strcs	r1, [r3, #12]
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 8008a0c:	68d9      	ldr	r1, [r3, #12]
}
 8008a0e:	f85d 4b04 	ldr.w	r4, [sp], #4
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 8008a12:	f01a bc9e 	b.w	8023352 <memcpy>
}
 8008a16:	f85d 4b04 	ldr.w	r4, [sp], #4
 8008a1a:	4770      	bx	lr

08008a1c <prvUnlockQueue>:
{
 8008a1c:	b570      	push	{r4, r5, r6, lr}
 8008a1e:	4604      	mov	r4, r0
	taskENTER_CRITICAL();
 8008a20:	f7ff fe68 	bl	80086f4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 8008a24:	f894 5045 	ldrb.w	r5, [r4, #69]	@ 0x45
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8008a28:	f104 0624 	add.w	r6, r4, #36	@ 0x24
		int8_t cTxLock = pxQueue->cTxLock;
 8008a2c:	b26d      	sxtb	r5, r5
		while( cTxLock > queueLOCKED_UNMODIFIED )
 8008a2e:	2d00      	cmp	r5, #0
 8008a30:	dd01      	ble.n	8008a36 <prvUnlockQueue+0x1a>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8008a32:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8008a34:	b9b3      	cbnz	r3, 8008a64 <prvUnlockQueue+0x48>
		pxQueue->cTxLock = queueUNLOCKED;
 8008a36:	23ff      	movs	r3, #255	@ 0xff
 8008a38:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
	taskEXIT_CRITICAL();
 8008a3c:	f7ff fe7a 	bl	8008734 <vPortExitCritical>
	taskENTER_CRITICAL();
 8008a40:	f7ff fe58 	bl	80086f4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 8008a44:	f894 5044 	ldrb.w	r5, [r4, #68]	@ 0x44
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8008a48:	f104 0610 	add.w	r6, r4, #16
		int8_t cRxLock = pxQueue->cRxLock;
 8008a4c:	b26d      	sxtb	r5, r5
		while( cRxLock > queueLOCKED_UNMODIFIED )
 8008a4e:	2d00      	cmp	r5, #0
 8008a50:	dd01      	ble.n	8008a56 <prvUnlockQueue+0x3a>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8008a52:	6923      	ldr	r3, [r4, #16]
 8008a54:	b97b      	cbnz	r3, 8008a76 <prvUnlockQueue+0x5a>
		pxQueue->cRxLock = queueUNLOCKED;
 8008a56:	23ff      	movs	r3, #255	@ 0xff
 8008a58:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
}
 8008a5c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	taskEXIT_CRITICAL();
 8008a60:	f7ff be68 	b.w	8008734 <vPortExitCritical>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8008a64:	4630      	mov	r0, r6
 8008a66:	f001 f84b 	bl	8009b00 <xTaskRemoveFromEventList>
 8008a6a:	b108      	cbz	r0, 8008a70 <prvUnlockQueue+0x54>
						vTaskMissedYield();
 8008a6c:	f001 f8d0 	bl	8009c10 <vTaskMissedYield>
			--cTxLock;
 8008a70:	3d01      	subs	r5, #1
 8008a72:	b26d      	sxtb	r5, r5
 8008a74:	e7db      	b.n	8008a2e <prvUnlockQueue+0x12>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8008a76:	4630      	mov	r0, r6
 8008a78:	f001 f842 	bl	8009b00 <xTaskRemoveFromEventList>
 8008a7c:	b108      	cbz	r0, 8008a82 <prvUnlockQueue+0x66>
					vTaskMissedYield();
 8008a7e:	f001 f8c7 	bl	8009c10 <vTaskMissedYield>
				--cRxLock;
 8008a82:	3d01      	subs	r5, #1
 8008a84:	b26d      	sxtb	r5, r5
 8008a86:	e7e2      	b.n	8008a4e <prvUnlockQueue+0x32>

08008a88 <xQueueGenericReset>:
{
 8008a88:	b538      	push	{r3, r4, r5, lr}
 8008a8a:	460d      	mov	r5, r1
	configASSERT( pxQueue );
 8008a8c:	4604      	mov	r4, r0
 8008a8e:	b940      	cbnz	r0, 8008aa2 <xQueueGenericReset+0x1a>
 8008a90:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008a94:	f383 8811 	msr	BASEPRI, r3
 8008a98:	f3bf 8f6f 	isb	sy
 8008a9c:	f3bf 8f4f 	dsb	sy
 8008aa0:	e7fe      	b.n	8008aa0 <xQueueGenericReset+0x18>
	taskENTER_CRITICAL();
 8008aa2:	f7ff fe27 	bl	80086f4 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8008aa6:	e9d4 310f 	ldrd	r3, r1, [r4, #60]	@ 0x3c
 8008aaa:	6822      	ldr	r2, [r4, #0]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 8008aac:	6062      	str	r2, [r4, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8008aae:	434b      	muls	r3, r1
 8008ab0:	18d0      	adds	r0, r2, r3
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8008ab2:	1a5b      	subs	r3, r3, r1
 8008ab4:	441a      	add	r2, r3
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8008ab6:	60a0      	str	r0, [r4, #8]
		pxQueue->cRxLock = queueUNLOCKED;
 8008ab8:	23ff      	movs	r3, #255	@ 0xff
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 8008aba:	2000      	movs	r0, #0
 8008abc:	63a0      	str	r0, [r4, #56]	@ 0x38
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8008abe:	60e2      	str	r2, [r4, #12]
		pxQueue->cRxLock = queueUNLOCKED;
 8008ac0:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
		pxQueue->cTxLock = queueUNLOCKED;
 8008ac4:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
		if( xNewQueue == pdFALSE )
 8008ac8:	b9a5      	cbnz	r5, 8008af4 <xQueueGenericReset+0x6c>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8008aca:	6923      	ldr	r3, [r4, #16]
 8008acc:	b173      	cbz	r3, 8008aec <xQueueGenericReset+0x64>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8008ace:	f104 0010 	add.w	r0, r4, #16
 8008ad2:	f001 f815 	bl	8009b00 <xTaskRemoveFromEventList>
 8008ad6:	b148      	cbz	r0, 8008aec <xQueueGenericReset+0x64>
					queueYIELD_IF_USING_PREEMPTION();
 8008ad8:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8008adc:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8008ae0:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8008ae4:	f3bf 8f4f 	dsb	sy
 8008ae8:	f3bf 8f6f 	isb	sy
	taskEXIT_CRITICAL();
 8008aec:	f7ff fe22 	bl	8008734 <vPortExitCritical>
}
 8008af0:	2001      	movs	r0, #1
 8008af2:	bd38      	pop	{r3, r4, r5, pc}
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 8008af4:	f104 0010 	add.w	r0, r4, #16
 8008af8:	f7ff fd54 	bl	80085a4 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 8008afc:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 8008b00:	f7ff fd50 	bl	80085a4 <vListInitialise>
 8008b04:	e7f2      	b.n	8008aec <xQueueGenericReset+0x64>

08008b06 <xQueueGenericCreateStatic>:
	{
 8008b06:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8008b08:	460d      	mov	r5, r1
 8008b0a:	461c      	mov	r4, r3
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 8008b0c:	b940      	cbnz	r0, 8008b20 <xQueueGenericCreateStatic+0x1a>
 8008b0e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008b12:	f383 8811 	msr	BASEPRI, r3
 8008b16:	f3bf 8f6f 	isb	sy
 8008b1a:	f3bf 8f4f 	dsb	sy
 8008b1e:	e7fe      	b.n	8008b1e <xQueueGenericCreateStatic+0x18>
		configASSERT( pxStaticQueue != NULL );
 8008b20:	b943      	cbnz	r3, 8008b34 <xQueueGenericCreateStatic+0x2e>
 8008b22:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008b26:	f383 8811 	msr	BASEPRI, r3
 8008b2a:	f3bf 8f6f 	isb	sy
 8008b2e:	f3bf 8f4f 	dsb	sy
 8008b32:	e7fe      	b.n	8008b32 <xQueueGenericCreateStatic+0x2c>
		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
 8008b34:	b14a      	cbz	r2, 8008b4a <xQueueGenericCreateStatic+0x44>
 8008b36:	b991      	cbnz	r1, 8008b5e <xQueueGenericCreateStatic+0x58>
 8008b38:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008b3c:	f383 8811 	msr	BASEPRI, r3
 8008b40:	f3bf 8f6f 	isb	sy
 8008b44:	f3bf 8f4f 	dsb	sy
 8008b48:	e7fe      	b.n	8008b48 <xQueueGenericCreateStatic+0x42>
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 8008b4a:	b141      	cbz	r1, 8008b5e <xQueueGenericCreateStatic+0x58>
 8008b4c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008b50:	f383 8811 	msr	BASEPRI, r3
 8008b54:	f3bf 8f6f 	isb	sy
 8008b58:	f3bf 8f4f 	dsb	sy
 8008b5c:	e7fe      	b.n	8008b5c <xQueueGenericCreateStatic+0x56>
			volatile size_t xSize = sizeof( StaticQueue_t );
 8008b5e:	2350      	movs	r3, #80	@ 0x50
 8008b60:	9301      	str	r3, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
 8008b62:	9b01      	ldr	r3, [sp, #4]
 8008b64:	2b50      	cmp	r3, #80	@ 0x50
 8008b66:	d008      	beq.n	8008b7a <xQueueGenericCreateStatic+0x74>
 8008b68:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008b6c:	f383 8811 	msr	BASEPRI, r3
 8008b70:	f3bf 8f6f 	isb	sy
 8008b74:	f3bf 8f4f 	dsb	sy
 8008b78:	e7fe      	b.n	8008b78 <xQueueGenericCreateStatic+0x72>
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 8008b7a:	2101      	movs	r1, #1
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 8008b7c:	2d00      	cmp	r5, #0
 8008b7e:	bf08      	it	eq
 8008b80:	4622      	moveq	r2, r4
	pxNewQueue->uxItemSize = uxItemSize;
 8008b82:	e9c4 050f 	strd	r0, r5, [r4, #60]	@ 0x3c
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 8008b86:	f884 1046 	strb.w	r1, [r4, #70]	@ 0x46
 8008b8a:	6022      	str	r2, [r4, #0]
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 8008b8c:	4620      	mov	r0, r4
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 8008b8e:	9b01      	ldr	r3, [sp, #4]
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 8008b90:	f7ff ff7a 	bl	8008a88 <xQueueGenericReset>
		pxNewQueue->ucQueueType = ucQueueType;
 8008b94:	f89d 3018 	ldrb.w	r3, [sp, #24]
 8008b98:	f884 304c 	strb.w	r3, [r4, #76]	@ 0x4c
	}
 8008b9c:	4620      	mov	r0, r4
 8008b9e:	b003      	add	sp, #12
 8008ba0:	bd30      	pop	{r4, r5, pc}

08008ba2 <xQueueGenericCreate>:
	{
 8008ba2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8008ba4:	460d      	mov	r5, r1
 8008ba6:	4617      	mov	r7, r2
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 8008ba8:	4606      	mov	r6, r0
 8008baa:	b940      	cbnz	r0, 8008bbe <xQueueGenericCreate+0x1c>
 8008bac:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008bb0:	f383 8811 	msr	BASEPRI, r3
 8008bb4:	f3bf 8f6f 	isb	sy
 8008bb8:	f3bf 8f4f 	dsb	sy
 8008bbc:	e7fe      	b.n	8008bbc <xQueueGenericCreate+0x1a>
		xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8008bbe:	4348      	muls	r0, r1
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
 8008bc0:	3050      	adds	r0, #80	@ 0x50
 8008bc2:	f7ff fc19 	bl	80083f8 <pvPortMalloc>
		if( pxNewQueue != NULL )
 8008bc6:	4604      	mov	r4, r0
 8008bc8:	b170      	cbz	r0, 8008be8 <xQueueGenericCreate+0x46>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 8008bca:	2300      	movs	r3, #0
 8008bcc:	f880 3046 	strb.w	r3, [r0, #70]	@ 0x46
	if( uxItemSize == ( UBaseType_t ) 0 )
 8008bd0:	b165      	cbz	r5, 8008bec <xQueueGenericCreate+0x4a>
			pucQueueStorage += sizeof( Queue_t ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8008bd2:	f100 0350 	add.w	r3, r0, #80	@ 0x50
	pxNewQueue->uxItemSize = uxItemSize;
 8008bd6:	e9c4 650f 	strd	r6, r5, [r4, #60]	@ 0x3c
 8008bda:	6023      	str	r3, [r4, #0]
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 8008bdc:	2101      	movs	r1, #1
 8008bde:	4620      	mov	r0, r4
 8008be0:	f7ff ff52 	bl	8008a88 <xQueueGenericReset>
		pxNewQueue->ucQueueType = ucQueueType;
 8008be4:	f884 704c 	strb.w	r7, [r4, #76]	@ 0x4c
	}
 8008be8:	4620      	mov	r0, r4
 8008bea:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 8008bec:	4603      	mov	r3, r0
 8008bee:	e7f2      	b.n	8008bd6 <xQueueGenericCreate+0x34>

08008bf0 <xQueueCreateCountingSemaphoreStatic>:
	{
 8008bf0:	b513      	push	{r0, r1, r4, lr}
 8008bf2:	4613      	mov	r3, r2
 8008bf4:	460c      	mov	r4, r1
		configASSERT( uxMaxCount != 0 );
 8008bf6:	b940      	cbnz	r0, 8008c0a <xQueueCreateCountingSemaphoreStatic+0x1a>
 8008bf8:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008bfc:	f383 8811 	msr	BASEPRI, r3
 8008c00:	f3bf 8f6f 	isb	sy
 8008c04:	f3bf 8f4f 	dsb	sy
 8008c08:	e7fe      	b.n	8008c08 <xQueueCreateCountingSemaphoreStatic+0x18>
		configASSERT( uxInitialCount <= uxMaxCount );
 8008c0a:	4288      	cmp	r0, r1
 8008c0c:	d208      	bcs.n	8008c20 <xQueueCreateCountingSemaphoreStatic+0x30>
 8008c0e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008c12:	f383 8811 	msr	BASEPRI, r3
 8008c16:	f3bf 8f6f 	isb	sy
 8008c1a:	f3bf 8f4f 	dsb	sy
 8008c1e:	e7fe      	b.n	8008c1e <xQueueCreateCountingSemaphoreStatic+0x2e>
		xHandle = xQueueGenericCreateStatic( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, NULL, pxStaticQueue, queueQUEUE_TYPE_COUNTING_SEMAPHORE );
 8008c20:	2202      	movs	r2, #2
 8008c22:	9200      	str	r2, [sp, #0]
 8008c24:	2200      	movs	r2, #0
 8008c26:	4611      	mov	r1, r2
 8008c28:	f7ff ff6d 	bl	8008b06 <xQueueGenericCreateStatic>
		if( xHandle != NULL )
 8008c2c:	b100      	cbz	r0, 8008c30 <xQueueCreateCountingSemaphoreStatic+0x40>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 8008c2e:	6384      	str	r4, [r0, #56]	@ 0x38
	}
 8008c30:	b002      	add	sp, #8
 8008c32:	bd10      	pop	{r4, pc}

08008c34 <xQueueCreateCountingSemaphore>:
	{
 8008c34:	b510      	push	{r4, lr}
 8008c36:	460c      	mov	r4, r1
		configASSERT( uxMaxCount != 0 );
 8008c38:	b940      	cbnz	r0, 8008c4c <xQueueCreateCountingSemaphore+0x18>
 8008c3a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008c3e:	f383 8811 	msr	BASEPRI, r3
 8008c42:	f3bf 8f6f 	isb	sy
 8008c46:	f3bf 8f4f 	dsb	sy
 8008c4a:	e7fe      	b.n	8008c4a <xQueueCreateCountingSemaphore+0x16>
		configASSERT( uxInitialCount <= uxMaxCount );
 8008c4c:	4288      	cmp	r0, r1
 8008c4e:	d208      	bcs.n	8008c62 <xQueueCreateCountingSemaphore+0x2e>
 8008c50:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008c54:	f383 8811 	msr	BASEPRI, r3
 8008c58:	f3bf 8f6f 	isb	sy
 8008c5c:	f3bf 8f4f 	dsb	sy
 8008c60:	e7fe      	b.n	8008c60 <xQueueCreateCountingSemaphore+0x2c>
		xHandle = xQueueGenericCreate( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, queueQUEUE_TYPE_COUNTING_SEMAPHORE );
 8008c62:	2202      	movs	r2, #2
 8008c64:	2100      	movs	r1, #0
 8008c66:	f7ff ff9c 	bl	8008ba2 <xQueueGenericCreate>
		if( xHandle != NULL )
 8008c6a:	b100      	cbz	r0, 8008c6e <xQueueCreateCountingSemaphore+0x3a>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 8008c6c:	6384      	str	r4, [r0, #56]	@ 0x38
	}
 8008c6e:	bd10      	pop	{r4, pc}

08008c70 <xQueueGenericSend>:
{
 8008c70:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8008c74:	460f      	mov	r7, r1
 8008c76:	9201      	str	r2, [sp, #4]
 8008c78:	461e      	mov	r6, r3
	configASSERT( pxQueue );
 8008c7a:	4604      	mov	r4, r0
 8008c7c:	b940      	cbnz	r0, 8008c90 <xQueueGenericSend+0x20>
 8008c7e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008c82:	f383 8811 	msr	BASEPRI, r3
 8008c86:	f3bf 8f6f 	isb	sy
 8008c8a:	f3bf 8f4f 	dsb	sy
 8008c8e:	e7fe      	b.n	8008c8e <xQueueGenericSend+0x1e>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8008c90:	b951      	cbnz	r1, 8008ca8 <xQueueGenericSend+0x38>
 8008c92:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 8008c94:	b143      	cbz	r3, 8008ca8 <xQueueGenericSend+0x38>
 8008c96:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008c9a:	f383 8811 	msr	BASEPRI, r3
 8008c9e:	f3bf 8f6f 	isb	sy
 8008ca2:	f3bf 8f4f 	dsb	sy
 8008ca6:	e7fe      	b.n	8008ca6 <xQueueGenericSend+0x36>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 8008ca8:	2e02      	cmp	r6, #2
 8008caa:	d10b      	bne.n	8008cc4 <xQueueGenericSend+0x54>
 8008cac:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 8008cae:	2b01      	cmp	r3, #1
 8008cb0:	d008      	beq.n	8008cc4 <xQueueGenericSend+0x54>
 8008cb2:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008cb6:	f383 8811 	msr	BASEPRI, r3
 8008cba:	f3bf 8f6f 	isb	sy
 8008cbe:	f3bf 8f4f 	dsb	sy
 8008cc2:	e7fe      	b.n	8008cc2 <xQueueGenericSend+0x52>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8008cc4:	f000 ffaa 	bl	8009c1c <xTaskGetSchedulerState>
 8008cc8:	4605      	mov	r5, r0
 8008cca:	b320      	cbz	r0, 8008d16 <xQueueGenericSend+0xa6>
 8008ccc:	2500      	movs	r5, #0
		prvLockQueue( pxQueue );
 8008cce:	f04f 0800 	mov.w	r8, #0
		taskENTER_CRITICAL();
 8008cd2:	f7ff fd0f 	bl	80086f4 <vPortEnterCritical>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 8008cd6:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
 8008cd8:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 8008cda:	429a      	cmp	r2, r3
 8008cdc:	d227      	bcs.n	8008d2e <xQueueGenericSend+0xbe>
					xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 8008cde:	4632      	mov	r2, r6
 8008ce0:	4639      	mov	r1, r7
 8008ce2:	4620      	mov	r0, r4
 8008ce4:	f7ff fe51 	bl	800898a <prvCopyDataToQueue>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8008ce8:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8008cea:	b11b      	cbz	r3, 8008cf4 <xQueueGenericSend+0x84>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8008cec:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 8008cf0:	f000 ff06 	bl	8009b00 <xTaskRemoveFromEventList>
					else if( xYieldRequired != pdFALSE )
 8008cf4:	b148      	cbz	r0, 8008d0a <xQueueGenericSend+0x9a>
						queueYIELD_IF_USING_PREEMPTION();
 8008cf6:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8008cfa:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8008cfe:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8008d02:	f3bf 8f4f 	dsb	sy
 8008d06:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 8008d0a:	f7ff fd13 	bl	8008734 <vPortExitCritical>
				return pdPASS;
 8008d0e:	2001      	movs	r0, #1
}
 8008d10:	b004      	add	sp, #16
 8008d12:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8008d16:	9b01      	ldr	r3, [sp, #4]
 8008d18:	2b00      	cmp	r3, #0
 8008d1a:	d0d8      	beq.n	8008cce <xQueueGenericSend+0x5e>
 8008d1c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008d20:	f383 8811 	msr	BASEPRI, r3
 8008d24:	f3bf 8f6f 	isb	sy
 8008d28:	f3bf 8f4f 	dsb	sy
 8008d2c:	e7fe      	b.n	8008d2c <xQueueGenericSend+0xbc>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 8008d2e:	2e02      	cmp	r6, #2
 8008d30:	d0d5      	beq.n	8008cde <xQueueGenericSend+0x6e>
				if( xTicksToWait == ( TickType_t ) 0 )
 8008d32:	9b01      	ldr	r3, [sp, #4]
 8008d34:	b91b      	cbnz	r3, 8008d3e <xQueueGenericSend+0xce>
					taskEXIT_CRITICAL();
 8008d36:	f7ff fcfd 	bl	8008734 <vPortExitCritical>
					return errQUEUE_FULL;
 8008d3a:	2000      	movs	r0, #0
 8008d3c:	e7e8      	b.n	8008d10 <xQueueGenericSend+0xa0>
				else if( xEntryTimeSet == pdFALSE )
 8008d3e:	b915      	cbnz	r5, 8008d46 <xQueueGenericSend+0xd6>
					vTaskInternalSetTimeOutState( &xTimeOut );
 8008d40:	a802      	add	r0, sp, #8
 8008d42:	f000 ff1d 	bl	8009b80 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 8008d46:	f7ff fcf5 	bl	8008734 <vPortExitCritical>
		vTaskSuspendAll();
 8008d4a:	f000 fd2b 	bl	80097a4 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 8008d4e:	f7ff fcd1 	bl	80086f4 <vPortEnterCritical>
 8008d52:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
 8008d56:	2bff      	cmp	r3, #255	@ 0xff
 8008d58:	bf08      	it	eq
 8008d5a:	f884 8044 	strbeq.w	r8, [r4, #68]	@ 0x44
 8008d5e:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
 8008d62:	2bff      	cmp	r3, #255	@ 0xff
 8008d64:	bf08      	it	eq
 8008d66:	f884 8045 	strbeq.w	r8, [r4, #69]	@ 0x45
 8008d6a:	f7ff fce3 	bl	8008734 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 8008d6e:	a901      	add	r1, sp, #4
 8008d70:	a802      	add	r0, sp, #8
 8008d72:	f000 ff11 	bl	8009b98 <xTaskCheckForTimeOut>
 8008d76:	bb38      	cbnz	r0, 8008dc8 <xQueueGenericSend+0x158>

static BaseType_t prvIsQueueFull( const Queue_t *pxQueue )
{
BaseType_t xReturn;

	taskENTER_CRITICAL();
 8008d78:	f7ff fcbc 	bl	80086f4 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
 8008d7c:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
 8008d7e:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 8008d80:	429a      	cmp	r2, r3
 8008d82:	d10e      	bne.n	8008da2 <xQueueGenericSend+0x132>
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 8008d84:	f7ff fcd6 	bl	8008734 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 8008d88:	9901      	ldr	r1, [sp, #4]
 8008d8a:	f104 0010 	add.w	r0, r4, #16
 8008d8e:	f000 fe7f 	bl	8009a90 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 8008d92:	4620      	mov	r0, r4
 8008d94:	f7ff fe42 	bl	8008a1c <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 8008d98:	f000 fda8 	bl	80098ec <xTaskResumeAll>
 8008d9c:	b148      	cbz	r0, 8008db2 <xQueueGenericSend+0x142>
 8008d9e:	2501      	movs	r5, #1
 8008da0:	e797      	b.n	8008cd2 <xQueueGenericSend+0x62>
	taskEXIT_CRITICAL();
 8008da2:	f7ff fcc7 	bl	8008734 <vPortExitCritical>
				prvUnlockQueue( pxQueue );
 8008da6:	4620      	mov	r0, r4
 8008da8:	f7ff fe38 	bl	8008a1c <prvUnlockQueue>
				( void ) xTaskResumeAll();
 8008dac:	f000 fd9e 	bl	80098ec <xTaskResumeAll>
 8008db0:	e7f5      	b.n	8008d9e <xQueueGenericSend+0x12e>
					portYIELD_WITHIN_API();
 8008db2:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8008db6:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8008dba:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8008dbe:	f3bf 8f4f 	dsb	sy
 8008dc2:	f3bf 8f6f 	isb	sy
 8008dc6:	e7ea      	b.n	8008d9e <xQueueGenericSend+0x12e>
			prvUnlockQueue( pxQueue );
 8008dc8:	4620      	mov	r0, r4
 8008dca:	f7ff fe27 	bl	8008a1c <prvUnlockQueue>
			( void ) xTaskResumeAll();
 8008dce:	f000 fd8d 	bl	80098ec <xTaskResumeAll>
			return errQUEUE_FULL;
 8008dd2:	e7b2      	b.n	8008d3a <xQueueGenericSend+0xca>

08008dd4 <xQueueGenericSendFromISR>:
{
 8008dd4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8008dd8:	4689      	mov	r9, r1
 8008dda:	4617      	mov	r7, r2
 8008ddc:	461e      	mov	r6, r3
	configASSERT( pxQueue );
 8008dde:	4604      	mov	r4, r0
 8008de0:	b940      	cbnz	r0, 8008df4 <xQueueGenericSendFromISR+0x20>
 8008de2:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008de6:	f383 8811 	msr	BASEPRI, r3
 8008dea:	f3bf 8f6f 	isb	sy
 8008dee:	f3bf 8f4f 	dsb	sy
 8008df2:	e7fe      	b.n	8008df2 <xQueueGenericSendFromISR+0x1e>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8008df4:	b951      	cbnz	r1, 8008e0c <xQueueGenericSendFromISR+0x38>
 8008df6:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 8008df8:	b143      	cbz	r3, 8008e0c <xQueueGenericSendFromISR+0x38>
 8008dfa:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008dfe:	f383 8811 	msr	BASEPRI, r3
 8008e02:	f3bf 8f6f 	isb	sy
 8008e06:	f3bf 8f4f 	dsb	sy
 8008e0a:	e7fe      	b.n	8008e0a <xQueueGenericSendFromISR+0x36>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 8008e0c:	2e02      	cmp	r6, #2
 8008e0e:	d10b      	bne.n	8008e28 <xQueueGenericSendFromISR+0x54>
 8008e10:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 8008e12:	2b01      	cmp	r3, #1
 8008e14:	d008      	beq.n	8008e28 <xQueueGenericSendFromISR+0x54>
 8008e16:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008e1a:	f383 8811 	msr	BASEPRI, r3
 8008e1e:	f3bf 8f6f 	isb	sy
 8008e22:	f3bf 8f4f 	dsb	sy
 8008e26:	e7fe      	b.n	8008e26 <xQueueGenericSendFromISR+0x52>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 8008e28:	f7ff fd76 	bl	8008918 <vPortValidateInterruptPriority>
	__asm volatile
 8008e2c:	f3ef 8811 	mrs	r8, BASEPRI
 8008e30:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008e34:	f383 8811 	msr	BASEPRI, r3
 8008e38:	f3bf 8f6f 	isb	sy
 8008e3c:	f3bf 8f4f 	dsb	sy
		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 8008e40:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
 8008e42:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 8008e44:	429a      	cmp	r2, r3
 8008e46:	d301      	bcc.n	8008e4c <xQueueGenericSendFromISR+0x78>
 8008e48:	2e02      	cmp	r6, #2
 8008e4a:	d11e      	bne.n	8008e8a <xQueueGenericSendFromISR+0xb6>
			const int8_t cTxLock = pxQueue->cTxLock;
 8008e4c:	f894 5045 	ldrb.w	r5, [r4, #69]	@ 0x45
			const UBaseType_t uxPreviousMessagesWaiting = pxQueue->uxMessagesWaiting;
 8008e50:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
			const int8_t cTxLock = pxQueue->cTxLock;
 8008e52:	b26d      	sxtb	r5, r5
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 8008e54:	4632      	mov	r2, r6
 8008e56:	4649      	mov	r1, r9
 8008e58:	4620      	mov	r0, r4
 8008e5a:	f7ff fd96 	bl	800898a <prvCopyDataToQueue>
			if( cTxLock == queueUNLOCKED )
 8008e5e:	1c6b      	adds	r3, r5, #1
 8008e60:	d10e      	bne.n	8008e80 <xQueueGenericSendFromISR+0xac>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8008e62:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8008e64:	b13b      	cbz	r3, 8008e76 <xQueueGenericSendFromISR+0xa2>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8008e66:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 8008e6a:	f000 fe49 	bl	8009b00 <xTaskRemoveFromEventList>
 8008e6e:	b110      	cbz	r0, 8008e76 <xQueueGenericSendFromISR+0xa2>
							if( pxHigherPriorityTaskWoken != NULL )
 8008e70:	b10f      	cbz	r7, 8008e76 <xQueueGenericSendFromISR+0xa2>
								*pxHigherPriorityTaskWoken = pdTRUE;
 8008e72:	2301      	movs	r3, #1
 8008e74:	603b      	str	r3, [r7, #0]
			xReturn = pdPASS;
 8008e76:	2001      	movs	r0, #1
	__asm volatile
 8008e78:	f388 8811 	msr	BASEPRI, r8
}
 8008e7c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 8008e80:	3501      	adds	r5, #1
 8008e82:	b26d      	sxtb	r5, r5
 8008e84:	f884 5045 	strb.w	r5, [r4, #69]	@ 0x45
 8008e88:	e7f5      	b.n	8008e76 <xQueueGenericSendFromISR+0xa2>
			xReturn = errQUEUE_FULL;
 8008e8a:	2000      	movs	r0, #0
 8008e8c:	e7f4      	b.n	8008e78 <xQueueGenericSendFromISR+0xa4>

08008e8e <xQueueGiveFromISR>:
{
 8008e8e:	b570      	push	{r4, r5, r6, lr}
 8008e90:	460d      	mov	r5, r1
	configASSERT( pxQueue );
 8008e92:	4604      	mov	r4, r0
 8008e94:	b940      	cbnz	r0, 8008ea8 <xQueueGiveFromISR+0x1a>
	__asm volatile
 8008e96:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008e9a:	f383 8811 	msr	BASEPRI, r3
 8008e9e:	f3bf 8f6f 	isb	sy
 8008ea2:	f3bf 8f4f 	dsb	sy
 8008ea6:	e7fe      	b.n	8008ea6 <xQueueGiveFromISR+0x18>
	configASSERT( pxQueue->uxItemSize == 0 );
 8008ea8:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 8008eaa:	b143      	cbz	r3, 8008ebe <xQueueGiveFromISR+0x30>
 8008eac:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008eb0:	f383 8811 	msr	BASEPRI, r3
 8008eb4:	f3bf 8f6f 	isb	sy
 8008eb8:	f3bf 8f4f 	dsb	sy
 8008ebc:	e7fe      	b.n	8008ebc <xQueueGiveFromISR+0x2e>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
 8008ebe:	6803      	ldr	r3, [r0, #0]
 8008ec0:	b953      	cbnz	r3, 8008ed8 <xQueueGiveFromISR+0x4a>
 8008ec2:	6883      	ldr	r3, [r0, #8]
 8008ec4:	b143      	cbz	r3, 8008ed8 <xQueueGiveFromISR+0x4a>
 8008ec6:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008eca:	f383 8811 	msr	BASEPRI, r3
 8008ece:	f3bf 8f6f 	isb	sy
 8008ed2:	f3bf 8f4f 	dsb	sy
 8008ed6:	e7fe      	b.n	8008ed6 <xQueueGiveFromISR+0x48>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 8008ed8:	f7ff fd1e 	bl	8008918 <vPortValidateInterruptPriority>
	__asm volatile
 8008edc:	f3ef 8611 	mrs	r6, BASEPRI
 8008ee0:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008ee4:	f383 8811 	msr	BASEPRI, r3
 8008ee8:	f3bf 8f6f 	isb	sy
 8008eec:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 8008ef0:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
		if( uxMessagesWaiting < pxQueue->uxLength )
 8008ef2:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 8008ef4:	4293      	cmp	r3, r2
 8008ef6:	d919      	bls.n	8008f2c <xQueueGiveFromISR+0x9e>
			const int8_t cTxLock = pxQueue->cTxLock;
 8008ef8:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 8008efc:	3201      	adds	r2, #1
			if( cTxLock == queueUNLOCKED )
 8008efe:	29ff      	cmp	r1, #255	@ 0xff
			const int8_t cTxLock = pxQueue->cTxLock;
 8008f00:	b24b      	sxtb	r3, r1
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 8008f02:	63a2      	str	r2, [r4, #56]	@ 0x38
			if( cTxLock == queueUNLOCKED )
 8008f04:	d10d      	bne.n	8008f22 <xQueueGiveFromISR+0x94>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8008f06:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8008f08:	b13b      	cbz	r3, 8008f1a <xQueueGiveFromISR+0x8c>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8008f0a:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 8008f0e:	f000 fdf7 	bl	8009b00 <xTaskRemoveFromEventList>
 8008f12:	b110      	cbz	r0, 8008f1a <xQueueGiveFromISR+0x8c>
							if( pxHigherPriorityTaskWoken != NULL )
 8008f14:	b10d      	cbz	r5, 8008f1a <xQueueGiveFromISR+0x8c>
								*pxHigherPriorityTaskWoken = pdTRUE;
 8008f16:	2301      	movs	r3, #1
 8008f18:	602b      	str	r3, [r5, #0]
			xReturn = pdPASS;
 8008f1a:	2001      	movs	r0, #1
	__asm volatile
 8008f1c:	f386 8811 	msr	BASEPRI, r6
}
 8008f20:	bd70      	pop	{r4, r5, r6, pc}
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 8008f22:	3301      	adds	r3, #1
 8008f24:	b25b      	sxtb	r3, r3
 8008f26:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
 8008f2a:	e7f6      	b.n	8008f1a <xQueueGiveFromISR+0x8c>
			xReturn = errQUEUE_FULL;
 8008f2c:	2000      	movs	r0, #0
 8008f2e:	e7f5      	b.n	8008f1c <xQueueGiveFromISR+0x8e>

08008f30 <xQueueReceive>:
{
 8008f30:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8008f34:	460e      	mov	r6, r1
 8008f36:	9201      	str	r2, [sp, #4]
	configASSERT( ( pxQueue ) );
 8008f38:	4604      	mov	r4, r0
 8008f3a:	b940      	cbnz	r0, 8008f4e <xQueueReceive+0x1e>
	__asm volatile
 8008f3c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008f40:	f383 8811 	msr	BASEPRI, r3
 8008f44:	f3bf 8f6f 	isb	sy
 8008f48:	f3bf 8f4f 	dsb	sy
 8008f4c:	e7fe      	b.n	8008f4c <xQueueReceive+0x1c>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8008f4e:	b951      	cbnz	r1, 8008f66 <xQueueReceive+0x36>
 8008f50:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 8008f52:	b143      	cbz	r3, 8008f66 <xQueueReceive+0x36>
 8008f54:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008f58:	f383 8811 	msr	BASEPRI, r3
 8008f5c:	f3bf 8f6f 	isb	sy
 8008f60:	f3bf 8f4f 	dsb	sy
 8008f64:	e7fe      	b.n	8008f64 <xQueueReceive+0x34>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8008f66:	f000 fe59 	bl	8009c1c <xTaskGetSchedulerState>
 8008f6a:	4605      	mov	r5, r0
 8008f6c:	b318      	cbz	r0, 8008fb6 <xQueueReceive+0x86>
 8008f6e:	2500      	movs	r5, #0
		prvLockQueue( pxQueue );
 8008f70:	f04f 0800 	mov.w	r8, #0
		taskENTER_CRITICAL();
 8008f74:	f7ff fbbe 	bl	80086f4 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 8008f78:	6ba7      	ldr	r7, [r4, #56]	@ 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 8008f7a:	b347      	cbz	r7, 8008fce <xQueueReceive+0x9e>
				prvCopyDataFromQueue( pxQueue, pvBuffer );
 8008f7c:	4631      	mov	r1, r6
 8008f7e:	4620      	mov	r0, r4
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 8008f80:	3f01      	subs	r7, #1
				prvCopyDataFromQueue( pxQueue, pvBuffer );
 8008f82:	f7ff fd35 	bl	80089f0 <prvCopyDataFromQueue>
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 8008f86:	63a7      	str	r7, [r4, #56]	@ 0x38
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8008f88:	6923      	ldr	r3, [r4, #16]
 8008f8a:	b173      	cbz	r3, 8008faa <xQueueReceive+0x7a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8008f8c:	f104 0010 	add.w	r0, r4, #16
 8008f90:	f000 fdb6 	bl	8009b00 <xTaskRemoveFromEventList>
 8008f94:	b148      	cbz	r0, 8008faa <xQueueReceive+0x7a>
						queueYIELD_IF_USING_PREEMPTION();
 8008f96:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8008f9a:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8008f9e:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8008fa2:	f3bf 8f4f 	dsb	sy
 8008fa6:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 8008faa:	f7ff fbc3 	bl	8008734 <vPortExitCritical>
				return pdPASS;
 8008fae:	2001      	movs	r0, #1
}
 8008fb0:	b004      	add	sp, #16
 8008fb2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8008fb6:	9b01      	ldr	r3, [sp, #4]
 8008fb8:	2b00      	cmp	r3, #0
 8008fba:	d0d9      	beq.n	8008f70 <xQueueReceive+0x40>
 8008fbc:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008fc0:	f383 8811 	msr	BASEPRI, r3
 8008fc4:	f3bf 8f6f 	isb	sy
 8008fc8:	f3bf 8f4f 	dsb	sy
 8008fcc:	e7fe      	b.n	8008fcc <xQueueReceive+0x9c>
				if( xTicksToWait == ( TickType_t ) 0 )
 8008fce:	9b01      	ldr	r3, [sp, #4]
 8008fd0:	b91b      	cbnz	r3, 8008fda <xQueueReceive+0xaa>
					taskEXIT_CRITICAL();
 8008fd2:	f7ff fbaf 	bl	8008734 <vPortExitCritical>
					return errQUEUE_EMPTY;
 8008fd6:	2000      	movs	r0, #0
 8008fd8:	e7ea      	b.n	8008fb0 <xQueueReceive+0x80>
				else if( xEntryTimeSet == pdFALSE )
 8008fda:	b915      	cbnz	r5, 8008fe2 <xQueueReceive+0xb2>
					vTaskInternalSetTimeOutState( &xTimeOut );
 8008fdc:	a802      	add	r0, sp, #8
 8008fde:	f000 fdcf 	bl	8009b80 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 8008fe2:	f7ff fba7 	bl	8008734 <vPortExitCritical>
		vTaskSuspendAll();
 8008fe6:	f000 fbdd 	bl	80097a4 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 8008fea:	f7ff fb83 	bl	80086f4 <vPortEnterCritical>
 8008fee:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
 8008ff2:	2bff      	cmp	r3, #255	@ 0xff
 8008ff4:	bf08      	it	eq
 8008ff6:	f884 8044 	strbeq.w	r8, [r4, #68]	@ 0x44
 8008ffa:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
 8008ffe:	2bff      	cmp	r3, #255	@ 0xff
 8009000:	bf08      	it	eq
 8009002:	f884 8045 	strbeq.w	r8, [r4, #69]	@ 0x45
 8009006:	f7ff fb95 	bl	8008734 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 800900a:	a901      	add	r1, sp, #4
 800900c:	a802      	add	r0, sp, #8
 800900e:	f000 fdc3 	bl	8009b98 <xTaskCheckForTimeOut>
 8009012:	bb00      	cbnz	r0, 8009056 <xQueueReceive+0x126>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 8009014:	4620      	mov	r0, r4
 8009016:	f7ff fcad 	bl	8008974 <prvIsQueueEmpty>
 800901a:	b1b0      	cbz	r0, 800904a <xQueueReceive+0x11a>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 800901c:	9901      	ldr	r1, [sp, #4]
 800901e:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 8009022:	f000 fd35 	bl	8009a90 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 8009026:	4620      	mov	r0, r4
 8009028:	f7ff fcf8 	bl	8008a1c <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 800902c:	f000 fc5e 	bl	80098ec <xTaskResumeAll>
 8009030:	b948      	cbnz	r0, 8009046 <xQueueReceive+0x116>
					portYIELD_WITHIN_API();
 8009032:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8009036:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800903a:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 800903e:	f3bf 8f4f 	dsb	sy
 8009042:	f3bf 8f6f 	isb	sy
 8009046:	2501      	movs	r5, #1
 8009048:	e794      	b.n	8008f74 <xQueueReceive+0x44>
				prvUnlockQueue( pxQueue );
 800904a:	4620      	mov	r0, r4
 800904c:	f7ff fce6 	bl	8008a1c <prvUnlockQueue>
				( void ) xTaskResumeAll();
 8009050:	f000 fc4c 	bl	80098ec <xTaskResumeAll>
 8009054:	e7f7      	b.n	8009046 <xQueueReceive+0x116>
			prvUnlockQueue( pxQueue );
 8009056:	4620      	mov	r0, r4
 8009058:	f7ff fce0 	bl	8008a1c <prvUnlockQueue>
			( void ) xTaskResumeAll();
 800905c:	f000 fc46 	bl	80098ec <xTaskResumeAll>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 8009060:	4620      	mov	r0, r4
 8009062:	f7ff fc87 	bl	8008974 <prvIsQueueEmpty>
 8009066:	2800      	cmp	r0, #0
 8009068:	d0ed      	beq.n	8009046 <xQueueReceive+0x116>
 800906a:	e7b4      	b.n	8008fd6 <xQueueReceive+0xa6>

0800906c <xQueueSemaphoreTake>:
{
 800906c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800906e:	b085      	sub	sp, #20
	configASSERT( ( pxQueue ) );
 8009070:	4604      	mov	r4, r0
{
 8009072:	9101      	str	r1, [sp, #4]
	configASSERT( ( pxQueue ) );
 8009074:	b940      	cbnz	r0, 8009088 <xQueueSemaphoreTake+0x1c>
 8009076:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800907a:	f383 8811 	msr	BASEPRI, r3
 800907e:	f3bf 8f6f 	isb	sy
 8009082:	f3bf 8f4f 	dsb	sy
 8009086:	e7fe      	b.n	8009086 <xQueueSemaphoreTake+0x1a>
	configASSERT( pxQueue->uxItemSize == 0 );
 8009088:	6c05      	ldr	r5, [r0, #64]	@ 0x40
 800908a:	b145      	cbz	r5, 800909e <xQueueSemaphoreTake+0x32>
 800908c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009090:	f383 8811 	msr	BASEPRI, r3
 8009094:	f3bf 8f6f 	isb	sy
 8009098:	f3bf 8f4f 	dsb	sy
 800909c:	e7fe      	b.n	800909c <xQueueSemaphoreTake+0x30>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800909e:	f000 fdbd 	bl	8009c1c <xTaskGetSchedulerState>
 80090a2:	4606      	mov	r6, r0
 80090a4:	b320      	cbz	r0, 80090f0 <xQueueSemaphoreTake+0x84>
 80090a6:	462e      	mov	r6, r5
		prvLockQueue( pxQueue );
 80090a8:	2700      	movs	r7, #0
		taskENTER_CRITICAL();
 80090aa:	f7ff fb23 	bl	80086f4 <vPortEnterCritical>
			const UBaseType_t uxSemaphoreCount = pxQueue->uxMessagesWaiting;
 80090ae:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
			if( uxSemaphoreCount > ( UBaseType_t ) 0 )
 80090b0:	b353      	cbz	r3, 8009108 <xQueueSemaphoreTake+0x9c>
				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
 80090b2:	3b01      	subs	r3, #1
 80090b4:	63a3      	str	r3, [r4, #56]	@ 0x38
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 80090b6:	6823      	ldr	r3, [r4, #0]
 80090b8:	b913      	cbnz	r3, 80090c0 <xQueueSemaphoreTake+0x54>
						pxQueue->u.xSemaphore.xMutexHolder = pvTaskIncrementMutexHeldCount();
 80090ba:	f000 fe8d 	bl	8009dd8 <pvTaskIncrementMutexHeldCount>
 80090be:	60a0      	str	r0, [r4, #8]
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 80090c0:	6923      	ldr	r3, [r4, #16]
 80090c2:	b173      	cbz	r3, 80090e2 <xQueueSemaphoreTake+0x76>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 80090c4:	f104 0010 	add.w	r0, r4, #16
 80090c8:	f000 fd1a 	bl	8009b00 <xTaskRemoveFromEventList>
 80090cc:	b148      	cbz	r0, 80090e2 <xQueueSemaphoreTake+0x76>
						queueYIELD_IF_USING_PREEMPTION();
 80090ce:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 80090d2:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 80090d6:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 80090da:	f3bf 8f4f 	dsb	sy
 80090de:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 80090e2:	f7ff fb27 	bl	8008734 <vPortExitCritical>
				return pdPASS;
 80090e6:	2001      	movs	r0, #1
}
 80090e8:	b005      	add	sp, #20
 80090ea:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80090ec:	4635      	mov	r5, r6
 80090ee:	e7db      	b.n	80090a8 <xQueueSemaphoreTake+0x3c>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 80090f0:	9b01      	ldr	r3, [sp, #4]
 80090f2:	2b00      	cmp	r3, #0
 80090f4:	d0fa      	beq.n	80090ec <xQueueSemaphoreTake+0x80>
 80090f6:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80090fa:	f383 8811 	msr	BASEPRI, r3
 80090fe:	f3bf 8f6f 	isb	sy
 8009102:	f3bf 8f4f 	dsb	sy
 8009106:	e7fe      	b.n	8009106 <xQueueSemaphoreTake+0x9a>
				if( xTicksToWait == ( TickType_t ) 0 )
 8009108:	9b01      	ldr	r3, [sp, #4]
 800910a:	b953      	cbnz	r3, 8009122 <xQueueSemaphoreTake+0xb6>
						configASSERT( xInheritanceOccurred == pdFALSE );
 800910c:	2d00      	cmp	r5, #0
 800910e:	d066      	beq.n	80091de <xQueueSemaphoreTake+0x172>
 8009110:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009114:	f383 8811 	msr	BASEPRI, r3
 8009118:	f3bf 8f6f 	isb	sy
 800911c:	f3bf 8f4f 	dsb	sy
 8009120:	e7fe      	b.n	8009120 <xQueueSemaphoreTake+0xb4>
				else if( xEntryTimeSet == pdFALSE )
 8009122:	b916      	cbnz	r6, 800912a <xQueueSemaphoreTake+0xbe>
					vTaskInternalSetTimeOutState( &xTimeOut );
 8009124:	a802      	add	r0, sp, #8
 8009126:	f000 fd2b 	bl	8009b80 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 800912a:	f7ff fb03 	bl	8008734 <vPortExitCritical>
		vTaskSuspendAll();
 800912e:	f000 fb39 	bl	80097a4 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 8009132:	f7ff fadf 	bl	80086f4 <vPortEnterCritical>
 8009136:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
 800913a:	2bff      	cmp	r3, #255	@ 0xff
 800913c:	bf08      	it	eq
 800913e:	f884 7044 	strbeq.w	r7, [r4, #68]	@ 0x44
 8009142:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
 8009146:	2bff      	cmp	r3, #255	@ 0xff
 8009148:	bf08      	it	eq
 800914a:	f884 7045 	strbeq.w	r7, [r4, #69]	@ 0x45
 800914e:	f7ff faf1 	bl	8008734 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 8009152:	a901      	add	r1, sp, #4
 8009154:	a802      	add	r0, sp, #8
 8009156:	f000 fd1f 	bl	8009b98 <xTaskCheckForTimeOut>
 800915a:	bb50      	cbnz	r0, 80091b2 <xQueueSemaphoreTake+0x146>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 800915c:	4620      	mov	r0, r4
 800915e:	f7ff fc09 	bl	8008974 <prvIsQueueEmpty>
 8009162:	b300      	cbz	r0, 80091a6 <xQueueSemaphoreTake+0x13a>
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 8009164:	6823      	ldr	r3, [r4, #0]
 8009166:	b93b      	cbnz	r3, 8009178 <xQueueSemaphoreTake+0x10c>
						taskENTER_CRITICAL();
 8009168:	f7ff fac4 	bl	80086f4 <vPortEnterCritical>
							xInheritanceOccurred = xTaskPriorityInherit( pxQueue->u.xSemaphore.xMutexHolder );
 800916c:	68a0      	ldr	r0, [r4, #8]
 800916e:	f000 fd65 	bl	8009c3c <xTaskPriorityInherit>
 8009172:	4605      	mov	r5, r0
						taskEXIT_CRITICAL();
 8009174:	f7ff fade 	bl	8008734 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 8009178:	9901      	ldr	r1, [sp, #4]
 800917a:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 800917e:	f000 fc87 	bl	8009a90 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 8009182:	4620      	mov	r0, r4
 8009184:	f7ff fc4a 	bl	8008a1c <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 8009188:	f000 fbb0 	bl	80098ec <xTaskResumeAll>
 800918c:	b948      	cbnz	r0, 80091a2 <xQueueSemaphoreTake+0x136>
					portYIELD_WITHIN_API();
 800918e:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8009192:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8009196:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 800919a:	f3bf 8f4f 	dsb	sy
 800919e:	f3bf 8f6f 	isb	sy
 80091a2:	2601      	movs	r6, #1
 80091a4:	e781      	b.n	80090aa <xQueueSemaphoreTake+0x3e>
				prvUnlockQueue( pxQueue );
 80091a6:	4620      	mov	r0, r4
 80091a8:	f7ff fc38 	bl	8008a1c <prvUnlockQueue>
				( void ) xTaskResumeAll();
 80091ac:	f000 fb9e 	bl	80098ec <xTaskResumeAll>
 80091b0:	e7f7      	b.n	80091a2 <xQueueSemaphoreTake+0x136>
			prvUnlockQueue( pxQueue );
 80091b2:	4620      	mov	r0, r4
 80091b4:	f7ff fc32 	bl	8008a1c <prvUnlockQueue>
			( void ) xTaskResumeAll();
 80091b8:	f000 fb98 	bl	80098ec <xTaskResumeAll>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 80091bc:	4620      	mov	r0, r4
 80091be:	f7ff fbd9 	bl	8008974 <prvIsQueueEmpty>
 80091c2:	2800      	cmp	r0, #0
 80091c4:	d0ed      	beq.n	80091a2 <xQueueSemaphoreTake+0x136>
					if( xInheritanceOccurred != pdFALSE )
 80091c6:	b165      	cbz	r5, 80091e2 <xQueueSemaphoreTake+0x176>
						taskENTER_CRITICAL();
 80091c8:	f7ff fa94 	bl	80086f4 <vPortEnterCritical>
		if( listCURRENT_LIST_LENGTH( &( pxQueue->xTasksWaitingToReceive ) ) > 0U )
 80091cc:	6a61      	ldr	r1, [r4, #36]	@ 0x24
 80091ce:	b119      	cbz	r1, 80091d8 <xQueueSemaphoreTake+0x16c>
			uxHighestPriorityOfWaitingTasks = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) listGET_ITEM_VALUE_OF_HEAD_ENTRY( &( pxQueue->xTasksWaitingToReceive ) );
 80091d0:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 80091d2:	6819      	ldr	r1, [r3, #0]
 80091d4:	f1c1 0138 	rsb	r1, r1, #56	@ 0x38
							vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
 80091d8:	68a0      	ldr	r0, [r4, #8]
 80091da:	f000 fdaf 	bl	8009d3c <vTaskPriorityDisinheritAfterTimeout>
						taskEXIT_CRITICAL();
 80091de:	f7ff faa9 	bl	8008734 <vPortExitCritical>
					return errQUEUE_EMPTY;
 80091e2:	2000      	movs	r0, #0
 80091e4:	e780      	b.n	80090e8 <xQueueSemaphoreTake+0x7c>

080091e6 <xQueueReceiveFromISR>:
{
 80091e6:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80091ea:	4689      	mov	r9, r1
 80091ec:	4690      	mov	r8, r2
	configASSERT( pxQueue );
 80091ee:	4604      	mov	r4, r0
 80091f0:	b940      	cbnz	r0, 8009204 <xQueueReceiveFromISR+0x1e>
 80091f2:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80091f6:	f383 8811 	msr	BASEPRI, r3
 80091fa:	f3bf 8f6f 	isb	sy
 80091fe:	f3bf 8f4f 	dsb	sy
 8009202:	e7fe      	b.n	8009202 <xQueueReceiveFromISR+0x1c>
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8009204:	b951      	cbnz	r1, 800921c <xQueueReceiveFromISR+0x36>
 8009206:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 8009208:	b143      	cbz	r3, 800921c <xQueueReceiveFromISR+0x36>
 800920a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800920e:	f383 8811 	msr	BASEPRI, r3
 8009212:	f3bf 8f6f 	isb	sy
 8009216:	f3bf 8f4f 	dsb	sy
 800921a:	e7fe      	b.n	800921a <xQueueReceiveFromISR+0x34>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 800921c:	f7ff fb7c 	bl	8008918 <vPortValidateInterruptPriority>
	__asm volatile
 8009220:	f3ef 8711 	mrs	r7, BASEPRI
 8009224:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009228:	f383 8811 	msr	BASEPRI, r3
 800922c:	f3bf 8f6f 	isb	sy
 8009230:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 8009234:	6ba5      	ldr	r5, [r4, #56]	@ 0x38
		if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 8009236:	b30d      	cbz	r5, 800927c <xQueueReceiveFromISR+0x96>
			const int8_t cRxLock = pxQueue->cRxLock;
 8009238:	f894 6044 	ldrb.w	r6, [r4, #68]	@ 0x44
			prvCopyDataFromQueue( pxQueue, pvBuffer );
 800923c:	4649      	mov	r1, r9
			const int8_t cRxLock = pxQueue->cRxLock;
 800923e:	b276      	sxtb	r6, r6
			prvCopyDataFromQueue( pxQueue, pvBuffer );
 8009240:	4620      	mov	r0, r4
 8009242:	f7ff fbd5 	bl	80089f0 <prvCopyDataFromQueue>
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 8009246:	3d01      	subs	r5, #1
			if( cRxLock == queueUNLOCKED )
 8009248:	1c73      	adds	r3, r6, #1
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800924a:	63a5      	str	r5, [r4, #56]	@ 0x38
			if( cRxLock == queueUNLOCKED )
 800924c:	d111      	bne.n	8009272 <xQueueReceiveFromISR+0x8c>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800924e:	6923      	ldr	r3, [r4, #16]
 8009250:	b153      	cbz	r3, 8009268 <xQueueReceiveFromISR+0x82>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8009252:	f104 0010 	add.w	r0, r4, #16
 8009256:	f000 fc53 	bl	8009b00 <xTaskRemoveFromEventList>
 800925a:	b128      	cbz	r0, 8009268 <xQueueReceiveFromISR+0x82>
						if( pxHigherPriorityTaskWoken != NULL )
 800925c:	f1b8 0f00 	cmp.w	r8, #0
 8009260:	d002      	beq.n	8009268 <xQueueReceiveFromISR+0x82>
							*pxHigherPriorityTaskWoken = pdTRUE;
 8009262:	2301      	movs	r3, #1
 8009264:	f8c8 3000 	str.w	r3, [r8]
			xReturn = pdPASS;
 8009268:	2001      	movs	r0, #1
	__asm volatile
 800926a:	f387 8811 	msr	BASEPRI, r7
}
 800926e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
 8009272:	3601      	adds	r6, #1
 8009274:	b276      	sxtb	r6, r6
 8009276:	f884 6044 	strb.w	r6, [r4, #68]	@ 0x44
 800927a:	e7f5      	b.n	8009268 <xQueueReceiveFromISR+0x82>
			xReturn = pdFAIL;
 800927c:	4628      	mov	r0, r5
 800927e:	e7f4      	b.n	800926a <xQueueReceiveFromISR+0x84>

08009280 <uxQueueMessagesWaiting>:
{
 8009280:	b510      	push	{r4, lr}
	configASSERT( xQueue );
 8009282:	4604      	mov	r4, r0
 8009284:	b940      	cbnz	r0, 8009298 <uxQueueMessagesWaiting+0x18>
	__asm volatile
 8009286:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800928a:	f383 8811 	msr	BASEPRI, r3
 800928e:	f3bf 8f6f 	isb	sy
 8009292:	f3bf 8f4f 	dsb	sy
 8009296:	e7fe      	b.n	8009296 <uxQueueMessagesWaiting+0x16>
	taskENTER_CRITICAL();
 8009298:	f7ff fa2c 	bl	80086f4 <vPortEnterCritical>
		uxReturn = ( ( Queue_t * ) xQueue )->uxMessagesWaiting;
 800929c:	6ba4      	ldr	r4, [r4, #56]	@ 0x38
	taskEXIT_CRITICAL();
 800929e:	f7ff fa49 	bl	8008734 <vPortExitCritical>
} /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
 80092a2:	4620      	mov	r0, r4
 80092a4:	bd10      	pop	{r4, pc}

080092a6 <uxQueueMessagesWaitingFromISR>:
	configASSERT( pxQueue );
 80092a6:	b940      	cbnz	r0, 80092ba <uxQueueMessagesWaitingFromISR+0x14>
 80092a8:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80092ac:	f383 8811 	msr	BASEPRI, r3
 80092b0:	f3bf 8f6f 	isb	sy
 80092b4:	f3bf 8f4f 	dsb	sy
 80092b8:	e7fe      	b.n	80092b8 <uxQueueMessagesWaitingFromISR+0x12>
	uxReturn = pxQueue->uxMessagesWaiting;
 80092ba:	6b80      	ldr	r0, [r0, #56]	@ 0x38
} /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
 80092bc:	4770      	bx	lr
	...

080092c0 <vQueueAddToRegistry>:
/*-----------------------------------------------------------*/

#if ( configQUEUE_REGISTRY_SIZE > 0 )

	void vQueueAddToRegistry( QueueHandle_t xQueue, const char *pcQueueName ) /*lint !e971 Unqualified char types are allowed for strings and single characters only. */
	{
 80092c0:	b530      	push	{r4, r5, lr}

		/* See if there is an empty space in the registry.  A NULL name denotes
		a free slot. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 80092c2:	4a07      	ldr	r2, [pc, #28]	@ (80092e0 <vQueueAddToRegistry+0x20>)
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 80092c4:	2300      	movs	r3, #0
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 80092c6:	f852 5033 	ldr.w	r5, [r2, r3, lsl #3]
 80092ca:	eb02 04c3 	add.w	r4, r2, r3, lsl #3
 80092ce:	b91d      	cbnz	r5, 80092d8 <vQueueAddToRegistry+0x18>
			{
				/* Store the information on this queue. */
				xQueueRegistry[ ux ].pcQueueName = pcQueueName;
 80092d0:	f842 1033 	str.w	r1, [r2, r3, lsl #3]
				xQueueRegistry[ ux ].xHandle = xQueue;
 80092d4:	6060      	str	r0, [r4, #4]
			else
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}
	}
 80092d6:	bd30      	pop	{r4, r5, pc}
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 80092d8:	3301      	adds	r3, #1
 80092da:	2b08      	cmp	r3, #8
 80092dc:	d1f3      	bne.n	80092c6 <vQueueAddToRegistry+0x6>
 80092de:	e7fa      	b.n	80092d6 <vQueueAddToRegistry+0x16>
 80092e0:	20012d5c 	.word	0x20012d5c

080092e4 <vQueueUnregisterQueue>:
/*-----------------------------------------------------------*/

#if ( configQUEUE_REGISTRY_SIZE > 0 )

	void vQueueUnregisterQueue( QueueHandle_t xQueue )
	{
 80092e4:	b510      	push	{r4, lr}

		/* See if the handle of the queue being unregistered in actually in the
		registry. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 80092e6:	4a09      	ldr	r2, [pc, #36]	@ (800930c <vQueueUnregisterQueue+0x28>)
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 80092e8:	2300      	movs	r3, #0
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 80092ea:	f852 1033 	ldr.w	r1, [r2, r3, lsl #3]
 80092ee:	4281      	cmp	r1, r0
 80092f0:	ea4f 04c3 	mov.w	r4, r3, lsl #3
 80092f4:	d106      	bne.n	8009304 <vQueueUnregisterQueue+0x20>
			{
				/* Set the name to NULL to show that this slot if free again. */
				xQueueRegistry[ ux ].pcQueueName = NULL;
 80092f6:	4a06      	ldr	r2, [pc, #24]	@ (8009310 <vQueueUnregisterQueue+0x2c>)
 80092f8:	2100      	movs	r1, #0
 80092fa:	f842 1033 	str.w	r1, [r2, r3, lsl #3]

				/* Set the handle to NULL to ensure the same queue handle cannot
				appear in the registry twice if it is added, removed, then
				added again. */
				xQueueRegistry[ ux ].xHandle = ( QueueHandle_t ) 0;
 80092fe:	4422      	add	r2, r4
 8009300:	6051      	str	r1, [r2, #4]
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}

	} /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
 8009302:	bd10      	pop	{r4, pc}
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 8009304:	3301      	adds	r3, #1
 8009306:	2b08      	cmp	r3, #8
 8009308:	d1ef      	bne.n	80092ea <vQueueUnregisterQueue+0x6>
 800930a:	e7fa      	b.n	8009302 <vQueueUnregisterQueue+0x1e>
 800930c:	20012d60 	.word	0x20012d60
 8009310:	20012d5c 	.word	0x20012d5c

08009314 <vQueueDelete>:
{
 8009314:	b510      	push	{r4, lr}
	configASSERT( pxQueue );
 8009316:	b940      	cbnz	r0, 800932a <vQueueDelete+0x16>
 8009318:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800931c:	f383 8811 	msr	BASEPRI, r3
 8009320:	f3bf 8f6f 	isb	sy
 8009324:	f3bf 8f4f 	dsb	sy
 8009328:	e7fe      	b.n	8009328 <vQueueDelete+0x14>
		vQueueUnregisterQueue( pxQueue );
 800932a:	f7ff ffdb 	bl	80092e4 <vQueueUnregisterQueue>
		if( pxQueue->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
 800932e:	f890 3046 	ldrb.w	r3, [r0, #70]	@ 0x46
 8009332:	b91b      	cbnz	r3, 800933c <vQueueDelete+0x28>
}
 8009334:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
			vPortFree( pxQueue );
 8009338:	f7ff b8f6 	b.w	8008528 <vPortFree>
}
 800933c:	bd10      	pop	{r4, pc}

0800933e <vQueueWaitForMessageRestricted>:
/*-----------------------------------------------------------*/

#if ( configUSE_TIMERS == 1 )

	void vQueueWaitForMessageRestricted( QueueHandle_t xQueue, TickType_t xTicksToWait, const BaseType_t xWaitIndefinitely )
	{
 800933e:	b570      	push	{r4, r5, r6, lr}
 8009340:	4604      	mov	r4, r0
 8009342:	460d      	mov	r5, r1
 8009344:	4616      	mov	r6, r2
		will not actually cause the task to block, just place it on a blocked
		list.  It will not block until the scheduler is unlocked - at which
		time a yield will be performed.  If an item is added to the queue while
		the queue is locked, and the calling task blocks on the queue, then the
		calling task will be immediately unblocked when the queue is unlocked. */
		prvLockQueue( pxQueue );
 8009346:	f7ff f9d5 	bl	80086f4 <vPortEnterCritical>
 800934a:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
 800934e:	2bff      	cmp	r3, #255	@ 0xff
 8009350:	bf04      	itt	eq
 8009352:	2300      	moveq	r3, #0
 8009354:	f884 3044 	strbeq.w	r3, [r4, #68]	@ 0x44
 8009358:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
 800935c:	2bff      	cmp	r3, #255	@ 0xff
 800935e:	bf04      	itt	eq
 8009360:	2300      	moveq	r3, #0
 8009362:	f884 3045 	strbeq.w	r3, [r4, #69]	@ 0x45
 8009366:	f7ff f9e5 	bl	8008734 <vPortExitCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0U )
 800936a:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 800936c:	b92b      	cbnz	r3, 800937a <vQueueWaitForMessageRestricted+0x3c>
		{
			/* There is nothing in the queue, block for the specified period. */
			vTaskPlaceOnEventListRestricted( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait, xWaitIndefinitely );
 800936e:	4632      	mov	r2, r6
 8009370:	4629      	mov	r1, r5
 8009372:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 8009376:	f000 fba5 	bl	8009ac4 <vTaskPlaceOnEventListRestricted>
		}
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
		prvUnlockQueue( pxQueue );
 800937a:	4620      	mov	r0, r4
	}
 800937c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
		prvUnlockQueue( pxQueue );
 8009380:	f7ff bb4c 	b.w	8008a1c <prvUnlockQueue>

08009384 <prvAddNewTaskToReadyList>:
	}
}
/*-----------------------------------------------------------*/

static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB )
{
 8009384:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8009388:	4604      	mov	r4, r0
	/* Ensure interrupts don't access the task lists while the lists are being
	updated. */
	taskENTER_CRITICAL();
 800938a:	f7ff f9b3 	bl	80086f4 <vPortEnterCritical>
	{
		uxCurrentNumberOfTasks++;
 800938e:	4b30      	ldr	r3, [pc, #192]	@ (8009450 <prvAddNewTaskToReadyList+0xcc>)
		if( pxCurrentTCB == NULL )
 8009390:	4e30      	ldr	r6, [pc, #192]	@ (8009454 <prvAddNewTaskToReadyList+0xd0>)
		uxCurrentNumberOfTasks++;
 8009392:	681a      	ldr	r2, [r3, #0]
 8009394:	4f30      	ldr	r7, [pc, #192]	@ (8009458 <prvAddNewTaskToReadyList+0xd4>)
 8009396:	3201      	adds	r2, #1
 8009398:	601a      	str	r2, [r3, #0]
		if( pxCurrentTCB == NULL )
 800939a:	6835      	ldr	r5, [r6, #0]
 800939c:	2d00      	cmp	r5, #0
 800939e:	d14b      	bne.n	8009438 <prvAddNewTaskToReadyList+0xb4>
		{
			/* There are no other tasks, or all the other tasks are in
			the suspended state - make this the current task. */
			pxCurrentTCB = pxNewTCB;
 80093a0:	6034      	str	r4, [r6, #0]

			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
 80093a2:	681b      	ldr	r3, [r3, #0]
 80093a4:	2b01      	cmp	r3, #1
 80093a6:	d11f      	bne.n	80093e8 <prvAddNewTaskToReadyList+0x64>
 80093a8:	46b8      	mov	r8, r7
{
UBaseType_t uxPriority;

	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
	{
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 80093aa:	4640      	mov	r0, r8
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 80093ac:	3501      	adds	r5, #1
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 80093ae:	f7ff f8f9 	bl	80085a4 <vListInitialise>
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 80093b2:	2d38      	cmp	r5, #56	@ 0x38
 80093b4:	f108 0814 	add.w	r8, r8, #20
 80093b8:	d1f7      	bne.n	80093aa <prvAddNewTaskToReadyList+0x26>
	}

	vListInitialise( &xDelayedTaskList1 );
 80093ba:	f8df 80c4 	ldr.w	r8, [pc, #196]	@ 8009480 <prvAddNewTaskToReadyList+0xfc>
	vListInitialise( &xDelayedTaskList2 );
 80093be:	4d27      	ldr	r5, [pc, #156]	@ (800945c <prvAddNewTaskToReadyList+0xd8>)
	vListInitialise( &xDelayedTaskList1 );
 80093c0:	4640      	mov	r0, r8
 80093c2:	f7ff f8ef 	bl	80085a4 <vListInitialise>
	vListInitialise( &xDelayedTaskList2 );
 80093c6:	4628      	mov	r0, r5
 80093c8:	f7ff f8ec 	bl	80085a4 <vListInitialise>
	vListInitialise( &xPendingReadyList );
 80093cc:	4824      	ldr	r0, [pc, #144]	@ (8009460 <prvAddNewTaskToReadyList+0xdc>)
 80093ce:	f7ff f8e9 	bl	80085a4 <vListInitialise>

	#if ( INCLUDE_vTaskDelete == 1 )
	{
		vListInitialise( &xTasksWaitingTermination );
 80093d2:	4824      	ldr	r0, [pc, #144]	@ (8009464 <prvAddNewTaskToReadyList+0xe0>)
 80093d4:	f7ff f8e6 	bl	80085a4 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskDelete */

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		vListInitialise( &xSuspendedTaskList );
 80093d8:	4823      	ldr	r0, [pc, #140]	@ (8009468 <prvAddNewTaskToReadyList+0xe4>)
 80093da:	f7ff f8e3 	bl	80085a4 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskSuspend */

	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
	using list2. */
	pxDelayedTaskList = &xDelayedTaskList1;
 80093de:	4b23      	ldr	r3, [pc, #140]	@ (800946c <prvAddNewTaskToReadyList+0xe8>)
 80093e0:	f8c3 8000 	str.w	r8, [r3]
	pxOverflowDelayedTaskList = &xDelayedTaskList2;
 80093e4:	4b22      	ldr	r3, [pc, #136]	@ (8009470 <prvAddNewTaskToReadyList+0xec>)
 80093e6:	601d      	str	r5, [r3, #0]
		uxTaskNumber++;
 80093e8:	4a22      	ldr	r2, [pc, #136]	@ (8009474 <prvAddNewTaskToReadyList+0xf0>)
 80093ea:	6813      	ldr	r3, [r2, #0]
 80093ec:	3301      	adds	r3, #1
 80093ee:	6013      	str	r3, [r2, #0]
		prvAddTaskToReadyList( pxNewTCB );
 80093f0:	4a21      	ldr	r2, [pc, #132]	@ (8009478 <prvAddNewTaskToReadyList+0xf4>)
			pxNewTCB->uxTCBNumber = uxTaskNumber;
 80093f2:	6463      	str	r3, [r4, #68]	@ 0x44
		prvAddTaskToReadyList( pxNewTCB );
 80093f4:	6811      	ldr	r1, [r2, #0]
 80093f6:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 80093f8:	2014      	movs	r0, #20
 80093fa:	428b      	cmp	r3, r1
 80093fc:	fb00 7003 	mla	r0, r0, r3, r7
 8009400:	f104 0104 	add.w	r1, r4, #4
 8009404:	bf88      	it	hi
 8009406:	6013      	strhi	r3, [r2, #0]
 8009408:	f7ff f8da 	bl	80085c0 <vListInsertEnd>
	taskEXIT_CRITICAL();
 800940c:	f7ff f992 	bl	8008734 <vPortExitCritical>
	if( xSchedulerRunning != pdFALSE )
 8009410:	4b1a      	ldr	r3, [pc, #104]	@ (800947c <prvAddNewTaskToReadyList+0xf8>)
 8009412:	681b      	ldr	r3, [r3, #0]
 8009414:	b173      	cbz	r3, 8009434 <prvAddNewTaskToReadyList+0xb0>
		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
 8009416:	6833      	ldr	r3, [r6, #0]
 8009418:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 800941a:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 800941c:	429a      	cmp	r2, r3
 800941e:	d209      	bcs.n	8009434 <prvAddNewTaskToReadyList+0xb0>
			taskYIELD_IF_USING_PREEMPTION();
 8009420:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8009424:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8009428:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 800942c:	f3bf 8f4f 	dsb	sy
 8009430:	f3bf 8f6f 	isb	sy
}
 8009434:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			if( xSchedulerRunning == pdFALSE )
 8009438:	4b10      	ldr	r3, [pc, #64]	@ (800947c <prvAddNewTaskToReadyList+0xf8>)
 800943a:	681a      	ldr	r2, [r3, #0]
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 800943c:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
			if( xSchedulerRunning == pdFALSE )
 800943e:	2a00      	cmp	r2, #0
 8009440:	d1d2      	bne.n	80093e8 <prvAddNewTaskToReadyList+0x64>
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 8009442:	6832      	ldr	r2, [r6, #0]
 8009444:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
 8009446:	429a      	cmp	r2, r3
					pxCurrentTCB = pxNewTCB;
 8009448:	bf98      	it	ls
 800944a:	6034      	strls	r4, [r6, #0]
 800944c:	e7cc      	b.n	80093e8 <prvAddNewTaskToReadyList+0x64>
 800944e:	bf00      	nop
 8009450:	20012dc0 	.word	0x20012dc0
 8009454:	20013294 	.word	0x20013294
 8009458:	20012e34 	.word	0x20012e34
 800945c:	20012e0c 	.word	0x20012e0c
 8009460:	20012df0 	.word	0x20012df0
 8009464:	20012ddc 	.word	0x20012ddc
 8009468:	20012dc4 	.word	0x20012dc4
 800946c:	20012e08 	.word	0x20012e08
 8009470:	20012e04 	.word	0x20012e04
 8009474:	20012da4 	.word	0x20012da4
 8009478:	20012db8 	.word	0x20012db8
 800947c:	20012db4 	.word	0x20012db4
 8009480:	20012e20 	.word	0x20012e20

08009484 <prvAddCurrentTaskToDelayedList>:

#endif
/*-----------------------------------------------------------*/

static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockIndefinitely )
{
 8009484:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
TickType_t xTimeToWake;
const TickType_t xConstTickCount = xTickCount;
 8009486:	4b15      	ldr	r3, [pc, #84]	@ (80094dc <prvAddCurrentTaskToDelayedList+0x58>)
	}
	#endif

	/* Remove the task from the ready list before adding it to the blocked list
	as the same list item is used for both lists. */
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8009488:	4d15      	ldr	r5, [pc, #84]	@ (80094e0 <prvAddCurrentTaskToDelayedList+0x5c>)
const TickType_t xConstTickCount = xTickCount;
 800948a:	681c      	ldr	r4, [r3, #0]
{
 800948c:	4606      	mov	r6, r0
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800948e:	6828      	ldr	r0, [r5, #0]
 8009490:	3004      	adds	r0, #4
{
 8009492:	460f      	mov	r7, r1
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8009494:	f7ff f8b6 	bl	8008604 <uxListRemove>
		mtCOVERAGE_TEST_MARKER();
	}

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
 8009498:	1c73      	adds	r3, r6, #1
 800949a:	d107      	bne.n	80094ac <prvAddCurrentTaskToDelayedList+0x28>
 800949c:	b137      	cbz	r7, 80094ac <prvAddCurrentTaskToDelayedList+0x28>
		{
			/* Add the task to the suspended task list instead of a delayed task
			list to ensure it is not woken by a timing event.  It will block
			indefinitely. */
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800949e:	6829      	ldr	r1, [r5, #0]
 80094a0:	4810      	ldr	r0, [pc, #64]	@ (80094e4 <prvAddCurrentTaskToDelayedList+0x60>)

		/* Avoid compiler warning when INCLUDE_vTaskSuspend is not 1. */
		( void ) xCanBlockIndefinitely;
	}
	#endif /* INCLUDE_vTaskSuspend */
}
 80094a2:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 80094a6:	3104      	adds	r1, #4
 80094a8:	f7ff b88a 	b.w	80085c0 <vListInsertEnd>
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 80094ac:	682b      	ldr	r3, [r5, #0]
 80094ae:	19a4      	adds	r4, r4, r6
 80094b0:	605c      	str	r4, [r3, #4]
			if( xTimeToWake < xConstTickCount )
 80094b2:	d307      	bcc.n	80094c4 <prvAddCurrentTaskToDelayedList+0x40>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 80094b4:	4b0c      	ldr	r3, [pc, #48]	@ (80094e8 <prvAddCurrentTaskToDelayedList+0x64>)
 80094b6:	6818      	ldr	r0, [r3, #0]
 80094b8:	6829      	ldr	r1, [r5, #0]
}
 80094ba:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 80094be:	3104      	adds	r1, #4
 80094c0:	f7ff b889 	b.w	80085d6 <vListInsert>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 80094c4:	4b09      	ldr	r3, [pc, #36]	@ (80094ec <prvAddCurrentTaskToDelayedList+0x68>)
 80094c6:	6818      	ldr	r0, [r3, #0]
 80094c8:	6829      	ldr	r1, [r5, #0]
 80094ca:	3104      	adds	r1, #4
 80094cc:	f7ff f883 	bl	80085d6 <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
 80094d0:	4b07      	ldr	r3, [pc, #28]	@ (80094f0 <prvAddCurrentTaskToDelayedList+0x6c>)
 80094d2:	681a      	ldr	r2, [r3, #0]
 80094d4:	42a2      	cmp	r2, r4
					xNextTaskUnblockTime = xTimeToWake;
 80094d6:	bf88      	it	hi
 80094d8:	601c      	strhi	r4, [r3, #0]
}
 80094da:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80094dc:	20012dbc 	.word	0x20012dbc
 80094e0:	20013294 	.word	0x20013294
 80094e4:	20012dc4 	.word	0x20012dc4
 80094e8:	20012e04 	.word	0x20012e04
 80094ec:	20012e08 	.word	0x20012e08
 80094f0:	20012da0 	.word	0x20012da0

080094f4 <prvResetNextTaskUnblockTime>:
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 80094f4:	4a06      	ldr	r2, [pc, #24]	@ (8009510 <prvResetNextTaskUnblockTime+0x1c>)
 80094f6:	6813      	ldr	r3, [r2, #0]
 80094f8:	6819      	ldr	r1, [r3, #0]
 80094fa:	4b06      	ldr	r3, [pc, #24]	@ (8009514 <prvResetNextTaskUnblockTime+0x20>)
 80094fc:	b919      	cbnz	r1, 8009506 <prvResetNextTaskUnblockTime+0x12>
		xNextTaskUnblockTime = portMAX_DELAY;
 80094fe:	f04f 32ff 	mov.w	r2, #4294967295
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 8009502:	601a      	str	r2, [r3, #0]
}
 8009504:	4770      	bx	lr
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009506:	6812      	ldr	r2, [r2, #0]
 8009508:	68d2      	ldr	r2, [r2, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 800950a:	68d2      	ldr	r2, [r2, #12]
 800950c:	6852      	ldr	r2, [r2, #4]
 800950e:	e7f8      	b.n	8009502 <prvResetNextTaskUnblockTime+0xe>
 8009510:	20012e08 	.word	0x20012e08
 8009514:	20012da0 	.word	0x20012da0

08009518 <prvDeleteTCB>:
	{
 8009518:	b510      	push	{r4, lr}
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
 800951a:	f890 305d 	ldrb.w	r3, [r0, #93]	@ 0x5d
	{
 800951e:	4604      	mov	r4, r0
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
 8009520:	b93b      	cbnz	r3, 8009532 <prvDeleteTCB+0x1a>
				vPortFree( pxTCB->pxStack );
 8009522:	6b00      	ldr	r0, [r0, #48]	@ 0x30
 8009524:	f7ff f800 	bl	8008528 <vPortFree>
				vPortFree( pxTCB );
 8009528:	4620      	mov	r0, r4
	}
 800952a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
				vPortFree( pxTCB );
 800952e:	f7fe bffb 	b.w	8008528 <vPortFree>
			else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
 8009532:	2b01      	cmp	r3, #1
 8009534:	d0f9      	beq.n	800952a <prvDeleteTCB+0x12>
				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	);
 8009536:	2b02      	cmp	r3, #2
 8009538:	d008      	beq.n	800954c <prvDeleteTCB+0x34>
 800953a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800953e:	f383 8811 	msr	BASEPRI, r3
 8009542:	f3bf 8f6f 	isb	sy
 8009546:	f3bf 8f4f 	dsb	sy
 800954a:	e7fe      	b.n	800954a <prvDeleteTCB+0x32>
	}
 800954c:	bd10      	pop	{r4, pc}
	...

08009550 <prvIdleTask>:
{
 8009550:	b580      	push	{r7, lr}
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 8009552:	4c13      	ldr	r4, [pc, #76]	@ (80095a0 <prvIdleTask+0x50>)
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009554:	4f13      	ldr	r7, [pc, #76]	@ (80095a4 <prvIdleTask+0x54>)
				--uxCurrentNumberOfTasks;
 8009556:	4d14      	ldr	r5, [pc, #80]	@ (80095a8 <prvIdleTask+0x58>)
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 8009558:	6823      	ldr	r3, [r4, #0]
 800955a:	b973      	cbnz	r3, 800957a <prvIdleTask+0x2a>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
 800955c:	4b13      	ldr	r3, [pc, #76]	@ (80095ac <prvIdleTask+0x5c>)
 800955e:	681b      	ldr	r3, [r3, #0]
 8009560:	2b01      	cmp	r3, #1
 8009562:	d9f8      	bls.n	8009556 <prvIdleTask+0x6>
				taskYIELD();
 8009564:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8009568:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800956c:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8009570:	f3bf 8f4f 	dsb	sy
 8009574:	f3bf 8f6f 	isb	sy
 8009578:	e7ed      	b.n	8009556 <prvIdleTask+0x6>
			taskENTER_CRITICAL();
 800957a:	f7ff f8bb 	bl	80086f4 <vPortEnterCritical>
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800957e:	68fb      	ldr	r3, [r7, #12]
 8009580:	68de      	ldr	r6, [r3, #12]
				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 8009582:	1d30      	adds	r0, r6, #4
 8009584:	f7ff f83e 	bl	8008604 <uxListRemove>
				--uxCurrentNumberOfTasks;
 8009588:	682b      	ldr	r3, [r5, #0]
 800958a:	3b01      	subs	r3, #1
 800958c:	602b      	str	r3, [r5, #0]
				--uxDeletedTasksWaitingCleanUp;
 800958e:	6823      	ldr	r3, [r4, #0]
 8009590:	3b01      	subs	r3, #1
 8009592:	6023      	str	r3, [r4, #0]
			taskEXIT_CRITICAL();
 8009594:	f7ff f8ce 	bl	8008734 <vPortExitCritical>
			prvDeleteTCB( pxTCB );
 8009598:	4630      	mov	r0, r6
 800959a:	f7ff ffbd 	bl	8009518 <prvDeleteTCB>
 800959e:	e7db      	b.n	8009558 <prvIdleTask+0x8>
 80095a0:	20012dd8 	.word	0x20012dd8
 80095a4:	20012ddc 	.word	0x20012ddc
 80095a8:	20012dc0 	.word	0x20012dc0
 80095ac:	20012e34 	.word	0x20012e34

080095b0 <prvInitialiseNewTask.constprop.0>:
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 80095b0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80095b4:	e9dd 9409 	ldrd	r9, r4, [sp, #36]	@ 0x24
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 80095b8:	0096      	lsls	r6, r2, #2
 80095ba:	4632      	mov	r2, r6
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 80095bc:	4607      	mov	r7, r0
 80095be:	460d      	mov	r5, r1
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 80095c0:	6b20      	ldr	r0, [r4, #48]	@ 0x30
 80095c2:	21a5      	movs	r1, #165	@ 0xa5
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 80095c4:	4698      	mov	r8, r3
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 80095c6:	f019 fdf4 	bl	80231b2 <memset>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
 80095ca:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 80095cc:	3e04      	subs	r6, #4
 80095ce:	441e      	add	r6, r3
		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) ); /*lint !e923 !e9033 !e9078 MISRA exception.  Avoiding casts between pointers and integers is not practical.  Size differences accounted for using portPOINTER_SIZE_TYPE type.  Checked by assert(). */
 80095d0:	f026 0607 	bic.w	r6, r6, #7
	if( pcName != NULL )
 80095d4:	b3b5      	cbz	r5, 8009644 <prvInitialiseNewTask.constprop.0+0x94>
 80095d6:	1e6b      	subs	r3, r5, #1
 80095d8:	f104 0233 	add.w	r2, r4, #51	@ 0x33
 80095dc:	350f      	adds	r5, #15
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 80095de:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 80095e2:	f802 1f01 	strb.w	r1, [r2, #1]!
			if( pcName[ x ] == ( char ) 0x00 )
 80095e6:	b109      	cbz	r1, 80095ec <prvInitialiseNewTask.constprop.0+0x3c>
		for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
 80095e8:	42ab      	cmp	r3, r5
 80095ea:	d1f8      	bne.n	80095de <prvInitialiseNewTask.constprop.0+0x2e>
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
 80095ec:	2300      	movs	r3, #0
 80095ee:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
 80095f2:	9d08      	ldr	r5, [sp, #32]
 80095f4:	2d37      	cmp	r5, #55	@ 0x37
 80095f6:	bf28      	it	cs
 80095f8:	2537      	movcs	r5, #55	@ 0x37
		pxNewTCB->uxMutexesHeld = 0;
 80095fa:	f04f 0a00 	mov.w	sl, #0
	pxNewTCB->uxPriority = uxPriority;
 80095fe:	62e5      	str	r5, [r4, #44]	@ 0x2c
		pxNewTCB->uxBasePriority = uxPriority;
 8009600:	64e5      	str	r5, [r4, #76]	@ 0x4c
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 8009602:	1d20      	adds	r0, r4, #4
		pxNewTCB->uxMutexesHeld = 0;
 8009604:	f8c4 a050 	str.w	sl, [r4, #80]	@ 0x50
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 8009608:	f7fe ffd7 	bl	80085ba <vListInitialiseItem>
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800960c:	f1c5 0538 	rsb	r5, r5, #56	@ 0x38
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 8009610:	f104 0018 	add.w	r0, r4, #24
 8009614:	f7fe ffd1 	bl	80085ba <vListInitialiseItem>
		pxNewTCB->ulNotifiedValue = 0;
 8009618:	f8c4 a058 	str.w	sl, [r4, #88]	@ 0x58
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
 800961c:	6124      	str	r4, [r4, #16]
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800961e:	61a5      	str	r5, [r4, #24]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 8009620:	6264      	str	r4, [r4, #36]	@ 0x24
		pxNewTCB->pxTaskTag = NULL;
 8009622:	f8c4 a054 	str.w	sl, [r4, #84]	@ 0x54
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 8009626:	f884 a05c 	strb.w	sl, [r4, #92]	@ 0x5c
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
 800962a:	4642      	mov	r2, r8
 800962c:	4639      	mov	r1, r7
 800962e:	4630      	mov	r0, r6
 8009630:	f7ff f836 	bl	80086a0 <pxPortInitialiseStack>
 8009634:	6020      	str	r0, [r4, #0]
	if( pxCreatedTask != NULL )
 8009636:	f1b9 0f00 	cmp.w	r9, #0
 800963a:	d001      	beq.n	8009640 <prvInitialiseNewTask.constprop.0+0x90>
		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
 800963c:	f8c9 4000 	str.w	r4, [r9]
}
 8009640:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		pxNewTCB->pcTaskName[ 0 ] = 0x00;
 8009644:	f884 5034 	strb.w	r5, [r4, #52]	@ 0x34
 8009648:	e7d3      	b.n	80095f2 <prvInitialiseNewTask.constprop.0+0x42>

0800964a <xTaskCreateStatic>:
	{
 800964a:	b570      	push	{r4, r5, r6, lr}
 800964c:	b086      	sub	sp, #24
 800964e:	e9dd 540b 	ldrd	r5, r4, [sp, #44]	@ 0x2c
		configASSERT( puxStackBuffer != NULL );
 8009652:	b945      	cbnz	r5, 8009666 <xTaskCreateStatic+0x1c>
 8009654:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009658:	f383 8811 	msr	BASEPRI, r3
 800965c:	f3bf 8f6f 	isb	sy
 8009660:	f3bf 8f4f 	dsb	sy
 8009664:	e7fe      	b.n	8009664 <xTaskCreateStatic+0x1a>
		configASSERT( pxTaskBuffer != NULL );
 8009666:	b944      	cbnz	r4, 800967a <xTaskCreateStatic+0x30>
 8009668:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800966c:	f383 8811 	msr	BASEPRI, r3
 8009670:	f3bf 8f6f 	isb	sy
 8009674:	f3bf 8f4f 	dsb	sy
 8009678:	e7fe      	b.n	8009678 <xTaskCreateStatic+0x2e>
			volatile size_t xSize = sizeof( StaticTask_t );
 800967a:	2660      	movs	r6, #96	@ 0x60
 800967c:	9605      	str	r6, [sp, #20]
			configASSERT( xSize == sizeof( TCB_t ) );
 800967e:	9e05      	ldr	r6, [sp, #20]
 8009680:	2e60      	cmp	r6, #96	@ 0x60
 8009682:	d008      	beq.n	8009696 <xTaskCreateStatic+0x4c>
 8009684:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009688:	f383 8811 	msr	BASEPRI, r3
 800968c:	f3bf 8f6f 	isb	sy
 8009690:	f3bf 8f4f 	dsb	sy
 8009694:	e7fe      	b.n	8009694 <xTaskCreateStatic+0x4a>
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 8009696:	6325      	str	r5, [r4, #48]	@ 0x30
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 8009698:	2502      	movs	r5, #2
 800969a:	f884 505d 	strb.w	r5, [r4, #93]	@ 0x5d
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800969e:	ad04      	add	r5, sp, #16
 80096a0:	9501      	str	r5, [sp, #4]
 80096a2:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
 80096a4:	9402      	str	r4, [sp, #8]
 80096a6:	9500      	str	r5, [sp, #0]
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 80096a8:	9e05      	ldr	r6, [sp, #20]
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 80096aa:	f7ff ff81 	bl	80095b0 <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 80096ae:	4620      	mov	r0, r4
 80096b0:	f7ff fe68 	bl	8009384 <prvAddNewTaskToReadyList>
	}
 80096b4:	9804      	ldr	r0, [sp, #16]
 80096b6:	b006      	add	sp, #24
 80096b8:	bd70      	pop	{r4, r5, r6, pc}

080096ba <xTaskCreate>:
	{
 80096ba:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80096be:	4607      	mov	r7, r0
 80096c0:	b085      	sub	sp, #20
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 80096c2:	0090      	lsls	r0, r2, #2
	{
 80096c4:	4688      	mov	r8, r1
 80096c6:	4616      	mov	r6, r2
 80096c8:	4699      	mov	r9, r3
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 80096ca:	f7fe fe95 	bl	80083f8 <pvPortMalloc>
			if( pxStack != NULL )
 80096ce:	4605      	mov	r5, r0
 80096d0:	b920      	cbnz	r0, 80096dc <xTaskCreate+0x22>
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 80096d2:	f04f 30ff 	mov.w	r0, #4294967295
	}
 80096d6:	b005      	add	sp, #20
 80096d8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e9087 !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack, and the first member of TCB_t is always a pointer to the task's stack. */
 80096dc:	2060      	movs	r0, #96	@ 0x60
 80096de:	f7fe fe8b 	bl	80083f8 <pvPortMalloc>
				if( pxNewTCB != NULL )
 80096e2:	4604      	mov	r4, r0
 80096e4:	b198      	cbz	r0, 800970e <xTaskCreate+0x54>
				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
 80096e6:	2300      	movs	r3, #0
 80096e8:	f880 305d 	strb.w	r3, [r0, #93]	@ 0x5d
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 80096ec:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
					pxNewTCB->pxStack = pxStack;
 80096ee:	6305      	str	r5, [r0, #48]	@ 0x30
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 80096f0:	9301      	str	r3, [sp, #4]
 80096f2:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80096f4:	9002      	str	r0, [sp, #8]
 80096f6:	9300      	str	r3, [sp, #0]
 80096f8:	4632      	mov	r2, r6
 80096fa:	464b      	mov	r3, r9
 80096fc:	4641      	mov	r1, r8
 80096fe:	4638      	mov	r0, r7
 8009700:	f7ff ff56 	bl	80095b0 <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 8009704:	4620      	mov	r0, r4
 8009706:	f7ff fe3d 	bl	8009384 <prvAddNewTaskToReadyList>
			xReturn = pdPASS;
 800970a:	2001      	movs	r0, #1
 800970c:	e7e3      	b.n	80096d6 <xTaskCreate+0x1c>
					vPortFree( pxStack );
 800970e:	4628      	mov	r0, r5
 8009710:	f7fe ff0a 	bl	8008528 <vPortFree>
		if( pxNewTCB != NULL )
 8009714:	e7dd      	b.n	80096d2 <xTaskCreate+0x18>
	...

08009718 <vTaskStartScheduler>:
{
 8009718:	b510      	push	{r4, lr}
 800971a:	b088      	sub	sp, #32
		StaticTask_t *pxIdleTaskTCBBuffer = NULL;
 800971c:	2400      	movs	r4, #0
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 800971e:	aa07      	add	r2, sp, #28
 8009720:	a906      	add	r1, sp, #24
 8009722:	a805      	add	r0, sp, #20
		StackType_t *pxIdleTaskStackBuffer = NULL;
 8009724:	e9cd 4405 	strd	r4, r4, [sp, #20]
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 8009728:	f7fe fe28 	bl	800837c <vApplicationGetIdleTaskMemory>
		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
 800972c:	9b05      	ldr	r3, [sp, #20]
 800972e:	9302      	str	r3, [sp, #8]
 8009730:	9b06      	ldr	r3, [sp, #24]
 8009732:	9a07      	ldr	r2, [sp, #28]
 8009734:	4916      	ldr	r1, [pc, #88]	@ (8009790 <vTaskStartScheduler+0x78>)
 8009736:	4817      	ldr	r0, [pc, #92]	@ (8009794 <vTaskStartScheduler+0x7c>)
 8009738:	e9cd 4300 	strd	r4, r3, [sp]
 800973c:	4623      	mov	r3, r4
 800973e:	f7ff ff84 	bl	800964a <xTaskCreateStatic>
		if( xIdleTaskHandle != NULL )
 8009742:	b318      	cbz	r0, 800978c <vTaskStartScheduler+0x74>
			xReturn = xTimerCreateTimerTask();
 8009744:	f000 fba6 	bl	8009e94 <xTimerCreateTimerTask>
	if( xReturn == pdPASS )
 8009748:	2801      	cmp	r0, #1
 800974a:	d114      	bne.n	8009776 <vTaskStartScheduler+0x5e>
 800974c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009750:	f383 8811 	msr	BASEPRI, r3
 8009754:	f3bf 8f6f 	isb	sy
 8009758:	f3bf 8f4f 	dsb	sy
		xNextTaskUnblockTime = portMAX_DELAY;
 800975c:	4b0e      	ldr	r3, [pc, #56]	@ (8009798 <vTaskStartScheduler+0x80>)
 800975e:	f04f 32ff 	mov.w	r2, #4294967295
 8009762:	601a      	str	r2, [r3, #0]
		xSchedulerRunning = pdTRUE;
 8009764:	4b0d      	ldr	r3, [pc, #52]	@ (800979c <vTaskStartScheduler+0x84>)
 8009766:	6018      	str	r0, [r3, #0]
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 8009768:	4b0d      	ldr	r3, [pc, #52]	@ (80097a0 <vTaskStartScheduler+0x88>)
 800976a:	601c      	str	r4, [r3, #0]
}
 800976c:	b008      	add	sp, #32
 800976e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
		if( xPortStartScheduler() != pdFALSE )
 8009772:	f7ff b84f 	b.w	8008814 <xPortStartScheduler>
		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
 8009776:	3001      	adds	r0, #1
 8009778:	d108      	bne.n	800978c <vTaskStartScheduler+0x74>
 800977a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800977e:	f383 8811 	msr	BASEPRI, r3
 8009782:	f3bf 8f6f 	isb	sy
 8009786:	f3bf 8f4f 	dsb	sy
 800978a:	e7fe      	b.n	800978a <vTaskStartScheduler+0x72>
}
 800978c:	b008      	add	sp, #32
 800978e:	bd10      	pop	{r4, pc}
 8009790:	08024839 	.word	0x08024839
 8009794:	08009551 	.word	0x08009551
 8009798:	20012da0 	.word	0x20012da0
 800979c:	20012db4 	.word	0x20012db4
 80097a0:	20012dbc 	.word	0x20012dbc

080097a4 <vTaskSuspendAll>:
	++uxSchedulerSuspended;
 80097a4:	4a02      	ldr	r2, [pc, #8]	@ (80097b0 <vTaskSuspendAll+0xc>)
 80097a6:	6813      	ldr	r3, [r2, #0]
 80097a8:	3301      	adds	r3, #1
 80097aa:	6013      	str	r3, [r2, #0]
}
 80097ac:	4770      	bx	lr
 80097ae:	bf00      	nop
 80097b0:	20012d9c 	.word	0x20012d9c

080097b4 <xTaskGetTickCount>:
		xTicks = xTickCount;
 80097b4:	4b01      	ldr	r3, [pc, #4]	@ (80097bc <xTaskGetTickCount+0x8>)
 80097b6:	6818      	ldr	r0, [r3, #0]
}
 80097b8:	4770      	bx	lr
 80097ba:	bf00      	nop
 80097bc:	20012dbc 	.word	0x20012dbc

080097c0 <xTaskIncrementTick>:
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 80097c0:	4b3f      	ldr	r3, [pc, #252]	@ (80098c0 <xTaskIncrementTick+0x100>)
 80097c2:	681b      	ldr	r3, [r3, #0]
{
 80097c4:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 80097c8:	2b00      	cmp	r3, #0
 80097ca:	d172      	bne.n	80098b2 <xTaskIncrementTick+0xf2>
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
 80097cc:	4b3d      	ldr	r3, [pc, #244]	@ (80098c4 <xTaskIncrementTick+0x104>)
 80097ce:	681c      	ldr	r4, [r3, #0]
 80097d0:	3401      	adds	r4, #1
		xTickCount = xConstTickCount;
 80097d2:	601c      	str	r4, [r3, #0]
		if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to false as it is looking for an overflow. */
 80097d4:	b9bc      	cbnz	r4, 8009806 <xTaskIncrementTick+0x46>
			taskSWITCH_DELAYED_LISTS();
 80097d6:	4b3c      	ldr	r3, [pc, #240]	@ (80098c8 <xTaskIncrementTick+0x108>)
 80097d8:	681a      	ldr	r2, [r3, #0]
 80097da:	6812      	ldr	r2, [r2, #0]
 80097dc:	b142      	cbz	r2, 80097f0 <xTaskIncrementTick+0x30>
 80097de:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80097e2:	f383 8811 	msr	BASEPRI, r3
 80097e6:	f3bf 8f6f 	isb	sy
 80097ea:	f3bf 8f4f 	dsb	sy
 80097ee:	e7fe      	b.n	80097ee <xTaskIncrementTick+0x2e>
 80097f0:	4a36      	ldr	r2, [pc, #216]	@ (80098cc <xTaskIncrementTick+0x10c>)
 80097f2:	6819      	ldr	r1, [r3, #0]
 80097f4:	6810      	ldr	r0, [r2, #0]
 80097f6:	6018      	str	r0, [r3, #0]
 80097f8:	6011      	str	r1, [r2, #0]
 80097fa:	4a35      	ldr	r2, [pc, #212]	@ (80098d0 <xTaskIncrementTick+0x110>)
 80097fc:	6813      	ldr	r3, [r2, #0]
 80097fe:	3301      	adds	r3, #1
 8009800:	6013      	str	r3, [r2, #0]
 8009802:	f7ff fe77 	bl	80094f4 <prvResetNextTaskUnblockTime>
		if( xConstTickCount >= xNextTaskUnblockTime )
 8009806:	4d33      	ldr	r5, [pc, #204]	@ (80098d4 <xTaskIncrementTick+0x114>)
 8009808:	4e33      	ldr	r6, [pc, #204]	@ (80098d8 <xTaskIncrementTick+0x118>)
 800980a:	682b      	ldr	r3, [r5, #0]
 800980c:	4f33      	ldr	r7, [pc, #204]	@ (80098dc <xTaskIncrementTick+0x11c>)
 800980e:	429c      	cmp	r4, r3
BaseType_t xSwitchRequired = pdFALSE;
 8009810:	f04f 0b00 	mov.w	fp, #0
		if( xConstTickCount >= xNextTaskUnblockTime )
 8009814:	d212      	bcs.n	800983c <xTaskIncrementTick+0x7c>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
 8009816:	683a      	ldr	r2, [r7, #0]
 8009818:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
 800981a:	2114      	movs	r1, #20
 800981c:	434a      	muls	r2, r1
 800981e:	58b2      	ldr	r2, [r6, r2]
				xSwitchRequired = pdTRUE;
 8009820:	2a02      	cmp	r2, #2
			if( xYieldPending != pdFALSE )
 8009822:	4a2f      	ldr	r2, [pc, #188]	@ (80098e0 <xTaskIncrementTick+0x120>)
 8009824:	6812      	ldr	r2, [r2, #0]
				xSwitchRequired = pdTRUE;
 8009826:	bf28      	it	cs
 8009828:	f04f 0b01 	movcs.w	fp, #1
				xSwitchRequired = pdTRUE;
 800982c:	2a00      	cmp	r2, #0
 800982e:	bf18      	it	ne
 8009830:	f04f 0b01 	movne.w	fp, #1
}
 8009834:	4658      	mov	r0, fp
 8009836:	b003      	add	sp, #12
 8009838:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800983c:	f8df 9088 	ldr.w	r9, [pc, #136]	@ 80098c8 <xTaskIncrementTick+0x108>
					prvAddTaskToReadyList( pxTCB );
 8009840:	f8df a0a4 	ldr.w	sl, [pc, #164]	@ 80098e8 <xTaskIncrementTick+0x128>
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 8009844:	f8d9 2000 	ldr.w	r2, [r9]
 8009848:	6812      	ldr	r2, [r2, #0]
 800984a:	b91a      	cbnz	r2, 8009854 <xTaskIncrementTick+0x94>
					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800984c:	f04f 32ff 	mov.w	r2, #4294967295
 8009850:	602a      	str	r2, [r5, #0]
					break;
 8009852:	e7e0      	b.n	8009816 <xTaskIncrementTick+0x56>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009854:	f8d9 2000 	ldr.w	r2, [r9]
 8009858:	68d2      	ldr	r2, [r2, #12]
 800985a:	f8d2 800c 	ldr.w	r8, [r2, #12]
					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 800985e:	f8d8 1004 	ldr.w	r1, [r8, #4]
					if( xConstTickCount < xItemValue )
 8009862:	428c      	cmp	r4, r1
 8009864:	d201      	bcs.n	800986a <xTaskIncrementTick+0xaa>
						xNextTaskUnblockTime = xItemValue;
 8009866:	6029      	str	r1, [r5, #0]
						break; /*lint !e9011 Code structure here is deedmed easier to understand with multiple breaks. */
 8009868:	e7d5      	b.n	8009816 <xTaskIncrementTick+0x56>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800986a:	f108 0304 	add.w	r3, r8, #4
 800986e:	4618      	mov	r0, r3
 8009870:	9301      	str	r3, [sp, #4]
 8009872:	f7fe fec7 	bl	8008604 <uxListRemove>
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
 8009876:	f8d8 1028 	ldr.w	r1, [r8, #40]	@ 0x28
 800987a:	b119      	cbz	r1, 8009884 <xTaskIncrementTick+0xc4>
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 800987c:	f108 0018 	add.w	r0, r8, #24
 8009880:	f7fe fec0 	bl	8008604 <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
 8009884:	f8d8 002c 	ldr.w	r0, [r8, #44]	@ 0x2c
 8009888:	f8da 1000 	ldr.w	r1, [sl]
 800988c:	2314      	movs	r3, #20
 800988e:	4288      	cmp	r0, r1
 8009890:	bf88      	it	hi
 8009892:	f8ca 0000 	strhi.w	r0, [sl]
 8009896:	9901      	ldr	r1, [sp, #4]
 8009898:	fb03 6000 	mla	r0, r3, r0, r6
 800989c:	f7fe fe90 	bl	80085c0 <vListInsertEnd>
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 80098a0:	6838      	ldr	r0, [r7, #0]
 80098a2:	f8d8 102c 	ldr.w	r1, [r8, #44]	@ 0x2c
 80098a6:	6ac2      	ldr	r2, [r0, #44]	@ 0x2c
							xSwitchRequired = pdTRUE;
 80098a8:	4291      	cmp	r1, r2
 80098aa:	bf28      	it	cs
 80098ac:	f04f 0b01 	movcs.w	fp, #1
 80098b0:	e7c8      	b.n	8009844 <xTaskIncrementTick+0x84>
		++xPendedTicks;
 80098b2:	4a0c      	ldr	r2, [pc, #48]	@ (80098e4 <xTaskIncrementTick+0x124>)
 80098b4:	6813      	ldr	r3, [r2, #0]
 80098b6:	3301      	adds	r3, #1
 80098b8:	6013      	str	r3, [r2, #0]
BaseType_t xSwitchRequired = pdFALSE;
 80098ba:	f04f 0b00 	mov.w	fp, #0
 80098be:	e7b9      	b.n	8009834 <xTaskIncrementTick+0x74>
 80098c0:	20012d9c 	.word	0x20012d9c
 80098c4:	20012dbc 	.word	0x20012dbc
 80098c8:	20012e08 	.word	0x20012e08
 80098cc:	20012e04 	.word	0x20012e04
 80098d0:	20012da8 	.word	0x20012da8
 80098d4:	20012da0 	.word	0x20012da0
 80098d8:	20012e34 	.word	0x20012e34
 80098dc:	20013294 	.word	0x20013294
 80098e0:	20012dac 	.word	0x20012dac
 80098e4:	20012db0 	.word	0x20012db0
 80098e8:	20012db8 	.word	0x20012db8

080098ec <xTaskResumeAll>:
{
 80098ec:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
	configASSERT( uxSchedulerSuspended );
 80098f0:	4c30      	ldr	r4, [pc, #192]	@ (80099b4 <xTaskResumeAll+0xc8>)
 80098f2:	6823      	ldr	r3, [r4, #0]
 80098f4:	b943      	cbnz	r3, 8009908 <xTaskResumeAll+0x1c>
 80098f6:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80098fa:	f383 8811 	msr	BASEPRI, r3
 80098fe:	f3bf 8f6f 	isb	sy
 8009902:	f3bf 8f4f 	dsb	sy
 8009906:	e7fe      	b.n	8009906 <xTaskResumeAll+0x1a>
	taskENTER_CRITICAL();
 8009908:	f7fe fef4 	bl	80086f4 <vPortEnterCritical>
		--uxSchedulerSuspended;
 800990c:	6823      	ldr	r3, [r4, #0]
 800990e:	3b01      	subs	r3, #1
 8009910:	6023      	str	r3, [r4, #0]
		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8009912:	6824      	ldr	r4, [r4, #0]
 8009914:	b12c      	cbz	r4, 8009922 <xTaskResumeAll+0x36>
BaseType_t xAlreadyYielded = pdFALSE;
 8009916:	2400      	movs	r4, #0
	taskEXIT_CRITICAL();
 8009918:	f7fe ff0c 	bl	8008734 <vPortExitCritical>
}
 800991c:	4620      	mov	r0, r4
 800991e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
 8009922:	4b25      	ldr	r3, [pc, #148]	@ (80099b8 <xTaskResumeAll+0xcc>)
 8009924:	681b      	ldr	r3, [r3, #0]
 8009926:	2b00      	cmp	r3, #0
 8009928:	d0f5      	beq.n	8009916 <xTaskResumeAll+0x2a>
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 800992a:	4d24      	ldr	r5, [pc, #144]	@ (80099bc <xTaskResumeAll+0xd0>)
					prvAddTaskToReadyList( pxTCB );
 800992c:	4e24      	ldr	r6, [pc, #144]	@ (80099c0 <xTaskResumeAll+0xd4>)
 800992e:	f8df 80a0 	ldr.w	r8, [pc, #160]	@ 80099d0 <xTaskResumeAll+0xe4>
 8009932:	e01d      	b.n	8009970 <xTaskResumeAll+0x84>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009934:	68eb      	ldr	r3, [r5, #12]
 8009936:	68dc      	ldr	r4, [r3, #12]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 8009938:	1d27      	adds	r7, r4, #4
					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 800993a:	f104 0018 	add.w	r0, r4, #24
 800993e:	f7fe fe61 	bl	8008604 <uxListRemove>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 8009942:	4638      	mov	r0, r7
 8009944:	f7fe fe5e 	bl	8008604 <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
 8009948:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 800994a:	6832      	ldr	r2, [r6, #0]
 800994c:	2014      	movs	r0, #20
 800994e:	4293      	cmp	r3, r2
 8009950:	fb00 8003 	mla	r0, r0, r3, r8
 8009954:	4639      	mov	r1, r7
 8009956:	bf88      	it	hi
 8009958:	6033      	strhi	r3, [r6, #0]
 800995a:	f7fe fe31 	bl	80085c0 <vListInsertEnd>
					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 800995e:	4b19      	ldr	r3, [pc, #100]	@ (80099c4 <xTaskResumeAll+0xd8>)
 8009960:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 8009962:	681b      	ldr	r3, [r3, #0]
 8009964:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8009966:	429a      	cmp	r2, r3
 8009968:	d302      	bcc.n	8009970 <xTaskResumeAll+0x84>
						xYieldPending = pdTRUE;
 800996a:	4b17      	ldr	r3, [pc, #92]	@ (80099c8 <xTaskResumeAll+0xdc>)
 800996c:	2201      	movs	r2, #1
 800996e:	601a      	str	r2, [r3, #0]
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 8009970:	682b      	ldr	r3, [r5, #0]
 8009972:	2b00      	cmp	r3, #0
 8009974:	d1de      	bne.n	8009934 <xTaskResumeAll+0x48>
				if( pxTCB != NULL )
 8009976:	b10c      	cbz	r4, 800997c <xTaskResumeAll+0x90>
					prvResetNextTaskUnblockTime();
 8009978:	f7ff fdbc 	bl	80094f4 <prvResetNextTaskUnblockTime>
					TickType_t xPendedCounts = xPendedTicks; /* Non-volatile copy. */
 800997c:	4d13      	ldr	r5, [pc, #76]	@ (80099cc <xTaskResumeAll+0xe0>)
 800997e:	682c      	ldr	r4, [r5, #0]
					if( xPendedCounts > ( TickType_t ) 0U )
 8009980:	b144      	cbz	r4, 8009994 <xTaskResumeAll+0xa8>
								xYieldPending = pdTRUE;
 8009982:	4e11      	ldr	r6, [pc, #68]	@ (80099c8 <xTaskResumeAll+0xdc>)
 8009984:	2701      	movs	r7, #1
							if( xTaskIncrementTick() != pdFALSE )
 8009986:	f7ff ff1b 	bl	80097c0 <xTaskIncrementTick>
 800998a:	b100      	cbz	r0, 800998e <xTaskResumeAll+0xa2>
								xYieldPending = pdTRUE;
 800998c:	6037      	str	r7, [r6, #0]
						} while( xPendedCounts > ( TickType_t ) 0U );
 800998e:	3c01      	subs	r4, #1
 8009990:	d1f9      	bne.n	8009986 <xTaskResumeAll+0x9a>
						xPendedTicks = 0;
 8009992:	602c      	str	r4, [r5, #0]
				if( xYieldPending != pdFALSE )
 8009994:	4b0c      	ldr	r3, [pc, #48]	@ (80099c8 <xTaskResumeAll+0xdc>)
 8009996:	681b      	ldr	r3, [r3, #0]
 8009998:	2b00      	cmp	r3, #0
 800999a:	d0bc      	beq.n	8009916 <xTaskResumeAll+0x2a>
					taskYIELD_IF_USING_PREEMPTION();
 800999c:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 80099a0:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 80099a4:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 80099a8:	f3bf 8f4f 	dsb	sy
 80099ac:	f3bf 8f6f 	isb	sy
						xAlreadyYielded = pdTRUE;
 80099b0:	2401      	movs	r4, #1
 80099b2:	e7b1      	b.n	8009918 <xTaskResumeAll+0x2c>
 80099b4:	20012d9c 	.word	0x20012d9c
 80099b8:	20012dc0 	.word	0x20012dc0
 80099bc:	20012df0 	.word	0x20012df0
 80099c0:	20012db8 	.word	0x20012db8
 80099c4:	20013294 	.word	0x20013294
 80099c8:	20012dac 	.word	0x20012dac
 80099cc:	20012db0 	.word	0x20012db0
 80099d0:	20012e34 	.word	0x20012e34

080099d4 <vTaskDelay>:
	{
 80099d4:	b508      	push	{r3, lr}
		if( xTicksToDelay > ( TickType_t ) 0U )
 80099d6:	b950      	cbnz	r0, 80099ee <vTaskDelay+0x1a>
			portYIELD_WITHIN_API();
 80099d8:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 80099dc:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 80099e0:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 80099e4:	f3bf 8f4f 	dsb	sy
 80099e8:	f3bf 8f6f 	isb	sy
	}
 80099ec:	bd08      	pop	{r3, pc}
			configASSERT( uxSchedulerSuspended == 0 );
 80099ee:	4b0a      	ldr	r3, [pc, #40]	@ (8009a18 <vTaskDelay+0x44>)
 80099f0:	6819      	ldr	r1, [r3, #0]
 80099f2:	b141      	cbz	r1, 8009a06 <vTaskDelay+0x32>
 80099f4:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80099f8:	f383 8811 	msr	BASEPRI, r3
 80099fc:	f3bf 8f6f 	isb	sy
 8009a00:	f3bf 8f4f 	dsb	sy
 8009a04:	e7fe      	b.n	8009a04 <vTaskDelay+0x30>
			vTaskSuspendAll();
 8009a06:	f7ff fecd 	bl	80097a4 <vTaskSuspendAll>
				prvAddCurrentTaskToDelayedList( xTicksToDelay, pdFALSE );
 8009a0a:	f7ff fd3b 	bl	8009484 <prvAddCurrentTaskToDelayedList>
			xAlreadyYielded = xTaskResumeAll();
 8009a0e:	f7ff ff6d 	bl	80098ec <xTaskResumeAll>
		if( xAlreadyYielded == pdFALSE )
 8009a12:	2800      	cmp	r0, #0
 8009a14:	d0e0      	beq.n	80099d8 <vTaskDelay+0x4>
 8009a16:	e7e9      	b.n	80099ec <vTaskDelay+0x18>
 8009a18:	20012d9c 	.word	0x20012d9c

08009a1c <vTaskSwitchContext>:
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 8009a1c:	4b17      	ldr	r3, [pc, #92]	@ (8009a7c <vTaskSwitchContext+0x60>)
 8009a1e:	681a      	ldr	r2, [r3, #0]
 8009a20:	4b17      	ldr	r3, [pc, #92]	@ (8009a80 <vTaskSwitchContext+0x64>)
{
 8009a22:	b570      	push	{r4, r5, r6, lr}
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 8009a24:	b112      	cbz	r2, 8009a2c <vTaskSwitchContext+0x10>
		xYieldPending = pdTRUE;
 8009a26:	2201      	movs	r2, #1
 8009a28:	601a      	str	r2, [r3, #0]
}
 8009a2a:	bd70      	pop	{r4, r5, r6, pc}
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009a2c:	4d15      	ldr	r5, [pc, #84]	@ (8009a84 <vTaskSwitchContext+0x68>)
		xYieldPending = pdFALSE;
 8009a2e:	601a      	str	r2, [r3, #0]
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009a30:	682a      	ldr	r2, [r5, #0]
 8009a32:	4915      	ldr	r1, [pc, #84]	@ (8009a88 <vTaskSwitchContext+0x6c>)
 8009a34:	2614      	movs	r6, #20
 8009a36:	fb06 f302 	mul.w	r3, r6, r2
 8009a3a:	18c8      	adds	r0, r1, r3
 8009a3c:	58cc      	ldr	r4, [r1, r3]
 8009a3e:	b18c      	cbz	r4, 8009a64 <vTaskSwitchContext+0x48>
 8009a40:	6844      	ldr	r4, [r0, #4]
 8009a42:	3308      	adds	r3, #8
 8009a44:	6864      	ldr	r4, [r4, #4]
 8009a46:	6044      	str	r4, [r0, #4]
 8009a48:	440b      	add	r3, r1
 8009a4a:	429c      	cmp	r4, r3
 8009a4c:	bf04      	itt	eq
 8009a4e:	6863      	ldreq	r3, [r4, #4]
 8009a50:	6043      	streq	r3, [r0, #4]
 8009a52:	2314      	movs	r3, #20
 8009a54:	fb03 1102 	mla	r1, r3, r2, r1
 8009a58:	684b      	ldr	r3, [r1, #4]
 8009a5a:	68d9      	ldr	r1, [r3, #12]
 8009a5c:	4b0b      	ldr	r3, [pc, #44]	@ (8009a8c <vTaskSwitchContext+0x70>)
 8009a5e:	6019      	str	r1, [r3, #0]
 8009a60:	602a      	str	r2, [r5, #0]
}
 8009a62:	e7e2      	b.n	8009a2a <vTaskSwitchContext+0xe>
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009a64:	b942      	cbnz	r2, 8009a78 <vTaskSwitchContext+0x5c>
 8009a66:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009a6a:	f383 8811 	msr	BASEPRI, r3
 8009a6e:	f3bf 8f6f 	isb	sy
 8009a72:	f3bf 8f4f 	dsb	sy
 8009a76:	e7fe      	b.n	8009a76 <vTaskSwitchContext+0x5a>
 8009a78:	3a01      	subs	r2, #1
 8009a7a:	e7dc      	b.n	8009a36 <vTaskSwitchContext+0x1a>
 8009a7c:	20012d9c 	.word	0x20012d9c
 8009a80:	20012dac 	.word	0x20012dac
 8009a84:	20012db8 	.word	0x20012db8
 8009a88:	20012e34 	.word	0x20012e34
 8009a8c:	20013294 	.word	0x20013294

08009a90 <vTaskPlaceOnEventList>:
{
 8009a90:	b510      	push	{r4, lr}
 8009a92:	460c      	mov	r4, r1
	configASSERT( pxEventList );
 8009a94:	b940      	cbnz	r0, 8009aa8 <vTaskPlaceOnEventList+0x18>
 8009a96:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009a9a:	f383 8811 	msr	BASEPRI, r3
 8009a9e:	f3bf 8f6f 	isb	sy
 8009aa2:	f3bf 8f4f 	dsb	sy
 8009aa6:	e7fe      	b.n	8009aa6 <vTaskPlaceOnEventList+0x16>
	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 8009aa8:	4b05      	ldr	r3, [pc, #20]	@ (8009ac0 <vTaskPlaceOnEventList+0x30>)
 8009aaa:	6819      	ldr	r1, [r3, #0]
 8009aac:	3118      	adds	r1, #24
 8009aae:	f7fe fd92 	bl	80085d6 <vListInsert>
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 8009ab2:	4620      	mov	r0, r4
 8009ab4:	2101      	movs	r1, #1
}
 8009ab6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 8009aba:	f7ff bce3 	b.w	8009484 <prvAddCurrentTaskToDelayedList>
 8009abe:	bf00      	nop
 8009ac0:	20013294 	.word	0x20013294

08009ac4 <vTaskPlaceOnEventListRestricted>:
	{
 8009ac4:	b538      	push	{r3, r4, r5, lr}
 8009ac6:	460d      	mov	r5, r1
 8009ac8:	4614      	mov	r4, r2
		configASSERT( pxEventList );
 8009aca:	b940      	cbnz	r0, 8009ade <vTaskPlaceOnEventListRestricted+0x1a>
 8009acc:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009ad0:	f383 8811 	msr	BASEPRI, r3
 8009ad4:	f3bf 8f6f 	isb	sy
 8009ad8:	f3bf 8f4f 	dsb	sy
 8009adc:	e7fe      	b.n	8009adc <vTaskPlaceOnEventListRestricted+0x18>
		vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 8009ade:	4b07      	ldr	r3, [pc, #28]	@ (8009afc <vTaskPlaceOnEventListRestricted+0x38>)
 8009ae0:	6819      	ldr	r1, [r3, #0]
 8009ae2:	3118      	adds	r1, #24
 8009ae4:	f7fe fd6c 	bl	80085c0 <vListInsertEnd>
			xTicksToWait = portMAX_DELAY;
 8009ae8:	2c00      	cmp	r4, #0
		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
 8009aea:	4621      	mov	r1, r4
 8009aec:	bf0c      	ite	eq
 8009aee:	4628      	moveq	r0, r5
 8009af0:	f04f 30ff 	movne.w	r0, #4294967295
	}
 8009af4:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
 8009af8:	f7ff bcc4 	b.w	8009484 <prvAddCurrentTaskToDelayedList>
 8009afc:	20013294 	.word	0x20013294

08009b00 <xTaskRemoveFromEventList>:
{
 8009b00:	b538      	push	{r3, r4, r5, lr}
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009b02:	68c3      	ldr	r3, [r0, #12]
 8009b04:	68dc      	ldr	r4, [r3, #12]
	configASSERT( pxUnblockedTCB );
 8009b06:	b944      	cbnz	r4, 8009b1a <xTaskRemoveFromEventList+0x1a>
 8009b08:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009b0c:	f383 8811 	msr	BASEPRI, r3
 8009b10:	f3bf 8f6f 	isb	sy
 8009b14:	f3bf 8f4f 	dsb	sy
 8009b18:	e7fe      	b.n	8009b18 <xTaskRemoveFromEventList+0x18>
	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 8009b1a:	f104 0518 	add.w	r5, r4, #24
 8009b1e:	4628      	mov	r0, r5
 8009b20:	f7fe fd70 	bl	8008604 <uxListRemove>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8009b24:	4b10      	ldr	r3, [pc, #64]	@ (8009b68 <xTaskRemoveFromEventList+0x68>)
 8009b26:	681b      	ldr	r3, [r3, #0]
 8009b28:	b9db      	cbnz	r3, 8009b62 <xTaskRemoveFromEventList+0x62>
		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
 8009b2a:	1d25      	adds	r5, r4, #4
 8009b2c:	4628      	mov	r0, r5
 8009b2e:	f7fe fd69 	bl	8008604 <uxListRemove>
		prvAddTaskToReadyList( pxUnblockedTCB );
 8009b32:	4a0e      	ldr	r2, [pc, #56]	@ (8009b6c <xTaskRemoveFromEventList+0x6c>)
 8009b34:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 8009b36:	6811      	ldr	r1, [r2, #0]
 8009b38:	428b      	cmp	r3, r1
 8009b3a:	bf88      	it	hi
 8009b3c:	6013      	strhi	r3, [r2, #0]
 8009b3e:	4a0c      	ldr	r2, [pc, #48]	@ (8009b70 <xTaskRemoveFromEventList+0x70>)
 8009b40:	2014      	movs	r0, #20
 8009b42:	4629      	mov	r1, r5
 8009b44:	fb00 2003 	mla	r0, r0, r3, r2
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 8009b48:	f7fe fd3a 	bl	80085c0 <vListInsertEnd>
	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
 8009b4c:	4b09      	ldr	r3, [pc, #36]	@ (8009b74 <xTaskRemoveFromEventList+0x74>)
 8009b4e:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 8009b50:	681b      	ldr	r3, [r3, #0]
 8009b52:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8009b54:	429a      	cmp	r2, r3
		xYieldPending = pdTRUE;
 8009b56:	bf83      	ittte	hi
 8009b58:	4b07      	ldrhi	r3, [pc, #28]	@ (8009b78 <xTaskRemoveFromEventList+0x78>)
 8009b5a:	2001      	movhi	r0, #1
 8009b5c:	6018      	strhi	r0, [r3, #0]
		xReturn = pdFALSE;
 8009b5e:	2000      	movls	r0, #0
}
 8009b60:	bd38      	pop	{r3, r4, r5, pc}
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 8009b62:	4806      	ldr	r0, [pc, #24]	@ (8009b7c <xTaskRemoveFromEventList+0x7c>)
 8009b64:	4629      	mov	r1, r5
 8009b66:	e7ef      	b.n	8009b48 <xTaskRemoveFromEventList+0x48>
 8009b68:	20012d9c 	.word	0x20012d9c
 8009b6c:	20012db8 	.word	0x20012db8
 8009b70:	20012e34 	.word	0x20012e34
 8009b74:	20013294 	.word	0x20013294
 8009b78:	20012dac 	.word	0x20012dac
 8009b7c:	20012df0 	.word	0x20012df0

08009b80 <vTaskInternalSetTimeOutState>:
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 8009b80:	4b03      	ldr	r3, [pc, #12]	@ (8009b90 <vTaskInternalSetTimeOutState+0x10>)
 8009b82:	681b      	ldr	r3, [r3, #0]
 8009b84:	6003      	str	r3, [r0, #0]
	pxTimeOut->xTimeOnEntering = xTickCount;
 8009b86:	4b03      	ldr	r3, [pc, #12]	@ (8009b94 <vTaskInternalSetTimeOutState+0x14>)
 8009b88:	681b      	ldr	r3, [r3, #0]
 8009b8a:	6043      	str	r3, [r0, #4]
}
 8009b8c:	4770      	bx	lr
 8009b8e:	bf00      	nop
 8009b90:	20012da8 	.word	0x20012da8
 8009b94:	20012dbc 	.word	0x20012dbc

08009b98 <xTaskCheckForTimeOut>:
{
 8009b98:	b570      	push	{r4, r5, r6, lr}
 8009b9a:	460c      	mov	r4, r1
	configASSERT( pxTimeOut );
 8009b9c:	4605      	mov	r5, r0
 8009b9e:	b940      	cbnz	r0, 8009bb2 <xTaskCheckForTimeOut+0x1a>
 8009ba0:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009ba4:	f383 8811 	msr	BASEPRI, r3
 8009ba8:	f3bf 8f6f 	isb	sy
 8009bac:	f3bf 8f4f 	dsb	sy
 8009bb0:	e7fe      	b.n	8009bb0 <xTaskCheckForTimeOut+0x18>
	configASSERT( pxTicksToWait );
 8009bb2:	b941      	cbnz	r1, 8009bc6 <xTaskCheckForTimeOut+0x2e>
 8009bb4:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009bb8:	f383 8811 	msr	BASEPRI, r3
 8009bbc:	f3bf 8f6f 	isb	sy
 8009bc0:	f3bf 8f4f 	dsb	sy
 8009bc4:	e7fe      	b.n	8009bc4 <xTaskCheckForTimeOut+0x2c>
	taskENTER_CRITICAL();
 8009bc6:	f7fe fd95 	bl	80086f4 <vPortEnterCritical>
		const TickType_t xConstTickCount = xTickCount;
 8009bca:	4b0f      	ldr	r3, [pc, #60]	@ (8009c08 <xTaskCheckForTimeOut+0x70>)
 8009bcc:	6819      	ldr	r1, [r3, #0]
			if( *pxTicksToWait == portMAX_DELAY )
 8009bce:	6823      	ldr	r3, [r4, #0]
 8009bd0:	1c5a      	adds	r2, r3, #1
 8009bd2:	d010      	beq.n	8009bf6 <xTaskCheckForTimeOut+0x5e>
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 8009bd4:	480d      	ldr	r0, [pc, #52]	@ (8009c0c <xTaskCheckForTimeOut+0x74>)
 8009bd6:	682e      	ldr	r6, [r5, #0]
 8009bd8:	6800      	ldr	r0, [r0, #0]
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 8009bda:	686a      	ldr	r2, [r5, #4]
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 8009bdc:	4286      	cmp	r6, r0
 8009bde:	d001      	beq.n	8009be4 <xTaskCheckForTimeOut+0x4c>
 8009be0:	428a      	cmp	r2, r1
 8009be2:	d90f      	bls.n	8009c04 <xTaskCheckForTimeOut+0x6c>
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 8009be4:	1a88      	subs	r0, r1, r2
		else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with some compilers, whereas others require it to prevent integer conversion errors. */
 8009be6:	4283      	cmp	r3, r0
 8009be8:	d90a      	bls.n	8009c00 <xTaskCheckForTimeOut+0x68>
			*pxTicksToWait -= xElapsedTime;
 8009bea:	1a5b      	subs	r3, r3, r1
 8009bec:	4413      	add	r3, r2
 8009bee:	6023      	str	r3, [r4, #0]
			vTaskInternalSetTimeOutState( pxTimeOut );
 8009bf0:	4628      	mov	r0, r5
 8009bf2:	f7ff ffc5 	bl	8009b80 <vTaskInternalSetTimeOutState>
				xReturn = pdFALSE;
 8009bf6:	2400      	movs	r4, #0
	taskEXIT_CRITICAL();
 8009bf8:	f7fe fd9c 	bl	8008734 <vPortExitCritical>
}
 8009bfc:	4620      	mov	r0, r4
 8009bfe:	bd70      	pop	{r4, r5, r6, pc}
			*pxTicksToWait = 0;
 8009c00:	2300      	movs	r3, #0
 8009c02:	6023      	str	r3, [r4, #0]
			xReturn = pdTRUE;
 8009c04:	2401      	movs	r4, #1
 8009c06:	e7f7      	b.n	8009bf8 <xTaskCheckForTimeOut+0x60>
 8009c08:	20012dbc 	.word	0x20012dbc
 8009c0c:	20012da8 	.word	0x20012da8

08009c10 <vTaskMissedYield>:
	xYieldPending = pdTRUE;
 8009c10:	4b01      	ldr	r3, [pc, #4]	@ (8009c18 <vTaskMissedYield+0x8>)
 8009c12:	2201      	movs	r2, #1
 8009c14:	601a      	str	r2, [r3, #0]
}
 8009c16:	4770      	bx	lr
 8009c18:	20012dac 	.word	0x20012dac

08009c1c <xTaskGetSchedulerState>:
		if( xSchedulerRunning == pdFALSE )
 8009c1c:	4b05      	ldr	r3, [pc, #20]	@ (8009c34 <xTaskGetSchedulerState+0x18>)
 8009c1e:	681b      	ldr	r3, [r3, #0]
 8009c20:	b133      	cbz	r3, 8009c30 <xTaskGetSchedulerState+0x14>
			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8009c22:	4b05      	ldr	r3, [pc, #20]	@ (8009c38 <xTaskGetSchedulerState+0x1c>)
 8009c24:	6818      	ldr	r0, [r3, #0]
 8009c26:	fab0 f080 	clz	r0, r0
 8009c2a:	0940      	lsrs	r0, r0, #5
 8009c2c:	0040      	lsls	r0, r0, #1
 8009c2e:	4770      	bx	lr
			xReturn = taskSCHEDULER_NOT_STARTED;
 8009c30:	2001      	movs	r0, #1
	}
 8009c32:	4770      	bx	lr
 8009c34:	20012db4 	.word	0x20012db4
 8009c38:	20012d9c 	.word	0x20012d9c

08009c3c <xTaskPriorityInherit>:
	{
 8009c3c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		if( pxMutexHolder != NULL )
 8009c3e:	4604      	mov	r4, r0
 8009c40:	b338      	cbz	r0, 8009c92 <xTaskPriorityInherit+0x56>
			if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->uxPriority )
 8009c42:	4d1a      	ldr	r5, [pc, #104]	@ (8009cac <xTaskPriorityInherit+0x70>)
 8009c44:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 8009c46:	682a      	ldr	r2, [r5, #0]
 8009c48:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
 8009c4a:	4293      	cmp	r3, r2
 8009c4c:	d226      	bcs.n	8009c9c <xTaskPriorityInherit+0x60>
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 8009c4e:	6982      	ldr	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 8009c50:	4e17      	ldr	r6, [pc, #92]	@ (8009cb0 <xTaskPriorityInherit+0x74>)
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 8009c52:	2a00      	cmp	r2, #0
					listSET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxCurrentTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8009c54:	bfa1      	itttt	ge
 8009c56:	682a      	ldrge	r2, [r5, #0]
 8009c58:	6ad2      	ldrge	r2, [r2, #44]	@ 0x2c
 8009c5a:	f1c2 0238 	rsbge	r2, r2, #56	@ 0x38
 8009c5e:	6182      	strge	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 8009c60:	2214      	movs	r2, #20
 8009c62:	fb02 6303 	mla	r3, r2, r3, r6
 8009c66:	6942      	ldr	r2, [r0, #20]
 8009c68:	429a      	cmp	r2, r3
 8009c6a:	d113      	bne.n	8009c94 <xTaskPriorityInherit+0x58>
					if( uxListRemove( &( pxMutexHolderTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8009c6c:	1d07      	adds	r7, r0, #4
 8009c6e:	4638      	mov	r0, r7
 8009c70:	f7fe fcc8 	bl	8008604 <uxListRemove>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 8009c74:	682b      	ldr	r3, [r5, #0]
					prvAddTaskToReadyList( pxMutexHolderTCB );
 8009c76:	4a0f      	ldr	r2, [pc, #60]	@ (8009cb4 <xTaskPriorityInherit+0x78>)
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 8009c78:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 8009c7a:	6811      	ldr	r1, [r2, #0]
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 8009c7c:	62e3      	str	r3, [r4, #44]	@ 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 8009c7e:	2014      	movs	r0, #20
 8009c80:	428b      	cmp	r3, r1
 8009c82:	fb00 6003 	mla	r0, r0, r3, r6
 8009c86:	4639      	mov	r1, r7
 8009c88:	bf88      	it	hi
 8009c8a:	6013      	strhi	r3, [r2, #0]
 8009c8c:	f7fe fc98 	bl	80085c0 <vListInsertEnd>
				xReturn = pdTRUE;
 8009c90:	2001      	movs	r0, #1
	}
 8009c92:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 8009c94:	682b      	ldr	r3, [r5, #0]
 8009c96:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8009c98:	62c3      	str	r3, [r0, #44]	@ 0x2c
 8009c9a:	e7f9      	b.n	8009c90 <xTaskPriorityInherit+0x54>
				if( pxMutexHolderTCB->uxBasePriority < pxCurrentTCB->uxPriority )
 8009c9c:	682b      	ldr	r3, [r5, #0]
 8009c9e:	6cc0      	ldr	r0, [r0, #76]	@ 0x4c
 8009ca0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8009ca2:	4298      	cmp	r0, r3
 8009ca4:	bf2c      	ite	cs
 8009ca6:	2000      	movcs	r0, #0
 8009ca8:	2001      	movcc	r0, #1
 8009caa:	e7f2      	b.n	8009c92 <xTaskPriorityInherit+0x56>
 8009cac:	20013294 	.word	0x20013294
 8009cb0:	20012e34 	.word	0x20012e34
 8009cb4:	20012db8 	.word	0x20012db8

08009cb8 <xTaskPriorityDisinherit>:
	{
 8009cb8:	b538      	push	{r3, r4, r5, lr}
		if( pxMutexHolder != NULL )
 8009cba:	b908      	cbnz	r0, 8009cc0 <xTaskPriorityDisinherit+0x8>
	BaseType_t xReturn = pdFALSE;
 8009cbc:	2000      	movs	r0, #0
	}
 8009cbe:	bd38      	pop	{r3, r4, r5, pc}
			configASSERT( pxTCB == pxCurrentTCB );
 8009cc0:	4b1b      	ldr	r3, [pc, #108]	@ (8009d30 <xTaskPriorityDisinherit+0x78>)
 8009cc2:	681c      	ldr	r4, [r3, #0]
 8009cc4:	4284      	cmp	r4, r0
 8009cc6:	d008      	beq.n	8009cda <xTaskPriorityDisinherit+0x22>
 8009cc8:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009ccc:	f383 8811 	msr	BASEPRI, r3
 8009cd0:	f3bf 8f6f 	isb	sy
 8009cd4:	f3bf 8f4f 	dsb	sy
 8009cd8:	e7fe      	b.n	8009cd8 <xTaskPriorityDisinherit+0x20>
			configASSERT( pxTCB->uxMutexesHeld );
 8009cda:	6d23      	ldr	r3, [r4, #80]	@ 0x50
 8009cdc:	b943      	cbnz	r3, 8009cf0 <xTaskPriorityDisinherit+0x38>
 8009cde:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009ce2:	f383 8811 	msr	BASEPRI, r3
 8009ce6:	f3bf 8f6f 	isb	sy
 8009cea:	f3bf 8f4f 	dsb	sy
 8009cee:	e7fe      	b.n	8009cee <xTaskPriorityDisinherit+0x36>
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 8009cf0:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
 8009cf2:	6ce2      	ldr	r2, [r4, #76]	@ 0x4c
			( pxTCB->uxMutexesHeld )--;
 8009cf4:	3b01      	subs	r3, #1
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 8009cf6:	4291      	cmp	r1, r2
			( pxTCB->uxMutexesHeld )--;
 8009cf8:	6523      	str	r3, [r4, #80]	@ 0x50
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 8009cfa:	d0df      	beq.n	8009cbc <xTaskPriorityDisinherit+0x4>
				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
 8009cfc:	2b00      	cmp	r3, #0
 8009cfe:	d1dd      	bne.n	8009cbc <xTaskPriorityDisinherit+0x4>
					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8009d00:	1d25      	adds	r5, r4, #4
 8009d02:	4628      	mov	r0, r5
 8009d04:	f7fe fc7e 	bl	8008604 <uxListRemove>
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 8009d08:	6ce3      	ldr	r3, [r4, #76]	@ 0x4c
 8009d0a:	62e3      	str	r3, [r4, #44]	@ 0x2c
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8009d0c:	f1c3 0238 	rsb	r2, r3, #56	@ 0x38
 8009d10:	61a2      	str	r2, [r4, #24]
					prvAddTaskToReadyList( pxTCB );
 8009d12:	4a08      	ldr	r2, [pc, #32]	@ (8009d34 <xTaskPriorityDisinherit+0x7c>)
 8009d14:	6811      	ldr	r1, [r2, #0]
 8009d16:	428b      	cmp	r3, r1
 8009d18:	bf88      	it	hi
 8009d1a:	6013      	strhi	r3, [r2, #0]
 8009d1c:	4a06      	ldr	r2, [pc, #24]	@ (8009d38 <xTaskPriorityDisinherit+0x80>)
 8009d1e:	2014      	movs	r0, #20
 8009d20:	fb00 2003 	mla	r0, r0, r3, r2
 8009d24:	4629      	mov	r1, r5
 8009d26:	f7fe fc4b 	bl	80085c0 <vListInsertEnd>
					xReturn = pdTRUE;
 8009d2a:	2001      	movs	r0, #1
		return xReturn;
 8009d2c:	e7c7      	b.n	8009cbe <xTaskPriorityDisinherit+0x6>
 8009d2e:	bf00      	nop
 8009d30:	20013294 	.word	0x20013294
 8009d34:	20012db8 	.word	0x20012db8
 8009d38:	20012e34 	.word	0x20012e34

08009d3c <vTaskPriorityDisinheritAfterTimeout>:
	{
 8009d3c:	b570      	push	{r4, r5, r6, lr}
		if( pxMutexHolder != NULL )
 8009d3e:	4604      	mov	r4, r0
 8009d40:	2800      	cmp	r0, #0
 8009d42:	d041      	beq.n	8009dc8 <vTaskPriorityDisinheritAfterTimeout+0x8c>
			configASSERT( pxTCB->uxMutexesHeld );
 8009d44:	6d02      	ldr	r2, [r0, #80]	@ 0x50
 8009d46:	b942      	cbnz	r2, 8009d5a <vTaskPriorityDisinheritAfterTimeout+0x1e>
 8009d48:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009d4c:	f383 8811 	msr	BASEPRI, r3
 8009d50:	f3bf 8f6f 	isb	sy
 8009d54:	f3bf 8f4f 	dsb	sy
 8009d58:	e7fe      	b.n	8009d58 <vTaskPriorityDisinheritAfterTimeout+0x1c>
			if( pxTCB->uxBasePriority < uxHighestPriorityWaitingTask )
 8009d5a:	6cc3      	ldr	r3, [r0, #76]	@ 0x4c
 8009d5c:	4299      	cmp	r1, r3
 8009d5e:	bf38      	it	cc
 8009d60:	4619      	movcc	r1, r3
			if( pxTCB->uxPriority != uxPriorityToUse )
 8009d62:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 8009d64:	428b      	cmp	r3, r1
 8009d66:	d02f      	beq.n	8009dc8 <vTaskPriorityDisinheritAfterTimeout+0x8c>
				if( pxTCB->uxMutexesHeld == uxOnlyOneMutexHeld )
 8009d68:	2a01      	cmp	r2, #1
 8009d6a:	d12d      	bne.n	8009dc8 <vTaskPriorityDisinheritAfterTimeout+0x8c>
					configASSERT( pxTCB != pxCurrentTCB );
 8009d6c:	4a17      	ldr	r2, [pc, #92]	@ (8009dcc <vTaskPriorityDisinheritAfterTimeout+0x90>)
 8009d6e:	6812      	ldr	r2, [r2, #0]
 8009d70:	4282      	cmp	r2, r0
 8009d72:	d108      	bne.n	8009d86 <vTaskPriorityDisinheritAfterTimeout+0x4a>
 8009d74:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009d78:	f383 8811 	msr	BASEPRI, r3
 8009d7c:	f3bf 8f6f 	isb	sy
 8009d80:	f3bf 8f4f 	dsb	sy
 8009d84:	e7fe      	b.n	8009d84 <vTaskPriorityDisinheritAfterTimeout+0x48>
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 8009d86:	6982      	ldr	r2, [r0, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 8009d88:	4d11      	ldr	r5, [pc, #68]	@ (8009dd0 <vTaskPriorityDisinheritAfterTimeout+0x94>)
					pxTCB->uxPriority = uxPriorityToUse;
 8009d8a:	62c1      	str	r1, [r0, #44]	@ 0x2c
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 8009d8c:	2a00      	cmp	r2, #0
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 8009d8e:	f04f 0214 	mov.w	r2, #20
 8009d92:	fb02 5303 	mla	r3, r2, r3, r5
 8009d96:	6942      	ldr	r2, [r0, #20]
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8009d98:	bfa4      	itt	ge
 8009d9a:	f1c1 0138 	rsbge	r1, r1, #56	@ 0x38
 8009d9e:	6181      	strge	r1, [r0, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 8009da0:	429a      	cmp	r2, r3
 8009da2:	d111      	bne.n	8009dc8 <vTaskPriorityDisinheritAfterTimeout+0x8c>
						if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8009da4:	1d06      	adds	r6, r0, #4
 8009da6:	4630      	mov	r0, r6
 8009da8:	f7fe fc2c 	bl	8008604 <uxListRemove>
						prvAddTaskToReadyList( pxTCB );
 8009dac:	4a09      	ldr	r2, [pc, #36]	@ (8009dd4 <vTaskPriorityDisinheritAfterTimeout+0x98>)
 8009dae:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 8009db0:	6811      	ldr	r1, [r2, #0]
 8009db2:	2014      	movs	r0, #20
 8009db4:	428b      	cmp	r3, r1
 8009db6:	fb00 5003 	mla	r0, r0, r3, r5
 8009dba:	4631      	mov	r1, r6
	}
 8009dbc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
						prvAddTaskToReadyList( pxTCB );
 8009dc0:	bf88      	it	hi
 8009dc2:	6013      	strhi	r3, [r2, #0]
 8009dc4:	f7fe bbfc 	b.w	80085c0 <vListInsertEnd>
	}
 8009dc8:	bd70      	pop	{r4, r5, r6, pc}
 8009dca:	bf00      	nop
 8009dcc:	20013294 	.word	0x20013294
 8009dd0:	20012e34 	.word	0x20012e34
 8009dd4:	20012db8 	.word	0x20012db8

08009dd8 <pvTaskIncrementMutexHeldCount>:
		if( pxCurrentTCB != NULL )
 8009dd8:	4b04      	ldr	r3, [pc, #16]	@ (8009dec <pvTaskIncrementMutexHeldCount+0x14>)
 8009dda:	681a      	ldr	r2, [r3, #0]
 8009ddc:	b11a      	cbz	r2, 8009de6 <pvTaskIncrementMutexHeldCount+0xe>
			( pxCurrentTCB->uxMutexesHeld )++;
 8009dde:	6819      	ldr	r1, [r3, #0]
 8009de0:	6d0a      	ldr	r2, [r1, #80]	@ 0x50
 8009de2:	3201      	adds	r2, #1
 8009de4:	650a      	str	r2, [r1, #80]	@ 0x50
		return pxCurrentTCB;
 8009de6:	6818      	ldr	r0, [r3, #0]
	}
 8009de8:	4770      	bx	lr
 8009dea:	bf00      	nop
 8009dec:	20013294 	.word	0x20013294

08009df0 <prvInsertTimerInActiveList>:
BaseType_t xProcessTimerNow = pdFALSE;

	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );

	if( xNextExpiryTime <= xTimeNow )
 8009df0:	4291      	cmp	r1, r2
{
 8009df2:	b508      	push	{r3, lr}
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 8009df4:	6041      	str	r1, [r0, #4]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 8009df6:	6100      	str	r0, [r0, #16]
	if( xNextExpiryTime <= xTimeNow )
 8009df8:	d80a      	bhi.n	8009e10 <prvInsertTimerInActiveList+0x20>
	{
		/* Has the expiry time elapsed between the command to start/reset a
		timer was issued, and the time the command was processed? */
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8009dfa:	1ad2      	subs	r2, r2, r3
 8009dfc:	6983      	ldr	r3, [r0, #24]
 8009dfe:	429a      	cmp	r2, r3
 8009e00:	d20d      	bcs.n	8009e1e <prvInsertTimerInActiveList+0x2e>
			processed actually exceeds the timers period.  */
			xProcessTimerNow = pdTRUE;
		}
		else
		{
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
 8009e02:	4b08      	ldr	r3, [pc, #32]	@ (8009e24 <prvInsertTimerInActiveList+0x34>)
 8009e04:	1d01      	adds	r1, r0, #4
			its expiry time and should be processed immediately. */
			xProcessTimerNow = pdTRUE;
		}
		else
		{
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 8009e06:	6818      	ldr	r0, [r3, #0]
 8009e08:	f7fe fbe5 	bl	80085d6 <vListInsert>
BaseType_t xProcessTimerNow = pdFALSE;
 8009e0c:	2000      	movs	r0, #0
		}
	}

	return xProcessTimerNow;
}
 8009e0e:	bd08      	pop	{r3, pc}
		if( ( xTimeNow < xCommandTime ) && ( xNextExpiryTime >= xCommandTime ) )
 8009e10:	429a      	cmp	r2, r3
 8009e12:	d201      	bcs.n	8009e18 <prvInsertTimerInActiveList+0x28>
 8009e14:	4299      	cmp	r1, r3
 8009e16:	d202      	bcs.n	8009e1e <prvInsertTimerInActiveList+0x2e>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 8009e18:	4b03      	ldr	r3, [pc, #12]	@ (8009e28 <prvInsertTimerInActiveList+0x38>)
 8009e1a:	1d01      	adds	r1, r0, #4
 8009e1c:	e7f3      	b.n	8009e06 <prvInsertTimerInActiveList+0x16>
			xProcessTimerNow = pdTRUE;
 8009e1e:	2001      	movs	r0, #1
	return xProcessTimerNow;
 8009e20:	e7f5      	b.n	8009e0e <prvInsertTimerInActiveList+0x1e>
 8009e22:	bf00      	nop
 8009e24:	20013394 	.word	0x20013394
 8009e28:	20013398 	.word	0x20013398

08009e2c <prvCheckForValidListAndQueue>:
	pxOverflowTimerList = pxTemp;
}
/*-----------------------------------------------------------*/

static void prvCheckForValidListAndQueue( void )
{
 8009e2c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
	/* Check that the list from which active timers are referenced, and the
	queue used to communicate with the timer service, have been
	initialised. */
	taskENTER_CRITICAL();
	{
		if( xTimerQueue == NULL )
 8009e2e:	4c11      	ldr	r4, [pc, #68]	@ (8009e74 <prvCheckForValidListAndQueue+0x48>)
	taskENTER_CRITICAL();
 8009e30:	f7fe fc60 	bl	80086f4 <vPortEnterCritical>
		if( xTimerQueue == NULL )
 8009e34:	6825      	ldr	r5, [r4, #0]
 8009e36:	b9bd      	cbnz	r5, 8009e68 <prvCheckForValidListAndQueue+0x3c>
		{
			vListInitialise( &xActiveTimerList1 );
 8009e38:	4f0f      	ldr	r7, [pc, #60]	@ (8009e78 <prvCheckForValidListAndQueue+0x4c>)
			vListInitialise( &xActiveTimerList2 );
 8009e3a:	4e10      	ldr	r6, [pc, #64]	@ (8009e7c <prvCheckForValidListAndQueue+0x50>)
			vListInitialise( &xActiveTimerList1 );
 8009e3c:	4638      	mov	r0, r7
 8009e3e:	f7fe fbb1 	bl	80085a4 <vListInitialise>
			vListInitialise( &xActiveTimerList2 );
 8009e42:	4630      	mov	r0, r6
 8009e44:	f7fe fbae 	bl	80085a4 <vListInitialise>
			pxCurrentTimerList = &xActiveTimerList1;
 8009e48:	4b0d      	ldr	r3, [pc, #52]	@ (8009e80 <prvCheckForValidListAndQueue+0x54>)
				/* The timer queue is allocated statically in case
				configSUPPORT_DYNAMIC_ALLOCATION is 0. */
				static StaticQueue_t xStaticTimerQueue; /*lint !e956 Ok to declare in this manner to prevent additional conditional compilation guards in other locations. */
				static uint8_t ucStaticTimerQueueStorage[ ( size_t ) configTIMER_QUEUE_LENGTH * sizeof( DaemonTaskMessage_t ) ]; /*lint !e956 Ok to declare in this manner to prevent additional conditional compilation guards in other locations. */

				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 8009e4a:	4a0e      	ldr	r2, [pc, #56]	@ (8009e84 <prvCheckForValidListAndQueue+0x58>)
			pxCurrentTimerList = &xActiveTimerList1;
 8009e4c:	601f      	str	r7, [r3, #0]
			pxOverflowTimerList = &xActiveTimerList2;
 8009e4e:	4b0e      	ldr	r3, [pc, #56]	@ (8009e88 <prvCheckForValidListAndQueue+0x5c>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 8009e50:	2110      	movs	r1, #16
			pxOverflowTimerList = &xActiveTimerList2;
 8009e52:	601e      	str	r6, [r3, #0]
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 8009e54:	200a      	movs	r0, #10
 8009e56:	4b0d      	ldr	r3, [pc, #52]	@ (8009e8c <prvCheckForValidListAndQueue+0x60>)
 8009e58:	9500      	str	r5, [sp, #0]
 8009e5a:	f7fe fe54 	bl	8008b06 <xQueueGenericCreateStatic>
 8009e5e:	6020      	str	r0, [r4, #0]
			}
			#endif

			#if ( configQUEUE_REGISTRY_SIZE > 0 )
			{
				if( xTimerQueue != NULL )
 8009e60:	b110      	cbz	r0, 8009e68 <prvCheckForValidListAndQueue+0x3c>
				{
					vQueueAddToRegistry( xTimerQueue, "TmrQ" );
 8009e62:	490b      	ldr	r1, [pc, #44]	@ (8009e90 <prvCheckForValidListAndQueue+0x64>)
 8009e64:	f7ff fa2c 	bl	80092c0 <vQueueAddToRegistry>
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}
	taskEXIT_CRITICAL();
}
 8009e68:	b003      	add	sp, #12
 8009e6a:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
	taskEXIT_CRITICAL();
 8009e6e:	f7fe bc61 	b.w	8008734 <vPortExitCritical>
 8009e72:	bf00      	nop
 8009e74:	20013390 	.word	0x20013390
 8009e78:	200133b0 	.word	0x200133b0
 8009e7c:	2001339c 	.word	0x2001339c
 8009e80:	20013398 	.word	0x20013398
 8009e84:	200132e8 	.word	0x200132e8
 8009e88:	20013394 	.word	0x20013394
 8009e8c:	20013298 	.word	0x20013298
 8009e90:	0802483e 	.word	0x0802483e

08009e94 <xTimerCreateTimerTask>:
{
 8009e94:	b510      	push	{r4, lr}
 8009e96:	b088      	sub	sp, #32
	prvCheckForValidListAndQueue();
 8009e98:	f7ff ffc8 	bl	8009e2c <prvCheckForValidListAndQueue>
	if( xTimerQueue != NULL )
 8009e9c:	4b12      	ldr	r3, [pc, #72]	@ (8009ee8 <xTimerCreateTimerTask+0x54>)
 8009e9e:	681b      	ldr	r3, [r3, #0]
 8009ea0:	b1b3      	cbz	r3, 8009ed0 <xTimerCreateTimerTask+0x3c>
			StaticTask_t *pxTimerTaskTCBBuffer = NULL;
 8009ea2:	2400      	movs	r4, #0
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 8009ea4:	aa07      	add	r2, sp, #28
 8009ea6:	a906      	add	r1, sp, #24
 8009ea8:	a805      	add	r0, sp, #20
			StackType_t *pxTimerTaskStackBuffer = NULL;
 8009eaa:	e9cd 4405 	strd	r4, r4, [sp, #20]
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 8009eae:	f7fe fa71 	bl	8008394 <vApplicationGetTimerTaskMemory>
			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
 8009eb2:	9b05      	ldr	r3, [sp, #20]
 8009eb4:	9302      	str	r3, [sp, #8]
 8009eb6:	9b06      	ldr	r3, [sp, #24]
 8009eb8:	9301      	str	r3, [sp, #4]
 8009eba:	2302      	movs	r3, #2
 8009ebc:	9300      	str	r3, [sp, #0]
 8009ebe:	9a07      	ldr	r2, [sp, #28]
 8009ec0:	490a      	ldr	r1, [pc, #40]	@ (8009eec <xTimerCreateTimerTask+0x58>)
 8009ec2:	480b      	ldr	r0, [pc, #44]	@ (8009ef0 <xTimerCreateTimerTask+0x5c>)
 8009ec4:	4623      	mov	r3, r4
 8009ec6:	f7ff fbc0 	bl	800964a <xTaskCreateStatic>
 8009eca:	4b0a      	ldr	r3, [pc, #40]	@ (8009ef4 <xTimerCreateTimerTask+0x60>)
 8009ecc:	6018      	str	r0, [r3, #0]
			if( xTimerTaskHandle != NULL )
 8009ece:	b940      	cbnz	r0, 8009ee2 <xTimerCreateTimerTask+0x4e>
 8009ed0:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009ed4:	f383 8811 	msr	BASEPRI, r3
 8009ed8:	f3bf 8f6f 	isb	sy
 8009edc:	f3bf 8f4f 	dsb	sy
	configASSERT( xReturn );
 8009ee0:	e7fe      	b.n	8009ee0 <xTimerCreateTimerTask+0x4c>
}
 8009ee2:	2001      	movs	r0, #1
 8009ee4:	b008      	add	sp, #32
 8009ee6:	bd10      	pop	{r4, pc}
 8009ee8:	20013390 	.word	0x20013390
 8009eec:	08024843 	.word	0x08024843
 8009ef0:	08009ff5 	.word	0x08009ff5
 8009ef4:	2001338c 	.word	0x2001338c

08009ef8 <xTimerGenericCommand>:
{
 8009ef8:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8009efa:	4616      	mov	r6, r2
	configASSERT( xTimer );
 8009efc:	4604      	mov	r4, r0
{
 8009efe:	461a      	mov	r2, r3
	configASSERT( xTimer );
 8009f00:	b940      	cbnz	r0, 8009f14 <xTimerGenericCommand+0x1c>
 8009f02:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009f06:	f383 8811 	msr	BASEPRI, r3
 8009f0a:	f3bf 8f6f 	isb	sy
 8009f0e:	f3bf 8f4f 	dsb	sy
 8009f12:	e7fe      	b.n	8009f12 <xTimerGenericCommand+0x1a>
	if( xTimerQueue != NULL )
 8009f14:	4d0d      	ldr	r5, [pc, #52]	@ (8009f4c <xTimerGenericCommand+0x54>)
 8009f16:	6828      	ldr	r0, [r5, #0]
 8009f18:	b180      	cbz	r0, 8009f3c <xTimerGenericCommand+0x44>
		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 8009f1a:	2905      	cmp	r1, #5
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 8009f1c:	e9cd 1600 	strd	r1, r6, [sp]
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 8009f20:	9402      	str	r4, [sp, #8]
		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 8009f22:	dc0d      	bgt.n	8009f40 <xTimerGenericCommand+0x48>
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 8009f24:	f7ff fe7a 	bl	8009c1c <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 8009f28:	2300      	movs	r3, #0
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 8009f2a:	2802      	cmp	r0, #2
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 8009f2c:	bf08      	it	eq
 8009f2e:	9a08      	ldreq	r2, [sp, #32]
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, tmrNO_DELAY );
 8009f30:	6828      	ldr	r0, [r5, #0]
 8009f32:	bf18      	it	ne
 8009f34:	461a      	movne	r2, r3
 8009f36:	4669      	mov	r1, sp
 8009f38:	f7fe fe9a 	bl	8008c70 <xQueueGenericSend>
}
 8009f3c:	b004      	add	sp, #16
 8009f3e:	bd70      	pop	{r4, r5, r6, pc}
			xReturn = xQueueSendToBackFromISR( xTimerQueue, &xMessage, pxHigherPriorityTaskWoken );
 8009f40:	2300      	movs	r3, #0
 8009f42:	4669      	mov	r1, sp
 8009f44:	f7fe ff46 	bl	8008dd4 <xQueueGenericSendFromISR>
 8009f48:	e7f8      	b.n	8009f3c <xTimerGenericCommand+0x44>
 8009f4a:	bf00      	nop
 8009f4c:	20013390 	.word	0x20013390

08009f50 <prvSampleTimeNow>:
{
 8009f50:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
	if( xTimeNow < xLastTime )
 8009f54:	f8df 8098 	ldr.w	r8, [pc, #152]	@ 8009ff0 <prvSampleTimeNow+0xa0>
{
 8009f58:	4606      	mov	r6, r0
	xTimeNow = xTaskGetTickCount();
 8009f5a:	f7ff fc2b 	bl	80097b4 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 8009f5e:	f8d8 3000 	ldr.w	r3, [r8]
 8009f62:	4283      	cmp	r3, r0
	xTimeNow = xTaskGetTickCount();
 8009f64:	4605      	mov	r5, r0
	if( xTimeNow < xLastTime )
 8009f66:	d909      	bls.n	8009f7c <prvSampleTimeNow+0x2c>
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 8009f68:	4f1f      	ldr	r7, [pc, #124]	@ (8009fe8 <prvSampleTimeNow+0x98>)
 8009f6a:	683b      	ldr	r3, [r7, #0]
 8009f6c:	681a      	ldr	r2, [r3, #0]
 8009f6e:	b96a      	cbnz	r2, 8009f8c <prvSampleTimeNow+0x3c>
	pxCurrentTimerList = pxOverflowTimerList;
 8009f70:	4a1e      	ldr	r2, [pc, #120]	@ (8009fec <prvSampleTimeNow+0x9c>)
 8009f72:	6811      	ldr	r1, [r2, #0]
 8009f74:	6039      	str	r1, [r7, #0]
	pxOverflowTimerList = pxTemp;
 8009f76:	6013      	str	r3, [r2, #0]
		*pxTimerListsWereSwitched = pdTRUE;
 8009f78:	2301      	movs	r3, #1
 8009f7a:	e000      	b.n	8009f7e <prvSampleTimeNow+0x2e>
 8009f7c:	2300      	movs	r3, #0
}
 8009f7e:	4628      	mov	r0, r5
		*pxTimerListsWereSwitched = pdTRUE;
 8009f80:	6033      	str	r3, [r6, #0]
	xLastTime = xTimeNow;
 8009f82:	f8c8 5000 	str.w	r5, [r8]
}
 8009f86:	b002      	add	sp, #8
 8009f88:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 8009f8c:	68db      	ldr	r3, [r3, #12]
		pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009f8e:	68dc      	ldr	r4, [r3, #12]
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 8009f90:	f8d3 9000 	ldr.w	r9, [r3]
		( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 8009f94:	f104 0a04 	add.w	sl, r4, #4
 8009f98:	4650      	mov	r0, sl
 8009f9a:	f7fe fb33 	bl	8008604 <uxListRemove>
		pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 8009f9e:	6a23      	ldr	r3, [r4, #32]
 8009fa0:	4620      	mov	r0, r4
 8009fa2:	4798      	blx	r3
		if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 8009fa4:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
 8009fa8:	075b      	lsls	r3, r3, #29
 8009faa:	d5de      	bpl.n	8009f6a <prvSampleTimeNow+0x1a>
			xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
 8009fac:	69a3      	ldr	r3, [r4, #24]
 8009fae:	444b      	add	r3, r9
			if( xReloadTime > xNextExpireTime )
 8009fb0:	4599      	cmp	r9, r3
 8009fb2:	d206      	bcs.n	8009fc2 <prvSampleTimeNow+0x72>
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 8009fb4:	6838      	ldr	r0, [r7, #0]
				listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xReloadTime );
 8009fb6:	6063      	str	r3, [r4, #4]
				listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 8009fb8:	6124      	str	r4, [r4, #16]
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 8009fba:	4651      	mov	r1, sl
 8009fbc:	f7fe fb0b 	bl	80085d6 <vListInsert>
 8009fc0:	e7d3      	b.n	8009f6a <prvSampleTimeNow+0x1a>
				xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 8009fc2:	2300      	movs	r3, #0
 8009fc4:	9300      	str	r3, [sp, #0]
 8009fc6:	464a      	mov	r2, r9
 8009fc8:	4619      	mov	r1, r3
 8009fca:	4620      	mov	r0, r4
 8009fcc:	f7ff ff94 	bl	8009ef8 <xTimerGenericCommand>
				configASSERT( xResult );
 8009fd0:	2800      	cmp	r0, #0
 8009fd2:	d1ca      	bne.n	8009f6a <prvSampleTimeNow+0x1a>
 8009fd4:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009fd8:	f383 8811 	msr	BASEPRI, r3
 8009fdc:	f3bf 8f6f 	isb	sy
 8009fe0:	f3bf 8f4f 	dsb	sy
 8009fe4:	e7fe      	b.n	8009fe4 <prvSampleTimeNow+0x94>
 8009fe6:	bf00      	nop
 8009fe8:	20013398 	.word	0x20013398
 8009fec:	20013394 	.word	0x20013394
 8009ff0:	20013388 	.word	0x20013388

08009ff4 <prvTimerTask>:
{
 8009ff4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 8009ff8:	4d6e      	ldr	r5, [pc, #440]	@ (800a1b4 <prvTimerTask+0x1c0>)
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 8009ffa:	4e6f      	ldr	r6, [pc, #444]	@ (800a1b8 <prvTimerTask+0x1c4>)
{
 8009ffc:	b089      	sub	sp, #36	@ 0x24
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 8009ffe:	682b      	ldr	r3, [r5, #0]
 800a000:	f8d3 8000 	ldr.w	r8, [r3]
 800a004:	f1b8 0f00 	cmp.w	r8, #0
 800a008:	d035      	beq.n	800a076 <prvTimerTask+0x82>
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800a00a:	68db      	ldr	r3, [r3, #12]
 800a00c:	f8d3 8000 	ldr.w	r8, [r3]
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800a010:	2400      	movs	r4, #0
	vTaskSuspendAll();
 800a012:	f7ff fbc7 	bl	80097a4 <vTaskSuspendAll>
		xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 800a016:	a804      	add	r0, sp, #16
 800a018:	f7ff ff9a 	bl	8009f50 <prvSampleTimeNow>
		if( xTimerListsWereSwitched == pdFALSE )
 800a01c:	9b04      	ldr	r3, [sp, #16]
		xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 800a01e:	4681      	mov	r9, r0
		if( xTimerListsWereSwitched == pdFALSE )
 800a020:	2b00      	cmp	r3, #0
 800a022:	d169      	bne.n	800a0f8 <prvTimerTask+0x104>
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 800a024:	2c00      	cmp	r4, #0
 800a026:	d14c      	bne.n	800a0c2 <prvTimerTask+0xce>
 800a028:	4540      	cmp	r0, r8
 800a02a:	d350      	bcc.n	800a0ce <prvTimerTask+0xda>
				( void ) xTaskResumeAll();
 800a02c:	f7ff fc5e 	bl	80098ec <xTaskResumeAll>
Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800a030:	682b      	ldr	r3, [r5, #0]
 800a032:	68db      	ldr	r3, [r3, #12]
 800a034:	68df      	ldr	r7, [r3, #12]
	( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800a036:	1d38      	adds	r0, r7, #4
 800a038:	f7fe fae4 	bl	8008604 <uxListRemove>
	if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800a03c:	f897 3028 	ldrb.w	r3, [r7, #40]	@ 0x28
 800a040:	0758      	lsls	r0, r3, #29
 800a042:	d51a      	bpl.n	800a07a <prvTimerTask+0x86>
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
 800a044:	69b9      	ldr	r1, [r7, #24]
 800a046:	4643      	mov	r3, r8
 800a048:	464a      	mov	r2, r9
 800a04a:	4441      	add	r1, r8
 800a04c:	4638      	mov	r0, r7
 800a04e:	f7ff fecf 	bl	8009df0 <prvInsertTimerInActiveList>
 800a052:	b1b0      	cbz	r0, 800a082 <prvTimerTask+0x8e>
			xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 800a054:	9400      	str	r4, [sp, #0]
 800a056:	4623      	mov	r3, r4
 800a058:	4642      	mov	r2, r8
 800a05a:	4621      	mov	r1, r4
 800a05c:	4638      	mov	r0, r7
 800a05e:	f7ff ff4b 	bl	8009ef8 <xTimerGenericCommand>
			configASSERT( xResult );
 800a062:	b970      	cbnz	r0, 800a082 <prvTimerTask+0x8e>
 800a064:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800a068:	f383 8811 	msr	BASEPRI, r3
 800a06c:	f3bf 8f6f 	isb	sy
 800a070:	f3bf 8f4f 	dsb	sy
 800a074:	e7fe      	b.n	800a074 <prvTimerTask+0x80>
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800a076:	2401      	movs	r4, #1
 800a078:	e7cb      	b.n	800a012 <prvTimerTask+0x1e>
		pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800a07a:	f023 0301 	bic.w	r3, r3, #1
 800a07e:	f887 3028 	strb.w	r3, [r7, #40]	@ 0x28
	pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800a082:	6a3b      	ldr	r3, [r7, #32]
 800a084:	4638      	mov	r0, r7
 800a086:	4798      	blx	r3
	while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does not have to be initialised as it is passed out, not in, and it is not used unless xQueueReceive() returns pdTRUE. */
 800a088:	6830      	ldr	r0, [r6, #0]
 800a08a:	2200      	movs	r2, #0
 800a08c:	a904      	add	r1, sp, #16
 800a08e:	f7fe ff4f 	bl	8008f30 <xQueueReceive>
 800a092:	2800      	cmp	r0, #0
 800a094:	d0b3      	beq.n	8009ffe <prvTimerTask+0xa>
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 800a096:	9b04      	ldr	r3, [sp, #16]
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 800a098:	9806      	ldr	r0, [sp, #24]
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 800a09a:	2b00      	cmp	r3, #0
 800a09c:	db2f      	blt.n	800a0fe <prvTimerTask+0x10a>
			pxTimer = xMessage.u.xTimerParameters.pxTimer;
 800a09e:	9c06      	ldr	r4, [sp, #24]
			if( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListItem ) ) == pdFALSE ) /*lint !e961. The cast is only redundant when NULL is passed into the macro. */
 800a0a0:	6963      	ldr	r3, [r4, #20]
 800a0a2:	2b00      	cmp	r3, #0
 800a0a4:	d132      	bne.n	800a10c <prvTimerTask+0x118>
			xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 800a0a6:	a803      	add	r0, sp, #12
 800a0a8:	f7ff ff52 	bl	8009f50 <prvSampleTimeNow>
			switch( xMessage.xMessageID )
 800a0ac:	9b04      	ldr	r3, [sp, #16]
			xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 800a0ae:	4602      	mov	r2, r0
			switch( xMessage.xMessageID )
 800a0b0:	2b09      	cmp	r3, #9
 800a0b2:	d8e9      	bhi.n	800a088 <prvTimerTask+0x94>
 800a0b4:	e8df f003 	tbb	[pc, r3]
 800a0b8:	572e2e2e 	.word	0x572e2e2e
 800a0bc:	2e2e765e 	.word	0x2e2e765e
 800a0c0:	5e57      	.short	0x5e57
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
 800a0c2:	4b3e      	ldr	r3, [pc, #248]	@ (800a1bc <prvTimerTask+0x1c8>)
 800a0c4:	681b      	ldr	r3, [r3, #0]
 800a0c6:	681c      	ldr	r4, [r3, #0]
 800a0c8:	fab4 f484 	clz	r4, r4
 800a0cc:	0964      	lsrs	r4, r4, #5
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 800a0ce:	6830      	ldr	r0, [r6, #0]
 800a0d0:	4622      	mov	r2, r4
 800a0d2:	eba8 0109 	sub.w	r1, r8, r9
 800a0d6:	f7ff f932 	bl	800933e <vQueueWaitForMessageRestricted>
				if( xTaskResumeAll() == pdFALSE )
 800a0da:	f7ff fc07 	bl	80098ec <xTaskResumeAll>
 800a0de:	2800      	cmp	r0, #0
 800a0e0:	d1d2      	bne.n	800a088 <prvTimerTask+0x94>
					portYIELD_WITHIN_API();
 800a0e2:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800a0e6:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800a0ea:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 800a0ee:	f3bf 8f4f 	dsb	sy
 800a0f2:	f3bf 8f6f 	isb	sy
 800a0f6:	e7c7      	b.n	800a088 <prvTimerTask+0x94>
			( void ) xTaskResumeAll();
 800a0f8:	f7ff fbf8 	bl	80098ec <xTaskResumeAll>
}
 800a0fc:	e7c4      	b.n	800a088 <prvTimerTask+0x94>
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 800a0fe:	9b05      	ldr	r3, [sp, #20]
 800a100:	9907      	ldr	r1, [sp, #28]
 800a102:	4798      	blx	r3
		if( xMessage.xMessageID >= ( BaseType_t ) 0 )
 800a104:	9b04      	ldr	r3, [sp, #16]
 800a106:	2b00      	cmp	r3, #0
 800a108:	dbbe      	blt.n	800a088 <prvTimerTask+0x94>
 800a10a:	e7c8      	b.n	800a09e <prvTimerTask+0xaa>
				( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800a10c:	1d20      	adds	r0, r4, #4
 800a10e:	f7fe fa79 	bl	8008604 <uxListRemove>
 800a112:	e7c8      	b.n	800a0a6 <prvTimerTask+0xb2>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800a114:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 800a118:	69a1      	ldr	r1, [r4, #24]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800a11a:	f043 0301 	orr.w	r3, r3, #1
 800a11e:	f884 3028 	strb.w	r3, [r4, #40]	@ 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 800a122:	9b05      	ldr	r3, [sp, #20]
 800a124:	4620      	mov	r0, r4
 800a126:	4419      	add	r1, r3
 800a128:	f7ff fe62 	bl	8009df0 <prvInsertTimerInActiveList>
 800a12c:	2800      	cmp	r0, #0
 800a12e:	d0ab      	beq.n	800a088 <prvTimerTask+0x94>
						pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800a130:	6a23      	ldr	r3, [r4, #32]
 800a132:	4620      	mov	r0, r4
 800a134:	4798      	blx	r3
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800a136:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
 800a13a:	0759      	lsls	r1, r3, #29
 800a13c:	d5a4      	bpl.n	800a088 <prvTimerTask+0x94>
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
 800a13e:	69a2      	ldr	r2, [r4, #24]
 800a140:	9905      	ldr	r1, [sp, #20]
 800a142:	2300      	movs	r3, #0
 800a144:	440a      	add	r2, r1
 800a146:	9300      	str	r3, [sp, #0]
 800a148:	4619      	mov	r1, r3
 800a14a:	4620      	mov	r0, r4
 800a14c:	f7ff fed4 	bl	8009ef8 <xTimerGenericCommand>
							configASSERT( xResult );
 800a150:	2800      	cmp	r0, #0
 800a152:	d199      	bne.n	800a088 <prvTimerTask+0x94>
 800a154:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800a158:	f383 8811 	msr	BASEPRI, r3
 800a15c:	f3bf 8f6f 	isb	sy
 800a160:	f3bf 8f4f 	dsb	sy
 800a164:	e7fe      	b.n	800a164 <prvTimerTask+0x170>
					pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800a166:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
							pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800a16a:	f023 0301 	bic.w	r3, r3, #1
 800a16e:	f884 3028 	strb.w	r3, [r4, #40]	@ 0x28
 800a172:	e789      	b.n	800a088 <prvTimerTask+0x94>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800a174:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
 800a178:	f043 0301 	orr.w	r3, r3, #1
 800a17c:	f884 3028 	strb.w	r3, [r4, #40]	@ 0x28
					pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
 800a180:	9905      	ldr	r1, [sp, #20]
 800a182:	61a1      	str	r1, [r4, #24]
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 800a184:	b941      	cbnz	r1, 800a198 <prvTimerTask+0x1a4>
 800a186:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800a18a:	f383 8811 	msr	BASEPRI, r3
 800a18e:	f3bf 8f6f 	isb	sy
 800a192:	f3bf 8f4f 	dsb	sy
 800a196:	e7fe      	b.n	800a196 <prvTimerTask+0x1a2>
					( void ) prvInsertTimerInActiveList( pxTimer, ( xTimeNow + pxTimer->xTimerPeriodInTicks ), xTimeNow, xTimeNow );
 800a198:	4603      	mov	r3, r0
 800a19a:	4401      	add	r1, r0
 800a19c:	4620      	mov	r0, r4
 800a19e:	f7ff fe27 	bl	8009df0 <prvInsertTimerInActiveList>
					break;
 800a1a2:	e771      	b.n	800a088 <prvTimerTask+0x94>
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_STATICALLY_ALLOCATED ) == ( uint8_t ) 0 )
 800a1a4:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
 800a1a8:	079a      	lsls	r2, r3, #30
 800a1aa:	d4de      	bmi.n	800a16a <prvTimerTask+0x176>
							vPortFree( pxTimer );
 800a1ac:	4620      	mov	r0, r4
 800a1ae:	f7fe f9bb 	bl	8008528 <vPortFree>
 800a1b2:	e769      	b.n	800a088 <prvTimerTask+0x94>
 800a1b4:	20013398 	.word	0x20013398
 800a1b8:	20013390 	.word	0x20013390
 800a1bc:	20013394 	.word	0x20013394

0800a1c0 <USBD_Init>:
                             USBD_DescriptorsTypeDef *pdesc, uint8_t id)
{
  USBD_StatusTypeDef ret;

  /* Check whether the USB Host handle is valid */
  if (pdev == NULL)
 800a1c0:	b178      	cbz	r0, 800a1e2 <USBD_Init+0x22>
    pdev->NumClasses = 0;
    pdev->classId = 0;
  }
#else
  /* Unlink previous class*/
  pdev->pClass[0] = NULL;
 800a1c2:	2300      	movs	r3, #0
 800a1c4:	f8c0 32b8 	str.w	r3, [r0, #696]	@ 0x2b8
  pdev->pUserData[0] = NULL;
 800a1c8:	f8c0 32c4 	str.w	r3, [r0, #708]	@ 0x2c4
#endif /* USE_USBD_COMPOSITE */

  pdev->pConfDesc = NULL;
 800a1cc:	f8c0 32d0 	str.w	r3, [r0, #720]	@ 0x2d0

  /* Assign USBD Descriptors */
  if (pdesc != NULL)
 800a1d0:	b109      	cbz	r1, 800a1d6 <USBD_Init+0x16>
  {
    pdev->pDesc = pdesc;
 800a1d2:	f8c0 12b4 	str.w	r1, [r0, #692]	@ 0x2b4
  }

  /* Set Device initial State */
  pdev->dev_state = USBD_STATE_DEFAULT;
 800a1d6:	2301      	movs	r3, #1
 800a1d8:	f880 329c 	strb.w	r3, [r0, #668]	@ 0x29c
  pdev->id = id;
 800a1dc:	7002      	strb	r2, [r0, #0]

  /* Initialize low level driver */
  ret = USBD_LL_Init(pdev);
 800a1de:	f7f8 b853 	b.w	8002288 <USBD_LL_Init>

  return ret;
}
 800a1e2:	2003      	movs	r0, #3
 800a1e4:	4770      	bx	lr

0800a1e6 <USBD_RegisterClass>:
  * @param  pdev: Device Handle
  * @param  pclass: Class handle
  * @retval USBD Status
  */
USBD_StatusTypeDef USBD_RegisterClass(USBD_HandleTypeDef *pdev, USBD_ClassTypeDef *pclass)
{
 800a1e6:	b513      	push	{r0, r1, r4, lr}
  uint16_t len = 0U;
 800a1e8:	2300      	movs	r3, #0
{
 800a1ea:	4604      	mov	r4, r0
  uint16_t len = 0U;
 800a1ec:	f8ad 3006 	strh.w	r3, [sp, #6]

  if (pclass == NULL)
 800a1f0:	b181      	cbz	r1, 800a214 <USBD_RegisterClass+0x2e>
  if (pdev->pClass[pdev->classId]->GetHSConfigDescriptor != NULL)
  {
    pdev->pConfDesc = (void *)pdev->pClass[pdev->classId]->GetHSConfigDescriptor(&len);
  }
#else /* Default USE_USB_FS */
  if (pdev->pClass[pdev->classId]->GetFSConfigDescriptor != NULL)
 800a1f2:	6acb      	ldr	r3, [r1, #44]	@ 0x2c
  pdev->pClass[0] = pclass;
 800a1f4:	f8c0 12b8 	str.w	r1, [r0, #696]	@ 0x2b8
  if (pdev->pClass[pdev->classId]->GetFSConfigDescriptor != NULL)
 800a1f8:	b123      	cbz	r3, 800a204 <USBD_RegisterClass+0x1e>
  {
    pdev->pConfDesc = (void *)pdev->pClass[pdev->classId]->GetFSConfigDescriptor(&len);
 800a1fa:	f10d 0006 	add.w	r0, sp, #6
 800a1fe:	4798      	blx	r3
 800a200:	f8c4 02d0 	str.w	r0, [r4, #720]	@ 0x2d0
  }
#endif /* USE_USB_FS */

  /* Increment the NumClasses */
  pdev->NumClasses++;
 800a204:	f8d4 32d8 	ldr.w	r3, [r4, #728]	@ 0x2d8
 800a208:	3301      	adds	r3, #1
 800a20a:	f8c4 32d8 	str.w	r3, [r4, #728]	@ 0x2d8

  return USBD_OK;
 800a20e:	2000      	movs	r0, #0
}
 800a210:	b002      	add	sp, #8
 800a212:	bd10      	pop	{r4, pc}
    return USBD_FAIL;
 800a214:	2003      	movs	r0, #3
 800a216:	e7fb      	b.n	800a210 <USBD_RegisterClass+0x2a>

0800a218 <USBD_Start>:
#ifdef USE_USBD_COMPOSITE
  pdev->classId = 0U;
#endif /* USE_USBD_COMPOSITE */

  /* Start the low level driver  */
  return USBD_LL_Start(pdev);
 800a218:	f7f8 b887 	b.w	800232a <USBD_LL_Start>

0800a21c <USBD_SetClassConfig>:
        }
      }
    }
  }
#else
  if (pdev->pClass[0] != NULL)
 800a21c:	f8d0 32b8 	ldr.w	r3, [r0, #696]	@ 0x2b8
 800a220:	b10b      	cbz	r3, 800a226 <USBD_SetClassConfig+0xa>
  {
    /* Set configuration and Start the Class */
    ret = (USBD_StatusTypeDef)pdev->pClass[0]->Init(pdev, cfgidx);
 800a222:	681b      	ldr	r3, [r3, #0]
 800a224:	4718      	bx	r3
  }
#endif /* USE_USBD_COMPOSITE */

  return ret;
}
 800a226:	4618      	mov	r0, r3
 800a228:	4770      	bx	lr

0800a22a <USBD_ClrClassConfig>:
  * @param  pdev: device instance
  * @param  cfgidx: configuration index
  * @retval status
  */
USBD_StatusTypeDef USBD_ClrClassConfig(USBD_HandleTypeDef *pdev, uint8_t cfgidx)
{
 800a22a:	b508      	push	{r3, lr}
      }
    }
  }
#else
  /* Clear configuration  and De-initialize the Class process */
  if (pdev->pClass[0]->DeInit(pdev, cfgidx) != 0U)
 800a22c:	f8d0 32b8 	ldr.w	r3, [r0, #696]	@ 0x2b8
 800a230:	685b      	ldr	r3, [r3, #4]
 800a232:	4798      	blx	r3
  {
    ret = USBD_FAIL;
 800a234:	2800      	cmp	r0, #0
  }
#endif /* USE_USBD_COMPOSITE */

  return ret;
}
 800a236:	bf18      	it	ne
 800a238:	2003      	movne	r0, #3
 800a23a:	bd08      	pop	{r3, pc}

0800a23c <USBD_LL_SetupStage>:
  * @param  pdev: device instance
  * @param  psetup: setup packet buffer pointer
  * @retval status
  */
USBD_StatusTypeDef USBD_LL_SetupStage(USBD_HandleTypeDef *pdev, uint8_t *psetup)
{
 800a23c:	b538      	push	{r3, r4, r5, lr}
 800a23e:	4604      	mov	r4, r0
  USBD_StatusTypeDef ret;

  USBD_ParseSetupRequest(&pdev->request, psetup);
 800a240:	f200 25aa 	addw	r5, r0, #682	@ 0x2aa
 800a244:	4628      	mov	r0, r5
 800a246:	f000 fb97 	bl	800a978 <USBD_ParseSetupRequest>

  pdev->ep0_state = USBD_EP0_SETUP;
 800a24a:	2301      	movs	r3, #1

  pdev->ep0_data_len = pdev->request.wLength;

  switch (pdev->request.bmRequest & 0x1FU)
 800a24c:	f894 12aa 	ldrb.w	r1, [r4, #682]	@ 0x2aa
  pdev->ep0_state = USBD_EP0_SETUP;
 800a250:	f8c4 3294 	str.w	r3, [r4, #660]	@ 0x294
  pdev->ep0_data_len = pdev->request.wLength;
 800a254:	f8b4 32b0 	ldrh.w	r3, [r4, #688]	@ 0x2b0
 800a258:	f8c4 3298 	str.w	r3, [r4, #664]	@ 0x298
  switch (pdev->request.bmRequest & 0x1FU)
 800a25c:	f001 031f 	and.w	r3, r1, #31
 800a260:	2b01      	cmp	r3, #1
 800a262:	d008      	beq.n	800a276 <USBD_LL_SetupStage+0x3a>
 800a264:	2b02      	cmp	r3, #2
 800a266:	d00c      	beq.n	800a282 <USBD_LL_SetupStage+0x46>
 800a268:	b98b      	cbnz	r3, 800a28e <USBD_LL_SetupStage+0x52>
  {
    case USB_REQ_RECIPIENT_DEVICE:
      ret = USBD_StdDevReq(pdev, &pdev->request);
 800a26a:	4629      	mov	r1, r5
 800a26c:	4620      	mov	r0, r4
      ret = USBD_LL_StallEP(pdev, (pdev->request.bmRequest & 0x80U));
      break;
  }

  return ret;
}
 800a26e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
      ret = USBD_StdDevReq(pdev, &pdev->request);
 800a272:	f000 b94d 	b.w	800a510 <USBD_StdDevReq>
      ret = USBD_StdItfReq(pdev, &pdev->request);
 800a276:	4629      	mov	r1, r5
 800a278:	4620      	mov	r0, r4
}
 800a27a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
      ret = USBD_StdItfReq(pdev, &pdev->request);
 800a27e:	f000 baab 	b.w	800a7d8 <USBD_StdItfReq>
      ret = USBD_StdEPReq(pdev, &pdev->request);
 800a282:	4629      	mov	r1, r5
 800a284:	4620      	mov	r0, r4
}
 800a286:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
      ret = USBD_StdEPReq(pdev, &pdev->request);
 800a28a:	f000 bad4 	b.w	800a836 <USBD_StdEPReq>
      ret = USBD_LL_StallEP(pdev, (pdev->request.bmRequest & 0x80U));
 800a28e:	4620      	mov	r0, r4
 800a290:	f001 0180 	and.w	r1, r1, #128	@ 0x80
}
 800a294:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
      ret = USBD_LL_StallEP(pdev, (pdev->request.bmRequest & 0x80U));
 800a298:	f7f8 b865 	b.w	8002366 <USBD_LL_StallEP>

0800a29c <USBD_LL_DataOutStage>:
  * @param  pdata: data pointer
  * @retval status
  */
USBD_StatusTypeDef USBD_LL_DataOutStage(USBD_HandleTypeDef *pdev,
                                        uint8_t epnum, uint8_t *pdata)
{
 800a29c:	b570      	push	{r4, r5, r6, lr}
 800a29e:	4604      	mov	r4, r0
 800a2a0:	4616      	mov	r6, r2
  USBD_EndpointTypeDef *pep;
  USBD_StatusTypeDef ret = USBD_OK;
  uint8_t idx;

  if (epnum == 0U)
 800a2a2:	bb09      	cbnz	r1, 800a2e8 <USBD_LL_DataOutStage+0x4c>
  {
    pep = &pdev->ep_out[0];

    if (pdev->ep0_state == USBD_EP0_DATA_OUT)
 800a2a4:	f8d0 3294 	ldr.w	r3, [r0, #660]	@ 0x294
 800a2a8:	2b03      	cmp	r3, #3
 800a2aa:	d10c      	bne.n	800a2c6 <USBD_LL_DataOutStage+0x2a>
    {
      if (pep->rem_length > pep->maxpacket)
 800a2ac:	e9d0 3257 	ldrd	r3, r2, [r0, #348]	@ 0x15c
 800a2b0:	4293      	cmp	r3, r2
 800a2b2:	d90a      	bls.n	800a2ca <USBD_LL_DataOutStage+0x2e>
      {
        pep->rem_length -= pep->maxpacket;
 800a2b4:	1a9b      	subs	r3, r3, r2

        (void)USBD_CtlContinueRx(pdev, pdata, MIN(pep->rem_length, pep->maxpacket));
 800a2b6:	429a      	cmp	r2, r3
        pep->rem_length -= pep->maxpacket;
 800a2b8:	f8c0 315c 	str.w	r3, [r0, #348]	@ 0x15c
        (void)USBD_CtlContinueRx(pdev, pdata, MIN(pep->rem_length, pep->maxpacket));
 800a2bc:	bf28      	it	cs
 800a2be:	461a      	movcs	r2, r3
 800a2c0:	4631      	mov	r1, r6
 800a2c2:	f000 fc9e 	bl	800ac02 <USBD_CtlContinueRx>
      }
    }
  }

  return USBD_OK;
}
 800a2c6:	2000      	movs	r0, #0
 800a2c8:	bd70      	pop	{r4, r5, r6, pc}
          if (pdev->dev_state == USBD_STATE_CONFIGURED)
 800a2ca:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
 800a2ce:	2b03      	cmp	r3, #3
 800a2d0:	d106      	bne.n	800a2e0 <USBD_LL_DataOutStage+0x44>
            if (pdev->pClass[idx]->EP0_RxReady != NULL)
 800a2d2:	f8d0 32b8 	ldr.w	r3, [r0, #696]	@ 0x2b8
 800a2d6:	691b      	ldr	r3, [r3, #16]
 800a2d8:	b113      	cbz	r3, 800a2e0 <USBD_LL_DataOutStage+0x44>
              pdev->classId = idx;
 800a2da:	f8c0 12d4 	str.w	r1, [r0, #724]	@ 0x2d4
              pdev->pClass[idx]->EP0_RxReady(pdev);
 800a2de:	4798      	blx	r3
        (void)USBD_CtlSendStatus(pdev);
 800a2e0:	4620      	mov	r0, r4
 800a2e2:	f000 fc96 	bl	800ac12 <USBD_CtlSendStatus>
 800a2e6:	e7ee      	b.n	800a2c6 <USBD_LL_DataOutStage+0x2a>
      if (pdev->dev_state == USBD_STATE_CONFIGURED)
 800a2e8:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
 800a2ec:	2b03      	cmp	r3, #3
 800a2ee:	d1ea      	bne.n	800a2c6 <USBD_LL_DataOutStage+0x2a>
        if (pdev->pClass[idx]->DataOut != NULL)
 800a2f0:	f8d0 32b8 	ldr.w	r3, [r0, #696]	@ 0x2b8
 800a2f4:	699b      	ldr	r3, [r3, #24]
 800a2f6:	2b00      	cmp	r3, #0
 800a2f8:	d0e5      	beq.n	800a2c6 <USBD_LL_DataOutStage+0x2a>
          pdev->classId = idx;
 800a2fa:	2200      	movs	r2, #0
}
 800a2fc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
          pdev->classId = idx;
 800a300:	f8c0 22d4 	str.w	r2, [r0, #724]	@ 0x2d4
          ret = (USBD_StatusTypeDef)pdev->pClass[idx]->DataOut(pdev, epnum);
 800a304:	4718      	bx	r3

0800a306 <USBD_LL_DataInStage>:
  * @param  pdata: data pointer
  * @retval status
  */
USBD_StatusTypeDef USBD_LL_DataInStage(USBD_HandleTypeDef *pdev,
                                       uint8_t epnum, uint8_t *pdata)
{
 800a306:	b570      	push	{r4, r5, r6, lr}
 800a308:	4604      	mov	r4, r0
 800a30a:	4616      	mov	r6, r2
  USBD_EndpointTypeDef *pep;
  USBD_StatusTypeDef ret;
  uint8_t idx;

  if (epnum == 0U)
 800a30c:	460d      	mov	r5, r1
 800a30e:	2900      	cmp	r1, #0
 800a310:	d13d      	bne.n	800a38e <USBD_LL_DataInStage+0x88>
  {
    pep = &pdev->ep_in[0];

    if (pdev->ep0_state == USBD_EP0_DATA_IN)
 800a312:	f8d0 3294 	ldr.w	r3, [r0, #660]	@ 0x294
 800a316:	2b02      	cmp	r3, #2
 800a318:	d10e      	bne.n	800a338 <USBD_LL_DataInStage+0x32>
    {
      if (pep->rem_length > pep->maxpacket)
 800a31a:	e9d0 3207 	ldrd	r3, r2, [r0, #28]
 800a31e:	4293      	cmp	r3, r2
 800a320:	d912      	bls.n	800a348 <USBD_LL_DataInStage+0x42>
      {
        pep->rem_length -= pep->maxpacket;
 800a322:	1a9a      	subs	r2, r3, r2
 800a324:	61c2      	str	r2, [r0, #28]

        (void)USBD_CtlContinueSendData(pdev, pdata, pep->rem_length);
 800a326:	4631      	mov	r1, r6
 800a328:	f000 fc63 	bl	800abf2 <USBD_CtlContinueSendData>
        {
          (void)USBD_CtlContinueSendData(pdev, NULL, 0U);
          pdev->ep0_data_len = 0U;

          /* Prepare endpoint for premature end of transfer */
          (void)USBD_LL_PrepareReceive(pdev, 0U, NULL, 0U);
 800a32c:	462b      	mov	r3, r5
 800a32e:	462a      	mov	r2, r5
 800a330:	4629      	mov	r1, r5
 800a332:	4620      	mov	r0, r4
 800a334:	f7f8 f83b 	bl	80023ae <USBD_LL_PrepareReceive>
          (void)USBD_CtlReceiveStatus(pdev);
        }
      }
    }

    if (pdev->dev_test_mode != 0U)
 800a338:	f894 32a0 	ldrb.w	r3, [r4, #672]	@ 0x2a0
 800a33c:	b113      	cbz	r3, 800a344 <USBD_LL_DataInStage+0x3e>
    {
      (void)USBD_RunTestMode(pdev);
      pdev->dev_test_mode = 0U;
 800a33e:	2300      	movs	r3, #0
 800a340:	f884 32a0 	strb.w	r3, [r4, #672]	@ 0x2a0
      }
    }
  }

  return USBD_OK;
}
 800a344:	2000      	movs	r0, #0
 800a346:	bd70      	pop	{r4, r5, r6, pc}
        if ((pep->maxpacket == pep->rem_length) &&
 800a348:	d10c      	bne.n	800a364 <USBD_LL_DataInStage+0x5e>
            (pep->total_length >= pep->maxpacket) &&
 800a34a:	6982      	ldr	r2, [r0, #24]
        if ((pep->maxpacket == pep->rem_length) &&
 800a34c:	4293      	cmp	r3, r2
 800a34e:	d809      	bhi.n	800a364 <USBD_LL_DataInStage+0x5e>
            (pep->total_length >= pep->maxpacket) &&
 800a350:	f8d0 3298 	ldr.w	r3, [r0, #664]	@ 0x298
 800a354:	429a      	cmp	r2, r3
 800a356:	d205      	bcs.n	800a364 <USBD_LL_DataInStage+0x5e>
          (void)USBD_CtlContinueSendData(pdev, NULL, 0U);
 800a358:	460a      	mov	r2, r1
 800a35a:	f000 fc4a 	bl	800abf2 <USBD_CtlContinueSendData>
          pdev->ep0_data_len = 0U;
 800a35e:	f8c4 5298 	str.w	r5, [r4, #664]	@ 0x298
 800a362:	e7e3      	b.n	800a32c <USBD_LL_DataInStage+0x26>
          if (pdev->dev_state == USBD_STATE_CONFIGURED)
 800a364:	f894 329c 	ldrb.w	r3, [r4, #668]	@ 0x29c
 800a368:	2b03      	cmp	r3, #3
 800a36a:	d108      	bne.n	800a37e <USBD_LL_DataInStage+0x78>
            if (pdev->pClass[0]->EP0_TxSent != NULL)
 800a36c:	f8d4 32b8 	ldr.w	r3, [r4, #696]	@ 0x2b8
 800a370:	68db      	ldr	r3, [r3, #12]
 800a372:	b123      	cbz	r3, 800a37e <USBD_LL_DataInStage+0x78>
              pdev->classId = 0U;
 800a374:	2200      	movs	r2, #0
 800a376:	f8c4 22d4 	str.w	r2, [r4, #724]	@ 0x2d4
              pdev->pClass[0]->EP0_TxSent(pdev);
 800a37a:	4620      	mov	r0, r4
 800a37c:	4798      	blx	r3
          (void)USBD_LL_StallEP(pdev, 0x80U);
 800a37e:	2180      	movs	r1, #128	@ 0x80
 800a380:	4620      	mov	r0, r4
 800a382:	f7f7 fff0 	bl	8002366 <USBD_LL_StallEP>
          (void)USBD_CtlReceiveStatus(pdev);
 800a386:	4620      	mov	r0, r4
 800a388:	f000 fc4e 	bl	800ac28 <USBD_CtlReceiveStatus>
 800a38c:	e7d4      	b.n	800a338 <USBD_LL_DataInStage+0x32>
      if (pdev->dev_state == USBD_STATE_CONFIGURED)
 800a38e:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
 800a392:	2b03      	cmp	r3, #3
 800a394:	d1d6      	bne.n	800a344 <USBD_LL_DataInStage+0x3e>
        if (pdev->pClass[idx]->DataIn != NULL)
 800a396:	f8d0 32b8 	ldr.w	r3, [r0, #696]	@ 0x2b8
 800a39a:	695b      	ldr	r3, [r3, #20]
 800a39c:	2b00      	cmp	r3, #0
 800a39e:	d0d1      	beq.n	800a344 <USBD_LL_DataInStage+0x3e>
          pdev->classId = idx;
 800a3a0:	2200      	movs	r2, #0
}
 800a3a2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
          pdev->classId = idx;
 800a3a6:	f8c0 22d4 	str.w	r2, [r0, #724]	@ 0x2d4
          ret = (USBD_StatusTypeDef)pdev->pClass[idx]->DataIn(pdev, epnum);
 800a3aa:	4718      	bx	r3

0800a3ac <USBD_LL_Reset>:
  *         Handle Reset event
  * @param  pdev: device instance
  * @retval status
  */
USBD_StatusTypeDef USBD_LL_Reset(USBD_HandleTypeDef *pdev)
{
 800a3ac:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  USBD_StatusTypeDef ret = USBD_OK;

  /* Upon Reset call user call back */
  pdev->dev_state = USBD_STATE_DEFAULT;
 800a3ae:	2301      	movs	r3, #1
 800a3b0:	f880 329c 	strb.w	r3, [r0, #668]	@ 0x29c
      }
    }
  }
#else

  if (pdev->pClass[0] != NULL)
 800a3b4:	f8d0 32b8 	ldr.w	r3, [r0, #696]	@ 0x2b8
  pdev->ep0_state = USBD_EP0_IDLE;
 800a3b8:	2100      	movs	r1, #0
{
 800a3ba:	4604      	mov	r4, r0
  pdev->ep0_state = USBD_EP0_IDLE;
 800a3bc:	f8c0 1294 	str.w	r1, [r0, #660]	@ 0x294
  pdev->dev_config = 0U;
 800a3c0:	6041      	str	r1, [r0, #4]
  pdev->dev_remote_wakeup = 0U;
 800a3c2:	f8c0 12a4 	str.w	r1, [r0, #676]	@ 0x2a4
  pdev->dev_test_mode = 0U;
 800a3c6:	f880 12a0 	strb.w	r1, [r0, #672]	@ 0x2a0
  if (pdev->pClass[0] != NULL)
 800a3ca:	b9b3      	cbnz	r3, 800a3fa <USBD_LL_Reset+0x4e>
  USBD_StatusTypeDef ret = USBD_OK;
 800a3cc:	2600      	movs	r6, #0
    }
  }
#endif /* USE_USBD_COMPOSITE */

  /* Open EP0 OUT */
  (void)USBD_LL_OpenEP(pdev, 0x00U, USBD_EP_TYPE_CTRL, USB_MAX_EP0_SIZE);
 800a3ce:	2200      	movs	r2, #0
  pdev->ep_out[0x00U & 0xFU].is_used = 1U;

  pdev->ep_out[0].maxpacket = USB_MAX_EP0_SIZE;
 800a3d0:	2540      	movs	r5, #64	@ 0x40
  (void)USBD_LL_OpenEP(pdev, 0x00U, USBD_EP_TYPE_CTRL, USB_MAX_EP0_SIZE);
 800a3d2:	4611      	mov	r1, r2
  pdev->ep_out[0x00U & 0xFU].is_used = 1U;
 800a3d4:	2701      	movs	r7, #1
  (void)USBD_LL_OpenEP(pdev, 0x00U, USBD_EP_TYPE_CTRL, USB_MAX_EP0_SIZE);
 800a3d6:	2340      	movs	r3, #64	@ 0x40
 800a3d8:	4620      	mov	r0, r4
 800a3da:	f7f7 ffaf 	bl	800233c <USBD_LL_OpenEP>
  pdev->ep_out[0x00U & 0xFU].is_used = 1U;
 800a3de:	f8a4 7164 	strh.w	r7, [r4, #356]	@ 0x164
  pdev->ep_out[0].maxpacket = USB_MAX_EP0_SIZE;
 800a3e2:	f8c4 5160 	str.w	r5, [r4, #352]	@ 0x160

  /* Open EP0 IN */
  (void)USBD_LL_OpenEP(pdev, 0x80U, USBD_EP_TYPE_CTRL, USB_MAX_EP0_SIZE);
 800a3e6:	462b      	mov	r3, r5
 800a3e8:	2200      	movs	r2, #0
 800a3ea:	2180      	movs	r1, #128	@ 0x80
 800a3ec:	4620      	mov	r0, r4
 800a3ee:	f7f7 ffa5 	bl	800233c <USBD_LL_OpenEP>
  pdev->ep_in[0x80U & 0xFU].is_used = 1U;
 800a3f2:	84a7      	strh	r7, [r4, #36]	@ 0x24

  pdev->ep_in[0].maxpacket = USB_MAX_EP0_SIZE;
 800a3f4:	6225      	str	r5, [r4, #32]

  return ret;
}
 800a3f6:	4630      	mov	r0, r6
 800a3f8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    if (pdev->pClass[0]->DeInit != NULL)
 800a3fa:	685b      	ldr	r3, [r3, #4]
 800a3fc:	2b00      	cmp	r3, #0
 800a3fe:	d0e5      	beq.n	800a3cc <USBD_LL_Reset+0x20>
      if (pdev->pClass[0]->DeInit(pdev, (uint8_t)pdev->dev_config) != USBD_OK)
 800a400:	4798      	blx	r3
 800a402:	2800      	cmp	r0, #0
 800a404:	d0e2      	beq.n	800a3cc <USBD_LL_Reset+0x20>
        ret = USBD_FAIL;
 800a406:	2603      	movs	r6, #3
 800a408:	e7e1      	b.n	800a3ce <USBD_LL_Reset+0x22>

0800a40a <USBD_LL_SetSpeed>:
  * @retval status
  */
USBD_StatusTypeDef USBD_LL_SetSpeed(USBD_HandleTypeDef *pdev,
                                    USBD_SpeedTypeDef speed)
{
  pdev->dev_speed = speed;
 800a40a:	7401      	strb	r1, [r0, #16]

  return USBD_OK;
}
 800a40c:	2000      	movs	r0, #0
 800a40e:	4770      	bx	lr

0800a410 <USBD_LL_Suspend>:
  * @param  pdev: device instance
  * @retval status
  */
USBD_StatusTypeDef USBD_LL_Suspend(USBD_HandleTypeDef *pdev)
{
  if (pdev->dev_state != USBD_STATE_SUSPENDED)
 800a410:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
 800a414:	2b04      	cmp	r3, #4
  {
    pdev->dev_old_state = pdev->dev_state;
 800a416:	bf1e      	ittt	ne
 800a418:	f890 329c 	ldrbne.w	r3, [r0, #668]	@ 0x29c
 800a41c:	b2db      	uxtbne	r3, r3
 800a41e:	f880 329d 	strbne.w	r3, [r0, #669]	@ 0x29d
  }

  pdev->dev_state = USBD_STATE_SUSPENDED;
 800a422:	2304      	movs	r3, #4
 800a424:	f880 329c 	strb.w	r3, [r0, #668]	@ 0x29c

  return USBD_OK;
}
 800a428:	2000      	movs	r0, #0
 800a42a:	4770      	bx	lr

0800a42c <USBD_LL_Resume>:
  * @param  pdev: device instance
  * @retval status
  */
USBD_StatusTypeDef USBD_LL_Resume(USBD_HandleTypeDef *pdev)
{
  if (pdev->dev_state == USBD_STATE_SUSPENDED)
 800a42c:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
 800a430:	2b04      	cmp	r3, #4
  {
    pdev->dev_state = pdev->dev_old_state;
 800a432:	bf02      	ittt	eq
 800a434:	f890 329d 	ldrbeq.w	r3, [r0, #669]	@ 0x29d
 800a438:	b2db      	uxtbeq	r3, r3
 800a43a:	f880 329c 	strbeq.w	r3, [r0, #668]	@ 0x29c
  }

  return USBD_OK;
}
 800a43e:	2000      	movs	r0, #0
 800a440:	4770      	bx	lr

0800a442 <USBD_LL_SOF>:
  *         Handle SOF event
  * @param  pdev: device instance
  * @retval status
  */
USBD_StatusTypeDef USBD_LL_SOF(USBD_HandleTypeDef *pdev)
{
 800a442:	b508      	push	{r3, lr}
  /* The SOF event can be distributed for all classes that support it */
  if (pdev->dev_state == USBD_STATE_CONFIGURED)
 800a444:	f890 229c 	ldrb.w	r2, [r0, #668]	@ 0x29c
 800a448:	2a03      	cmp	r2, #3
 800a44a:	d105      	bne.n	800a458 <USBD_LL_SOF+0x16>
          }
        }
      }
    }
#else
    if (pdev->pClass[0] != NULL)
 800a44c:	f8d0 32b8 	ldr.w	r3, [r0, #696]	@ 0x2b8
 800a450:	b113      	cbz	r3, 800a458 <USBD_LL_SOF+0x16>
    {
      if (pdev->pClass[0]->SOF != NULL)
 800a452:	69db      	ldr	r3, [r3, #28]
 800a454:	b103      	cbz	r3, 800a458 <USBD_LL_SOF+0x16>
      {
        (void)pdev->pClass[0]->SOF(pdev);
 800a456:	4798      	blx	r3
    }
#endif /* USE_USBD_COMPOSITE */
  }

  return USBD_OK;
}
 800a458:	2000      	movs	r0, #0
 800a45a:	bd08      	pop	{r3, pc}

0800a45c <USBD_LL_IsoINIncomplete>:
  * @retval status
  */
USBD_StatusTypeDef USBD_LL_IsoINIncomplete(USBD_HandleTypeDef *pdev,
                                           uint8_t epnum)
{
  if (pdev->pClass[pdev->classId] == NULL)
 800a45c:	f8d0 22d4 	ldr.w	r2, [r0, #724]	@ 0x2d4
 800a460:	32ae      	adds	r2, #174	@ 0xae
{
 800a462:	b508      	push	{r3, lr}
  if (pdev->pClass[pdev->classId] == NULL)
 800a464:	f850 2022 	ldr.w	r2, [r0, r2, lsl #2]
 800a468:	b14a      	cbz	r2, 800a47e <USBD_LL_IsoINIncomplete+0x22>
  {
    return USBD_FAIL;
  }

  if (pdev->dev_state == USBD_STATE_CONFIGURED)
 800a46a:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
 800a46e:	2b03      	cmp	r3, #3
 800a470:	d101      	bne.n	800a476 <USBD_LL_IsoINIncomplete+0x1a>
  {
    if (pdev->pClass[pdev->classId]->IsoINIncomplete != NULL)
 800a472:	6a13      	ldr	r3, [r2, #32]
 800a474:	b90b      	cbnz	r3, 800a47a <USBD_LL_IsoINIncomplete+0x1e>
    {
      (void)pdev->pClass[pdev->classId]->IsoINIncomplete(pdev, epnum);
    }
  }

  return USBD_OK;
 800a476:	2000      	movs	r0, #0
}
 800a478:	bd08      	pop	{r3, pc}
      (void)pdev->pClass[pdev->classId]->IsoINIncomplete(pdev, epnum);
 800a47a:	4798      	blx	r3
 800a47c:	e7fb      	b.n	800a476 <USBD_LL_IsoINIncomplete+0x1a>
    return USBD_FAIL;
 800a47e:	2003      	movs	r0, #3
 800a480:	e7fa      	b.n	800a478 <USBD_LL_IsoINIncomplete+0x1c>

0800a482 <USBD_LL_IsoOUTIncomplete>:
  * @retval status
  */
USBD_StatusTypeDef USBD_LL_IsoOUTIncomplete(USBD_HandleTypeDef *pdev,
                                            uint8_t epnum)
{
  if (pdev->pClass[pdev->classId] == NULL)
 800a482:	f8d0 22d4 	ldr.w	r2, [r0, #724]	@ 0x2d4
 800a486:	32ae      	adds	r2, #174	@ 0xae
{
 800a488:	b508      	push	{r3, lr}
  if (pdev->pClass[pdev->classId] == NULL)
 800a48a:	f850 2022 	ldr.w	r2, [r0, r2, lsl #2]
 800a48e:	b14a      	cbz	r2, 800a4a4 <USBD_LL_IsoOUTIncomplete+0x22>
  {
    return USBD_FAIL;
  }

  if (pdev->dev_state == USBD_STATE_CONFIGURED)
 800a490:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
 800a494:	2b03      	cmp	r3, #3
 800a496:	d101      	bne.n	800a49c <USBD_LL_IsoOUTIncomplete+0x1a>
  {
    if (pdev->pClass[pdev->classId]->IsoOUTIncomplete != NULL)
 800a498:	6a53      	ldr	r3, [r2, #36]	@ 0x24
 800a49a:	b90b      	cbnz	r3, 800a4a0 <USBD_LL_IsoOUTIncomplete+0x1e>
    {
      (void)pdev->pClass[pdev->classId]->IsoOUTIncomplete(pdev, epnum);
    }
  }

  return USBD_OK;
 800a49c:	2000      	movs	r0, #0
}
 800a49e:	bd08      	pop	{r3, pc}
      (void)pdev->pClass[pdev->classId]->IsoOUTIncomplete(pdev, epnum);
 800a4a0:	4798      	blx	r3
 800a4a2:	e7fb      	b.n	800a49c <USBD_LL_IsoOUTIncomplete+0x1a>
    return USBD_FAIL;
 800a4a4:	2003      	movs	r0, #3
 800a4a6:	e7fa      	b.n	800a49e <USBD_LL_IsoOUTIncomplete+0x1c>

0800a4a8 <USBD_LL_DevConnected>:
  * @brief  USBD_LL_DevConnected
  *         Handle device connection event
  * @param  pdev: device instance
  * @retval status
  */
USBD_StatusTypeDef USBD_LL_DevConnected(USBD_HandleTypeDef *pdev)
 800a4a8:	2000      	movs	r0, #0
 800a4aa:	4770      	bx	lr

0800a4ac <USBD_LL_DevDisconnected>:
USBD_StatusTypeDef USBD_LL_DevDisconnected(USBD_HandleTypeDef *pdev)
{
  USBD_StatusTypeDef   ret = USBD_OK;

  /* Free Class Resources */
  pdev->dev_state = USBD_STATE_DEFAULT;
 800a4ac:	2201      	movs	r2, #1
{
 800a4ae:	b508      	push	{r3, lr}
  pdev->dev_state = USBD_STATE_DEFAULT;
 800a4b0:	f880 229c 	strb.w	r2, [r0, #668]	@ 0x29c
        }
      }
    }
  }
#else
  if (pdev->pClass[0] != NULL)
 800a4b4:	f8d0 22b8 	ldr.w	r2, [r0, #696]	@ 0x2b8
 800a4b8:	b90a      	cbnz	r2, 800a4be <USBD_LL_DevDisconnected+0x12>
  USBD_StatusTypeDef   ret = USBD_OK;
 800a4ba:	2000      	movs	r0, #0
    }
  }
#endif /* USE_USBD_COMPOSITE */

  return ret;
}
 800a4bc:	bd08      	pop	{r3, pc}
    if (pdev->pClass[0]->DeInit(pdev, (uint8_t)pdev->dev_config) != 0U)
 800a4be:	6852      	ldr	r2, [r2, #4]
 800a4c0:	7901      	ldrb	r1, [r0, #4]
 800a4c2:	4790      	blx	r2
 800a4c4:	2800      	cmp	r0, #0
 800a4c6:	d0f8      	beq.n	800a4ba <USBD_LL_DevDisconnected+0xe>
      ret = USBD_FAIL;
 800a4c8:	2003      	movs	r0, #3
 800a4ca:	e7f7      	b.n	800a4bc <USBD_LL_DevDisconnected+0x10>

0800a4cc <USBD_CoreFindIF>:
  UNUSED(pdev);
  UNUSED(index);

  return 0x00U;
#endif /* USE_USBD_COMPOSITE */
}
 800a4cc:	2000      	movs	r0, #0
 800a4ce:	4770      	bx	lr

0800a4d0 <USBD_CoreFindEP>:
  *         return the class index relative to the selected endpoint
  * @param  pdev: device instance
  * @param  index : selected endpoint number
  * @retval index of the class using the selected endpoint number. 0xFF if no class found.
  */
uint8_t USBD_CoreFindEP(USBD_HandleTypeDef *pdev, uint8_t index)
 800a4d0:	2000      	movs	r0, #0
 800a4d2:	4770      	bx	lr

0800a4d4 <USBD_GetEpDesc>:
  * @param  pConfDesc:  pointer to Bos descriptor
  * @param  EpAddr:  endpoint address
  * @retval pointer to video endpoint descriptor
  */
void *USBD_GetEpDesc(uint8_t *pConfDesc, uint8_t EpAddr)
{
 800a4d4:	b510      	push	{r4, lr}
  USBD_DescHeaderTypeDef *pdesc = (USBD_DescHeaderTypeDef *)(void *)pConfDesc;
  USBD_ConfigDescTypeDef *desc = (USBD_ConfigDescTypeDef *)(void *)pConfDesc;
  USBD_EpDescTypeDef *pEpDesc = NULL;
  uint16_t ptr;

  if (desc->wTotalLength > desc->bLength)
 800a4d6:	8842      	ldrh	r2, [r0, #2]
 800a4d8:	7803      	ldrb	r3, [r0, #0]
 800a4da:	429a      	cmp	r2, r3
 800a4dc:	d801      	bhi.n	800a4e2 <USBD_GetEpDesc+0xe>
  USBD_EpDescTypeDef *pEpDesc = NULL;
 800a4de:	2000      	movs	r0, #0
      }
    }
  }

  return (void *)pEpDesc;
}
 800a4e0:	bd10      	pop	{r4, pc}
  */
USBD_DescHeaderTypeDef *USBD_GetNextDesc(uint8_t *pbuf, uint16_t *ptr)
{
  USBD_DescHeaderTypeDef *pnext = (USBD_DescHeaderTypeDef *)(void *)pbuf;

  *ptr += pnext->bLength;
 800a4e2:	7804      	ldrb	r4, [r0, #0]
  pnext = (USBD_DescHeaderTypeDef *)(void *)(pbuf + pnext->bLength);
 800a4e4:	4420      	add	r0, r4
  *ptr += pnext->bLength;
 800a4e6:	4423      	add	r3, r4
      if (pdesc->bDescriptorType == USB_DESC_TYPE_ENDPOINT)
 800a4e8:	7844      	ldrb	r4, [r0, #1]
 800a4ea:	2c05      	cmp	r4, #5
  *ptr += pnext->bLength;
 800a4ec:	b29b      	uxth	r3, r3
      if (pdesc->bDescriptorType == USB_DESC_TYPE_ENDPOINT)
 800a4ee:	d1f4      	bne.n	800a4da <USBD_GetEpDesc+0x6>
        if (pEpDesc->bEndpointAddress == EpAddr)
 800a4f0:	7884      	ldrb	r4, [r0, #2]
 800a4f2:	428c      	cmp	r4, r1
 800a4f4:	d1f1      	bne.n	800a4da <USBD_GetEpDesc+0x6>
 800a4f6:	e7f3      	b.n	800a4e0 <USBD_GetEpDesc+0xc>

0800a4f8 <USBD_CtlError.constprop.0>:
  *         Handle USB low level Error
  * @param  pdev: device instance
  * @param  req: usb request
  * @retval None
  */
void USBD_CtlError(USBD_HandleTypeDef *pdev, USBD_SetupReqTypedef *req)
 800a4f8:	b510      	push	{r4, lr}
{
  UNUSED(req);

  (void)USBD_LL_StallEP(pdev, 0x80U);
 800a4fa:	2180      	movs	r1, #128	@ 0x80
void USBD_CtlError(USBD_HandleTypeDef *pdev, USBD_SetupReqTypedef *req)
 800a4fc:	4604      	mov	r4, r0
  (void)USBD_LL_StallEP(pdev, 0x80U);
 800a4fe:	f7f7 ff32 	bl	8002366 <USBD_LL_StallEP>
  (void)USBD_LL_StallEP(pdev, 0U);
 800a502:	4620      	mov	r0, r4
 800a504:	2100      	movs	r1, #0
}
 800a506:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  (void)USBD_LL_StallEP(pdev, 0U);
 800a50a:	f7f7 bf2c 	b.w	8002366 <USBD_LL_StallEP>
	...

0800a510 <USBD_StdDevReq>:
{
 800a510:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800a512:	780b      	ldrb	r3, [r1, #0]
 800a514:	f003 0360 	and.w	r3, r3, #96	@ 0x60
  switch (req->bmRequest & USB_REQ_TYPE_MASK)
 800a518:	2b20      	cmp	r3, #32
{
 800a51a:	4604      	mov	r4, r0
 800a51c:	460d      	mov	r5, r1
  switch (req->bmRequest & USB_REQ_TYPE_MASK)
 800a51e:	d009      	beq.n	800a534 <USBD_StdDevReq+0x24>
 800a520:	2b40      	cmp	r3, #64	@ 0x40
 800a522:	d007      	beq.n	800a534 <USBD_StdDevReq+0x24>
 800a524:	b193      	cbz	r3, 800a54c <USBD_StdDevReq+0x3c>
      USBD_CtlError(pdev, req);
 800a526:	4620      	mov	r0, r4
 800a528:	f7ff ffe6 	bl	800a4f8 <USBD_CtlError.constprop.0>
  USBD_StatusTypeDef ret = USBD_OK;
 800a52c:	2500      	movs	r5, #0
}
 800a52e:	4628      	mov	r0, r5
 800a530:	b002      	add	sp, #8
 800a532:	bd70      	pop	{r4, r5, r6, pc}
      ret = (USBD_StatusTypeDef)pdev->pClass[pdev->classId]->Setup(pdev, req);
 800a534:	f8d4 32d4 	ldr.w	r3, [r4, #724]	@ 0x2d4
 800a538:	33ae      	adds	r3, #174	@ 0xae
 800a53a:	4629      	mov	r1, r5
 800a53c:	f854 3023 	ldr.w	r3, [r4, r3, lsl #2]
 800a540:	689b      	ldr	r3, [r3, #8]
 800a542:	4620      	mov	r0, r4
}
 800a544:	b002      	add	sp, #8
 800a546:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
      ret = (USBD_StatusTypeDef)pdev->pClass[pdev->classId]->Setup(pdev, req);
 800a54a:	4718      	bx	r3
      switch (req->bRequest)
 800a54c:	784b      	ldrb	r3, [r1, #1]
 800a54e:	2b09      	cmp	r3, #9
 800a550:	d8e9      	bhi.n	800a526 <USBD_StdDevReq+0x16>
 800a552:	a201      	add	r2, pc, #4	@ (adr r2, 800a558 <USBD_StdDevReq+0x48>)
 800a554:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800a558:	0800a779 	.word	0x0800a779
 800a55c:	0800a7bd 	.word	0x0800a7bd
 800a560:	0800a527 	.word	0x0800a527
 800a564:	0800a7a1 	.word	0x0800a7a1
 800a568:	0800a527 	.word	0x0800a527
 800a56c:	0800a673 	.word	0x0800a673
 800a570:	0800a581 	.word	0x0800a581
 800a574:	0800a527 	.word	0x0800a527
 800a578:	0800a74d 	.word	0x0800a74d
 800a57c:	0800a6b5 	.word	0x0800a6b5
  uint16_t len = 0U;
 800a580:	2300      	movs	r3, #0
 800a582:	f8ad 3006 	strh.w	r3, [sp, #6]
  switch (req->wValue >> 8)
 800a586:	884b      	ldrh	r3, [r1, #2]
 800a588:	0a1a      	lsrs	r2, r3, #8
 800a58a:	3a01      	subs	r2, #1
 800a58c:	2a06      	cmp	r2, #6
 800a58e:	d8ca      	bhi.n	800a526 <USBD_StdDevReq+0x16>
 800a590:	a101      	add	r1, pc, #4	@ (adr r1, 800a598 <USBD_StdDevReq+0x88>)
 800a592:	f851 f022 	ldr.w	pc, [r1, r2, lsl #2]
 800a596:	bf00      	nop
 800a598:	0800a5b5 	.word	0x0800a5b5
 800a59c:	0800a5e7 	.word	0x0800a5e7
 800a5a0:	0800a601 	.word	0x0800a601
 800a5a4:	0800a527 	.word	0x0800a527
 800a5a8:	0800a527 	.word	0x0800a527
 800a5ac:	0800a645 	.word	0x0800a645
 800a5b0:	0800a65b 	.word	0x0800a65b
      pbuf = pdev->pDesc->GetDeviceDescriptor(pdev->dev_speed, &len);
 800a5b4:	f8d0 32b4 	ldr.w	r3, [r0, #692]	@ 0x2b4
 800a5b8:	681b      	ldr	r3, [r3, #0]
            pbuf = pdev->pDesc->GetInterfaceStrDescriptor(pdev->dev_speed, &len);
 800a5ba:	7c20      	ldrb	r0, [r4, #16]
 800a5bc:	f10d 0106 	add.w	r1, sp, #6
 800a5c0:	4798      	blx	r3
  if (req->wLength != 0U)
 800a5c2:	88ea      	ldrh	r2, [r5, #6]
 800a5c4:	2a00      	cmp	r2, #0
 800a5c6:	f000 80a4 	beq.w	800a712 <USBD_StdDevReq+0x202>
    if (len != 0U)
 800a5ca:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800a5ce:	2b00      	cmp	r3, #0
 800a5d0:	d0a9      	beq.n	800a526 <USBD_StdDevReq+0x16>
      len = MIN(len, req->wLength);
 800a5d2:	429a      	cmp	r2, r3
 800a5d4:	bf28      	it	cs
 800a5d6:	461a      	movcs	r2, r3
 800a5d8:	f8ad 2006 	strh.w	r2, [sp, #6]
      (void)USBD_CtlSendData(pdev, pbuf, len);
 800a5dc:	4601      	mov	r1, r0
      (void)USBD_CtlSendData(pdev, (uint8_t *)&pdev->dev_config_status, 2U);
 800a5de:	4620      	mov	r0, r4
 800a5e0:	f000 fafa 	bl	800abd8 <USBD_CtlSendData>
      break;
 800a5e4:	e7a2      	b.n	800a52c <USBD_StdDevReq+0x1c>
      if (pdev->dev_speed == USBD_SPEED_HIGH)
 800a5e6:	7c02      	ldrb	r2, [r0, #16]
          pbuf = (uint8_t *)pdev->pClass[0]->GetHSConfigDescriptor(&len);
 800a5e8:	f8d0 32b8 	ldr.w	r3, [r0, #696]	@ 0x2b8
      if (pdev->dev_speed == USBD_SPEED_HIGH)
 800a5ec:	b932      	cbnz	r2, 800a5fc <USBD_StdDevReq+0xec>
          pbuf = (uint8_t *)pdev->pClass[0]->GetHSConfigDescriptor(&len);
 800a5ee:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
          pbuf = (uint8_t *)pdev->pClass[0]->GetFSConfigDescriptor(&len);
 800a5f0:	f10d 0006 	add.w	r0, sp, #6
 800a5f4:	4798      	blx	r3
        pbuf[1] = USB_DESC_TYPE_CONFIGURATION;
 800a5f6:	2302      	movs	r3, #2
        pbuf[1] = USB_DESC_TYPE_OTHER_SPEED_CONFIGURATION;
 800a5f8:	7043      	strb	r3, [r0, #1]
  if (err != 0U)
 800a5fa:	e7e2      	b.n	800a5c2 <USBD_StdDevReq+0xb2>
          pbuf = (uint8_t *)pdev->pClass[0]->GetFSConfigDescriptor(&len);
 800a5fc:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800a5fe:	e7f7      	b.n	800a5f0 <USBD_StdDevReq+0xe0>
      switch ((uint8_t)(req->wValue))
 800a600:	b2db      	uxtb	r3, r3
 800a602:	2b05      	cmp	r3, #5
 800a604:	d88f      	bhi.n	800a526 <USBD_StdDevReq+0x16>
 800a606:	e8df f003 	tbb	[pc, r3]
 800a60a:	0903      	.short	0x0903
 800a60c:	1915110d 	.word	0x1915110d
          if (pdev->pDesc->GetLangIDStrDescriptor != NULL)
 800a610:	f8d0 32b4 	ldr.w	r3, [r0, #692]	@ 0x2b4
 800a614:	685b      	ldr	r3, [r3, #4]
          if (pdev->pDesc->GetInterfaceStrDescriptor != NULL)
 800a616:	2b00      	cmp	r3, #0
 800a618:	d1cf      	bne.n	800a5ba <USBD_StdDevReq+0xaa>
 800a61a:	e784      	b.n	800a526 <USBD_StdDevReq+0x16>
          if (pdev->pDesc->GetManufacturerStrDescriptor != NULL)
 800a61c:	f8d0 32b4 	ldr.w	r3, [r0, #692]	@ 0x2b4
 800a620:	689b      	ldr	r3, [r3, #8]
 800a622:	e7f8      	b.n	800a616 <USBD_StdDevReq+0x106>
          if (pdev->pDesc->GetProductStrDescriptor != NULL)
 800a624:	f8d0 32b4 	ldr.w	r3, [r0, #692]	@ 0x2b4
 800a628:	68db      	ldr	r3, [r3, #12]
 800a62a:	e7f4      	b.n	800a616 <USBD_StdDevReq+0x106>
          if (pdev->pDesc->GetSerialStrDescriptor != NULL)
 800a62c:	f8d0 32b4 	ldr.w	r3, [r0, #692]	@ 0x2b4
 800a630:	691b      	ldr	r3, [r3, #16]
 800a632:	e7f0      	b.n	800a616 <USBD_StdDevReq+0x106>
          if (pdev->pDesc->GetConfigurationStrDescriptor != NULL)
 800a634:	f8d0 32b4 	ldr.w	r3, [r0, #692]	@ 0x2b4
 800a638:	695b      	ldr	r3, [r3, #20]
 800a63a:	e7ec      	b.n	800a616 <USBD_StdDevReq+0x106>
          if (pdev->pDesc->GetInterfaceStrDescriptor != NULL)
 800a63c:	f8d0 32b4 	ldr.w	r3, [r0, #692]	@ 0x2b4
 800a640:	699b      	ldr	r3, [r3, #24]
 800a642:	e7e8      	b.n	800a616 <USBD_StdDevReq+0x106>
      if (pdev->dev_speed == USBD_SPEED_HIGH)
 800a644:	7c03      	ldrb	r3, [r0, #16]
 800a646:	2b00      	cmp	r3, #0
 800a648:	f47f af6d 	bne.w	800a526 <USBD_StdDevReq+0x16>
          pbuf = (uint8_t *)pdev->pClass[0]->GetDeviceQualifierDescriptor(&len);
 800a64c:	f8d0 32b8 	ldr.w	r3, [r0, #696]	@ 0x2b8
 800a650:	f10d 0006 	add.w	r0, sp, #6
 800a654:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800a656:	4798      	blx	r3
  if (err != 0U)
 800a658:	e7b3      	b.n	800a5c2 <USBD_StdDevReq+0xb2>
      if (pdev->dev_speed == USBD_SPEED_HIGH)
 800a65a:	7c03      	ldrb	r3, [r0, #16]
 800a65c:	2b00      	cmp	r3, #0
 800a65e:	f47f af62 	bne.w	800a526 <USBD_StdDevReq+0x16>
          pbuf = (uint8_t *)pdev->pClass[0]->GetOtherSpeedConfigDescriptor(&len);
 800a662:	f8d0 32b8 	ldr.w	r3, [r0, #696]	@ 0x2b8
 800a666:	f10d 0006 	add.w	r0, sp, #6
 800a66a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800a66c:	4798      	blx	r3
        pbuf[1] = USB_DESC_TYPE_OTHER_SPEED_CONFIGURATION;
 800a66e:	2307      	movs	r3, #7
 800a670:	e7c2      	b.n	800a5f8 <USBD_StdDevReq+0xe8>
  if ((req->wIndex == 0U) && (req->wLength == 0U) && (req->wValue < 128U))
 800a672:	888b      	ldrh	r3, [r1, #4]
 800a674:	2b00      	cmp	r3, #0
 800a676:	f47f af56 	bne.w	800a526 <USBD_StdDevReq+0x16>
 800a67a:	88cb      	ldrh	r3, [r1, #6]
 800a67c:	2b00      	cmp	r3, #0
 800a67e:	f47f af52 	bne.w	800a526 <USBD_StdDevReq+0x16>
 800a682:	884d      	ldrh	r5, [r1, #2]
 800a684:	2d7f      	cmp	r5, #127	@ 0x7f
 800a686:	f63f af4e 	bhi.w	800a526 <USBD_StdDevReq+0x16>
    if (pdev->dev_state == USBD_STATE_CONFIGURED)
 800a68a:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
 800a68e:	2b03      	cmp	r3, #3
 800a690:	f43f af49 	beq.w	800a526 <USBD_StdDevReq+0x16>
    dev_addr = (uint8_t)(req->wValue) & 0x7FU;
 800a694:	b2ed      	uxtb	r5, r5
      pdev->dev_address = dev_addr;
 800a696:	f880 529e 	strb.w	r5, [r0, #670]	@ 0x29e
      (void)USBD_LL_SetUSBAddress(pdev, dev_addr);
 800a69a:	4629      	mov	r1, r5
 800a69c:	f7f7 fe75 	bl	800238a <USBD_LL_SetUSBAddress>
      (void)USBD_CtlSendStatus(pdev);
 800a6a0:	4620      	mov	r0, r4
 800a6a2:	f000 fab6 	bl	800ac12 <USBD_CtlSendStatus>
      if (dev_addr != 0U)
 800a6a6:	b11d      	cbz	r5, 800a6b0 <USBD_StdDevReq+0x1a0>
        pdev->dev_state = USBD_STATE_ADDRESSED;
 800a6a8:	2302      	movs	r3, #2
          pdev->dev_state = USBD_STATE_CONFIGURED;
 800a6aa:	f884 329c 	strb.w	r3, [r4, #668]	@ 0x29c
 800a6ae:	e73d      	b.n	800a52c <USBD_StdDevReq+0x1c>
        pdev->dev_state = USBD_STATE_DEFAULT;
 800a6b0:	2301      	movs	r3, #1
 800a6b2:	e7fa      	b.n	800a6aa <USBD_StdDevReq+0x19a>
  cfgidx = (uint8_t)(req->wValue);
 800a6b4:	7889      	ldrb	r1, [r1, #2]
 800a6b6:	4d47      	ldr	r5, [pc, #284]	@ (800a7d4 <USBD_StdDevReq+0x2c4>)
  if (cfgidx > USBD_MAX_NUM_CONFIGURATION)
 800a6b8:	2901      	cmp	r1, #1
  cfgidx = (uint8_t)(req->wValue);
 800a6ba:	7029      	strb	r1, [r5, #0]
  if (cfgidx > USBD_MAX_NUM_CONFIGURATION)
 800a6bc:	d903      	bls.n	800a6c6 <USBD_StdDevReq+0x1b6>
    USBD_CtlError(pdev, req);
 800a6be:	f7ff ff1b 	bl	800a4f8 <USBD_CtlError.constprop.0>
    return USBD_FAIL;
 800a6c2:	2503      	movs	r5, #3
 800a6c4:	e733      	b.n	800a52e <USBD_StdDevReq+0x1e>
  switch (pdev->dev_state)
 800a6c6:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
 800a6ca:	2b02      	cmp	r3, #2
 800a6cc:	b2de      	uxtb	r6, r3
 800a6ce:	d008      	beq.n	800a6e2 <USBD_StdDevReq+0x1d2>
 800a6d0:	2e03      	cmp	r6, #3
 800a6d2:	d017      	beq.n	800a704 <USBD_StdDevReq+0x1f4>
      USBD_CtlError(pdev, req);
 800a6d4:	f7ff ff10 	bl	800a4f8 <USBD_CtlError.constprop.0>
      (void)USBD_ClrClassConfig(pdev, cfgidx);
 800a6d8:	7829      	ldrb	r1, [r5, #0]
 800a6da:	4620      	mov	r0, r4
 800a6dc:	f7ff fda5 	bl	800a22a <USBD_ClrClassConfig>
      break;
 800a6e0:	e7ef      	b.n	800a6c2 <USBD_StdDevReq+0x1b2>
      if (cfgidx != 0U)
 800a6e2:	b1b1      	cbz	r1, 800a712 <USBD_StdDevReq+0x202>
        pdev->dev_config = cfgidx;
 800a6e4:	2101      	movs	r1, #1
 800a6e6:	6041      	str	r1, [r0, #4]
        ret = USBD_SetClassConfig(pdev, cfgidx);
 800a6e8:	f7ff fd98 	bl	800a21c <USBD_SetClassConfig>
        if (ret != USBD_OK)
 800a6ec:	4605      	mov	r5, r0
          USBD_CtlError(pdev, req);
 800a6ee:	4620      	mov	r0, r4
        if (ret != USBD_OK)
 800a6f0:	b125      	cbz	r5, 800a6fc <USBD_StdDevReq+0x1ec>
          USBD_CtlError(pdev, req);
 800a6f2:	f7ff ff01 	bl	800a4f8 <USBD_CtlError.constprop.0>
          pdev->dev_state = USBD_STATE_ADDRESSED;
 800a6f6:	f884 629c 	strb.w	r6, [r4, #668]	@ 0x29c
 800a6fa:	e718      	b.n	800a52e <USBD_StdDevReq+0x1e>
          (void)USBD_CtlSendStatus(pdev);
 800a6fc:	f000 fa89 	bl	800ac12 <USBD_CtlSendStatus>
          pdev->dev_state = USBD_STATE_CONFIGURED;
 800a700:	2303      	movs	r3, #3
 800a702:	e7d2      	b.n	800a6aa <USBD_StdDevReq+0x19a>
      if (cfgidx == 0U)
 800a704:	b949      	cbnz	r1, 800a71a <USBD_StdDevReq+0x20a>
        pdev->dev_state = USBD_STATE_ADDRESSED;
 800a706:	2302      	movs	r3, #2
 800a708:	f880 329c 	strb.w	r3, [r0, #668]	@ 0x29c
        pdev->dev_config = cfgidx;
 800a70c:	6041      	str	r1, [r0, #4]
        (void)USBD_ClrClassConfig(pdev, cfgidx);
 800a70e:	f7ff fd8c 	bl	800a22a <USBD_ClrClassConfig>
        (void)USBD_CtlSendStatus(pdev);
 800a712:	4620      	mov	r0, r4
 800a714:	f000 fa7d 	bl	800ac12 <USBD_CtlSendStatus>
 800a718:	e708      	b.n	800a52c <USBD_StdDevReq+0x1c>
      else if (cfgidx != pdev->dev_config)
 800a71a:	6841      	ldr	r1, [r0, #4]
 800a71c:	2901      	cmp	r1, #1
 800a71e:	d0f8      	beq.n	800a712 <USBD_StdDevReq+0x202>
        (void)USBD_ClrClassConfig(pdev, (uint8_t)pdev->dev_config);
 800a720:	b2c9      	uxtb	r1, r1
 800a722:	f7ff fd82 	bl	800a22a <USBD_ClrClassConfig>
        pdev->dev_config = cfgidx;
 800a726:	7829      	ldrb	r1, [r5, #0]
 800a728:	6061      	str	r1, [r4, #4]
        ret = USBD_SetClassConfig(pdev, cfgidx);
 800a72a:	4620      	mov	r0, r4
 800a72c:	f7ff fd76 	bl	800a21c <USBD_SetClassConfig>
        if (ret != USBD_OK)
 800a730:	4605      	mov	r5, r0
 800a732:	2800      	cmp	r0, #0
 800a734:	d0ed      	beq.n	800a712 <USBD_StdDevReq+0x202>
          USBD_CtlError(pdev, req);
 800a736:	4620      	mov	r0, r4
 800a738:	f7ff fede 	bl	800a4f8 <USBD_CtlError.constprop.0>
          (void)USBD_ClrClassConfig(pdev, (uint8_t)pdev->dev_config);
 800a73c:	7921      	ldrb	r1, [r4, #4]
 800a73e:	4620      	mov	r0, r4
 800a740:	f7ff fd73 	bl	800a22a <USBD_ClrClassConfig>
          pdev->dev_state = USBD_STATE_ADDRESSED;
 800a744:	2302      	movs	r3, #2
 800a746:	f884 329c 	strb.w	r3, [r4, #668]	@ 0x29c
 800a74a:	e6f0      	b.n	800a52e <USBD_StdDevReq+0x1e>
  if (req->wLength != 1U)
 800a74c:	88ca      	ldrh	r2, [r1, #6]
 800a74e:	2a01      	cmp	r2, #1
 800a750:	f47f aee9 	bne.w	800a526 <USBD_StdDevReq+0x16>
    switch (pdev->dev_state)
 800a754:	f890 129c 	ldrb.w	r1, [r0, #668]	@ 0x29c
 800a758:	2902      	cmp	r1, #2
 800a75a:	b2cb      	uxtb	r3, r1
 800a75c:	d807      	bhi.n	800a76e <USBD_StdDevReq+0x25e>
 800a75e:	2b00      	cmp	r3, #0
 800a760:	f43f aee1 	beq.w	800a526 <USBD_StdDevReq+0x16>
        pdev->dev_default_config = 0U;
 800a764:	4601      	mov	r1, r0
 800a766:	2300      	movs	r3, #0
 800a768:	f841 3f08 	str.w	r3, [r1, #8]!
        (void)USBD_CtlSendData(pdev, (uint8_t *)&pdev->dev_default_config, 1U);
 800a76c:	e737      	b.n	800a5de <USBD_StdDevReq+0xce>
    switch (pdev->dev_state)
 800a76e:	2b03      	cmp	r3, #3
 800a770:	f47f aed9 	bne.w	800a526 <USBD_StdDevReq+0x16>
        (void)USBD_CtlSendData(pdev, (uint8_t *)&pdev->dev_config, 1U);
 800a774:	1d01      	adds	r1, r0, #4
 800a776:	e732      	b.n	800a5de <USBD_StdDevReq+0xce>
  switch (pdev->dev_state)
 800a778:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
 800a77c:	3b01      	subs	r3, #1
 800a77e:	2b02      	cmp	r3, #2
 800a780:	f63f aed1 	bhi.w	800a526 <USBD_StdDevReq+0x16>
      if (req->wLength != 0x2U)
 800a784:	88ca      	ldrh	r2, [r1, #6]
 800a786:	2a02      	cmp	r2, #2
 800a788:	f47f aecd 	bne.w	800a526 <USBD_StdDevReq+0x16>
      if (pdev->dev_remote_wakeup != 0U)
 800a78c:	f8d0 32a4 	ldr.w	r3, [r0, #676]	@ 0x2a4
 800a790:	4601      	mov	r1, r0
        pdev->dev_config_status |= USB_CONFIG_REMOTE_WAKEUP;
 800a792:	2b00      	cmp	r3, #0
 800a794:	bf0c      	ite	eq
 800a796:	2301      	moveq	r3, #1
 800a798:	2303      	movne	r3, #3
 800a79a:	f841 3f0c 	str.w	r3, [r1, #12]!
 800a79e:	e71e      	b.n	800a5de <USBD_StdDevReq+0xce>
  if (req->wValue == USB_FEATURE_REMOTE_WAKEUP)
 800a7a0:	884b      	ldrh	r3, [r1, #2]
 800a7a2:	2b01      	cmp	r3, #1
 800a7a4:	d102      	bne.n	800a7ac <USBD_StdDevReq+0x29c>
        pdev->dev_remote_wakeup = 0U;
 800a7a6:	f8c4 32a4 	str.w	r3, [r4, #676]	@ 0x2a4
 800a7aa:	e7b2      	b.n	800a712 <USBD_StdDevReq+0x202>
  else if (req->wValue == USB_FEATURE_TEST_MODE)
 800a7ac:	2b02      	cmp	r3, #2
 800a7ae:	f47f aeba 	bne.w	800a526 <USBD_StdDevReq+0x16>
    pdev->dev_test_mode = (uint8_t)(req->wIndex >> 8);
 800a7b2:	888b      	ldrh	r3, [r1, #4]
 800a7b4:	0a1b      	lsrs	r3, r3, #8
 800a7b6:	f880 32a0 	strb.w	r3, [r0, #672]	@ 0x2a0
    (void)USBD_CtlSendStatus(pdev);
 800a7ba:	e7aa      	b.n	800a712 <USBD_StdDevReq+0x202>
  switch (pdev->dev_state)
 800a7bc:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
 800a7c0:	3b01      	subs	r3, #1
 800a7c2:	2b02      	cmp	r3, #2
 800a7c4:	f63f aeaf 	bhi.w	800a526 <USBD_StdDevReq+0x16>
      if (req->wValue == USB_FEATURE_REMOTE_WAKEUP)
 800a7c8:	884b      	ldrh	r3, [r1, #2]
 800a7ca:	2b01      	cmp	r3, #1
 800a7cc:	f47f aeae 	bne.w	800a52c <USBD_StdDevReq+0x1c>
        pdev->dev_remote_wakeup = 0U;
 800a7d0:	2300      	movs	r3, #0
 800a7d2:	e7e8      	b.n	800a7a6 <USBD_StdDevReq+0x296>
 800a7d4:	200133c4 	.word	0x200133c4

0800a7d8 <USBD_StdItfReq>:
{
 800a7d8:	b570      	push	{r4, r5, r6, lr}
  switch (req->bmRequest & USB_REQ_TYPE_MASK)
 800a7da:	780b      	ldrb	r3, [r1, #0]
 800a7dc:	f003 0260 	and.w	r2, r3, #96	@ 0x60
 800a7e0:	065b      	lsls	r3, r3, #25
{
 800a7e2:	4604      	mov	r4, r0
 800a7e4:	460e      	mov	r6, r1
  switch (req->bmRequest & USB_REQ_TYPE_MASK)
 800a7e6:	d501      	bpl.n	800a7ec <USBD_StdItfReq+0x14>
 800a7e8:	2a40      	cmp	r2, #64	@ 0x40
 800a7ea:	d11f      	bne.n	800a82c <USBD_StdItfReq+0x54>
      switch (pdev->dev_state)
 800a7ec:	f894 329c 	ldrb.w	r3, [r4, #668]	@ 0x29c
 800a7f0:	3b01      	subs	r3, #1
 800a7f2:	2b02      	cmp	r3, #2
 800a7f4:	d81a      	bhi.n	800a82c <USBD_StdItfReq+0x54>
          if (LOBYTE(req->wIndex) <= USBD_MAX_NUM_INTERFACES)
 800a7f6:	7931      	ldrb	r1, [r6, #4]
 800a7f8:	2901      	cmp	r1, #1
            idx = USBD_CoreFindIF(pdev, LOBYTE(req->wIndex));
 800a7fa:	4620      	mov	r0, r4
          if (LOBYTE(req->wIndex) <= USBD_MAX_NUM_INTERFACES)
 800a7fc:	d817      	bhi.n	800a82e <USBD_StdItfReq+0x56>
            idx = USBD_CoreFindIF(pdev, LOBYTE(req->wIndex));
 800a7fe:	f7ff fe65 	bl	800a4cc <USBD_CoreFindIF>
            if (((uint8_t)idx != 0xFFU) && (idx < USBD_MAX_SUPPORTED_CLASS))
 800a802:	b988      	cbnz	r0, 800a828 <USBD_StdItfReq+0x50>
              if (pdev->pClass[idx]->Setup != NULL)
 800a804:	f8d4 32b8 	ldr.w	r3, [r4, #696]	@ 0x2b8
 800a808:	689b      	ldr	r3, [r3, #8]
 800a80a:	b16b      	cbz	r3, 800a828 <USBD_StdItfReq+0x50>
                pdev->classId = idx;
 800a80c:	f8c4 02d4 	str.w	r0, [r4, #724]	@ 0x2d4
                ret = (USBD_StatusTypeDef)(pdev->pClass[idx]->Setup(pdev, req));
 800a810:	4631      	mov	r1, r6
 800a812:	4620      	mov	r0, r4
 800a814:	4798      	blx	r3
 800a816:	4605      	mov	r5, r0
            if ((req->wLength == 0U) && (ret == USBD_OK))
 800a818:	88f3      	ldrh	r3, [r6, #6]
 800a81a:	b91b      	cbnz	r3, 800a824 <USBD_StdItfReq+0x4c>
 800a81c:	b915      	cbnz	r5, 800a824 <USBD_StdItfReq+0x4c>
              (void)USBD_CtlSendStatus(pdev);
 800a81e:	4620      	mov	r0, r4
 800a820:	f000 f9f7 	bl	800ac12 <USBD_CtlSendStatus>
}
 800a824:	4628      	mov	r0, r5
 800a826:	bd70      	pop	{r4, r5, r6, pc}
                ret = USBD_FAIL;
 800a828:	2503      	movs	r5, #3
 800a82a:	e7f5      	b.n	800a818 <USBD_StdItfReq+0x40>
          USBD_CtlError(pdev, req);
 800a82c:	4620      	mov	r0, r4
            USBD_CtlError(pdev, req);
 800a82e:	f7ff fe63 	bl	800a4f8 <USBD_CtlError.constprop.0>
  USBD_StatusTypeDef ret = USBD_OK;
 800a832:	2500      	movs	r5, #0
 800a834:	e7f6      	b.n	800a824 <USBD_StdItfReq+0x4c>

0800a836 <USBD_StdEPReq>:
{
 800a836:	b570      	push	{r4, r5, r6, lr}
 800a838:	780b      	ldrb	r3, [r1, #0]
  ep_addr = LOBYTE(req->wIndex);
 800a83a:	888a      	ldrh	r2, [r1, #4]
 800a83c:	790d      	ldrb	r5, [r1, #4]
 800a83e:	f003 0360 	and.w	r3, r3, #96	@ 0x60
  switch (req->bmRequest & USB_REQ_TYPE_MASK)
 800a842:	2b20      	cmp	r3, #32
{
 800a844:	4604      	mov	r4, r0
 800a846:	460e      	mov	r6, r1
  switch (req->bmRequest & USB_REQ_TYPE_MASK)
 800a848:	d058      	beq.n	800a8fc <USBD_StdEPReq+0xc6>
 800a84a:	2b40      	cmp	r3, #64	@ 0x40
 800a84c:	d056      	beq.n	800a8fc <USBD_StdEPReq+0xc6>
 800a84e:	b11b      	cbz	r3, 800a858 <USBD_StdEPReq+0x22>
              USBD_CtlError(pdev, req);
 800a850:	4620      	mov	r0, r4
 800a852:	f7ff fe51 	bl	800a4f8 <USBD_CtlError.constprop.0>
              break;
 800a856:	e03d      	b.n	800a8d4 <USBD_StdEPReq+0x9e>
      switch (req->bRequest)
 800a858:	784b      	ldrb	r3, [r1, #1]
 800a85a:	2b01      	cmp	r3, #1
 800a85c:	d03c      	beq.n	800a8d8 <USBD_StdEPReq+0xa2>
 800a85e:	2b03      	cmp	r3, #3
 800a860:	d025      	beq.n	800a8ae <USBD_StdEPReq+0x78>
 800a862:	2b00      	cmp	r3, #0
 800a864:	d1f4      	bne.n	800a850 <USBD_StdEPReq+0x1a>
          switch (pdev->dev_state)
 800a866:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
 800a86a:	2b02      	cmp	r3, #2
 800a86c:	b2d9      	uxtb	r1, r3
 800a86e:	d061      	beq.n	800a934 <USBD_StdEPReq+0xfe>
 800a870:	2903      	cmp	r1, #3
 800a872:	d1ed      	bne.n	800a850 <USBD_StdEPReq+0x1a>
                if (pdev->ep_in[ep_addr & 0xFU].is_used == 0U)
 800a874:	f005 030f 	and.w	r3, r5, #15
              if ((ep_addr & 0x80U) == 0x80U)
 800a878:	f012 0f80 	tst.w	r2, #128	@ 0x80
 800a87c:	f04f 0214 	mov.w	r2, #20
                if (pdev->ep_in[ep_addr & 0xFU].is_used == 0U)
 800a880:	fb02 0303 	mla	r3, r2, r3, r0
              if ((ep_addr & 0x80U) == 0x80U)
 800a884:	d065      	beq.n	800a952 <USBD_StdEPReq+0x11c>
                if (pdev->ep_in[ep_addr & 0xFU].is_used == 0U)
 800a886:	8c9b      	ldrh	r3, [r3, #36]	@ 0x24
 800a888:	2b00      	cmp	r3, #0
 800a88a:	d0e1      	beq.n	800a850 <USBD_StdEPReq+0x1a>
              pep = ((ep_addr & 0x80U) == 0x80U) ? &pdev->ep_in[ep_addr & 0x7FU] : \
 800a88c:	f005 067f 	and.w	r6, r5, #127	@ 0x7f
 800a890:	3601      	adds	r6, #1
 800a892:	eb06 0686 	add.w	r6, r6, r6, lsl #2
              if ((ep_addr == 0x00U) || (ep_addr == 0x80U))
 800a896:	2d80      	cmp	r5, #128	@ 0x80
              pep = ((ep_addr & 0x80U) == 0x80U) ? &pdev->ep_in[ep_addr & 0x7FU] : \
 800a898:	eb00 0686 	add.w	r6, r0, r6, lsl #2
              if ((ep_addr == 0x00U) || (ep_addr == 0x80U))
 800a89c:	d065      	beq.n	800a96a <USBD_StdEPReq+0x134>
              else if (USBD_LL_IsStallEP(pdev, ep_addr) != 0U)
 800a89e:	4629      	mov	r1, r5
 800a8a0:	4620      	mov	r0, r4
 800a8a2:	f7f7 fd25 	bl	80022f0 <USBD_LL_IsStallEP>
 800a8a6:	2800      	cmp	r0, #0
 800a8a8:	d064      	beq.n	800a974 <USBD_StdEPReq+0x13e>
                pep->status = 0x0001U;
 800a8aa:	2301      	movs	r3, #1
 800a8ac:	e05e      	b.n	800a96c <USBD_StdEPReq+0x136>
          switch (pdev->dev_state)
 800a8ae:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
 800a8b2:	2b02      	cmp	r3, #2
 800a8b4:	b2da      	uxtb	r2, r3
 800a8b6:	d033      	beq.n	800a920 <USBD_StdEPReq+0xea>
 800a8b8:	2a03      	cmp	r2, #3
 800a8ba:	d1c9      	bne.n	800a850 <USBD_StdEPReq+0x1a>
              if (req->wValue == USB_FEATURE_EP_HALT)
 800a8bc:	884b      	ldrh	r3, [r1, #2]
 800a8be:	b933      	cbnz	r3, 800a8ce <USBD_StdEPReq+0x98>
                if ((ep_addr != 0x00U) && (ep_addr != 0x80U) && (req->wLength == 0x00U))
 800a8c0:	0669      	lsls	r1, r5, #25
 800a8c2:	d004      	beq.n	800a8ce <USBD_StdEPReq+0x98>
 800a8c4:	88f3      	ldrh	r3, [r6, #6]
 800a8c6:	b913      	cbnz	r3, 800a8ce <USBD_StdEPReq+0x98>
                  (void)USBD_LL_StallEP(pdev, ep_addr);
 800a8c8:	4629      	mov	r1, r5
 800a8ca:	f7f7 fd4c 	bl	8002366 <USBD_LL_StallEP>
              (void)USBD_CtlSendStatus(pdev);
 800a8ce:	4620      	mov	r0, r4
 800a8d0:	f000 f99f 	bl	800ac12 <USBD_CtlSendStatus>
}
 800a8d4:	2000      	movs	r0, #0
 800a8d6:	bd70      	pop	{r4, r5, r6, pc}
          switch (pdev->dev_state)
 800a8d8:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
 800a8dc:	2b02      	cmp	r3, #2
 800a8de:	b2da      	uxtb	r2, r3
 800a8e0:	d01e      	beq.n	800a920 <USBD_StdEPReq+0xea>
 800a8e2:	2a03      	cmp	r2, #3
 800a8e4:	d1b4      	bne.n	800a850 <USBD_StdEPReq+0x1a>
              if (req->wValue == USB_FEATURE_EP_HALT)
 800a8e6:	884b      	ldrh	r3, [r1, #2]
 800a8e8:	2b00      	cmp	r3, #0
 800a8ea:	d1f3      	bne.n	800a8d4 <USBD_StdEPReq+0x9e>
                if ((ep_addr & 0x7FU) != 0x00U)
 800a8ec:	066b      	lsls	r3, r5, #25
 800a8ee:	d002      	beq.n	800a8f6 <USBD_StdEPReq+0xc0>
                  (void)USBD_LL_ClearStallEP(pdev, ep_addr);
 800a8f0:	4629      	mov	r1, r5
 800a8f2:	f7f7 fd41 	bl	8002378 <USBD_LL_ClearStallEP>
                (void)USBD_CtlSendStatus(pdev);
 800a8f6:	4620      	mov	r0, r4
 800a8f8:	f000 f98b 	bl	800ac12 <USBD_CtlSendStatus>
                idx = USBD_CoreFindEP(pdev, ep_addr);
 800a8fc:	4629      	mov	r1, r5
 800a8fe:	4620      	mov	r0, r4
 800a900:	f7ff fde6 	bl	800a4d0 <USBD_CoreFindEP>
                if (((uint8_t)idx != 0xFFU) && (idx < USBD_MAX_SUPPORTED_CLASS))
 800a904:	2800      	cmp	r0, #0
 800a906:	d1e5      	bne.n	800a8d4 <USBD_StdEPReq+0x9e>
                  if (pdev->pClass[idx]->Setup != NULL)
 800a908:	f8d4 32b8 	ldr.w	r3, [r4, #696]	@ 0x2b8
                  pdev->classId = idx;
 800a90c:	f8c4 02d4 	str.w	r0, [r4, #724]	@ 0x2d4
                  if (pdev->pClass[idx]->Setup != NULL)
 800a910:	689b      	ldr	r3, [r3, #8]
 800a912:	2b00      	cmp	r3, #0
 800a914:	d0de      	beq.n	800a8d4 <USBD_StdEPReq+0x9e>
                    ret = (USBD_StatusTypeDef)(pdev->pClass[idx]->Setup(pdev, req));
 800a916:	4631      	mov	r1, r6
 800a918:	4620      	mov	r0, r4
}
 800a91a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
                    ret = (USBD_StatusTypeDef)(pdev->pClass[idx]->Setup(pdev, req));
 800a91e:	4718      	bx	r3
              if ((ep_addr != 0x00U) && (ep_addr != 0x80U))
 800a920:	066a      	lsls	r2, r5, #25
 800a922:	d095      	beq.n	800a850 <USBD_StdEPReq+0x1a>
                (void)USBD_LL_StallEP(pdev, ep_addr);
 800a924:	4629      	mov	r1, r5
 800a926:	f7f7 fd1e 	bl	8002366 <USBD_LL_StallEP>
                (void)USBD_LL_StallEP(pdev, 0x80U);
 800a92a:	2180      	movs	r1, #128	@ 0x80
 800a92c:	4620      	mov	r0, r4
 800a92e:	f7f7 fd1a 	bl	8002366 <USBD_LL_StallEP>
 800a932:	e7cf      	b.n	800a8d4 <USBD_StdEPReq+0x9e>
              if ((ep_addr != 0x00U) && (ep_addr != 0x80U))
 800a934:	0669      	lsls	r1, r5, #25
 800a936:	d18b      	bne.n	800a850 <USBD_StdEPReq+0x1a>
              pep = ((ep_addr & 0x80U) == 0x80U) ? &pdev->ep_in[ep_addr & 0x7FU] : \
 800a938:	0613      	lsls	r3, r2, #24
 800a93a:	bf4c      	ite	mi
 800a93c:	f100 0114 	addmi.w	r1, r0, #20
 800a940:	f500 71aa 	addpl.w	r1, r0, #340	@ 0x154
              pep->status = 0x0000U;
 800a944:	2300      	movs	r3, #0
 800a946:	600b      	str	r3, [r1, #0]
              (void)USBD_CtlSendData(pdev, (uint8_t *)&pep->status, 2U);
 800a948:	2202      	movs	r2, #2
              (void)USBD_CtlSendData(pdev, (uint8_t *)&pep->status, 2U);
 800a94a:	4620      	mov	r0, r4
 800a94c:	f000 f944 	bl	800abd8 <USBD_CtlSendData>
              break;
 800a950:	e7c0      	b.n	800a8d4 <USBD_StdEPReq+0x9e>
                if (pdev->ep_out[ep_addr & 0xFU].is_used == 0U)
 800a952:	f8b3 3164 	ldrh.w	r3, [r3, #356]	@ 0x164
 800a956:	2b00      	cmp	r3, #0
 800a958:	f43f af7a 	beq.w	800a850 <USBD_StdEPReq+0x1a>
              pep = ((ep_addr & 0x80U) == 0x80U) ? &pdev->ep_in[ep_addr & 0x7FU] : \
 800a95c:	2614      	movs	r6, #20
 800a95e:	fb06 0605 	mla	r6, r6, r5, r0
 800a962:	f506 76aa 	add.w	r6, r6, #340	@ 0x154
              if ((ep_addr == 0x00U) || (ep_addr == 0x80U))
 800a966:	2d00      	cmp	r5, #0
 800a968:	d199      	bne.n	800a89e <USBD_StdEPReq+0x68>
                pep->status = 0x0000U;
 800a96a:	2300      	movs	r3, #0
                pep->status = 0x0001U;
 800a96c:	6033      	str	r3, [r6, #0]
              (void)USBD_CtlSendData(pdev, (uint8_t *)&pep->status, 2U);
 800a96e:	2202      	movs	r2, #2
 800a970:	4631      	mov	r1, r6
 800a972:	e7ea      	b.n	800a94a <USBD_StdEPReq+0x114>
                pep->status = 0x0000U;
 800a974:	6030      	str	r0, [r6, #0]
 800a976:	e7fa      	b.n	800a96e <USBD_StdEPReq+0x138>

0800a978 <USBD_ParseSetupRequest>:
  req->bmRequest = *(uint8_t *)(pbuff);
 800a978:	780b      	ldrb	r3, [r1, #0]
 800a97a:	7003      	strb	r3, [r0, #0]
  req->bRequest = *(uint8_t *)(pbuff);
 800a97c:	784b      	ldrb	r3, [r1, #1]
 800a97e:	7043      	strb	r3, [r0, #1]
  req->wValue = SWAPBYTE(pbuff);
 800a980:	884b      	ldrh	r3, [r1, #2]
 800a982:	8043      	strh	r3, [r0, #2]
  req->wIndex = SWAPBYTE(pbuff);
 800a984:	888b      	ldrh	r3, [r1, #4]
 800a986:	8083      	strh	r3, [r0, #4]
  req->wLength = SWAPBYTE(pbuff);
 800a988:	88cb      	ldrh	r3, [r1, #6]
 800a98a:	80c3      	strh	r3, [r0, #6]
}
 800a98c:	4770      	bx	lr

0800a98e <USBD_CtlError>:
{
 800a98e:	b510      	push	{r4, lr}
  (void)USBD_LL_StallEP(pdev, 0x80U);
 800a990:	2180      	movs	r1, #128	@ 0x80
{
 800a992:	4604      	mov	r4, r0
  (void)USBD_LL_StallEP(pdev, 0x80U);
 800a994:	f7f7 fce7 	bl	8002366 <USBD_LL_StallEP>
  (void)USBD_LL_StallEP(pdev, 0U);
 800a998:	4620      	mov	r0, r4
 800a99a:	2100      	movs	r1, #0
}
 800a99c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  (void)USBD_LL_StallEP(pdev, 0U);
 800a9a0:	f7f7 bce1 	b.w	8002366 <USBD_LL_StallEP>

0800a9a4 <USBD_GetString>:
  * @param  unicode : Formatted string buffer (unicode)
  * @param  len : descriptor length
  * @retval None
  */
void USBD_GetString(uint8_t *desc, uint8_t *unicode, uint16_t *len)
{
 800a9a4:	b570      	push	{r4, r5, r6, lr}
 800a9a6:	460d      	mov	r5, r1
 800a9a8:	4616      	mov	r6, r2
  uint8_t idx = 0U;
  uint8_t *pdesc;

  if (desc == NULL)
 800a9aa:	4604      	mov	r4, r0
 800a9ac:	b170      	cbz	r0, 800a9cc <USBD_GetString+0x28>
static uint8_t USBD_GetLen(uint8_t *buf)
{
  uint8_t  len = 0U;
  uint8_t *pbuff = buf;

  while (*pbuff != (uint8_t)'\0')
 800a9ae:	f7f5 fc1f 	bl	80001f0 <strlen>
  *len = MIN(USBD_MAX_STR_DESC_SIZ, ((uint16_t)USBD_GetLen(pdesc) * 2U) + 2U);
 800a9b2:	b2c3      	uxtb	r3, r0
 800a9b4:	3301      	adds	r3, #1
 800a9b6:	005b      	lsls	r3, r3, #1
 800a9b8:	8033      	strh	r3, [r6, #0]
  unicode[idx] = *(uint8_t *)len;
 800a9ba:	702b      	strb	r3, [r5, #0]
  unicode[idx] = USB_DESC_TYPE_STRING;
 800a9bc:	2303      	movs	r3, #3
 800a9be:	706b      	strb	r3, [r5, #1]
  while (*pdesc != (uint8_t)'\0')
 800a9c0:	3c01      	subs	r4, #1
  idx++;
 800a9c2:	2302      	movs	r3, #2
    unicode[idx] = 0U;
 800a9c4:	2100      	movs	r1, #0
  while (*pdesc != (uint8_t)'\0')
 800a9c6:	f814 2f01 	ldrb.w	r2, [r4, #1]!
 800a9ca:	b902      	cbnz	r2, 800a9ce <USBD_GetString+0x2a>
}
 800a9cc:	bd70      	pop	{r4, r5, r6, pc}
    unicode[idx] = *pdesc;
 800a9ce:	54ea      	strb	r2, [r5, r3]
    idx++;
 800a9d0:	1c5a      	adds	r2, r3, #1
    unicode[idx] = 0U;
 800a9d2:	b2d2      	uxtb	r2, r2
    idx++;
 800a9d4:	3302      	adds	r3, #2
    unicode[idx] = 0U;
 800a9d6:	54a9      	strb	r1, [r5, r2]
    idx++;
 800a9d8:	b2db      	uxtb	r3, r3
 800a9da:	e7f4      	b.n	800a9c6 <USBD_GetString+0x22>

0800a9dc <USBD_HID_DataIn>:
static uint8_t USBD_HID_DataIn(USBD_HandleTypeDef *pdev, uint8_t epnum)
{
  UNUSED(epnum);
  /* Ensure that the FIFO is empty before a new transfer, this condition could
  be caused by  a new transfer before the end of the previous transfer */
  ((USBD_HID_HandleTypeDef *)pdev->pClassDataCmsit[pdev->classId])->state = USBD_HID_IDLE;
 800a9dc:	f8d0 32d4 	ldr.w	r3, [r0, #724]	@ 0x2d4
 800a9e0:	33b0      	adds	r3, #176	@ 0xb0
 800a9e2:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 800a9e6:	2000      	movs	r0, #0
 800a9e8:	7318      	strb	r0, [r3, #12]

  return (uint8_t)USBD_OK;
}
 800a9ea:	4770      	bx	lr

0800a9ec <USBD_HID_GetDeviceQualifierDesc>:
  * @param  length : pointer data length
  * @retval pointer to descriptor buffer
  */
static uint8_t *USBD_HID_GetDeviceQualifierDesc(uint16_t *length)
{
  *length = (uint16_t)sizeof(USBD_HID_DeviceQualifierDesc);
 800a9ec:	230a      	movs	r3, #10
 800a9ee:	8003      	strh	r3, [r0, #0]

  return USBD_HID_DeviceQualifierDesc;
}
 800a9f0:	4800      	ldr	r0, [pc, #0]	@ (800a9f4 <USBD_HID_GetDeviceQualifierDesc+0x8>)
 800a9f2:	4770      	bx	lr
 800a9f4:	20000120 	.word	0x20000120

0800a9f8 <USBD_HID_GetFSCfgDesc>:
{
 800a9f8:	b510      	push	{r4, lr}
  USBD_EpDescTypeDef *pEpDesc = USBD_GetEpDesc(USBD_HID_CfgDesc, HID_EPIN_ADDR);
 800a9fa:	2181      	movs	r1, #129	@ 0x81
{
 800a9fc:	4604      	mov	r4, r0
  USBD_EpDescTypeDef *pEpDesc = USBD_GetEpDesc(USBD_HID_CfgDesc, HID_EPIN_ADDR);
 800a9fe:	4805      	ldr	r0, [pc, #20]	@ (800aa14 <USBD_HID_GetFSCfgDesc+0x1c>)
 800aa00:	f7ff fd68 	bl	800a4d4 <USBD_GetEpDesc>
  if (pEpDesc != NULL)
 800aa04:	b108      	cbz	r0, 800aa0a <USBD_HID_GetFSCfgDesc+0x12>
    pEpDesc->bInterval = HID_FS_BINTERVAL;
 800aa06:	230a      	movs	r3, #10
 800aa08:	7183      	strb	r3, [r0, #6]
  *length = (uint16_t)sizeof(USBD_HID_CfgDesc);
 800aa0a:	2322      	movs	r3, #34	@ 0x22
}
 800aa0c:	4801      	ldr	r0, [pc, #4]	@ (800aa14 <USBD_HID_GetFSCfgDesc+0x1c>)
  *length = (uint16_t)sizeof(USBD_HID_CfgDesc);
 800aa0e:	8023      	strh	r3, [r4, #0]
}
 800aa10:	bd10      	pop	{r4, pc}
 800aa12:	bf00      	nop
 800aa14:	20000138 	.word	0x20000138

0800aa18 <USBD_HID_GetOtherSpeedCfgDesc>:
static uint8_t *USBD_HID_GetOtherSpeedCfgDesc(uint16_t *length)
 800aa18:	f7ff bfee 	b.w	800a9f8 <USBD_HID_GetFSCfgDesc>

0800aa1c <USBD_HID_GetHSCfgDesc>:
{
 800aa1c:	b510      	push	{r4, lr}
  USBD_EpDescTypeDef *pEpDesc = USBD_GetEpDesc(USBD_HID_CfgDesc, HID_EPIN_ADDR);
 800aa1e:	2181      	movs	r1, #129	@ 0x81
{
 800aa20:	4604      	mov	r4, r0
  USBD_EpDescTypeDef *pEpDesc = USBD_GetEpDesc(USBD_HID_CfgDesc, HID_EPIN_ADDR);
 800aa22:	4805      	ldr	r0, [pc, #20]	@ (800aa38 <USBD_HID_GetHSCfgDesc+0x1c>)
 800aa24:	f7ff fd56 	bl	800a4d4 <USBD_GetEpDesc>
  if (pEpDesc != NULL)
 800aa28:	b108      	cbz	r0, 800aa2e <USBD_HID_GetHSCfgDesc+0x12>
    pEpDesc->bInterval = HID_HS_BINTERVAL;
 800aa2a:	2307      	movs	r3, #7
 800aa2c:	7183      	strb	r3, [r0, #6]
  *length = (uint16_t)sizeof(USBD_HID_CfgDesc);
 800aa2e:	2322      	movs	r3, #34	@ 0x22
}
 800aa30:	4801      	ldr	r0, [pc, #4]	@ (800aa38 <USBD_HID_GetHSCfgDesc+0x1c>)
  *length = (uint16_t)sizeof(USBD_HID_CfgDesc);
 800aa32:	8023      	strh	r3, [r4, #0]
}
 800aa34:	bd10      	pop	{r4, pc}
 800aa36:	bf00      	nop
 800aa38:	20000138 	.word	0x20000138

0800aa3c <USBD_HID_Setup>:
  USBD_HID_HandleTypeDef *hhid = (USBD_HID_HandleTypeDef *)pdev->pClassDataCmsit[pdev->classId];
 800aa3c:	f8d0 32d4 	ldr.w	r3, [r0, #724]	@ 0x2d4
{
 800aa40:	b513      	push	{r0, r1, r4, lr}
  USBD_HID_HandleTypeDef *hhid = (USBD_HID_HandleTypeDef *)pdev->pClassDataCmsit[pdev->classId];
 800aa42:	33b0      	adds	r3, #176	@ 0xb0
  uint16_t status_info = 0U;
 800aa44:	2200      	movs	r2, #0
  USBD_HID_HandleTypeDef *hhid = (USBD_HID_HandleTypeDef *)pdev->pClassDataCmsit[pdev->classId];
 800aa46:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
  uint16_t status_info = 0U;
 800aa4a:	f8ad 2006 	strh.w	r2, [sp, #6]
  if (hhid == NULL)
 800aa4e:	2b00      	cmp	r3, #0
 800aa50:	d04a      	beq.n	800aae8 <USBD_HID_Setup+0xac>
  switch (req->bmRequest & USB_REQ_TYPE_MASK)
 800aa52:	780a      	ldrb	r2, [r1, #0]
 800aa54:	f012 0260 	ands.w	r2, r2, #96	@ 0x60
 800aa58:	d01d      	beq.n	800aa96 <USBD_HID_Setup+0x5a>
 800aa5a:	2a20      	cmp	r2, #32
 800aa5c:	d142      	bne.n	800aae4 <USBD_HID_Setup+0xa8>
      switch (req->bRequest)
 800aa5e:	784a      	ldrb	r2, [r1, #1]
 800aa60:	3a02      	subs	r2, #2
 800aa62:	2a09      	cmp	r2, #9
 800aa64:	d83e      	bhi.n	800aae4 <USBD_HID_Setup+0xa8>
 800aa66:	e8df f002 	tbb	[pc, r2]
 800aa6a:	0a13      	.short	0x0a13
 800aa6c:	3d3d3d3d 	.word	0x3d3d3d3d
 800aa70:	050f3d3d 	.word	0x050f3d3d
          hhid->Protocol = (uint8_t)(req->wValue);
 800aa74:	788a      	ldrb	r2, [r1, #2]
 800aa76:	601a      	str	r2, [r3, #0]
  USBD_StatusTypeDef ret = USBD_OK;
 800aa78:	2000      	movs	r0, #0
}
 800aa7a:	b002      	add	sp, #8
 800aa7c:	bd10      	pop	{r4, pc}
          (void)USBD_CtlSendData(pdev, (uint8_t *)&hhid->Protocol, 1U);
 800aa7e:	2201      	movs	r2, #1
 800aa80:	4619      	mov	r1, r3
          (void)USBD_CtlSendData(pdev, pbuf, len);
 800aa82:	f000 f8a9 	bl	800abd8 <USBD_CtlSendData>
          break;
 800aa86:	e7f7      	b.n	800aa78 <USBD_HID_Setup+0x3c>
          hhid->IdleState = (uint8_t)(req->wValue >> 8);
 800aa88:	884a      	ldrh	r2, [r1, #2]
 800aa8a:	0a12      	lsrs	r2, r2, #8
 800aa8c:	605a      	str	r2, [r3, #4]
          break;
 800aa8e:	e7f3      	b.n	800aa78 <USBD_HID_Setup+0x3c>
          (void)USBD_CtlSendData(pdev, (uint8_t *)&hhid->IdleState, 1U);
 800aa90:	2201      	movs	r2, #1
 800aa92:	1d19      	adds	r1, r3, #4
 800aa94:	e7f5      	b.n	800aa82 <USBD_HID_Setup+0x46>
      switch (req->bRequest)
 800aa96:	784a      	ldrb	r2, [r1, #1]
 800aa98:	2a0b      	cmp	r2, #11
 800aa9a:	d823      	bhi.n	800aae4 <USBD_HID_Setup+0xa8>
 800aa9c:	a401      	add	r4, pc, #4	@ (adr r4, 800aaa4 <USBD_HID_Setup+0x68>)
 800aa9e:	f854 f022 	ldr.w	pc, [r4, r2, lsl #2]
 800aaa2:	bf00      	nop
 800aaa4:	0800aad5 	.word	0x0800aad5
 800aaa8:	0800aa79 	.word	0x0800aa79
 800aaac:	0800aae5 	.word	0x0800aae5
 800aab0:	0800aae5 	.word	0x0800aae5
 800aab4:	0800aae5 	.word	0x0800aae5
 800aab8:	0800aae5 	.word	0x0800aae5
 800aabc:	0800aaed 	.word	0x0800aaed
 800aac0:	0800aae5 	.word	0x0800aae5
 800aac4:	0800aae5 	.word	0x0800aae5
 800aac8:	0800aae5 	.word	0x0800aae5
 800aacc:	0800ab11 	.word	0x0800ab11
 800aad0:	0800ab21 	.word	0x0800ab21
          if (pdev->dev_state == USBD_STATE_CONFIGURED)
 800aad4:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
 800aad8:	2b03      	cmp	r3, #3
 800aada:	d103      	bne.n	800aae4 <USBD_HID_Setup+0xa8>
            (void)USBD_CtlSendData(pdev, (uint8_t *)&status_info, 2U);
 800aadc:	2202      	movs	r2, #2
 800aade:	f10d 0106 	add.w	r1, sp, #6
 800aae2:	e7ce      	b.n	800aa82 <USBD_HID_Setup+0x46>
            USBD_CtlError(pdev, req);
 800aae4:	f7ff ff53 	bl	800a98e <USBD_CtlError>
    return (uint8_t)USBD_FAIL;
 800aae8:	2003      	movs	r0, #3
 800aaea:	e7c6      	b.n	800aa7a <USBD_HID_Setup+0x3e>
          if ((req->wValue >> 8) == HID_REPORT_DESC)
 800aaec:	884b      	ldrh	r3, [r1, #2]
 800aaee:	0a1b      	lsrs	r3, r3, #8
 800aaf0:	2b22      	cmp	r3, #34	@ 0x22
 800aaf2:	d105      	bne.n	800ab00 <USBD_HID_Setup+0xc4>
            len = MIN(HID_MOUSE_REPORT_DESC_SIZE, req->wLength);
 800aaf4:	88ca      	ldrh	r2, [r1, #6]
            pbuf = HID_MOUSE_ReportDesc;
 800aaf6:	490e      	ldr	r1, [pc, #56]	@ (800ab30 <USBD_HID_Setup+0xf4>)
            len = MIN(HID_MOUSE_REPORT_DESC_SIZE, req->wLength);
 800aaf8:	2a4a      	cmp	r2, #74	@ 0x4a
 800aafa:	bf28      	it	cs
 800aafc:	224a      	movcs	r2, #74	@ 0x4a
            pbuf = HID_MOUSE_ReportDesc;
 800aafe:	e7c0      	b.n	800aa82 <USBD_HID_Setup+0x46>
          else if ((req->wValue >> 8) == HID_DESCRIPTOR_TYPE)
 800ab00:	2b21      	cmp	r3, #33	@ 0x21
 800ab02:	d1ef      	bne.n	800aae4 <USBD_HID_Setup+0xa8>
            len = MIN(USB_HID_DESC_SIZ, req->wLength);
 800ab04:	88ca      	ldrh	r2, [r1, #6]
            pbuf = USBD_HID_Desc;
 800ab06:	490b      	ldr	r1, [pc, #44]	@ (800ab34 <USBD_HID_Setup+0xf8>)
            len = MIN(USB_HID_DESC_SIZ, req->wLength);
 800ab08:	2a09      	cmp	r2, #9
 800ab0a:	bf28      	it	cs
 800ab0c:	2209      	movcs	r2, #9
 800ab0e:	e7b8      	b.n	800aa82 <USBD_HID_Setup+0x46>
          if (pdev->dev_state == USBD_STATE_CONFIGURED)
 800ab10:	f890 229c 	ldrb.w	r2, [r0, #668]	@ 0x29c
 800ab14:	2a03      	cmp	r2, #3
 800ab16:	d1e5      	bne.n	800aae4 <USBD_HID_Setup+0xa8>
            (void)USBD_CtlSendData(pdev, (uint8_t *)&hhid->AltSetting, 1U);
 800ab18:	2201      	movs	r2, #1
 800ab1a:	f103 0108 	add.w	r1, r3, #8
 800ab1e:	e7b0      	b.n	800aa82 <USBD_HID_Setup+0x46>
          if (pdev->dev_state == USBD_STATE_CONFIGURED)
 800ab20:	f890 229c 	ldrb.w	r2, [r0, #668]	@ 0x29c
 800ab24:	2a03      	cmp	r2, #3
 800ab26:	d1dd      	bne.n	800aae4 <USBD_HID_Setup+0xa8>
            hhid->AltSetting = (uint8_t)(req->wValue);
 800ab28:	788a      	ldrb	r2, [r1, #2]
 800ab2a:	609a      	str	r2, [r3, #8]
 800ab2c:	e7a4      	b.n	800aa78 <USBD_HID_Setup+0x3c>
 800ab2e:	bf00      	nop
 800ab30:	200000d4 	.word	0x200000d4
 800ab34:	2000012c 	.word	0x2000012c

0800ab38 <USBD_HID_DeInit>:
{
 800ab38:	b538      	push	{r3, r4, r5, lr}
 800ab3a:	4604      	mov	r4, r0
  (void)USBD_LL_CloseEP(pdev, HIDInEpAdd);
 800ab3c:	2181      	movs	r1, #129	@ 0x81
 800ab3e:	f7f7 fc09 	bl	8002354 <USBD_LL_CloseEP>
  if (pdev->pClassDataCmsit[pdev->classId] != NULL)
 800ab42:	f8d4 32d4 	ldr.w	r3, [r4, #724]	@ 0x2d4
 800ab46:	33b0      	adds	r3, #176	@ 0xb0
  pdev->ep_in[HIDInEpAdd & 0xFU].is_used = 0U;
 800ab48:	2500      	movs	r5, #0
  if (pdev->pClassDataCmsit[pdev->classId] != NULL)
 800ab4a:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
  pdev->ep_in[HIDInEpAdd & 0xFU].is_used = 0U;
 800ab4e:	63a5      	str	r5, [r4, #56]	@ 0x38
  if (pdev->pClassDataCmsit[pdev->classId] != NULL)
 800ab50:	b130      	cbz	r0, 800ab60 <USBD_HID_DeInit+0x28>
    (void)USBD_free(pdev->pClassDataCmsit[pdev->classId]);
 800ab52:	f7f7 fbe3 	bl	800231c <USBD_static_free>
    pdev->pClassDataCmsit[pdev->classId] = NULL;
 800ab56:	f8d4 32d4 	ldr.w	r3, [r4, #724]	@ 0x2d4
 800ab5a:	33b0      	adds	r3, #176	@ 0xb0
 800ab5c:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
}
 800ab60:	2000      	movs	r0, #0
 800ab62:	bd38      	pop	{r3, r4, r5, pc}

0800ab64 <USBD_HID_Init>:
{
 800ab64:	b538      	push	{r3, r4, r5, lr}
 800ab66:	4604      	mov	r4, r0
  hhid = (USBD_HID_HandleTypeDef *)USBD_malloc(sizeof(USBD_HID_HandleTypeDef));
 800ab68:	2010      	movs	r0, #16
 800ab6a:	f7f7 fbd3 	bl	8002314 <USBD_static_malloc>
  if (hhid == NULL)
 800ab6e:	f8d4 32d4 	ldr.w	r3, [r4, #724]	@ 0x2d4
    pdev->pClassDataCmsit[pdev->classId] = NULL;
 800ab72:	33b0      	adds	r3, #176	@ 0xb0
  if (hhid == NULL)
 800ab74:	4605      	mov	r5, r0
    pdev->pClassDataCmsit[pdev->classId] = NULL;
 800ab76:	f844 0023 	str.w	r0, [r4, r3, lsl #2]
  if (hhid == NULL)
 800ab7a:	b908      	cbnz	r0, 800ab80 <USBD_HID_Init+0x1c>
    return (uint8_t)USBD_EMEM;
 800ab7c:	2002      	movs	r0, #2
}
 800ab7e:	bd38      	pop	{r3, r4, r5, pc}
  if (pdev->dev_speed == USBD_SPEED_HIGH)
 800ab80:	7c23      	ldrb	r3, [r4, #16]
  pdev->pClassData = pdev->pClassDataCmsit[pdev->classId];
 800ab82:	f8c4 02bc 	str.w	r0, [r4, #700]	@ 0x2bc
    pdev->ep_in[HIDInEpAdd & 0xFU].bInterval = HID_HS_BINTERVAL;
 800ab86:	2b00      	cmp	r3, #0
 800ab88:	bf14      	ite	ne
 800ab8a:	230a      	movne	r3, #10
 800ab8c:	2307      	moveq	r3, #7
 800ab8e:	8763      	strh	r3, [r4, #58]	@ 0x3a
  (void)USBD_LL_OpenEP(pdev, HIDInEpAdd, USBD_EP_TYPE_INTR, HID_EPIN_SIZE);
 800ab90:	2203      	movs	r2, #3
 800ab92:	2304      	movs	r3, #4
 800ab94:	2181      	movs	r1, #129	@ 0x81
 800ab96:	4620      	mov	r0, r4
 800ab98:	f7f7 fbd0 	bl	800233c <USBD_LL_OpenEP>
  pdev->ep_in[HIDInEpAdd & 0xFU].is_used = 1U;
 800ab9c:	2301      	movs	r3, #1
  hhid->state = USBD_HID_IDLE;
 800ab9e:	2000      	movs	r0, #0
  pdev->ep_in[HIDInEpAdd & 0xFU].is_used = 1U;
 800aba0:	8723      	strh	r3, [r4, #56]	@ 0x38
  hhid->state = USBD_HID_IDLE;
 800aba2:	7328      	strb	r0, [r5, #12]
  return (uint8_t)USBD_OK;
 800aba4:	e7eb      	b.n	800ab7e <USBD_HID_Init+0x1a>

0800aba6 <USBD_HID_SendReport>:
{
 800aba6:	4613      	mov	r3, r2
  USBD_HID_HandleTypeDef *hhid = (USBD_HID_HandleTypeDef *)pdev->pClassDataCmsit[pdev->classId];
 800aba8:	f8d0 22d4 	ldr.w	r2, [r0, #724]	@ 0x2d4
 800abac:	32b0      	adds	r2, #176	@ 0xb0
{
 800abae:	b510      	push	{r4, lr}
  USBD_HID_HandleTypeDef *hhid = (USBD_HID_HandleTypeDef *)pdev->pClassDataCmsit[pdev->classId];
 800abb0:	f850 2022 	ldr.w	r2, [r0, r2, lsl #2]
  if (hhid == NULL)
 800abb4:	b172      	cbz	r2, 800abd4 <USBD_HID_SendReport+0x2e>
  if (pdev->dev_state == USBD_STATE_CONFIGURED)
 800abb6:	f890 429c 	ldrb.w	r4, [r0, #668]	@ 0x29c
 800abba:	2c03      	cmp	r4, #3
 800abbc:	d101      	bne.n	800abc2 <USBD_HID_SendReport+0x1c>
    if (hhid->state == USBD_HID_IDLE)
 800abbe:	7b14      	ldrb	r4, [r2, #12]
 800abc0:	b10c      	cbz	r4, 800abc6 <USBD_HID_SendReport+0x20>
  return (uint8_t)USBD_OK;
 800abc2:	2000      	movs	r0, #0
}
 800abc4:	bd10      	pop	{r4, pc}
      hhid->state = USBD_HID_BUSY;
 800abc6:	2401      	movs	r4, #1
 800abc8:	7314      	strb	r4, [r2, #12]
      (void)USBD_LL_Transmit(pdev, HIDInEpAdd, report, len);
 800abca:	460a      	mov	r2, r1
 800abcc:	2181      	movs	r1, #129	@ 0x81
 800abce:	f7f7 fbe5 	bl	800239c <USBD_LL_Transmit>
 800abd2:	e7f6      	b.n	800abc2 <USBD_HID_SendReport+0x1c>
    return (uint8_t)USBD_FAIL;
 800abd4:	2003      	movs	r0, #3
 800abd6:	e7f5      	b.n	800abc4 <USBD_HID_SendReport+0x1e>

0800abd8 <USBD_CtlSendData>:
  * @param  len: length of data to be sent
  * @retval status
  */
USBD_StatusTypeDef USBD_CtlSendData(USBD_HandleTypeDef *pdev,
                                    uint8_t *pbuf, uint32_t len)
{
 800abd8:	b510      	push	{r4, lr}
 800abda:	4613      	mov	r3, r2
  /* Set EP0 State */
  pdev->ep0_state = USBD_EP0_DATA_IN;
 800abdc:	2202      	movs	r2, #2
  pdev->ep_in[0].total_length = len;

#ifdef USBD_AVOID_PACKET_SPLIT_MPS
  pdev->ep_in[0].rem_length = 0U;
#else
  pdev->ep_in[0].rem_length = len;
 800abde:	e9c0 3306 	strd	r3, r3, [r0, #24]
  pdev->ep0_state = USBD_EP0_DATA_IN;
 800abe2:	f8c0 2294 	str.w	r2, [r0, #660]	@ 0x294
#endif /* USBD_AVOID_PACKET_SPLIT_MPS */

  /* Start the transfer */
  (void)USBD_LL_Transmit(pdev, 0x00U, pbuf, len);
 800abe6:	460a      	mov	r2, r1
 800abe8:	2100      	movs	r1, #0
 800abea:	f7f7 fbd7 	bl	800239c <USBD_LL_Transmit>

  return USBD_OK;
}
 800abee:	2000      	movs	r0, #0
 800abf0:	bd10      	pop	{r4, pc}

0800abf2 <USBD_CtlContinueSendData>:
  * @param  len: length of data to be sent
  * @retval status
  */
USBD_StatusTypeDef USBD_CtlContinueSendData(USBD_HandleTypeDef *pdev,
                                            uint8_t *pbuf, uint32_t len)
{
 800abf2:	b508      	push	{r3, lr}
 800abf4:	4613      	mov	r3, r2
  /* Start the next transfer */
  (void)USBD_LL_Transmit(pdev, 0x00U, pbuf, len);
 800abf6:	460a      	mov	r2, r1
 800abf8:	2100      	movs	r1, #0
 800abfa:	f7f7 fbcf 	bl	800239c <USBD_LL_Transmit>

  return USBD_OK;
}
 800abfe:	2000      	movs	r0, #0
 800ac00:	bd08      	pop	{r3, pc}

0800ac02 <USBD_CtlContinueRx>:
  * @param  len: length of data to be received
  * @retval status
  */
USBD_StatusTypeDef USBD_CtlContinueRx(USBD_HandleTypeDef *pdev,
                                      uint8_t *pbuf, uint32_t len)
{
 800ac02:	b508      	push	{r3, lr}
 800ac04:	4613      	mov	r3, r2
  (void)USBD_LL_PrepareReceive(pdev, 0U, pbuf, len);
 800ac06:	460a      	mov	r2, r1
 800ac08:	2100      	movs	r1, #0
 800ac0a:	f7f7 fbd0 	bl	80023ae <USBD_LL_PrepareReceive>

  return USBD_OK;
}
 800ac0e:	2000      	movs	r0, #0
 800ac10:	bd08      	pop	{r3, pc}

0800ac12 <USBD_CtlSendStatus>:
  *         send zero lzngth packet on the ctl pipe
  * @param  pdev: device instance
  * @retval status
  */
USBD_StatusTypeDef USBD_CtlSendStatus(USBD_HandleTypeDef *pdev)
{
 800ac12:	b508      	push	{r3, lr}
  /* Set EP0 State */
  pdev->ep0_state = USBD_EP0_STATUS_IN;
 800ac14:	2204      	movs	r2, #4

  /* Start the transfer */
  (void)USBD_LL_Transmit(pdev, 0x00U, NULL, 0U);
 800ac16:	2300      	movs	r3, #0
  pdev->ep0_state = USBD_EP0_STATUS_IN;
 800ac18:	f8c0 2294 	str.w	r2, [r0, #660]	@ 0x294
  (void)USBD_LL_Transmit(pdev, 0x00U, NULL, 0U);
 800ac1c:	4619      	mov	r1, r3
 800ac1e:	461a      	mov	r2, r3
 800ac20:	f7f7 fbbc 	bl	800239c <USBD_LL_Transmit>

  return USBD_OK;
}
 800ac24:	2000      	movs	r0, #0
 800ac26:	bd08      	pop	{r3, pc}

0800ac28 <USBD_CtlReceiveStatus>:
  *         receive zero lzngth packet on the ctl pipe
  * @param  pdev: device instance
  * @retval status
  */
USBD_StatusTypeDef USBD_CtlReceiveStatus(USBD_HandleTypeDef *pdev)
{
 800ac28:	b508      	push	{r3, lr}
  /* Set EP0 State */
  pdev->ep0_state = USBD_EP0_STATUS_OUT;
 800ac2a:	2205      	movs	r2, #5

  /* Start the transfer */
  (void)USBD_LL_PrepareReceive(pdev, 0U, NULL, 0U);
 800ac2c:	2300      	movs	r3, #0
  pdev->ep0_state = USBD_EP0_STATUS_OUT;
 800ac2e:	f8c0 2294 	str.w	r2, [r0, #660]	@ 0x294
  (void)USBD_LL_PrepareReceive(pdev, 0U, NULL, 0U);
 800ac32:	4619      	mov	r1, r3
 800ac34:	461a      	mov	r2, r3
 800ac36:	f7f7 fbba 	bl	80023ae <USBD_LL_PrepareReceive>

  return USBD_OK;
}
 800ac3a:	2000      	movs	r0, #0
 800ac3c:	bd08      	pop	{r3, pc}

0800ac3e <_ZNK8touchgfx17AbstractPartition18getAllocationCountEv>:
 800ac3e:	8880      	ldrh	r0, [r0, #4]
 800ac40:	4770      	bx	lr

0800ac42 <_ZN8touchgfx17AbstractPartition7indexOfEPKv>:
 800ac42:	b570      	push	{r4, r5, r6, lr}
 800ac44:	6803      	ldr	r3, [r0, #0]
 800ac46:	4605      	mov	r5, r0
 800ac48:	460c      	mov	r4, r1
 800ac4a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800ac4c:	2100      	movs	r1, #0
 800ac4e:	4798      	blx	r3
 800ac50:	682b      	ldr	r3, [r5, #0]
 800ac52:	4606      	mov	r6, r0
 800ac54:	6a1b      	ldr	r3, [r3, #32]
 800ac56:	4628      	mov	r0, r5
 800ac58:	4798      	blx	r3
 800ac5a:	1ba4      	subs	r4, r4, r6
 800ac5c:	b2a4      	uxth	r4, r4
 800ac5e:	fbb4 f0f0 	udiv	r0, r4, r0
 800ac62:	bd70      	pop	{r4, r5, r6, pc}

0800ac64 <_ZN8touchgfx17AbstractPartition5clearEv>:
 800ac64:	2300      	movs	r3, #0
 800ac66:	8083      	strh	r3, [r0, #4]
 800ac68:	4770      	bx	lr

0800ac6a <_ZN8touchgfx17AbstractPartition8allocateEt>:
 800ac6a:	b510      	push	{r4, lr}
 800ac6c:	6803      	ldr	r3, [r0, #0]
 800ac6e:	8881      	ldrh	r1, [r0, #4]
 800ac70:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800ac72:	4604      	mov	r4, r0
 800ac74:	4798      	blx	r3
 800ac76:	88a3      	ldrh	r3, [r4, #4]
 800ac78:	3301      	adds	r3, #1
 800ac7a:	80a3      	strh	r3, [r4, #4]
 800ac7c:	bd10      	pop	{r4, pc}

0800ac7e <_ZN8touchgfx17AbstractPartition10allocateAtEtt>:
 800ac7e:	6803      	ldr	r3, [r0, #0]
 800ac80:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800ac82:	4718      	bx	r3

0800ac84 <_ZN8touchgfx17AbstractPartitionD1Ev>:
 800ac84:	4770      	bx	lr
	...

0800ac88 <_ZN8touchgfx17AbstractPartitionC1Ev>:
 800ac88:	4a02      	ldr	r2, [pc, #8]	@ (800ac94 <_ZN8touchgfx17AbstractPartitionC1Ev+0xc>)
 800ac8a:	6002      	str	r2, [r0, #0]
 800ac8c:	2200      	movs	r2, #0
 800ac8e:	8082      	strh	r2, [r0, #4]
 800ac90:	4770      	bx	lr
 800ac92:	bf00      	nop
 800ac94:	08024f20 	.word	0x08024f20

0800ac98 <_ZN8touchgfx9Container8containsERKNS_8DrawableE>:
 800ac98:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 800ac9a:	2000      	movs	r0, #0
 800ac9c:	b12b      	cbz	r3, 800acaa <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 800ac9e:	b920      	cbnz	r0, 800acaa <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 800aca0:	1a5a      	subs	r2, r3, r1
 800aca2:	4250      	negs	r0, r2
 800aca4:	4150      	adcs	r0, r2
 800aca6:	699b      	ldr	r3, [r3, #24]
 800aca8:	e7f8      	b.n	800ac9c <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x4>
 800acaa:	4770      	bx	lr

0800acac <_ZN8touchgfx9Container3addERNS_8DrawableE>:
 800acac:	2300      	movs	r3, #0
 800acae:	6148      	str	r0, [r1, #20]
 800acb0:	618b      	str	r3, [r1, #24]
 800acb2:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 800acb4:	b913      	cbnz	r3, 800acbc <_ZN8touchgfx9Container3addERNS_8DrawableE+0x10>
 800acb6:	6281      	str	r1, [r0, #40]	@ 0x28
 800acb8:	4770      	bx	lr
 800acba:	4613      	mov	r3, r2
 800acbc:	699a      	ldr	r2, [r3, #24]
 800acbe:	2a00      	cmp	r2, #0
 800acc0:	d1fb      	bne.n	800acba <_ZN8touchgfx9Container3addERNS_8DrawableE+0xe>
 800acc2:	6199      	str	r1, [r3, #24]
 800acc4:	4770      	bx	lr

0800acc6 <_ZN8touchgfx9Container9removeAllEv>:
 800acc6:	2200      	movs	r2, #0
 800acc8:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 800acca:	b123      	cbz	r3, 800acd6 <_ZN8touchgfx9Container9removeAllEv+0x10>
 800accc:	6999      	ldr	r1, [r3, #24]
 800acce:	6281      	str	r1, [r0, #40]	@ 0x28
 800acd0:	e9c3 2205 	strd	r2, r2, [r3, #20]
 800acd4:	e7f8      	b.n	800acc8 <_ZN8touchgfx9Container9removeAllEv+0x2>
 800acd6:	4770      	bx	lr

0800acd8 <_ZN8touchgfx9Container6unlinkEv>:
 800acd8:	2300      	movs	r3, #0
 800acda:	6283      	str	r3, [r0, #40]	@ 0x28
 800acdc:	4770      	bx	lr

0800acde <_ZNK8touchgfx9Container12getSolidRectEv>:
 800acde:	2200      	movs	r2, #0
 800ace0:	8002      	strh	r2, [r0, #0]
 800ace2:	8042      	strh	r2, [r0, #2]
 800ace4:	8082      	strh	r2, [r0, #4]
 800ace6:	80c2      	strh	r2, [r0, #6]
 800ace8:	4770      	bx	lr

0800acea <_ZN8touchgfx9Container20moveChildrenRelativeEss>:
 800acea:	b570      	push	{r4, r5, r6, lr}
 800acec:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 800acee:	460d      	mov	r5, r1
 800acf0:	4616      	mov	r6, r2
 800acf2:	b13c      	cbz	r4, 800ad04 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x1a>
 800acf4:	6823      	ldr	r3, [r4, #0]
 800acf6:	4620      	mov	r0, r4
 800acf8:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800acfa:	4632      	mov	r2, r6
 800acfc:	4629      	mov	r1, r5
 800acfe:	4798      	blx	r3
 800ad00:	69a4      	ldr	r4, [r4, #24]
 800ad02:	e7f6      	b.n	800acf2 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x8>
 800ad04:	bd70      	pop	{r4, r5, r6, pc}

0800ad06 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE>:
 800ad06:	b538      	push	{r3, r4, r5, lr}
 800ad08:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 800ad0a:	460d      	mov	r5, r1
 800ad0c:	b134      	cbz	r4, 800ad1c <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x16>
 800ad0e:	682b      	ldr	r3, [r5, #0]
 800ad10:	4621      	mov	r1, r4
 800ad12:	689b      	ldr	r3, [r3, #8]
 800ad14:	4628      	mov	r0, r5
 800ad16:	4798      	blx	r3
 800ad18:	69a4      	ldr	r4, [r4, #24]
 800ad1a:	e7f7      	b.n	800ad0c <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x6>
 800ad1c:	bd38      	pop	{r3, r4, r5, pc}

0800ad1e <_ZN8touchgfx9ContainerD1Ev>:
 800ad1e:	4770      	bx	lr

0800ad20 <_ZN8touchgfx9ContainerD0Ev>:
 800ad20:	b510      	push	{r4, lr}
 800ad22:	212c      	movs	r1, #44	@ 0x2c
 800ad24:	4604      	mov	r4, r0
 800ad26:	f016 fffe 	bl	8021d26 <_ZdlPvj>
 800ad2a:	4620      	mov	r0, r4
 800ad2c:	bd10      	pop	{r4, pc}

0800ad2e <_ZN8touchgfx9Container6removeERNS_8DrawableE>:
 800ad2e:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 800ad30:	b19b      	cbz	r3, 800ad5a <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 800ad32:	428b      	cmp	r3, r1
 800ad34:	d109      	bne.n	800ad4a <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x1c>
 800ad36:	699a      	ldr	r2, [r3, #24]
 800ad38:	2100      	movs	r1, #0
 800ad3a:	6159      	str	r1, [r3, #20]
 800ad3c:	6282      	str	r2, [r0, #40]	@ 0x28
 800ad3e:	b902      	cbnz	r2, 800ad42 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x14>
 800ad40:	4770      	bx	lr
 800ad42:	6199      	str	r1, [r3, #24]
 800ad44:	4770      	bx	lr
 800ad46:	4613      	mov	r3, r2
 800ad48:	b13a      	cbz	r2, 800ad5a <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 800ad4a:	699a      	ldr	r2, [r3, #24]
 800ad4c:	428a      	cmp	r2, r1
 800ad4e:	d1fa      	bne.n	800ad46 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x18>
 800ad50:	698a      	ldr	r2, [r1, #24]
 800ad52:	619a      	str	r2, [r3, #24]
 800ad54:	2300      	movs	r3, #0
 800ad56:	e9c1 3305 	strd	r3, r3, [r1, #20]
 800ad5a:	4770      	bx	lr

0800ad5c <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>:
 800ad5c:	b410      	push	{r4}
 800ad5e:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 800ad60:	4604      	mov	r4, r0
 800ad62:	b92b      	cbnz	r3, 800ad70 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x14>
 800ad64:	6803      	ldr	r3, [r0, #0]
 800ad66:	f85d 4b04 	ldr.w	r4, [sp], #4
 800ad6a:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 800ad6c:	4611      	mov	r1, r2
 800ad6e:	4718      	bx	r3
 800ad70:	b941      	cbnz	r1, 800ad84 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x28>
 800ad72:	6193      	str	r3, [r2, #24]
 800ad74:	6282      	str	r2, [r0, #40]	@ 0x28
 800ad76:	6154      	str	r4, [r2, #20]
 800ad78:	f85d 4b04 	ldr.w	r4, [sp], #4
 800ad7c:	4770      	bx	lr
 800ad7e:	4603      	mov	r3, r0
 800ad80:	2800      	cmp	r0, #0
 800ad82:	d0f9      	beq.n	800ad78 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1c>
 800ad84:	4299      	cmp	r1, r3
 800ad86:	6998      	ldr	r0, [r3, #24]
 800ad88:	d1f9      	bne.n	800ad7e <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x22>
 800ad8a:	6190      	str	r0, [r2, #24]
 800ad8c:	618a      	str	r2, [r1, #24]
 800ad8e:	e7f2      	b.n	800ad76 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1a>

0800ad90 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>:
 800ad90:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ad94:	461f      	mov	r7, r3
 800ad96:	f890 3024 	ldrb.w	r3, [r0, #36]	@ 0x24
 800ad9a:	460d      	mov	r5, r1
 800ad9c:	4616      	mov	r6, r2
 800ad9e:	b103      	cbz	r3, 800ada2 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x12>
 800ada0:	6038      	str	r0, [r7, #0]
 800ada2:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 800ada4:	b314      	cbz	r4, 800adec <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x5c>
 800ada6:	f894 3025 	ldrb.w	r3, [r4, #37]	@ 0x25
 800adaa:	b1eb      	cbz	r3, 800ade8 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800adac:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 800adb0:	428d      	cmp	r5, r1
 800adb2:	db19      	blt.n	800ade8 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800adb4:	8923      	ldrh	r3, [r4, #8]
 800adb6:	b289      	uxth	r1, r1
 800adb8:	440b      	add	r3, r1
 800adba:	b21b      	sxth	r3, r3
 800adbc:	429d      	cmp	r5, r3
 800adbe:	da13      	bge.n	800ade8 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800adc0:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 800adc4:	4296      	cmp	r6, r2
 800adc6:	db0f      	blt.n	800ade8 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800adc8:	8963      	ldrh	r3, [r4, #10]
 800adca:	b292      	uxth	r2, r2
 800adcc:	4413      	add	r3, r2
 800adce:	b21b      	sxth	r3, r3
 800add0:	429e      	cmp	r6, r3
 800add2:	da09      	bge.n	800ade8 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800add4:	6823      	ldr	r3, [r4, #0]
 800add6:	1ab2      	subs	r2, r6, r2
 800add8:	1a69      	subs	r1, r5, r1
 800adda:	f8d3 8024 	ldr.w	r8, [r3, #36]	@ 0x24
 800adde:	b212      	sxth	r2, r2
 800ade0:	463b      	mov	r3, r7
 800ade2:	b209      	sxth	r1, r1
 800ade4:	4620      	mov	r0, r4
 800ade6:	47c0      	blx	r8
 800ade8:	69a4      	ldr	r4, [r4, #24]
 800adea:	e7db      	b.n	800ada4 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x14>
 800adec:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800adf0 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>:
 800adf0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800adf4:	4c6e      	ldr	r4, [pc, #440]	@ (800afb0 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c0>)
 800adf6:	b0a1      	sub	sp, #132	@ 0x84
 800adf8:	6824      	ldr	r4, [r4, #0]
 800adfa:	9d2a      	ldr	r5, [sp, #168]	@ 0xa8
 800adfc:	f894 9049 	ldrb.w	r9, [r4, #73]	@ 0x49
 800ae00:	9303      	str	r3, [sp, #12]
 800ae02:	2400      	movs	r4, #0
 800ae04:	802c      	strh	r4, [r5, #0]
 800ae06:	9d2b      	ldr	r5, [sp, #172]	@ 0xac
 800ae08:	802c      	strh	r4, [r5, #0]
 800ae0a:	601c      	str	r4, [r3, #0]
 800ae0c:	4606      	mov	r6, r0
 800ae0e:	e9cd 1201 	strd	r1, r2, [sp, #4]
 800ae12:	f7ff ffbd 	bl	800ad90 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800ae16:	f1b9 0f03 	cmp.w	r9, #3
 800ae1a:	f340 80c2 	ble.w	800afa2 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b2>
 800ae1e:	4631      	mov	r1, r6
 800ae20:	a80c      	add	r0, sp, #48	@ 0x30
 800ae22:	f005 ffc5 	bl	8010db0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800ae26:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	@ 0x30
 800ae2a:	9306      	str	r3, [sp, #24]
 800ae2c:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 800ae30:	9307      	str	r3, [sp, #28]
 800ae32:	9b03      	ldr	r3, [sp, #12]
 800ae34:	f8d3 a000 	ldr.w	sl, [r3]
 800ae38:	f1ba 0f00 	cmp.w	sl, #0
 800ae3c:	f000 80b4 	beq.w	800afa8 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b8>
 800ae40:	4651      	mov	r1, sl
 800ae42:	a810      	add	r0, sp, #64	@ 0x40
 800ae44:	f005 ffb4 	bl	8010db0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800ae48:	9b01      	ldr	r3, [sp, #4]
 800ae4a:	9a06      	ldr	r2, [sp, #24]
 800ae4c:	f9bd 1044 	ldrsh.w	r1, [sp, #68]	@ 0x44
 800ae50:	189d      	adds	r5, r3, r2
 800ae52:	f9bd 3040 	ldrsh.w	r3, [sp, #64]	@ 0x40
 800ae56:	9a07      	ldr	r2, [sp, #28]
 800ae58:	2002      	movs	r0, #2
 800ae5a:	fb91 f1f0 	sdiv	r1, r1, r0
 800ae5e:	4419      	add	r1, r3
 800ae60:	1a6d      	subs	r5, r5, r1
 800ae62:	9b02      	ldr	r3, [sp, #8]
 800ae64:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	@ 0x42
 800ae68:	4413      	add	r3, r2
 800ae6a:	f9bd 2046 	ldrsh.w	r2, [sp, #70]	@ 0x46
 800ae6e:	fb92 f2f0 	sdiv	r2, r2, r0
 800ae72:	440a      	add	r2, r1
 800ae74:	1a9b      	subs	r3, r3, r2
 800ae76:	435b      	muls	r3, r3
 800ae78:	fb05 3505 	mla	r5, r5, r5, r3
 800ae7c:	4f4d      	ldr	r7, [pc, #308]	@ (800afb4 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c4>)
 800ae7e:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800ae80:	ac10      	add	r4, sp, #64	@ 0x40
 800ae82:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800ae84:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800ae86:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800ae88:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800ae8a:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800ae8c:	e897 000f 	ldmia.w	r7, {r0, r1, r2, r3}
 800ae90:	f1b9 0f0c 	cmp.w	r9, #12
 800ae94:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 800ae98:	f04f 0303 	mov.w	r3, #3
 800ae9c:	bfc8      	it	gt
 800ae9e:	4698      	movgt	r8, r3
 800aea0:	f8cd 9000 	str.w	r9, [sp]
 800aea4:	f04f 0400 	mov.w	r4, #0
 800aea8:	bfdc      	itt	le
 800aeaa:	f109 32ff 	addle.w	r2, r9, #4294967295
 800aeae:	fb92 f8f3 	sdivle	r8, r2, r3
 800aeb2:	1c63      	adds	r3, r4, #1
 800aeb4:	aa10      	add	r2, sp, #64	@ 0x40
 800aeb6:	f004 0401 	and.w	r4, r4, #1
 800aeba:	9308      	str	r3, [sp, #32]
 800aebc:	eb02 1444 	add.w	r4, r2, r4, lsl #5
 800aec0:	9b00      	ldr	r3, [sp, #0]
 800aec2:	fb93 f3f8 	sdiv	r3, r3, r8
 800aec6:	b29b      	uxth	r3, r3
 800aec8:	3404      	adds	r4, #4
 800aeca:	f04f 0b00 	mov.w	fp, #0
 800aece:	9304      	str	r3, [sp, #16]
 800aed0:	9a04      	ldr	r2, [sp, #16]
 800aed2:	f854 3c04 	ldr.w	r3, [r4, #-4]
 800aed6:	fb13 f302 	smulbb	r3, r3, r2
 800aeda:	9a01      	ldr	r2, [sp, #4]
 800aedc:	b29b      	uxth	r3, r3
 800aede:	1899      	adds	r1, r3, r2
 800aee0:	9305      	str	r3, [sp, #20]
 800aee2:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 800aee6:	b209      	sxth	r1, r1
 800aee8:	4299      	cmp	r1, r3
 800aeea:	db4d      	blt.n	800af88 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800aeec:	8932      	ldrh	r2, [r6, #8]
 800aeee:	4413      	add	r3, r2
 800aef0:	b21b      	sxth	r3, r3
 800aef2:	4299      	cmp	r1, r3
 800aef4:	da48      	bge.n	800af88 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800aef6:	9b04      	ldr	r3, [sp, #16]
 800aef8:	6827      	ldr	r7, [r4, #0]
 800aefa:	fb17 f703 	smulbb	r7, r7, r3
 800aefe:	9b02      	ldr	r3, [sp, #8]
 800af00:	b2bf      	uxth	r7, r7
 800af02:	18fa      	adds	r2, r7, r3
 800af04:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 800af08:	b212      	sxth	r2, r2
 800af0a:	429a      	cmp	r2, r3
 800af0c:	db3c      	blt.n	800af88 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800af0e:	8970      	ldrh	r0, [r6, #10]
 800af10:	4403      	add	r3, r0
 800af12:	b21b      	sxth	r3, r3
 800af14:	429a      	cmp	r2, r3
 800af16:	da37      	bge.n	800af88 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800af18:	2300      	movs	r3, #0
 800af1a:	930b      	str	r3, [sp, #44]	@ 0x2c
 800af1c:	4630      	mov	r0, r6
 800af1e:	ab0b      	add	r3, sp, #44	@ 0x2c
 800af20:	f7ff ff36 	bl	800ad90 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800af24:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 800af26:	b37a      	cbz	r2, 800af88 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800af28:	4552      	cmp	r2, sl
 800af2a:	d02d      	beq.n	800af88 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800af2c:	4611      	mov	r1, r2
 800af2e:	a80e      	add	r0, sp, #56	@ 0x38
 800af30:	9209      	str	r2, [sp, #36]	@ 0x24
 800af32:	f005 ff3d 	bl	8010db0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800af36:	9a06      	ldr	r2, [sp, #24]
 800af38:	f9bd 0038 	ldrsh.w	r0, [sp, #56]	@ 0x38
 800af3c:	9b01      	ldr	r3, [sp, #4]
 800af3e:	f9bd 103c 	ldrsh.w	r1, [sp, #60]	@ 0x3c
 800af42:	f9bd c03e 	ldrsh.w	ip, [sp, #62]	@ 0x3e
 800af46:	4413      	add	r3, r2
 800af48:	f04f 0e02 	mov.w	lr, #2
 800af4c:	fb91 f1fe 	sdiv	r1, r1, lr
 800af50:	4401      	add	r1, r0
 800af52:	1a58      	subs	r0, r3, r1
 800af54:	9a07      	ldr	r2, [sp, #28]
 800af56:	9b02      	ldr	r3, [sp, #8]
 800af58:	f9bd 103a 	ldrsh.w	r1, [sp, #58]	@ 0x3a
 800af5c:	fb9c fcfe 	sdiv	ip, ip, lr
 800af60:	4413      	add	r3, r2
 800af62:	448c      	add	ip, r1
 800af64:	eba3 030c 	sub.w	r3, r3, ip
 800af68:	435b      	muls	r3, r3
 800af6a:	fb00 3300 	mla	r3, r0, r0, r3
 800af6e:	42ab      	cmp	r3, r5
 800af70:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 800af72:	d208      	bcs.n	800af86 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x196>
 800af74:	9803      	ldr	r0, [sp, #12]
 800af76:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 800af78:	6001      	str	r1, [r0, #0]
 800af7a:	992a      	ldr	r1, [sp, #168]	@ 0xa8
 800af7c:	9805      	ldr	r0, [sp, #20]
 800af7e:	8008      	strh	r0, [r1, #0]
 800af80:	992b      	ldr	r1, [sp, #172]	@ 0xac
 800af82:	461d      	mov	r5, r3
 800af84:	800f      	strh	r7, [r1, #0]
 800af86:	4692      	mov	sl, r2
 800af88:	f10b 0b01 	add.w	fp, fp, #1
 800af8c:	f1bb 0f04 	cmp.w	fp, #4
 800af90:	f104 0408 	add.w	r4, r4, #8
 800af94:	d19c      	bne.n	800aed0 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xe0>
 800af96:	9b00      	ldr	r3, [sp, #0]
 800af98:	9c08      	ldr	r4, [sp, #32]
 800af9a:	444b      	add	r3, r9
 800af9c:	4544      	cmp	r4, r8
 800af9e:	9300      	str	r3, [sp, #0]
 800afa0:	d187      	bne.n	800aeb2 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xc2>
 800afa2:	b021      	add	sp, #132	@ 0x84
 800afa4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800afa8:	f04f 35ff 	mov.w	r5, #4294967295
 800afac:	e766      	b.n	800ae7c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x8c>
 800afae:	bf00      	nop
 800afb0:	200133d4 	.word	0x200133d4
 800afb4:	08023df8 	.word	0x08023df8

0800afb8 <_ZN8touchgfx4RectaNERKS0_>:
 800afb8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800afbc:	f9b1 7000 	ldrsh.w	r7, [r1]
 800afc0:	888c      	ldrh	r4, [r1, #4]
 800afc2:	f9b0 9000 	ldrsh.w	r9, [r0]
 800afc6:	443c      	add	r4, r7
 800afc8:	b2a4      	uxth	r4, r4
 800afca:	fa0f f884 	sxth.w	r8, r4
 800afce:	45c1      	cmp	r9, r8
 800afd0:	da2f      	bge.n	800b032 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800afd2:	8882      	ldrh	r2, [r0, #4]
 800afd4:	444a      	add	r2, r9
 800afd6:	b292      	uxth	r2, r2
 800afd8:	fa0f fe82 	sxth.w	lr, r2
 800afdc:	4577      	cmp	r7, lr
 800afde:	da28      	bge.n	800b032 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800afe0:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 800afe4:	88cb      	ldrh	r3, [r1, #6]
 800afe6:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 800afea:	442b      	add	r3, r5
 800afec:	b21b      	sxth	r3, r3
 800afee:	429e      	cmp	r6, r3
 800aff0:	da1f      	bge.n	800b032 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800aff2:	88c3      	ldrh	r3, [r0, #6]
 800aff4:	4433      	add	r3, r6
 800aff6:	b29b      	uxth	r3, r3
 800aff8:	fa0f fc83 	sxth.w	ip, r3
 800affc:	4565      	cmp	r5, ip
 800affe:	da18      	bge.n	800b032 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800b000:	454f      	cmp	r7, r9
 800b002:	bfb8      	it	lt
 800b004:	464f      	movlt	r7, r9
 800b006:	42b5      	cmp	r5, r6
 800b008:	bfb8      	it	lt
 800b00a:	4635      	movlt	r5, r6
 800b00c:	45f0      	cmp	r8, lr
 800b00e:	bfd8      	it	le
 800b010:	4622      	movle	r2, r4
 800b012:	1bd2      	subs	r2, r2, r7
 800b014:	8082      	strh	r2, [r0, #4]
 800b016:	884a      	ldrh	r2, [r1, #2]
 800b018:	88c9      	ldrh	r1, [r1, #6]
 800b01a:	8007      	strh	r7, [r0, #0]
 800b01c:	440a      	add	r2, r1
 800b01e:	b292      	uxth	r2, r2
 800b020:	b211      	sxth	r1, r2
 800b022:	458c      	cmp	ip, r1
 800b024:	bfa8      	it	ge
 800b026:	4613      	movge	r3, r2
 800b028:	1b5b      	subs	r3, r3, r5
 800b02a:	80c3      	strh	r3, [r0, #6]
 800b02c:	8045      	strh	r5, [r0, #2]
 800b02e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800b032:	2300      	movs	r3, #0
 800b034:	8003      	strh	r3, [r0, #0]
 800b036:	8043      	strh	r3, [r0, #2]
 800b038:	8083      	strh	r3, [r0, #4]
 800b03a:	80c3      	strh	r3, [r0, #6]
 800b03c:	e7f7      	b.n	800b02e <_ZN8touchgfx4RectaNERKS0_+0x76>

0800b03e <_ZNK8touchgfx4Rect7isEmptyEv>:
 800b03e:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800b042:	2b00      	cmp	r3, #0
 800b044:	dd06      	ble.n	800b054 <_ZNK8touchgfx4Rect7isEmptyEv+0x16>
 800b046:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
 800b04a:	2800      	cmp	r0, #0
 800b04c:	bfcc      	ite	gt
 800b04e:	2000      	movgt	r0, #0
 800b050:	2001      	movle	r0, #1
 800b052:	4770      	bx	lr
 800b054:	2001      	movs	r0, #1
 800b056:	4770      	bx	lr

0800b058 <_ZNK8touchgfx9Container16getContainedAreaEv>:
 800b058:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b05c:	2300      	movs	r3, #0
 800b05e:	6a8d      	ldr	r5, [r1, #40]	@ 0x28
 800b060:	8003      	strh	r3, [r0, #0]
 800b062:	4604      	mov	r4, r0
 800b064:	8043      	strh	r3, [r0, #2]
 800b066:	8083      	strh	r3, [r0, #4]
 800b068:	80c3      	strh	r3, [r0, #6]
 800b06a:	2d00      	cmp	r5, #0
 800b06c:	d040      	beq.n	800b0f0 <_ZNK8touchgfx9Container16getContainedAreaEv+0x98>
 800b06e:	1d28      	adds	r0, r5, #4
 800b070:	f7ff ffe5 	bl	800b03e <_ZNK8touchgfx4Rect7isEmptyEv>
 800b074:	b988      	cbnz	r0, 800b09a <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 800b076:	4620      	mov	r0, r4
 800b078:	f7ff ffe1 	bl	800b03e <_ZNK8touchgfx4Rect7isEmptyEv>
 800b07c:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 800b080:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 800b084:	f9b5 e008 	ldrsh.w	lr, [r5, #8]
 800b088:	f9b5 c00a 	ldrsh.w	ip, [r5, #10]
 800b08c:	b138      	cbz	r0, 800b09e <_ZNK8touchgfx9Container16getContainedAreaEv+0x46>
 800b08e:	8022      	strh	r2, [r4, #0]
 800b090:	8063      	strh	r3, [r4, #2]
 800b092:	f8a4 e004 	strh.w	lr, [r4, #4]
 800b096:	f8a4 c006 	strh.w	ip, [r4, #6]
 800b09a:	69ad      	ldr	r5, [r5, #24]
 800b09c:	e7e5      	b.n	800b06a <_ZNK8touchgfx9Container16getContainedAreaEv+0x12>
 800b09e:	f9b4 0000 	ldrsh.w	r0, [r4]
 800b0a2:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 800b0a6:	f8b4 8004 	ldrh.w	r8, [r4, #4]
 800b0aa:	4290      	cmp	r0, r2
 800b0ac:	4607      	mov	r7, r0
 800b0ae:	bfa8      	it	ge
 800b0b0:	4617      	movge	r7, r2
 800b0b2:	4472      	add	r2, lr
 800b0b4:	f8b4 e006 	ldrh.w	lr, [r4, #6]
 800b0b8:	8027      	strh	r7, [r4, #0]
 800b0ba:	4299      	cmp	r1, r3
 800b0bc:	460e      	mov	r6, r1
 800b0be:	4440      	add	r0, r8
 800b0c0:	bfa8      	it	ge
 800b0c2:	461e      	movge	r6, r3
 800b0c4:	4471      	add	r1, lr
 800b0c6:	4463      	add	r3, ip
 800b0c8:	b200      	sxth	r0, r0
 800b0ca:	b212      	sxth	r2, r2
 800b0cc:	b209      	sxth	r1, r1
 800b0ce:	b21b      	sxth	r3, r3
 800b0d0:	4290      	cmp	r0, r2
 800b0d2:	bfac      	ite	ge
 800b0d4:	ebc7 0200 	rsbge	r2, r7, r0
 800b0d8:	ebc7 0202 	rsblt	r2, r7, r2
 800b0dc:	4299      	cmp	r1, r3
 800b0de:	bfac      	ite	ge
 800b0e0:	ebc6 0301 	rsbge	r3, r6, r1
 800b0e4:	ebc6 0303 	rsblt	r3, r6, r3
 800b0e8:	8066      	strh	r6, [r4, #2]
 800b0ea:	80a2      	strh	r2, [r4, #4]
 800b0ec:	80e3      	strh	r3, [r4, #6]
 800b0ee:	e7d4      	b.n	800b09a <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 800b0f0:	4620      	mov	r0, r4
 800b0f2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800b0f6 <_ZNK8touchgfx9Container4drawERKNS_4RectE>:
 800b0f6:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800b0fa:	f890 3025 	ldrb.w	r3, [r0, #37]	@ 0x25
 800b0fe:	b383      	cbz	r3, 800b162 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 800b100:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 800b102:	b374      	cbz	r4, 800b162 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 800b104:	f9b1 5000 	ldrsh.w	r5, [r1]
 800b108:	f9b1 6002 	ldrsh.w	r6, [r1, #2]
 800b10c:	f9b1 7004 	ldrsh.w	r7, [r1, #4]
 800b110:	f9b1 8006 	ldrsh.w	r8, [r1, #6]
 800b114:	f894 3025 	ldrb.w	r3, [r4, #37]	@ 0x25
 800b118:	b303      	cbz	r3, 800b15c <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 800b11a:	4668      	mov	r0, sp
 800b11c:	1d21      	adds	r1, r4, #4
 800b11e:	f8ad 5000 	strh.w	r5, [sp]
 800b122:	f8ad 6002 	strh.w	r6, [sp, #2]
 800b126:	f8ad 7004 	strh.w	r7, [sp, #4]
 800b12a:	f8ad 8006 	strh.w	r8, [sp, #6]
 800b12e:	f7ff ff43 	bl	800afb8 <_ZN8touchgfx4RectaNERKS0_>
 800b132:	4668      	mov	r0, sp
 800b134:	f7ff ff83 	bl	800b03e <_ZNK8touchgfx4Rect7isEmptyEv>
 800b138:	b980      	cbnz	r0, 800b15c <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 800b13a:	f8bd 3000 	ldrh.w	r3, [sp]
 800b13e:	88a2      	ldrh	r2, [r4, #4]
 800b140:	1a9b      	subs	r3, r3, r2
 800b142:	f8ad 3000 	strh.w	r3, [sp]
 800b146:	88e2      	ldrh	r2, [r4, #6]
 800b148:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800b14c:	1a9b      	subs	r3, r3, r2
 800b14e:	f8ad 3002 	strh.w	r3, [sp, #2]
 800b152:	6823      	ldr	r3, [r4, #0]
 800b154:	4669      	mov	r1, sp
 800b156:	689b      	ldr	r3, [r3, #8]
 800b158:	4620      	mov	r0, r4
 800b15a:	4798      	blx	r3
 800b15c:	69a4      	ldr	r4, [r4, #24]
 800b15e:	2c00      	cmp	r4, #0
 800b160:	d1d8      	bne.n	800b114 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x1e>
 800b162:	b002      	add	sp, #8
 800b164:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800b168 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>:
 800b168:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800b16a:	f890 3025 	ldrb.w	r3, [r0, #37]	@ 0x25
 800b16e:	460d      	mov	r5, r1
 800b170:	4616      	mov	r6, r2
 800b172:	b323      	cbz	r3, 800b1be <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 800b174:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 800b176:	b314      	cbz	r4, 800b1be <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 800b178:	f894 3025 	ldrb.w	r3, [r4, #37]	@ 0x25
 800b17c:	b1eb      	cbz	r3, 800b1ba <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 800b17e:	6828      	ldr	r0, [r5, #0]
 800b180:	6869      	ldr	r1, [r5, #4]
 800b182:	466b      	mov	r3, sp
 800b184:	c303      	stmia	r3!, {r0, r1}
 800b186:	4668      	mov	r0, sp
 800b188:	1d21      	adds	r1, r4, #4
 800b18a:	f7ff ff15 	bl	800afb8 <_ZN8touchgfx4RectaNERKS0_>
 800b18e:	4668      	mov	r0, sp
 800b190:	f7ff ff55 	bl	800b03e <_ZNK8touchgfx4Rect7isEmptyEv>
 800b194:	b988      	cbnz	r0, 800b1ba <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 800b196:	f8bd 3000 	ldrh.w	r3, [sp]
 800b19a:	88a2      	ldrh	r2, [r4, #4]
 800b19c:	1a9b      	subs	r3, r3, r2
 800b19e:	f8ad 3000 	strh.w	r3, [sp]
 800b1a2:	88e2      	ldrh	r2, [r4, #6]
 800b1a4:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800b1a8:	1a9b      	subs	r3, r3, r2
 800b1aa:	f8ad 3002 	strh.w	r3, [sp, #2]
 800b1ae:	6823      	ldr	r3, [r4, #0]
 800b1b0:	4632      	mov	r2, r6
 800b1b2:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 800b1b4:	4669      	mov	r1, sp
 800b1b6:	4620      	mov	r0, r4
 800b1b8:	4798      	blx	r3
 800b1ba:	69a4      	ldr	r4, [r4, #24]
 800b1bc:	e7db      	b.n	800b176 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0xe>
 800b1be:	b002      	add	sp, #8
 800b1c0:	bd70      	pop	{r4, r5, r6, pc}

0800b1c2 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt>:
 800b1c2:	b513      	push	{r0, r1, r4, lr}
 800b1c4:	6803      	ldr	r3, [r0, #0]
 800b1c6:	f8d3 40b4 	ldr.w	r4, [r3, #180]	@ 0xb4
 800b1ca:	2300      	movs	r3, #0
 800b1cc:	e9cd 3300 	strd	r3, r3, [sp]
 800b1d0:	466b      	mov	r3, sp
 800b1d2:	47a0      	blx	r4
 800b1d4:	b002      	add	sp, #8
 800b1d6:	bd10      	pop	{r4, pc}

0800b1d8 <_ZN8touchgfx3HAL16flushFrameBufferEv>:
 800b1d8:	2301      	movs	r3, #1
 800b1da:	f880 304b 	strb.w	r3, [r0, #75]	@ 0x4b
 800b1de:	f880 306d 	strb.w	r3, [r0, #109]	@ 0x6d
 800b1e2:	4770      	bx	lr

0800b1e4 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>:
 800b1e4:	2301      	movs	r3, #1
 800b1e6:	f880 304b 	strb.w	r3, [r0, #75]	@ 0x4b
 800b1ea:	f880 306d 	strb.w	r3, [r0, #109]	@ 0x6d
 800b1ee:	4770      	bx	lr

0800b1f0 <_ZN8touchgfx3HAL17allowDMATransfersEv>:
 800b1f0:	6843      	ldr	r3, [r0, #4]
 800b1f2:	2201      	movs	r2, #1
 800b1f4:	725a      	strb	r2, [r3, #9]
 800b1f6:	6840      	ldr	r0, [r0, #4]
 800b1f8:	6803      	ldr	r3, [r0, #0]
 800b1fa:	691b      	ldr	r3, [r3, #16]
 800b1fc:	4718      	bx	r3

0800b1fe <_ZN8touchgfx3HAL8flushDMAEv>:
 800b1fe:	6840      	ldr	r0, [r0, #4]
 800b200:	6803      	ldr	r3, [r0, #0]
 800b202:	689b      	ldr	r3, [r3, #8]
 800b204:	4718      	bx	r3

0800b206 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_b>:
 800b206:	b530      	push	{r4, r5, lr}
 800b208:	b08b      	sub	sp, #44	@ 0x2c
 800b20a:	6804      	ldr	r4, [r0, #0]
 800b20c:	f89d 5058 	ldrb.w	r5, [sp, #88]	@ 0x58
 800b210:	9509      	str	r5, [sp, #36]	@ 0x24
 800b212:	f89d 5054 	ldrb.w	r5, [sp, #84]	@ 0x54
 800b216:	9508      	str	r5, [sp, #32]
 800b218:	f89d 5050 	ldrb.w	r5, [sp, #80]	@ 0x50
 800b21c:	9507      	str	r5, [sp, #28]
 800b21e:	f8bd 504c 	ldrh.w	r5, [sp, #76]	@ 0x4c
 800b222:	9506      	str	r5, [sp, #24]
 800b224:	f89d 5048 	ldrb.w	r5, [sp, #72]	@ 0x48
 800b228:	9505      	str	r5, [sp, #20]
 800b22a:	f89d 5044 	ldrb.w	r5, [sp, #68]	@ 0x44
 800b22e:	9504      	str	r5, [sp, #16]
 800b230:	f8bd 5040 	ldrh.w	r5, [sp, #64]	@ 0x40
 800b234:	9503      	str	r5, [sp, #12]
 800b236:	f8bd 503c 	ldrh.w	r5, [sp, #60]	@ 0x3c
 800b23a:	9502      	str	r5, [sp, #8]
 800b23c:	f8bd 5038 	ldrh.w	r5, [sp, #56]	@ 0x38
 800b240:	e9cd 3500 	strd	r3, r5, [sp]
 800b244:	4613      	mov	r3, r2
 800b246:	6c24      	ldr	r4, [r4, #64]	@ 0x40
 800b248:	2200      	movs	r2, #0
 800b24a:	47a0      	blx	r4
 800b24c:	b00b      	add	sp, #44	@ 0x2c
 800b24e:	bd30      	pop	{r4, r5, pc}

0800b250 <_ZN8touchgfx3HAL10beginFrameEv>:
 800b250:	4b04      	ldr	r3, [pc, #16]	@ (800b264 <_ZN8touchgfx3HAL10beginFrameEv+0x14>)
 800b252:	781b      	ldrb	r3, [r3, #0]
 800b254:	b123      	cbz	r3, 800b260 <_ZN8touchgfx3HAL10beginFrameEv+0x10>
 800b256:	f890 006e 	ldrb.w	r0, [r0, #110]	@ 0x6e
 800b25a:	f080 0001 	eor.w	r0, r0, #1
 800b25e:	4770      	bx	lr
 800b260:	2001      	movs	r0, #1
 800b262:	4770      	bx	lr
 800b264:	200133d0 	.word	0x200133d0

0800b268 <_ZN8touchgfx3HAL8endFrameEv>:
 800b268:	b510      	push	{r4, lr}
 800b26a:	4604      	mov	r4, r0
 800b26c:	6840      	ldr	r0, [r0, #4]
 800b26e:	6803      	ldr	r3, [r0, #0]
 800b270:	689b      	ldr	r3, [r3, #8]
 800b272:	4798      	blx	r3
 800b274:	f894 306d 	ldrb.w	r3, [r4, #109]	@ 0x6d
 800b278:	b113      	cbz	r3, 800b280 <_ZN8touchgfx3HAL8endFrameEv+0x18>
 800b27a:	2301      	movs	r3, #1
 800b27c:	f884 306e 	strb.w	r3, [r4, #110]	@ 0x6e
 800b280:	bd10      	pop	{r4, pc}

0800b282 <_ZN8touchgfx3HAL10initializeEv>:
 800b282:	b510      	push	{r4, lr}
 800b284:	4604      	mov	r4, r0
 800b286:	f7f6 f91b 	bl	80014c0 <_ZN8touchgfx10OSWrappers10initializeEv>
 800b28a:	f7f6 f823 	bl	80012d4 <_ZN8touchgfx4GPIO4initEv>
 800b28e:	6860      	ldr	r0, [r4, #4]
 800b290:	6803      	ldr	r3, [r0, #0]
 800b292:	68db      	ldr	r3, [r3, #12]
 800b294:	4798      	blx	r3
 800b296:	68e0      	ldr	r0, [r4, #12]
 800b298:	6803      	ldr	r3, [r0, #0]
 800b29a:	689b      	ldr	r3, [r3, #8]
 800b29c:	4798      	blx	r3
 800b29e:	6823      	ldr	r3, [r4, #0]
 800b2a0:	4620      	mov	r0, r4
 800b2a2:	6f9b      	ldr	r3, [r3, #120]	@ 0x78
 800b2a4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800b2a8:	4718      	bx	r3
	...

0800b2ac <_ZN8touchgfx3HAL4tickEv>:
 800b2ac:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800b2ae:	6803      	ldr	r3, [r0, #0]
 800b2b0:	4d62      	ldr	r5, [pc, #392]	@ (800b43c <_ZN8touchgfx3HAL4tickEv+0x190>)
 800b2b2:	f8d3 30c0 	ldr.w	r3, [r3, #192]	@ 0xc0
 800b2b6:	4604      	mov	r4, r0
 800b2b8:	4798      	blx	r3
 800b2ba:	2800      	cmp	r0, #0
 800b2bc:	f000 809e 	beq.w	800b3fc <_ZN8touchgfx3HAL4tickEv+0x150>
 800b2c0:	f894 3048 	ldrb.w	r3, [r4, #72]	@ 0x48
 800b2c4:	2b02      	cmp	r3, #2
 800b2c6:	d002      	beq.n	800b2ce <_ZN8touchgfx3HAL4tickEv+0x22>
 800b2c8:	2001      	movs	r0, #1
 800b2ca:	f7f5 ff81 	bl	80011d0 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 800b2ce:	f894 306a 	ldrb.w	r3, [r4, #106]	@ 0x6a
 800b2d2:	f884 306b 	strb.w	r3, [r4, #107]	@ 0x6b
 800b2d6:	f894 3079 	ldrb.w	r3, [r4, #121]	@ 0x79
 800b2da:	2600      	movs	r6, #0
 800b2dc:	f884 606a 	strb.w	r6, [r4, #106]	@ 0x6a
 800b2e0:	f884 604b 	strb.w	r6, [r4, #75]	@ 0x4b
 800b2e4:	b133      	cbz	r3, 800b2f4 <_ZN8touchgfx3HAL4tickEv+0x48>
 800b2e6:	6823      	ldr	r3, [r4, #0]
 800b2e8:	4620      	mov	r0, r4
 800b2ea:	f8d3 30d4 	ldr.w	r3, [r3, #212]	@ 0xd4
 800b2ee:	4798      	blx	r3
 800b2f0:	f884 6079 	strb.w	r6, [r4, #121]	@ 0x79
 800b2f4:	f894 304a 	ldrb.w	r3, [r4, #74]	@ 0x4a
 800b2f8:	6862      	ldr	r2, [r4, #4]
 800b2fa:	f083 0301 	eor.w	r3, r3, #1
 800b2fe:	7253      	strb	r3, [r2, #9]
 800b300:	2601      	movs	r6, #1
 800b302:	702e      	strb	r6, [r5, #0]
 800b304:	f004 fb06 	bl	800f914 <_ZN8touchgfx11Application11getInstanceEv>
 800b308:	6803      	ldr	r3, [r0, #0]
 800b30a:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800b30c:	4798      	blx	r3
 800b30e:	f894 306b 	ldrb.w	r3, [r4, #107]	@ 0x6b
 800b312:	b90b      	cbnz	r3, 800b318 <_ZN8touchgfx3HAL4tickEv+0x6c>
 800b314:	f884 606b 	strb.w	r6, [r4, #107]	@ 0x6b
 800b318:	f004 fafc 	bl	800f914 <_ZN8touchgfx11Application11getInstanceEv>
 800b31c:	6803      	ldr	r3, [r0, #0]
 800b31e:	695b      	ldr	r3, [r3, #20]
 800b320:	4798      	blx	r3
 800b322:	6de0      	ldr	r0, [r4, #92]	@ 0x5c
 800b324:	6803      	ldr	r3, [r0, #0]
 800b326:	691b      	ldr	r3, [r3, #16]
 800b328:	4798      	blx	r3
 800b32a:	f894 306b 	ldrb.w	r3, [r4, #107]	@ 0x6b
 800b32e:	f894 206c 	ldrb.w	r2, [r4, #108]	@ 0x6c
 800b332:	3b01      	subs	r3, #1
 800b334:	b2db      	uxtb	r3, r3
 800b336:	f884 306b 	strb.w	r3, [r4, #107]	@ 0x6b
 800b33a:	b10a      	cbz	r2, 800b340 <_ZN8touchgfx3HAL4tickEv+0x94>
 800b33c:	2b00      	cmp	r3, #0
 800b33e:	d1eb      	bne.n	800b318 <_ZN8touchgfx3HAL4tickEv+0x6c>
 800b340:	4a3f      	ldr	r2, [pc, #252]	@ (800b440 <_ZN8touchgfx3HAL4tickEv+0x194>)
 800b342:	f994 1068 	ldrsb.w	r1, [r4, #104]	@ 0x68
 800b346:	7813      	ldrb	r3, [r2, #0]
 800b348:	3301      	adds	r3, #1
 800b34a:	b25b      	sxtb	r3, r3
 800b34c:	4299      	cmp	r1, r3
 800b34e:	7013      	strb	r3, [r2, #0]
 800b350:	dc10      	bgt.n	800b374 <_ZN8touchgfx3HAL4tickEv+0xc8>
 800b352:	68e0      	ldr	r0, [r4, #12]
 800b354:	2300      	movs	r3, #0
 800b356:	7013      	strb	r3, [r2, #0]
 800b358:	6803      	ldr	r3, [r0, #0]
 800b35a:	aa03      	add	r2, sp, #12
 800b35c:	68db      	ldr	r3, [r3, #12]
 800b35e:	a902      	add	r1, sp, #8
 800b360:	4798      	blx	r3
 800b362:	6823      	ldr	r3, [r4, #0]
 800b364:	2800      	cmp	r0, #0
 800b366:	d059      	beq.n	800b41c <_ZN8touchgfx3HAL4tickEv+0x170>
 800b368:	f8d3 30cc 	ldr.w	r3, [r3, #204]	@ 0xcc
 800b36c:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 800b370:	4620      	mov	r0, r4
 800b372:	4798      	blx	r3
 800b374:	6960      	ldr	r0, [r4, #20]
 800b376:	2300      	movs	r3, #0
 800b378:	f88d 3007 	strb.w	r3, [sp, #7]
 800b37c:	b158      	cbz	r0, 800b396 <_ZN8touchgfx3HAL4tickEv+0xea>
 800b37e:	6803      	ldr	r3, [r0, #0]
 800b380:	f10d 0107 	add.w	r1, sp, #7
 800b384:	68db      	ldr	r3, [r3, #12]
 800b386:	4798      	blx	r3
 800b388:	b128      	cbz	r0, 800b396 <_ZN8touchgfx3HAL4tickEv+0xea>
 800b38a:	6de0      	ldr	r0, [r4, #92]	@ 0x5c
 800b38c:	f89d 1007 	ldrb.w	r1, [sp, #7]
 800b390:	6803      	ldr	r3, [r0, #0]
 800b392:	68db      	ldr	r3, [r3, #12]
 800b394:	4798      	blx	r3
 800b396:	f104 001c 	add.w	r0, r4, #28
 800b39a:	f015 fec3 	bl	8021124 <_ZN8touchgfx8Gestures4tickEv>
 800b39e:	f894 3070 	ldrb.w	r3, [r4, #112]	@ 0x70
 800b3a2:	b30b      	cbz	r3, 800b3e8 <_ZN8touchgfx3HAL4tickEv+0x13c>
 800b3a4:	6920      	ldr	r0, [r4, #16]
 800b3a6:	6803      	ldr	r3, [r0, #0]
 800b3a8:	691b      	ldr	r3, [r3, #16]
 800b3aa:	4798      	blx	r3
 800b3ac:	6f63      	ldr	r3, [r4, #116]	@ 0x74
 800b3ae:	4606      	mov	r6, r0
 800b3b0:	b903      	cbnz	r3, 800b3b4 <_ZN8touchgfx3HAL4tickEv+0x108>
 800b3b2:	6760      	str	r0, [r4, #116]	@ 0x74
 800b3b4:	6f63      	ldr	r3, [r4, #116]	@ 0x74
 800b3b6:	4a23      	ldr	r2, [pc, #140]	@ (800b444 <_ZN8touchgfx3HAL4tickEv+0x198>)
 800b3b8:	1af3      	subs	r3, r6, r3
 800b3ba:	4293      	cmp	r3, r2
 800b3bc:	d914      	bls.n	800b3e8 <_ZN8touchgfx3HAL4tickEv+0x13c>
 800b3be:	6920      	ldr	r0, [r4, #16]
 800b3c0:	6803      	ldr	r3, [r0, #0]
 800b3c2:	699b      	ldr	r3, [r3, #24]
 800b3c4:	4798      	blx	r3
 800b3c6:	6f63      	ldr	r3, [r4, #116]	@ 0x74
 800b3c8:	2264      	movs	r2, #100	@ 0x64
 800b3ca:	1af3      	subs	r3, r6, r3
 800b3cc:	fbb3 f3f2 	udiv	r3, r3, r2
 800b3d0:	fbb0 f0f3 	udiv	r0, r0, r3
 800b3d4:	2800      	cmp	r0, #0
 800b3d6:	dc26      	bgt.n	800b426 <_ZN8touchgfx3HAL4tickEv+0x17a>
 800b3d8:	f884 2069 	strb.w	r2, [r4, #105]	@ 0x69
 800b3dc:	6920      	ldr	r0, [r4, #16]
 800b3de:	6803      	ldr	r3, [r0, #0]
 800b3e0:	2100      	movs	r1, #0
 800b3e2:	69db      	ldr	r3, [r3, #28]
 800b3e4:	4798      	blx	r3
 800b3e6:	6766      	str	r6, [r4, #116]	@ 0x74
 800b3e8:	6823      	ldr	r3, [r4, #0]
 800b3ea:	4620      	mov	r0, r4
 800b3ec:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 800b3f0:	4798      	blx	r3
 800b3f2:	f004 fa8f 	bl	800f914 <_ZN8touchgfx11Application11getInstanceEv>
 800b3f6:	6803      	ldr	r3, [r0, #0]
 800b3f8:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800b3fa:	4798      	blx	r3
 800b3fc:	6823      	ldr	r3, [r4, #0]
 800b3fe:	4620      	mov	r0, r4
 800b400:	f8d3 30c4 	ldr.w	r3, [r3, #196]	@ 0xc4
 800b404:	4798      	blx	r3
 800b406:	f894 3048 	ldrb.w	r3, [r4, #72]	@ 0x48
 800b40a:	2b02      	cmp	r3, #2
 800b40c:	d002      	beq.n	800b414 <_ZN8touchgfx3HAL4tickEv+0x168>
 800b40e:	2001      	movs	r0, #1
 800b410:	f7f5 ff08 	bl	8001224 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 800b414:	2300      	movs	r3, #0
 800b416:	702b      	strb	r3, [r5, #0]
 800b418:	b004      	add	sp, #16
 800b41a:	bd70      	pop	{r4, r5, r6, pc}
 800b41c:	f8d3 30d0 	ldr.w	r3, [r3, #208]	@ 0xd0
 800b420:	4620      	mov	r0, r4
 800b422:	4798      	blx	r3
 800b424:	e7a6      	b.n	800b374 <_ZN8touchgfx3HAL4tickEv+0xc8>
 800b426:	2863      	cmp	r0, #99	@ 0x63
 800b428:	bfcb      	itete	gt
 800b42a:	2300      	movgt	r3, #0
 800b42c:	f1c0 0064 	rsble	r0, r0, #100	@ 0x64
 800b430:	f884 3069 	strbgt.w	r3, [r4, #105]	@ 0x69
 800b434:	f884 0069 	strble.w	r0, [r4, #105]	@ 0x69
 800b438:	e7d0      	b.n	800b3dc <_ZN8touchgfx3HAL4tickEv+0x130>
 800b43a:	bf00      	nop
 800b43c:	200133d8 	.word	0x200133d8
 800b440:	200133d9 	.word	0x200133d9
 800b444:	05f5e100 	.word	0x05f5e100

0800b448 <_ZN8touchgfx3HAL17unlockFrameBufferEv>:
 800b448:	b510      	push	{r4, lr}
 800b44a:	4604      	mov	r4, r0
 800b44c:	f7f6 f868 	bl	8001520 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>
 800b450:	6863      	ldr	r3, [r4, #4]
 800b452:	2200      	movs	r2, #0
 800b454:	729a      	strb	r2, [r3, #10]
 800b456:	bd10      	pop	{r4, pc}

0800b458 <_ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE>:
 800b458:	65c1      	str	r1, [r0, #92]	@ 0x5c
 800b45a:	301c      	adds	r0, #28
 800b45c:	f015 be60 	b.w	8021120 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>

0800b460 <_ZN8touchgfx3HAL5touchEll>:
 800b460:	b530      	push	{r4, r5, lr}
 800b462:	b087      	sub	sp, #28
 800b464:	4604      	mov	r4, r0
 800b466:	a804      	add	r0, sp, #16
 800b468:	e9cd 1204 	strd	r1, r2, [sp, #16]
 800b46c:	f004 f83a 	bl	800f4e4 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>
 800b470:	9b04      	ldr	r3, [sp, #16]
 800b472:	f8ad 300c 	strh.w	r3, [sp, #12]
 800b476:	a906      	add	r1, sp, #24
 800b478:	9b05      	ldr	r3, [sp, #20]
 800b47a:	f821 3d0a 	strh.w	r3, [r1, #-10]!
 800b47e:	a803      	add	r0, sp, #12
 800b480:	f004 f882 	bl	800f588 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>
 800b484:	f894 106f 	ldrb.w	r1, [r4, #111]	@ 0x6f
 800b488:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 800b48c:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 800b490:	f104 001c 	add.w	r0, r4, #28
 800b494:	b189      	cbz	r1, 800b4ba <_ZN8touchgfx3HAL5touchEll+0x5a>
 800b496:	f8b4 5064 	ldrh.w	r5, [r4, #100]	@ 0x64
 800b49a:	9300      	str	r3, [sp, #0]
 800b49c:	f8b4 1060 	ldrh.w	r1, [r4, #96]	@ 0x60
 800b4a0:	4613      	mov	r3, r2
 800b4a2:	462a      	mov	r2, r5
 800b4a4:	f015 fe4c 	bl	8021140 <_ZN8touchgfx8Gestures17registerDragEventEtttt>
 800b4a8:	b128      	cbz	r0, 800b4b6 <_ZN8touchgfx3HAL5touchEll+0x56>
 800b4aa:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 800b4ae:	6623      	str	r3, [r4, #96]	@ 0x60
 800b4b0:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 800b4b4:	6663      	str	r3, [r4, #100]	@ 0x64
 800b4b6:	b007      	add	sp, #28
 800b4b8:	bd30      	pop	{r4, r5, pc}
 800b4ba:	f015 fe81 	bl	80211c0 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 800b4be:	2301      	movs	r3, #1
 800b4c0:	f884 306f 	strb.w	r3, [r4, #111]	@ 0x6f
 800b4c4:	e7f1      	b.n	800b4aa <_ZN8touchgfx3HAL5touchEll+0x4a>

0800b4c6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm>:
 800b4c6:	b510      	push	{r4, lr}
 800b4c8:	2b00      	cmp	r3, #0
 800b4ca:	d046      	beq.n	800b55a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800b4cc:	ea81 0002 	eor.w	r0, r1, r2
 800b4d0:	07c4      	lsls	r4, r0, #31
 800b4d2:	d508      	bpl.n	800b4e6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x20>
 800b4d4:	440b      	add	r3, r1
 800b4d6:	3a01      	subs	r2, #1
 800b4d8:	428b      	cmp	r3, r1
 800b4da:	d93e      	bls.n	800b55a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800b4dc:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800b4e0:	f801 0b01 	strb.w	r0, [r1], #1
 800b4e4:	e7f8      	b.n	800b4d8 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x12>
 800b4e6:	07d0      	lsls	r0, r2, #31
 800b4e8:	bf42      	ittt	mi
 800b4ea:	f812 0b01 	ldrbmi.w	r0, [r2], #1
 800b4ee:	f801 0b01 	strbmi.w	r0, [r1], #1
 800b4f2:	f103 33ff 	addmi.w	r3, r3, #4294967295
 800b4f6:	2b01      	cmp	r3, #1
 800b4f8:	d911      	bls.n	800b51e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800b4fa:	ea81 0402 	eor.w	r4, r1, r2
 800b4fe:	07a4      	lsls	r4, r4, #30
 800b500:	4610      	mov	r0, r2
 800b502:	d022      	beq.n	800b54a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x84>
 800b504:	f023 0401 	bic.w	r4, r3, #1
 800b508:	440c      	add	r4, r1
 800b50a:	428c      	cmp	r4, r1
 800b50c:	4602      	mov	r2, r0
 800b50e:	d904      	bls.n	800b51a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x54>
 800b510:	8812      	ldrh	r2, [r2, #0]
 800b512:	f821 2b02 	strh.w	r2, [r1], #2
 800b516:	3002      	adds	r0, #2
 800b518:	e7f7      	b.n	800b50a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x44>
 800b51a:	f003 0301 	and.w	r3, r3, #1
 800b51e:	f023 0003 	bic.w	r0, r3, #3
 800b522:	4408      	add	r0, r1
 800b524:	4288      	cmp	r0, r1
 800b526:	4614      	mov	r4, r2
 800b528:	d904      	bls.n	800b534 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x6e>
 800b52a:	6824      	ldr	r4, [r4, #0]
 800b52c:	f841 4b04 	str.w	r4, [r1], #4
 800b530:	3204      	adds	r2, #4
 800b532:	e7f7      	b.n	800b524 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x5e>
 800b534:	f003 0303 	and.w	r3, r3, #3
 800b538:	440b      	add	r3, r1
 800b53a:	3a01      	subs	r2, #1
 800b53c:	428b      	cmp	r3, r1
 800b53e:	d90c      	bls.n	800b55a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800b540:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800b544:	f801 0b01 	strb.w	r0, [r1], #1
 800b548:	e7f8      	b.n	800b53c <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x76>
 800b54a:	0790      	lsls	r0, r2, #30
 800b54c:	d0e7      	beq.n	800b51e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800b54e:	f832 0b02 	ldrh.w	r0, [r2], #2
 800b552:	f821 0b02 	strh.w	r0, [r1], #2
 800b556:	3b02      	subs	r3, #2
 800b558:	e7e1      	b.n	800b51e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800b55a:	2001      	movs	r0, #1
 800b55c:	bd10      	pop	{r4, pc}

0800b55e <_ZN8touchgfx3HAL7noTouchEv>:
 800b55e:	b510      	push	{r4, lr}
 800b560:	f890 306f 	ldrb.w	r3, [r0, #111]	@ 0x6f
 800b564:	4604      	mov	r4, r0
 800b566:	b153      	cbz	r3, 800b57e <_ZN8touchgfx3HAL7noTouchEv+0x20>
 800b568:	f8b0 3064 	ldrh.w	r3, [r0, #100]	@ 0x64
 800b56c:	f8b0 2060 	ldrh.w	r2, [r0, #96]	@ 0x60
 800b570:	2101      	movs	r1, #1
 800b572:	301c      	adds	r0, #28
 800b574:	f015 fe24 	bl	80211c0 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 800b578:	2300      	movs	r3, #0
 800b57a:	f884 306f 	strb.w	r3, [r4, #111]	@ 0x6f
 800b57e:	bd10      	pop	{r4, pc}

0800b580 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt>:
 800b580:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800b584:	b085      	sub	sp, #20
 800b586:	ad04      	add	r5, sp, #16
 800b588:	4604      	mov	r4, r0
 800b58a:	2000      	movs	r0, #0
 800b58c:	f845 0d04 	str.w	r0, [r5, #-4]!
 800b590:	69a0      	ldr	r0, [r4, #24]
 800b592:	6806      	ldr	r6, [r0, #0]
 800b594:	9501      	str	r5, [sp, #4]
 800b596:	f8bd 5030 	ldrh.w	r5, [sp, #48]	@ 0x30
 800b59a:	9500      	str	r5, [sp, #0]
 800b59c:	6835      	ldr	r5, [r6, #0]
 800b59e:	4699      	mov	r9, r3
 800b5a0:	460f      	mov	r7, r1
 800b5a2:	4690      	mov	r8, r2
 800b5a4:	47a8      	blx	r5
 800b5a6:	4d10      	ldr	r5, [pc, #64]	@ (800b5e8 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x68>)
 800b5a8:	4606      	mov	r6, r0
 800b5aa:	f8a5 9000 	strh.w	r9, [r5]
 800b5ae:	f7f7 ff0b 	bl	80033c8 <_ZN8touchgfx3HAL3lcdEv>
 800b5b2:	6803      	ldr	r3, [r0, #0]
 800b5b4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800b5b6:	4798      	blx	r3
 800b5b8:	b128      	cbz	r0, 800b5c6 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x46>
 800b5ba:	2801      	cmp	r0, #1
 800b5bc:	d00b      	beq.n	800b5d6 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x56>
 800b5be:	4630      	mov	r0, r6
 800b5c0:	b005      	add	sp, #20
 800b5c2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800b5c6:	882b      	ldrh	r3, [r5, #0]
 800b5c8:	fb08 7203 	mla	r2, r8, r3, r7
 800b5cc:	9b03      	ldr	r3, [sp, #12]
 800b5ce:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
 800b5d2:	63e3      	str	r3, [r4, #60]	@ 0x3c
 800b5d4:	e7f3      	b.n	800b5be <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 800b5d6:	882a      	ldrh	r2, [r5, #0]
 800b5d8:	9b03      	ldr	r3, [sp, #12]
 800b5da:	fb08 7202 	mla	r2, r8, r2, r7
 800b5de:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 800b5e2:	1a9a      	subs	r2, r3, r2
 800b5e4:	63e2      	str	r2, [r4, #60]	@ 0x3c
 800b5e6:	e7ea      	b.n	800b5be <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 800b5e8:	200133cc 	.word	0x200133cc

0800b5ec <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs>:
 800b5ec:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800b5ee:	4b15      	ldr	r3, [pc, #84]	@ (800b644 <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x58>)
 800b5f0:	f890 407d 	ldrb.w	r4, [r0, #125]	@ 0x7d
 800b5f4:	881b      	ldrh	r3, [r3, #0]
 800b5f6:	6bc5      	ldr	r5, [r0, #60]	@ 0x3c
 800b5f8:	fb93 f4f4 	sdiv	r4, r3, r4
 800b5fc:	460f      	mov	r7, r1
 800b5fe:	4606      	mov	r6, r0
 800b600:	f7f7 fee2 	bl	80033c8 <_ZN8touchgfx3HAL3lcdEv>
 800b604:	6803      	ldr	r3, [r0, #0]
 800b606:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800b608:	4798      	blx	r3
 800b60a:	2801      	cmp	r0, #1
 800b60c:	d00b      	beq.n	800b626 <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x3a>
 800b60e:	d303      	bcc.n	800b618 <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x2c>
 800b610:	2802      	cmp	r0, #2
 800b612:	d010      	beq.n	800b636 <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x4a>
 800b614:	63f5      	str	r5, [r6, #60]	@ 0x3c
 800b616:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800b618:	4b0b      	ldr	r3, [pc, #44]	@ (800b648 <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x5c>)
 800b61a:	8819      	ldrh	r1, [r3, #0]
 800b61c:	437c      	muls	r4, r7
 800b61e:	434c      	muls	r4, r1
 800b620:	eba5 0544 	sub.w	r5, r5, r4, lsl #1
 800b624:	e7f6      	b.n	800b614 <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x28>
 800b626:	4b08      	ldr	r3, [pc, #32]	@ (800b648 <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x5c>)
 800b628:	8819      	ldrh	r1, [r3, #0]
 800b62a:	437c      	muls	r4, r7
 800b62c:	434c      	muls	r4, r1
 800b62e:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 800b632:	1b2d      	subs	r5, r5, r4
 800b634:	e7ee      	b.n	800b614 <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x28>
 800b636:	4b04      	ldr	r3, [pc, #16]	@ (800b648 <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x5c>)
 800b638:	8819      	ldrh	r1, [r3, #0]
 800b63a:	437c      	muls	r4, r7
 800b63c:	434c      	muls	r4, r1
 800b63e:	eba5 0584 	sub.w	r5, r5, r4, lsl #2
 800b642:	e7e7      	b.n	800b614 <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x28>
 800b644:	200133ce 	.word	0x200133ce
 800b648:	200133cc 	.word	0x200133cc

0800b64c <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb>:
 800b64c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800b64e:	b08b      	sub	sp, #44	@ 0x2c
 800b650:	4617      	mov	r7, r2
 800b652:	4604      	mov	r4, r0
 800b654:	460e      	mov	r6, r1
 800b656:	461d      	mov	r5, r3
 800b658:	f7f7 feb6 	bl	80033c8 <_ZN8touchgfx3HAL3lcdEv>
 800b65c:	6803      	ldr	r3, [r0, #0]
 800b65e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800b660:	4798      	blx	r3
 800b662:	f89d 3054 	ldrb.w	r3, [sp, #84]	@ 0x54
 800b666:	9007      	str	r0, [sp, #28]
 800b668:	e9cd 0308 	strd	r0, r3, [sp, #32]
 800b66c:	4b0d      	ldr	r3, [pc, #52]	@ (800b6a4 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb+0x58>)
 800b66e:	6822      	ldr	r2, [r4, #0]
 800b670:	881b      	ldrh	r3, [r3, #0]
 800b672:	9306      	str	r3, [sp, #24]
 800b674:	f89d 3050 	ldrb.w	r3, [sp, #80]	@ 0x50
 800b678:	9305      	str	r3, [sp, #20]
 800b67a:	f89d 304c 	ldrb.w	r3, [sp, #76]	@ 0x4c
 800b67e:	9304      	str	r3, [sp, #16]
 800b680:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 800b684:	9303      	str	r3, [sp, #12]
 800b686:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 800b68a:	9302      	str	r3, [sp, #8]
 800b68c:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
 800b690:	e9cd 5300 	strd	r5, r3, [sp]
 800b694:	4631      	mov	r1, r6
 800b696:	6c15      	ldr	r5, [r2, #64]	@ 0x40
 800b698:	463b      	mov	r3, r7
 800b69a:	2200      	movs	r2, #0
 800b69c:	4620      	mov	r0, r4
 800b69e:	47a8      	blx	r5
 800b6a0:	b00b      	add	sp, #44	@ 0x2c
 800b6a2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800b6a4:	200133cc 	.word	0x200133cc

0800b6a8 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb>:
 800b6a8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800b6ac:	4698      	mov	r8, r3
 800b6ae:	6803      	ldr	r3, [r0, #0]
 800b6b0:	6c1d      	ldr	r5, [r3, #64]	@ 0x40
 800b6b2:	4b15      	ldr	r3, [pc, #84]	@ (800b708 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb+0x60>)
 800b6b4:	b08b      	sub	sp, #44	@ 0x2c
 800b6b6:	4617      	mov	r7, r2
 800b6b8:	f8b3 9000 	ldrh.w	r9, [r3]
 800b6bc:	460e      	mov	r6, r1
 800b6be:	4604      	mov	r4, r0
 800b6c0:	f7f7 fe82 	bl	80033c8 <_ZN8touchgfx3HAL3lcdEv>
 800b6c4:	6803      	ldr	r3, [r0, #0]
 800b6c6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800b6c8:	4798      	blx	r3
 800b6ca:	f89d 3058 	ldrb.w	r3, [sp, #88]	@ 0x58
 800b6ce:	e9cd 0308 	strd	r0, r3, [sp, #32]
 800b6d2:	2302      	movs	r3, #2
 800b6d4:	e9cd 9306 	strd	r9, r3, [sp, #24]
 800b6d8:	2301      	movs	r3, #1
 800b6da:	9305      	str	r3, [sp, #20]
 800b6dc:	f89d 3054 	ldrb.w	r3, [sp, #84]	@ 0x54
 800b6e0:	9304      	str	r3, [sp, #16]
 800b6e2:	f8bd 3050 	ldrh.w	r3, [sp, #80]	@ 0x50
 800b6e6:	9303      	str	r3, [sp, #12]
 800b6e8:	f8bd 304c 	ldrh.w	r3, [sp, #76]	@ 0x4c
 800b6ec:	9302      	str	r3, [sp, #8]
 800b6ee:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 800b6f2:	2200      	movs	r2, #0
 800b6f4:	e9cd 8300 	strd	r8, r3, [sp]
 800b6f8:	4631      	mov	r1, r6
 800b6fa:	463b      	mov	r3, r7
 800b6fc:	4620      	mov	r0, r4
 800b6fe:	47a8      	blx	r5
 800b700:	b00b      	add	sp, #44	@ 0x2c
 800b702:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800b706:	bf00      	nop
 800b708:	200133cc 	.word	0x200133cc

0800b70c <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb>:
 800b70c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800b710:	4698      	mov	r8, r3
 800b712:	6803      	ldr	r3, [r0, #0]
 800b714:	6ddd      	ldr	r5, [r3, #92]	@ 0x5c
 800b716:	4b11      	ldr	r3, [pc, #68]	@ (800b75c <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb+0x50>)
 800b718:	b087      	sub	sp, #28
 800b71a:	f8b3 9000 	ldrh.w	r9, [r3]
 800b71e:	460e      	mov	r6, r1
 800b720:	4617      	mov	r7, r2
 800b722:	4604      	mov	r4, r0
 800b724:	f7f7 fe50 	bl	80033c8 <_ZN8touchgfx3HAL3lcdEv>
 800b728:	6803      	ldr	r3, [r0, #0]
 800b72a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800b72c:	4798      	blx	r3
 800b72e:	f89d 3044 	ldrb.w	r3, [sp, #68]	@ 0x44
 800b732:	f8cd 900c 	str.w	r9, [sp, #12]
 800b736:	e9cd 0304 	strd	r0, r3, [sp, #16]
 800b73a:	f89d 3040 	ldrb.w	r3, [sp, #64]	@ 0x40
 800b73e:	9302      	str	r3, [sp, #8]
 800b740:	f8bd 303c 	ldrh.w	r3, [sp, #60]	@ 0x3c
 800b744:	9301      	str	r3, [sp, #4]
 800b746:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
 800b74a:	9300      	str	r3, [sp, #0]
 800b74c:	463a      	mov	r2, r7
 800b74e:	4643      	mov	r3, r8
 800b750:	4631      	mov	r1, r6
 800b752:	4620      	mov	r0, r4
 800b754:	47a8      	blx	r5
 800b756:	b007      	add	sp, #28
 800b758:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800b75c:	200133cc 	.word	0x200133cc

0800b760 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE>:
 800b760:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b764:	4604      	mov	r4, r0
 800b766:	b08f      	sub	sp, #60	@ 0x3c
 800b768:	4610      	mov	r0, r2
 800b76a:	460d      	mov	r5, r1
 800b76c:	4691      	mov	r9, r2
 800b76e:	461e      	mov	r6, r3
 800b770:	f007 f9c6 	bl	8012b00 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 800b774:	2800      	cmp	r0, #0
 800b776:	f000 809d 	beq.w	800b8b4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x154>
 800b77a:	6823      	ldr	r3, [r4, #0]
 800b77c:	f8df b198 	ldr.w	fp, [pc, #408]	@ 800b918 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>
 800b780:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800b782:	f8df a198 	ldr.w	sl, [pc, #408]	@ 800b91c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>
 800b786:	4f61      	ldr	r7, [pc, #388]	@ (800b90c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800b788:	4620      	mov	r0, r4
 800b78a:	4798      	blx	r3
 800b78c:	6823      	ldr	r3, [r4, #0]
 800b78e:	4620      	mov	r0, r4
 800b790:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800b792:	4798      	blx	r3
 800b794:	f8bb 3000 	ldrh.w	r3, [fp]
 800b798:	9301      	str	r3, [sp, #4]
 800b79a:	f10d 0838 	add.w	r8, sp, #56	@ 0x38
 800b79e:	f8ba 3000 	ldrh.w	r3, [sl]
 800b7a2:	9302      	str	r3, [sp, #8]
 800b7a4:	883b      	ldrh	r3, [r7, #0]
 800b7a6:	f828 9d1c 	strh.w	r9, [r8, #-28]!
 800b7aa:	9303      	str	r3, [sp, #12]
 800b7ac:	4b58      	ldr	r3, [pc, #352]	@ (800b910 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 800b7ae:	9305      	str	r3, [sp, #20]
 800b7b0:	881a      	ldrh	r2, [r3, #0]
 800b7b2:	9204      	str	r2, [sp, #16]
 800b7b4:	4640      	mov	r0, r8
 800b7b6:	f007 fa37 	bl	8012c28 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800b7ba:	8038      	strh	r0, [r7, #0]
 800b7bc:	4640      	mov	r0, r8
 800b7be:	f007 fa67 	bl	8012c90 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800b7c2:	9b05      	ldr	r3, [sp, #20]
 800b7c4:	b280      	uxth	r0, r0
 800b7c6:	8018      	strh	r0, [r3, #0]
 800b7c8:	4b52      	ldr	r3, [pc, #328]	@ (800b914 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b4>)
 800b7ca:	781b      	ldrb	r3, [r3, #0]
 800b7cc:	2b00      	cmp	r3, #0
 800b7ce:	d174      	bne.n	800b8ba <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x15a>
 800b7d0:	883b      	ldrh	r3, [r7, #0]
 800b7d2:	f8ab 3000 	strh.w	r3, [fp]
 800b7d6:	f8aa 0000 	strh.w	r0, [sl]
 800b7da:	4648      	mov	r0, r9
 800b7dc:	e9d4 870f 	ldrd	r8, r7, [r4, #60]	@ 0x3c
 800b7e0:	f007 f98e 	bl	8012b00 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 800b7e4:	e9c4 000f 	strd	r0, r0, [r4, #60]	@ 0x3c
 800b7e8:	2200      	movs	r2, #0
 800b7ea:	4611      	mov	r1, r2
 800b7ec:	4628      	mov	r0, r5
 800b7ee:	f9b5 9004 	ldrsh.w	r9, [r5, #4]
 800b7f2:	f9b5 a006 	ldrsh.w	sl, [r5, #6]
 800b7f6:	f7f7 ff5c 	bl	80036b2 <_ZN8touchgfx8Drawable5setXYEss>
 800b7fa:	2301      	movs	r3, #1
 800b7fc:	f895 b025 	ldrb.w	fp, [r5, #37]	@ 0x25
 800b800:	f885 3025 	strb.w	r3, [r5, #37]	@ 0x25
 800b804:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 800b808:	2b00      	cmp	r3, #0
 800b80a:	dd5c      	ble.n	800b8c6 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 800b80c:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 800b810:	2b00      	cmp	r3, #0
 800b812:	dd58      	ble.n	800b8c6 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 800b814:	462a      	mov	r2, r5
 800b816:	ab0a      	add	r3, sp, #40	@ 0x28
 800b818:	f852 0f04 	ldr.w	r0, [r2, #4]!
 800b81c:	6851      	ldr	r1, [r2, #4]
 800b81e:	c303      	stmia	r3!, {r0, r1}
 800b820:	4631      	mov	r1, r6
 800b822:	a80a      	add	r0, sp, #40	@ 0x28
 800b824:	f7ff fbc8 	bl	800afb8 <_ZN8touchgfx4RectaNERKS0_>
 800b828:	4b38      	ldr	r3, [pc, #224]	@ (800b90c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800b82a:	f9b3 2000 	ldrsh.w	r2, [r3]
 800b82e:	f8ad 2034 	strh.w	r2, [sp, #52]	@ 0x34
 800b832:	2100      	movs	r1, #0
 800b834:	aa0a      	add	r2, sp, #40	@ 0x28
 800b836:	4b36      	ldr	r3, [pc, #216]	@ (800b910 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 800b838:	910c      	str	r1, [sp, #48]	@ 0x30
 800b83a:	e892 0003 	ldmia.w	r2, {r0, r1}
 800b83e:	f9b3 3000 	ldrsh.w	r3, [r3]
 800b842:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 800b846:	ab08      	add	r3, sp, #32
 800b848:	e883 0003 	stmia.w	r3, {r0, r1}
 800b84c:	4618      	mov	r0, r3
 800b84e:	a90c      	add	r1, sp, #48	@ 0x30
 800b850:	f7ff fbb2 	bl	800afb8 <_ZN8touchgfx4RectaNERKS0_>
 800b854:	6ce3      	ldr	r3, [r4, #76]	@ 0x4c
 800b856:	2b00      	cmp	r3, #0
 800b858:	d13c      	bne.n	800b8d4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x174>
 800b85a:	2000      	movs	r0, #0
 800b85c:	f884 0058 	strb.w	r0, [r4, #88]	@ 0x58
 800b860:	2600      	movs	r6, #0
 800b862:	682a      	ldr	r2, [r5, #0]
 800b864:	696b      	ldr	r3, [r5, #20]
 800b866:	616e      	str	r6, [r5, #20]
 800b868:	9305      	str	r3, [sp, #20]
 800b86a:	6892      	ldr	r2, [r2, #8]
 800b86c:	a908      	add	r1, sp, #32
 800b86e:	4628      	mov	r0, r5
 800b870:	4790      	blx	r2
 800b872:	9b05      	ldr	r3, [sp, #20]
 800b874:	616b      	str	r3, [r5, #20]
 800b876:	4652      	mov	r2, sl
 800b878:	f884 6058 	strb.w	r6, [r4, #88]	@ 0x58
 800b87c:	4649      	mov	r1, r9
 800b87e:	4628      	mov	r0, r5
 800b880:	f885 b025 	strb.w	fp, [r5, #37]	@ 0x25
 800b884:	f7f7 ff15 	bl	80036b2 <_ZN8touchgfx8Drawable5setXYEss>
 800b888:	4b23      	ldr	r3, [pc, #140]	@ (800b918 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>)
 800b88a:	9a01      	ldr	r2, [sp, #4]
 800b88c:	801a      	strh	r2, [r3, #0]
 800b88e:	4b23      	ldr	r3, [pc, #140]	@ (800b91c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>)
 800b890:	9a02      	ldr	r2, [sp, #8]
 800b892:	801a      	strh	r2, [r3, #0]
 800b894:	4b1d      	ldr	r3, [pc, #116]	@ (800b90c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800b896:	9a03      	ldr	r2, [sp, #12]
 800b898:	801a      	strh	r2, [r3, #0]
 800b89a:	4b1d      	ldr	r3, [pc, #116]	@ (800b910 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 800b89c:	9a04      	ldr	r2, [sp, #16]
 800b89e:	801a      	strh	r2, [r3, #0]
 800b8a0:	e9c4 870f 	strd	r8, r7, [r4, #60]	@ 0x3c
 800b8a4:	6823      	ldr	r3, [r4, #0]
 800b8a6:	4620      	mov	r0, r4
 800b8a8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800b8aa:	4798      	blx	r3
 800b8ac:	6823      	ldr	r3, [r4, #0]
 800b8ae:	4620      	mov	r0, r4
 800b8b0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800b8b2:	4798      	blx	r3
 800b8b4:	b00f      	add	sp, #60	@ 0x3c
 800b8b6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800b8ba:	883b      	ldrh	r3, [r7, #0]
 800b8bc:	f8ab 0000 	strh.w	r0, [fp]
 800b8c0:	f8aa 3000 	strh.w	r3, [sl]
 800b8c4:	e789      	b.n	800b7da <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x7a>
 800b8c6:	462a      	mov	r2, r5
 800b8c8:	ab0a      	add	r3, sp, #40	@ 0x28
 800b8ca:	f852 0f04 	ldr.w	r0, [r2, #4]!
 800b8ce:	6851      	ldr	r1, [r2, #4]
 800b8d0:	c303      	stmia	r3!, {r0, r1}
 800b8d2:	e7a9      	b.n	800b828 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xc8>
 800b8d4:	a807      	add	r0, sp, #28
 800b8d6:	f007 fb1d 	bl	8012f14 <_ZNK8touchgfx6Bitmap9getFormatEv>
 800b8da:	4606      	mov	r6, r0
 800b8dc:	6ce0      	ldr	r0, [r4, #76]	@ 0x4c
 800b8de:	6803      	ldr	r3, [r0, #0]
 800b8e0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800b8e2:	4798      	blx	r3
 800b8e4:	4286      	cmp	r6, r0
 800b8e6:	d1b8      	bne.n	800b85a <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfa>
 800b8e8:	f7f7 fd6e 	bl	80033c8 <_ZN8touchgfx3HAL3lcdEv>
 800b8ec:	6803      	ldr	r3, [r0, #0]
 800b8ee:	4606      	mov	r6, r0
 800b8f0:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800b8f2:	9305      	str	r3, [sp, #20]
 800b8f4:	a807      	add	r0, sp, #28
 800b8f6:	f007 fb0d 	bl	8012f14 <_ZNK8touchgfx6Bitmap9getFormatEv>
 800b8fa:	9b05      	ldr	r3, [sp, #20]
 800b8fc:	4601      	mov	r1, r0
 800b8fe:	4630      	mov	r0, r6
 800b900:	4798      	blx	r3
 800b902:	f080 0001 	eor.w	r0, r0, #1
 800b906:	b2c0      	uxtb	r0, r0
 800b908:	e7a8      	b.n	800b85c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfc>
 800b90a:	bf00      	nop
 800b90c:	200133c6 	.word	0x200133c6
 800b910:	200133c8 	.word	0x200133c8
 800b914:	200133ca 	.word	0x200133ca
 800b918:	200133cc 	.word	0x200133cc
 800b91c:	200133ce 	.word	0x200133ce

0800b920 <_ZN8touchgfx3HAL20getClientFrameBufferEv>:
 800b920:	b510      	push	{r4, lr}
 800b922:	4b07      	ldr	r3, [pc, #28]	@ (800b940 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x20>)
 800b924:	781b      	ldrb	r3, [r3, #0]
 800b926:	4604      	mov	r4, r0
 800b928:	b13b      	cbz	r3, 800b93a <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 800b92a:	6803      	ldr	r3, [r0, #0]
 800b92c:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800b92e:	4798      	blx	r3
 800b930:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 800b932:	4283      	cmp	r3, r0
 800b934:	d101      	bne.n	800b93a <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 800b936:	6c20      	ldr	r0, [r4, #64]	@ 0x40
 800b938:	bd10      	pop	{r4, pc}
 800b93a:	6be0      	ldr	r0, [r4, #60]	@ 0x3c
 800b93c:	e7fc      	b.n	800b938 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x18>
 800b93e:	bf00      	nop
 800b940:	200133d0 	.word	0x200133d0

0800b944 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt>:
 800b944:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b948:	b08a      	sub	sp, #40	@ 0x28
 800b94a:	461d      	mov	r5, r3
 800b94c:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 800b950:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800b954:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
 800b958:	f8ad 3018 	strh.w	r3, [sp, #24]
 800b95c:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 800b960:	f8ad 301a 	strh.w	r3, [sp, #26]
 800b964:	2400      	movs	r4, #0
 800b966:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 800b96a:	f8bd 604c 	ldrh.w	r6, [sp, #76]	@ 0x4c
 800b96e:	f8ad 301c 	strh.w	r3, [sp, #28]
 800b972:	4690      	mov	r8, r2
 800b974:	4607      	mov	r7, r0
 800b976:	9404      	str	r4, [sp, #16]
 800b978:	f88d 4020 	strb.w	r4, [sp, #32]
 800b97c:	f7ff ffd0 	bl	800b920 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800b980:	fb06 8505 	mla	r5, r6, r5, r8
 800b984:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 800b988:	6878      	ldr	r0, [r7, #4]
 800b98a:	9505      	str	r5, [sp, #20]
 800b98c:	f8ad 601e 	strh.w	r6, [sp, #30]
 800b990:	f88d 4022 	strb.w	r4, [sp, #34]	@ 0x22
 800b994:	f88d 4021 	strb.w	r4, [sp, #33]	@ 0x21
 800b998:	f88d 4023 	strb.w	r4, [sp, #35]	@ 0x23
 800b99c:	f88d 4024 	strb.w	r4, [sp, #36]	@ 0x24
 800b9a0:	6803      	ldr	r3, [r0, #0]
 800b9a2:	a901      	add	r1, sp, #4
 800b9a4:	685b      	ldr	r3, [r3, #4]
 800b9a6:	4798      	blx	r3
 800b9a8:	b00a      	add	sp, #40	@ 0x28
 800b9aa:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800b9ae <_ZN8touchgfx3HAL12blitFillWordEtttttt>:
 800b9ae:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800b9b2:	b08b      	sub	sp, #44	@ 0x2c
 800b9b4:	2400      	movs	r4, #0
 800b9b6:	461d      	mov	r5, r3
 800b9b8:	f44f 6300 	mov.w	r3, #2048	@ 0x800
 800b9bc:	4688      	mov	r8, r1
 800b9be:	4691      	mov	r9, r2
 800b9c0:	f8bd 6050 	ldrh.w	r6, [sp, #80]	@ 0x50
 800b9c4:	9404      	str	r4, [sp, #16]
 800b9c6:	4607      	mov	r7, r0
 800b9c8:	e9cd 3401 	strd	r3, r4, [sp, #4]
 800b9cc:	f7ff ffa8 	bl	800b920 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800b9d0:	fb06 9505 	mla	r5, r6, r5, r9
 800b9d4:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 800b9d8:	f8ad 3018 	strh.w	r3, [sp, #24]
 800b9dc:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 800b9e0:	f8bd 304c 	ldrh.w	r3, [sp, #76]	@ 0x4c
 800b9e4:	6878      	ldr	r0, [r7, #4]
 800b9e6:	9505      	str	r5, [sp, #20]
 800b9e8:	f8ad 301a 	strh.w	r3, [sp, #26]
 800b9ec:	f8ad 401c 	strh.w	r4, [sp, #28]
 800b9f0:	f8ad 601e 	strh.w	r6, [sp, #30]
 800b9f4:	f8cd 8010 	str.w	r8, [sp, #16]
 800b9f8:	f8ad 4020 	strh.w	r4, [sp, #32]
 800b9fc:	f88d 4022 	strb.w	r4, [sp, #34]	@ 0x22
 800ba00:	f88d 4023 	strb.w	r4, [sp, #35]	@ 0x23
 800ba04:	f88d 4024 	strb.w	r4, [sp, #36]	@ 0x24
 800ba08:	6803      	ldr	r3, [r0, #0]
 800ba0a:	a901      	add	r1, sp, #4
 800ba0c:	685b      	ldr	r3, [r3, #4]
 800ba0e:	4798      	blx	r3
 800ba10:	b00b      	add	sp, #44	@ 0x2c
 800ba12:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	...

0800ba18 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b>:
 800ba18:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ba1c:	b08a      	sub	sp, #40	@ 0x28
 800ba1e:	4698      	mov	r8, r3
 800ba20:	f89d 505c 	ldrb.w	r5, [sp, #92]	@ 0x5c
 800ba24:	f89d c054 	ldrb.w	ip, [sp, #84]	@ 0x54
 800ba28:	f8bd 7058 	ldrh.w	r7, [sp, #88]	@ 0x58
 800ba2c:	f89d 4060 	ldrb.w	r4, [sp, #96]	@ 0x60
 800ba30:	2300      	movs	r3, #0
 800ba32:	2d0b      	cmp	r5, #11
 800ba34:	4606      	mov	r6, r0
 800ba36:	9304      	str	r3, [sp, #16]
 800ba38:	f89d 0050 	ldrb.w	r0, [sp, #80]	@ 0x50
 800ba3c:	d138      	bne.n	800bab0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x98>
 800ba3e:	2380      	movs	r3, #128	@ 0x80
 800ba40:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800ba44:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 800ba48:	f8ad 3018 	strh.w	r3, [sp, #24]
 800ba4c:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 800ba50:	f8ad 301a 	strh.w	r3, [sp, #26]
 800ba54:	f88d 0020 	strb.w	r0, [sp, #32]
 800ba58:	f8bd 304c 	ldrh.w	r3, [sp, #76]	@ 0x4c
 800ba5c:	f8ad 301c 	strh.w	r3, [sp, #28]
 800ba60:	4630      	mov	r0, r6
 800ba62:	9203      	str	r2, [sp, #12]
 800ba64:	f7ff ff5c 	bl	800b920 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800ba68:	2c0b      	cmp	r4, #11
 800ba6a:	bf98      	it	ls
 800ba6c:	4b1b      	ldrls	r3, [pc, #108]	@ (800badc <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc4>)
 800ba6e:	f8bd 2040 	ldrh.w	r2, [sp, #64]	@ 0x40
 800ba72:	bf98      	it	ls
 800ba74:	5d19      	ldrbls	r1, [r3, r4]
 800ba76:	f8ad 701e 	strh.w	r7, [sp, #30]
 800ba7a:	bf88      	it	hi
 800ba7c:	2100      	movhi	r1, #0
 800ba7e:	fb02 8307 	mla	r3, r2, r7, r8
 800ba82:	10c9      	asrs	r1, r1, #3
 800ba84:	fb01 0003 	mla	r0, r1, r3, r0
 800ba88:	f89d 3064 	ldrb.w	r3, [sp, #100]	@ 0x64
 800ba8c:	9005      	str	r0, [sp, #20]
 800ba8e:	f88d 3023 	strb.w	r3, [sp, #35]	@ 0x23
 800ba92:	6870      	ldr	r0, [r6, #4]
 800ba94:	f88d 5021 	strb.w	r5, [sp, #33]	@ 0x21
 800ba98:	2300      	movs	r3, #0
 800ba9a:	f88d 4022 	strb.w	r4, [sp, #34]	@ 0x22
 800ba9e:	f88d 3024 	strb.w	r3, [sp, #36]	@ 0x24
 800baa2:	6803      	ldr	r3, [r0, #0]
 800baa4:	a901      	add	r1, sp, #4
 800baa6:	685b      	ldr	r3, [r3, #4]
 800baa8:	4798      	blx	r3
 800baaa:	b00a      	add	sp, #40	@ 0x28
 800baac:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800bab0:	2d02      	cmp	r5, #2
 800bab2:	d109      	bne.n	800bac8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xb0>
 800bab4:	28ff      	cmp	r0, #255	@ 0xff
 800bab6:	d105      	bne.n	800bac4 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xac>
 800bab8:	f1bc 0f00 	cmp.w	ip, #0
 800babc:	bf14      	ite	ne
 800babe:	2340      	movne	r3, #64	@ 0x40
 800bac0:	2320      	moveq	r3, #32
 800bac2:	e7bd      	b.n	800ba40 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800bac4:	2340      	movs	r3, #64	@ 0x40
 800bac6:	e7bb      	b.n	800ba40 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800bac8:	28ff      	cmp	r0, #255	@ 0xff
 800baca:	d105      	bne.n	800bad8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc0>
 800bacc:	f1bc 0f00 	cmp.w	ip, #0
 800bad0:	bf14      	ite	ne
 800bad2:	2304      	movne	r3, #4
 800bad4:	2301      	moveq	r3, #1
 800bad6:	e7b3      	b.n	800ba40 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800bad8:	2304      	movs	r3, #4
 800bada:	e7b1      	b.n	800ba40 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800badc:	08024fdc 	.word	0x08024fdc

0800bae0 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb>:
 800bae0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800bae4:	b08b      	sub	sp, #44	@ 0x2c
 800bae6:	461d      	mov	r5, r3
 800bae8:	f89d 9058 	ldrb.w	r9, [sp, #88]	@ 0x58
 800baec:	f89d 6060 	ldrb.w	r6, [sp, #96]	@ 0x60
 800baf0:	f8bd a05c 	ldrh.w	sl, [sp, #92]	@ 0x5c
 800baf4:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 800baf8:	bf14      	ite	ne
 800bafa:	2308      	movne	r3, #8
 800bafc:	2302      	moveq	r3, #2
 800bafe:	2400      	movs	r4, #0
 800bb00:	e9cd 3401 	strd	r3, r4, [sp, #4]
 800bb04:	4688      	mov	r8, r1
 800bb06:	4693      	mov	fp, r2
 800bb08:	9404      	str	r4, [sp, #16]
 800bb0a:	4607      	mov	r7, r0
 800bb0c:	f7ff ff08 	bl	800b920 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800bb10:	2e0b      	cmp	r6, #11
 800bb12:	bf98      	it	ls
 800bb14:	4b15      	ldrls	r3, [pc, #84]	@ (800bb6c <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0x8c>)
 800bb16:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 800bb1a:	bf98      	it	ls
 800bb1c:	5d9c      	ldrbls	r4, [r3, r6]
 800bb1e:	f8bd 3050 	ldrh.w	r3, [sp, #80]	@ 0x50
 800bb22:	f8ad 3018 	strh.w	r3, [sp, #24]
 800bb26:	fb05 b50a 	mla	r5, r5, sl, fp
 800bb2a:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
 800bb2e:	f8ad 301a 	strh.w	r3, [sp, #26]
 800bb32:	10e4      	asrs	r4, r4, #3
 800bb34:	fb04 0405 	mla	r4, r4, r5, r0
 800bb38:	2300      	movs	r3, #0
 800bb3a:	6878      	ldr	r0, [r7, #4]
 800bb3c:	9405      	str	r4, [sp, #20]
 800bb3e:	f8ad 301c 	strh.w	r3, [sp, #28]
 800bb42:	f8ad a01e 	strh.w	sl, [sp, #30]
 800bb46:	f8cd 8010 	str.w	r8, [sp, #16]
 800bb4a:	f88d 9020 	strb.w	r9, [sp, #32]
 800bb4e:	f88d 2023 	strb.w	r2, [sp, #35]	@ 0x23
 800bb52:	f88d 3024 	strb.w	r3, [sp, #36]	@ 0x24
 800bb56:	f88d 6021 	strb.w	r6, [sp, #33]	@ 0x21
 800bb5a:	f88d 6022 	strb.w	r6, [sp, #34]	@ 0x22
 800bb5e:	6803      	ldr	r3, [r0, #0]
 800bb60:	a901      	add	r1, sp, #4
 800bb62:	685b      	ldr	r3, [r3, #4]
 800bb64:	4798      	blx	r3
 800bb66:	b00b      	add	sp, #44	@ 0x2c
 800bb68:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800bb6c:	08024fdc 	.word	0x08024fdc

0800bb70 <_ZNK8touchgfx3HAL13getDstAddressEttPt>:
 800bb70:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800bb74:	461e      	mov	r6, r3
 800bb76:	4b0a      	ldr	r3, [pc, #40]	@ (800bba0 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x30>)
 800bb78:	460f      	mov	r7, r1
 800bb7a:	881d      	ldrh	r5, [r3, #0]
 800bb7c:	4690      	mov	r8, r2
 800bb7e:	f7f7 fc23 	bl	80033c8 <_ZN8touchgfx3HAL3lcdEv>
 800bb82:	6803      	ldr	r3, [r0, #0]
 800bb84:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800bb86:	4798      	blx	r3
 800bb88:	280b      	cmp	r0, #11
 800bb8a:	bf9a      	itte	ls
 800bb8c:	4b05      	ldrls	r3, [pc, #20]	@ (800bba4 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x34>)
 800bb8e:	5c1c      	ldrbls	r4, [r3, r0]
 800bb90:	2400      	movhi	r4, #0
 800bb92:	fb08 7005 	mla	r0, r8, r5, r7
 800bb96:	10e4      	asrs	r4, r4, #3
 800bb98:	fb04 6000 	mla	r0, r4, r0, r6
 800bb9c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800bba0:	200133cc 	.word	0x200133cc
 800bba4:	08024fdc 	.word	0x08024fdc

0800bba8 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb>:
 800bba8:	b5f0      	push	{r4, r5, r6, r7, lr}
 800bbaa:	b08b      	sub	sp, #44	@ 0x2c
 800bbac:	461f      	mov	r7, r3
 800bbae:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
 800bbb2:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800bbb6:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
 800bbba:	f8ad 3018 	strh.w	r3, [sp, #24]
 800bbbe:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 800bbc2:	f8ad 301a 	strh.w	r3, [sp, #26]
 800bbc6:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 800bbca:	f8ad 301c 	strh.w	r3, [sp, #28]
 800bbce:	2500      	movs	r5, #0
 800bbd0:	f89d 3050 	ldrb.w	r3, [sp, #80]	@ 0x50
 800bbd4:	f88d 3020 	strb.w	r3, [sp, #32]
 800bbd8:	4604      	mov	r4, r0
 800bbda:	4616      	mov	r6, r2
 800bbdc:	9504      	str	r5, [sp, #16]
 800bbde:	f7ff fe9f 	bl	800b920 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800bbe2:	463a      	mov	r2, r7
 800bbe4:	4631      	mov	r1, r6
 800bbe6:	4603      	mov	r3, r0
 800bbe8:	4620      	mov	r0, r4
 800bbea:	f7ff ffc1 	bl	800bb70 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800bbee:	4b0e      	ldr	r3, [pc, #56]	@ (800bc28 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x80>)
 800bbf0:	9005      	str	r0, [sp, #20]
 800bbf2:	881b      	ldrh	r3, [r3, #0]
 800bbf4:	f8ad 301e 	strh.w	r3, [sp, #30]
 800bbf8:	f7f7 fbe6 	bl	80033c8 <_ZN8touchgfx3HAL3lcdEv>
 800bbfc:	6803      	ldr	r3, [r0, #0]
 800bbfe:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800bc00:	4798      	blx	r3
 800bc02:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 800bc04:	f88d 0022 	strb.w	r0, [sp, #34]	@ 0x22
 800bc08:	f88d 0021 	strb.w	r0, [sp, #33]	@ 0x21
 800bc0c:	9304      	str	r3, [sp, #16]
 800bc0e:	6860      	ldr	r0, [r4, #4]
 800bc10:	f89d 3058 	ldrb.w	r3, [sp, #88]	@ 0x58
 800bc14:	f88d 3023 	strb.w	r3, [sp, #35]	@ 0x23
 800bc18:	f88d 5024 	strb.w	r5, [sp, #36]	@ 0x24
 800bc1c:	6803      	ldr	r3, [r0, #0]
 800bc1e:	a901      	add	r1, sp, #4
 800bc20:	685b      	ldr	r3, [r3, #4]
 800bc22:	4798      	blx	r3
 800bc24:	b00b      	add	sp, #44	@ 0x2c
 800bc26:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800bc28:	200133cc 	.word	0x200133cc

0800bc2c <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE>:
 800bc2c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800bc2e:	b08d      	sub	sp, #52	@ 0x34
 800bc30:	466b      	mov	r3, sp
 800bc32:	e883 0006 	stmia.w	r3, {r1, r2}
 800bc36:	2300      	movs	r3, #0
 800bc38:	9306      	str	r3, [sp, #24]
 800bc3a:	6803      	ldr	r3, [r0, #0]
 800bc3c:	f8bd 6000 	ldrh.w	r6, [sp]
 800bc40:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800bc42:	f8bd 7002 	ldrh.w	r7, [sp, #2]
 800bc46:	2501      	movs	r5, #1
 800bc48:	9503      	str	r5, [sp, #12]
 800bc4a:	4604      	mov	r4, r0
 800bc4c:	4798      	blx	r3
 800bc4e:	463a      	mov	r2, r7
 800bc50:	4631      	mov	r1, r6
 800bc52:	4603      	mov	r3, r0
 800bc54:	4620      	mov	r0, r4
 800bc56:	f7ff ff8b 	bl	800bb70 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800bc5a:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 800bc5c:	9307      	str	r3, [sp, #28]
 800bc5e:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800bc62:	f8ad 3020 	strh.w	r3, [sp, #32]
 800bc66:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800bc6a:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
 800bc6e:	4b0f      	ldr	r3, [pc, #60]	@ (800bcac <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x80>)
 800bc70:	9004      	str	r0, [sp, #16]
 800bc72:	881b      	ldrh	r3, [r3, #0]
 800bc74:	f8ad 3024 	strh.w	r3, [sp, #36]	@ 0x24
 800bc78:	f8ad 3026 	strh.w	r3, [sp, #38]	@ 0x26
 800bc7c:	f7f7 fba4 	bl	80033c8 <_ZN8touchgfx3HAL3lcdEv>
 800bc80:	6803      	ldr	r3, [r0, #0]
 800bc82:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800bc84:	4798      	blx	r3
 800bc86:	23ff      	movs	r3, #255	@ 0xff
 800bc88:	f88d 0029 	strb.w	r0, [sp, #41]	@ 0x29
 800bc8c:	f88d 002a 	strb.w	r0, [sp, #42]	@ 0x2a
 800bc90:	6860      	ldr	r0, [r4, #4]
 800bc92:	f88d 3028 	strb.w	r3, [sp, #40]	@ 0x28
 800bc96:	f88d 502b 	strb.w	r5, [sp, #43]	@ 0x2b
 800bc9a:	f88d 502c 	strb.w	r5, [sp, #44]	@ 0x2c
 800bc9e:	6803      	ldr	r3, [r0, #0]
 800bca0:	a903      	add	r1, sp, #12
 800bca2:	685b      	ldr	r3, [r3, #4]
 800bca4:	4798      	blx	r3
 800bca6:	6c60      	ldr	r0, [r4, #68]	@ 0x44
 800bca8:	b00d      	add	sp, #52	@ 0x34
 800bcaa:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800bcac:	200133cc 	.word	0x200133cc

0800bcb0 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm>:
 800bcb0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800bcb4:	b08c      	sub	sp, #48	@ 0x30
 800bcb6:	461e      	mov	r6, r3
 800bcb8:	466d      	mov	r5, sp
 800bcba:	2300      	movs	r3, #0
 800bcbc:	e885 0006 	stmia.w	r5, {r1, r2}
 800bcc0:	9306      	str	r3, [sp, #24]
 800bcc2:	6803      	ldr	r3, [r0, #0]
 800bcc4:	f8bd 7000 	ldrh.w	r7, [sp]
 800bcc8:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800bcca:	f8bd 8002 	ldrh.w	r8, [sp, #2]
 800bcce:	2501      	movs	r5, #1
 800bcd0:	9503      	str	r5, [sp, #12]
 800bcd2:	4604      	mov	r4, r0
 800bcd4:	4798      	blx	r3
 800bcd6:	4642      	mov	r2, r8
 800bcd8:	4639      	mov	r1, r7
 800bcda:	4603      	mov	r3, r0
 800bcdc:	4620      	mov	r0, r4
 800bcde:	f7ff ff47 	bl	800bb70 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800bce2:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800bce6:	f8ad 3020 	strh.w	r3, [sp, #32]
 800bcea:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800bcee:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
 800bcf2:	4b11      	ldr	r3, [pc, #68]	@ (800bd38 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm+0x88>)
 800bcf4:	9004      	str	r0, [sp, #16]
 800bcf6:	881b      	ldrh	r3, [r3, #0]
 800bcf8:	f8ad 3024 	strh.w	r3, [sp, #36]	@ 0x24
 800bcfc:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 800bcfe:	f8ad 3026 	strh.w	r3, [sp, #38]	@ 0x26
 800bd02:	9607      	str	r6, [sp, #28]
 800bd04:	f7f7 fb60 	bl	80033c8 <_ZN8touchgfx3HAL3lcdEv>
 800bd08:	6803      	ldr	r3, [r0, #0]
 800bd0a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800bd0c:	4798      	blx	r3
 800bd0e:	23ff      	movs	r3, #255	@ 0xff
 800bd10:	f88d 0029 	strb.w	r0, [sp, #41]	@ 0x29
 800bd14:	f88d 002a 	strb.w	r0, [sp, #42]	@ 0x2a
 800bd18:	6860      	ldr	r0, [r4, #4]
 800bd1a:	f88d 3028 	strb.w	r3, [sp, #40]	@ 0x28
 800bd1e:	f88d 502b 	strb.w	r5, [sp, #43]	@ 0x2b
 800bd22:	f88d 502c 	strb.w	r5, [sp, #44]	@ 0x2c
 800bd26:	6803      	ldr	r3, [r0, #0]
 800bd28:	a903      	add	r1, sp, #12
 800bd2a:	685b      	ldr	r3, [r3, #4]
 800bd2c:	4798      	blx	r3
 800bd2e:	4630      	mov	r0, r6
 800bd30:	b00c      	add	sp, #48	@ 0x30
 800bd32:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800bd36:	bf00      	nop
 800bd38:	200133cc 	.word	0x200133cc

0800bd3c <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE>:
 800bd3c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800bd3e:	b085      	sub	sp, #20
 800bd40:	ac02      	add	r4, sp, #8
 800bd42:	e884 0006 	stmia.w	r4, {r1, r2}
 800bd46:	4605      	mov	r5, r0
 800bd48:	f8bd 6008 	ldrh.w	r6, [sp, #8]
 800bd4c:	f8bd 700a 	ldrh.w	r7, [sp, #10]
 800bd50:	f7ff fde6 	bl	800b920 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800bd54:	463a      	mov	r2, r7
 800bd56:	4603      	mov	r3, r0
 800bd58:	4631      	mov	r1, r6
 800bd5a:	4628      	mov	r0, r5
 800bd5c:	f7ff ff08 	bl	800bb70 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800bd60:	4a05      	ldr	r2, [pc, #20]	@ (800bd78 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE+0x3c>)
 800bd62:	682b      	ldr	r3, [r5, #0]
 800bd64:	8812      	ldrh	r2, [r2, #0]
 800bd66:	9200      	str	r2, [sp, #0]
 800bd68:	6f1e      	ldr	r6, [r3, #112]	@ 0x70
 800bd6a:	e894 0006 	ldmia.w	r4, {r1, r2}
 800bd6e:	4603      	mov	r3, r0
 800bd70:	4628      	mov	r0, r5
 800bd72:	47b0      	blx	r6
 800bd74:	b005      	add	sp, #20
 800bd76:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800bd78:	200133cc 	.word	0x200133cc

0800bd7c <_ZN8touchgfx3HAL16swapFrameBuffersEv>:
 800bd7c:	b570      	push	{r4, r5, r6, lr}
 800bd7e:	f890 306e 	ldrb.w	r3, [r0, #110]	@ 0x6e
 800bd82:	4604      	mov	r4, r0
 800bd84:	b19b      	cbz	r3, 800bdae <_ZN8touchgfx3HAL16swapFrameBuffersEv+0x32>
 800bd86:	2002      	movs	r0, #2
 800bd88:	f7f5 fa76 	bl	8001278 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>
 800bd8c:	2300      	movs	r3, #0
 800bd8e:	f884 306e 	strb.w	r3, [r4, #110]	@ 0x6e
 800bd92:	f884 306d 	strb.w	r3, [r4, #109]	@ 0x6d
 800bd96:	6823      	ldr	r3, [r4, #0]
 800bd98:	4620      	mov	r0, r4
 800bd9a:	f8d3 50c8 	ldr.w	r5, [r3, #200]	@ 0xc8
 800bd9e:	f7ff fdbf 	bl	800b920 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800bda2:	462b      	mov	r3, r5
 800bda4:	4601      	mov	r1, r0
 800bda6:	4620      	mov	r0, r4
 800bda8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800bdac:	4718      	bx	r3
 800bdae:	bd70      	pop	{r4, r5, r6, pc}

0800bdb0 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>:
 800bdb0:	b538      	push	{r3, r4, r5, lr}
 800bdb2:	f890 307b 	ldrb.w	r3, [r0, #123]	@ 0x7b
 800bdb6:	428b      	cmp	r3, r1
 800bdb8:	4604      	mov	r4, r0
 800bdba:	460d      	mov	r5, r1
 800bdbc:	d006      	beq.n	800bdcc <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1c>
 800bdbe:	6803      	ldr	r3, [r0, #0]
 800bdc0:	b929      	cbnz	r1, 800bdce <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1e>
 800bdc2:	f8d3 30d8 	ldr.w	r3, [r3, #216]	@ 0xd8
 800bdc6:	4798      	blx	r3
 800bdc8:	f884 507b 	strb.w	r5, [r4, #123]	@ 0x7b
 800bdcc:	bd38      	pop	{r3, r4, r5, pc}
 800bdce:	f8d3 30dc 	ldr.w	r3, [r3, #220]	@ 0xdc
 800bdd2:	e7f8      	b.n	800bdc6 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x16>

0800bdd4 <_ZN8touchgfx3HAL15lockFrameBufferEv>:
 800bdd4:	b510      	push	{r4, lr}
 800bdd6:	4b0c      	ldr	r3, [pc, #48]	@ (800be08 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x34>)
 800bdd8:	781b      	ldrb	r3, [r3, #0]
 800bdda:	4604      	mov	r4, r0
 800bddc:	b953      	cbnz	r3, 800bdf4 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x20>
 800bdde:	f890 3048 	ldrb.w	r3, [r0, #72]	@ 0x48
 800bde2:	b93b      	cbnz	r3, 800bdf4 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x20>
 800bde4:	6840      	ldr	r0, [r0, #4]
 800bde6:	f000 f92b 	bl	800c040 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>
 800bdea:	b118      	cbz	r0, 800bdf4 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x20>
 800bdec:	6862      	ldr	r2, [r4, #4]
 800bdee:	7a53      	ldrb	r3, [r2, #9]
 800bdf0:	2b00      	cmp	r3, #0
 800bdf2:	d0fc      	beq.n	800bdee <_ZN8touchgfx3HAL15lockFrameBufferEv+0x1a>
 800bdf4:	f7f5 fb8c 	bl	8001510 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 800bdf8:	4620      	mov	r0, r4
 800bdfa:	2100      	movs	r1, #0
 800bdfc:	f7ff ffd8 	bl	800bdb0 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 800be00:	4620      	mov	r0, r4
 800be02:	f7ff fd8d 	bl	800b920 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800be06:	bd10      	pop	{r4, pc}
 800be08:	200133d0 	.word	0x200133d0

0800be0c <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>:
 800be0c:	b570      	push	{r4, r5, r6, lr}
 800be0e:	4604      	mov	r4, r0
 800be10:	6803      	ldr	r3, [r0, #0]
 800be12:	b919      	cbnz	r1, 800be1c <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE+0x10>
 800be14:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800be16:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800be1a:	4718      	bx	r3
 800be1c:	2200      	movs	r2, #0
 800be1e:	f890 607b 	ldrb.w	r6, [r0, #123]	@ 0x7b
 800be22:	f880 207b 	strb.w	r2, [r0, #123]	@ 0x7b
 800be26:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800be28:	4798      	blx	r3
 800be2a:	6863      	ldr	r3, [r4, #4]
 800be2c:	2101      	movs	r1, #1
 800be2e:	4605      	mov	r5, r0
 800be30:	7299      	strb	r1, [r3, #10]
 800be32:	4620      	mov	r0, r4
 800be34:	f884 607b 	strb.w	r6, [r4, #123]	@ 0x7b
 800be38:	f7ff ffba 	bl	800bdb0 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 800be3c:	4628      	mov	r0, r5
 800be3e:	bd70      	pop	{r4, r5, r6, pc}

0800be40 <_ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv>:
 800be40:	e9d0 2003 	ldrd	r2, r0, [r0, #12]
 800be44:	1a13      	subs	r3, r2, r0
 800be46:	4258      	negs	r0, r3
 800be48:	4158      	adcs	r0, r3
 800be4a:	4770      	bx	lr

0800be4c <_ZN8touchgfx17LockFreeDMA_Queue6isFullEv>:
 800be4c:	e9d0 2303 	ldrd	r2, r3, [r0, #12]
 800be50:	1a9b      	subs	r3, r3, r2
 800be52:	2b00      	cmp	r3, #0
 800be54:	bfdc      	itt	le
 800be56:	6882      	ldrle	r2, [r0, #8]
 800be58:	189b      	addle	r3, r3, r2
 800be5a:	2b01      	cmp	r3, #1
 800be5c:	bfcc      	ite	gt
 800be5e:	2000      	movgt	r0, #0
 800be60:	2001      	movle	r0, #1
 800be62:	4770      	bx	lr

0800be64 <_ZN8touchgfx17LockFreeDMA_Queue5firstEv>:
 800be64:	6902      	ldr	r2, [r0, #16]
 800be66:	6843      	ldr	r3, [r0, #4]
 800be68:	2024      	movs	r0, #36	@ 0x24
 800be6a:	fb00 3002 	mla	r0, r0, r2, r3
 800be6e:	4770      	bx	lr

0800be70 <_ZN8touchgfx13DMA_Interface13seedExecutionEv>:
 800be70:	6803      	ldr	r3, [r0, #0]
 800be72:	691b      	ldr	r3, [r3, #16]
 800be74:	4718      	bx	r3

0800be76 <_ZN8touchgfx13DMA_Interface7executeEv>:
 800be76:	b570      	push	{r4, r5, r6, lr}
 800be78:	2301      	movs	r3, #1
 800be7a:	7203      	strb	r3, [r0, #8]
 800be7c:	4604      	mov	r4, r0
 800be7e:	6840      	ldr	r0, [r0, #4]
 800be80:	6803      	ldr	r3, [r0, #0]
 800be82:	699b      	ldr	r3, [r3, #24]
 800be84:	4798      	blx	r3
 800be86:	6803      	ldr	r3, [r0, #0]
 800be88:	2b40      	cmp	r3, #64	@ 0x40
 800be8a:	4605      	mov	r5, r0
 800be8c:	d00c      	beq.n	800bea8 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800be8e:	d810      	bhi.n	800beb2 <_ZN8touchgfx13DMA_Interface7executeEv+0x3c>
 800be90:	2b04      	cmp	r3, #4
 800be92:	d01d      	beq.n	800bed0 <_ZN8touchgfx13DMA_Interface7executeEv+0x5a>
 800be94:	d804      	bhi.n	800bea0 <_ZN8touchgfx13DMA_Interface7executeEv+0x2a>
 800be96:	2b01      	cmp	r3, #1
 800be98:	d006      	beq.n	800bea8 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800be9a:	2b02      	cmp	r3, #2
 800be9c:	d02c      	beq.n	800bef8 <_ZN8touchgfx13DMA_Interface7executeEv+0x82>
 800be9e:	bd70      	pop	{r4, r5, r6, pc}
 800bea0:	2b08      	cmp	r3, #8
 800bea2:	d01d      	beq.n	800bee0 <_ZN8touchgfx13DMA_Interface7executeEv+0x6a>
 800bea4:	2b20      	cmp	r3, #32
 800bea6:	d1fa      	bne.n	800be9e <_ZN8touchgfx13DMA_Interface7executeEv+0x28>
 800bea8:	6823      	ldr	r3, [r4, #0]
 800beaa:	4620      	mov	r0, r4
 800beac:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800beae:	4798      	blx	r3
 800beb0:	e013      	b.n	800beda <_ZN8touchgfx13DMA_Interface7executeEv+0x64>
 800beb2:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 800beb6:	d0f7      	beq.n	800bea8 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800beb8:	d804      	bhi.n	800bec4 <_ZN8touchgfx13DMA_Interface7executeEv+0x4e>
 800beba:	2b80      	cmp	r3, #128	@ 0x80
 800bebc:	d0f4      	beq.n	800bea8 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800bebe:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 800bec2:	e7f0      	b.n	800bea6 <_ZN8touchgfx13DMA_Interface7executeEv+0x30>
 800bec4:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 800bec8:	d0ee      	beq.n	800bea8 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800beca:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
 800bece:	e7e5      	b.n	800be9c <_ZN8touchgfx13DMA_Interface7executeEv+0x26>
 800bed0:	6823      	ldr	r3, [r4, #0]
 800bed2:	7f01      	ldrb	r1, [r0, #28]
 800bed4:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800bed6:	4620      	mov	r0, r4
 800bed8:	4798      	blx	r3
 800beda:	6823      	ldr	r3, [r4, #0]
 800bedc:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800bede:	e006      	b.n	800beee <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
 800bee0:	6823      	ldr	r3, [r4, #0]
 800bee2:	7f01      	ldrb	r1, [r0, #28]
 800bee4:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800bee6:	4620      	mov	r0, r4
 800bee8:	4798      	blx	r3
 800beea:	6823      	ldr	r3, [r4, #0]
 800beec:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800beee:	4629      	mov	r1, r5
 800bef0:	4620      	mov	r0, r4
 800bef2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800bef6:	4718      	bx	r3
 800bef8:	6823      	ldr	r3, [r4, #0]
 800befa:	4620      	mov	r0, r4
 800befc:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800befe:	4798      	blx	r3
 800bf00:	e7f3      	b.n	800beea <_ZN8touchgfx13DMA_Interface7executeEv+0x74>

0800bf02 <_ZN8touchgfx13DMA_Interface11enableAlphaEh>:
 800bf02:	4770      	bx	lr

0800bf04 <_ZN8touchgfx13DMA_Interface12disableAlphaEv>:
 800bf04:	4770      	bx	lr

0800bf06 <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>:
 800bf06:	4770      	bx	lr

0800bf08 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE>:
 800bf08:	e9d0 3203 	ldrd	r3, r2, [r0, #12]
 800bf0c:	1ad2      	subs	r2, r2, r3
 800bf0e:	2a00      	cmp	r2, #0
 800bf10:	b510      	push	{r4, lr}
 800bf12:	bfdc      	itt	le
 800bf14:	6884      	ldrle	r4, [r0, #8]
 800bf16:	1912      	addle	r2, r2, r4
 800bf18:	2a01      	cmp	r2, #1
 800bf1a:	dd16      	ble.n	800bf4a <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x42>
 800bf1c:	6842      	ldr	r2, [r0, #4]
 800bf1e:	2424      	movs	r4, #36	@ 0x24
 800bf20:	fb04 2303 	mla	r3, r4, r3, r2
 800bf24:	f101 0220 	add.w	r2, r1, #32
 800bf28:	f851 4b04 	ldr.w	r4, [r1], #4
 800bf2c:	f843 4b04 	str.w	r4, [r3], #4
 800bf30:	4291      	cmp	r1, r2
 800bf32:	d1f9      	bne.n	800bf28 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x20>
 800bf34:	780a      	ldrb	r2, [r1, #0]
 800bf36:	701a      	strb	r2, [r3, #0]
 800bf38:	68c3      	ldr	r3, [r0, #12]
 800bf3a:	6882      	ldr	r2, [r0, #8]
 800bf3c:	f3bf 8f5b 	dmb	ish
 800bf40:	3301      	adds	r3, #1
 800bf42:	429a      	cmp	r2, r3
 800bf44:	bfd8      	it	le
 800bf46:	1a9b      	suble	r3, r3, r2
 800bf48:	60c3      	str	r3, [r0, #12]
 800bf4a:	bd10      	pop	{r4, pc}

0800bf4c <_ZN8touchgfx17LockFreeDMA_Queue3popEv>:
 800bf4c:	6903      	ldr	r3, [r0, #16]
 800bf4e:	6882      	ldr	r2, [r0, #8]
 800bf50:	f3bf 8f5b 	dmb	ish
 800bf54:	3301      	adds	r3, #1
 800bf56:	429a      	cmp	r2, r3
 800bf58:	bfd8      	it	le
 800bf5a:	1a9b      	suble	r3, r3, r2
 800bf5c:	6103      	str	r3, [r0, #16]
 800bf5e:	4770      	bx	lr

0800bf60 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE>:
 800bf60:	b570      	push	{r4, r5, r6, lr}
 800bf62:	4604      	mov	r4, r0
 800bf64:	460e      	mov	r6, r1
 800bf66:	6860      	ldr	r0, [r4, #4]
 800bf68:	6803      	ldr	r3, [r0, #0]
 800bf6a:	685b      	ldr	r3, [r3, #4]
 800bf6c:	4798      	blx	r3
 800bf6e:	2800      	cmp	r0, #0
 800bf70:	d1f9      	bne.n	800bf66 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x6>
 800bf72:	4d0d      	ldr	r5, [pc, #52]	@ (800bfa8 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x48>)
 800bf74:	6828      	ldr	r0, [r5, #0]
 800bf76:	6803      	ldr	r3, [r0, #0]
 800bf78:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 800bf7c:	4798      	blx	r3
 800bf7e:	f7f5 fad5 	bl	800152c <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>
 800bf82:	6828      	ldr	r0, [r5, #0]
 800bf84:	2101      	movs	r1, #1
 800bf86:	f7ff ff13 	bl	800bdb0 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 800bf8a:	6860      	ldr	r0, [r4, #4]
 800bf8c:	6803      	ldr	r3, [r0, #0]
 800bf8e:	4631      	mov	r1, r6
 800bf90:	689b      	ldr	r3, [r3, #8]
 800bf92:	4798      	blx	r3
 800bf94:	6823      	ldr	r3, [r4, #0]
 800bf96:	4620      	mov	r0, r4
 800bf98:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800bf9a:	4798      	blx	r3
 800bf9c:	6828      	ldr	r0, [r5, #0]
 800bf9e:	6803      	ldr	r3, [r0, #0]
 800bfa0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800bfa4:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 800bfa6:	4718      	bx	r3
 800bfa8:	200133d4 	.word	0x200133d4

0800bfac <_ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv>:
 800bfac:	b508      	push	{r3, lr}
 800bfae:	f7f5 faaf 	bl	8001510 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 800bfb2:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800bfb6:	f7f5 bab3 	b.w	8001520 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

0800bfba <_ZN8touchgfx17LockFreeDMA_QueueD0Ev>:
 800bfba:	b510      	push	{r4, lr}
 800bfbc:	2114      	movs	r1, #20
 800bfbe:	4604      	mov	r4, r0
 800bfc0:	f015 feb1 	bl	8021d26 <_ZdlPvj>
 800bfc4:	4620      	mov	r0, r4
 800bfc6:	bd10      	pop	{r4, pc}

0800bfc8 <_ZN8touchgfx13DMA_Interface5startEv>:
 800bfc8:	b510      	push	{r4, lr}
 800bfca:	4604      	mov	r4, r0
 800bfcc:	6840      	ldr	r0, [r0, #4]
 800bfce:	6803      	ldr	r3, [r0, #0]
 800bfd0:	681b      	ldr	r3, [r3, #0]
 800bfd2:	4798      	blx	r3
 800bfd4:	b948      	cbnz	r0, 800bfea <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800bfd6:	7a63      	ldrb	r3, [r4, #9]
 800bfd8:	b13b      	cbz	r3, 800bfea <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800bfda:	7a23      	ldrb	r3, [r4, #8]
 800bfdc:	b92b      	cbnz	r3, 800bfea <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800bfde:	6823      	ldr	r3, [r4, #0]
 800bfe0:	4620      	mov	r0, r4
 800bfe2:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800bfe4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800bfe8:	4718      	bx	r3
 800bfea:	bd10      	pop	{r4, pc}

0800bfec <_ZN8touchgfx13DMA_Interface16executeCompletedEv>:
 800bfec:	b570      	push	{r4, r5, r6, lr}
 800bfee:	4604      	mov	r4, r0
 800bff0:	6840      	ldr	r0, [r0, #4]
 800bff2:	6803      	ldr	r3, [r0, #0]
 800bff4:	681b      	ldr	r3, [r3, #0]
 800bff6:	4798      	blx	r3
 800bff8:	4605      	mov	r5, r0
 800bffa:	b930      	cbnz	r0, 800c00a <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 800bffc:	7a23      	ldrb	r3, [r4, #8]
 800bffe:	b123      	cbz	r3, 800c00a <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 800c000:	6860      	ldr	r0, [r4, #4]
 800c002:	6803      	ldr	r3, [r0, #0]
 800c004:	695b      	ldr	r3, [r3, #20]
 800c006:	4798      	blx	r3
 800c008:	7225      	strb	r5, [r4, #8]
 800c00a:	6860      	ldr	r0, [r4, #4]
 800c00c:	6803      	ldr	r3, [r0, #0]
 800c00e:	681b      	ldr	r3, [r3, #0]
 800c010:	4798      	blx	r3
 800c012:	b928      	cbnz	r0, 800c020 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x34>
 800c014:	6823      	ldr	r3, [r4, #0]
 800c016:	4620      	mov	r0, r4
 800c018:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800c01a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800c01e:	4718      	bx	r3
 800c020:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800c024:	f7f5 ba8a 	b.w	800153c <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>

0800c028 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>:
 800c028:	b510      	push	{r4, lr}
 800c02a:	4c04      	ldr	r4, [pc, #16]	@ (800c03c <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi+0x14>)
 800c02c:	6082      	str	r2, [r0, #8]
 800c02e:	2200      	movs	r2, #0
 800c030:	e9c0 4100 	strd	r4, r1, [r0]
 800c034:	e9c0 2203 	strd	r2, r2, [r0, #12]
 800c038:	bd10      	pop	{r4, pc}
 800c03a:	bf00      	nop
 800c03c:	08024ff0 	.word	0x08024ff0

0800c040 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>:
 800c040:	6840      	ldr	r0, [r0, #4]
 800c042:	6803      	ldr	r3, [r0, #0]
 800c044:	681b      	ldr	r3, [r3, #0]
 800c046:	4718      	bx	r3

0800c048 <_ZN8touchgfxL10applyNoiseEiihhh>:
 800c048:	e92d 48f0 	stmdb	sp!, {r4, r5, r6, r7, fp, lr}
 800c04c:	4f20      	ldr	r7, [pc, #128]	@ (800c0d0 <_ZN8touchgfxL10applyNoiseEiihhh+0x88>)
 800c04e:	f89d 5018 	ldrb.w	r5, [sp, #24]
 800c052:	fb80 0101 	smull	r0, r1, r0, r1
 800c056:	fba0 bc07 	umull	fp, ip, r0, r7
 800c05a:	fb07 cc01 	mla	ip, r7, r1, ip
 800c05e:	fb0b f70c 	mul.w	r7, fp, ip
 800c062:	fbab 010b 	umull	r0, r1, fp, fp
 800c066:	461c      	mov	r4, r3
 800c068:	eb01 0147 	add.w	r1, r1, r7, lsl #1
 800c06c:	fb00 f30c 	mul.w	r3, r0, ip
 800c070:	fb0b 3301 	mla	r3, fp, r1, r3
 800c074:	fba0 010b 	umull	r0, r1, r0, fp
 800c078:	4616      	mov	r6, r2
 800c07a:	4419      	add	r1, r3
 800c07c:	a312      	add	r3, pc, #72	@ (adr r3, 800c0c8 <_ZN8touchgfxL10applyNoiseEiihhh+0x80>)
 800c07e:	e9d3 2300 	ldrd	r2, r3, [r3]
 800c082:	f7f4 fdc9 	bl	8000c18 <__aeabi_ldivmod>
 800c086:	2ef7      	cmp	r6, #247	@ 0xf7
 800c088:	b290      	uxth	r0, r2
 800c08a:	bf9e      	ittt	ls
 800c08c:	f002 0207 	andls.w	r2, r2, #7
 800c090:	18b6      	addls	r6, r6, r2
 800c092:	b2f6      	uxtbls	r6, r6
 800c094:	2cfb      	cmp	r4, #251	@ 0xfb
 800c096:	bf9e      	ittt	ls
 800c098:	f3c0 03c1 	ubfxls	r3, r0, #3, #2
 800c09c:	18e4      	addls	r4, r4, r3
 800c09e:	b2e4      	uxtbls	r4, r4
 800c0a0:	2df7      	cmp	r5, #247	@ 0xf7
 800c0a2:	bf9c      	itt	ls
 800c0a4:	f3c0 1042 	ubfxls	r0, r0, #5, #3
 800c0a8:	182d      	addls	r5, r5, r0
 800c0aa:	480a      	ldr	r0, [pc, #40]	@ (800c0d4 <_ZN8touchgfxL10applyNoiseEiihhh+0x8c>)
 800c0ac:	ea4f 04c4 	mov.w	r4, r4, lsl #3
 800c0b0:	ea00 2006 	and.w	r0, r0, r6, lsl #8
 800c0b4:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 800c0b8:	bf98      	it	ls
 800c0ba:	b2ed      	uxtbls	r5, r5
 800c0bc:	4304      	orrs	r4, r0
 800c0be:	ea44 00d5 	orr.w	r0, r4, r5, lsr #3
 800c0c2:	b280      	uxth	r0, r0
 800c0c4:	e8bd 88f0 	ldmia.w	sp!, {r4, r5, r6, r7, fp, pc}
 800c0c8:	797a8d77 	.word	0x797a8d77
 800c0cc:	00000000 	.word	0x00000000
 800c0d0:	00ec4ba7 	.word	0x00ec4ba7
 800c0d4:	fffff800 	.word	0xfffff800

0800c0d8 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh>:
 800c0d8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c0dc:	ed2d 8b02 	vpush	{d8}
 800c0e0:	eb01 0442 	add.w	r4, r1, r2, lsl #1
 800c0e4:	b087      	sub	sp, #28
 800c0e6:	7c41      	ldrb	r1, [r0, #17]
 800c0e8:	f9bd 9048 	ldrsh.w	r9, [sp, #72]	@ 0x48
 800c0ec:	f9bd 604c 	ldrsh.w	r6, [sp, #76]	@ 0x4c
 800c0f0:	f89d a050 	ldrb.w	sl, [sp, #80]	@ 0x50
 800c0f4:	4605      	mov	r5, r0
 800c0f6:	2900      	cmp	r1, #0
 800c0f8:	f000 809a 	beq.w	800c230 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x158>
 800c0fc:	f9b0 2008 	ldrsh.w	r2, [r0, #8]
 800c100:	ed90 7a08 	vldr	s14, [r0, #32]
 800c104:	68c0      	ldr	r0, [r0, #12]
 800c106:	454a      	cmp	r2, r9
 800c108:	db25      	blt.n	800c156 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x7e>
 800c10a:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 800c10e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c112:	f640 72fc 	movw	r2, #4092	@ 0xffc
 800c116:	bfc8      	it	gt
 800c118:	2200      	movgt	r2, #0
 800c11a:	5882      	ldr	r2, [r0, r2]
 800c11c:	2100      	movs	r1, #0
 800c11e:	7c2d      	ldrb	r5, [r5, #16]
 800c120:	ea4f 2812 	mov.w	r8, r2, lsr #8
 800c124:	0950      	lsrs	r0, r2, #5
 800c126:	f408 4e78 	and.w	lr, r8, #63488	@ 0xf800
 800c12a:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 800c12e:	f3c2 0cc4 	ubfx	ip, r2, #3, #5
 800c132:	eb04 0746 	add.w	r7, r4, r6, lsl #1
 800c136:	2d00      	cmp	r5, #0
 800c138:	d044      	beq.n	800c1c4 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0xec>
 800c13a:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 800c13e:	d141      	bne.n	800c1c4 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0xec>
 800c140:	bb61      	cbnz	r1, 800c19c <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0xc4>
 800c142:	ea4e 0000 	orr.w	r0, lr, r0
 800c146:	ea4c 0500 	orr.w	r5, ip, r0
 800c14a:	42bc      	cmp	r4, r7
 800c14c:	f080 8217 	bcs.w	800c57e <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a6>
 800c150:	f824 5b02 	strh.w	r5, [r4], #2
 800c154:	e7f9      	b.n	800c14a <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x72>
 800c156:	f9b5 700a 	ldrsh.w	r7, [r5, #10]
 800c15a:	454f      	cmp	r7, r9
 800c15c:	dc08      	bgt.n	800c170 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x98>
 800c15e:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 800c162:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c166:	f640 72fc 	movw	r2, #4092	@ 0xffc
 800c16a:	bfd8      	it	le
 800c16c:	2200      	movle	r2, #0
 800c16e:	e7d4      	b.n	800c11a <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x42>
 800c170:	eba9 0202 	sub.w	r2, r9, r2
 800c174:	ee07 2a90 	vmov	s15, r2
 800c178:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800c17c:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 800c180:	ee67 7a87 	vmul.f32	s15, s15, s14
 800c184:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c188:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800c18c:	ee17 2a90 	vmov	r2, s15
 800c190:	bfd8      	it	le
 800c192:	f202 32ff 	addwle	r2, r2, #1023	@ 0x3ff
 800c196:	0092      	lsls	r2, r2, #2
 800c198:	5882      	ldr	r2, [r0, r2]
 800c19a:	e7c0      	b.n	800c11e <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x46>
 800c19c:	b2d5      	uxtb	r5, r2
 800c19e:	fa5f f888 	uxtb.w	r8, r8
 800c1a2:	f3c2 4a07 	ubfx	sl, r2, #16, #8
 800c1a6:	461e      	mov	r6, r3
 800c1a8:	42bc      	cmp	r4, r7
 800c1aa:	f080 81e8 	bcs.w	800c57e <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a6>
 800c1ae:	4630      	mov	r0, r6
 800c1b0:	9500      	str	r5, [sp, #0]
 800c1b2:	4643      	mov	r3, r8
 800c1b4:	4652      	mov	r2, sl
 800c1b6:	4649      	mov	r1, r9
 800c1b8:	f7ff ff46 	bl	800c048 <_ZN8touchgfxL10applyNoiseEiihhh>
 800c1bc:	3601      	adds	r6, #1
 800c1be:	f824 0b02 	strh.w	r0, [r4], #2
 800c1c2:	e7f1      	b.n	800c1a8 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0xd0>
 800c1c4:	0e12      	lsrs	r2, r2, #24
 800c1c6:	fb02 f20a 	mul.w	r2, r2, sl
 800c1ca:	1c53      	adds	r3, r2, #1
 800c1cc:	eb03 2222 	add.w	r2, r3, r2, asr #8
 800c1d0:	1212      	asrs	r2, r2, #8
 800c1d2:	fb02 f50c 	mul.w	r5, r2, ip
 800c1d6:	fb02 f10e 	mul.w	r1, r2, lr
 800c1da:	4350      	muls	r0, r2
 800c1dc:	f8df c3b0 	ldr.w	ip, [pc, #944]	@ 800c590 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4b8>
 800c1e0:	43d2      	mvns	r2, r2
 800c1e2:	f002 02ff 	and.w	r2, r2, #255	@ 0xff
 800c1e6:	26ff      	movs	r6, #255	@ 0xff
 800c1e8:	42bc      	cmp	r4, r7
 800c1ea:	f080 81c8 	bcs.w	800c57e <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a6>
 800c1ee:	f8b4 e000 	ldrh.w	lr, [r4]
 800c1f2:	ea0e 030c 	and.w	r3, lr, ip
 800c1f6:	f40e 68fc 	and.w	r8, lr, #2016	@ 0x7e0
 800c1fa:	fb02 1303 	mla	r3, r2, r3, r1
 800c1fe:	fb02 0808 	mla	r8, r2, r8, r0
 800c202:	fb93 f3f6 	sdiv	r3, r3, r6
 800c206:	fb98 f8f6 	sdiv	r8, r8, r6
 800c20a:	ea03 030c 	and.w	r3, r3, ip
 800c20e:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 800c212:	f00e 0e1f 	and.w	lr, lr, #31
 800c216:	ea43 0308 	orr.w	r3, r3, r8
 800c21a:	fb02 5e0e 	mla	lr, r2, lr, r5
 800c21e:	fb9e fef6 	sdiv	lr, lr, r6
 800c222:	f00e 0e1f 	and.w	lr, lr, #31
 800c226:	ea43 030e 	orr.w	r3, r3, lr
 800c22a:	f824 3b02 	strh.w	r3, [r4], #2
 800c22e:	e7db      	b.n	800c1e8 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x110>
 800c230:	7c82      	ldrb	r2, [r0, #18]
 800c232:	2a00      	cmp	r2, #0
 800c234:	d04f      	beq.n	800c2d6 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x1fe>
 800c236:	f9b0 2008 	ldrsh.w	r2, [r0, #8]
 800c23a:	ee07 2a90 	vmov	s15, r2
 800c23e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800c242:	ee07 3a10 	vmov	s14, r3
 800c246:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800c24a:	461f      	mov	r7, r3
 800c24c:	eef4 6ae7 	vcmpe.f32	s13, s15
 800c250:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c254:	f200 8095 	bhi.w	800c382 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x2aa>
 800c258:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 800c25c:	ee37 7a87 	vadd.f32	s14, s15, s14
 800c260:	f640 71fc 	movw	r1, #4092	@ 0xffc
 800c264:	ee37 7a66 	vsub.f32	s14, s14, s13
 800c268:	ee06 6a90 	vmov	s13, r6
 800c26c:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 800c270:	68ea      	ldr	r2, [r5, #12]
 800c272:	f895 c010 	ldrb.w	ip, [r5, #16]
 800c276:	eeb4 7ae6 	vcmpe.f32	s14, s13
 800c27a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c27e:	bf4a      	itet	mi
 800c280:	eebd 7ac7 	vcvtmi.s32.f32	s14, s14
 800c284:	9602      	strpl	r6, [sp, #8]
 800c286:	ed8d 7a02 	vstrmi	s14, [sp, #8]
 800c28a:	ed95 7a08 	vldr	s14, [r5, #32]
 800c28e:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 800c292:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c296:	bfc8      	it	gt
 800c298:	2100      	movgt	r1, #0
 800c29a:	5852      	ldr	r2, [r2, r1]
 800c29c:	9902      	ldr	r1, [sp, #8]
 800c29e:	ea4f 2b12 	mov.w	fp, r2, lsr #8
 800c2a2:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 800c2a6:	0950      	lsrs	r0, r2, #5
 800c2a8:	9103      	str	r1, [sp, #12]
 800c2aa:	f40b 4b78 	and.w	fp, fp, #63488	@ 0xf800
 800c2ae:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 800c2b2:	f3c2 01c4 	ubfx	r1, r2, #3, #5
 800c2b6:	f1bc 0f00 	cmp.w	ip, #0
 800c2ba:	d024      	beq.n	800c306 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x22e>
 800c2bc:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 800c2c0:	d121      	bne.n	800c306 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x22e>
 800c2c2:	ea4b 0b00 	orr.w	fp, fp, r0
 800c2c6:	ea41 010b 	orr.w	r1, r1, fp
 800c2ca:	9a03      	ldr	r2, [sp, #12]
 800c2cc:	4294      	cmp	r4, r2
 800c2ce:	d255      	bcs.n	800c37c <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x2a4>
 800c2d0:	f824 1b02 	strh.w	r1, [r4], #2
 800c2d4:	e7f9      	b.n	800c2ca <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x1f2>
 800c2d6:	ee07 9a10 	vmov	s14, r9
 800c2da:	edd0 7a06 	vldr	s15, [r0, #24]
 800c2de:	edd0 6a05 	vldr	s13, [r0, #20]
 800c2e2:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800c2e6:	ee37 7a67 	vsub.f32	s14, s14, s15
 800c2ea:	eec7 7a26 	vdiv.f32	s15, s14, s13
 800c2ee:	ed90 7a08 	vldr	s14, [r0, #32]
 800c2f2:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 800c2f6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c2fa:	bf44      	itt	mi
 800c2fc:	ed90 7a07 	vldrmi	s14, [r0, #28]
 800c300:	ee77 7ac7 	vsubmi.f32	s15, s15, s14
 800c304:	e79d      	b.n	800c242 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x16a>
 800c306:	0e12      	lsrs	r2, r2, #24
 800c308:	fb02 f20a 	mul.w	r2, r2, sl
 800c30c:	f102 0c01 	add.w	ip, r2, #1
 800c310:	eb0c 2222 	add.w	r2, ip, r2, asr #8
 800c314:	1212      	asrs	r2, r2, #8
 800c316:	4350      	muls	r0, r2
 800c318:	4351      	muls	r1, r2
 800c31a:	fb02 fb0b 	mul.w	fp, r2, fp
 800c31e:	f8df 8270 	ldr.w	r8, [pc, #624]	@ 800c590 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4b8>
 800c322:	9004      	str	r0, [sp, #16]
 800c324:	43d2      	mvns	r2, r2
 800c326:	9105      	str	r1, [sp, #20]
 800c328:	f002 02ff 	and.w	r2, r2, #255	@ 0xff
 800c32c:	f04f 0eff 	mov.w	lr, #255	@ 0xff
 800c330:	9903      	ldr	r1, [sp, #12]
 800c332:	428c      	cmp	r4, r1
 800c334:	d222      	bcs.n	800c37c <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x2a4>
 800c336:	8820      	ldrh	r0, [r4, #0]
 800c338:	f400 61fc 	and.w	r1, r0, #2016	@ 0x7e0
 800c33c:	460f      	mov	r7, r1
 800c33e:	9904      	ldr	r1, [sp, #16]
 800c340:	ea00 0c08 	and.w	ip, r0, r8
 800c344:	fb02 bc0c 	mla	ip, r2, ip, fp
 800c348:	fb02 1107 	mla	r1, r2, r7, r1
 800c34c:	fb9c fcfe 	sdiv	ip, ip, lr
 800c350:	fb91 f1fe 	sdiv	r1, r1, lr
 800c354:	ea0c 0c08 	and.w	ip, ip, r8
 800c358:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 800c35c:	ea4c 0101 	orr.w	r1, ip, r1
 800c360:	f000 0c1f 	and.w	ip, r0, #31
 800c364:	9805      	ldr	r0, [sp, #20]
 800c366:	fb02 0c0c 	mla	ip, r2, ip, r0
 800c36a:	fb9c fcfe 	sdiv	ip, ip, lr
 800c36e:	f00c 0c1f 	and.w	ip, ip, #31
 800c372:	ea41 010c 	orr.w	r1, r1, ip
 800c376:	f824 1b02 	strh.w	r1, [r4], #2
 800c37a:	e7d9      	b.n	800c330 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x258>
 800c37c:	9a02      	ldr	r2, [sp, #8]
 800c37e:	441a      	add	r2, r3
 800c380:	4617      	mov	r7, r2
 800c382:	441e      	add	r6, r3
 800c384:	b236      	sxth	r6, r6
 800c386:	42be      	cmp	r6, r7
 800c388:	f340 80f9 	ble.w	800c57e <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a6>
 800c38c:	ed95 7a07 	vldr	s14, [r5, #28]
 800c390:	ee06 7a90 	vmov	s13, r7
 800c394:	ee37 7a87 	vadd.f32	s14, s15, s14
 800c398:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 800c39c:	eeb4 7ae6 	vcmpe.f32	s14, s13
 800c3a0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c3a4:	f340 80b5 	ble.w	800c512 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x43a>
 800c3a8:	ee06 6a10 	vmov	s12, r6
 800c3ac:	eeb8 6ac6 	vcvt.f32.s32	s12, s12
 800c3b0:	ed9f 8a75 	vldr	s16, [pc, #468]	@ 800c588 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4b0>
 800c3b4:	7c2b      	ldrb	r3, [r5, #16]
 800c3b6:	eeb4 7ac6 	vcmpe.f32	s14, s12
 800c3ba:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c3be:	bfd8      	it	le
 800c3c0:	eebd 7ac7 	vcvtle.s32.f32	s14, s14
 800c3c4:	ed9f 6a71 	vldr	s12, [pc, #452]	@ 800c58c <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4b4>
 800c3c8:	bfd8      	it	le
 800c3ca:	ee17 8a10 	vmovle	r8, s14
 800c3ce:	ed95 7a08 	vldr	s14, [r5, #32]
 800c3d2:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 800c3d6:	bfc8      	it	gt
 800c3d8:	46b0      	movgt	r8, r6
 800c3da:	ee76 7ae7 	vsub.f32	s15, s13, s15
 800c3de:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c3e2:	eba8 0707 	sub.w	r7, r8, r7
 800c3e6:	bfd8      	it	le
 800c3e8:	eeb0 8a46 	vmovle.f32	s16, s12
 800c3ec:	eb04 0747 	add.w	r7, r4, r7, lsl #1
 800c3f0:	eea7 8a27 	vfma.f32	s16, s14, s15
 800c3f4:	b1db      	cbz	r3, 800c42e <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x356>
 800c3f6:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 800c3fa:	d118      	bne.n	800c42e <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x356>
 800c3fc:	42bc      	cmp	r4, r7
 800c3fe:	d262      	bcs.n	800c4c6 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x3ee>
 800c400:	eefd 7ac8 	vcvt.s32.f32	s15, s16
 800c404:	68eb      	ldr	r3, [r5, #12]
 800c406:	ee17 0a90 	vmov	r0, s15
 800c40a:	f853 2020 	ldr.w	r2, [r3, r0, lsl #2]
 800c40e:	b2d3      	uxtb	r3, r2
 800c410:	9300      	str	r3, [sp, #0]
 800c412:	4649      	mov	r1, r9
 800c414:	f3c2 2307 	ubfx	r3, r2, #8, #8
 800c418:	f3c2 4207 	ubfx	r2, r2, #16, #8
 800c41c:	f7ff fe14 	bl	800c048 <_ZN8touchgfxL10applyNoiseEiihhh>
 800c420:	f824 0b02 	strh.w	r0, [r4], #2
 800c424:	edd5 7a08 	vldr	s15, [r5, #32]
 800c428:	ee38 8a27 	vadd.f32	s16, s16, s15
 800c42c:	e7e6      	b.n	800c3fc <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x324>
 800c42e:	f8df b160 	ldr.w	fp, [pc, #352]	@ 800c590 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4b8>
 800c432:	f04f 09ff 	mov.w	r9, #255	@ 0xff
 800c436:	42bc      	cmp	r4, r7
 800c438:	d245      	bcs.n	800c4c6 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x3ee>
 800c43a:	eefd 7ac8 	vcvt.s32.f32	s15, s16
 800c43e:	68eb      	ldr	r3, [r5, #12]
 800c440:	f8b4 e000 	ldrh.w	lr, [r4]
 800c444:	ee17 2a90 	vmov	r2, s15
 800c448:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 800c44c:	0e13      	lsrs	r3, r2, #24
 800c44e:	fb03 f30a 	mul.w	r3, r3, sl
 800c452:	1c58      	adds	r0, r3, #1
 800c454:	eb00 2023 	add.w	r0, r0, r3, asr #8
 800c458:	1200      	asrs	r0, r0, #8
 800c45a:	ea6f 0c00 	mvn.w	ip, r0
 800c45e:	fa5f fc8c 	uxtb.w	ip, ip
 800c462:	ea0b 2112 	and.w	r1, fp, r2, lsr #8
 800c466:	ea0e 030b 	and.w	r3, lr, fp
 800c46a:	fb0c f303 	mul.w	r3, ip, r3
 800c46e:	b289      	uxth	r1, r1
 800c470:	fb00 3101 	mla	r1, r0, r1, r3
 800c474:	fb91 f1f9 	sdiv	r1, r1, r9
 800c478:	ea01 030b 	and.w	r3, r1, fp
 800c47c:	9302      	str	r3, [sp, #8]
 800c47e:	0953      	lsrs	r3, r2, #5
 800c480:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 800c484:	4619      	mov	r1, r3
 800c486:	f40e 63fc 	and.w	r3, lr, #2016	@ 0x7e0
 800c48a:	fb0c f303 	mul.w	r3, ip, r3
 800c48e:	fb00 3301 	mla	r3, r0, r1, r3
 800c492:	f00e 0e1f 	and.w	lr, lr, #31
 800c496:	9902      	ldr	r1, [sp, #8]
 800c498:	fb93 f3f9 	sdiv	r3, r3, r9
 800c49c:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 800c4a0:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 800c4a4:	fb0c fc0e 	mul.w	ip, ip, lr
 800c4a8:	4319      	orrs	r1, r3
 800c4aa:	fb00 c002 	mla	r0, r0, r2, ip
 800c4ae:	fb90 f0f9 	sdiv	r0, r0, r9
 800c4b2:	f000 001f 	and.w	r0, r0, #31
 800c4b6:	4301      	orrs	r1, r0
 800c4b8:	f824 1b02 	strh.w	r1, [r4], #2
 800c4bc:	edd5 7a08 	vldr	s15, [r5, #32]
 800c4c0:	ee38 8a27 	vadd.f32	s16, s16, s15
 800c4c4:	e7b7      	b.n	800c436 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x35e>
 800c4c6:	4546      	cmp	r6, r8
 800c4c8:	dd59      	ble.n	800c57e <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a6>
 800c4ca:	edd5 7a08 	vldr	s15, [r5, #32]
 800c4ce:	68ea      	ldr	r2, [r5, #12]
 800c4d0:	7c29      	ldrb	r1, [r5, #16]
 800c4d2:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800c4d6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c4da:	f640 73fc 	movw	r3, #4092	@ 0xffc
 800c4de:	bfd8      	it	le
 800c4e0:	2300      	movle	r3, #0
 800c4e2:	eba6 0608 	sub.w	r6, r6, r8
 800c4e6:	58d2      	ldr	r2, [r2, r3]
 800c4e8:	0a10      	lsrs	r0, r2, #8
 800c4ea:	0953      	lsrs	r3, r2, #5
 800c4ec:	eb04 0646 	add.w	r6, r4, r6, lsl #1
 800c4f0:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
 800c4f4:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 800c4f8:	f3c2 07c4 	ubfx	r7, r2, #3, #5
 800c4fc:	b159      	cbz	r1, 800c516 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x43e>
 800c4fe:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 800c502:	d108      	bne.n	800c516 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x43e>
 800c504:	4318      	orrs	r0, r3
 800c506:	4338      	orrs	r0, r7
 800c508:	42b4      	cmp	r4, r6
 800c50a:	d238      	bcs.n	800c57e <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a6>
 800c50c:	f824 0b02 	strh.w	r0, [r4], #2
 800c510:	e7fa      	b.n	800c508 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x430>
 800c512:	46b8      	mov	r8, r7
 800c514:	e7d9      	b.n	800c4ca <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x3f2>
 800c516:	0e12      	lsrs	r2, r2, #24
 800c518:	fb02 f10a 	mul.w	r1, r2, sl
 800c51c:	1c4a      	adds	r2, r1, #1
 800c51e:	eb02 2221 	add.w	r2, r2, r1, asr #8
 800c522:	1212      	asrs	r2, r2, #8
 800c524:	fb02 f507 	mul.w	r5, r2, r7
 800c528:	4350      	muls	r0, r2
 800c52a:	4353      	muls	r3, r2
 800c52c:	f8df c060 	ldr.w	ip, [pc, #96]	@ 800c590 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4b8>
 800c530:	43d2      	mvns	r2, r2
 800c532:	f002 02ff 	and.w	r2, r2, #255	@ 0xff
 800c536:	27ff      	movs	r7, #255	@ 0xff
 800c538:	42b4      	cmp	r4, r6
 800c53a:	d220      	bcs.n	800c57e <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a6>
 800c53c:	f8b4 e000 	ldrh.w	lr, [r4]
 800c540:	ea0e 010c 	and.w	r1, lr, ip
 800c544:	f40e 68fc 	and.w	r8, lr, #2016	@ 0x7e0
 800c548:	fb02 0101 	mla	r1, r2, r1, r0
 800c54c:	fb02 3808 	mla	r8, r2, r8, r3
 800c550:	fb91 f1f7 	sdiv	r1, r1, r7
 800c554:	fb98 f8f7 	sdiv	r8, r8, r7
 800c558:	ea01 010c 	and.w	r1, r1, ip
 800c55c:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 800c560:	f00e 0e1f 	and.w	lr, lr, #31
 800c564:	ea41 0108 	orr.w	r1, r1, r8
 800c568:	fb02 5e0e 	mla	lr, r2, lr, r5
 800c56c:	fb9e fef7 	sdiv	lr, lr, r7
 800c570:	f00e 0e1f 	and.w	lr, lr, #31
 800c574:	ea41 010e 	orr.w	r1, r1, lr
 800c578:	f824 1b02 	strh.w	r1, [r4], #2
 800c57c:	e7dc      	b.n	800c538 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x460>
 800c57e:	b007      	add	sp, #28
 800c580:	ecbd 8b02 	vpop	{d8}
 800c584:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c588:	00000000 	.word	0x00000000
 800c58c:	447ffffe 	.word	0x447ffffe
 800c590:	fffff800 	.word	0xfffff800

0800c594 <_ZNK8touchgfx27PainterRGB565LinearGradient8tearDownEv>:
 800c594:	4770      	bx	lr

0800c596 <_ZN8touchgfx27PainterRGB565LinearGradientD1Ev>:
 800c596:	4770      	bx	lr

0800c598 <_ZN8touchgfx27PainterRGB565LinearGradientD0Ev>:
 800c598:	b510      	push	{r4, lr}
 800c59a:	2124      	movs	r1, #36	@ 0x24
 800c59c:	4604      	mov	r4, r0
 800c59e:	f015 fbc2 	bl	8021d26 <_ZdlPvj>
 800c5a2:	4620      	mov	r0, r4
 800c5a4:	bd10      	pop	{r4, pc}
	...

0800c5a8 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
 800c5a8:	4b06      	ldr	r3, [pc, #24]	@ (800c5c4 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE+0x1c>)
 800c5aa:	60c1      	str	r1, [r0, #12]
 800c5ac:	094a      	lsrs	r2, r1, #5
 800c5ae:	ea03 2311 	and.w	r3, r3, r1, lsr #8
 800c5b2:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 800c5b6:	4313      	orrs	r3, r2
 800c5b8:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 800c5bc:	4319      	orrs	r1, r3
 800c5be:	8201      	strh	r1, [r0, #16]
 800c5c0:	4770      	bx	lr
 800c5c2:	bf00      	nop
 800c5c4:	fffff800 	.word	0xfffff800

0800c5c8 <_ZThn8_N8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
 800c5c8:	f1a0 0008 	sub.w	r0, r0, #8
 800c5cc:	e7ec      	b.n	800c5a8 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>
 800c5ce:	bf00      	nop

0800c5d0 <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv>:
 800c5d0:	b508      	push	{r3, lr}
 800c5d2:	4b05      	ldr	r3, [pc, #20]	@ (800c5e8 <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv+0x18>)
 800c5d4:	6818      	ldr	r0, [r3, #0]
 800c5d6:	6803      	ldr	r3, [r0, #0]
 800c5d8:	f8d3 30ac 	ldr.w	r3, [r3, #172]	@ 0xac
 800c5dc:	4798      	blx	r3
 800c5de:	1e43      	subs	r3, r0, #1
 800c5e0:	4258      	negs	r0, r3
 800c5e2:	4158      	adcs	r0, r3
 800c5e4:	bd08      	pop	{r3, pc}
 800c5e6:	bf00      	nop
 800c5e8:	200133d4 	.word	0x200133d4

0800c5ec <_ZN8touchgfx13PainterRGB565D1Ev>:
 800c5ec:	4770      	bx	lr

0800c5ee <_ZThn8_N8touchgfx13PainterRGB565D1Ev>:
 800c5ee:	3808      	subs	r0, #8
 800c5f0:	4770      	bx	lr

0800c5f2 <_ZNK8touchgfx13PainterRGB5655paintEPhssssh>:
 800c5f2:	b430      	push	{r4, r5}
 800c5f4:	eb01 0442 	add.w	r4, r1, r2, lsl #1
 800c5f8:	f9bd 500c 	ldrsh.w	r5, [sp, #12]
 800c5fc:	8a02      	ldrh	r2, [r0, #16]
 800c5fe:	9202      	str	r2, [sp, #8]
 800c600:	f89d 3010 	ldrb.w	r3, [sp, #16]
 800c604:	68c2      	ldr	r2, [r0, #12]
 800c606:	4629      	mov	r1, r5
 800c608:	4620      	mov	r0, r4
 800c60a:	bc30      	pop	{r4, r5}
 800c60c:	f7f5 b95e 	b.w	80018cc <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>

0800c610 <_ZNK8touchgfx13PainterRGB5658tearDownEv>:
 800c610:	f7f5 b950 	b.w	80018b4 <_ZN8touchgfx5paint8tearDownEv>

0800c614 <_ZN8touchgfx13PainterRGB565D0Ev>:
 800c614:	b510      	push	{r4, lr}
 800c616:	2114      	movs	r1, #20
 800c618:	4604      	mov	r4, r0
 800c61a:	f015 fb84 	bl	8021d26 <_ZdlPvj>
 800c61e:	4620      	mov	r0, r4
 800c620:	bd10      	pop	{r4, pc}

0800c622 <_ZThn8_N8touchgfx13PainterRGB565D0Ev>:
 800c622:	f1a0 0008 	sub.w	r0, r0, #8
 800c626:	e7f5      	b.n	800c614 <_ZN8touchgfx13PainterRGB565D0Ev>

0800c628 <_ZN8touchgfx17CWRVectorRenderer8tearDownEv>:
 800c628:	2300      	movs	r3, #0
 800c62a:	84c3      	strh	r3, [r0, #38]	@ 0x26
 800c62c:	8503      	strh	r3, [r0, #40]	@ 0x28
 800c62e:	8543      	strh	r3, [r0, #42]	@ 0x2a
 800c630:	8583      	strh	r3, [r0, #44]	@ 0x2c
 800c632:	6980      	ldr	r0, [r0, #24]
 800c634:	b110      	cbz	r0, 800c63c <_ZN8touchgfx17CWRVectorRenderer8tearDownEv+0x14>
 800c636:	6803      	ldr	r3, [r0, #0]
 800c638:	691b      	ldr	r3, [r3, #16]
 800c63a:	4718      	bx	r3
 800c63c:	4770      	bx	lr

0800c63e <_ZN8touchgfx17CWRVectorRenderer14setStrokeWidthEf>:
 800c63e:	ed80 0a0c 	vstr	s0, [r0, #48]	@ 0x30
 800c642:	4770      	bx	lr

0800c644 <_ZN8touchgfx17CWRVectorRenderer8setColorENS_9colortypeE>:
 800c644:	b538      	push	{r3, r4, r5, lr}
 800c646:	0e0b      	lsrs	r3, r1, #24
 800c648:	7783      	strb	r3, [r0, #30]
 800c64a:	6803      	ldr	r3, [r0, #0]
 800c64c:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800c64e:	4604      	mov	r4, r0
 800c650:	460d      	mov	r5, r1
 800c652:	4798      	blx	r3
 800c654:	6803      	ldr	r3, [r0, #0]
 800c656:	4629      	mov	r1, r5
 800c658:	689b      	ldr	r3, [r3, #8]
 800c65a:	4798      	blx	r3
 800c65c:	6823      	ldr	r3, [r4, #0]
 800c65e:	4620      	mov	r0, r4
 800c660:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800c662:	4798      	blx	r3
 800c664:	61a0      	str	r0, [r4, #24]
 800c666:	bd38      	pop	{r3, r4, r5, pc}

0800c668 <_ZN8touchgfx17CWRVectorRenderer8setAlphaEh>:
 800c668:	7741      	strb	r1, [r0, #29]
 800c66a:	4770      	bx	lr

0800c66c <_ZN8touchgfx17CWRVectorRenderer23setTransformationMatrixERKNS_9Matrix3x3E>:
 800c66c:	b530      	push	{r4, r5, lr}
 800c66e:	460d      	mov	r5, r1
 800c670:	f100 0434 	add.w	r4, r0, #52	@ 0x34
 800c674:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800c676:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800c678:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800c67a:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800c67c:	682b      	ldr	r3, [r5, #0]
 800c67e:	6023      	str	r3, [r4, #0]
 800c680:	bd30      	pop	{r4, r5, pc}

0800c682 <_ZN8touchgfx17CWRVectorRenderer5setupERKNS_4RectES3_>:
 800c682:	b538      	push	{r3, r4, r5, lr}
 800c684:	4604      	mov	r4, r0
 800c686:	1d03      	adds	r3, r0, #4
 800c688:	6808      	ldr	r0, [r1, #0]
 800c68a:	6849      	ldr	r1, [r1, #4]
 800c68c:	c303      	stmia	r3!, {r0, r1}
 800c68e:	6813      	ldr	r3, [r2, #0]
 800c690:	f8c4 3026 	str.w	r3, [r4, #38]	@ 0x26
 800c694:	6853      	ldr	r3, [r2, #4]
 800c696:	f8c4 302a 	str.w	r3, [r4, #42]	@ 0x2a
 800c69a:	2500      	movs	r5, #0
 800c69c:	61a5      	str	r5, [r4, #24]
 800c69e:	f104 0034 	add.w	r0, r4, #52	@ 0x34
 800c6a2:	f004 fe77 	bl	8011394 <_ZN8touchgfx9Matrix3x35resetEv>
 800c6a6:	23ff      	movs	r3, #255	@ 0xff
 800c6a8:	7763      	strb	r3, [r4, #29]
 800c6aa:	77a3      	strb	r3, [r4, #30]
 800c6ac:	f04f 537e 	mov.w	r3, #1065353216	@ 0x3f800000
 800c6b0:	6323      	str	r3, [r4, #48]	@ 0x30
 800c6b2:	2301      	movs	r3, #1
 800c6b4:	f884 3024 	strb.w	r3, [r4, #36]	@ 0x24
 800c6b8:	f884 5025 	strb.w	r5, [r4, #37]	@ 0x25
 800c6bc:	bd38      	pop	{r3, r4, r5, pc}
	...

0800c6c0 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_>:
 800c6c0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800c6c4:	ed2d 8b0a 	vpush	{d8-d12}
 800c6c8:	ee70 7a41 	vsub.f32	s15, s0, s2
 800c6cc:	b087      	sub	sp, #28
 800c6ce:	eef5 7a40 	vcmp.f32	s15, #0.0
 800c6d2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c6d6:	4605      	mov	r5, r0
 800c6d8:	eef0 9a40 	vmov.f32	s19, s0
 800c6dc:	eeb0 aa60 	vmov.f32	s20, s1
 800c6e0:	eeb0 9a41 	vmov.f32	s18, s2
 800c6e4:	eef0 8a61 	vmov.f32	s17, s3
 800c6e8:	eeb0 ca42 	vmov.f32	s24, s4
 800c6ec:	eef0 ca62 	vmov.f32	s25, s5
 800c6f0:	f89d 6060 	ldrb.w	r6, [sp, #96]	@ 0x60
 800c6f4:	9f19      	ldr	r7, [sp, #100]	@ 0x64
 800c6f6:	6802      	ldr	r2, [r0, #0]
 800c6f8:	d112      	bne.n	800c720 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x60>
 800c6fa:	ee70 7ae1 	vsub.f32	s15, s1, s3
 800c6fe:	eef5 7a40 	vcmp.f32	s15, #0.0
 800c702:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c706:	d10b      	bne.n	800c720 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x60>
 800c708:	f101 4180 	add.w	r1, r1, #1073741824	@ 0x40000000
 800c70c:	3901      	subs	r1, #1
 800c70e:	6a92      	ldr	r2, [r2, #40]	@ 0x28
 800c710:	f853 1021 	ldr.w	r1, [r3, r1, lsl #2]
 800c714:	b007      	add	sp, #28
 800c716:	ecbd 8b0a 	vpop	{d8-d12}
 800c71a:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800c71e:	4710      	bx	r2
 800c720:	23ff      	movs	r3, #255	@ 0xff
 800c722:	77ab      	strb	r3, [r5, #30]
 800c724:	6b93      	ldr	r3, [r2, #56]	@ 0x38
 800c726:	f8df 92c4 	ldr.w	r9, [pc, #708]	@ 800c9ec <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x32c>
 800c72a:	4628      	mov	r0, r5
 800c72c:	4798      	blx	r3
 800c72e:	f105 0834 	add.w	r8, r5, #52	@ 0x34
 800c732:	f9b5 3008 	ldrsh.w	r3, [r5, #8]
 800c736:	80c3      	strh	r3, [r0, #6]
 800c738:	eef0 0a4a 	vmov.f32	s1, s20
 800c73c:	eeb0 0a69 	vmov.f32	s0, s19
 800c740:	4604      	mov	r4, r0
 800c742:	4640      	mov	r0, r8
 800c744:	f004 fed5 	bl	80114f2 <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 800c748:	4640      	mov	r0, r8
 800c74a:	eeb0 ba40 	vmov.f32	s22, s0
 800c74e:	eef0 ba60 	vmov.f32	s23, s1
 800c752:	ed8d 0a00 	vstr	s0, [sp]
 800c756:	edcd 0a01 	vstr	s1, [sp, #4]
 800c75a:	eeb0 0a49 	vmov.f32	s0, s18
 800c75e:	eef0 0a68 	vmov.f32	s1, s17
 800c762:	f004 fec6 	bl	80114f2 <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 800c766:	eeb4 ba40 	vcmp.f32	s22, s0
 800c76a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c76e:	eef4 ba60 	vcmp.f32	s23, s1
 800c772:	bf0c      	ite	eq
 800c774:	2301      	moveq	r3, #1
 800c776:	2300      	movne	r3, #0
 800c778:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c77c:	eeb4 ba40 	vcmp.f32	s22, s0
 800c780:	7463      	strb	r3, [r4, #17]
 800c782:	bf0c      	ite	eq
 800c784:	2301      	moveq	r3, #1
 800c786:	2300      	movne	r3, #0
 800c788:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c78c:	eeb0 8a40 	vmov.f32	s16, s0
 800c790:	eef0 aa60 	vmov.f32	s21, s1
 800c794:	ed8d 0a02 	vstr	s0, [sp, #8]
 800c798:	edcd 0a03 	vstr	s1, [sp, #12]
 800c79c:	74a3      	strb	r3, [r4, #18]
 800c79e:	d030      	beq.n	800c802 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x142>
 800c7a0:	eef4 ba60 	vcmp.f32	s23, s1
 800c7a4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c7a8:	d02b      	beq.n	800c802 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x142>
 800c7aa:	ee39 9a69 	vsub.f32	s18, s18, s19
 800c7ae:	ee78 8aca 	vsub.f32	s17, s17, s20
 800c7b2:	ee89 7a0c 	vdiv.f32	s14, s18, s24
 800c7b6:	4640      	mov	r0, r8
 800c7b8:	eec8 7aac 	vdiv.f32	s15, s17, s25
 800c7bc:	eef0 0a4a 	vmov.f32	s1, s20
 800c7c0:	eeb0 0a69 	vmov.f32	s0, s19
 800c7c4:	eea7 0acc 	vfms.f32	s0, s15, s24
 800c7c8:	eeec 0a87 	vfma.f32	s1, s25, s14
 800c7cc:	f004 fe91 	bl	80114f2 <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 800c7d0:	f899 3000 	ldrb.w	r3, [r9]
 800c7d4:	edcd 0a05 	vstr	s1, [sp, #20]
 800c7d8:	ee70 0aeb 	vsub.f32	s1, s1, s23
 800c7dc:	2b01      	cmp	r3, #1
 800c7de:	ed8d 0a04 	vstr	s0, [sp, #16]
 800c7e2:	ee30 0a4b 	vsub.f32	s0, s0, s22
 800c7e6:	bf02      	ittt	eq
 800c7e8:	eef1 7a60 	vnegeq.f32	s15, s1
 800c7ec:	eef0 0a40 	vmoveq.f32	s1, s0
 800c7f0:	eeb0 0a67 	vmoveq.f32	s0, s15
 800c7f4:	eeb5 0a40 	vcmp.f32	s0, #0.0
 800c7f8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c7fc:	d134      	bne.n	800c868 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x1a8>
 800c7fe:	2301      	movs	r3, #1
 800c800:	74a3      	strb	r3, [r4, #18]
 800c802:	f899 2000 	ldrb.w	r2, [r9]
 800c806:	7c63      	ldrb	r3, [r4, #17]
 800c808:	2a01      	cmp	r2, #1
 800c80a:	f040 80a3 	bne.w	800c954 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x294>
 800c80e:	2b00      	cmp	r3, #0
 800c810:	d072      	beq.n	800c8f8 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x238>
 800c812:	ee3a 7aeb 	vsub.f32	s14, s21, s23
 800c816:	eddf 6a73 	vldr	s13, [pc, #460]	@ 800c9e4 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x324>
 800c81a:	eec6 7a87 	vdiv.f32	s15, s13, s14
 800c81e:	eef4 baea 	vcmpe.f32	s23, s21
 800c822:	edc4 7a08 	vstr	s15, [r4, #32]
 800c826:	eefd 7aea 	vcvt.s32.f32	s15, s21
 800c82a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c82e:	ee17 3a90 	vmov	r3, s15
 800c832:	eefd 7aeb 	vcvt.s32.f32	s15, s23
 800c836:	b21a      	sxth	r2, r3
 800c838:	ee17 3a90 	vmov	r3, s15
 800c83c:	b21b      	sxth	r3, r3
 800c83e:	bf47      	ittee	mi
 800c840:	8123      	strhmi	r3, [r4, #8]
 800c842:	8162      	strhmi	r2, [r4, #10]
 800c844:	8122      	strhpl	r2, [r4, #8]
 800c846:	8163      	strhpl	r3, [r4, #10]
 800c848:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800c84c:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 800c850:	1a9b      	subs	r3, r3, r2
 800c852:	ee07 3a90 	vmov	s15, r3
 800c856:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800c85a:	2300      	movs	r3, #0
 800c85c:	7463      	strb	r3, [r4, #17]
 800c85e:	edc4 7a07 	vstr	s15, [r4, #28]
 800c862:	2301      	movs	r3, #1
 800c864:	74a3      	strb	r3, [r4, #18]
 800c866:	e03f      	b.n	800c8e8 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x228>
 800c868:	ee80 7a80 	vdiv.f32	s14, s1, s0
 800c86c:	eeb5 7a40 	vcmp.f32	s14, #0.0
 800c870:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c874:	ed84 7a05 	vstr	s14, [r4, #20]
 800c878:	d102      	bne.n	800c880 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x1c0>
 800c87a:	2301      	movs	r3, #1
 800c87c:	7463      	strb	r3, [r4, #17]
 800c87e:	e7c0      	b.n	800c802 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x142>
 800c880:	2b01      	cmp	r3, #1
 800c882:	bf03      	ittte	eq
 800c884:	f9b4 2006 	ldrsheq.w	r2, [r4, #6]
 800c888:	ee07 2a90 	vmoveq	s15, r2
 800c88c:	eef8 7ae7 	vcvteq.f32.s32	s15, s15
 800c890:	eef0 7a6b 	vmovne.f32	s15, s23
 800c894:	bf0a      	itet	eq
 800c896:	ee77 7acb 	vsubeq.f32	s15, s15, s22
 800c89a:	eeeb 7a47 	vfmsne.f32	s15, s22, s14
 800c89e:	eeeb 7ac7 	vfmseq.f32	s15, s23, s14
 800c8a2:	2b01      	cmp	r3, #1
 800c8a4:	ee38 8a4b 	vsub.f32	s16, s16, s22
 800c8a8:	ee7a aaeb 	vsub.f32	s21, s21, s23
 800c8ac:	edc4 7a06 	vstr	s15, [r4, #24]
 800c8b0:	bf02      	ittt	eq
 800c8b2:	eef1 7a48 	vnegeq.f32	s15, s16
 800c8b6:	eeb0 8a6a 	vmoveq.f32	s16, s21
 800c8ba:	eef0 aa67 	vmoveq.f32	s21, s15
 800c8be:	eeca 7a87 	vdiv.f32	s15, s21, s14
 800c8c2:	ed9f 7a49 	vldr	s14, [pc, #292]	@ 800c9e8 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x328>
 800c8c6:	ee38 8a67 	vsub.f32	s16, s16, s15
 800c8ca:	eec7 7a08 	vdiv.f32	s15, s14, s16
 800c8ce:	eeb5 8ac0 	vcmpe.f32	s16, #0.0
 800c8d2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c8d6:	ed84 8a07 	vstr	s16, [r4, #28]
 800c8da:	edc4 7a08 	vstr	s15, [r4, #32]
 800c8de:	d503      	bpl.n	800c8e8 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x228>
 800c8e0:	eeb1 8a48 	vneg.f32	s16, s16
 800c8e4:	ed84 8a07 	vstr	s16, [r4, #28]
 800c8e8:	60e7      	str	r7, [r4, #12]
 800c8ea:	7426      	strb	r6, [r4, #16]
 800c8ec:	61ac      	str	r4, [r5, #24]
 800c8ee:	b007      	add	sp, #28
 800c8f0:	ecbd 8b0a 	vpop	{d8-d12}
 800c8f4:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800c8f8:	7ca3      	ldrb	r3, [r4, #18]
 800c8fa:	2b00      	cmp	r3, #0
 800c8fc:	d0f4      	beq.n	800c8e8 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x228>
 800c8fe:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 800c902:	eddf 6a38 	vldr	s13, [pc, #224]	@ 800c9e4 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x324>
 800c906:	ee00 3a10 	vmov	s0, r3
 800c90a:	eeb8 0ac0 	vcvt.f32.s32	s0, s0
 800c90e:	ee30 8a48 	vsub.f32	s16, s0, s16
 800c912:	ee30 0a4b 	vsub.f32	s0, s0, s22
 800c916:	ee38 7a40 	vsub.f32	s14, s16, s0
 800c91a:	eeb4 8ac0 	vcmpe.f32	s16, s0
 800c91e:	eec6 7a87 	vdiv.f32	s15, s13, s14
 800c922:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c926:	edc4 7a08 	vstr	s15, [r4, #32]
 800c92a:	eefd 7ac8 	vcvt.s32.f32	s15, s16
 800c92e:	ee17 3a90 	vmov	r3, s15
 800c932:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 800c936:	b21a      	sxth	r2, r3
 800c938:	ee17 3a90 	vmov	r3, s15
 800c93c:	b21b      	sxth	r3, r3
 800c93e:	bfcc      	ite	gt
 800c940:	8123      	strhgt	r3, [r4, #8]
 800c942:	8163      	strhle	r3, [r4, #10]
 800c944:	f04f 0301 	mov.w	r3, #1
 800c948:	7463      	strb	r3, [r4, #17]
 800c94a:	bfcc      	ite	gt
 800c94c:	8162      	strhgt	r2, [r4, #10]
 800c94e:	8122      	strhle	r2, [r4, #8]
 800c950:	2300      	movs	r3, #0
 800c952:	e787      	b.n	800c864 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x1a4>
 800c954:	b1db      	cbz	r3, 800c98e <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x2ce>
 800c956:	ee3a 7aeb 	vsub.f32	s14, s21, s23
 800c95a:	eddf 6a22 	vldr	s13, [pc, #136]	@ 800c9e4 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x324>
 800c95e:	eec6 7a87 	vdiv.f32	s15, s13, s14
 800c962:	eef4 baea 	vcmpe.f32	s23, s21
 800c966:	edc4 7a08 	vstr	s15, [r4, #32]
 800c96a:	eefd 7aea 	vcvt.s32.f32	s15, s21
 800c96e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c972:	ee17 3a90 	vmov	r3, s15
 800c976:	eefd 7aeb 	vcvt.s32.f32	s15, s23
 800c97a:	b21a      	sxth	r2, r3
 800c97c:	ee17 3a90 	vmov	r3, s15
 800c980:	b21b      	sxth	r3, r3
 800c982:	bf47      	ittee	mi
 800c984:	8123      	strhmi	r3, [r4, #8]
 800c986:	8162      	strhmi	r2, [r4, #10]
 800c988:	8122      	strhpl	r2, [r4, #8]
 800c98a:	8163      	strhpl	r3, [r4, #10]
 800c98c:	e7ac      	b.n	800c8e8 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x228>
 800c98e:	7ca3      	ldrb	r3, [r4, #18]
 800c990:	2b00      	cmp	r3, #0
 800c992:	d0a9      	beq.n	800c8e8 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x228>
 800c994:	ee38 7a4b 	vsub.f32	s14, s16, s22
 800c998:	eddf 6a12 	vldr	s13, [pc, #72]	@ 800c9e4 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x324>
 800c99c:	eec6 7a87 	vdiv.f32	s15, s13, s14
 800c9a0:	eeb4 bac8 	vcmpe.f32	s22, s16
 800c9a4:	edc4 7a08 	vstr	s15, [r4, #32]
 800c9a8:	eefd 7ac8 	vcvt.s32.f32	s15, s16
 800c9ac:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c9b0:	ee17 3a90 	vmov	r3, s15
 800c9b4:	eefd 7acb 	vcvt.s32.f32	s15, s22
 800c9b8:	b21a      	sxth	r2, r3
 800c9ba:	ee17 3a90 	vmov	r3, s15
 800c9be:	b21b      	sxth	r3, r3
 800c9c0:	bf47      	ittee	mi
 800c9c2:	8123      	strhmi	r3, [r4, #8]
 800c9c4:	8162      	strhmi	r2, [r4, #10]
 800c9c6:	8122      	strhpl	r2, [r4, #8]
 800c9c8:	8163      	strhpl	r3, [r4, #10]
 800c9ca:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800c9ce:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 800c9d2:	1a9b      	subs	r3, r3, r2
 800c9d4:	ee07 3a90 	vmov	s15, r3
 800c9d8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800c9dc:	edc4 7a07 	vstr	s15, [r4, #28]
 800c9e0:	e782      	b.n	800c8e8 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x228>
 800c9e2:	bf00      	nop
 800c9e4:	447ffffe 	.word	0x447ffffe
 800c9e8:	44800000 	.word	0x44800000
 800c9ec:	200133ca 	.word	0x200133ca

0800c9f0 <_ZN8touchgfx6Canvas17quadraticBezierToEffffff>:
 800c9f0:	b510      	push	{r4, lr}
 800c9f2:	2100      	movs	r1, #0
 800c9f4:	ed2d 8b02 	vpush	{d8}
 800c9f8:	eef0 8a62 	vmov.f32	s17, s5
 800c9fc:	4604      	mov	r4, r0
 800c9fe:	eeb0 8a42 	vmov.f32	s16, s4
 800ca02:	f014 ff1f 	bl	8021844 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj>
 800ca06:	eef0 7a68 	vmov.f32	s15, s17
 800ca0a:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 800ca0e:	6823      	ldr	r3, [r4, #0]
 800ca10:	ee17 2a90 	vmov	r2, s15
 800ca14:	eef0 7a48 	vmov.f32	s15, s16
 800ca18:	ecbd 8b02 	vpop	{d8}
 800ca1c:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 800ca20:	4620      	mov	r0, r4
 800ca22:	689b      	ldr	r3, [r3, #8]
 800ca24:	ee17 1a90 	vmov	r1, s15
 800ca28:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800ca2c:	4718      	bx	r3

0800ca2e <_ZN8touchgfx6Canvas13cubicBezierToEffffffff>:
 800ca2e:	b510      	push	{r4, lr}
 800ca30:	2100      	movs	r1, #0
 800ca32:	ed2d 8b02 	vpush	{d8}
 800ca36:	eef0 8a63 	vmov.f32	s17, s7
 800ca3a:	4604      	mov	r4, r0
 800ca3c:	eeb0 8a43 	vmov.f32	s16, s6
 800ca40:	f014 ffc2 	bl	80219c8 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj>
 800ca44:	eef0 7a68 	vmov.f32	s15, s17
 800ca48:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 800ca4c:	6823      	ldr	r3, [r4, #0]
 800ca4e:	ee17 2a90 	vmov	r2, s15
 800ca52:	eef0 7a48 	vmov.f32	s15, s16
 800ca56:	ecbd 8b02 	vpop	{d8}
 800ca5a:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 800ca5e:	4620      	mov	r0, r4
 800ca60:	689b      	ldr	r3, [r3, #8]
 800ca62:	ee17 1a90 	vmov	r1, s15
 800ca66:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800ca6a:	4718      	bx	r3

0800ca6c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19moveToWithTransformEff>:
 800ca6c:	b513      	push	{r0, r1, r4, lr}
 800ca6e:	4604      	mov	r4, r0
 800ca70:	6f40      	ldr	r0, [r0, #116]	@ 0x74
 800ca72:	f004 fd3e 	bl	80114f2 <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 800ca76:	eef0 7a60 	vmov.f32	s15, s1
 800ca7a:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 800ca7e:	4620      	mov	r0, r4
 800ca80:	ee17 2a90 	vmov	r2, s15
 800ca84:	eef0 7a40 	vmov.f32	s15, s0
 800ca88:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 800ca8c:	ee17 1a90 	vmov	r1, s15
 800ca90:	b002      	add	sp, #8
 800ca92:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800ca96:	f014 be2f 	b.w	80216f8 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>

0800ca9a <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>:
 800ca9a:	b513      	push	{r0, r1, r4, lr}
 800ca9c:	4604      	mov	r4, r0
 800ca9e:	6f40      	ldr	r0, [r0, #116]	@ 0x74
 800caa0:	f004 fd27 	bl	80114f2 <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 800caa4:	eef0 7a60 	vmov.f32	s15, s1
 800caa8:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 800caac:	4620      	mov	r0, r4
 800caae:	ee17 2a90 	vmov	r2, s15
 800cab2:	eef0 7a40 	vmov.f32	s15, s0
 800cab6:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 800caba:	ee17 1a90 	vmov	r1, s15
 800cabe:	b002      	add	sp, #8
 800cac0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800cac4:	f014 be65 	b.w	8021792 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>

0800cac8 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf>:
 800cac8:	b5f0      	push	{r4, r5, r6, r7, lr}
 800caca:	e9dd 0c05 	ldrd	r0, ip, [sp, #20]
 800cace:	2400      	movs	r4, #0
 800cad0:	9f07      	ldr	r7, [sp, #28]
 800cad2:	4463      	add	r3, ip
 800cad4:	4626      	mov	r6, r4
 800cad6:	f04f 0e01 	mov.w	lr, #1
 800cada:	4563      	cmp	r3, ip
 800cadc:	d02d      	beq.n	800cb3a <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x72>
 800cade:	f813 5d01 	ldrb.w	r5, [r3, #-1]!
 800cae2:	2d06      	cmp	r5, #6
 800cae4:	d8f9      	bhi.n	800cada <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x12>
 800cae6:	fa0e f505 	lsl.w	r5, lr, r5
 800caea:	f015 0f66 	tst.w	r5, #102	@ 0x66
 800caee:	d10d      	bne.n	800cb0c <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x44>
 800caf0:	f015 0f10 	tst.w	r5, #16
 800caf4:	d117      	bne.n	800cb26 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x5e>
 800caf6:	072d      	lsls	r5, r5, #28
 800caf8:	d5ef      	bpl.n	800cada <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x12>
 800cafa:	3801      	subs	r0, #1
 800cafc:	b91e      	cbnz	r6, 800cb06 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x3e>
 800cafe:	eb07 0580 	add.w	r5, r7, r0, lsl #2
 800cb02:	682d      	ldr	r5, [r5, #0]
 800cb04:	600d      	str	r5, [r1, #0]
 800cb06:	b96c      	cbnz	r4, 800cb24 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x5c>
 800cb08:	2601      	movs	r6, #1
 800cb0a:	e7e6      	b.n	800cada <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x12>
 800cb0c:	b926      	cbnz	r6, 800cb18 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x50>
 800cb0e:	eb07 0380 	add.w	r3, r7, r0, lsl #2
 800cb12:	f853 3c08 	ldr.w	r3, [r3, #-8]
 800cb16:	600b      	str	r3, [r1, #0]
 800cb18:	b924      	cbnz	r4, 800cb24 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x5c>
 800cb1a:	eb07 0080 	add.w	r0, r7, r0, lsl #2
 800cb1e:	f850 3c04 	ldr.w	r3, [r0, #-4]
 800cb22:	6013      	str	r3, [r2, #0]
 800cb24:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800cb26:	3801      	subs	r0, #1
 800cb28:	b91c      	cbnz	r4, 800cb32 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x6a>
 800cb2a:	eb07 0480 	add.w	r4, r7, r0, lsl #2
 800cb2e:	6824      	ldr	r4, [r4, #0]
 800cb30:	6014      	str	r4, [r2, #0]
 800cb32:	2e00      	cmp	r6, #0
 800cb34:	d1f6      	bne.n	800cb24 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x5c>
 800cb36:	2401      	movs	r4, #1
 800cb38:	e7cf      	b.n	800cada <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x12>
 800cb3a:	b90e      	cbnz	r6, 800cb40 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x78>
 800cb3c:	2300      	movs	r3, #0
 800cb3e:	600b      	str	r3, [r1, #0]
 800cb40:	2c00      	cmp	r4, #0
 800cb42:	d1ef      	bne.n	800cb24 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x5c>
 800cb44:	2300      	movs	r3, #0
 800cb46:	e7ec      	b.n	800cb22 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x5a>

0800cb48 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi>:
 800cb48:	b538      	push	{r3, r4, r5, lr}
 800cb4a:	4604      	mov	r4, r0
 800cb4c:	ed2d 8b0a 	vpush	{d8-d12}
 800cb50:	460d      	mov	r5, r1
 800cb52:	eef0 ba40 	vmov.f32	s23, s0
 800cb56:	eeb0 ca60 	vmov.f32	s24, s1
 800cb5a:	eef0 aa41 	vmov.f32	s21, s2
 800cb5e:	eeb0 ba61 	vmov.f32	s22, s3
 800cb62:	eeb0 9a42 	vmov.f32	s18, s4
 800cb66:	eef0 9a62 	vmov.f32	s19, s5
 800cb6a:	eeb6 aa00 	vmov.f32	s20, #96	@ 0x3f000000  0.5
 800cb6e:	ee7b 8a29 	vadd.f32	s17, s22, s19
 800cb72:	ee3a 8a89 	vadd.f32	s16, s21, s18
 800cb76:	ee68 8a8a 	vmul.f32	s17, s17, s20
 800cb7a:	ee28 8a0a 	vmul.f32	s16, s16, s20
 800cb7e:	ee3c 0a68 	vsub.f32	s0, s24, s17
 800cb82:	ee7b 7ac8 	vsub.f32	s15, s23, s16
 800cb86:	ee20 0a00 	vmul.f32	s0, s0, s0
 800cb8a:	eea7 0aa7 	vfma.f32	s0, s15, s15
 800cb8e:	f015 f921 	bl	8021dd4 <sqrtf>
 800cb92:	eeb5 0a40 	vcmp.f32	s0, #0.0
 800cb96:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800cb9a:	d12e      	bne.n	800cbfa <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi+0xb2>
 800cb9c:	ee79 7a6a 	vsub.f32	s15, s18, s21
 800cba0:	ee39 7acb 	vsub.f32	s14, s19, s22
 800cba4:	eeb0 8a6a 	vmov.f32	s16, s21
 800cba8:	eef0 8a4b 	vmov.f32	s17, s22
 800cbac:	eea7 8a8a 	vfma.f32	s16, s15, s20
 800cbb0:	eee7 8a0a 	vfma.f32	s17, s14, s20
 800cbb4:	eea7 8a0a 	vfma.f32	s16, s14, s20
 800cbb8:	eee7 8aca 	vfms.f32	s17, s15, s20
 800cbbc:	2d02      	cmp	r5, #2
 800cbbe:	dc2f      	bgt.n	800cc20 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi+0xd8>
 800cbc0:	3501      	adds	r5, #1
 800cbc2:	eef0 1a4b 	vmov.f32	s3, s22
 800cbc6:	eeb0 1a6a 	vmov.f32	s2, s21
 800cbca:	4629      	mov	r1, r5
 800cbcc:	eef0 2a68 	vmov.f32	s5, s17
 800cbd0:	eeb0 2a48 	vmov.f32	s4, s16
 800cbd4:	eef0 0a4c 	vmov.f32	s1, s24
 800cbd8:	eeb0 0a6b 	vmov.f32	s0, s23
 800cbdc:	4620      	mov	r0, r4
 800cbde:	f7ff ffb3 	bl	800cb48 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi>
 800cbe2:	eef0 0a68 	vmov.f32	s1, s17
 800cbe6:	eeb0 0a48 	vmov.f32	s0, s16
 800cbea:	4620      	mov	r0, r4
 800cbec:	f7ff ff55 	bl	800ca9a <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800cbf0:	eeb0 ba68 	vmov.f32	s22, s17
 800cbf4:	eef0 aa48 	vmov.f32	s21, s16
 800cbf8:	e7b9      	b.n	800cb6e <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi+0x26>
 800cbfa:	edd4 7a1f 	vldr	s15, [r4, #124]	@ 0x7c
 800cbfe:	ee38 8a6b 	vsub.f32	s16, s16, s23
 800cc02:	ee78 8acc 	vsub.f32	s17, s17, s24
 800cc06:	ee28 7a27 	vmul.f32	s14, s16, s15
 800cc0a:	ee68 7aa7 	vmul.f32	s15, s17, s15
 800cc0e:	ee87 8a00 	vdiv.f32	s16, s14, s0
 800cc12:	eec7 8a80 	vdiv.f32	s17, s15, s0
 800cc16:	ee3b 8a88 	vadd.f32	s16, s23, s16
 800cc1a:	ee7c 8a28 	vadd.f32	s17, s24, s17
 800cc1e:	e7cd      	b.n	800cbbc <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi+0x74>
 800cc20:	eef0 0a68 	vmov.f32	s1, s17
 800cc24:	eeb0 0a48 	vmov.f32	s0, s16
 800cc28:	4620      	mov	r0, r4
 800cc2a:	f7ff ff36 	bl	800ca9a <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800cc2e:	ecbd 8b0a 	vpop	{d8-d12}
 800cc32:	bd38      	pop	{r3, r4, r5, pc}

0800cc34 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff>:
 800cc34:	b510      	push	{r4, lr}
 800cc36:	ed2d 8b0a 	vpush	{d8-d12}
 800cc3a:	f890 3084 	ldrb.w	r3, [r0, #132]	@ 0x84
 800cc3e:	2b02      	cmp	r3, #2
 800cc40:	4604      	mov	r4, r0
 800cc42:	eeb0 ca40 	vmov.f32	s24, s0
 800cc46:	eeb0 9a60 	vmov.f32	s18, s1
 800cc4a:	eef0 9a41 	vmov.f32	s19, s2
 800cc4e:	eef0 8a61 	vmov.f32	s17, s3
 800cc52:	eeb0 ba42 	vmov.f32	s22, s4
 800cc56:	eef0 ba62 	vmov.f32	s23, s5
 800cc5a:	eeb0 aa43 	vmov.f32	s20, s6
 800cc5e:	eef0 aa63 	vmov.f32	s21, s7
 800cc62:	eeb0 8a44 	vmov.f32	s16, s8
 800cc66:	eef0 ca64 	vmov.f32	s25, s9
 800cc6a:	d12c      	bne.n	800ccc6 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0x92>
 800cc6c:	eef0 0a62 	vmov.f32	s1, s5
 800cc70:	eeb0 0a42 	vmov.f32	s0, s4
 800cc74:	f7ff ff11 	bl	800ca9a <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800cc78:	ee79 9acb 	vsub.f32	s19, s19, s22
 800cc7c:	ee7a caec 	vsub.f32	s25, s21, s25
 800cc80:	ee78 8aeb 	vsub.f32	s17, s17, s23
 800cc84:	ee3a 8a48 	vsub.f32	s16, s20, s16
 800cc88:	ee69 9aac 	vmul.f32	s19, s19, s25
 800cc8c:	ee28 8a88 	vmul.f32	s16, s17, s16
 800cc90:	eef4 9ac8 	vcmpe.f32	s19, s16
 800cc94:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800cc98:	db0f      	blt.n	800ccba <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0x86>
 800cc9a:	2101      	movs	r1, #1
 800cc9c:	eef0 2a6a 	vmov.f32	s5, s21
 800cca0:	eeb0 2a4a 	vmov.f32	s4, s20
 800cca4:	eef0 1a6b 	vmov.f32	s3, s23
 800cca8:	eeb0 1a4b 	vmov.f32	s2, s22
 800ccac:	eef0 0a49 	vmov.f32	s1, s18
 800ccb0:	eeb0 0a4c 	vmov.f32	s0, s24
 800ccb4:	4620      	mov	r0, r4
 800ccb6:	f7ff ff47 	bl	800cb48 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi>
 800ccba:	eef0 0a6a 	vmov.f32	s1, s21
 800ccbe:	eeb0 0a4a 	vmov.f32	s0, s20
 800ccc2:	4620      	mov	r0, r4
 800ccc4:	e035      	b.n	800cd32 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0xfe>
 800ccc6:	2b01      	cmp	r3, #1
 800ccc8:	d138      	bne.n	800cd3c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0x108>
 800ccca:	ee31 4ae2 	vsub.f32	s8, s3, s5
 800ccce:	ee33 6a48 	vsub.f32	s12, s6, s16
 800ccd2:	ee71 7a42 	vsub.f32	s15, s2, s4
 800ccd6:	ee73 6ae4 	vsub.f32	s13, s7, s9
 800ccda:	ee26 7a44 	vnmul.f32	s14, s12, s8
 800ccde:	eea7 7aa6 	vfma.f32	s14, s15, s13
 800cce2:	eeb5 7a40 	vcmp.f32	s14, #0.0
 800cce6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800ccea:	d027      	beq.n	800cd3c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0x108>
 800ccec:	ee28 8a63 	vnmul.f32	s16, s16, s7
 800ccf0:	ee61 8ac2 	vnmul.f32	s17, s3, s4
 800ccf4:	eea4 8a83 	vfma.f32	s16, s9, s6
 800ccf8:	eee1 8a22 	vfma.f32	s17, s2, s5
 800ccfc:	ee68 7a67 	vnmul.f32	s15, s16, s15
 800cd00:	ee28 8a44 	vnmul.f32	s16, s16, s8
 800cd04:	eee6 7a28 	vfma.f32	s15, s12, s17
 800cd08:	eea6 8aa8 	vfma.f32	s16, s13, s17
 800cd0c:	ee87 0a87 	vdiv.f32	s0, s15, s14
 800cd10:	eec8 0a07 	vdiv.f32	s1, s16, s14
 800cd14:	ee3c ca40 	vsub.f32	s24, s24, s0
 800cd18:	ee39 9a60 	vsub.f32	s18, s18, s1
 800cd1c:	edd0 7a20 	vldr	s15, [r0, #128]	@ 0x80
 800cd20:	ee29 9a09 	vmul.f32	s18, s18, s18
 800cd24:	eeac 9a0c 	vfma.f32	s18, s24, s24
 800cd28:	eef4 7ac9 	vcmpe.f32	s15, s18
 800cd2c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800cd30:	db04      	blt.n	800cd3c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0x108>
 800cd32:	f7ff feb2 	bl	800ca9a <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800cd36:	ecbd 8b0a 	vpop	{d8-d12}
 800cd3a:	bd10      	pop	{r4, pc}
 800cd3c:	eef0 0a6b 	vmov.f32	s1, s23
 800cd40:	eeb0 0a4b 	vmov.f32	s0, s22
 800cd44:	4620      	mov	r0, r4
 800cd46:	f7ff fea8 	bl	800ca9a <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800cd4a:	e7b6      	b.n	800ccba <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0x86>

0800cd4c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff>:
 800cd4c:	b510      	push	{r4, lr}
 800cd4e:	ed2d 8b0c 	vpush	{d8-d13}
 800cd52:	f890 3085 	ldrb.w	r3, [r0, #133]	@ 0x85
 800cd56:	4604      	mov	r4, r0
 800cd58:	eeb0 9a40 	vmov.f32	s18, s0
 800cd5c:	eef0 9a60 	vmov.f32	s19, s1
 800cd60:	eef0 aa41 	vmov.f32	s21, s2
 800cd64:	eeb0 ba61 	vmov.f32	s22, s3
 800cd68:	b933      	cbnz	r3, 800cd78 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x2c>
 800cd6a:	f7ff fe96 	bl	800ca9a <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800cd6e:	eef0 0a4b 	vmov.f32	s1, s22
 800cd72:	eeb0 0a6a 	vmov.f32	s0, s21
 800cd76:	e015      	b.n	800cda4 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x58>
 800cd78:	ee71 8a40 	vsub.f32	s17, s2, s0
 800cd7c:	ee31 8ae0 	vsub.f32	s16, s3, s1
 800cd80:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 800cd84:	2b02      	cmp	r3, #2
 800cd86:	ee68 8aa7 	vmul.f32	s17, s17, s15
 800cd8a:	ee28 8a27 	vmul.f32	s16, s16, s15
 800cd8e:	d10f      	bne.n	800cdb0 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x64>
 800cd90:	ee70 0ae8 	vsub.f32	s1, s1, s17
 800cd94:	ee30 0a08 	vadd.f32	s0, s0, s16
 800cd98:	f7ff fe7f 	bl	800ca9a <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800cd9c:	ee7b 0a68 	vsub.f32	s1, s22, s17
 800cda0:	ee3a 0a88 	vadd.f32	s0, s21, s16
 800cda4:	4620      	mov	r0, r4
 800cda6:	f7ff fe78 	bl	800ca9a <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800cdaa:	ecbd 8b0c 	vpop	{d8-d13}
 800cdae:	bd10      	pop	{r4, pc}
 800cdb0:	f7ff fe73 	bl	800ca9a <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800cdb4:	eddf 7a4d 	vldr	s15, [pc, #308]	@ 800ceec <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1a0>
 800cdb8:	eddf ba4d 	vldr	s23, [pc, #308]	@ 800cef0 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1a4>
 800cdbc:	ed9f ca4d 	vldr	s24, [pc, #308]	@ 800cef4 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1a8>
 800cdc0:	eddf ca4d 	vldr	s25, [pc, #308]	@ 800cef8 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1ac>
 800cdc4:	ed9f da4d 	vldr	s26, [pc, #308]	@ 800cefc <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1b0>
 800cdc8:	eef0 0a69 	vmov.f32	s1, s19
 800cdcc:	eeb0 0a49 	vmov.f32	s0, s18
 800cdd0:	eee8 0a27 	vfma.f32	s1, s16, s15
 800cdd4:	4620      	mov	r0, r4
 800cdd6:	eea8 0aa7 	vfma.f32	s0, s17, s15
 800cdda:	eeb1 aa68 	vneg.f32	s20, s17
 800cdde:	eeea 0a2b 	vfma.f32	s1, s20, s23
 800cde2:	eea8 0a2b 	vfma.f32	s0, s16, s23
 800cde6:	f7ff fe58 	bl	800ca9a <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800cdea:	eddf 7a45 	vldr	s15, [pc, #276]	@ 800cf00 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1b4>
 800cdee:	eef0 0a69 	vmov.f32	s1, s19
 800cdf2:	eeb0 0a49 	vmov.f32	s0, s18
 800cdf6:	eee8 0a27 	vfma.f32	s1, s16, s15
 800cdfa:	4620      	mov	r0, r4
 800cdfc:	eea8 0aa7 	vfma.f32	s0, s17, s15
 800ce00:	eeea 0a0c 	vfma.f32	s1, s20, s24
 800ce04:	eea8 0a0c 	vfma.f32	s0, s16, s24
 800ce08:	f7ff fe47 	bl	800ca9a <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800ce0c:	eddf 7a3d 	vldr	s15, [pc, #244]	@ 800cf04 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1b8>
 800ce10:	eef0 0a69 	vmov.f32	s1, s19
 800ce14:	eeb0 0a49 	vmov.f32	s0, s18
 800ce18:	eee8 0a27 	vfma.f32	s1, s16, s15
 800ce1c:	4620      	mov	r0, r4
 800ce1e:	eea8 0aa7 	vfma.f32	s0, s17, s15
 800ce22:	eeea 0a2c 	vfma.f32	s1, s20, s25
 800ce26:	eea8 0a2c 	vfma.f32	s0, s16, s25
 800ce2a:	f7ff fe36 	bl	800ca9a <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800ce2e:	eddf 7a36 	vldr	s15, [pc, #216]	@ 800cf08 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1bc>
 800ce32:	eef0 0a69 	vmov.f32	s1, s19
 800ce36:	eeb0 0a49 	vmov.f32	s0, s18
 800ce3a:	eee8 0a27 	vfma.f32	s1, s16, s15
 800ce3e:	4620      	mov	r0, r4
 800ce40:	eea8 0aa7 	vfma.f32	s0, s17, s15
 800ce44:	eeea 0a0d 	vfma.f32	s1, s20, s26
 800ce48:	eea8 0a0d 	vfma.f32	s0, s16, s26
 800ce4c:	f7ff fe25 	bl	800ca9a <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800ce50:	ee79 0a88 	vadd.f32	s1, s19, s16
 800ce54:	ee39 0a28 	vadd.f32	s0, s18, s17
 800ce58:	ee70 0ae8 	vsub.f32	s1, s1, s17
 800ce5c:	ee30 0a08 	vadd.f32	s0, s0, s16
 800ce60:	4620      	mov	r0, r4
 800ce62:	f7ff fe1a 	bl	800ca9a <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800ce66:	eddf 7a29 	vldr	s15, [pc, #164]	@ 800cf0c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1c0>
 800ce6a:	eef0 0a69 	vmov.f32	s1, s19
 800ce6e:	eeb0 0a49 	vmov.f32	s0, s18
 800ce72:	eee8 0a27 	vfma.f32	s1, s16, s15
 800ce76:	4620      	mov	r0, r4
 800ce78:	eea8 0aa7 	vfma.f32	s0, s17, s15
 800ce7c:	eeea 0a0d 	vfma.f32	s1, s20, s26
 800ce80:	eea8 0a0d 	vfma.f32	s0, s16, s26
 800ce84:	f7ff fe09 	bl	800ca9a <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800ce88:	eddf 7a21 	vldr	s15, [pc, #132]	@ 800cf10 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1c4>
 800ce8c:	eef0 0a69 	vmov.f32	s1, s19
 800ce90:	eeb0 0a49 	vmov.f32	s0, s18
 800ce94:	eee8 0a27 	vfma.f32	s1, s16, s15
 800ce98:	4620      	mov	r0, r4
 800ce9a:	eea8 0aa7 	vfma.f32	s0, s17, s15
 800ce9e:	eeea 0a2c 	vfma.f32	s1, s20, s25
 800cea2:	eea8 0a2c 	vfma.f32	s0, s16, s25
 800cea6:	f7ff fdf8 	bl	800ca9a <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800ceaa:	eddf 7a1a 	vldr	s15, [pc, #104]	@ 800cf14 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1c8>
 800ceae:	eef0 0a69 	vmov.f32	s1, s19
 800ceb2:	eeb0 0a49 	vmov.f32	s0, s18
 800ceb6:	eee8 0a27 	vfma.f32	s1, s16, s15
 800ceba:	4620      	mov	r0, r4
 800cebc:	eea8 0aa7 	vfma.f32	s0, s17, s15
 800cec0:	eeea 0a0c 	vfma.f32	s1, s20, s24
 800cec4:	eea8 0a0c 	vfma.f32	s0, s16, s24
 800cec8:	f7ff fde7 	bl	800ca9a <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800cecc:	eddf 7a12 	vldr	s15, [pc, #72]	@ 800cf18 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1cc>
 800ced0:	eef0 0a69 	vmov.f32	s1, s19
 800ced4:	eeb0 0a49 	vmov.f32	s0, s18
 800ced8:	eee8 0a27 	vfma.f32	s1, s16, s15
 800cedc:	4620      	mov	r0, r4
 800cede:	eea8 0aa7 	vfma.f32	s0, s17, s15
 800cee2:	eeea 0a2b 	vfma.f32	s1, s20, s23
 800cee6:	eea8 0a2b 	vfma.f32	s0, s16, s23
 800ceea:	e73e      	b.n	800cd6a <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1e>
 800ceec:	3d23d70a 	.word	0x3d23d70a
 800cef0:	3e8f5c29 	.word	0x3e8f5c29
 800cef4:	3f19999a 	.word	0x3f19999a
 800cef8:	3f4ccccd 	.word	0x3f4ccccd
 800cefc:	3f75c28f 	.word	0x3f75c28f
 800cf00:	3e4ccccd 	.word	0x3e4ccccd
 800cf04:	3ecccccd 	.word	0x3ecccccd
 800cf08:	3f3851ec 	.word	0x3f3851ec
 800cf0c:	3fa3d70a 	.word	0x3fa3d70a
 800cf10:	3fcccccd 	.word	0x3fcccccd
 800cf14:	3fe66666 	.word	0x3fe66666
 800cf18:	3ffae148 	.word	0x3ffae148

0800cf1c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff>:
 800cf1c:	b570      	push	{r4, r5, r6, lr}
 800cf1e:	ed2d 8b06 	vpush	{d8-d10}
 800cf22:	ed90 8a23 	vldr	s16, [r0, #140]	@ 0x8c
 800cf26:	ed90 9a22 	vldr	s18, [r0, #136]	@ 0x88
 800cf2a:	ee30 8ac8 	vsub.f32	s16, s1, s16
 800cf2e:	ee30 9a49 	vsub.f32	s18, s0, s18
 800cf32:	eef0 aa40 	vmov.f32	s21, s0
 800cf36:	ee28 0a08 	vmul.f32	s0, s16, s16
 800cf3a:	4604      	mov	r4, r0
 800cf3c:	eea9 0a09 	vfma.f32	s0, s18, s18
 800cf40:	eeb0 aa60 	vmov.f32	s20, s1
 800cf44:	f014 ff46 	bl	8021dd4 <sqrtf>
 800cf48:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 800cf4c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800cf50:	dd36      	ble.n	800cfc0 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff+0xa4>
 800cf52:	edd4 7a1f 	vldr	s15, [r4, #124]	@ 0x7c
 800cf56:	edd4 0a23 	vldr	s1, [r4, #140]	@ 0x8c
 800cf5a:	f894 5078 	ldrb.w	r5, [r4, #120]	@ 0x78
 800cf5e:	eec0 6a27 	vdiv.f32	s13, s0, s15
 800cf62:	2600      	movs	r6, #0
 800cf64:	f884 6079 	strb.w	r6, [r4, #121]	@ 0x79
 800cf68:	ed94 0a22 	vldr	s0, [r4, #136]	@ 0x88
 800cf6c:	eec8 8a26 	vdiv.f32	s17, s16, s13
 800cf70:	ee89 8a26 	vdiv.f32	s16, s18, s13
 800cf74:	ee70 9a28 	vadd.f32	s19, s0, s17
 800cf78:	ee30 9ac8 	vsub.f32	s18, s1, s16
 800cf7c:	ee78 8aaa 	vadd.f32	s17, s17, s21
 800cf80:	ee3a 8a48 	vsub.f32	s16, s20, s16
 800cf84:	b1fd      	cbz	r5, 800cfc6 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff+0xaa>
 800cf86:	edc4 9a24 	vstr	s19, [r4, #144]	@ 0x90
 800cf8a:	ed84 9a25 	vstr	s18, [r4, #148]	@ 0x94
 800cf8e:	edc4 8a26 	vstr	s17, [r4, #152]	@ 0x98
 800cf92:	ed84 8a27 	vstr	s16, [r4, #156]	@ 0x9c
 800cf96:	eef0 0a49 	vmov.f32	s1, s18
 800cf9a:	eeb0 0a69 	vmov.f32	s0, s19
 800cf9e:	4620      	mov	r0, r4
 800cfa0:	f7ff fd64 	bl	800ca6c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19moveToWithTransformEff>
 800cfa4:	f884 6078 	strb.w	r6, [r4, #120]	@ 0x78
 800cfa8:	edc4 9a28 	vstr	s19, [r4, #160]	@ 0xa0
 800cfac:	ed84 9a29 	vstr	s18, [r4, #164]	@ 0xa4
 800cfb0:	edc4 8a2a 	vstr	s17, [r4, #168]	@ 0xa8
 800cfb4:	ed84 8a2b 	vstr	s16, [r4, #172]	@ 0xac
 800cfb8:	edc4 aa22 	vstr	s21, [r4, #136]	@ 0x88
 800cfbc:	ed84 aa23 	vstr	s20, [r4, #140]	@ 0x8c
 800cfc0:	ecbd 8b06 	vpop	{d8-d10}
 800cfc4:	bd70      	pop	{r4, r5, r6, pc}
 800cfc6:	f894 307a 	ldrb.w	r3, [r4, #122]	@ 0x7a
 800cfca:	ed94 2a2a 	vldr	s4, [r4, #168]	@ 0xa8
 800cfce:	edd4 2a2b 	vldr	s5, [r4, #172]	@ 0xac
 800cfd2:	b16b      	cbz	r3, 800cff0 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff+0xd4>
 800cfd4:	eef0 1a49 	vmov.f32	s3, s18
 800cfd8:	eeb0 1a69 	vmov.f32	s2, s19
 800cfdc:	eef0 0a62 	vmov.f32	s1, s5
 800cfe0:	eeb0 0a42 	vmov.f32	s0, s4
 800cfe4:	4620      	mov	r0, r4
 800cfe6:	f7ff feb1 	bl	800cd4c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff>
 800cfea:	f884 507a 	strb.w	r5, [r4, #122]	@ 0x7a
 800cfee:	e7db      	b.n	800cfa8 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff+0x8c>
 800cff0:	eef0 4a48 	vmov.f32	s9, s16
 800cff4:	eeb0 4a68 	vmov.f32	s8, s17
 800cff8:	eef0 3a49 	vmov.f32	s7, s18
 800cffc:	eeb0 3a69 	vmov.f32	s6, s19
 800d000:	edd4 1a29 	vldr	s3, [r4, #164]	@ 0xa4
 800d004:	ed94 1a28 	vldr	s2, [r4, #160]	@ 0xa0
 800d008:	4620      	mov	r0, r4
 800d00a:	f7ff fe13 	bl	800cc34 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff>
 800d00e:	e7cb      	b.n	800cfa8 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff+0x8c>

0800d010 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas6lineToENS_7CWRUtil2Q5ES3_>:
 800d010:	ee07 2a90 	vmov	s15, r2
 800d014:	ee07 1a10 	vmov	s14, r1
 800d018:	eef8 0ae7 	vcvt.f32.s32	s1, s15
 800d01c:	eeb8 0ac7 	vcvt.f32.s32	s0, s14
 800d020:	eddf 7a03 	vldr	s15, [pc, #12]	@ 800d030 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas6lineToENS_7CWRUtil2Q5ES3_+0x20>
 800d024:	ee60 0aa7 	vmul.f32	s1, s1, s15
 800d028:	ee20 0a27 	vmul.f32	s0, s0, s15
 800d02c:	f7ff bf76 	b.w	800cf1c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff>
 800d030:	3d000000 	.word	0x3d000000

0800d034 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawDoubleLineCapEv>:
 800d034:	b538      	push	{r3, r4, r5, lr}
 800d036:	ed2d 8b02 	vpush	{d8}
 800d03a:	f890 5079 	ldrb.w	r5, [r0, #121]	@ 0x79
 800d03e:	4604      	mov	r4, r0
 800d040:	b31d      	cbz	r5, 800d08a <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawDoubleLineCapEv+0x56>
 800d042:	edd0 7a1f 	vldr	s15, [r0, #124]	@ 0x7c
 800d046:	ed90 8a23 	vldr	s16, [r0, #140]	@ 0x8c
 800d04a:	ed90 0a22 	vldr	s0, [r0, #136]	@ 0x88
 800d04e:	ee78 8a67 	vsub.f32	s17, s16, s15
 800d052:	ee38 8a27 	vadd.f32	s16, s16, s15
 800d056:	eef0 0a68 	vmov.f32	s1, s17
 800d05a:	f7ff fd07 	bl	800ca6c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19moveToWithTransformEff>
 800d05e:	ed94 1a22 	vldr	s2, [r4, #136]	@ 0x88
 800d062:	eef0 1a48 	vmov.f32	s3, s16
 800d066:	eeb0 0a41 	vmov.f32	s0, s2
 800d06a:	eef0 0a68 	vmov.f32	s1, s17
 800d06e:	4620      	mov	r0, r4
 800d070:	f7ff fe6c 	bl	800cd4c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff>
 800d074:	ed94 1a22 	vldr	s2, [r4, #136]	@ 0x88
 800d078:	eef0 1a68 	vmov.f32	s3, s17
 800d07c:	eef0 0a48 	vmov.f32	s1, s16
 800d080:	eeb0 0a41 	vmov.f32	s0, s2
 800d084:	4620      	mov	r0, r4
 800d086:	f7ff fe61 	bl	800cd4c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff>
 800d08a:	ecbd 8b02 	vpop	{d8}
 800d08e:	4628      	mov	r0, r5
 800d090:	bd38      	pop	{r3, r4, r5, pc}

0800d092 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas11strokeCloseEff>:
 800d092:	b510      	push	{r4, lr}
 800d094:	ed2d 8b02 	vpush	{d8}
 800d098:	4604      	mov	r4, r0
 800d09a:	eeb0 8a40 	vmov.f32	s16, s0
 800d09e:	eef0 8a60 	vmov.f32	s17, s1
 800d0a2:	f7ff ffc7 	bl	800d034 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawDoubleLineCapEv>
 800d0a6:	b9d0      	cbnz	r0, 800d0de <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas11strokeCloseEff+0x4c>
 800d0a8:	4620      	mov	r0, r4
 800d0aa:	edd4 4a27 	vldr	s9, [r4, #156]	@ 0x9c
 800d0ae:	ed94 4a26 	vldr	s8, [r4, #152]	@ 0x98
 800d0b2:	edd4 3a25 	vldr	s7, [r4, #148]	@ 0x94
 800d0b6:	ed94 3a24 	vldr	s6, [r4, #144]	@ 0x90
 800d0ba:	edd4 2a2b 	vldr	s5, [r4, #172]	@ 0xac
 800d0be:	ed94 2a2a 	vldr	s4, [r4, #168]	@ 0xa8
 800d0c2:	edd4 1a29 	vldr	s3, [r4, #164]	@ 0xa4
 800d0c6:	ed94 1a28 	vldr	s2, [r4, #160]	@ 0xa0
 800d0ca:	eef0 0a68 	vmov.f32	s1, s17
 800d0ce:	eeb0 0a48 	vmov.f32	s0, s16
 800d0d2:	f7ff fdaf 	bl	800cc34 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff>
 800d0d6:	2001      	movs	r0, #1
 800d0d8:	ecbd 8b02 	vpop	{d8}
 800d0dc:	bd10      	pop	{r4, pc}
 800d0de:	2000      	movs	r0, #0
 800d0e0:	e7fa      	b.n	800d0d8 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas11strokeCloseEff+0x46>

0800d0e2 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas16drawFinalLineCapEv>:
 800d0e2:	edd0 1a25 	vldr	s3, [r0, #148]	@ 0x94
 800d0e6:	ed90 1a24 	vldr	s2, [r0, #144]	@ 0x90
 800d0ea:	edd0 0a2b 	vldr	s1, [r0, #172]	@ 0xac
 800d0ee:	ed90 0a2a 	vldr	s0, [r0, #168]	@ 0xa8
 800d0f2:	f7ff be2b 	b.w	800cd4c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff>
	...

0800d0f8 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE>:
 800d0f8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d0fc:	b089      	sub	sp, #36	@ 0x24
 800d0fe:	461c      	mov	r4, r3
 800d100:	f10d 0820 	add.w	r8, sp, #32
 800d104:	f89d 3050 	ldrb.w	r3, [sp, #80]	@ 0x50
 800d108:	9304      	str	r3, [sp, #16]
 800d10a:	9e15      	ldr	r6, [sp, #84]	@ 0x54
 800d10c:	9105      	str	r1, [sp, #20]
 800d10e:	2300      	movs	r3, #0
 800d110:	e9dd 9712 	ldrd	r9, r7, [sp, #72]	@ 0x48
 800d114:	9306      	str	r3, [sp, #24]
 800d116:	f848 3d04 	str.w	r3, [r8, #-4]!
 800d11a:	9b04      	ldr	r3, [sp, #16]
 800d11c:	f886 307a 	strb.w	r3, [r6, #122]	@ 0x7a
 800d120:	4682      	mov	sl, r0
 800d122:	4615      	mov	r5, r2
 800d124:	9b05      	ldr	r3, [sp, #20]
 800d126:	429d      	cmp	r5, r3
 800d128:	d96d      	bls.n	800d206 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x10e>
 800d12a:	3d01      	subs	r5, #1
 800d12c:	f819 3005 	ldrb.w	r3, [r9, r5]
 800d130:	2b06      	cmp	r3, #6
 800d132:	d8f7      	bhi.n	800d124 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x2c>
 800d134:	a201      	add	r2, pc, #4	@ (adr r2, 800d13c <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x44>)
 800d136:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800d13a:	bf00      	nop
 800d13c:	0800d15b 	.word	0x0800d15b
 800d140:	0800d125 	.word	0x0800d125
 800d144:	0800d159 	.word	0x0800d159
 800d148:	0800d17d 	.word	0x0800d17d
 800d14c:	0800d17d 	.word	0x0800d17d
 800d150:	0800d181 	.word	0x0800d181
 800d154:	0800d1c1 	.word	0x0800d1c1
 800d158:	3c02      	subs	r4, #2
 800d15a:	4650      	mov	r0, sl
 800d15c:	e9cd 9701 	strd	r9, r7, [sp, #4]
 800d160:	9400      	str	r4, [sp, #0]
 800d162:	462b      	mov	r3, r5
 800d164:	4642      	mov	r2, r8
 800d166:	a906      	add	r1, sp, #24
 800d168:	f7ff fcae 	bl	800cac8 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf>
 800d16c:	eddd 0a07 	vldr	s1, [sp, #28]
 800d170:	ed9d 0a06 	vldr	s0, [sp, #24]
 800d174:	4630      	mov	r0, r6
 800d176:	f7ff fed1 	bl	800cf1c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff>
 800d17a:	e7d3      	b.n	800d124 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x2c>
 800d17c:	3c01      	subs	r4, #1
 800d17e:	e7ec      	b.n	800d15a <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x62>
 800d180:	f1a4 0b04 	sub.w	fp, r4, #4
 800d184:	3c02      	subs	r4, #2
 800d186:	eb07 0484 	add.w	r4, r7, r4, lsl #2
 800d18a:	4650      	mov	r0, sl
 800d18c:	e9cd 9701 	strd	r9, r7, [sp, #4]
 800d190:	f8cd b000 	str.w	fp, [sp]
 800d194:	462b      	mov	r3, r5
 800d196:	4642      	mov	r2, r8
 800d198:	a906      	add	r1, sp, #24
 800d19a:	f7ff fc95 	bl	800cac8 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf>
 800d19e:	eddd 2a07 	vldr	s5, [sp, #28]
 800d1a2:	ed9d 2a06 	vldr	s4, [sp, #24]
 800d1a6:	ed54 1a01 	vldr	s3, [r4, #-4]
 800d1aa:	ed14 1a02 	vldr	s2, [r4, #-8]
 800d1ae:	edd4 0a01 	vldr	s1, [r4, #4]
 800d1b2:	ed94 0a00 	vldr	s0, [r4]
 800d1b6:	4630      	mov	r0, r6
 800d1b8:	f7ff fc1a 	bl	800c9f0 <_ZN8touchgfx6Canvas17quadraticBezierToEffffff>
 800d1bc:	465c      	mov	r4, fp
 800d1be:	e7b1      	b.n	800d124 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x2c>
 800d1c0:	f1a4 0b06 	sub.w	fp, r4, #6
 800d1c4:	3c02      	subs	r4, #2
 800d1c6:	eb07 0484 	add.w	r4, r7, r4, lsl #2
 800d1ca:	4650      	mov	r0, sl
 800d1cc:	e9cd 9701 	strd	r9, r7, [sp, #4]
 800d1d0:	f8cd b000 	str.w	fp, [sp]
 800d1d4:	462b      	mov	r3, r5
 800d1d6:	4642      	mov	r2, r8
 800d1d8:	a906      	add	r1, sp, #24
 800d1da:	f7ff fc75 	bl	800cac8 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf>
 800d1de:	eddd 3a07 	vldr	s7, [sp, #28]
 800d1e2:	ed9d 3a06 	vldr	s6, [sp, #24]
 800d1e6:	ed54 2a03 	vldr	s5, [r4, #-12]
 800d1ea:	ed14 2a04 	vldr	s4, [r4, #-16]
 800d1ee:	ed54 1a01 	vldr	s3, [r4, #-4]
 800d1f2:	ed14 1a02 	vldr	s2, [r4, #-8]
 800d1f6:	edd4 0a01 	vldr	s1, [r4, #4]
 800d1fa:	ed94 0a00 	vldr	s0, [r4]
 800d1fe:	4630      	mov	r0, r6
 800d200:	f7ff fc15 	bl	800ca2e <_ZN8touchgfx6Canvas13cubicBezierToEffffffff>
 800d204:	e7da      	b.n	800d1bc <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0xc4>
 800d206:	9b04      	ldr	r3, [sp, #16]
 800d208:	b113      	cbz	r3, 800d210 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x118>
 800d20a:	4630      	mov	r0, r6
 800d20c:	f7ff ff69 	bl	800d0e2 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas16drawFinalLineCapEv>
 800d210:	b009      	add	sp, #36	@ 0x24
 800d212:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d216:	bf00      	nop

0800d218 <_ZN8touchgfx6Canvas6lineToIfEEvT_S2_>:
 800d218:	eef0 7a60 	vmov.f32	s15, s1
 800d21c:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 800d220:	6803      	ldr	r3, [r0, #0]
 800d222:	ee17 2a90 	vmov	r2, s15
 800d226:	eef0 7a40 	vmov.f32	s15, s0
 800d22a:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 800d22e:	689b      	ldr	r3, [r3, #8]
 800d230:	ee17 1a90 	vmov	r1, s15
 800d234:	4718      	bx	r3
	...

0800d238 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvasD1Ev>:
 800d238:	b510      	push	{r4, lr}
 800d23a:	4b04      	ldr	r3, [pc, #16]	@ (800d24c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvasD1Ev+0x14>)
 800d23c:	4604      	mov	r4, r0
 800d23e:	f840 3b14 	str.w	r3, [r0], #20
 800d242:	f000 fc94 	bl	800db6e <_ZN8touchgfx7OutlineD1Ev>
 800d246:	4620      	mov	r0, r4
 800d248:	bd10      	pop	{r4, pc}
 800d24a:	bf00      	nop
 800d24c:	08025658 	.word	0x08025658

0800d250 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE>:
 800d250:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d254:	ed2d 8b04 	vpush	{d8-d9}
 800d258:	edd0 7a0c 	vldr	s15, [r0, #48]	@ 0x30
 800d25c:	b0b5      	sub	sp, #212	@ 0xd4
 800d25e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800d262:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800d266:	4605      	mov	r5, r0
 800d268:	468b      	mov	fp, r1
 800d26a:	9206      	str	r2, [sp, #24]
 800d26c:	461e      	mov	r6, r3
 800d26e:	f04f 0400 	mov.w	r4, #0
 800d272:	f240 814e 	bls.w	800d512 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x2c2>
 800d276:	23ff      	movs	r3, #255	@ 0xff
 800d278:	9300      	str	r3, [sp, #0]
 800d27a:	1d02      	adds	r2, r0, #4
 800d27c:	6981      	ldr	r1, [r0, #24]
 800d27e:	9b43      	ldr	r3, [sp, #268]	@ 0x10c
 800d280:	ed9f 9aa5 	vldr	s18, [pc, #660]	@ 800d518 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x2c8>
 800d284:	a808      	add	r0, sp, #32
 800d286:	f014 f8eb 	bl	8021460 <_ZN8touchgfx6CanvasC1EPKNS_15AbstractPainterERKNS_4RectES6_h>
 800d28a:	edd5 7a0c 	vldr	s15, [r5, #48]	@ 0x30
 800d28e:	4ba3      	ldr	r3, [pc, #652]	@ (800d51c <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x2cc>)
 800d290:	edd5 6a08 	vldr	s13, [r5, #32]
 800d294:	9308      	str	r3, [sp, #32]
 800d296:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800d29a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800d29e:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 800d2a2:	bf48      	it	mi
 800d2a4:	eef1 7a67 	vnegmi.f32	s15, s15
 800d2a8:	ee67 7a87 	vmul.f32	s15, s15, s14
 800d2ac:	f105 0334 	add.w	r3, r5, #52	@ 0x34
 800d2b0:	2201      	movs	r2, #1
 800d2b2:	9325      	str	r3, [sp, #148]	@ 0x94
 800d2b4:	2300      	movs	r3, #0
 800d2b6:	ee26 7aa7 	vmul.f32	s14, s13, s15
 800d2ba:	f88d 3098 	strb.w	r3, [sp, #152]	@ 0x98
 800d2be:	f88d 2099 	strb.w	r2, [sp, #153]	@ 0x99
 800d2c2:	f88d 309a 	strb.w	r3, [sp, #154]	@ 0x9a
 800d2c6:	f88d 3064 	strb.w	r3, [sp, #100]	@ 0x64
 800d2ca:	7f6a      	ldrb	r2, [r5, #29]
 800d2cc:	7fab      	ldrb	r3, [r5, #30]
 800d2ce:	edcd 7a27 	vstr	s15, [sp, #156]	@ 0x9c
 800d2d2:	435a      	muls	r2, r3
 800d2d4:	ee27 7a26 	vmul.f32	s14, s14, s13
 800d2d8:	1c53      	adds	r3, r2, #1
 800d2da:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 800d2de:	ee67 7a27 	vmul.f32	s15, s14, s15
 800d2e2:	f04f 0800 	mov.w	r8, #0
 800d2e6:	f895 0024 	ldrb.w	r0, [r5, #36]	@ 0x24
 800d2ea:	f895 1025 	ldrb.w	r1, [r5, #37]	@ 0x25
 800d2ee:	942a      	str	r4, [sp, #168]	@ 0xa8
 800d2f0:	f3c3 2307 	ubfx	r3, r3, #8, #8
 800d2f4:	942b      	str	r4, [sp, #172]	@ 0xac
 800d2f6:	942c      	str	r4, [sp, #176]	@ 0xb0
 800d2f8:	942d      	str	r4, [sp, #180]	@ 0xb4
 800d2fa:	942e      	str	r4, [sp, #184]	@ 0xb8
 800d2fc:	942f      	str	r4, [sp, #188]	@ 0xbc
 800d2fe:	9430      	str	r4, [sp, #192]	@ 0xc0
 800d300:	9431      	str	r4, [sp, #196]	@ 0xc4
 800d302:	9432      	str	r4, [sp, #200]	@ 0xc8
 800d304:	9433      	str	r4, [sp, #204]	@ 0xcc
 800d306:	edcd 7a28 	vstr	s15, [sp, #160]	@ 0xa0
 800d30a:	f88d 00a4 	strb.w	r0, [sp, #164]	@ 0xa4
 800d30e:	f88d 10a5 	strb.w	r1, [sp, #165]	@ 0xa5
 800d312:	f88d 30a6 	strb.w	r3, [sp, #166]	@ 0xa6
 800d316:	eef0 9a49 	vmov.f32	s19, s18
 800d31a:	eeb0 8a49 	vmov.f32	s16, s18
 800d31e:	eef0 8a49 	vmov.f32	s17, s18
 800d322:	4644      	mov	r4, r8
 800d324:	46c1      	mov	r9, r8
 800d326:	af08      	add	r7, sp, #32
 800d328:	f04f 0a01 	mov.w	sl, #1
 800d32c:	9b06      	ldr	r3, [sp, #24]
 800d32e:	454b      	cmp	r3, r9
 800d330:	f000 80cc 	beq.w	800d4cc <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x27c>
 800d334:	f109 0301 	add.w	r3, r9, #1
 800d338:	9305      	str	r3, [sp, #20]
 800d33a:	f81b 3009 	ldrb.w	r3, [fp, r9]
 800d33e:	2b06      	cmp	r3, #6
 800d340:	d839      	bhi.n	800d3b6 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x166>
 800d342:	e8df f003 	tbb	[pc, r3]
 800d346:	3b04      	.short	0x3b04
 800d348:	817c6f60 	.word	0x817c6f60
 800d34c:	a0          	.byte	0xa0
 800d34d:	00          	.byte	0x00
 800d34e:	45c1      	cmp	r9, r8
 800d350:	d92b      	bls.n	800d3aa <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x15a>
 800d352:	eef0 0a49 	vmov.f32	s1, s18
 800d356:	eeb0 0a69 	vmov.f32	s0, s19
 800d35a:	4638      	mov	r0, r7
 800d35c:	f7ff fdde 	bl	800cf1c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff>
 800d360:	4638      	mov	r0, r7
 800d362:	f7ff fe67 	bl	800d034 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawDoubleLineCapEv>
 800d366:	4681      	mov	r9, r0
 800d368:	b9f8      	cbnz	r0, 800d3aa <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x15a>
 800d36a:	eef0 0a49 	vmov.f32	s1, s18
 800d36e:	eeb0 0a69 	vmov.f32	s0, s19
 800d372:	4638      	mov	r0, r7
 800d374:	f7ff fe8d 	bl	800d092 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas11strokeCloseEff>
 800d378:	4628      	mov	r0, r5
 800d37a:	e9cd 9702 	strd	r9, r7, [sp, #8]
 800d37e:	e9cd b600 	strd	fp, r6, [sp]
 800d382:	4623      	mov	r3, r4
 800d384:	9a05      	ldr	r2, [sp, #20]
 800d386:	edcd 9a2a 	vstr	s19, [sp, #168]	@ 0xa8
 800d38a:	4641      	mov	r1, r8
 800d38c:	ed8d 9a2b 	vstr	s18, [sp, #172]	@ 0xac
 800d390:	f88d a098 	strb.w	sl, [sp, #152]	@ 0x98
 800d394:	f88d a099 	strb.w	sl, [sp, #153]	@ 0x99
 800d398:	f7ff feae 	bl	800d0f8 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE>
 800d39c:	eef0 0a49 	vmov.f32	s1, s18
 800d3a0:	eeb0 0a69 	vmov.f32	s0, s19
 800d3a4:	4638      	mov	r0, r7
 800d3a6:	f7ff fe74 	bl	800d092 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas11strokeCloseEff>
 800d3aa:	f8dd 8014 	ldr.w	r8, [sp, #20]
 800d3ae:	eeb0 8a49 	vmov.f32	s16, s18
 800d3b2:	eef0 8a69 	vmov.f32	s17, s19
 800d3b6:	f8dd 9014 	ldr.w	r9, [sp, #20]
 800d3ba:	e7b7      	b.n	800d32c <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0xdc>
 800d3bc:	45c1      	cmp	r9, r8
 800d3be:	d90d      	bls.n	800d3dc <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x18c>
 800d3c0:	4638      	mov	r0, r7
 800d3c2:	f7ff fe37 	bl	800d034 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawDoubleLineCapEv>
 800d3c6:	b948      	cbnz	r0, 800d3dc <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x18c>
 800d3c8:	e9cd a702 	strd	sl, r7, [sp, #8]
 800d3cc:	e9cd b600 	strd	fp, r6, [sp]
 800d3d0:	4623      	mov	r3, r4
 800d3d2:	464a      	mov	r2, r9
 800d3d4:	4641      	mov	r1, r8
 800d3d6:	4628      	mov	r0, r5
 800d3d8:	f7ff fe8e 	bl	800d0f8 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE>
 800d3dc:	eb06 0384 	add.w	r3, r6, r4, lsl #2
 800d3e0:	edd3 8a00 	vldr	s17, [r3]
 800d3e4:	ed93 8a01 	vldr	s16, [r3, #4]
 800d3e8:	edcd 8a2a 	vstr	s17, [sp, #168]	@ 0xa8
 800d3ec:	ed8d 8a2b 	vstr	s16, [sp, #172]	@ 0xac
 800d3f0:	f88d a098 	strb.w	sl, [sp, #152]	@ 0x98
 800d3f4:	f88d a099 	strb.w	sl, [sp, #153]	@ 0x99
 800d3f8:	3402      	adds	r4, #2
 800d3fa:	46c8      	mov	r8, r9
 800d3fc:	eeb0 9a48 	vmov.f32	s18, s16
 800d400:	eef0 9a68 	vmov.f32	s19, s17
 800d404:	e7d7      	b.n	800d3b6 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x166>
 800d406:	eb06 0384 	add.w	r3, r6, r4, lsl #2
 800d40a:	edd3 8a00 	vldr	s17, [r3]
 800d40e:	ed93 8a01 	vldr	s16, [r3, #4]
 800d412:	eeb0 0a68 	vmov.f32	s0, s17
 800d416:	eef0 0a48 	vmov.f32	s1, s16
 800d41a:	4638      	mov	r0, r7
 800d41c:	f7ff fd7e 	bl	800cf1c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff>
 800d420:	3402      	adds	r4, #2
 800d422:	e7c8      	b.n	800d3b6 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x166>
 800d424:	eb06 0384 	add.w	r3, r6, r4, lsl #2
 800d428:	edd3 8a00 	vldr	s17, [r3]
 800d42c:	eef0 0a48 	vmov.f32	s1, s16
 800d430:	eeb0 0a68 	vmov.f32	s0, s17
 800d434:	4638      	mov	r0, r7
 800d436:	f7ff fd71 	bl	800cf1c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff>
 800d43a:	3401      	adds	r4, #1
 800d43c:	e7bb      	b.n	800d3b6 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x166>
 800d43e:	eb06 0384 	add.w	r3, r6, r4, lsl #2
 800d442:	ed93 8a00 	vldr	s16, [r3]
 800d446:	e7f1      	b.n	800d42c <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x1dc>
 800d448:	00a3      	lsls	r3, r4, #2
 800d44a:	f103 0208 	add.w	r2, r3, #8
 800d44e:	f103 090c 	add.w	r9, r3, #12
 800d452:	4432      	add	r2, r6
 800d454:	4433      	add	r3, r6
 800d456:	44b1      	add	r9, r6
 800d458:	ed92 2a00 	vldr	s4, [r2]
 800d45c:	edd9 2a00 	vldr	s5, [r9]
 800d460:	edd3 1a01 	vldr	s3, [r3, #4]
 800d464:	ed93 1a00 	vldr	s2, [r3]
 800d468:	9207      	str	r2, [sp, #28]
 800d46a:	eef0 0a48 	vmov.f32	s1, s16
 800d46e:	eeb0 0a68 	vmov.f32	s0, s17
 800d472:	4638      	mov	r0, r7
 800d474:	f7ff fabc 	bl	800c9f0 <_ZN8touchgfx6Canvas17quadraticBezierToEffffff>
 800d478:	9a07      	ldr	r2, [sp, #28]
 800d47a:	ed99 8a00 	vldr	s16, [r9]
 800d47e:	edd2 8a00 	vldr	s17, [r2]
 800d482:	3404      	adds	r4, #4
 800d484:	e797      	b.n	800d3b6 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x166>
 800d486:	00a3      	lsls	r3, r4, #2
 800d488:	f103 0210 	add.w	r2, r3, #16
 800d48c:	f103 0914 	add.w	r9, r3, #20
 800d490:	4432      	add	r2, r6
 800d492:	4433      	add	r3, r6
 800d494:	44b1      	add	r9, r6
 800d496:	ed92 3a00 	vldr	s6, [r2]
 800d49a:	edd9 3a00 	vldr	s7, [r9]
 800d49e:	edd3 2a03 	vldr	s5, [r3, #12]
 800d4a2:	ed93 2a02 	vldr	s4, [r3, #8]
 800d4a6:	edd3 1a01 	vldr	s3, [r3, #4]
 800d4aa:	ed93 1a00 	vldr	s2, [r3]
 800d4ae:	9207      	str	r2, [sp, #28]
 800d4b0:	eef0 0a48 	vmov.f32	s1, s16
 800d4b4:	eeb0 0a68 	vmov.f32	s0, s17
 800d4b8:	4638      	mov	r0, r7
 800d4ba:	f7ff fab8 	bl	800ca2e <_ZN8touchgfx6Canvas13cubicBezierToEffffffff>
 800d4be:	9a07      	ldr	r2, [sp, #28]
 800d4c0:	ed99 8a00 	vldr	s16, [r9]
 800d4c4:	edd2 8a00 	vldr	s17, [r2]
 800d4c8:	3406      	adds	r4, #6
 800d4ca:	e774      	b.n	800d3b6 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x166>
 800d4cc:	9b06      	ldr	r3, [sp, #24]
 800d4ce:	4543      	cmp	r3, r8
 800d4d0:	af08      	add	r7, sp, #32
 800d4d2:	d90f      	bls.n	800d4f4 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x2a4>
 800d4d4:	4638      	mov	r0, r7
 800d4d6:	f7ff fdad 	bl	800d034 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawDoubleLineCapEv>
 800d4da:	b958      	cbnz	r0, 800d4f4 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x2a4>
 800d4dc:	2301      	movs	r3, #1
 800d4de:	e9cd 6301 	strd	r6, r3, [sp, #4]
 800d4e2:	9703      	str	r7, [sp, #12]
 800d4e4:	f8cd b000 	str.w	fp, [sp]
 800d4e8:	4623      	mov	r3, r4
 800d4ea:	9a06      	ldr	r2, [sp, #24]
 800d4ec:	4641      	mov	r1, r8
 800d4ee:	4628      	mov	r0, r5
 800d4f0:	f7ff fe02 	bl	800d0f8 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE>
 800d4f4:	f89d 10a6 	ldrb.w	r1, [sp, #166]	@ 0xa6
 800d4f8:	4638      	mov	r0, r7
 800d4fa:	f014 f845 	bl	8021588 <_ZN8touchgfx6Canvas6renderEh>
 800d4fe:	4604      	mov	r4, r0
 800d500:	4638      	mov	r0, r7
 800d502:	f7ff fe99 	bl	800d238 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvasD1Ev>
 800d506:	4620      	mov	r0, r4
 800d508:	b035      	add	sp, #212	@ 0xd4
 800d50a:	ecbd 8b04 	vpop	{d8-d9}
 800d50e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d512:	2401      	movs	r4, #1
 800d514:	e7f7      	b.n	800d506 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x2b6>
 800d516:	bf00      	nop
 800d518:	00000000 	.word	0x00000000
 800d51c:	0802506c 	.word	0x0802506c

0800d520 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvasD0Ev>:
 800d520:	b510      	push	{r4, lr}
 800d522:	4604      	mov	r4, r0
 800d524:	f7ff fe88 	bl	800d238 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvasD1Ev>
 800d528:	4620      	mov	r0, r4
 800d52a:	21b0      	movs	r1, #176	@ 0xb0
 800d52c:	f014 fbfb 	bl	8021d26 <_ZdlPvj>
 800d530:	4620      	mov	r0, r4
 800d532:	bd10      	pop	{r4, pc}

0800d534 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE>:
 800d534:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800d538:	ed2d 8b06 	vpush	{d8-d10}
 800d53c:	b0aa      	sub	sp, #168	@ 0xa8
 800d53e:	4698      	mov	r8, r3
 800d540:	23ff      	movs	r3, #255	@ 0xff
 800d542:	4607      	mov	r7, r0
 800d544:	9300      	str	r3, [sp, #0]
 800d546:	4689      	mov	r9, r1
 800d548:	4692      	mov	sl, r2
 800d54a:	6981      	ldr	r1, [r0, #24]
 800d54c:	9b39      	ldr	r3, [sp, #228]	@ 0xe4
 800d54e:	ed9f 8a82 	vldr	s16, [pc, #520]	@ 800d758 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x224>
 800d552:	1d02      	adds	r2, r0, #4
 800d554:	a80d      	add	r0, sp, #52	@ 0x34
 800d556:	f013 ff83 	bl	8021460 <_ZN8touchgfx6CanvasC1EPKNS_15AbstractPainterERKNS_4RectES6_h>
 800d55a:	7f3b      	ldrb	r3, [r7, #28]
 800d55c:	eddf 0a7e 	vldr	s1, [pc, #504]	@ 800d758 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x224>
 800d560:	1e5a      	subs	r2, r3, #1
 800d562:	4253      	negs	r3, r2
 800d564:	f107 0534 	add.w	r5, r7, #52	@ 0x34
 800d568:	4153      	adcs	r3, r2
 800d56a:	eeb0 0a60 	vmov.f32	s0, s1
 800d56e:	4628      	mov	r0, r5
 800d570:	f88d 3078 	strb.w	r3, [sp, #120]	@ 0x78
 800d574:	f003 ffbd 	bl	80114f2 <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 800d578:	44ca      	add	sl, r9
 800d57a:	eeb0 9a40 	vmov.f32	s18, s0
 800d57e:	eef0 9a60 	vmov.f32	s19, s1
 800d582:	eef0 8a48 	vmov.f32	s17, s16
 800d586:	2400      	movs	r4, #0
 800d588:	45ca      	cmp	sl, r9
 800d58a:	f000 80cd 	beq.w	800d728 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x1f4>
 800d58e:	f819 3b01 	ldrb.w	r3, [r9], #1
 800d592:	2b06      	cmp	r3, #6
 800d594:	d8f8      	bhi.n	800d588 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x54>
 800d596:	e8df f003 	tbb	[pc, r3]
 800d59a:	0804      	.short	0x0804
 800d59c:	58533f2a 	.word	0x58533f2a
 800d5a0:	8a          	.byte	0x8a
 800d5a1:	00          	.byte	0x00
 800d5a2:	a80d      	add	r0, sp, #52	@ 0x34
 800d5a4:	f013 ffce 	bl	8021544 <_ZN8touchgfx6Canvas5closeEv>
 800d5a8:	e7ee      	b.n	800d588 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x54>
 800d5aa:	eb08 0384 	add.w	r3, r8, r4, lsl #2
 800d5ae:	edd3 8a00 	vldr	s17, [r3]
 800d5b2:	ed93 8a01 	vldr	s16, [r3, #4]
 800d5b6:	eeb0 0a68 	vmov.f32	s0, s17
 800d5ba:	eef0 0a48 	vmov.f32	s1, s16
 800d5be:	4628      	mov	r0, r5
 800d5c0:	f003 ff97 	bl	80114f2 <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 800d5c4:	eef0 7a60 	vmov.f32	s15, s1
 800d5c8:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 800d5cc:	a80d      	add	r0, sp, #52	@ 0x34
 800d5ce:	ee17 2a90 	vmov	r2, s15
 800d5d2:	eef0 7a40 	vmov.f32	s15, s0
 800d5d6:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 800d5da:	eeb0 9a40 	vmov.f32	s18, s0
 800d5de:	ee17 1a90 	vmov	r1, s15
 800d5e2:	eef0 9a60 	vmov.f32	s19, s1
 800d5e6:	f014 f887 	bl	80216f8 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
 800d5ea:	3402      	adds	r4, #2
 800d5ec:	e7cc      	b.n	800d588 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x54>
 800d5ee:	eb08 0384 	add.w	r3, r8, r4, lsl #2
 800d5f2:	edd3 8a00 	vldr	s17, [r3]
 800d5f6:	ed93 8a01 	vldr	s16, [r3, #4]
 800d5fa:	eeb0 0a68 	vmov.f32	s0, s17
 800d5fe:	eef0 0a48 	vmov.f32	s1, s16
 800d602:	4628      	mov	r0, r5
 800d604:	f003 ff75 	bl	80114f2 <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 800d608:	a80d      	add	r0, sp, #52	@ 0x34
 800d60a:	eeb0 9a40 	vmov.f32	s18, s0
 800d60e:	eef0 9a60 	vmov.f32	s19, s1
 800d612:	f7ff fe01 	bl	800d218 <_ZN8touchgfx6Canvas6lineToIfEEvT_S2_>
 800d616:	e7e8      	b.n	800d5ea <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0xb6>
 800d618:	eb08 0384 	add.w	r3, r8, r4, lsl #2
 800d61c:	edd3 8a00 	vldr	s17, [r3]
 800d620:	eef0 0a48 	vmov.f32	s1, s16
 800d624:	eeb0 0a68 	vmov.f32	s0, s17
 800d628:	4628      	mov	r0, r5
 800d62a:	f003 ff62 	bl	80114f2 <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 800d62e:	a80d      	add	r0, sp, #52	@ 0x34
 800d630:	eeb0 9a40 	vmov.f32	s18, s0
 800d634:	eef0 9a60 	vmov.f32	s19, s1
 800d638:	3401      	adds	r4, #1
 800d63a:	f7ff fded 	bl	800d218 <_ZN8touchgfx6Canvas6lineToIfEEvT_S2_>
 800d63e:	e7a3      	b.n	800d588 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x54>
 800d640:	eb08 0384 	add.w	r3, r8, r4, lsl #2
 800d644:	ed93 8a00 	vldr	s16, [r3]
 800d648:	e7ea      	b.n	800d620 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0xec>
 800d64a:	1ca3      	adds	r3, r4, #2
 800d64c:	eb08 0383 	add.w	r3, r8, r3, lsl #2
 800d650:	ed53 0a01 	vldr	s1, [r3, #-4]
 800d654:	ed13 0a02 	vldr	s0, [r3, #-8]
 800d658:	edd3 8a00 	vldr	s17, [r3]
 800d65c:	ed93 8a01 	vldr	s16, [r3, #4]
 800d660:	4628      	mov	r0, r5
 800d662:	f003 ff46 	bl	80114f2 <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 800d666:	4628      	mov	r0, r5
 800d668:	ed8d 0a09 	vstr	s0, [sp, #36]	@ 0x24
 800d66c:	edcd 0a0a 	vstr	s1, [sp, #40]	@ 0x28
 800d670:	eeb0 0a68 	vmov.f32	s0, s17
 800d674:	eef0 0a48 	vmov.f32	s1, s16
 800d678:	f003 ff3b 	bl	80114f2 <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 800d67c:	eddd 1a0a 	vldr	s3, [sp, #40]	@ 0x28
 800d680:	ed9d 1a09 	vldr	s2, [sp, #36]	@ 0x24
 800d684:	eef0 2a60 	vmov.f32	s5, s1
 800d688:	eeb0 2a40 	vmov.f32	s4, s0
 800d68c:	eeb0 aa40 	vmov.f32	s20, s0
 800d690:	eef0 aa60 	vmov.f32	s21, s1
 800d694:	eeb0 0a49 	vmov.f32	s0, s18
 800d698:	eef0 0a69 	vmov.f32	s1, s19
 800d69c:	a80d      	add	r0, sp, #52	@ 0x34
 800d69e:	f7ff f9a7 	bl	800c9f0 <_ZN8touchgfx6Canvas17quadraticBezierToEffffff>
 800d6a2:	3404      	adds	r4, #4
 800d6a4:	eef0 9a6a 	vmov.f32	s19, s21
 800d6a8:	eeb0 9a4a 	vmov.f32	s18, s20
 800d6ac:	e76c      	b.n	800d588 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x54>
 800d6ae:	1d26      	adds	r6, r4, #4
 800d6b0:	eb08 0686 	add.w	r6, r8, r6, lsl #2
 800d6b4:	ed56 0a03 	vldr	s1, [r6, #-12]
 800d6b8:	ed16 0a04 	vldr	s0, [r6, #-16]
 800d6bc:	edd6 8a00 	vldr	s17, [r6]
 800d6c0:	ed96 8a01 	vldr	s16, [r6, #4]
 800d6c4:	4628      	mov	r0, r5
 800d6c6:	f003 ff14 	bl	80114f2 <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 800d6ca:	4628      	mov	r0, r5
 800d6cc:	ed8d 0a07 	vstr	s0, [sp, #28]
 800d6d0:	edcd 0a08 	vstr	s1, [sp, #32]
 800d6d4:	ed16 0a02 	vldr	s0, [r6, #-8]
 800d6d8:	ed56 0a01 	vldr	s1, [r6, #-4]
 800d6dc:	f003 ff09 	bl	80114f2 <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 800d6e0:	4628      	mov	r0, r5
 800d6e2:	ed8d 0a09 	vstr	s0, [sp, #36]	@ 0x24
 800d6e6:	edcd 0a0a 	vstr	s1, [sp, #40]	@ 0x28
 800d6ea:	eeb0 0a68 	vmov.f32	s0, s17
 800d6ee:	eef0 0a48 	vmov.f32	s1, s16
 800d6f2:	f003 fefe 	bl	80114f2 <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 800d6f6:	eddd 2a0a 	vldr	s5, [sp, #40]	@ 0x28
 800d6fa:	ed9d 2a09 	vldr	s4, [sp, #36]	@ 0x24
 800d6fe:	eddd 1a08 	vldr	s3, [sp, #32]
 800d702:	ed9d 1a07 	vldr	s2, [sp, #28]
 800d706:	eef0 3a60 	vmov.f32	s7, s1
 800d70a:	eeb0 3a40 	vmov.f32	s6, s0
 800d70e:	eeb0 aa40 	vmov.f32	s20, s0
 800d712:	eef0 aa60 	vmov.f32	s21, s1
 800d716:	eeb0 0a49 	vmov.f32	s0, s18
 800d71a:	eef0 0a69 	vmov.f32	s1, s19
 800d71e:	a80d      	add	r0, sp, #52	@ 0x34
 800d720:	f7ff f985 	bl	800ca2e <_ZN8touchgfx6Canvas13cubicBezierToEffffffff>
 800d724:	3406      	adds	r4, #6
 800d726:	e7bd      	b.n	800d6a4 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x170>
 800d728:	7f7b      	ldrb	r3, [r7, #29]
 800d72a:	7fb9      	ldrb	r1, [r7, #30]
 800d72c:	4359      	muls	r1, r3
 800d72e:	1c4b      	adds	r3, r1, #1
 800d730:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 800d734:	f3c1 2107 	ubfx	r1, r1, #8, #8
 800d738:	a80d      	add	r0, sp, #52	@ 0x34
 800d73a:	f013 ff25 	bl	8021588 <_ZN8touchgfx6Canvas6renderEh>
 800d73e:	4b07      	ldr	r3, [pc, #28]	@ (800d75c <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x228>)
 800d740:	930d      	str	r3, [sp, #52]	@ 0x34
 800d742:	4604      	mov	r4, r0
 800d744:	a812      	add	r0, sp, #72	@ 0x48
 800d746:	f000 fa12 	bl	800db6e <_ZN8touchgfx7OutlineD1Ev>
 800d74a:	4620      	mov	r0, r4
 800d74c:	b02a      	add	sp, #168	@ 0xa8
 800d74e:	ecbd 8b06 	vpop	{d8-d10}
 800d752:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800d756:	bf00      	nop
 800d758:	00000000 	.word	0x00000000
 800d75c:	08025658 	.word	0x08025658

0800d760 <_ZNK8touchgfx17CWRVectorRenderer12drawPathAreaEPKhmPKfmRKNS_4RectE>:
 800d760:	b410      	push	{r4}
 800d762:	7f04      	ldrb	r4, [r0, #28]
 800d764:	b11c      	cbz	r4, 800d76e <_ZNK8touchgfx17CWRVectorRenderer12drawPathAreaEPKhmPKfmRKNS_4RectE+0xe>
 800d766:	f85d 4b04 	ldr.w	r4, [sp], #4
 800d76a:	f7ff bee3 	b.w	800d534 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE>
 800d76e:	f85d 4b04 	ldr.w	r4, [sp], #4
 800d772:	f7ff bd6d 	b.w	800d250 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE>
	...

0800d778 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_>:
 800d778:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d77c:	4691      	mov	r9, r2
 800d77e:	4602      	mov	r2, r0
 800d780:	4605      	mov	r5, r0
 800d782:	f852 0f26 	ldr.w	r0, [r2, #38]!
 800d786:	b085      	sub	sp, #20
 800d788:	4688      	mov	r8, r1
 800d78a:	6851      	ldr	r1, [r2, #4]
 800d78c:	f8dd b038 	ldr.w	fp, [sp, #56]	@ 0x38
 800d790:	469a      	mov	sl, r3
 800d792:	ab02      	add	r3, sp, #8
 800d794:	c303      	stmia	r3!, {r0, r1}
 800d796:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 800d79a:	2b00      	cmp	r3, #0
 800d79c:	af02      	add	r7, sp, #8
 800d79e:	dd08      	ble.n	800d7b2 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x3a>
 800d7a0:	f9bd 400e 	ldrsh.w	r4, [sp, #14]
 800d7a4:	2c00      	cmp	r4, #0
 800d7a6:	dd04      	ble.n	800d7b2 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x3a>
 800d7a8:	4a2e      	ldr	r2, [pc, #184]	@ (800d864 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0xec>)
 800d7aa:	7812      	ldrb	r2, [r2, #0]
 800d7ac:	b122      	cbz	r2, 800d7b8 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x40>
 800d7ae:	2a01      	cmp	r2, #1
 800d7b0:	d02d      	beq.n	800d80e <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x96>
 800d7b2:	b005      	add	sp, #20
 800d7b4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d7b8:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 800d7bc:	441c      	add	r4, r3
 800d7be:	b2a4      	uxth	r4, r4
 800d7c0:	b226      	sxth	r6, r4
 800d7c2:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 800d7c6:	42b3      	cmp	r3, r6
 800d7c8:	daf3      	bge.n	800d7b2 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x3a>
 800d7ca:	e9cd b700 	strd	fp, r7, [sp]
 800d7ce:	4653      	mov	r3, sl
 800d7d0:	464a      	mov	r2, r9
 800d7d2:	4641      	mov	r1, r8
 800d7d4:	4628      	mov	r0, r5
 800d7d6:	f7ff ffc3 	bl	800d760 <_ZNK8touchgfx17CWRVectorRenderer12drawPathAreaEPKhmPKfmRKNS_4RectE>
 800d7da:	b940      	cbnz	r0, 800d7ee <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x76>
 800d7dc:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 800d7e0:	2b01      	cmp	r3, #1
 800d7e2:	d004      	beq.n	800d7ee <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x76>
 800d7e4:	3301      	adds	r3, #1
 800d7e6:	105b      	asrs	r3, r3, #1
 800d7e8:	f8ad 300e 	strh.w	r3, [sp, #14]
 800d7ec:	e7ed      	b.n	800d7ca <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x52>
 800d7ee:	f8bd 200e 	ldrh.w	r2, [sp, #14]
 800d7f2:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 800d7f6:	4413      	add	r3, r2
 800d7f8:	b29b      	uxth	r3, r3
 800d7fa:	441a      	add	r2, r3
 800d7fc:	b212      	sxth	r2, r2
 800d7fe:	4296      	cmp	r6, r2
 800d800:	f8ad 300a 	strh.w	r3, [sp, #10]
 800d804:	dadd      	bge.n	800d7c2 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x4a>
 800d806:	1ae3      	subs	r3, r4, r3
 800d808:	f8ad 300e 	strh.w	r3, [sp, #14]
 800d80c:	e7d9      	b.n	800d7c2 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x4a>
 800d80e:	f8bd 4008 	ldrh.w	r4, [sp, #8]
 800d812:	441c      	add	r4, r3
 800d814:	b2a4      	uxth	r4, r4
 800d816:	b226      	sxth	r6, r4
 800d818:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
 800d81c:	42b3      	cmp	r3, r6
 800d81e:	dac8      	bge.n	800d7b2 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x3a>
 800d820:	e9cd b700 	strd	fp, r7, [sp]
 800d824:	4653      	mov	r3, sl
 800d826:	464a      	mov	r2, r9
 800d828:	4641      	mov	r1, r8
 800d82a:	4628      	mov	r0, r5
 800d82c:	f7ff ff98 	bl	800d760 <_ZNK8touchgfx17CWRVectorRenderer12drawPathAreaEPKhmPKfmRKNS_4RectE>
 800d830:	b940      	cbnz	r0, 800d844 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0xcc>
 800d832:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 800d836:	2b01      	cmp	r3, #1
 800d838:	d004      	beq.n	800d844 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0xcc>
 800d83a:	3301      	adds	r3, #1
 800d83c:	105b      	asrs	r3, r3, #1
 800d83e:	f8ad 300c 	strh.w	r3, [sp, #12]
 800d842:	e7ed      	b.n	800d820 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0xa8>
 800d844:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 800d848:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 800d84c:	4413      	add	r3, r2
 800d84e:	b29b      	uxth	r3, r3
 800d850:	441a      	add	r2, r3
 800d852:	b212      	sxth	r2, r2
 800d854:	4296      	cmp	r6, r2
 800d856:	f8ad 3008 	strh.w	r3, [sp, #8]
 800d85a:	dadd      	bge.n	800d818 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0xa0>
 800d85c:	1ae3      	subs	r3, r4, r3
 800d85e:	f8ad 300c 	strh.w	r3, [sp, #12]
 800d862:	e7d9      	b.n	800d818 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0xa0>
 800d864:	200133ca 	.word	0x200133ca

0800d868 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE>:
 800d868:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800d86a:	6803      	ldr	r3, [r0, #0]
 800d86c:	460d      	mov	r5, r1
 800d86e:	4604      	mov	r4, r0
 800d870:	4601      	mov	r1, r0
 800d872:	6e9b      	ldr	r3, [r3, #104]	@ 0x68
 800d874:	a802      	add	r0, sp, #8
 800d876:	4798      	blx	r3
 800d878:	6828      	ldr	r0, [r5, #0]
 800d87a:	6869      	ldr	r1, [r5, #4]
 800d87c:	466b      	mov	r3, sp
 800d87e:	c303      	stmia	r3!, {r0, r1}
 800d880:	4668      	mov	r0, sp
 800d882:	4619      	mov	r1, r3
 800d884:	f7fd fb98 	bl	800afb8 <_ZN8touchgfx4RectaNERKS0_>
 800d888:	6aa0      	ldr	r0, [r4, #40]	@ 0x28
 800d88a:	b188      	cbz	r0, 800d8b0 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 800d88c:	6803      	ldr	r3, [r0, #0]
 800d88e:	1d21      	adds	r1, r4, #4
 800d890:	68db      	ldr	r3, [r3, #12]
 800d892:	4798      	blx	r3
 800d894:	b160      	cbz	r0, 800d8b0 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 800d896:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 800d89a:	2b00      	cmp	r3, #0
 800d89c:	dd08      	ble.n	800d8b0 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 800d89e:	f9bd 5006 	ldrsh.w	r5, [sp, #6]
 800d8a2:	2d00      	cmp	r5, #0
 800d8a4:	dd04      	ble.n	800d8b0 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 800d8a6:	4a2b      	ldr	r2, [pc, #172]	@ (800d954 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xec>)
 800d8a8:	7812      	ldrb	r2, [r2, #0]
 800d8aa:	b11a      	cbz	r2, 800d8b4 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x4c>
 800d8ac:	2a01      	cmp	r2, #1
 800d8ae:	d029      	beq.n	800d904 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x9c>
 800d8b0:	b004      	add	sp, #16
 800d8b2:	bd70      	pop	{r4, r5, r6, pc}
 800d8b4:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800d8b8:	441d      	add	r5, r3
 800d8ba:	b2ad      	uxth	r5, r5
 800d8bc:	b22e      	sxth	r6, r5
 800d8be:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 800d8c2:	42b3      	cmp	r3, r6
 800d8c4:	daf4      	bge.n	800d8b0 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 800d8c6:	6823      	ldr	r3, [r4, #0]
 800d8c8:	4669      	mov	r1, sp
 800d8ca:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 800d8cc:	4620      	mov	r0, r4
 800d8ce:	4798      	blx	r3
 800d8d0:	b940      	cbnz	r0, 800d8e4 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x7c>
 800d8d2:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 800d8d6:	2b01      	cmp	r3, #1
 800d8d8:	d004      	beq.n	800d8e4 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x7c>
 800d8da:	3301      	adds	r3, #1
 800d8dc:	105b      	asrs	r3, r3, #1
 800d8de:	f8ad 3006 	strh.w	r3, [sp, #6]
 800d8e2:	e7f0      	b.n	800d8c6 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x5e>
 800d8e4:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 800d8e8:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800d8ec:	4413      	add	r3, r2
 800d8ee:	b29b      	uxth	r3, r3
 800d8f0:	441a      	add	r2, r3
 800d8f2:	b212      	sxth	r2, r2
 800d8f4:	4296      	cmp	r6, r2
 800d8f6:	f8ad 3002 	strh.w	r3, [sp, #2]
 800d8fa:	dae0      	bge.n	800d8be <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x56>
 800d8fc:	1aeb      	subs	r3, r5, r3
 800d8fe:	f8ad 3006 	strh.w	r3, [sp, #6]
 800d902:	e7dc      	b.n	800d8be <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x56>
 800d904:	f8bd 5000 	ldrh.w	r5, [sp]
 800d908:	441d      	add	r5, r3
 800d90a:	b2ad      	uxth	r5, r5
 800d90c:	b22e      	sxth	r6, r5
 800d90e:	f9bd 3000 	ldrsh.w	r3, [sp]
 800d912:	42b3      	cmp	r3, r6
 800d914:	dacc      	bge.n	800d8b0 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 800d916:	6823      	ldr	r3, [r4, #0]
 800d918:	4669      	mov	r1, sp
 800d91a:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 800d91c:	4620      	mov	r0, r4
 800d91e:	4798      	blx	r3
 800d920:	b940      	cbnz	r0, 800d934 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xcc>
 800d922:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 800d926:	2b01      	cmp	r3, #1
 800d928:	d004      	beq.n	800d934 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xcc>
 800d92a:	3301      	adds	r3, #1
 800d92c:	105b      	asrs	r3, r3, #1
 800d92e:	f8ad 3004 	strh.w	r3, [sp, #4]
 800d932:	e7f0      	b.n	800d916 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xae>
 800d934:	f8bd 2004 	ldrh.w	r2, [sp, #4]
 800d938:	f8bd 3000 	ldrh.w	r3, [sp]
 800d93c:	4413      	add	r3, r2
 800d93e:	b29b      	uxth	r3, r3
 800d940:	441a      	add	r2, r3
 800d942:	b212      	sxth	r2, r2
 800d944:	4296      	cmp	r6, r2
 800d946:	f8ad 3000 	strh.w	r3, [sp]
 800d94a:	dae0      	bge.n	800d90e <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa6>
 800d94c:	1aeb      	subs	r3, r5, r3
 800d94e:	f8ad 3004 	strh.w	r3, [sp, #4]
 800d952:	e7dc      	b.n	800d90e <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa6>
 800d954:	200133ca 	.word	0x200133ca

0800d958 <_ZNK8touchgfx12CanvasWidget10invalidateEv>:
 800d958:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800d95a:	6803      	ldr	r3, [r0, #0]
 800d95c:	4604      	mov	r4, r0
 800d95e:	4601      	mov	r1, r0
 800d960:	6e9b      	ldr	r3, [r3, #104]	@ 0x68
 800d962:	4668      	mov	r0, sp
 800d964:	4798      	blx	r3
 800d966:	2100      	movs	r1, #0
 800d968:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 800d96c:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800d970:	9102      	str	r1, [sp, #8]
 800d972:	4668      	mov	r0, sp
 800d974:	a902      	add	r1, sp, #8
 800d976:	f8ad 200c 	strh.w	r2, [sp, #12]
 800d97a:	f8ad 300e 	strh.w	r3, [sp, #14]
 800d97e:	f7fd fb1b 	bl	800afb8 <_ZN8touchgfx4RectaNERKS0_>
 800d982:	6823      	ldr	r3, [r4, #0]
 800d984:	4669      	mov	r1, sp
 800d986:	691b      	ldr	r3, [r3, #16]
 800d988:	4620      	mov	r0, r4
 800d98a:	4798      	blx	r3
 800d98c:	b004      	add	sp, #16
 800d98e:	bd10      	pop	{r4, pc}

0800d990 <_ZN8touchgfx12CanvasWidgetC1Ev>:
 800d990:	2101      	movs	r1, #1
 800d992:	f880 1025 	strb.w	r1, [r0, #37]	@ 0x25
 800d996:	490b      	ldr	r1, [pc, #44]	@ (800d9c4 <_ZN8touchgfx12CanvasWidgetC1Ev+0x34>)
 800d998:	6001      	str	r1, [r0, #0]
 800d99a:	2200      	movs	r2, #0
 800d99c:	21ff      	movs	r1, #255	@ 0xff
 800d99e:	8082      	strh	r2, [r0, #4]
 800d9a0:	80c2      	strh	r2, [r0, #6]
 800d9a2:	8102      	strh	r2, [r0, #8]
 800d9a4:	8142      	strh	r2, [r0, #10]
 800d9a6:	8182      	strh	r2, [r0, #12]
 800d9a8:	81c2      	strh	r2, [r0, #14]
 800d9aa:	8202      	strh	r2, [r0, #16]
 800d9ac:	8242      	strh	r2, [r0, #18]
 800d9ae:	e9c0 2205 	strd	r2, r2, [r0, #20]
 800d9b2:	61c2      	str	r2, [r0, #28]
 800d9b4:	8402      	strh	r2, [r0, #32]
 800d9b6:	8442      	strh	r2, [r0, #34]	@ 0x22
 800d9b8:	f880 2024 	strb.w	r2, [r0, #36]	@ 0x24
 800d9bc:	f880 1026 	strb.w	r1, [r0, #38]	@ 0x26
 800d9c0:	6282      	str	r2, [r0, #40]	@ 0x28
 800d9c2:	4770      	bx	lr
 800d9c4:	080250cc 	.word	0x080250cc

0800d9c8 <_ZNK8touchgfx3Box12getSolidRectEv>:
 800d9c8:	2300      	movs	r3, #0
 800d9ca:	8083      	strh	r3, [r0, #4]
 800d9cc:	80c3      	strh	r3, [r0, #6]
 800d9ce:	8003      	strh	r3, [r0, #0]
 800d9d0:	8043      	strh	r3, [r0, #2]
 800d9d2:	f891 3026 	ldrb.w	r3, [r1, #38]	@ 0x26
 800d9d6:	2bff      	cmp	r3, #255	@ 0xff
 800d9d8:	bf01      	itttt	eq
 800d9da:	890b      	ldrheq	r3, [r1, #8]
 800d9dc:	8083      	strheq	r3, [r0, #4]
 800d9de:	894b      	ldrheq	r3, [r1, #10]
 800d9e0:	80c3      	strheq	r3, [r0, #6]
 800d9e2:	4770      	bx	lr

0800d9e4 <_ZNK8touchgfx3Box4drawERKNS_4RectE>:
 800d9e4:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800d9e6:	4604      	mov	r4, r0
 800d9e8:	6808      	ldr	r0, [r1, #0]
 800d9ea:	6849      	ldr	r1, [r1, #4]
 800d9ec:	466b      	mov	r3, sp
 800d9ee:	c303      	stmia	r3!, {r0, r1}
 800d9f0:	6823      	ldr	r3, [r4, #0]
 800d9f2:	4669      	mov	r1, sp
 800d9f4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800d9f6:	4620      	mov	r0, r4
 800d9f8:	4798      	blx	r3
 800d9fa:	4b08      	ldr	r3, [pc, #32]	@ (800da1c <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x38>)
 800d9fc:	681b      	ldr	r3, [r3, #0]
 800d9fe:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
 800da02:	b10a      	cbz	r2, 800da08 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x24>
 800da04:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 800da06:	b900      	cbnz	r0, 800da0a <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x26>
 800da08:	6898      	ldr	r0, [r3, #8]
 800da0a:	6803      	ldr	r3, [r0, #0]
 800da0c:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
 800da0e:	6a1d      	ldr	r5, [r3, #32]
 800da10:	f894 3026 	ldrb.w	r3, [r4, #38]	@ 0x26
 800da14:	4669      	mov	r1, sp
 800da16:	47a8      	blx	r5
 800da18:	b003      	add	sp, #12
 800da1a:	bd30      	pop	{r4, r5, pc}
 800da1c:	200133d4 	.word	0x200133d4

0800da20 <_ZN8touchgfx3BoxD1Ev>:
 800da20:	4770      	bx	lr

0800da22 <_ZN8touchgfx3BoxD0Ev>:
 800da22:	b510      	push	{r4, lr}
 800da24:	212c      	movs	r1, #44	@ 0x2c
 800da26:	4604      	mov	r4, r0
 800da28:	f014 f97d 	bl	8021d26 <_ZdlPvj>
 800da2c:	4620      	mov	r0, r4
 800da2e:	bd10      	pop	{r4, pc}

0800da30 <_ZNK8touchgfx3Box17invalidateContentEv>:
 800da30:	f890 2026 	ldrb.w	r2, [r0, #38]	@ 0x26
 800da34:	b12a      	cbz	r2, 800da42 <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 800da36:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
 800da3a:	b112      	cbz	r2, 800da42 <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 800da3c:	6803      	ldr	r3, [r0, #0]
 800da3e:	695b      	ldr	r3, [r3, #20]
 800da40:	4718      	bx	r3
 800da42:	4770      	bx	lr

0800da44 <_ZN8touchgfx13BoxWithBorderD1Ev>:
 800da44:	4770      	bx	lr

0800da46 <_ZN8touchgfx13BoxWithBorderD0Ev>:
 800da46:	b510      	push	{r4, lr}
 800da48:	2134      	movs	r1, #52	@ 0x34
 800da4a:	4604      	mov	r4, r0
 800da4c:	f014 f96b 	bl	8021d26 <_ZdlPvj>
 800da50:	4620      	mov	r0, r4
 800da52:	bd10      	pop	{r4, pc}

0800da54 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE>:
 800da54:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800da58:	4604      	mov	r4, r0
 800da5a:	8e03      	ldrh	r3, [r0, #48]	@ 0x30
 800da5c:	8962      	ldrh	r2, [r4, #10]
 800da5e:	b218      	sxth	r0, r3
 800da60:	460e      	mov	r6, r1
 800da62:	005b      	lsls	r3, r3, #1
 800da64:	8921      	ldrh	r1, [r4, #8]
 800da66:	b29b      	uxth	r3, r3
 800da68:	1ac9      	subs	r1, r1, r3
 800da6a:	b08e      	sub	sp, #56	@ 0x38
 800da6c:	b209      	sxth	r1, r1
 800da6e:	1ad3      	subs	r3, r2, r3
 800da70:	b21b      	sxth	r3, r3
 800da72:	2900      	cmp	r1, #0
 800da74:	f8ad 0000 	strh.w	r0, [sp]
 800da78:	f8ad 0002 	strh.w	r0, [sp, #2]
 800da7c:	f8ad 1004 	strh.w	r1, [sp, #4]
 800da80:	f8ad 3006 	strh.w	r3, [sp, #6]
 800da84:	dd5e      	ble.n	800db44 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xf0>
 800da86:	2b00      	cmp	r3, #0
 800da88:	dd5c      	ble.n	800db44 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xf0>
 800da8a:	6830      	ldr	r0, [r6, #0]
 800da8c:	6871      	ldr	r1, [r6, #4]
 800da8e:	ab02      	add	r3, sp, #8
 800da90:	c303      	stmia	r3!, {r0, r1}
 800da92:	4669      	mov	r1, sp
 800da94:	a802      	add	r0, sp, #8
 800da96:	f7fd fa8f 	bl	800afb8 <_ZN8touchgfx4RectaNERKS0_>
 800da9a:	4620      	mov	r0, r4
 800da9c:	a902      	add	r1, sp, #8
 800da9e:	f7ff ffa1 	bl	800d9e4 <_ZNK8touchgfx3Box4drawERKNS_4RectE>
 800daa2:	8e20      	ldrh	r0, [r4, #48]	@ 0x30
 800daa4:	2800      	cmp	r0, #0
 800daa6:	d05f      	beq.n	800db68 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0x114>
 800daa8:	8963      	ldrh	r3, [r4, #10]
 800daaa:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 800daae:	f8ad 101c 	strh.w	r1, [sp, #28]
 800dab2:	1a1f      	subs	r7, r3, r0
 800dab4:	eba3 0340 	sub.w	r3, r3, r0, lsl #1
 800dab8:	b202      	sxth	r2, r0
 800daba:	2500      	movs	r5, #0
 800dabc:	b21b      	sxth	r3, r3
 800dabe:	f8ad 1024 	strh.w	r1, [sp, #36]	@ 0x24
 800dac2:	1a09      	subs	r1, r1, r0
 800dac4:	f8ad 7022 	strh.w	r7, [sp, #34]	@ 0x22
 800dac8:	9506      	str	r5, [sp, #24]
 800daca:	f8ad 201e 	strh.w	r2, [sp, #30]
 800dace:	f8ad 5020 	strh.w	r5, [sp, #32]
 800dad2:	f8ad 2026 	strh.w	r2, [sp, #38]	@ 0x26
 800dad6:	f8ad 5028 	strh.w	r5, [sp, #40]	@ 0x28
 800dada:	f8ad 202a 	strh.w	r2, [sp, #42]	@ 0x2a
 800dade:	f8ad 202c 	strh.w	r2, [sp, #44]	@ 0x2c
 800dae2:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
 800dae6:	f8ad 1030 	strh.w	r1, [sp, #48]	@ 0x30
 800daea:	f8ad 2032 	strh.w	r2, [sp, #50]	@ 0x32
 800daee:	f8ad 2034 	strh.w	r2, [sp, #52]	@ 0x34
 800daf2:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 800daf6:	af04      	add	r7, sp, #16
 800daf8:	ab06      	add	r3, sp, #24
 800dafa:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 800dafe:	e893 0003 	ldmia.w	r3, {r0, r1}
 800db02:	e887 0003 	stmia.w	r7, {r0, r1}
 800db06:	4631      	mov	r1, r6
 800db08:	4638      	mov	r0, r7
 800db0a:	f7fd fa55 	bl	800afb8 <_ZN8touchgfx4RectaNERKS0_>
 800db0e:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 800db12:	2b00      	cmp	r3, #0
 800db14:	dd12      	ble.n	800db3c <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xe8>
 800db16:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 800db1a:	2b00      	cmp	r3, #0
 800db1c:	dd0e      	ble.n	800db3c <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xe8>
 800db1e:	6823      	ldr	r3, [r4, #0]
 800db20:	4639      	mov	r1, r7
 800db22:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800db24:	4620      	mov	r0, r4
 800db26:	4798      	blx	r3
 800db28:	f7f5 fc4e 	bl	80033c8 <_ZN8touchgfx3HAL3lcdEv>
 800db2c:	6803      	ldr	r3, [r0, #0]
 800db2e:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 800db30:	f8d3 8020 	ldr.w	r8, [r3, #32]
 800db34:	f894 3026 	ldrb.w	r3, [r4, #38]	@ 0x26
 800db38:	4639      	mov	r1, r7
 800db3a:	47c0      	blx	r8
 800db3c:	3501      	adds	r5, #1
 800db3e:	2d04      	cmp	r5, #4
 800db40:	d1da      	bne.n	800daf8 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xa4>
 800db42:	e011      	b.n	800db68 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0x114>
 800db44:	6830      	ldr	r0, [r6, #0]
 800db46:	6871      	ldr	r1, [r6, #4]
 800db48:	ab06      	add	r3, sp, #24
 800db4a:	c303      	stmia	r3!, {r0, r1}
 800db4c:	6823      	ldr	r3, [r4, #0]
 800db4e:	a906      	add	r1, sp, #24
 800db50:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800db52:	4620      	mov	r0, r4
 800db54:	4798      	blx	r3
 800db56:	f7f5 fc37 	bl	80033c8 <_ZN8touchgfx3HAL3lcdEv>
 800db5a:	6803      	ldr	r3, [r0, #0]
 800db5c:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 800db5e:	6a1d      	ldr	r5, [r3, #32]
 800db60:	f894 3026 	ldrb.w	r3, [r4, #38]	@ 0x26
 800db64:	a906      	add	r1, sp, #24
 800db66:	47a8      	blx	r5
 800db68:	b00e      	add	sp, #56	@ 0x38
 800db6a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800db6e <_ZN8touchgfx7OutlineD1Ev>:
 800db6e:	4770      	bx	lr

0800db70 <_ZN8touchgfx7OutlineD0Ev>:
 800db70:	b510      	push	{r4, lr}
 800db72:	2130      	movs	r1, #48	@ 0x30
 800db74:	4604      	mov	r4, r0
 800db76:	f014 f8d6 	bl	8021d26 <_ZdlPvj>
 800db7a:	4620      	mov	r0, r4
 800db7c:	bd10      	pop	{r4, pc}

0800db7e <_ZN8touchgfx7Outline5resetEv>:
 800db7e:	b510      	push	{r4, lr}
 800db80:	4604      	mov	r4, r0
 800db82:	f000 fe81 	bl	800e888 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>
 800db86:	60e0      	str	r0, [r4, #12]
 800db88:	f000 fe84 	bl	800e894 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>
 800db8c:	68e3      	ldr	r3, [r4, #12]
 800db8e:	6123      	str	r3, [r4, #16]
 800db90:	08c0      	lsrs	r0, r0, #3
 800db92:	2200      	movs	r2, #0
 800db94:	f647 71ff 	movw	r1, #32767	@ 0x7fff
 800db98:	3801      	subs	r0, #1
 800db9a:	6060      	str	r0, [r4, #4]
 800db9c:	60a2      	str	r2, [r4, #8]
 800db9e:	8019      	strh	r1, [r3, #0]
 800dba0:	8059      	strh	r1, [r3, #2]
 800dba2:	809a      	strh	r2, [r3, #4]
 800dba4:	80da      	strh	r2, [r3, #6]
 800dba6:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 800dba8:	f023 0301 	bic.w	r3, r3, #1
 800dbac:	f043 0302 	orr.w	r3, r3, #2
 800dbb0:	6263      	str	r3, [r4, #36]	@ 0x24
 800dbb2:	bd10      	pop	{r4, pc}

0800dbb4 <_ZN8touchgfx7OutlineC1Ev>:
 800dbb4:	b510      	push	{r4, lr}
 800dbb6:	4b0a      	ldr	r3, [pc, #40]	@ (800dbe0 <_ZN8touchgfx7OutlineC1Ev+0x2c>)
 800dbb8:	6003      	str	r3, [r0, #0]
 800dbba:	2300      	movs	r3, #0
 800dbbc:	e9c0 3301 	strd	r3, r3, [r0, #4]
 800dbc0:	e9c0 3303 	strd	r3, r3, [r0, #12]
 800dbc4:	e9c0 3305 	strd	r3, r3, [r0, #20]
 800dbc8:	e9c0 3307 	strd	r3, r3, [r0, #28]
 800dbcc:	6243      	str	r3, [r0, #36]	@ 0x24
 800dbce:	f06f 4300 	mvn.w	r3, #2147483648	@ 0x80000000
 800dbd2:	4604      	mov	r4, r0
 800dbd4:	e9c0 330a 	strd	r3, r3, [r0, #40]	@ 0x28
 800dbd8:	f7ff ffd1 	bl	800db7e <_ZN8touchgfx7Outline5resetEv>
 800dbdc:	4620      	mov	r0, r4
 800dbde:	bd10      	pop	{r4, pc}
 800dbe0:	08025214 	.word	0x08025214

0800dbe4 <_ZN8touchgfx7Outline10renderLineEiiii>:
 800dbe4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800dbe8:	b093      	sub	sp, #76	@ 0x4c
 800dbea:	1156      	asrs	r6, r2, #5
 800dbec:	9c1c      	ldr	r4, [sp, #112]	@ 0x70
 800dbee:	9305      	str	r3, [sp, #20]
 800dbf0:	f004 051f 	and.w	r5, r4, #31
 800dbf4:	1153      	asrs	r3, r2, #5
 800dbf6:	9504      	str	r5, [sp, #16]
 800dbf8:	1165      	asrs	r5, r4, #5
 800dbfa:	9303      	str	r3, [sp, #12]
 800dbfc:	42ae      	cmp	r6, r5
 800dbfe:	ea4f 1364 	mov.w	r3, r4, asr #5
 800dc02:	9306      	str	r3, [sp, #24]
 800dc04:	f002 031f 	and.w	r3, r2, #31
 800dc08:	f040 80f8 	bne.w	800ddfc <_ZN8touchgfx7Outline10renderLineEiiii+0x218>
 800dc0c:	9c04      	ldr	r4, [sp, #16]
 800dc0e:	9a05      	ldr	r2, [sp, #20]
 800dc10:	42a3      	cmp	r3, r4
 800dc12:	ea4f 1e62 	mov.w	lr, r2, asr #5
 800dc16:	6902      	ldr	r2, [r0, #16]
 800dc18:	d125      	bne.n	800dc66 <_ZN8touchgfx7Outline10renderLineEiiii+0x82>
 800dc1a:	f9b2 3000 	ldrsh.w	r3, [r2]
 800dc1e:	459e      	cmp	lr, r3
 800dc20:	d103      	bne.n	800dc2a <_ZN8touchgfx7Outline10renderLineEiiii+0x46>
 800dc22:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
 800dc26:	429e      	cmp	r6, r3
 800dc28:	d035      	beq.n	800dc96 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 800dc2a:	88d1      	ldrh	r1, [r2, #6]
 800dc2c:	8893      	ldrh	r3, [r2, #4]
 800dc2e:	430b      	orrs	r3, r1
 800dc30:	d010      	beq.n	800dc54 <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 800dc32:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
 800dc36:	2b00      	cmp	r3, #0
 800dc38:	db0c      	blt.n	800dc54 <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 800dc3a:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
 800dc3c:	428b      	cmp	r3, r1
 800dc3e:	da09      	bge.n	800dc54 <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 800dc40:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
 800dc44:	428b      	cmp	r3, r1
 800dc46:	bf38      	it	cc
 800dc48:	3208      	addcc	r2, #8
 800dc4a:	f103 0301 	add.w	r3, r3, #1
 800dc4e:	bf38      	it	cc
 800dc50:	6102      	strcc	r2, [r0, #16]
 800dc52:	6083      	str	r3, [r0, #8]
 800dc54:	6903      	ldr	r3, [r0, #16]
 800dc56:	9a03      	ldr	r2, [sp, #12]
 800dc58:	f8a3 e000 	strh.w	lr, [r3]
 800dc5c:	805a      	strh	r2, [r3, #2]
 800dc5e:	2200      	movs	r2, #0
 800dc60:	809a      	strh	r2, [r3, #4]
 800dc62:	80da      	strh	r2, [r3, #6]
 800dc64:	e017      	b.n	800dc96 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 800dc66:	9c05      	ldr	r4, [sp, #20]
 800dc68:	f8b2 8004 	ldrh.w	r8, [r2, #4]
 800dc6c:	f8b2 a006 	ldrh.w	sl, [r2, #6]
 800dc70:	f004 041f 	and.w	r4, r4, #31
 800dc74:	114e      	asrs	r6, r1, #5
 800dc76:	9402      	str	r4, [sp, #8]
 800dc78:	9c04      	ldr	r4, [sp, #16]
 800dc7a:	4576      	cmp	r6, lr
 800dc7c:	f001 0c1f 	and.w	ip, r1, #31
 800dc80:	eba4 0403 	sub.w	r4, r4, r3
 800dc84:	d10a      	bne.n	800dc9c <_ZN8touchgfx7Outline10renderLineEiiii+0xb8>
 800dc86:	9b02      	ldr	r3, [sp, #8]
 800dc88:	449c      	add	ip, r3
 800dc8a:	44a0      	add	r8, r4
 800dc8c:	fb04 a40c 	mla	r4, r4, ip, sl
 800dc90:	f8a2 8004 	strh.w	r8, [r2, #4]
 800dc94:	80d4      	strh	r4, [r2, #6]
 800dc96:	b013      	add	sp, #76	@ 0x4c
 800dc98:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800dc9c:	9d05      	ldr	r5, [sp, #20]
 800dc9e:	1a69      	subs	r1, r5, r1
 800dca0:	bf5b      	ittet	pl
 800dca2:	f1cc 0520 	rsbpl	r5, ip, #32
 800dca6:	436c      	mulpl	r4, r5
 800dca8:	2500      	movmi	r5, #0
 800dcaa:	2520      	movpl	r5, #32
 800dcac:	bf44      	itt	mi
 800dcae:	fb04 f40c 	mulmi.w	r4, r4, ip
 800dcb2:	4249      	negmi	r1, r1
 800dcb4:	9501      	str	r5, [sp, #4]
 800dcb6:	9f01      	ldr	r7, [sp, #4]
 800dcb8:	fb94 f5f1 	sdiv	r5, r4, r1
 800dcbc:	fb01 4415 	mls	r4, r1, r5, r4
 800dcc0:	bf54      	ite	pl
 800dcc2:	f04f 0901 	movpl.w	r9, #1
 800dcc6:	f04f 39ff 	movmi.w	r9, #4294967295
 800dcca:	2c00      	cmp	r4, #0
 800dccc:	bfb8      	it	lt
 800dcce:	f105 35ff 	addlt.w	r5, r5, #4294967295
 800dcd2:	44bc      	add	ip, r7
 800dcd4:	44a8      	add	r8, r5
 800dcd6:	fb05 ac0c 	mla	ip, r5, ip, sl
 800dcda:	f8a2 8004 	strh.w	r8, [r2, #4]
 800dcde:	f8a2 c006 	strh.w	ip, [r2, #6]
 800dce2:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800dce6:	f8bc 8006 	ldrh.w	r8, [ip, #6]
 800dcea:	f8bc 2004 	ldrh.w	r2, [ip, #4]
 800dcee:	bfb8      	it	lt
 800dcf0:	1864      	addlt	r4, r4, r1
 800dcf2:	ea58 0202 	orrs.w	r2, r8, r2
 800dcf6:	444e      	add	r6, r9
 800dcf8:	d011      	beq.n	800dd1e <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 800dcfa:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
 800dcfe:	f1b8 0f00 	cmp.w	r8, #0
 800dd02:	db0c      	blt.n	800dd1e <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 800dd04:	6ac2      	ldr	r2, [r0, #44]	@ 0x2c
 800dd06:	4590      	cmp	r8, r2
 800dd08:	da09      	bge.n	800dd1e <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 800dd0a:	e9d0 2801 	ldrd	r2, r8, [r0, #4]
 800dd0e:	4590      	cmp	r8, r2
 800dd10:	bf3c      	itt	cc
 800dd12:	f10c 0208 	addcc.w	r2, ip, #8
 800dd16:	6102      	strcc	r2, [r0, #16]
 800dd18:	f108 0201 	add.w	r2, r8, #1
 800dd1c:	6082      	str	r2, [r0, #8]
 800dd1e:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800dd22:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 800dd26:	f8ac 6000 	strh.w	r6, [ip]
 800dd2a:	2700      	movs	r7, #0
 800dd2c:	45b6      	cmp	lr, r6
 800dd2e:	f8ac 2002 	strh.w	r2, [ip, #2]
 800dd32:	f8ac 7004 	strh.w	r7, [ip, #4]
 800dd36:	f8ac 7006 	strh.w	r7, [ip, #6]
 800dd3a:	442b      	add	r3, r5
 800dd3c:	d04d      	beq.n	800ddda <_ZN8touchgfx7Outline10renderLineEiiii+0x1f6>
 800dd3e:	9f04      	ldr	r7, [sp, #16]
 800dd40:	1aff      	subs	r7, r7, r3
 800dd42:	443d      	add	r5, r7
 800dd44:	016d      	lsls	r5, r5, #5
 800dd46:	fb95 f8f1 	sdiv	r8, r5, r1
 800dd4a:	fb01 5518 	mls	r5, r1, r8, r5
 800dd4e:	2d00      	cmp	r5, #0
 800dd50:	bfb8      	it	lt
 800dd52:	f108 38ff 	addlt.w	r8, r8, #4294967295
 800dd56:	f108 0701 	add.w	r7, r8, #1
 800dd5a:	bfb8      	it	lt
 800dd5c:	186d      	addlt	r5, r5, r1
 800dd5e:	1a64      	subs	r4, r4, r1
 800dd60:	9703      	str	r7, [sp, #12]
 800dd62:	f04f 0a00 	mov.w	sl, #0
 800dd66:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800dd6a:	1964      	adds	r4, r4, r5
 800dd6c:	bf58      	it	pl
 800dd6e:	9f03      	ldrpl	r7, [sp, #12]
 800dd70:	f8bc b004 	ldrh.w	fp, [ip, #4]
 800dd74:	bf48      	it	mi
 800dd76:	4647      	movmi	r7, r8
 800dd78:	44bb      	add	fp, r7
 800dd7a:	f8ac b004 	strh.w	fp, [ip, #4]
 800dd7e:	f8bc b006 	ldrh.w	fp, [ip, #6]
 800dd82:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 800dd86:	f8ac b006 	strh.w	fp, [ip, #6]
 800dd8a:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800dd8e:	443b      	add	r3, r7
 800dd90:	f8bc b006 	ldrh.w	fp, [ip, #6]
 800dd94:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 800dd98:	bf58      	it	pl
 800dd9a:	1a64      	subpl	r4, r4, r1
 800dd9c:	ea5b 0707 	orrs.w	r7, fp, r7
 800dda0:	444e      	add	r6, r9
 800dda2:	d011      	beq.n	800ddc8 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 800dda4:	f9bc b002 	ldrsh.w	fp, [ip, #2]
 800dda8:	f1bb 0f00 	cmp.w	fp, #0
 800ddac:	db0c      	blt.n	800ddc8 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 800ddae:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
 800ddb0:	45bb      	cmp	fp, r7
 800ddb2:	da09      	bge.n	800ddc8 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 800ddb4:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 800ddb8:	45bb      	cmp	fp, r7
 800ddba:	bf3c      	itt	cc
 800ddbc:	f10c 0708 	addcc.w	r7, ip, #8
 800ddc0:	6107      	strcc	r7, [r0, #16]
 800ddc2:	f10b 0701 	add.w	r7, fp, #1
 800ddc6:	6087      	str	r7, [r0, #8]
 800ddc8:	6907      	ldr	r7, [r0, #16]
 800ddca:	45b6      	cmp	lr, r6
 800ddcc:	803e      	strh	r6, [r7, #0]
 800ddce:	807a      	strh	r2, [r7, #2]
 800ddd0:	f8a7 a004 	strh.w	sl, [r7, #4]
 800ddd4:	f8a7 a006 	strh.w	sl, [r7, #6]
 800ddd8:	d1c5      	bne.n	800dd66 <_ZN8touchgfx7Outline10renderLineEiiii+0x182>
 800ddda:	9a04      	ldr	r2, [sp, #16]
 800dddc:	1ad3      	subs	r3, r2, r3
 800ddde:	6902      	ldr	r2, [r0, #16]
 800dde0:	8891      	ldrh	r1, [r2, #4]
 800dde2:	88d6      	ldrh	r6, [r2, #6]
 800dde4:	4419      	add	r1, r3
 800dde6:	8091      	strh	r1, [r2, #4]
 800dde8:	9902      	ldr	r1, [sp, #8]
 800ddea:	f101 0c20 	add.w	ip, r1, #32
 800ddee:	9901      	ldr	r1, [sp, #4]
 800ddf0:	ebac 0c01 	sub.w	ip, ip, r1
 800ddf4:	fb03 630c 	mla	r3, r3, ip, r6
 800ddf8:	80d3      	strh	r3, [r2, #6]
 800ddfa:	e74c      	b.n	800dc96 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 800ddfc:	9d05      	ldr	r5, [sp, #20]
 800ddfe:	1aa2      	subs	r2, r4, r2
 800de00:	eba5 0501 	sub.w	r5, r5, r1
 800de04:	9508      	str	r5, [sp, #32]
 800de06:	9202      	str	r2, [sp, #8]
 800de08:	f140 8128 	bpl.w	800e05c <_ZN8touchgfx7Outline10renderLineEiiii+0x478>
 800de0c:	9a03      	ldr	r2, [sp, #12]
 800de0e:	2a00      	cmp	r2, #0
 800de10:	f6ff af41 	blt.w	800dc96 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 800de14:	9a02      	ldr	r2, [sp, #8]
 800de16:	4252      	negs	r2, r2
 800de18:	9202      	str	r2, [sp, #8]
 800de1a:	9a06      	ldr	r2, [sp, #24]
 800de1c:	ea42 72e2 	orr.w	r2, r2, r2, asr #31
 800de20:	f04f 34ff 	mov.w	r4, #4294967295
 800de24:	9206      	str	r2, [sp, #24]
 800de26:	462a      	mov	r2, r5
 800de28:	940b      	str	r4, [sp, #44]	@ 0x2c
 800de2a:	435a      	muls	r2, r3
 800de2c:	2400      	movs	r4, #0
 800de2e:	9d02      	ldr	r5, [sp, #8]
 800de30:	9401      	str	r4, [sp, #4]
 800de32:	9c02      	ldr	r4, [sp, #8]
 800de34:	fb92 f4f4 	sdiv	r4, r2, r4
 800de38:	fb05 2214 	mls	r2, r5, r4, r2
 800de3c:	2a00      	cmp	r2, #0
 800de3e:	9207      	str	r2, [sp, #28]
 800de40:	bfbc      	itt	lt
 800de42:	1952      	addlt	r2, r2, r5
 800de44:	9207      	strlt	r2, [sp, #28]
 800de46:	9a01      	ldr	r2, [sp, #4]
 800de48:	6905      	ldr	r5, [r0, #16]
 800de4a:	bfb8      	it	lt
 800de4c:	f104 34ff 	addlt.w	r4, r4, #4294967295
 800de50:	eb04 0901 	add.w	r9, r4, r1
 800de54:	429a      	cmp	r2, r3
 800de56:	ea4f 1669 	mov.w	r6, r9, asr #5
 800de5a:	f040 8112 	bne.w	800e082 <_ZN8touchgfx7Outline10renderLineEiiii+0x49e>
 800de5e:	f9b5 3000 	ldrsh.w	r3, [r5]
 800de62:	429e      	cmp	r6, r3
 800de64:	d104      	bne.n	800de70 <_ZN8touchgfx7Outline10renderLineEiiii+0x28c>
 800de66:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 800de6a:	9a03      	ldr	r2, [sp, #12]
 800de6c:	429a      	cmp	r2, r3
 800de6e:	d01b      	beq.n	800dea8 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 800de70:	88ea      	ldrh	r2, [r5, #6]
 800de72:	88ab      	ldrh	r3, [r5, #4]
 800de74:	4313      	orrs	r3, r2
 800de76:	d010      	beq.n	800de9a <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 800de78:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 800de7c:	2a00      	cmp	r2, #0
 800de7e:	db0c      	blt.n	800de9a <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 800de80:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 800de82:	429a      	cmp	r2, r3
 800de84:	da09      	bge.n	800de9a <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 800de86:	e9d0 3201 	ldrd	r3, r2, [r0, #4]
 800de8a:	429a      	cmp	r2, r3
 800de8c:	bf38      	it	cc
 800de8e:	3508      	addcc	r5, #8
 800de90:	f102 0201 	add.w	r2, r2, #1
 800de94:	bf38      	it	cc
 800de96:	6105      	strcc	r5, [r0, #16]
 800de98:	6082      	str	r2, [r0, #8]
 800de9a:	6903      	ldr	r3, [r0, #16]
 800de9c:	9a03      	ldr	r2, [sp, #12]
 800de9e:	805a      	strh	r2, [r3, #2]
 800dea0:	2200      	movs	r2, #0
 800dea2:	801e      	strh	r6, [r3, #0]
 800dea4:	809a      	strh	r2, [r3, #4]
 800dea6:	80da      	strh	r2, [r3, #6]
 800dea8:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 800deaa:	9a03      	ldr	r2, [sp, #12]
 800deac:	6901      	ldr	r1, [r0, #16]
 800deae:	441a      	add	r2, r3
 800deb0:	f9b1 3000 	ldrsh.w	r3, [r1]
 800deb4:	42b3      	cmp	r3, r6
 800deb6:	d103      	bne.n	800dec0 <_ZN8touchgfx7Outline10renderLineEiiii+0x2dc>
 800deb8:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 800debc:	429a      	cmp	r2, r3
 800debe:	d01a      	beq.n	800def6 <_ZN8touchgfx7Outline10renderLineEiiii+0x312>
 800dec0:	88cc      	ldrh	r4, [r1, #6]
 800dec2:	888b      	ldrh	r3, [r1, #4]
 800dec4:	4323      	orrs	r3, r4
 800dec6:	d010      	beq.n	800deea <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 800dec8:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
 800decc:	2c00      	cmp	r4, #0
 800dece:	db0c      	blt.n	800deea <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 800ded0:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 800ded2:	429c      	cmp	r4, r3
 800ded4:	da09      	bge.n	800deea <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 800ded6:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 800deda:	429c      	cmp	r4, r3
 800dedc:	bf38      	it	cc
 800dede:	3108      	addcc	r1, #8
 800dee0:	f104 0401 	add.w	r4, r4, #1
 800dee4:	bf38      	it	cc
 800dee6:	6101      	strcc	r1, [r0, #16]
 800dee8:	6084      	str	r4, [r0, #8]
 800deea:	6903      	ldr	r3, [r0, #16]
 800deec:	2100      	movs	r1, #0
 800deee:	801e      	strh	r6, [r3, #0]
 800def0:	805a      	strh	r2, [r3, #2]
 800def2:	8099      	strh	r1, [r3, #4]
 800def4:	80d9      	strh	r1, [r3, #6]
 800def6:	9b06      	ldr	r3, [sp, #24]
 800def8:	4293      	cmp	r3, r2
 800defa:	f000 8082 	beq.w	800e002 <_ZN8touchgfx7Outline10renderLineEiiii+0x41e>
 800defe:	9b08      	ldr	r3, [sp, #32]
 800df00:	9c02      	ldr	r4, [sp, #8]
 800df02:	9902      	ldr	r1, [sp, #8]
 800df04:	015b      	lsls	r3, r3, #5
 800df06:	fb93 f1f1 	sdiv	r1, r3, r1
 800df0a:	fb04 3311 	mls	r3, r4, r1, r3
 800df0e:	2b00      	cmp	r3, #0
 800df10:	9103      	str	r1, [sp, #12]
 800df12:	9308      	str	r3, [sp, #32]
 800df14:	da04      	bge.n	800df20 <_ZN8touchgfx7Outline10renderLineEiiii+0x33c>
 800df16:	1e4b      	subs	r3, r1, #1
 800df18:	9303      	str	r3, [sp, #12]
 800df1a:	9b08      	ldr	r3, [sp, #32]
 800df1c:	4423      	add	r3, r4
 800df1e:	9308      	str	r3, [sp, #32]
 800df20:	9b07      	ldr	r3, [sp, #28]
 800df22:	9902      	ldr	r1, [sp, #8]
 800df24:	1a5b      	subs	r3, r3, r1
 800df26:	9307      	str	r3, [sp, #28]
 800df28:	9b01      	ldr	r3, [sp, #4]
 800df2a:	f1c3 0320 	rsb	r3, r3, #32
 800df2e:	930e      	str	r3, [sp, #56]	@ 0x38
 800df30:	990e      	ldr	r1, [sp, #56]	@ 0x38
 800df32:	9b01      	ldr	r3, [sp, #4]
 800df34:	1a5b      	subs	r3, r3, r1
 800df36:	464f      	mov	r7, r9
 800df38:	930a      	str	r3, [sp, #40]	@ 0x28
 800df3a:	2600      	movs	r6, #0
 800df3c:	e9dd 3107 	ldrd	r3, r1, [sp, #28]
 800df40:	185b      	adds	r3, r3, r1
 800df42:	bf58      	it	pl
 800df44:	9902      	ldrpl	r1, [sp, #8]
 800df46:	9307      	str	r3, [sp, #28]
 800df48:	bf5d      	ittte	pl
 800df4a:	1a5b      	subpl	r3, r3, r1
 800df4c:	9307      	strpl	r3, [sp, #28]
 800df4e:	9b03      	ldrpl	r3, [sp, #12]
 800df50:	9903      	ldrmi	r1, [sp, #12]
 800df52:	bf58      	it	pl
 800df54:	1c59      	addpl	r1, r3, #1
 800df56:	4489      	add	r9, r1
 800df58:	2a00      	cmp	r2, #0
 800df5a:	ea4f 1a69 	mov.w	sl, r9, asr #5
 800df5e:	db2e      	blt.n	800dfbe <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 800df60:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 800df62:	4293      	cmp	r3, r2
 800df64:	dd2b      	ble.n	800dfbe <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 800df66:	9c01      	ldr	r4, [sp, #4]
 800df68:	6905      	ldr	r5, [r0, #16]
 800df6a:	46a0      	mov	r8, r4
 800df6c:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 800df6e:	f9b5 c004 	ldrsh.w	ip, [r5, #4]
 800df72:	f9b5 e006 	ldrsh.w	lr, [r5, #6]
 800df76:	45a0      	cmp	r8, r4
 800df78:	f040 814f 	bne.w	800e21a <_ZN8touchgfx7Outline10renderLineEiiii+0x636>
 800df7c:	f9b5 1000 	ldrsh.w	r1, [r5]
 800df80:	4551      	cmp	r1, sl
 800df82:	d103      	bne.n	800df8c <_ZN8touchgfx7Outline10renderLineEiiii+0x3a8>
 800df84:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
 800df88:	4291      	cmp	r1, r2
 800df8a:	d018      	beq.n	800dfbe <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 800df8c:	ea5c 010e 	orrs.w	r1, ip, lr
 800df90:	d00f      	beq.n	800dfb2 <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 800df92:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
 800df96:	2900      	cmp	r1, #0
 800df98:	db0b      	blt.n	800dfb2 <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 800df9a:	428b      	cmp	r3, r1
 800df9c:	dd09      	ble.n	800dfb2 <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 800df9e:	e9d0 3101 	ldrd	r3, r1, [r0, #4]
 800dfa2:	4299      	cmp	r1, r3
 800dfa4:	bf38      	it	cc
 800dfa6:	3508      	addcc	r5, #8
 800dfa8:	f101 0101 	add.w	r1, r1, #1
 800dfac:	bf38      	it	cc
 800dfae:	6105      	strcc	r5, [r0, #16]
 800dfb0:	6081      	str	r1, [r0, #8]
 800dfb2:	6903      	ldr	r3, [r0, #16]
 800dfb4:	f8a3 a000 	strh.w	sl, [r3]
 800dfb8:	805a      	strh	r2, [r3, #2]
 800dfba:	809e      	strh	r6, [r3, #4]
 800dfbc:	80de      	strh	r6, [r3, #6]
 800dfbe:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 800dfc0:	6901      	ldr	r1, [r0, #16]
 800dfc2:	441a      	add	r2, r3
 800dfc4:	88cc      	ldrh	r4, [r1, #6]
 800dfc6:	888b      	ldrh	r3, [r1, #4]
 800dfc8:	4323      	orrs	r3, r4
 800dfca:	d010      	beq.n	800dfee <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 800dfcc:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
 800dfd0:	2c00      	cmp	r4, #0
 800dfd2:	db0c      	blt.n	800dfee <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 800dfd4:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 800dfd6:	429c      	cmp	r4, r3
 800dfd8:	da09      	bge.n	800dfee <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 800dfda:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 800dfde:	429c      	cmp	r4, r3
 800dfe0:	bf38      	it	cc
 800dfe2:	3108      	addcc	r1, #8
 800dfe4:	f104 0401 	add.w	r4, r4, #1
 800dfe8:	bf38      	it	cc
 800dfea:	6101      	strcc	r1, [r0, #16]
 800dfec:	6084      	str	r4, [r0, #8]
 800dfee:	6903      	ldr	r3, [r0, #16]
 800dff0:	f8a3 a000 	strh.w	sl, [r3]
 800dff4:	805a      	strh	r2, [r3, #2]
 800dff6:	809e      	strh	r6, [r3, #4]
 800dff8:	80de      	strh	r6, [r3, #6]
 800dffa:	9b06      	ldr	r3, [sp, #24]
 800dffc:	4293      	cmp	r3, r2
 800dffe:	464f      	mov	r7, r9
 800e000:	d19c      	bne.n	800df3c <_ZN8touchgfx7Outline10renderLineEiiii+0x358>
 800e002:	9b01      	ldr	r3, [sp, #4]
 800e004:	6907      	ldr	r7, [r0, #16]
 800e006:	f1c3 0620 	rsb	r6, r3, #32
 800e00a:	9b05      	ldr	r3, [sp, #20]
 800e00c:	ea4f 1e63 	mov.w	lr, r3, asr #5
 800e010:	9b04      	ldr	r3, [sp, #16]
 800e012:	429e      	cmp	r6, r3
 800e014:	f040 81cc 	bne.w	800e3b0 <_ZN8touchgfx7Outline10renderLineEiiii+0x7cc>
 800e018:	f9b7 3000 	ldrsh.w	r3, [r7]
 800e01c:	459e      	cmp	lr, r3
 800e01e:	d104      	bne.n	800e02a <_ZN8touchgfx7Outline10renderLineEiiii+0x446>
 800e020:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 800e024:	429a      	cmp	r2, r3
 800e026:	f43f ae36 	beq.w	800dc96 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 800e02a:	88f9      	ldrh	r1, [r7, #6]
 800e02c:	88bb      	ldrh	r3, [r7, #4]
 800e02e:	430b      	orrs	r3, r1
 800e030:	d010      	beq.n	800e054 <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 800e032:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 800e036:	2b00      	cmp	r3, #0
 800e038:	db0c      	blt.n	800e054 <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 800e03a:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
 800e03c:	428b      	cmp	r3, r1
 800e03e:	da09      	bge.n	800e054 <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 800e040:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
 800e044:	428b      	cmp	r3, r1
 800e046:	bf38      	it	cc
 800e048:	3708      	addcc	r7, #8
 800e04a:	f103 0301 	add.w	r3, r3, #1
 800e04e:	bf38      	it	cc
 800e050:	6107      	strcc	r7, [r0, #16]
 800e052:	6083      	str	r3, [r0, #8]
 800e054:	6903      	ldr	r3, [r0, #16]
 800e056:	f8a3 e000 	strh.w	lr, [r3]
 800e05a:	e5ff      	b.n	800dc5c <_ZN8touchgfx7Outline10renderLineEiiii+0x78>
 800e05c:	6ac2      	ldr	r2, [r0, #44]	@ 0x2c
 800e05e:	9c03      	ldr	r4, [sp, #12]
 800e060:	42a2      	cmp	r2, r4
 800e062:	f6ff ae18 	blt.w	800dc96 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 800e066:	9c06      	ldr	r4, [sp, #24]
 800e068:	42a2      	cmp	r2, r4
 800e06a:	bfb8      	it	lt
 800e06c:	3201      	addlt	r2, #1
 800e06e:	9c08      	ldr	r4, [sp, #32]
 800e070:	bfb8      	it	lt
 800e072:	9206      	strlt	r2, [sp, #24]
 800e074:	f1c3 0220 	rsb	r2, r3, #32
 800e078:	4362      	muls	r2, r4
 800e07a:	2401      	movs	r4, #1
 800e07c:	940b      	str	r4, [sp, #44]	@ 0x2c
 800e07e:	2420      	movs	r4, #32
 800e080:	e6d5      	b.n	800de2e <_ZN8touchgfx7Outline10renderLineEiiii+0x24a>
 800e082:	f009 021f 	and.w	r2, r9, #31
 800e086:	ea4f 1861 	mov.w	r8, r1, asr #5
 800e08a:	920c      	str	r2, [sp, #48]	@ 0x30
 800e08c:	9a01      	ldr	r2, [sp, #4]
 800e08e:	f8b5 e004 	ldrh.w	lr, [r5, #4]
 800e092:	f8b5 a006 	ldrh.w	sl, [r5, #6]
 800e096:	45b0      	cmp	r8, r6
 800e098:	f001 011f 	and.w	r1, r1, #31
 800e09c:	eba2 0203 	sub.w	r2, r2, r3
 800e0a0:	d108      	bne.n	800e0b4 <_ZN8touchgfx7Outline10renderLineEiiii+0x4d0>
 800e0a2:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 800e0a4:	4419      	add	r1, r3
 800e0a6:	4496      	add	lr, r2
 800e0a8:	fb02 a101 	mla	r1, r2, r1, sl
 800e0ac:	f8a5 e004 	strh.w	lr, [r5, #4]
 800e0b0:	80e9      	strh	r1, [r5, #6]
 800e0b2:	e6f9      	b.n	800dea8 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 800e0b4:	2c00      	cmp	r4, #0
 800e0b6:	f2c0 80a9 	blt.w	800e20c <_ZN8touchgfx7Outline10renderLineEiiii+0x628>
 800e0ba:	2701      	movs	r7, #1
 800e0bc:	f1c1 0c20 	rsb	ip, r1, #32
 800e0c0:	970a      	str	r7, [sp, #40]	@ 0x28
 800e0c2:	fb02 f20c 	mul.w	r2, r2, ip
 800e0c6:	2720      	movs	r7, #32
 800e0c8:	9709      	str	r7, [sp, #36]	@ 0x24
 800e0ca:	fb92 fcf4 	sdiv	ip, r2, r4
 800e0ce:	9f09      	ldr	r7, [sp, #36]	@ 0x24
 800e0d0:	fb04 221c 	mls	r2, r4, ip, r2
 800e0d4:	2a00      	cmp	r2, #0
 800e0d6:	bfb8      	it	lt
 800e0d8:	f10c 3cff 	addlt.w	ip, ip, #4294967295
 800e0dc:	4439      	add	r1, r7
 800e0de:	fb0c a101 	mla	r1, ip, r1, sl
 800e0e2:	80e9      	strh	r1, [r5, #6]
 800e0e4:	44e6      	add	lr, ip
 800e0e6:	990a      	ldr	r1, [sp, #40]	@ 0x28
 800e0e8:	f8a5 e004 	strh.w	lr, [r5, #4]
 800e0ec:	eb08 0501 	add.w	r5, r8, r1
 800e0f0:	6901      	ldr	r1, [r0, #16]
 800e0f2:	f8b1 8006 	ldrh.w	r8, [r1, #6]
 800e0f6:	f8b1 e004 	ldrh.w	lr, [r1, #4]
 800e0fa:	bfb8      	it	lt
 800e0fc:	1912      	addlt	r2, r2, r4
 800e0fe:	ea58 070e 	orrs.w	r7, r8, lr
 800e102:	d010      	beq.n	800e126 <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 800e104:	f9b1 e002 	ldrsh.w	lr, [r1, #2]
 800e108:	f1be 0f00 	cmp.w	lr, #0
 800e10c:	db0b      	blt.n	800e126 <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 800e10e:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
 800e110:	45be      	cmp	lr, r7
 800e112:	da08      	bge.n	800e126 <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 800e114:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
 800e118:	45be      	cmp	lr, r7
 800e11a:	bf3c      	itt	cc
 800e11c:	3108      	addcc	r1, #8
 800e11e:	6101      	strcc	r1, [r0, #16]
 800e120:	f10e 0101 	add.w	r1, lr, #1
 800e124:	6081      	str	r1, [r0, #8]
 800e126:	6901      	ldr	r1, [r0, #16]
 800e128:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 800e12c:	800d      	strh	r5, [r1, #0]
 800e12e:	f04f 0e00 	mov.w	lr, #0
 800e132:	42ae      	cmp	r6, r5
 800e134:	f8a1 8002 	strh.w	r8, [r1, #2]
 800e138:	f8a1 e004 	strh.w	lr, [r1, #4]
 800e13c:	f8a1 e006 	strh.w	lr, [r1, #6]
 800e140:	4463      	add	r3, ip
 800e142:	d054      	beq.n	800e1ee <_ZN8touchgfx7Outline10renderLineEiiii+0x60a>
 800e144:	9901      	ldr	r1, [sp, #4]
 800e146:	1ac9      	subs	r1, r1, r3
 800e148:	4461      	add	r1, ip
 800e14a:	0149      	lsls	r1, r1, #5
 800e14c:	fb91 fef4 	sdiv	lr, r1, r4
 800e150:	fb04 111e 	mls	r1, r4, lr, r1
 800e154:	2900      	cmp	r1, #0
 800e156:	bfb8      	it	lt
 800e158:	f10e 3eff 	addlt.w	lr, lr, #4294967295
 800e15c:	f10e 0701 	add.w	r7, lr, #1
 800e160:	bfb8      	it	lt
 800e162:	1909      	addlt	r1, r1, r4
 800e164:	1b12      	subs	r2, r2, r4
 800e166:	970d      	str	r7, [sp, #52]	@ 0x34
 800e168:	f8d0 a010 	ldr.w	sl, [r0, #16]
 800e16c:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
 800e16e:	f8ba b004 	ldrh.w	fp, [sl, #4]
 800e172:	1852      	adds	r2, r2, r1
 800e174:	bf54      	ite	pl
 800e176:	f8dd c034 	ldrpl.w	ip, [sp, #52]	@ 0x34
 800e17a:	46f4      	movmi	ip, lr
 800e17c:	44e3      	add	fp, ip
 800e17e:	f8aa b004 	strh.w	fp, [sl, #4]
 800e182:	f8ba b006 	ldrh.w	fp, [sl, #6]
 800e186:	eb0b 1b4c 	add.w	fp, fp, ip, lsl #5
 800e18a:	f8aa b006 	strh.w	fp, [sl, #6]
 800e18e:	4463      	add	r3, ip
 800e190:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800e194:	f8bc b006 	ldrh.w	fp, [ip, #6]
 800e198:	f8bc a004 	ldrh.w	sl, [ip, #4]
 800e19c:	bf58      	it	pl
 800e19e:	1b12      	subpl	r2, r2, r4
 800e1a0:	443d      	add	r5, r7
 800e1a2:	ea5b 070a 	orrs.w	r7, fp, sl
 800e1a6:	d014      	beq.n	800e1d2 <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 800e1a8:	f9bc a002 	ldrsh.w	sl, [ip, #2]
 800e1ac:	f1ba 0f00 	cmp.w	sl, #0
 800e1b0:	db0f      	blt.n	800e1d2 <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 800e1b2:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
 800e1b4:	45ba      	cmp	sl, r7
 800e1b6:	da0c      	bge.n	800e1d2 <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 800e1b8:	e9d0 7a01 	ldrd	r7, sl, [r0, #4]
 800e1bc:	45ba      	cmp	sl, r7
 800e1be:	bf38      	it	cc
 800e1c0:	f10c 0c08 	addcc.w	ip, ip, #8
 800e1c4:	f10a 0a01 	add.w	sl, sl, #1
 800e1c8:	bf38      	it	cc
 800e1ca:	f8c0 c010 	strcc.w	ip, [r0, #16]
 800e1ce:	f8c0 a008 	str.w	sl, [r0, #8]
 800e1d2:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800e1d6:	f04f 0700 	mov.w	r7, #0
 800e1da:	42ae      	cmp	r6, r5
 800e1dc:	f8ac 5000 	strh.w	r5, [ip]
 800e1e0:	f8ac 8002 	strh.w	r8, [ip, #2]
 800e1e4:	f8ac 7004 	strh.w	r7, [ip, #4]
 800e1e8:	f8ac 7006 	strh.w	r7, [ip, #6]
 800e1ec:	d1bc      	bne.n	800e168 <_ZN8touchgfx7Outline10renderLineEiiii+0x584>
 800e1ee:	6904      	ldr	r4, [r0, #16]
 800e1f0:	9a01      	ldr	r2, [sp, #4]
 800e1f2:	990c      	ldr	r1, [sp, #48]	@ 0x30
 800e1f4:	1ad3      	subs	r3, r2, r3
 800e1f6:	88a2      	ldrh	r2, [r4, #4]
 800e1f8:	441a      	add	r2, r3
 800e1fa:	80a2      	strh	r2, [r4, #4]
 800e1fc:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 800e1fe:	3120      	adds	r1, #32
 800e200:	1a89      	subs	r1, r1, r2
 800e202:	88e2      	ldrh	r2, [r4, #6]
 800e204:	fb03 2301 	mla	r3, r3, r1, r2
 800e208:	80e3      	strh	r3, [r4, #6]
 800e20a:	e64d      	b.n	800dea8 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 800e20c:	f04f 37ff 	mov.w	r7, #4294967295
 800e210:	970a      	str	r7, [sp, #40]	@ 0x28
 800e212:	434a      	muls	r2, r1
 800e214:	4264      	negs	r4, r4
 800e216:	2700      	movs	r7, #0
 800e218:	e756      	b.n	800e0c8 <_ZN8touchgfx7Outline10renderLineEiiii+0x4e4>
 800e21a:	ea4f 1867 	mov.w	r8, r7, asr #5
 800e21e:	f009 031f 	and.w	r3, r9, #31
 800e222:	45d0      	cmp	r8, sl
 800e224:	f007 071f 	and.w	r7, r7, #31
 800e228:	930f      	str	r3, [sp, #60]	@ 0x3c
 800e22a:	fa1f fc8c 	uxth.w	ip, ip
 800e22e:	fa1f fe8e 	uxth.w	lr, lr
 800e232:	d10a      	bne.n	800e24a <_ZN8touchgfx7Outline10renderLineEiiii+0x666>
 800e234:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 800e236:	449c      	add	ip, r3
 800e238:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800e23a:	f8a5 c004 	strh.w	ip, [r5, #4]
 800e23e:	441f      	add	r7, r3
 800e240:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 800e242:	fb03 e707 	mla	r7, r3, r7, lr
 800e246:	80ef      	strh	r7, [r5, #6]
 800e248:	e6b9      	b.n	800dfbe <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 800e24a:	2900      	cmp	r1, #0
 800e24c:	f2c0 80a8 	blt.w	800e3a0 <_ZN8touchgfx7Outline10renderLineEiiii+0x7bc>
 800e250:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 800e252:	f1c7 0320 	rsb	r3, r7, #32
 800e256:	4363      	muls	r3, r4
 800e258:	2401      	movs	r4, #1
 800e25a:	940d      	str	r4, [sp, #52]	@ 0x34
 800e25c:	2420      	movs	r4, #32
 800e25e:	940c      	str	r4, [sp, #48]	@ 0x30
 800e260:	fb93 f4f1 	sdiv	r4, r3, r1
 800e264:	fb01 3b14 	mls	fp, r1, r4, r3
 800e268:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 800e26a:	f1bb 0f00 	cmp.w	fp, #0
 800e26e:	bfb8      	it	lt
 800e270:	f104 34ff 	addlt.w	r4, r4, #4294967295
 800e274:	441f      	add	r7, r3
 800e276:	fb04 e707 	mla	r7, r4, r7, lr
 800e27a:	44a4      	add	ip, r4
 800e27c:	f8a5 c004 	strh.w	ip, [r5, #4]
 800e280:	80ef      	strh	r7, [r5, #6]
 800e282:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800e286:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 800e288:	f8bc e006 	ldrh.w	lr, [ip, #6]
 800e28c:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 800e290:	bfb8      	it	lt
 800e292:	448b      	addlt	fp, r1
 800e294:	eb08 0503 	add.w	r5, r8, r3
 800e298:	ea5e 0307 	orrs.w	r3, lr, r7
 800e29c:	d011      	beq.n	800e2c2 <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 800e29e:	f9bc e002 	ldrsh.w	lr, [ip, #2]
 800e2a2:	f1be 0f00 	cmp.w	lr, #0
 800e2a6:	db0c      	blt.n	800e2c2 <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 800e2a8:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
 800e2aa:	45be      	cmp	lr, r7
 800e2ac:	da09      	bge.n	800e2c2 <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 800e2ae:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
 800e2b2:	45be      	cmp	lr, r7
 800e2b4:	bf3c      	itt	cc
 800e2b6:	f10c 0708 	addcc.w	r7, ip, #8
 800e2ba:	6107      	strcc	r7, [r0, #16]
 800e2bc:	f10e 0701 	add.w	r7, lr, #1
 800e2c0:	6087      	str	r7, [r0, #8]
 800e2c2:	6907      	ldr	r7, [r0, #16]
 800e2c4:	b213      	sxth	r3, r2
 800e2c6:	9310      	str	r3, [sp, #64]	@ 0x40
 800e2c8:	807b      	strh	r3, [r7, #2]
 800e2ca:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800e2cc:	803d      	strh	r5, [r7, #0]
 800e2ce:	4555      	cmp	r5, sl
 800e2d0:	80be      	strh	r6, [r7, #4]
 800e2d2:	80fe      	strh	r6, [r7, #6]
 800e2d4:	eb04 0c03 	add.w	ip, r4, r3
 800e2d8:	d051      	beq.n	800e37e <_ZN8touchgfx7Outline10renderLineEiiii+0x79a>
 800e2da:	9b01      	ldr	r3, [sp, #4]
 800e2dc:	eba3 070c 	sub.w	r7, r3, ip
 800e2e0:	443c      	add	r4, r7
 800e2e2:	0164      	lsls	r4, r4, #5
 800e2e4:	fb94 f8f1 	sdiv	r8, r4, r1
 800e2e8:	fb01 4418 	mls	r4, r1, r8, r4
 800e2ec:	2c00      	cmp	r4, #0
 800e2ee:	bfb8      	it	lt
 800e2f0:	f108 38ff 	addlt.w	r8, r8, #4294967295
 800e2f4:	ebab 0301 	sub.w	r3, fp, r1
 800e2f8:	f108 0701 	add.w	r7, r8, #1
 800e2fc:	bfb8      	it	lt
 800e2fe:	1864      	addlt	r4, r4, r1
 800e300:	9309      	str	r3, [sp, #36]	@ 0x24
 800e302:	9711      	str	r7, [sp, #68]	@ 0x44
 800e304:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800e306:	f8d0 e010 	ldr.w	lr, [r0, #16]
 800e30a:	191b      	adds	r3, r3, r4
 800e30c:	bf58      	it	pl
 800e30e:	9f11      	ldrpl	r7, [sp, #68]	@ 0x44
 800e310:	f8be b004 	ldrh.w	fp, [lr, #4]
 800e314:	9309      	str	r3, [sp, #36]	@ 0x24
 800e316:	bf48      	it	mi
 800e318:	4647      	movmi	r7, r8
 800e31a:	44bb      	add	fp, r7
 800e31c:	f8ae b004 	strh.w	fp, [lr, #4]
 800e320:	f8be b006 	ldrh.w	fp, [lr, #6]
 800e324:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 800e328:	f8ae b006 	strh.w	fp, [lr, #6]
 800e32c:	f8d0 e010 	ldr.w	lr, [r0, #16]
 800e330:	44bc      	add	ip, r7
 800e332:	9f0d      	ldr	r7, [sp, #52]	@ 0x34
 800e334:	f8be b006 	ldrh.w	fp, [lr, #6]
 800e338:	443d      	add	r5, r7
 800e33a:	f8be 7004 	ldrh.w	r7, [lr, #4]
 800e33e:	bf5c      	itt	pl
 800e340:	1a5b      	subpl	r3, r3, r1
 800e342:	9309      	strpl	r3, [sp, #36]	@ 0x24
 800e344:	ea5b 0307 	orrs.w	r3, fp, r7
 800e348:	d011      	beq.n	800e36e <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 800e34a:	f9be b002 	ldrsh.w	fp, [lr, #2]
 800e34e:	f1bb 0f00 	cmp.w	fp, #0
 800e352:	db0c      	blt.n	800e36e <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 800e354:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
 800e356:	45bb      	cmp	fp, r7
 800e358:	da09      	bge.n	800e36e <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 800e35a:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 800e35e:	45bb      	cmp	fp, r7
 800e360:	bf3c      	itt	cc
 800e362:	f10e 0708 	addcc.w	r7, lr, #8
 800e366:	6107      	strcc	r7, [r0, #16]
 800e368:	f10b 0701 	add.w	r7, fp, #1
 800e36c:	6087      	str	r7, [r0, #8]
 800e36e:	6907      	ldr	r7, [r0, #16]
 800e370:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 800e372:	803d      	strh	r5, [r7, #0]
 800e374:	4555      	cmp	r5, sl
 800e376:	807b      	strh	r3, [r7, #2]
 800e378:	80be      	strh	r6, [r7, #4]
 800e37a:	80fe      	strh	r6, [r7, #6]
 800e37c:	d1c2      	bne.n	800e304 <_ZN8touchgfx7Outline10renderLineEiiii+0x720>
 800e37e:	9b01      	ldr	r3, [sp, #4]
 800e380:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 800e382:	eba3 0c0c 	sub.w	ip, r3, ip
 800e386:	6903      	ldr	r3, [r0, #16]
 800e388:	8899      	ldrh	r1, [r3, #4]
 800e38a:	4461      	add	r1, ip
 800e38c:	8099      	strh	r1, [r3, #4]
 800e38e:	990c      	ldr	r1, [sp, #48]	@ 0x30
 800e390:	3720      	adds	r7, #32
 800e392:	1a7f      	subs	r7, r7, r1
 800e394:	88d9      	ldrh	r1, [r3, #6]
 800e396:	fb0c 1c07 	mla	ip, ip, r7, r1
 800e39a:	f8a3 c006 	strh.w	ip, [r3, #6]
 800e39e:	e60e      	b.n	800dfbe <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 800e3a0:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 800e3a2:	f04f 34ff 	mov.w	r4, #4294967295
 800e3a6:	940d      	str	r4, [sp, #52]	@ 0x34
 800e3a8:	437b      	muls	r3, r7
 800e3aa:	4249      	negs	r1, r1
 800e3ac:	2400      	movs	r4, #0
 800e3ae:	e756      	b.n	800e25e <_ZN8touchgfx7Outline10renderLineEiiii+0x67a>
 800e3b0:	9905      	ldr	r1, [sp, #20]
 800e3b2:	f8b7 8004 	ldrh.w	r8, [r7, #4]
 800e3b6:	f8b7 a006 	ldrh.w	sl, [r7, #6]
 800e3ba:	f001 011f 	and.w	r1, r1, #31
 800e3be:	ea4f 1b69 	mov.w	fp, r9, asr #5
 800e3c2:	9102      	str	r1, [sp, #8]
 800e3c4:	9904      	ldr	r1, [sp, #16]
 800e3c6:	45f3      	cmp	fp, lr
 800e3c8:	f009 0c1f 	and.w	ip, r9, #31
 800e3cc:	eba1 0406 	sub.w	r4, r1, r6
 800e3d0:	d108      	bne.n	800e3e4 <_ZN8touchgfx7Outline10renderLineEiiii+0x800>
 800e3d2:	9b02      	ldr	r3, [sp, #8]
 800e3d4:	449c      	add	ip, r3
 800e3d6:	44a0      	add	r8, r4
 800e3d8:	fb04 a40c 	mla	r4, r4, ip, sl
 800e3dc:	f8a7 8004 	strh.w	r8, [r7, #4]
 800e3e0:	80fc      	strh	r4, [r7, #6]
 800e3e2:	e458      	b.n	800dc96 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 800e3e4:	9905      	ldr	r1, [sp, #20]
 800e3e6:	ebb1 0109 	subs.w	r1, r1, r9
 800e3ea:	bf5b      	ittet	pl
 800e3ec:	f1cc 0520 	rsbpl	r5, ip, #32
 800e3f0:	436c      	mulpl	r4, r5
 800e3f2:	2500      	movmi	r5, #0
 800e3f4:	2520      	movpl	r5, #32
 800e3f6:	bf44      	itt	mi
 800e3f8:	fb04 f40c 	mulmi.w	r4, r4, ip
 800e3fc:	4249      	negmi	r1, r1
 800e3fe:	9501      	str	r5, [sp, #4]
 800e400:	9b01      	ldr	r3, [sp, #4]
 800e402:	fb94 f5f1 	sdiv	r5, r4, r1
 800e406:	fb01 4415 	mls	r4, r1, r5, r4
 800e40a:	bf54      	ite	pl
 800e40c:	f04f 0901 	movpl.w	r9, #1
 800e410:	f04f 39ff 	movmi.w	r9, #4294967295
 800e414:	2c00      	cmp	r4, #0
 800e416:	bfb8      	it	lt
 800e418:	f105 35ff 	addlt.w	r5, r5, #4294967295
 800e41c:	449c      	add	ip, r3
 800e41e:	44a8      	add	r8, r5
 800e420:	fb05 ac0c 	mla	ip, r5, ip, sl
 800e424:	f8a7 8004 	strh.w	r8, [r7, #4]
 800e428:	f8a7 c006 	strh.w	ip, [r7, #6]
 800e42c:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800e430:	f8bc 8006 	ldrh.w	r8, [ip, #6]
 800e434:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 800e438:	bfb8      	it	lt
 800e43a:	1864      	addlt	r4, r4, r1
 800e43c:	ea58 0707 	orrs.w	r7, r8, r7
 800e440:	eb0b 0309 	add.w	r3, fp, r9
 800e444:	d011      	beq.n	800e46a <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 800e446:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
 800e44a:	f1b8 0f00 	cmp.w	r8, #0
 800e44e:	db0c      	blt.n	800e46a <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 800e450:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
 800e452:	45b8      	cmp	r8, r7
 800e454:	da09      	bge.n	800e46a <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 800e456:	e9d0 7801 	ldrd	r7, r8, [r0, #4]
 800e45a:	45b8      	cmp	r8, r7
 800e45c:	bf3c      	itt	cc
 800e45e:	f10c 0708 	addcc.w	r7, ip, #8
 800e462:	6107      	strcc	r7, [r0, #16]
 800e464:	f108 0701 	add.w	r7, r8, #1
 800e468:	6087      	str	r7, [r0, #8]
 800e46a:	6907      	ldr	r7, [r0, #16]
 800e46c:	f04f 0c00 	mov.w	ip, #0
 800e470:	b212      	sxth	r2, r2
 800e472:	459e      	cmp	lr, r3
 800e474:	803b      	strh	r3, [r7, #0]
 800e476:	807a      	strh	r2, [r7, #2]
 800e478:	f8a7 c004 	strh.w	ip, [r7, #4]
 800e47c:	f8a7 c006 	strh.w	ip, [r7, #6]
 800e480:	442e      	add	r6, r5
 800e482:	d04d      	beq.n	800e520 <_ZN8touchgfx7Outline10renderLineEiiii+0x93c>
 800e484:	9f04      	ldr	r7, [sp, #16]
 800e486:	1bbf      	subs	r7, r7, r6
 800e488:	443d      	add	r5, r7
 800e48a:	016d      	lsls	r5, r5, #5
 800e48c:	fb95 f8f1 	sdiv	r8, r5, r1
 800e490:	fb01 5518 	mls	r5, r1, r8, r5
 800e494:	4565      	cmp	r5, ip
 800e496:	bfb8      	it	lt
 800e498:	f108 38ff 	addlt.w	r8, r8, #4294967295
 800e49c:	f108 0701 	add.w	r7, r8, #1
 800e4a0:	bfb8      	it	lt
 800e4a2:	186d      	addlt	r5, r5, r1
 800e4a4:	1a64      	subs	r4, r4, r1
 800e4a6:	9703      	str	r7, [sp, #12]
 800e4a8:	f04f 0a00 	mov.w	sl, #0
 800e4ac:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800e4b0:	1964      	adds	r4, r4, r5
 800e4b2:	bf58      	it	pl
 800e4b4:	9f03      	ldrpl	r7, [sp, #12]
 800e4b6:	f8bc b004 	ldrh.w	fp, [ip, #4]
 800e4ba:	bf48      	it	mi
 800e4bc:	4647      	movmi	r7, r8
 800e4be:	44bb      	add	fp, r7
 800e4c0:	f8ac b004 	strh.w	fp, [ip, #4]
 800e4c4:	f8bc b006 	ldrh.w	fp, [ip, #6]
 800e4c8:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 800e4cc:	f8ac b006 	strh.w	fp, [ip, #6]
 800e4d0:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800e4d4:	443e      	add	r6, r7
 800e4d6:	f8bc b006 	ldrh.w	fp, [ip, #6]
 800e4da:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 800e4de:	bf58      	it	pl
 800e4e0:	1a64      	subpl	r4, r4, r1
 800e4e2:	ea5b 0707 	orrs.w	r7, fp, r7
 800e4e6:	444b      	add	r3, r9
 800e4e8:	d011      	beq.n	800e50e <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 800e4ea:	f9bc b002 	ldrsh.w	fp, [ip, #2]
 800e4ee:	f1bb 0f00 	cmp.w	fp, #0
 800e4f2:	db0c      	blt.n	800e50e <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 800e4f4:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
 800e4f6:	45bb      	cmp	fp, r7
 800e4f8:	da09      	bge.n	800e50e <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 800e4fa:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 800e4fe:	45bb      	cmp	fp, r7
 800e500:	bf3c      	itt	cc
 800e502:	f10c 0708 	addcc.w	r7, ip, #8
 800e506:	6107      	strcc	r7, [r0, #16]
 800e508:	f10b 0701 	add.w	r7, fp, #1
 800e50c:	6087      	str	r7, [r0, #8]
 800e50e:	6907      	ldr	r7, [r0, #16]
 800e510:	459e      	cmp	lr, r3
 800e512:	803b      	strh	r3, [r7, #0]
 800e514:	807a      	strh	r2, [r7, #2]
 800e516:	f8a7 a004 	strh.w	sl, [r7, #4]
 800e51a:	f8a7 a006 	strh.w	sl, [r7, #6]
 800e51e:	d1c5      	bne.n	800e4ac <_ZN8touchgfx7Outline10renderLineEiiii+0x8c8>
 800e520:	9b04      	ldr	r3, [sp, #16]
 800e522:	1b9e      	subs	r6, r3, r6
 800e524:	6903      	ldr	r3, [r0, #16]
 800e526:	889a      	ldrh	r2, [r3, #4]
 800e528:	4432      	add	r2, r6
 800e52a:	809a      	strh	r2, [r3, #4]
 800e52c:	9a02      	ldr	r2, [sp, #8]
 800e52e:	f102 0c20 	add.w	ip, r2, #32
 800e532:	9a01      	ldr	r2, [sp, #4]
 800e534:	ebac 0c02 	sub.w	ip, ip, r2
 800e538:	88da      	ldrh	r2, [r3, #6]
 800e53a:	fb06 260c 	mla	r6, r6, ip, r2
 800e53e:	80de      	strh	r6, [r3, #6]
 800e540:	f7ff bba9 	b.w	800dc96 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>

0800e544 <_ZN8touchgfx7Outline6lineToEii>:
 800e544:	6a43      	ldr	r3, [r0, #36]	@ 0x24
 800e546:	079b      	lsls	r3, r3, #30
 800e548:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800e54a:	460e      	mov	r6, r1
 800e54c:	4615      	mov	r5, r2
 800e54e:	d511      	bpl.n	800e574 <_ZN8touchgfx7Outline6lineToEii+0x30>
 800e550:	e9d0 1205 	ldrd	r1, r2, [r0, #20]
 800e554:	ea86 0701 	eor.w	r7, r6, r1
 800e558:	ea85 0302 	eor.w	r3, r5, r2
 800e55c:	433b      	orrs	r3, r7
 800e55e:	d009      	beq.n	800e574 <_ZN8touchgfx7Outline6lineToEii+0x30>
 800e560:	4633      	mov	r3, r6
 800e562:	9500      	str	r5, [sp, #0]
 800e564:	f7ff fb3e 	bl	800dbe4 <_ZN8touchgfx7Outline10renderLineEiiii>
 800e568:	6a43      	ldr	r3, [r0, #36]	@ 0x24
 800e56a:	e9c0 6505 	strd	r6, r5, [r0, #20]
 800e56e:	f043 0301 	orr.w	r3, r3, #1
 800e572:	6243      	str	r3, [r0, #36]	@ 0x24
 800e574:	b003      	add	sp, #12
 800e576:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800e578 <_ZN8touchgfx7Outline6moveToEii>:
 800e578:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800e57a:	6a43      	ldr	r3, [r0, #36]	@ 0x24
 800e57c:	4615      	mov	r5, r2
 800e57e:	079a      	lsls	r2, r3, #30
 800e580:	4604      	mov	r4, r0
 800e582:	460e      	mov	r6, r1
 800e584:	d401      	bmi.n	800e58a <_ZN8touchgfx7Outline6moveToEii+0x12>
 800e586:	f7ff fafa 	bl	800db7e <_ZN8touchgfx7Outline5resetEv>
 800e58a:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 800e58c:	07db      	lsls	r3, r3, #31
 800e58e:	d504      	bpl.n	800e59a <_ZN8touchgfx7Outline6moveToEii+0x22>
 800e590:	e9d4 1207 	ldrd	r1, r2, [r4, #28]
 800e594:	4620      	mov	r0, r4
 800e596:	f7ff ffd5 	bl	800e544 <_ZN8touchgfx7Outline6lineToEii>
 800e59a:	6923      	ldr	r3, [r4, #16]
 800e59c:	f9b3 2000 	ldrsh.w	r2, [r3]
 800e5a0:	1170      	asrs	r0, r6, #5
 800e5a2:	4290      	cmp	r0, r2
 800e5a4:	ea4f 1165 	mov.w	r1, r5, asr #5
 800e5a8:	d103      	bne.n	800e5b2 <_ZN8touchgfx7Outline6moveToEii+0x3a>
 800e5aa:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 800e5ae:	4291      	cmp	r1, r2
 800e5b0:	d01a      	beq.n	800e5e8 <_ZN8touchgfx7Outline6moveToEii+0x70>
 800e5b2:	88df      	ldrh	r7, [r3, #6]
 800e5b4:	889a      	ldrh	r2, [r3, #4]
 800e5b6:	433a      	orrs	r2, r7
 800e5b8:	d010      	beq.n	800e5dc <_ZN8touchgfx7Outline6moveToEii+0x64>
 800e5ba:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 800e5be:	2a00      	cmp	r2, #0
 800e5c0:	db0c      	blt.n	800e5dc <_ZN8touchgfx7Outline6moveToEii+0x64>
 800e5c2:	6ae7      	ldr	r7, [r4, #44]	@ 0x2c
 800e5c4:	42ba      	cmp	r2, r7
 800e5c6:	da09      	bge.n	800e5dc <_ZN8touchgfx7Outline6moveToEii+0x64>
 800e5c8:	e9d4 7201 	ldrd	r7, r2, [r4, #4]
 800e5cc:	42ba      	cmp	r2, r7
 800e5ce:	bf38      	it	cc
 800e5d0:	3308      	addcc	r3, #8
 800e5d2:	f102 0201 	add.w	r2, r2, #1
 800e5d6:	bf38      	it	cc
 800e5d8:	6123      	strcc	r3, [r4, #16]
 800e5da:	60a2      	str	r2, [r4, #8]
 800e5dc:	6923      	ldr	r3, [r4, #16]
 800e5de:	2200      	movs	r2, #0
 800e5e0:	8018      	strh	r0, [r3, #0]
 800e5e2:	8059      	strh	r1, [r3, #2]
 800e5e4:	809a      	strh	r2, [r3, #4]
 800e5e6:	80da      	strh	r2, [r3, #6]
 800e5e8:	6166      	str	r6, [r4, #20]
 800e5ea:	e9c4 5606 	strd	r5, r6, [r4, #24]
 800e5ee:	6225      	str	r5, [r4, #32]
 800e5f0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800e5f2 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>:
 800e5f2:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800e5f6:	b0d0      	sub	sp, #320	@ 0x140
 800e5f8:	466c      	mov	r4, sp
 800e5fa:	eb00 01c1 	add.w	r1, r0, r1, lsl #3
 800e5fe:	4627      	mov	r7, r4
 800e600:	1a0d      	subs	r5, r1, r0
 800e602:	2d48      	cmp	r5, #72	@ 0x48
 800e604:	f100 0308 	add.w	r3, r0, #8
 800e608:	f340 80d5 	ble.w	800e7b6 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
 800e60c:	112d      	asrs	r5, r5, #4
 800e60e:	eb00 02c5 	add.w	r2, r0, r5, lsl #3
 800e612:	f9b0 9000 	ldrsh.w	r9, [r0]
 800e616:	6816      	ldr	r6, [r2, #0]
 800e618:	f9b0 8002 	ldrsh.w	r8, [r0, #2]
 800e61c:	6006      	str	r6, [r0, #0]
 800e61e:	6856      	ldr	r6, [r2, #4]
 800e620:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
 800e624:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
 800e628:	6046      	str	r6, [r0, #4]
 800e62a:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
 800e62e:	f8a2 8002 	strh.w	r8, [r2, #2]
 800e632:	f8a2 e004 	strh.w	lr, [r2, #4]
 800e636:	f8a2 c006 	strh.w	ip, [r2, #6]
 800e63a:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
 800e63e:	f9b0 c00a 	ldrsh.w	ip, [r0, #10]
 800e642:	4565      	cmp	r5, ip
 800e644:	f1a1 0208 	sub.w	r2, r1, #8
 800e648:	db06      	blt.n	800e658 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x66>
 800e64a:	d119      	bne.n	800e680 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
 800e64c:	f9b0 6008 	ldrsh.w	r6, [r0, #8]
 800e650:	f931 5c08 	ldrsh.w	r5, [r1, #-8]
 800e654:	42ae      	cmp	r6, r5
 800e656:	dd13      	ble.n	800e680 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
 800e658:	460e      	mov	r6, r1
 800e65a:	f9b0 9008 	ldrsh.w	r9, [r0, #8]
 800e65e:	f856 5d08 	ldr.w	r5, [r6, #-8]!
 800e662:	f9b0 800c 	ldrsh.w	r8, [r0, #12]
 800e666:	f9b0 e00e 	ldrsh.w	lr, [r0, #14]
 800e66a:	601d      	str	r5, [r3, #0]
 800e66c:	6875      	ldr	r5, [r6, #4]
 800e66e:	605d      	str	r5, [r3, #4]
 800e670:	f821 9c08 	strh.w	r9, [r1, #-8]
 800e674:	f821 cc06 	strh.w	ip, [r1, #-6]
 800e678:	f821 8c04 	strh.w	r8, [r1, #-4]
 800e67c:	f821 ec02 	strh.w	lr, [r1, #-2]
 800e680:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 800e684:	f9b0 500a 	ldrsh.w	r5, [r0, #10]
 800e688:	42ae      	cmp	r6, r5
 800e68a:	db06      	blt.n	800e69a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xa8>
 800e68c:	d116      	bne.n	800e6bc <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
 800e68e:	f9b0 c000 	ldrsh.w	ip, [r0]
 800e692:	f9b0 5008 	ldrsh.w	r5, [r0, #8]
 800e696:	45ac      	cmp	ip, r5
 800e698:	da10      	bge.n	800e6bc <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
 800e69a:	681d      	ldr	r5, [r3, #0]
 800e69c:	f9b0 8000 	ldrsh.w	r8, [r0]
 800e6a0:	6005      	str	r5, [r0, #0]
 800e6a2:	685d      	ldr	r5, [r3, #4]
 800e6a4:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
 800e6a8:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
 800e6ac:	f8a0 8008 	strh.w	r8, [r0, #8]
 800e6b0:	6045      	str	r5, [r0, #4]
 800e6b2:	8146      	strh	r6, [r0, #10]
 800e6b4:	f8a0 e00c 	strh.w	lr, [r0, #12]
 800e6b8:	f8a0 c00e 	strh.w	ip, [r0, #14]
 800e6bc:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
 800e6c0:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
 800e6c4:	4565      	cmp	r5, ip
 800e6c6:	db06      	blt.n	800e6d6 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe4>
 800e6c8:	d119      	bne.n	800e6fe <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 800e6ca:	f931 6c08 	ldrsh.w	r6, [r1, #-8]
 800e6ce:	f9b0 5000 	ldrsh.w	r5, [r0]
 800e6d2:	42ae      	cmp	r6, r5
 800e6d4:	da13      	bge.n	800e6fe <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 800e6d6:	460e      	mov	r6, r1
 800e6d8:	f9b0 9000 	ldrsh.w	r9, [r0]
 800e6dc:	f856 5d08 	ldr.w	r5, [r6, #-8]!
 800e6e0:	6005      	str	r5, [r0, #0]
 800e6e2:	f9b0 8004 	ldrsh.w	r8, [r0, #4]
 800e6e6:	f9b0 e006 	ldrsh.w	lr, [r0, #6]
 800e6ea:	6875      	ldr	r5, [r6, #4]
 800e6ec:	6045      	str	r5, [r0, #4]
 800e6ee:	f821 9c08 	strh.w	r9, [r1, #-8]
 800e6f2:	f821 cc06 	strh.w	ip, [r1, #-6]
 800e6f6:	f821 8c04 	strh.w	r8, [r1, #-4]
 800e6fa:	f821 ec02 	strh.w	lr, [r1, #-2]
 800e6fe:	3308      	adds	r3, #8
 800e700:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
 800e704:	f9b3 e002 	ldrsh.w	lr, [r3, #2]
 800e708:	45e6      	cmp	lr, ip
 800e70a:	dbf8      	blt.n	800e6fe <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 800e70c:	d105      	bne.n	800e71a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 800e70e:	f9b3 6000 	ldrsh.w	r6, [r3]
 800e712:	f9b0 5000 	ldrsh.w	r5, [r0]
 800e716:	42ae      	cmp	r6, r5
 800e718:	dbf1      	blt.n	800e6fe <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 800e71a:	4615      	mov	r5, r2
 800e71c:	3a08      	subs	r2, #8
 800e71e:	f9b2 6002 	ldrsh.w	r6, [r2, #2]
 800e722:	45b4      	cmp	ip, r6
 800e724:	dbf9      	blt.n	800e71a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 800e726:	d105      	bne.n	800e734 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x142>
 800e728:	f9b0 8000 	ldrsh.w	r8, [r0]
 800e72c:	f9b2 6000 	ldrsh.w	r6, [r2]
 800e730:	45b0      	cmp	r8, r6
 800e732:	dbf2      	blt.n	800e71a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 800e734:	4293      	cmp	r3, r2
 800e736:	f1a5 0608 	sub.w	r6, r5, #8
 800e73a:	d816      	bhi.n	800e76a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x178>
 800e73c:	f8d6 c000 	ldr.w	ip, [r6]
 800e740:	f9b3 a000 	ldrsh.w	sl, [r3]
 800e744:	f8c3 c000 	str.w	ip, [r3]
 800e748:	f9b3 9004 	ldrsh.w	r9, [r3, #4]
 800e74c:	f9b3 8006 	ldrsh.w	r8, [r3, #6]
 800e750:	f8d6 c004 	ldr.w	ip, [r6, #4]
 800e754:	f8c3 c004 	str.w	ip, [r3, #4]
 800e758:	f825 ac08 	strh.w	sl, [r5, #-8]
 800e75c:	f825 ec06 	strh.w	lr, [r5, #-6]
 800e760:	f825 9c04 	strh.w	r9, [r5, #-4]
 800e764:	f825 8c02 	strh.w	r8, [r5, #-2]
 800e768:	e7c9      	b.n	800e6fe <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 800e76a:	f8d6 e000 	ldr.w	lr, [r6]
 800e76e:	f9b0 a000 	ldrsh.w	sl, [r0]
 800e772:	f8c0 e000 	str.w	lr, [r0]
 800e776:	f9b0 9004 	ldrsh.w	r9, [r0, #4]
 800e77a:	f9b0 8006 	ldrsh.w	r8, [r0, #6]
 800e77e:	f8d6 e004 	ldr.w	lr, [r6, #4]
 800e782:	f8c0 e004 	str.w	lr, [r0, #4]
 800e786:	f825 ac08 	strh.w	sl, [r5, #-8]
 800e78a:	f825 cc06 	strh.w	ip, [r5, #-6]
 800e78e:	f825 9c04 	strh.w	r9, [r5, #-4]
 800e792:	f825 8c02 	strh.w	r8, [r5, #-2]
 800e796:	1acd      	subs	r5, r1, r3
 800e798:	1a16      	subs	r6, r2, r0
 800e79a:	10ed      	asrs	r5, r5, #3
 800e79c:	ebb5 0fe6 	cmp.w	r5, r6, asr #3
 800e7a0:	bfb5      	itete	lt
 800e7a2:	e9c4 0200 	strdlt	r0, r2, [r4]
 800e7a6:	e9c4 3100 	strdge	r3, r1, [r4]
 800e7aa:	460a      	movlt	r2, r1
 800e7ac:	4603      	movge	r3, r0
 800e7ae:	3408      	adds	r4, #8
 800e7b0:	4618      	mov	r0, r3
 800e7b2:	4611      	mov	r1, r2
 800e7b4:	e724      	b.n	800e600 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
 800e7b6:	4299      	cmp	r1, r3
 800e7b8:	d928      	bls.n	800e80c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x21a>
 800e7ba:	f1a3 0210 	sub.w	r2, r3, #16
 800e7be:	f9b2 c012 	ldrsh.w	ip, [r2, #18]
 800e7c2:	f9b2 500a 	ldrsh.w	r5, [r2, #10]
 800e7c6:	45ac      	cmp	ip, r5
 800e7c8:	db06      	blt.n	800e7d8 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1e6>
 800e7ca:	d11d      	bne.n	800e808 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x216>
 800e7cc:	f9b2 6010 	ldrsh.w	r6, [r2, #16]
 800e7d0:	f9b2 5008 	ldrsh.w	r5, [r2, #8]
 800e7d4:	42ae      	cmp	r6, r5
 800e7d6:	da17      	bge.n	800e808 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x216>
 800e7d8:	4615      	mov	r5, r2
 800e7da:	f9b2 9010 	ldrsh.w	r9, [r2, #16]
 800e7de:	f855 6f08 	ldr.w	r6, [r5, #8]!
 800e7e2:	6116      	str	r6, [r2, #16]
 800e7e4:	686e      	ldr	r6, [r5, #4]
 800e7e6:	f9b2 8014 	ldrsh.w	r8, [r2, #20]
 800e7ea:	f9b2 e016 	ldrsh.w	lr, [r2, #22]
 800e7ee:	f8a2 9008 	strh.w	r9, [r2, #8]
 800e7f2:	42a8      	cmp	r0, r5
 800e7f4:	6156      	str	r6, [r2, #20]
 800e7f6:	f8a2 c00a 	strh.w	ip, [r2, #10]
 800e7fa:	f8a2 800c 	strh.w	r8, [r2, #12]
 800e7fe:	f8a2 e00e 	strh.w	lr, [r2, #14]
 800e802:	f1a2 0208 	sub.w	r2, r2, #8
 800e806:	d1da      	bne.n	800e7be <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1cc>
 800e808:	3308      	adds	r3, #8
 800e80a:	e7d4      	b.n	800e7b6 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
 800e80c:	42bc      	cmp	r4, r7
 800e80e:	d903      	bls.n	800e818 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x226>
 800e810:	e954 0102 	ldrd	r0, r1, [r4, #-8]
 800e814:	3c08      	subs	r4, #8
 800e816:	e6f3      	b.n	800e600 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
 800e818:	b050      	add	sp, #320	@ 0x140
 800e81a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

0800e81e <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>:
 800e81e:	b510      	push	{r4, lr}
 800e820:	6a43      	ldr	r3, [r0, #36]	@ 0x24
 800e822:	07da      	lsls	r2, r3, #31
 800e824:	4604      	mov	r4, r0
 800e826:	d507      	bpl.n	800e838 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x1a>
 800e828:	e9d0 1207 	ldrd	r1, r2, [r0, #28]
 800e82c:	f7ff fe8a 	bl	800e544 <_ZN8touchgfx7Outline6lineToEii>
 800e830:	6a43      	ldr	r3, [r0, #36]	@ 0x24
 800e832:	f023 0301 	bic.w	r3, r3, #1
 800e836:	6243      	str	r3, [r0, #36]	@ 0x24
 800e838:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 800e83a:	079b      	lsls	r3, r3, #30
 800e83c:	d521      	bpl.n	800e882 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x64>
 800e83e:	6923      	ldr	r3, [r4, #16]
 800e840:	88d9      	ldrh	r1, [r3, #6]
 800e842:	889a      	ldrh	r2, [r3, #4]
 800e844:	430a      	orrs	r2, r1
 800e846:	d010      	beq.n	800e86a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 800e848:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 800e84c:	2a00      	cmp	r2, #0
 800e84e:	db0c      	blt.n	800e86a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 800e850:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
 800e852:	428a      	cmp	r2, r1
 800e854:	da09      	bge.n	800e86a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 800e856:	e9d4 1201 	ldrd	r1, r2, [r4, #4]
 800e85a:	4291      	cmp	r1, r2
 800e85c:	bf88      	it	hi
 800e85e:	3308      	addhi	r3, #8
 800e860:	f102 0201 	add.w	r2, r2, #1
 800e864:	bf88      	it	hi
 800e866:	6123      	strhi	r3, [r4, #16]
 800e868:	60a2      	str	r2, [r4, #8]
 800e86a:	68a1      	ldr	r1, [r4, #8]
 800e86c:	b129      	cbz	r1, 800e87a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
 800e86e:	6863      	ldr	r3, [r4, #4]
 800e870:	4299      	cmp	r1, r3
 800e872:	d802      	bhi.n	800e87a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
 800e874:	68e0      	ldr	r0, [r4, #12]
 800e876:	f7ff febc 	bl	800e5f2 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>
 800e87a:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 800e87c:	f023 0302 	bic.w	r3, r3, #2
 800e880:	6263      	str	r3, [r4, #36]	@ 0x24
 800e882:	68e0      	ldr	r0, [r4, #12]
 800e884:	bd10      	pop	{r4, pc}
	...

0800e888 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>:
 800e888:	4b01      	ldr	r3, [pc, #4]	@ (800e890 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv+0x8>)
 800e88a:	6818      	ldr	r0, [r3, #0]
 800e88c:	4770      	bx	lr
 800e88e:	bf00      	nop
 800e890:	200133dc 	.word	0x200133dc

0800e894 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>:
 800e894:	4b01      	ldr	r3, [pc, #4]	@ (800e89c <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv+0x8>)
 800e896:	6818      	ldr	r0, [r3, #0]
 800e898:	4770      	bx	lr
 800e89a:	bf00      	nop
 800e89c:	200133e0 	.word	0x200133e0

0800e8a0 <_ZN8touchgfx3LCD27supportDynamicBitmapDrawingENS_6Bitmap12BitmapFormatE>:
 800e8a0:	b510      	push	{r4, lr}
 800e8a2:	6803      	ldr	r3, [r0, #0]
 800e8a4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800e8a6:	460c      	mov	r4, r1
 800e8a8:	4798      	blx	r3
 800e8aa:	1b03      	subs	r3, r0, r4
 800e8ac:	4258      	negs	r0, r3
 800e8ae:	4158      	adcs	r0, r3
 800e8b0:	bd10      	pop	{r4, pc}
	...

0800e8b4 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE>:
 800e8b4:	4b01      	ldr	r3, [pc, #4]	@ (800e8bc <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE+0x8>)
 800e8b6:	6019      	str	r1, [r3, #0]
 800e8b8:	4770      	bx	lr
 800e8ba:	bf00      	nop
 800e8bc:	200133e4 	.word	0x200133e4

0800e8c0 <_ZN8touchgfx3LCD18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 800e8c0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e8c4:	4696      	mov	lr, r2
 800e8c6:	4605      	mov	r5, r0
 800e8c8:	4614      	mov	r4, r2
 800e8ca:	460e      	mov	r6, r1
 800e8cc:	461f      	mov	r7, r3
 800e8ce:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800e8d2:	b097      	sub	sp, #92	@ 0x5c
 800e8d4:	f10d 0c1c 	add.w	ip, sp, #28
 800e8d8:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800e8dc:	f8de 3000 	ldr.w	r3, [lr]
 800e8e0:	f8cc 3000 	str.w	r3, [ip]
 800e8e4:	f104 0e14 	add.w	lr, r4, #20
 800e8e8:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800e8ec:	f10d 0c30 	add.w	ip, sp, #48	@ 0x30
 800e8f0:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800e8f4:	f8de 3000 	ldr.w	r3, [lr]
 800e8f8:	f8cc 3000 	str.w	r3, [ip]
 800e8fc:	f104 0e28 	add.w	lr, r4, #40	@ 0x28
 800e900:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800e904:	f10d 0c44 	add.w	ip, sp, #68	@ 0x44
 800e908:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800e90c:	f89d 908c 	ldrb.w	r9, [sp, #140]	@ 0x8c
 800e910:	f8bd a090 	ldrh.w	sl, [sp, #144]	@ 0x90
 800e914:	f8bd 8088 	ldrh.w	r8, [sp, #136]	@ 0x88
 800e918:	f8de 3000 	ldr.w	r3, [lr]
 800e91c:	f8cc 3000 	str.w	r3, [ip]
 800e920:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 800e922:	682b      	ldr	r3, [r5, #0]
 800e924:	9201      	str	r2, [sp, #4]
 800e926:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 800e92a:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 800e92c:	9200      	str	r2, [sp, #0]
 800e92e:	f8cd 8008 	str.w	r8, [sp, #8]
 800e932:	f8d3 b03c 	ldr.w	fp, [r3, #60]	@ 0x3c
 800e936:	aa07      	add	r2, sp, #28
 800e938:	463b      	mov	r3, r7
 800e93a:	4631      	mov	r1, r6
 800e93c:	4628      	mov	r0, r5
 800e93e:	47d8      	blx	fp
 800e940:	46a6      	mov	lr, r4
 800e942:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800e946:	f10d 0c1c 	add.w	ip, sp, #28
 800e94a:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800e94e:	f8de 3000 	ldr.w	r3, [lr]
 800e952:	f8cc 3000 	str.w	r3, [ip]
 800e956:	f104 0e28 	add.w	lr, r4, #40	@ 0x28
 800e95a:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800e95e:	f10d 0c30 	add.w	ip, sp, #48	@ 0x30
 800e962:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800e966:	343c      	adds	r4, #60	@ 0x3c
 800e968:	f8de 3000 	ldr.w	r3, [lr]
 800e96c:	f8cc 3000 	str.w	r3, [ip]
 800e970:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800e972:	f10d 0c44 	add.w	ip, sp, #68	@ 0x44
 800e976:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800e97a:	6823      	ldr	r3, [r4, #0]
 800e97c:	f8cc 3000 	str.w	r3, [ip]
 800e980:	682b      	ldr	r3, [r5, #0]
 800e982:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 800e986:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 800e988:	9201      	str	r2, [sp, #4]
 800e98a:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 800e98c:	9200      	str	r2, [sp, #0]
 800e98e:	f8cd 8008 	str.w	r8, [sp, #8]
 800e992:	6bdc      	ldr	r4, [r3, #60]	@ 0x3c
 800e994:	aa07      	add	r2, sp, #28
 800e996:	463b      	mov	r3, r7
 800e998:	4631      	mov	r1, r6
 800e99a:	4628      	mov	r0, r5
 800e99c:	47a0      	blx	r4
 800e99e:	b017      	add	sp, #92	@ 0x5c
 800e9a0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800e9a4 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht>:
 800e9a4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e9a8:	b08d      	sub	sp, #52	@ 0x34
 800e9aa:	4688      	mov	r8, r1
 800e9ac:	9916      	ldr	r1, [sp, #88]	@ 0x58
 800e9ae:	f8d3 c000 	ldr.w	ip, [r3]
 800e9b2:	680f      	ldr	r7, [r1, #0]
 800e9b4:	f8bd 4070 	ldrh.w	r4, [sp, #112]	@ 0x70
 800e9b8:	ed92 4a09 	vldr	s8, [r2, #36]	@ 0x24
 800e9bc:	edd2 4a0b 	vldr	s9, [r2, #44]	@ 0x2c
 800e9c0:	edd3 6a07 	vldr	s13, [r3, #28]
 800e9c4:	9918      	ldr	r1, [sp, #96]	@ 0x60
 800e9c6:	f8dd a064 	ldr.w	sl, [sp, #100]	@ 0x64
 800e9ca:	f9b1 9000 	ldrsh.w	r9, [r1]
 800e9ce:	f9ba 1000 	ldrsh.w	r1, [sl]
 800e9d2:	edd3 1a0a 	vldr	s3, [r3, #40]	@ 0x28
 800e9d6:	ed93 2a0d 	vldr	s4, [r3, #52]	@ 0x34
 800e9da:	eba7 070c 	sub.w	r7, r7, ip
 800e9de:	42bc      	cmp	r4, r7
 800e9e0:	bfa8      	it	ge
 800e9e2:	463c      	movge	r4, r7
 800e9e4:	ee07 4a90 	vmov	s15, r4
 800e9e8:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
 800e9ec:	edd2 7a0d 	vldr	s15, [r2, #52]	@ 0x34
 800e9f0:	ee25 4a04 	vmul.f32	s8, s10, s8
 800e9f4:	ee65 4a24 	vmul.f32	s9, s10, s9
 800e9f8:	ee25 5a27 	vmul.f32	s10, s10, s15
 800e9fc:	eef7 7a00 	vmov.f32	s15, #112	@ 0x3f800000  1.0
 800ea00:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 800ea04:	eb09 0e0c 	add.w	lr, r9, ip
 800ea08:	4571      	cmp	r1, lr
 800ea0a:	ee71 0aa4 	vadd.f32	s1, s3, s9
 800ea0e:	ee32 1a05 	vadd.f32	s2, s4, s10
 800ea12:	ee36 0a84 	vadd.f32	s0, s13, s8
 800ea16:	ee61 1a87 	vmul.f32	s3, s3, s14
 800ea1a:	ee22 2a07 	vmul.f32	s4, s4, s14
 800ea1e:	f340 808d 	ble.w	800eb3c <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x198>
 800ea22:	eba1 060e 	sub.w	r6, r1, lr
 800ea26:	fb96 f5f4 	sdiv	r5, r6, r4
 800ea2a:	ee07 5a10 	vmov	s14, r5
 800ea2e:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800ea32:	2d00      	cmp	r5, #0
 800ea34:	fb04 6615 	mls	r6, r4, r5, r6
 800ea38:	eea7 0a04 	vfma.f32	s0, s14, s8
 800ea3c:	eee7 0a24 	vfma.f32	s1, s14, s9
 800ea40:	eea7 1a05 	vfma.f32	s2, s14, s10
 800ea44:	dd13      	ble.n	800ea6e <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xca>
 800ea46:	ee70 6a44 	vsub.f32	s13, s0, s8
 800ea4a:	ee70 1ae4 	vsub.f32	s3, s1, s9
 800ea4e:	eef5 6a40 	vcmp.f32	s13, #0.0
 800ea52:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800ea56:	bf18      	it	ne
 800ea58:	ee87 7aa6 	vdivne.f32	s14, s15, s13
 800ea5c:	ee31 2a45 	vsub.f32	s4, s2, s10
 800ea60:	bf08      	it	eq
 800ea62:	eeb0 7a67 	vmoveq.f32	s14, s15
 800ea66:	ee61 1a87 	vmul.f32	s3, s3, s14
 800ea6a:	ee22 2a07 	vmul.f32	s4, s4, s14
 800ea6e:	fb05 f204 	mul.w	r2, r5, r4
 800ea72:	1abf      	subs	r7, r7, r2
 800ea74:	4494      	add	ip, r2
 800ea76:	f8ba 2004 	ldrh.w	r2, [sl, #4]
 800ea7a:	4411      	add	r1, r2
 800ea7c:	eb09 020c 	add.w	r2, r9, ip
 800ea80:	443a      	add	r2, r7
 800ea82:	b209      	sxth	r1, r1
 800ea84:	428a      	cmp	r2, r1
 800ea86:	bfc4      	itt	gt
 800ea88:	eba1 0209 	subgt.w	r2, r1, r9
 800ea8c:	eba2 070c 	subgt.w	r7, r2, ip
 800ea90:	2f00      	cmp	r7, #0
 800ea92:	dd50      	ble.n	800eb36 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x192>
 800ea94:	fb97 f1f4 	sdiv	r1, r7, r4
 800ea98:	fb04 7211 	mls	r2, r4, r1, r7
 800ea9c:	b90a      	cbnz	r2, 800eaa2 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xfe>
 800ea9e:	3901      	subs	r1, #1
 800eaa0:	4622      	mov	r2, r4
 800eaa2:	eec7 3a80 	vdiv.f32	s7, s15, s0
 800eaa6:	6840      	ldr	r0, [r0, #4]
 800eaa8:	900b      	str	r0, [sp, #44]	@ 0x2c
 800eaaa:	f8d0 a000 	ldr.w	sl, [r0]
 800eaae:	9817      	ldr	r0, [sp, #92]	@ 0x5c
 800eab0:	9008      	str	r0, [sp, #32]
 800eab2:	f89d b06c 	ldrb.w	fp, [sp, #108]	@ 0x6c
 800eab6:	9818      	ldr	r0, [sp, #96]	@ 0x60
 800eab8:	f8cd b024 	str.w	fp, [sp, #36]	@ 0x24
 800eabc:	f9b0 b002 	ldrsh.w	fp, [r0, #2]
 800eac0:	695b      	ldr	r3, [r3, #20]
 800eac2:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 800eac4:	445b      	add	r3, fp
 800eac6:	eef0 6a42 	vmov.f32	s13, s4
 800eaca:	ee60 2aa3 	vmul.f32	s5, s1, s7
 800eace:	ee21 3a23 	vmul.f32	s6, s2, s7
 800ead2:	ee72 7ae1 	vsub.f32	s15, s5, s3
 800ead6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 800eada:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 800eade:	9307      	str	r3, [sp, #28]
 800eae0:	ee17 7a90 	vmov	r7, s15
 800eae4:	ee73 7a42 	vsub.f32	s15, s6, s4
 800eae8:	eeb0 7a61 	vmov.f32	s14, s3
 800eaec:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 800eaf0:	ee16 3a90 	vmov	r3, s13
 800eaf4:	fb97 f7f4 	sdiv	r7, r7, r4
 800eaf8:	ee17 ca90 	vmov	ip, s15
 800eafc:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 800eb00:	fb9c fcf4 	sdiv	ip, ip, r4
 800eb04:	fb0c 3306 	mla	r3, ip, r6, r3
 800eb08:	9302      	str	r3, [sp, #8]
 800eb0a:	ee17 3a10 	vmov	r3, s14
 800eb0e:	44b6      	add	lr, r6
 800eb10:	fb04 e505 	mla	r5, r4, r5, lr
 800eb14:	e9cd 7c03 	strd	r7, ip, [sp, #12]
 800eb18:	fb07 3706 	mla	r7, r7, r6, r3
 800eb1c:	e9cd 8505 	strd	r8, r5, [sp, #20]
 800eb20:	e9cd 4700 	strd	r4, r7, [sp]
 800eb24:	2900      	cmp	r1, #0
 800eb26:	bfcc      	ite	gt
 800eb28:	46a1      	movgt	r9, r4
 800eb2a:	4691      	movle	r9, r2
 800eb2c:	eba9 0306 	sub.w	r3, r9, r6
 800eb30:	f8da 4008 	ldr.w	r4, [sl, #8]
 800eb34:	47a0      	blx	r4
 800eb36:	b00d      	add	sp, #52	@ 0x34
 800eb38:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800eb3c:	2500      	movs	r5, #0
 800eb3e:	462e      	mov	r6, r5
 800eb40:	e799      	b.n	800ea76 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xd2>
	...

0800eb44 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 800eb44:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800eb48:	b0db      	sub	sp, #364	@ 0x16c
 800eb4a:	461d      	mov	r5, r3
 800eb4c:	f8bd 3198 	ldrh.w	r3, [sp, #408]	@ 0x198
 800eb50:	930a      	str	r3, [sp, #40]	@ 0x28
 800eb52:	f89d 319c 	ldrb.w	r3, [sp, #412]	@ 0x19c
 800eb56:	930b      	str	r3, [sp, #44]	@ 0x2c
 800eb58:	f8bd 31a0 	ldrh.w	r3, [sp, #416]	@ 0x1a0
 800eb5c:	9310      	str	r3, [sp, #64]	@ 0x40
 800eb5e:	6803      	ldr	r3, [r0, #0]
 800eb60:	910f      	str	r1, [sp, #60]	@ 0x3c
 800eb62:	6c5f      	ldr	r7, [r3, #68]	@ 0x44
 800eb64:	9009      	str	r0, [sp, #36]	@ 0x24
 800eb66:	4614      	mov	r4, r2
 800eb68:	4629      	mov	r1, r5
 800eb6a:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	@ 0x28
 800eb6e:	f8dd b194 	ldr.w	fp, [sp, #404]	@ 0x194
 800eb72:	47b8      	blx	r7
 800eb74:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800eb76:	6058      	str	r0, [r3, #4]
 800eb78:	2800      	cmp	r0, #0
 800eb7a:	f000 83a1 	beq.w	800f2c0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800eb7e:	682b      	ldr	r3, [r5, #0]
 800eb80:	9314      	str	r3, [sp, #80]	@ 0x50
 800eb82:	686b      	ldr	r3, [r5, #4]
 800eb84:	9315      	str	r3, [sp, #84]	@ 0x54
 800eb86:	4bc4      	ldr	r3, [pc, #784]	@ (800ee98 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x354>)
 800eb88:	ed94 7a02 	vldr	s14, [r4, #8]
 800eb8c:	7819      	ldrb	r1, [r3, #0]
 800eb8e:	e9d5 2302 	ldrd	r2, r3, [r5, #8]
 800eb92:	eef2 7a04 	vmov.f32	s15, #36	@ 0x41200000  10.0
 800eb96:	2900      	cmp	r1, #0
 800eb98:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800eb9c:	bf16      	itet	ne
 800eb9e:	4619      	movne	r1, r3
 800eba0:	4611      	moveq	r1, r2
 800eba2:	4613      	movne	r3, r2
 800eba4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800eba8:	9116      	str	r1, [sp, #88]	@ 0x58
 800ebaa:	e9cd 3217 	strd	r3, r2, [sp, #92]	@ 0x5c
 800ebae:	f240 8387 	bls.w	800f2c0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800ebb2:	ed94 7a07 	vldr	s14, [r4, #28]
 800ebb6:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800ebba:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800ebbe:	f240 837f 	bls.w	800f2c0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800ebc2:	ed94 7a0c 	vldr	s14, [r4, #48]	@ 0x30
 800ebc6:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800ebca:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800ebce:	f240 8377 	bls.w	800f2c0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800ebd2:	6822      	ldr	r2, [r4, #0]
 800ebd4:	4bb1      	ldr	r3, [pc, #708]	@ (800ee9c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x358>)
 800ebd6:	429a      	cmp	r2, r3
 800ebd8:	f2c0 8372 	blt.w	800f2c0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800ebdc:	49b0      	ldr	r1, [pc, #704]	@ (800eea0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x35c>)
 800ebde:	6963      	ldr	r3, [r4, #20]
 800ebe0:	428a      	cmp	r2, r1
 800ebe2:	f300 836d 	bgt.w	800f2c0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800ebe6:	f503 331c 	add.w	r3, r3, #159744	@ 0x27000
 800ebea:	48ae      	ldr	r0, [pc, #696]	@ (800eea4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x360>)
 800ebec:	33ff      	adds	r3, #255	@ 0xff
 800ebee:	4283      	cmp	r3, r0
 800ebf0:	f200 8366 	bhi.w	800f2c0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800ebf4:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
 800ebf6:	4dac      	ldr	r5, [pc, #688]	@ (800eea8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x364>)
 800ebf8:	f503 331c 	add.w	r3, r3, #159744	@ 0x27000
 800ebfc:	33ff      	adds	r3, #255	@ 0xff
 800ebfe:	42ab      	cmp	r3, r5
 800ec00:	f200 835e 	bhi.w	800f2c0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800ec04:	6862      	ldr	r2, [r4, #4]
 800ec06:	f502 331c 	add.w	r3, r2, #159744	@ 0x27000
 800ec0a:	33ff      	adds	r3, #255	@ 0xff
 800ec0c:	4283      	cmp	r3, r0
 800ec0e:	f200 8357 	bhi.w	800f2c0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800ec12:	69a1      	ldr	r1, [r4, #24]
 800ec14:	f501 331c 	add.w	r3, r1, #159744	@ 0x27000
 800ec18:	33ff      	adds	r3, #255	@ 0xff
 800ec1a:	4283      	cmp	r3, r0
 800ec1c:	f200 8350 	bhi.w	800f2c0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800ec20:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 800ec22:	f503 301c 	add.w	r0, r3, #159744	@ 0x27000
 800ec26:	30ff      	adds	r0, #255	@ 0xff
 800ec28:	42a8      	cmp	r0, r5
 800ec2a:	f200 8349 	bhi.w	800f2c0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800ec2e:	428a      	cmp	r2, r1
 800ec30:	f280 8110 	bge.w	800ee54 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x310>
 800ec34:	429a      	cmp	r2, r3
 800ec36:	f300 8119 	bgt.w	800ee6c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x328>
 800ec3a:	4299      	cmp	r1, r3
 800ec3c:	f280 811d 	bge.w	800ee7a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x336>
 800ec40:	2502      	movs	r5, #2
 800ec42:	2701      	movs	r7, #1
 800ec44:	46a9      	mov	r9, r5
 800ec46:	46b8      	mov	r8, r7
 800ec48:	f04f 0a00 	mov.w	sl, #0
 800ec4c:	4621      	mov	r1, r4
 800ec4e:	a849      	add	r0, sp, #292	@ 0x124
 800ec50:	f003 fd22 	bl	8012698 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>
 800ec54:	4622      	mov	r2, r4
 800ec56:	4653      	mov	r3, sl
 800ec58:	a949      	add	r1, sp, #292	@ 0x124
 800ec5a:	f8cd 9000 	str.w	r9, [sp]
 800ec5e:	a819      	add	r0, sp, #100	@ 0x64
 800ec60:	f003 fe4a 	bl	80128f8 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800ec64:	4622      	mov	r2, r4
 800ec66:	4653      	mov	r3, sl
 800ec68:	a949      	add	r1, sp, #292	@ 0x124
 800ec6a:	f8cd 8000 	str.w	r8, [sp]
 800ec6e:	a829      	add	r0, sp, #164	@ 0xa4
 800ec70:	f003 fe42 	bl	80128f8 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800ec74:	4643      	mov	r3, r8
 800ec76:	4622      	mov	r2, r4
 800ec78:	a949      	add	r1, sp, #292	@ 0x124
 800ec7a:	f8cd 9000 	str.w	r9, [sp]
 800ec7e:	a839      	add	r0, sp, #228	@ 0xe4
 800ec80:	f003 fe3a 	bl	80128f8 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800ec84:	42af      	cmp	r7, r5
 800ec86:	bfb5      	itete	lt
 800ec88:	2300      	movlt	r3, #0
 800ec8a:	2301      	movge	r3, #1
 800ec8c:	930e      	strlt	r3, [sp, #56]	@ 0x38
 800ec8e:	930e      	strge	r3, [sp, #56]	@ 0x38
 800ec90:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800ec92:	e893 0003 	ldmia.w	r3, {r0, r1}
 800ec96:	af12      	add	r7, sp, #72	@ 0x48
 800ec98:	bfb9      	ittee	lt
 800ec9a:	ad29      	addlt	r5, sp, #164	@ 0xa4
 800ec9c:	ac19      	addlt	r4, sp, #100	@ 0x64
 800ec9e:	ad19      	addge	r5, sp, #100	@ 0x64
 800eca0:	ac29      	addge	r4, sp, #164	@ 0xa4
 800eca2:	e887 0003 	stmia.w	r7, {r0, r1}
 800eca6:	b928      	cbnz	r0, 800ecb4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x170>
 800eca8:	4b80      	ldr	r3, [pc, #512]	@ (800eeac <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x368>)
 800ecaa:	6818      	ldr	r0, [r3, #0]
 800ecac:	6803      	ldr	r3, [r0, #0]
 800ecae:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800ecb0:	4798      	blx	r3
 800ecb2:	6038      	str	r0, [r7, #0]
 800ecb4:	9b64      	ldr	r3, [sp, #400]	@ 0x190
 800ecb6:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 800ecba:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 800ecbe:	930c      	str	r3, [sp, #48]	@ 0x30
 800ecc0:	990c      	ldr	r1, [sp, #48]	@ 0x30
 800ecc2:	6963      	ldr	r3, [r4, #20]
 800ecc4:	9a2f      	ldr	r2, [sp, #188]	@ 0xbc
 800ecc6:	440b      	add	r3, r1
 800ecc8:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 800eccc:	4408      	add	r0, r1
 800ecce:	b200      	sxth	r0, r0
 800ecd0:	4283      	cmp	r3, r0
 800ecd2:	900d      	str	r0, [sp, #52]	@ 0x34
 800ecd4:	f280 80dd 	bge.w	800ee92 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x34e>
 800ecd8:	428b      	cmp	r3, r1
 800ecda:	da08      	bge.n	800ecee <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800ecdc:	2a00      	cmp	r2, #0
 800ecde:	dd06      	ble.n	800ecee <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800ece0:	1acb      	subs	r3, r1, r3
 800ece2:	429a      	cmp	r2, r3
 800ece4:	f2c0 80e4 	blt.w	800eeb0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36c>
 800ece8:	2b00      	cmp	r3, #0
 800ecea:	f300 80e2 	bgt.w	800eeb2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36e>
 800ecee:	6967      	ldr	r7, [r4, #20]
 800ecf0:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 800ecf2:	443b      	add	r3, r7
 800ecf4:	461f      	mov	r7, r3
 800ecf6:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 800ecf8:	1bdf      	subs	r7, r3, r7
 800ecfa:	4297      	cmp	r7, r2
 800ecfc:	bfa8      	it	ge
 800ecfe:	4617      	movge	r7, r2
 800ed00:	f10d 0850 	add.w	r8, sp, #80	@ 0x50
 800ed04:	2f00      	cmp	r7, #0
 800ed06:	f340 8166 	ble.w	800efd6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x492>
 800ed0a:	9b64      	ldr	r3, [sp, #400]	@ 0x190
 800ed0c:	6829      	ldr	r1, [r5, #0]
 800ed0e:	f9b3 2000 	ldrsh.w	r2, [r3]
 800ed12:	f9bb 3000 	ldrsh.w	r3, [fp]
 800ed16:	6820      	ldr	r0, [r4, #0]
 800ed18:	4411      	add	r1, r2
 800ed1a:	4299      	cmp	r1, r3
 800ed1c:	dd1a      	ble.n	800ed54 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 800ed1e:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 800ed22:	440b      	add	r3, r1
 800ed24:	4402      	add	r2, r0
 800ed26:	b21b      	sxth	r3, r3
 800ed28:	429a      	cmp	r2, r3
 800ed2a:	dc13      	bgt.n	800ed54 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 800ed2c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800ed2e:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 800ed30:	681b      	ldr	r3, [r3, #0]
 800ed32:	9206      	str	r2, [sp, #24]
 800ed34:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 800ed36:	9205      	str	r2, [sp, #20]
 800ed38:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 800ed3a:	9500      	str	r5, [sp, #0]
 800ed3c:	e9cd b203 	strd	fp, r2, [sp, #12]
 800ed40:	9a64      	ldr	r2, [sp, #400]	@ 0x190
 800ed42:	9809      	ldr	r0, [sp, #36]	@ 0x24
 800ed44:	e9cd 8201 	strd	r8, r2, [sp, #4]
 800ed48:	a912      	add	r1, sp, #72	@ 0x48
 800ed4a:	f8d3 9048 	ldr.w	r9, [r3, #72]	@ 0x48
 800ed4e:	aa49      	add	r2, sp, #292	@ 0x124
 800ed50:	4623      	mov	r3, r4
 800ed52:	47c8      	blx	r9
 800ed54:	e9d4 2300 	ldrd	r2, r3, [r4]
 800ed58:	441a      	add	r2, r3
 800ed5a:	6963      	ldr	r3, [r4, #20]
 800ed5c:	ed94 7a0a 	vldr	s14, [r4, #40]	@ 0x28
 800ed60:	edd4 7a0b 	vldr	s15, [r4, #44]	@ 0x2c
 800ed64:	edd4 6a0e 	vldr	s13, [r4, #56]	@ 0x38
 800ed68:	68a1      	ldr	r1, [r4, #8]
 800ed6a:	ed94 6a08 	vldr	s12, [r4, #32]
 800ed6e:	6022      	str	r2, [r4, #0]
 800ed70:	3301      	adds	r3, #1
 800ed72:	6163      	str	r3, [r4, #20]
 800ed74:	69a3      	ldr	r3, [r4, #24]
 800ed76:	ee37 7a27 	vadd.f32	s14, s14, s15
 800ed7a:	3b01      	subs	r3, #1
 800ed7c:	edd4 7a0d 	vldr	s15, [r4, #52]	@ 0x34
 800ed80:	61a3      	str	r3, [r4, #24]
 800ed82:	6923      	ldr	r3, [r4, #16]
 800ed84:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
 800ed88:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800ed8c:	edd4 6a07 	vldr	s13, [r4, #28]
 800ed90:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
 800ed94:	440b      	add	r3, r1
 800ed96:	68e1      	ldr	r1, [r4, #12]
 800ed98:	6123      	str	r3, [r4, #16]
 800ed9a:	ee76 6a86 	vadd.f32	s13, s13, s12
 800ed9e:	428b      	cmp	r3, r1
 800eda0:	edc4 6a07 	vstr	s13, [r4, #28]
 800eda4:	db15      	blt.n	800edd2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x28e>
 800eda6:	ed94 6a09 	vldr	s12, [r4, #36]	@ 0x24
 800edaa:	ee76 6a26 	vadd.f32	s13, s12, s13
 800edae:	3201      	adds	r2, #1
 800edb0:	edc4 6a07 	vstr	s13, [r4, #28]
 800edb4:	edd4 6a0c 	vldr	s13, [r4, #48]	@ 0x30
 800edb8:	6022      	str	r2, [r4, #0]
 800edba:	ee36 7a87 	vadd.f32	s14, s13, s14
 800edbe:	1a5b      	subs	r3, r3, r1
 800edc0:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
 800edc4:	ed94 7a0f 	vldr	s14, [r4, #60]	@ 0x3c
 800edc8:	6123      	str	r3, [r4, #16]
 800edca:	ee77 7a27 	vadd.f32	s15, s14, s15
 800edce:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
 800edd2:	e9d5 2300 	ldrd	r2, r3, [r5]
 800edd6:	441a      	add	r2, r3
 800edd8:	696b      	ldr	r3, [r5, #20]
 800edda:	ed95 7a0a 	vldr	s14, [r5, #40]	@ 0x28
 800edde:	edd5 7a0b 	vldr	s15, [r5, #44]	@ 0x2c
 800ede2:	edd5 6a0e 	vldr	s13, [r5, #56]	@ 0x38
 800ede6:	68a9      	ldr	r1, [r5, #8]
 800ede8:	ed95 6a08 	vldr	s12, [r5, #32]
 800edec:	602a      	str	r2, [r5, #0]
 800edee:	3301      	adds	r3, #1
 800edf0:	616b      	str	r3, [r5, #20]
 800edf2:	69ab      	ldr	r3, [r5, #24]
 800edf4:	ee37 7a27 	vadd.f32	s14, s14, s15
 800edf8:	3b01      	subs	r3, #1
 800edfa:	edd5 7a0d 	vldr	s15, [r5, #52]	@ 0x34
 800edfe:	61ab      	str	r3, [r5, #24]
 800ee00:	692b      	ldr	r3, [r5, #16]
 800ee02:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
 800ee06:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800ee0a:	edd5 6a07 	vldr	s13, [r5, #28]
 800ee0e:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
 800ee12:	440b      	add	r3, r1
 800ee14:	68e9      	ldr	r1, [r5, #12]
 800ee16:	612b      	str	r3, [r5, #16]
 800ee18:	ee76 6a86 	vadd.f32	s13, s13, s12
 800ee1c:	428b      	cmp	r3, r1
 800ee1e:	edc5 6a07 	vstr	s13, [r5, #28]
 800ee22:	db15      	blt.n	800ee50 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x30c>
 800ee24:	ed95 6a09 	vldr	s12, [r5, #36]	@ 0x24
 800ee28:	ee76 6a26 	vadd.f32	s13, s12, s13
 800ee2c:	3201      	adds	r2, #1
 800ee2e:	edc5 6a07 	vstr	s13, [r5, #28]
 800ee32:	edd5 6a0c 	vldr	s13, [r5, #48]	@ 0x30
 800ee36:	602a      	str	r2, [r5, #0]
 800ee38:	ee36 7a87 	vadd.f32	s14, s13, s14
 800ee3c:	1a5b      	subs	r3, r3, r1
 800ee3e:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
 800ee42:	ed95 7a0f 	vldr	s14, [r5, #60]	@ 0x3c
 800ee46:	612b      	str	r3, [r5, #16]
 800ee48:	ee77 7a27 	vadd.f32	s15, s14, s15
 800ee4c:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
 800ee50:	3f01      	subs	r7, #1
 800ee52:	e757      	b.n	800ed04 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1c0>
 800ee54:	4299      	cmp	r1, r3
 800ee56:	dc13      	bgt.n	800ee80 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x33c>
 800ee58:	429a      	cmp	r2, r3
 800ee5a:	da14      	bge.n	800ee86 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x342>
 800ee5c:	2502      	movs	r5, #2
 800ee5e:	2703      	movs	r7, #3
 800ee60:	46a9      	mov	r9, r5
 800ee62:	f04f 0800 	mov.w	r8, #0
 800ee66:	f04f 0a01 	mov.w	sl, #1
 800ee6a:	e6ef      	b.n	800ec4c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 800ee6c:	2501      	movs	r5, #1
 800ee6e:	2700      	movs	r7, #0
 800ee70:	46a9      	mov	r9, r5
 800ee72:	46b8      	mov	r8, r7
 800ee74:	f04f 0a02 	mov.w	sl, #2
 800ee78:	e6e8      	b.n	800ec4c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 800ee7a:	2501      	movs	r5, #1
 800ee7c:	2702      	movs	r7, #2
 800ee7e:	e6e1      	b.n	800ec44 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x100>
 800ee80:	2500      	movs	r5, #0
 800ee82:	2701      	movs	r7, #1
 800ee84:	e7f4      	b.n	800ee70 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x32c>
 800ee86:	2702      	movs	r7, #2
 800ee88:	2503      	movs	r5, #3
 800ee8a:	f04f 0900 	mov.w	r9, #0
 800ee8e:	46b8      	mov	r8, r7
 800ee90:	e7e9      	b.n	800ee66 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x322>
 800ee92:	4613      	mov	r3, r2
 800ee94:	e728      	b.n	800ece8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1a4>
 800ee96:	bf00      	nop
 800ee98:	200133ca 	.word	0x200133ca
 800ee9c:	fffd8f01 	.word	0xfffd8f01
 800eea0:	00027100 	.word	0x00027100
 800eea4:	0004e1ff 	.word	0x0004e1ff
 800eea8:	0004e1fe 	.word	0x0004e1fe
 800eeac:	200133d4 	.word	0x200133d4
 800eeb0:	4613      	mov	r3, r2
 800eeb2:	992b      	ldr	r1, [sp, #172]	@ 0xac
 800eeb4:	9111      	str	r1, [sp, #68]	@ 0x44
 800eeb6:	e9dd 0a29 	ldrd	r0, sl, [sp, #164]	@ 0xa4
 800eeba:	e9dd 812c 	ldrd	r8, r1, [sp, #176]	@ 0xb0
 800eebe:	9f2e      	ldr	r7, [sp, #184]	@ 0xb8
 800eec0:	eddd 4a34 	vldr	s9, [sp, #208]	@ 0xd0
 800eec4:	ed9d 7a33 	vldr	s14, [sp, #204]	@ 0xcc
 800eec8:	ed9d 4a37 	vldr	s8, [sp, #220]	@ 0xdc
 800eecc:	eddd 7a36 	vldr	s15, [sp, #216]	@ 0xd8
 800eed0:	eddd 3a31 	vldr	s7, [sp, #196]	@ 0xc4
 800eed4:	eddd 6a30 	vldr	s13, [sp, #192]	@ 0xc0
 800eed8:	ed9d 5a32 	vldr	s10, [sp, #200]	@ 0xc8
 800eedc:	eddd 5a35 	vldr	s11, [sp, #212]	@ 0xd4
 800eee0:	ed9d 6a38 	vldr	s12, [sp, #224]	@ 0xe0
 800eee4:	469e      	mov	lr, r3
 800eee6:	469c      	mov	ip, r3
 800eee8:	f04f 0900 	mov.w	r9, #0
 800eeec:	f1bc 0f00 	cmp.w	ip, #0
 800eef0:	d147      	bne.n	800ef82 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x43e>
 800eef2:	eb03 0c07 	add.w	ip, r3, r7
 800eef6:	1ad7      	subs	r7, r2, r3
 800eef8:	f1b9 0f00 	cmp.w	r9, #0
 800eefc:	d009      	beq.n	800ef12 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3ce>
 800eefe:	e9cd c72e 	strd	ip, r7, [sp, #184]	@ 0xb8
 800ef02:	9029      	str	r0, [sp, #164]	@ 0xa4
 800ef04:	ed8d 7a33 	vstr	s14, [sp, #204]	@ 0xcc
 800ef08:	edcd 7a36 	vstr	s15, [sp, #216]	@ 0xd8
 800ef0c:	edcd 6a30 	vstr	s13, [sp, #192]	@ 0xc0
 800ef10:	912d      	str	r1, [sp, #180]	@ 0xb4
 800ef12:	991b      	ldr	r1, [sp, #108]	@ 0x6c
 800ef14:	9111      	str	r1, [sp, #68]	@ 0x44
 800ef16:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	@ 0x64
 800ef1a:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	@ 0x78
 800ef1e:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	@ 0x70
 800ef22:	eddd 4a24 	vldr	s9, [sp, #144]	@ 0x90
 800ef26:	eddd 6a23 	vldr	s13, [sp, #140]	@ 0x8c
 800ef2a:	ed9d 4a27 	vldr	s8, [sp, #156]	@ 0x9c
 800ef2e:	ed9d 7a26 	vldr	s14, [sp, #152]	@ 0x98
 800ef32:	eddd 3a21 	vldr	s7, [sp, #132]	@ 0x84
 800ef36:	eddd 7a20 	vldr	s15, [sp, #128]	@ 0x80
 800ef3a:	ed9d 5a22 	vldr	s10, [sp, #136]	@ 0x88
 800ef3e:	eddd 5a25 	vldr	s11, [sp, #148]	@ 0x94
 800ef42:	ed9d 6a28 	vldr	s12, [sp, #160]	@ 0xa0
 800ef46:	f04f 0800 	mov.w	r8, #0
 800ef4a:	f1be 0f00 	cmp.w	lr, #0
 800ef4e:	d031      	beq.n	800efb4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x470>
 800ef50:	9e11      	ldr	r6, [sp, #68]	@ 0x44
 800ef52:	4431      	add	r1, r6
 800ef54:	4549      	cmp	r1, r9
 800ef56:	4450      	add	r0, sl
 800ef58:	ee76 6aa4 	vadd.f32	s13, s13, s9
 800ef5c:	ee37 7a04 	vadd.f32	s14, s14, s8
 800ef60:	ee77 7aa3 	vadd.f32	s15, s15, s7
 800ef64:	db08      	blt.n	800ef78 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x434>
 800ef66:	ee77 7a85 	vadd.f32	s15, s15, s10
 800ef6a:	ee76 6aa5 	vadd.f32	s13, s13, s11
 800ef6e:	ee37 7a06 	vadd.f32	s14, s14, s12
 800ef72:	3001      	adds	r0, #1
 800ef74:	eba1 0109 	sub.w	r1, r1, r9
 800ef78:	f10e 3eff 	add.w	lr, lr, #4294967295
 800ef7c:	f04f 0801 	mov.w	r8, #1
 800ef80:	e7e3      	b.n	800ef4a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x406>
 800ef82:	9e11      	ldr	r6, [sp, #68]	@ 0x44
 800ef84:	4431      	add	r1, r6
 800ef86:	4541      	cmp	r1, r8
 800ef88:	4450      	add	r0, sl
 800ef8a:	ee37 7a24 	vadd.f32	s14, s14, s9
 800ef8e:	ee77 7a84 	vadd.f32	s15, s15, s8
 800ef92:	ee76 6aa3 	vadd.f32	s13, s13, s7
 800ef96:	db08      	blt.n	800efaa <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x466>
 800ef98:	ee76 6a85 	vadd.f32	s13, s13, s10
 800ef9c:	ee37 7a25 	vadd.f32	s14, s14, s11
 800efa0:	ee77 7a86 	vadd.f32	s15, s15, s12
 800efa4:	3001      	adds	r0, #1
 800efa6:	eba1 0108 	sub.w	r1, r1, r8
 800efaa:	f10c 3cff 	add.w	ip, ip, #4294967295
 800efae:	f04f 0901 	mov.w	r9, #1
 800efb2:	e79b      	b.n	800eeec <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3a8>
 800efb4:	449c      	add	ip, r3
 800efb6:	1aff      	subs	r7, r7, r3
 800efb8:	f1b8 0f00 	cmp.w	r8, #0
 800efbc:	d009      	beq.n	800efd2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x48e>
 800efbe:	e9cd c71e 	strd	ip, r7, [sp, #120]	@ 0x78
 800efc2:	9019      	str	r0, [sp, #100]	@ 0x64
 800efc4:	edcd 6a23 	vstr	s13, [sp, #140]	@ 0x8c
 800efc8:	ed8d 7a26 	vstr	s14, [sp, #152]	@ 0x98
 800efcc:	edcd 7a20 	vstr	s15, [sp, #128]	@ 0x80
 800efd0:	911d      	str	r1, [sp, #116]	@ 0x74
 800efd2:	1ad2      	subs	r2, r2, r3
 800efd4:	e68b      	b.n	800ecee <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800efd6:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800efd8:	9a3f      	ldr	r2, [sp, #252]	@ 0xfc
 800efda:	2b00      	cmp	r3, #0
 800efdc:	f000 80d1 	beq.w	800f182 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63e>
 800efe0:	ad19      	add	r5, sp, #100	@ 0x64
 800efe2:	ac39      	add	r4, sp, #228	@ 0xe4
 800efe4:	9b64      	ldr	r3, [sp, #400]	@ 0x190
 800efe6:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 800efea:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 800efee:	930c      	str	r3, [sp, #48]	@ 0x30
 800eff0:	990c      	ldr	r1, [sp, #48]	@ 0x30
 800eff2:	6963      	ldr	r3, [r4, #20]
 800eff4:	440b      	add	r3, r1
 800eff6:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 800effa:	4408      	add	r0, r1
 800effc:	b200      	sxth	r0, r0
 800effe:	4283      	cmp	r3, r0
 800f000:	900d      	str	r0, [sp, #52]	@ 0x34
 800f002:	f280 80c1 	bge.w	800f188 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x644>
 800f006:	428b      	cmp	r3, r1
 800f008:	da08      	bge.n	800f01c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 800f00a:	2a00      	cmp	r2, #0
 800f00c:	dd06      	ble.n	800f01c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 800f00e:	1acb      	subs	r3, r1, r3
 800f010:	429a      	cmp	r2, r3
 800f012:	f2c0 80bb 	blt.w	800f18c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x648>
 800f016:	2b00      	cmp	r3, #0
 800f018:	f300 80b9 	bgt.w	800f18e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x64a>
 800f01c:	6967      	ldr	r7, [r4, #20]
 800f01e:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 800f020:	443b      	add	r3, r7
 800f022:	461f      	mov	r7, r3
 800f024:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 800f026:	1bdf      	subs	r7, r3, r7
 800f028:	4297      	cmp	r7, r2
 800f02a:	bfa8      	it	ge
 800f02c:	4617      	movge	r7, r2
 800f02e:	f10d 0850 	add.w	r8, sp, #80	@ 0x50
 800f032:	2f00      	cmp	r7, #0
 800f034:	f340 813c 	ble.w	800f2b0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x76c>
 800f038:	9b64      	ldr	r3, [sp, #400]	@ 0x190
 800f03a:	6829      	ldr	r1, [r5, #0]
 800f03c:	f9b3 2000 	ldrsh.w	r2, [r3]
 800f040:	f9bb 3000 	ldrsh.w	r3, [fp]
 800f044:	6820      	ldr	r0, [r4, #0]
 800f046:	4411      	add	r1, r2
 800f048:	4299      	cmp	r1, r3
 800f04a:	dd1a      	ble.n	800f082 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 800f04c:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 800f050:	440b      	add	r3, r1
 800f052:	4402      	add	r2, r0
 800f054:	b21b      	sxth	r3, r3
 800f056:	429a      	cmp	r2, r3
 800f058:	dc13      	bgt.n	800f082 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 800f05a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800f05c:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 800f05e:	681b      	ldr	r3, [r3, #0]
 800f060:	9206      	str	r2, [sp, #24]
 800f062:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 800f064:	9205      	str	r2, [sp, #20]
 800f066:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 800f068:	9500      	str	r5, [sp, #0]
 800f06a:	e9cd b203 	strd	fp, r2, [sp, #12]
 800f06e:	9a64      	ldr	r2, [sp, #400]	@ 0x190
 800f070:	9809      	ldr	r0, [sp, #36]	@ 0x24
 800f072:	e9cd 8201 	strd	r8, r2, [sp, #4]
 800f076:	a912      	add	r1, sp, #72	@ 0x48
 800f078:	f8d3 9048 	ldr.w	r9, [r3, #72]	@ 0x48
 800f07c:	aa49      	add	r2, sp, #292	@ 0x124
 800f07e:	4623      	mov	r3, r4
 800f080:	47c8      	blx	r9
 800f082:	e9d4 2300 	ldrd	r2, r3, [r4]
 800f086:	441a      	add	r2, r3
 800f088:	6963      	ldr	r3, [r4, #20]
 800f08a:	ed94 7a0a 	vldr	s14, [r4, #40]	@ 0x28
 800f08e:	edd4 7a0b 	vldr	s15, [r4, #44]	@ 0x2c
 800f092:	edd4 6a0e 	vldr	s13, [r4, #56]	@ 0x38
 800f096:	68a1      	ldr	r1, [r4, #8]
 800f098:	ed94 6a08 	vldr	s12, [r4, #32]
 800f09c:	6022      	str	r2, [r4, #0]
 800f09e:	3301      	adds	r3, #1
 800f0a0:	6163      	str	r3, [r4, #20]
 800f0a2:	69a3      	ldr	r3, [r4, #24]
 800f0a4:	ee37 7a27 	vadd.f32	s14, s14, s15
 800f0a8:	3b01      	subs	r3, #1
 800f0aa:	edd4 7a0d 	vldr	s15, [r4, #52]	@ 0x34
 800f0ae:	61a3      	str	r3, [r4, #24]
 800f0b0:	6923      	ldr	r3, [r4, #16]
 800f0b2:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
 800f0b6:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800f0ba:	edd4 6a07 	vldr	s13, [r4, #28]
 800f0be:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
 800f0c2:	440b      	add	r3, r1
 800f0c4:	68e1      	ldr	r1, [r4, #12]
 800f0c6:	6123      	str	r3, [r4, #16]
 800f0c8:	ee76 6a86 	vadd.f32	s13, s13, s12
 800f0cc:	428b      	cmp	r3, r1
 800f0ce:	edc4 6a07 	vstr	s13, [r4, #28]
 800f0d2:	db15      	blt.n	800f100 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x5bc>
 800f0d4:	ed94 6a09 	vldr	s12, [r4, #36]	@ 0x24
 800f0d8:	ee76 6a26 	vadd.f32	s13, s12, s13
 800f0dc:	3201      	adds	r2, #1
 800f0de:	edc4 6a07 	vstr	s13, [r4, #28]
 800f0e2:	edd4 6a0c 	vldr	s13, [r4, #48]	@ 0x30
 800f0e6:	6022      	str	r2, [r4, #0]
 800f0e8:	ee36 7a87 	vadd.f32	s14, s13, s14
 800f0ec:	1a5b      	subs	r3, r3, r1
 800f0ee:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
 800f0f2:	ed94 7a0f 	vldr	s14, [r4, #60]	@ 0x3c
 800f0f6:	6123      	str	r3, [r4, #16]
 800f0f8:	ee77 7a27 	vadd.f32	s15, s14, s15
 800f0fc:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
 800f100:	e9d5 2300 	ldrd	r2, r3, [r5]
 800f104:	441a      	add	r2, r3
 800f106:	696b      	ldr	r3, [r5, #20]
 800f108:	ed95 7a0a 	vldr	s14, [r5, #40]	@ 0x28
 800f10c:	edd5 7a0b 	vldr	s15, [r5, #44]	@ 0x2c
 800f110:	edd5 6a0e 	vldr	s13, [r5, #56]	@ 0x38
 800f114:	68a9      	ldr	r1, [r5, #8]
 800f116:	ed95 6a08 	vldr	s12, [r5, #32]
 800f11a:	602a      	str	r2, [r5, #0]
 800f11c:	3301      	adds	r3, #1
 800f11e:	616b      	str	r3, [r5, #20]
 800f120:	69ab      	ldr	r3, [r5, #24]
 800f122:	ee37 7a27 	vadd.f32	s14, s14, s15
 800f126:	3b01      	subs	r3, #1
 800f128:	edd5 7a0d 	vldr	s15, [r5, #52]	@ 0x34
 800f12c:	61ab      	str	r3, [r5, #24]
 800f12e:	692b      	ldr	r3, [r5, #16]
 800f130:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
 800f134:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800f138:	edd5 6a07 	vldr	s13, [r5, #28]
 800f13c:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
 800f140:	440b      	add	r3, r1
 800f142:	68e9      	ldr	r1, [r5, #12]
 800f144:	612b      	str	r3, [r5, #16]
 800f146:	ee76 6a86 	vadd.f32	s13, s13, s12
 800f14a:	428b      	cmp	r3, r1
 800f14c:	edc5 6a07 	vstr	s13, [r5, #28]
 800f150:	db15      	blt.n	800f17e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63a>
 800f152:	ed95 6a09 	vldr	s12, [r5, #36]	@ 0x24
 800f156:	ee76 6a26 	vadd.f32	s13, s12, s13
 800f15a:	3201      	adds	r2, #1
 800f15c:	edc5 6a07 	vstr	s13, [r5, #28]
 800f160:	edd5 6a0c 	vldr	s13, [r5, #48]	@ 0x30
 800f164:	602a      	str	r2, [r5, #0]
 800f166:	ee36 7a87 	vadd.f32	s14, s13, s14
 800f16a:	1a5b      	subs	r3, r3, r1
 800f16c:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
 800f170:	ed95 7a0f 	vldr	s14, [r5, #60]	@ 0x3c
 800f174:	612b      	str	r3, [r5, #16]
 800f176:	ee77 7a27 	vadd.f32	s15, s14, s15
 800f17a:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
 800f17e:	3f01      	subs	r7, #1
 800f180:	e757      	b.n	800f032 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4ee>
 800f182:	ad39      	add	r5, sp, #228	@ 0xe4
 800f184:	ac19      	add	r4, sp, #100	@ 0x64
 800f186:	e72d      	b.n	800efe4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4a0>
 800f188:	4613      	mov	r3, r2
 800f18a:	e744      	b.n	800f016 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d2>
 800f18c:	4613      	mov	r3, r2
 800f18e:	e9dd 0a39 	ldrd	r0, sl, [sp, #228]	@ 0xe4
 800f192:	9e3b      	ldr	r6, [sp, #236]	@ 0xec
 800f194:	f8dd c0f8 	ldr.w	ip, [sp, #248]	@ 0xf8
 800f198:	ed9d 7a43 	vldr	s14, [sp, #268]	@ 0x10c
 800f19c:	eddd 4a44 	vldr	s9, [sp, #272]	@ 0x110
 800f1a0:	eddd 7a46 	vldr	s15, [sp, #280]	@ 0x118
 800f1a4:	ed9d 4a47 	vldr	s8, [sp, #284]	@ 0x11c
 800f1a8:	eddd 6a40 	vldr	s13, [sp, #256]	@ 0x100
 800f1ac:	eddd 3a41 	vldr	s7, [sp, #260]	@ 0x104
 800f1b0:	993d      	ldr	r1, [sp, #244]	@ 0xf4
 800f1b2:	f8dd 80f0 	ldr.w	r8, [sp, #240]	@ 0xf0
 800f1b6:	ed9d 5a42 	vldr	s10, [sp, #264]	@ 0x108
 800f1ba:	eddd 5a45 	vldr	s11, [sp, #276]	@ 0x114
 800f1be:	ed9d 6a48 	vldr	s12, [sp, #288]	@ 0x120
 800f1c2:	960e      	str	r6, [sp, #56]	@ 0x38
 800f1c4:	469e      	mov	lr, r3
 800f1c6:	461f      	mov	r7, r3
 800f1c8:	f04f 0900 	mov.w	r9, #0
 800f1cc:	2f00      	cmp	r7, #0
 800f1ce:	d146      	bne.n	800f25e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x71a>
 800f1d0:	449c      	add	ip, r3
 800f1d2:	1ad7      	subs	r7, r2, r3
 800f1d4:	f1b9 0f00 	cmp.w	r9, #0
 800f1d8:	d009      	beq.n	800f1ee <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6aa>
 800f1da:	e9cd c73e 	strd	ip, r7, [sp, #248]	@ 0xf8
 800f1de:	9039      	str	r0, [sp, #228]	@ 0xe4
 800f1e0:	913d      	str	r1, [sp, #244]	@ 0xf4
 800f1e2:	edcd 6a40 	vstr	s13, [sp, #256]	@ 0x100
 800f1e6:	ed8d 7a43 	vstr	s14, [sp, #268]	@ 0x10c
 800f1ea:	edcd 7a46 	vstr	s15, [sp, #280]	@ 0x118
 800f1ee:	991b      	ldr	r1, [sp, #108]	@ 0x6c
 800f1f0:	910e      	str	r1, [sp, #56]	@ 0x38
 800f1f2:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	@ 0x64
 800f1f6:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	@ 0x78
 800f1fa:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	@ 0x70
 800f1fe:	eddd 4a24 	vldr	s9, [sp, #144]	@ 0x90
 800f202:	eddd 6a23 	vldr	s13, [sp, #140]	@ 0x8c
 800f206:	ed9d 4a27 	vldr	s8, [sp, #156]	@ 0x9c
 800f20a:	ed9d 7a26 	vldr	s14, [sp, #152]	@ 0x98
 800f20e:	eddd 3a21 	vldr	s7, [sp, #132]	@ 0x84
 800f212:	eddd 7a20 	vldr	s15, [sp, #128]	@ 0x80
 800f216:	ed9d 5a22 	vldr	s10, [sp, #136]	@ 0x88
 800f21a:	eddd 5a25 	vldr	s11, [sp, #148]	@ 0x94
 800f21e:	ed9d 6a28 	vldr	s12, [sp, #160]	@ 0xa0
 800f222:	f04f 0800 	mov.w	r8, #0
 800f226:	f1be 0f00 	cmp.w	lr, #0
 800f22a:	d030      	beq.n	800f28e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x74a>
 800f22c:	9e0e      	ldr	r6, [sp, #56]	@ 0x38
 800f22e:	4431      	add	r1, r6
 800f230:	4549      	cmp	r1, r9
 800f232:	4450      	add	r0, sl
 800f234:	ee76 6aa4 	vadd.f32	s13, s13, s9
 800f238:	ee37 7a04 	vadd.f32	s14, s14, s8
 800f23c:	ee77 7aa3 	vadd.f32	s15, s15, s7
 800f240:	db08      	blt.n	800f254 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x710>
 800f242:	ee77 7a85 	vadd.f32	s15, s15, s10
 800f246:	ee76 6aa5 	vadd.f32	s13, s13, s11
 800f24a:	ee37 7a06 	vadd.f32	s14, s14, s12
 800f24e:	3001      	adds	r0, #1
 800f250:	eba1 0109 	sub.w	r1, r1, r9
 800f254:	f10e 3eff 	add.w	lr, lr, #4294967295
 800f258:	f04f 0801 	mov.w	r8, #1
 800f25c:	e7e3      	b.n	800f226 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6e2>
 800f25e:	9e0e      	ldr	r6, [sp, #56]	@ 0x38
 800f260:	4431      	add	r1, r6
 800f262:	4541      	cmp	r1, r8
 800f264:	4450      	add	r0, sl
 800f266:	ee37 7a24 	vadd.f32	s14, s14, s9
 800f26a:	ee77 7a84 	vadd.f32	s15, s15, s8
 800f26e:	ee76 6aa3 	vadd.f32	s13, s13, s7
 800f272:	db08      	blt.n	800f286 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x742>
 800f274:	ee76 6a85 	vadd.f32	s13, s13, s10
 800f278:	ee37 7a25 	vadd.f32	s14, s14, s11
 800f27c:	ee77 7a86 	vadd.f32	s15, s15, s12
 800f280:	3001      	adds	r0, #1
 800f282:	eba1 0108 	sub.w	r1, r1, r8
 800f286:	3f01      	subs	r7, #1
 800f288:	f04f 0901 	mov.w	r9, #1
 800f28c:	e79e      	b.n	800f1cc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x688>
 800f28e:	449c      	add	ip, r3
 800f290:	1aff      	subs	r7, r7, r3
 800f292:	f1b8 0f00 	cmp.w	r8, #0
 800f296:	d009      	beq.n	800f2ac <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x768>
 800f298:	e9cd c71e 	strd	ip, r7, [sp, #120]	@ 0x78
 800f29c:	9019      	str	r0, [sp, #100]	@ 0x64
 800f29e:	edcd 6a23 	vstr	s13, [sp, #140]	@ 0x8c
 800f2a2:	ed8d 7a26 	vstr	s14, [sp, #152]	@ 0x98
 800f2a6:	edcd 7a20 	vstr	s15, [sp, #128]	@ 0x80
 800f2aa:	911d      	str	r1, [sp, #116]	@ 0x74
 800f2ac:	1ad2      	subs	r2, r2, r3
 800f2ae:	e6b5      	b.n	800f01c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 800f2b0:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800f2b2:	681b      	ldr	r3, [r3, #0]
 800f2b4:	b923      	cbnz	r3, 800f2c0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800f2b6:	4b04      	ldr	r3, [pc, #16]	@ (800f2c8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x784>)
 800f2b8:	6818      	ldr	r0, [r3, #0]
 800f2ba:	6803      	ldr	r3, [r0, #0]
 800f2bc:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800f2be:	4798      	blx	r3
 800f2c0:	b05b      	add	sp, #364	@ 0x16c
 800f2c2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f2c6:	bf00      	nop
 800f2c8:	200133d4 	.word	0x200133d4

0800f2cc <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>:
 800f2cc:	2b03      	cmp	r3, #3
 800f2ce:	d818      	bhi.n	800f302 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x36>
 800f2d0:	e8df f003 	tbb	[pc, r3]
 800f2d4:	130d0602 	.word	0x130d0602
 800f2d8:	f9b0 2000 	ldrsh.w	r2, [r0]
 800f2dc:	1850      	adds	r0, r2, r1
 800f2de:	4770      	bx	lr
 800f2e0:	8803      	ldrh	r3, [r0, #0]
 800f2e2:	8880      	ldrh	r0, [r0, #4]
 800f2e4:	4418      	add	r0, r3
 800f2e6:	b200      	sxth	r0, r0
 800f2e8:	1a80      	subs	r0, r0, r2
 800f2ea:	3801      	subs	r0, #1
 800f2ec:	4770      	bx	lr
 800f2ee:	8803      	ldrh	r3, [r0, #0]
 800f2f0:	8880      	ldrh	r0, [r0, #4]
 800f2f2:	4418      	add	r0, r3
 800f2f4:	b200      	sxth	r0, r0
 800f2f6:	1a40      	subs	r0, r0, r1
 800f2f8:	e7f7      	b.n	800f2ea <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x1e>
 800f2fa:	f9b0 0000 	ldrsh.w	r0, [r0]
 800f2fe:	4410      	add	r0, r2
 800f300:	4770      	bx	lr
 800f302:	2000      	movs	r0, #0
 800f304:	4770      	bx	lr

0800f306 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>:
 800f306:	2b03      	cmp	r3, #3
 800f308:	d817      	bhi.n	800f33a <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x34>
 800f30a:	e8df f003 	tbb	[pc, r3]
 800f30e:	0602      	.short	0x0602
 800f310:	1009      	.short	0x1009
 800f312:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 800f316:	1850      	adds	r0, r2, r1
 800f318:	4770      	bx	lr
 800f31a:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 800f31e:	e7fa      	b.n	800f316 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x10>
 800f320:	8843      	ldrh	r3, [r0, #2]
 800f322:	88c0      	ldrh	r0, [r0, #6]
 800f324:	4418      	add	r0, r3
 800f326:	b200      	sxth	r0, r0
 800f328:	1a80      	subs	r0, r0, r2
 800f32a:	3801      	subs	r0, #1
 800f32c:	4770      	bx	lr
 800f32e:	8843      	ldrh	r3, [r0, #2]
 800f330:	88c0      	ldrh	r0, [r0, #6]
 800f332:	4418      	add	r0, r3
 800f334:	b200      	sxth	r0, r0
 800f336:	1a40      	subs	r0, r0, r1
 800f338:	e7f7      	b.n	800f32a <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x24>
 800f33a:	2000      	movs	r0, #0
 800f33c:	4770      	bx	lr
	...

0800f340 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE>:
 800f340:	4b01      	ldr	r3, [pc, #4]	@ (800f348 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE+0x8>)
 800f342:	2200      	movs	r2, #0
 800f344:	601a      	str	r2, [r3, #0]
 800f346:	4770      	bx	lr
 800f348:	200133e4 	.word	0x200133e4

0800f34c <_ZN8touchgfx16TouchCalibration4clzuEm>:
 800f34c:	4603      	mov	r3, r0
 800f34e:	b1c8      	cbz	r0, 800f384 <_ZN8touchgfx16TouchCalibration4clzuEm+0x38>
 800f350:	0c02      	lsrs	r2, r0, #16
 800f352:	0412      	lsls	r2, r2, #16
 800f354:	b9a2      	cbnz	r2, 800f380 <_ZN8touchgfx16TouchCalibration4clzuEm+0x34>
 800f356:	0403      	lsls	r3, r0, #16
 800f358:	2010      	movs	r0, #16
 800f35a:	f013 4f7f 	tst.w	r3, #4278190080	@ 0xff000000
 800f35e:	bf04      	itt	eq
 800f360:	021b      	lsleq	r3, r3, #8
 800f362:	3008      	addeq	r0, #8
 800f364:	f013 4f70 	tst.w	r3, #4026531840	@ 0xf0000000
 800f368:	bf04      	itt	eq
 800f36a:	011b      	lsleq	r3, r3, #4
 800f36c:	3004      	addeq	r0, #4
 800f36e:	f013 4f40 	tst.w	r3, #3221225472	@ 0xc0000000
 800f372:	bf04      	itt	eq
 800f374:	009b      	lsleq	r3, r3, #2
 800f376:	3002      	addeq	r0, #2
 800f378:	2b00      	cmp	r3, #0
 800f37a:	db04      	blt.n	800f386 <_ZN8touchgfx16TouchCalibration4clzuEm+0x3a>
 800f37c:	3001      	adds	r0, #1
 800f37e:	4770      	bx	lr
 800f380:	2000      	movs	r0, #0
 800f382:	e7ea      	b.n	800f35a <_ZN8touchgfx16TouchCalibration4clzuEm+0xe>
 800f384:	2020      	movs	r0, #32
 800f386:	4770      	bx	lr

0800f388 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>:
 800f388:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f38c:	b087      	sub	sp, #28
 800f38e:	460d      	mov	r5, r1
 800f390:	4616      	mov	r6, r2
 800f392:	4698      	mov	r8, r3
 800f394:	e9dd 4710 	ldrd	r4, r7, [sp, #64]	@ 0x40
 800f398:	4601      	mov	r1, r0
 800f39a:	b120      	cbz	r0, 800f3a6 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 800f39c:	b11a      	cbz	r2, 800f3a6 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 800f39e:	2d1f      	cmp	r5, #31
 800f3a0:	d801      	bhi.n	800f3a6 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 800f3a2:	2b1f      	cmp	r3, #31
 800f3a4:	d904      	bls.n	800f3b0 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x28>
 800f3a6:	2000      	movs	r0, #0
 800f3a8:	6038      	str	r0, [r7, #0]
 800f3aa:	b007      	add	sp, #28
 800f3ac:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f3b0:	b97d      	cbnz	r5, 800f3d2 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x4a>
 800f3b2:	b143      	cbz	r3, 800f3c6 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x3e>
 800f3b4:	4602      	mov	r2, r0
 800f3b6:	e9cd 4700 	strd	r4, r7, [sp]
 800f3ba:	462b      	mov	r3, r5
 800f3bc:	4641      	mov	r1, r8
 800f3be:	4630      	mov	r0, r6
 800f3c0:	f7ff ffe2 	bl	800f388 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800f3c4:	e7f1      	b.n	800f3aa <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 800f3c6:	f04f 33ff 	mov.w	r3, #4294967295
 800f3ca:	603b      	str	r3, [r7, #0]
 800f3cc:	f06f 4000 	mvn.w	r0, #2147483648	@ 0x80000000
 800f3d0:	e7eb      	b.n	800f3aa <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 800f3d2:	fa32 fa05 	lsrs.w	sl, r2, r5
 800f3d6:	d106      	bne.n	800f3e6 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x5e>
 800f3d8:	4346      	muls	r6, r0
 800f3da:	fbb6 f0f4 	udiv	r0, r6, r4
 800f3de:	fb04 6610 	mls	r6, r4, r0, r6
 800f3e2:	603e      	str	r6, [r7, #0]
 800f3e4:	e7e1      	b.n	800f3aa <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 800f3e6:	2201      	movs	r2, #1
 800f3e8:	40aa      	lsls	r2, r5
 800f3ea:	3a01      	subs	r2, #1
 800f3ec:	4016      	ands	r6, r2
 800f3ee:	fa00 fb05 	lsl.w	fp, r0, r5
 800f3f2:	4630      	mov	r0, r6
 800f3f4:	fbbb f9f4 	udiv	r9, fp, r4
 800f3f8:	fb0a f309 	mul.w	r3, sl, r9
 800f3fc:	9303      	str	r3, [sp, #12]
 800f3fe:	f7ff ffa5 	bl	800f34c <_ZN8touchgfx16TouchCalibration4clzuEm>
 800f402:	462b      	mov	r3, r5
 800f404:	460a      	mov	r2, r1
 800f406:	e9cd 4700 	strd	r4, r7, [sp]
 800f40a:	4601      	mov	r1, r0
 800f40c:	4630      	mov	r0, r6
 800f40e:	f7ff ffbb 	bl	800f388 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800f412:	fb04 b919 	mls	r9, r4, r9, fp
 800f416:	4606      	mov	r6, r0
 800f418:	4648      	mov	r0, r9
 800f41a:	eb05 0108 	add.w	r1, r5, r8
 800f41e:	f7ff ff95 	bl	800f34c <_ZN8touchgfx16TouchCalibration4clzuEm>
 800f422:	ab05      	add	r3, sp, #20
 800f424:	e9cd 4300 	strd	r4, r3, [sp]
 800f428:	464a      	mov	r2, r9
 800f42a:	4603      	mov	r3, r0
 800f42c:	4650      	mov	r0, sl
 800f42e:	f7ff ffab 	bl	800f388 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800f432:	6839      	ldr	r1, [r7, #0]
 800f434:	9a05      	ldr	r2, [sp, #20]
 800f436:	9b03      	ldr	r3, [sp, #12]
 800f438:	4411      	add	r1, r2
 800f43a:	fbb1 f2f4 	udiv	r2, r1, r4
 800f43e:	18d3      	adds	r3, r2, r3
 800f440:	441e      	add	r6, r3
 800f442:	fb04 1412 	mls	r4, r4, r2, r1
 800f446:	4430      	add	r0, r6
 800f448:	603c      	str	r4, [r7, #0]
 800f44a:	e7ae      	b.n	800f3aa <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>

0800f44c <_ZN8touchgfx16TouchCalibration6muldivEllllRl>:
 800f44c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800f450:	b085      	sub	sp, #20
 800f452:	f1b0 0900 	subs.w	r9, r0, #0
 800f456:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 800f458:	461d      	mov	r5, r3
 800f45a:	bfbf      	itttt	lt
 800f45c:	6823      	ldrlt	r3, [r4, #0]
 800f45e:	425b      	neglt	r3, r3
 800f460:	f1c9 0900 	rsblt	r9, r9, #0
 800f464:	6023      	strlt	r3, [r4, #0]
 800f466:	bfb4      	ite	lt
 800f468:	f04f 36ff 	movlt.w	r6, #4294967295
 800f46c:	2601      	movge	r6, #1
 800f46e:	2a00      	cmp	r2, #0
 800f470:	4617      	mov	r7, r2
 800f472:	da04      	bge.n	800f47e <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x32>
 800f474:	6823      	ldr	r3, [r4, #0]
 800f476:	425b      	negs	r3, r3
 800f478:	4257      	negs	r7, r2
 800f47a:	4276      	negs	r6, r6
 800f47c:	6023      	str	r3, [r4, #0]
 800f47e:	2d00      	cmp	r5, #0
 800f480:	4638      	mov	r0, r7
 800f482:	bfba      	itte	lt
 800f484:	426d      	neglt	r5, r5
 800f486:	f04f 38ff 	movlt.w	r8, #4294967295
 800f48a:	f04f 0801 	movge.w	r8, #1
 800f48e:	f7ff ff5d 	bl	800f34c <_ZN8touchgfx16TouchCalibration4clzuEm>
 800f492:	ab03      	add	r3, sp, #12
 800f494:	e9cd 5300 	strd	r5, r3, [sp]
 800f498:	463a      	mov	r2, r7
 800f49a:	4603      	mov	r3, r0
 800f49c:	4648      	mov	r0, r9
 800f49e:	f7ff ff73 	bl	800f388 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800f4a2:	6823      	ldr	r3, [r4, #0]
 800f4a4:	9a03      	ldr	r2, [sp, #12]
 800f4a6:	4546      	cmp	r6, r8
 800f4a8:	441a      	add	r2, r3
 800f4aa:	fb92 f3f5 	sdiv	r3, r2, r5
 800f4ae:	4418      	add	r0, r3
 800f4b0:	bf18      	it	ne
 800f4b2:	4240      	negne	r0, r0
 800f4b4:	fb05 2313 	mls	r3, r5, r3, r2
 800f4b8:	1c72      	adds	r2, r6, #1
 800f4ba:	6023      	str	r3, [r4, #0]
 800f4bc:	d105      	bne.n	800f4ca <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7e>
 800f4be:	2b00      	cmp	r3, #0
 800f4c0:	f1c3 0200 	rsb	r2, r3, #0
 800f4c4:	db0b      	blt.n	800f4de <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x92>
 800f4c6:	6022      	str	r2, [r4, #0]
 800f4c8:	e006      	b.n	800f4d8 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 800f4ca:	2e01      	cmp	r6, #1
 800f4cc:	d104      	bne.n	800f4d8 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 800f4ce:	2b00      	cmp	r3, #0
 800f4d0:	da02      	bge.n	800f4d8 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 800f4d2:	442b      	add	r3, r5
 800f4d4:	3801      	subs	r0, #1
 800f4d6:	6023      	str	r3, [r4, #0]
 800f4d8:	b005      	add	sp, #20
 800f4da:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800f4de:	3801      	subs	r0, #1
 800f4e0:	1b52      	subs	r2, r2, r5
 800f4e2:	e7f0      	b.n	800f4c6 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7a>

0800f4e4 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>:
 800f4e4:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 800f4e8:	4c1c      	ldr	r4, [pc, #112]	@ (800f55c <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x78>)
 800f4ea:	6807      	ldr	r7, [r0, #0]
 800f4ec:	69a3      	ldr	r3, [r4, #24]
 800f4ee:	4605      	mov	r5, r0
 800f4f0:	b92b      	cbnz	r3, 800f4fe <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x1a>
 800f4f2:	6840      	ldr	r0, [r0, #4]
 800f4f4:	e9c5 7000 	strd	r7, r0, [r5]
 800f4f8:	b004      	add	sp, #16
 800f4fa:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800f4fe:	68a2      	ldr	r2, [r4, #8]
 800f500:	6820      	ldr	r0, [r4, #0]
 800f502:	ae04      	add	r6, sp, #16
 800f504:	f04f 0802 	mov.w	r8, #2
 800f508:	fb93 f1f8 	sdiv	r1, r3, r8
 800f50c:	440a      	add	r2, r1
 800f50e:	f846 2d04 	str.w	r2, [r6, #-4]!
 800f512:	69e1      	ldr	r1, [r4, #28]
 800f514:	9600      	str	r6, [sp, #0]
 800f516:	463a      	mov	r2, r7
 800f518:	f7ff ff98 	bl	800f44c <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800f51c:	69a3      	ldr	r3, [r4, #24]
 800f51e:	686a      	ldr	r2, [r5, #4]
 800f520:	6a21      	ldr	r1, [r4, #32]
 800f522:	9600      	str	r6, [sp, #0]
 800f524:	4607      	mov	r7, r0
 800f526:	6860      	ldr	r0, [r4, #4]
 800f528:	f7ff ff90 	bl	800f44c <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800f52c:	6962      	ldr	r2, [r4, #20]
 800f52e:	69a3      	ldr	r3, [r4, #24]
 800f530:	fb93 f8f8 	sdiv	r8, r3, r8
 800f534:	4442      	add	r2, r8
 800f536:	9203      	str	r2, [sp, #12]
 800f538:	6a61      	ldr	r1, [r4, #36]	@ 0x24
 800f53a:	682a      	ldr	r2, [r5, #0]
 800f53c:	9600      	str	r6, [sp, #0]
 800f53e:	4407      	add	r7, r0
 800f540:	68e0      	ldr	r0, [r4, #12]
 800f542:	f7ff ff83 	bl	800f44c <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800f546:	9600      	str	r6, [sp, #0]
 800f548:	4680      	mov	r8, r0
 800f54a:	69a3      	ldr	r3, [r4, #24]
 800f54c:	686a      	ldr	r2, [r5, #4]
 800f54e:	6aa1      	ldr	r1, [r4, #40]	@ 0x28
 800f550:	6920      	ldr	r0, [r4, #16]
 800f552:	f7ff ff7b 	bl	800f44c <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800f556:	4440      	add	r0, r8
 800f558:	e7cc      	b.n	800f4f4 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x10>
 800f55a:	bf00      	nop
 800f55c:	200133e8 	.word	0x200133e8

0800f560 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>:
 800f560:	4b07      	ldr	r3, [pc, #28]	@ (800f580 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x20>)
 800f562:	781b      	ldrb	r3, [r3, #0]
 800f564:	2b01      	cmp	r3, #1
 800f566:	d109      	bne.n	800f57c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x1c>
 800f568:	f9b1 3000 	ldrsh.w	r3, [r1]
 800f56c:	f9b0 2000 	ldrsh.w	r2, [r0]
 800f570:	8003      	strh	r3, [r0, #0]
 800f572:	4b04      	ldr	r3, [pc, #16]	@ (800f584 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x24>)
 800f574:	881b      	ldrh	r3, [r3, #0]
 800f576:	3b01      	subs	r3, #1
 800f578:	1a9b      	subs	r3, r3, r2
 800f57a:	800b      	strh	r3, [r1, #0]
 800f57c:	4770      	bx	lr
 800f57e:	bf00      	nop
 800f580:	200133ca 	.word	0x200133ca
 800f584:	200133c6 	.word	0x200133c6

0800f588 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>:
 800f588:	b510      	push	{r4, lr}
 800f58a:	4b07      	ldr	r3, [pc, #28]	@ (800f5a8 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x20>)
 800f58c:	781b      	ldrb	r3, [r3, #0]
 800f58e:	2b01      	cmp	r3, #1
 800f590:	d108      	bne.n	800f5a4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x1c>
 800f592:	4b06      	ldr	r3, [pc, #24]	@ (800f5ac <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x24>)
 800f594:	880c      	ldrh	r4, [r1, #0]
 800f596:	881b      	ldrh	r3, [r3, #0]
 800f598:	f9b0 2000 	ldrsh.w	r2, [r0]
 800f59c:	3b01      	subs	r3, #1
 800f59e:	1b1b      	subs	r3, r3, r4
 800f5a0:	8003      	strh	r3, [r0, #0]
 800f5a2:	800a      	strh	r2, [r1, #0]
 800f5a4:	bd10      	pop	{r4, pc}
 800f5a6:	bf00      	nop
 800f5a8:	200133ca 	.word	0x200133ca
 800f5ac:	200133c6 	.word	0x200133c6

0800f5b0 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>:
 800f5b0:	b510      	push	{r4, lr}
 800f5b2:	4b0a      	ldr	r3, [pc, #40]	@ (800f5dc <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x2c>)
 800f5b4:	781b      	ldrb	r3, [r3, #0]
 800f5b6:	2b01      	cmp	r3, #1
 800f5b8:	d10e      	bne.n	800f5d8 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x28>
 800f5ba:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 800f5be:	8843      	ldrh	r3, [r0, #2]
 800f5c0:	f9b0 4000 	ldrsh.w	r4, [r0]
 800f5c4:	8044      	strh	r4, [r0, #2]
 800f5c6:	18ca      	adds	r2, r1, r3
 800f5c8:	4b05      	ldr	r3, [pc, #20]	@ (800f5e0 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x30>)
 800f5ca:	881b      	ldrh	r3, [r3, #0]
 800f5cc:	1a9b      	subs	r3, r3, r2
 800f5ce:	8003      	strh	r3, [r0, #0]
 800f5d0:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800f5d4:	80c3      	strh	r3, [r0, #6]
 800f5d6:	8081      	strh	r1, [r0, #4]
 800f5d8:	bd10      	pop	{r4, pc}
 800f5da:	bf00      	nop
 800f5dc:	200133ca 	.word	0x200133ca
 800f5e0:	200133c6 	.word	0x200133c6

0800f5e4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>:
 800f5e4:	4b08      	ldr	r3, [pc, #32]	@ (800f608 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x24>)
 800f5e6:	781b      	ldrb	r3, [r3, #0]
 800f5e8:	2b01      	cmp	r3, #1
 800f5ea:	d10c      	bne.n	800f606 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x22>
 800f5ec:	8803      	ldrh	r3, [r0, #0]
 800f5ee:	f9b0 1004 	ldrsh.w	r1, [r0, #4]
 800f5f2:	8842      	ldrh	r2, [r0, #2]
 800f5f4:	8002      	strh	r2, [r0, #0]
 800f5f6:	185a      	adds	r2, r3, r1
 800f5f8:	4b04      	ldr	r3, [pc, #16]	@ (800f60c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x28>)
 800f5fa:	881b      	ldrh	r3, [r3, #0]
 800f5fc:	1a9b      	subs	r3, r3, r2
 800f5fe:	8043      	strh	r3, [r0, #2]
 800f600:	88c3      	ldrh	r3, [r0, #6]
 800f602:	8083      	strh	r3, [r0, #4]
 800f604:	80c1      	strh	r1, [r0, #6]
 800f606:	4770      	bx	lr
 800f608:	200133ca 	.word	0x200133ca
 800f60c:	200133c6 	.word	0x200133c6

0800f610 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>:
 800f610:	b510      	push	{r4, lr}
 800f612:	4b07      	ldr	r3, [pc, #28]	@ (800f630 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x20>)
 800f614:	781b      	ldrb	r3, [r3, #0]
 800f616:	2b01      	cmp	r3, #1
 800f618:	d108      	bne.n	800f62c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x1c>
 800f61a:	f9b1 3000 	ldrsh.w	r3, [r1]
 800f61e:	f9b0 4000 	ldrsh.w	r4, [r0]
 800f622:	8003      	strh	r3, [r0, #0]
 800f624:	8893      	ldrh	r3, [r2, #4]
 800f626:	3b01      	subs	r3, #1
 800f628:	1b1b      	subs	r3, r3, r4
 800f62a:	800b      	strh	r3, [r1, #0]
 800f62c:	bd10      	pop	{r4, pc}
 800f62e:	bf00      	nop
 800f630:	200133ca 	.word	0x200133ca

0800f634 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>:
 800f634:	b510      	push	{r4, lr}
 800f636:	4b0a      	ldr	r3, [pc, #40]	@ (800f660 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x2c>)
 800f638:	781b      	ldrb	r3, [r3, #0]
 800f63a:	2b01      	cmp	r3, #1
 800f63c:	460a      	mov	r2, r1
 800f63e:	d10d      	bne.n	800f65c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x28>
 800f640:	8881      	ldrh	r1, [r0, #4]
 800f642:	8803      	ldrh	r3, [r0, #0]
 800f644:	440b      	add	r3, r1
 800f646:	4601      	mov	r1, r0
 800f648:	3b01      	subs	r3, #1
 800f64a:	f821 3b02 	strh.w	r3, [r1], #2
 800f64e:	f7ff ffdf 	bl	800f610 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
 800f652:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800f656:	88c2      	ldrh	r2, [r0, #6]
 800f658:	8082      	strh	r2, [r0, #4]
 800f65a:	80c3      	strh	r3, [r0, #6]
 800f65c:	bd10      	pop	{r4, pc}
 800f65e:	bf00      	nop
 800f660:	200133ca 	.word	0x200133ca

0800f664 <_ZN8touchgfx11Application13requestRedrawEv>:
 800f664:	4b06      	ldr	r3, [pc, #24]	@ (800f680 <_ZN8touchgfx11Application13requestRedrawEv+0x1c>)
 800f666:	f9b3 2000 	ldrsh.w	r2, [r3]
 800f66a:	4b06      	ldr	r3, [pc, #24]	@ (800f684 <_ZN8touchgfx11Application13requestRedrawEv+0x20>)
 800f66c:	f8a0 2134 	strh.w	r2, [r0, #308]	@ 0x134
 800f670:	f9b3 3000 	ldrsh.w	r3, [r3]
 800f674:	f8a0 3136 	strh.w	r3, [r0, #310]	@ 0x136
 800f678:	2100      	movs	r1, #0
 800f67a:	f8c0 1130 	str.w	r1, [r0, #304]	@ 0x130
 800f67e:	4770      	bx	lr
 800f680:	200133c6 	.word	0x200133c6
 800f684:	200133c8 	.word	0x200133c8

0800f688 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE>:
 800f688:	4b03      	ldr	r3, [pc, #12]	@ (800f698 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0x10>)
 800f68a:	6818      	ldr	r0, [r3, #0]
 800f68c:	b110      	cbz	r0, 800f694 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0xc>
 800f68e:	6803      	ldr	r3, [r0, #0]
 800f690:	699b      	ldr	r3, [r3, #24]
 800f692:	4718      	bx	r3
 800f694:	4770      	bx	lr
 800f696:	bf00      	nop
 800f698:	20013418 	.word	0x20013418

0800f69c <_ZN8touchgfx11Application29handlePendingScreenTransitionEv>:
 800f69c:	4770      	bx	lr
	...

0800f6a0 <_ZN8touchgfx11Application4drawEv>:
 800f6a0:	b507      	push	{r0, r1, r2, lr}
 800f6a2:	4b09      	ldr	r3, [pc, #36]	@ (800f6c8 <_ZN8touchgfx11Application4drawEv+0x28>)
 800f6a4:	f9b3 2000 	ldrsh.w	r2, [r3]
 800f6a8:	4b08      	ldr	r3, [pc, #32]	@ (800f6cc <_ZN8touchgfx11Application4drawEv+0x2c>)
 800f6aa:	f8ad 2004 	strh.w	r2, [sp, #4]
 800f6ae:	f9b3 3000 	ldrsh.w	r3, [r3]
 800f6b2:	f8ad 3006 	strh.w	r3, [sp, #6]
 800f6b6:	6803      	ldr	r3, [r0, #0]
 800f6b8:	2100      	movs	r1, #0
 800f6ba:	9100      	str	r1, [sp, #0]
 800f6bc:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 800f6be:	4669      	mov	r1, sp
 800f6c0:	4798      	blx	r3
 800f6c2:	b003      	add	sp, #12
 800f6c4:	f85d fb04 	ldr.w	pc, [sp], #4
 800f6c8:	200133c6 	.word	0x200133c6
 800f6cc:	200133c8 	.word	0x200133c8

0800f6d0 <_ZN8touchgfx11Application10invalidateEv>:
 800f6d0:	4b09      	ldr	r3, [pc, #36]	@ (800f6f8 <_ZN8touchgfx11Application10invalidateEv+0x28>)
 800f6d2:	f9b3 2000 	ldrsh.w	r2, [r3]
 800f6d6:	4b09      	ldr	r3, [pc, #36]	@ (800f6fc <_ZN8touchgfx11Application10invalidateEv+0x2c>)
 800f6d8:	b082      	sub	sp, #8
 800f6da:	f9b3 3000 	ldrsh.w	r3, [r3]
 800f6de:	f8ad 2004 	strh.w	r2, [sp, #4]
 800f6e2:	2100      	movs	r1, #0
 800f6e4:	f8ad 3006 	strh.w	r3, [sp, #6]
 800f6e8:	9100      	str	r1, [sp, #0]
 800f6ea:	6803      	ldr	r3, [r0, #0]
 800f6ec:	aa02      	add	r2, sp, #8
 800f6ee:	e912 0006 	ldmdb	r2, {r1, r2}
 800f6f2:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800f6f4:	b002      	add	sp, #8
 800f6f6:	4718      	bx	r3
 800f6f8:	200133c6 	.word	0x200133c6
 800f6fc:	200133c8 	.word	0x200133c8

0800f700 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE>:
 800f700:	4b03      	ldr	r3, [pc, #12]	@ (800f710 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0x10>)
 800f702:	6818      	ldr	r0, [r3, #0]
 800f704:	b110      	cbz	r0, 800f70c <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0xc>
 800f706:	6803      	ldr	r3, [r0, #0]
 800f708:	69db      	ldr	r3, [r3, #28]
 800f70a:	4718      	bx	r3
 800f70c:	4770      	bx	lr
 800f70e:	bf00      	nop
 800f710:	20013418 	.word	0x20013418

0800f714 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE>:
 800f714:	4b03      	ldr	r3, [pc, #12]	@ (800f724 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0x10>)
 800f716:	6818      	ldr	r0, [r3, #0]
 800f718:	b110      	cbz	r0, 800f720 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0xc>
 800f71a:	6803      	ldr	r3, [r0, #0]
 800f71c:	6a1b      	ldr	r3, [r3, #32]
 800f71e:	4718      	bx	r3
 800f720:	4770      	bx	lr
 800f722:	bf00      	nop
 800f724:	20013418 	.word	0x20013418

0800f728 <_ZN8touchgfx11Application16clearCachedAreasEv>:
 800f728:	2300      	movs	r3, #0
 800f72a:	f8a0 30ec 	strh.w	r3, [r0, #236]	@ 0xec
 800f72e:	4770      	bx	lr

0800f730 <_ZN8touchgfx11Application14handleKeyEventEh>:
 800f730:	4b03      	ldr	r3, [pc, #12]	@ (800f740 <_ZN8touchgfx11Application14handleKeyEventEh+0x10>)
 800f732:	6818      	ldr	r0, [r3, #0]
 800f734:	b110      	cbz	r0, 800f73c <_ZN8touchgfx11Application14handleKeyEventEh+0xc>
 800f736:	6803      	ldr	r3, [r0, #0]
 800f738:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800f73a:	4718      	bx	r3
 800f73c:	4770      	bx	lr
 800f73e:	bf00      	nop
 800f740:	20013418 	.word	0x20013418

0800f744 <_ZN8touchgfx11ApplicationD1Ev>:
 800f744:	4770      	bx	lr

0800f746 <_ZN8touchgfx11ApplicationD0Ev>:
 800f746:	b510      	push	{r4, lr}
 800f748:	f44f 719e 	mov.w	r1, #316	@ 0x13c
 800f74c:	4604      	mov	r4, r0
 800f74e:	f012 faea 	bl	8021d26 <_ZdlPvj>
 800f752:	4620      	mov	r0, r4
 800f754:	bd10      	pop	{r4, pc}

0800f756 <_ZNK8touchgfx4Rect9intersectERKS0_>:
 800f756:	b510      	push	{r4, lr}
 800f758:	f9b1 4000 	ldrsh.w	r4, [r1]
 800f75c:	888a      	ldrh	r2, [r1, #4]
 800f75e:	f9b0 3000 	ldrsh.w	r3, [r0]
 800f762:	4422      	add	r2, r4
 800f764:	b212      	sxth	r2, r2
 800f766:	4293      	cmp	r3, r2
 800f768:	da15      	bge.n	800f796 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 800f76a:	8882      	ldrh	r2, [r0, #4]
 800f76c:	4413      	add	r3, r2
 800f76e:	b21b      	sxth	r3, r3
 800f770:	429c      	cmp	r4, r3
 800f772:	da10      	bge.n	800f796 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 800f774:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 800f778:	88c9      	ldrh	r1, [r1, #6]
 800f77a:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 800f77e:	4419      	add	r1, r3
 800f780:	b209      	sxth	r1, r1
 800f782:	428a      	cmp	r2, r1
 800f784:	da07      	bge.n	800f796 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 800f786:	88c0      	ldrh	r0, [r0, #6]
 800f788:	4410      	add	r0, r2
 800f78a:	b200      	sxth	r0, r0
 800f78c:	4283      	cmp	r3, r0
 800f78e:	bfac      	ite	ge
 800f790:	2000      	movge	r0, #0
 800f792:	2001      	movlt	r0, #1
 800f794:	bd10      	pop	{r4, pc}
 800f796:	2000      	movs	r0, #0
 800f798:	e7fc      	b.n	800f794 <_ZNK8touchgfx4Rect9intersectERKS0_+0x3e>

0800f79a <_ZN8touchgfx4Rect10restrictToEss>:
 800f79a:	f9b0 3000 	ldrsh.w	r3, [r0]
 800f79e:	2b00      	cmp	r3, #0
 800f7a0:	b510      	push	{r4, lr}
 800f7a2:	da04      	bge.n	800f7ae <_ZN8touchgfx4Rect10restrictToEss+0x14>
 800f7a4:	8884      	ldrh	r4, [r0, #4]
 800f7a6:	4423      	add	r3, r4
 800f7a8:	8083      	strh	r3, [r0, #4]
 800f7aa:	2300      	movs	r3, #0
 800f7ac:	8003      	strh	r3, [r0, #0]
 800f7ae:	f9b0 4000 	ldrsh.w	r4, [r0]
 800f7b2:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800f7b6:	1b09      	subs	r1, r1, r4
 800f7b8:	428b      	cmp	r3, r1
 800f7ba:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 800f7be:	bfc8      	it	gt
 800f7c0:	8081      	strhgt	r1, [r0, #4]
 800f7c2:	2b00      	cmp	r3, #0
 800f7c4:	da04      	bge.n	800f7d0 <_ZN8touchgfx4Rect10restrictToEss+0x36>
 800f7c6:	88c1      	ldrh	r1, [r0, #6]
 800f7c8:	440b      	add	r3, r1
 800f7ca:	80c3      	strh	r3, [r0, #6]
 800f7cc:	2300      	movs	r3, #0
 800f7ce:	8043      	strh	r3, [r0, #2]
 800f7d0:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 800f7d4:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 800f7d8:	1a52      	subs	r2, r2, r1
 800f7da:	4293      	cmp	r3, r2
 800f7dc:	bfc8      	it	gt
 800f7de:	80c2      	strhgt	r2, [r0, #6]
 800f7e0:	bd10      	pop	{r4, pc}
	...

0800f7e4 <_ZN8touchgfx11Application4drawERNS_4RectE>:
 800f7e4:	b510      	push	{r4, lr}
 800f7e6:	4b10      	ldr	r3, [pc, #64]	@ (800f828 <_ZN8touchgfx11Application4drawERNS_4RectE+0x44>)
 800f7e8:	f9b3 2000 	ldrsh.w	r2, [r3]
 800f7ec:	4b0f      	ldr	r3, [pc, #60]	@ (800f82c <_ZN8touchgfx11Application4drawERNS_4RectE+0x48>)
 800f7ee:	460c      	mov	r4, r1
 800f7f0:	4620      	mov	r0, r4
 800f7f2:	f9b3 1000 	ldrsh.w	r1, [r3]
 800f7f6:	f7ff ffd0 	bl	800f79a <_ZN8touchgfx4Rect10restrictToEss>
 800f7fa:	4b0d      	ldr	r3, [pc, #52]	@ (800f830 <_ZN8touchgfx11Application4drawERNS_4RectE+0x4c>)
 800f7fc:	6818      	ldr	r0, [r3, #0]
 800f7fe:	b190      	cbz	r0, 800f826 <_ZN8touchgfx11Application4drawERNS_4RectE+0x42>
 800f800:	6803      	ldr	r3, [r0, #0]
 800f802:	4621      	mov	r1, r4
 800f804:	689b      	ldr	r3, [r3, #8]
 800f806:	4798      	blx	r3
 800f808:	4b0a      	ldr	r3, [pc, #40]	@ (800f834 <_ZN8touchgfx11Application4drawERNS_4RectE+0x50>)
 800f80a:	6818      	ldr	r0, [r3, #0]
 800f80c:	b118      	cbz	r0, 800f816 <_ZN8touchgfx11Application4drawERNS_4RectE+0x32>
 800f80e:	6803      	ldr	r3, [r0, #0]
 800f810:	4621      	mov	r1, r4
 800f812:	689b      	ldr	r3, [r3, #8]
 800f814:	4798      	blx	r3
 800f816:	4b08      	ldr	r3, [pc, #32]	@ (800f838 <_ZN8touchgfx11Application4drawERNS_4RectE+0x54>)
 800f818:	6818      	ldr	r0, [r3, #0]
 800f81a:	6803      	ldr	r3, [r0, #0]
 800f81c:	4621      	mov	r1, r4
 800f81e:	69db      	ldr	r3, [r3, #28]
 800f820:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800f824:	4718      	bx	r3
 800f826:	bd10      	pop	{r4, pc}
 800f828:	200133c8 	.word	0x200133c8
 800f82c:	200133c6 	.word	0x200133c6
 800f830:	20013418 	.word	0x20013418
 800f834:	20013414 	.word	0x20013414
 800f838:	200133d4 	.word	0x200133d4

0800f83c <_ZNK8touchgfx4Rect8includesERKS0_>:
 800f83c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800f83e:	4606      	mov	r6, r0
 800f840:	4608      	mov	r0, r1
 800f842:	460f      	mov	r7, r1
 800f844:	f7fb fbfb 	bl	800b03e <_ZNK8touchgfx4Rect7isEmptyEv>
 800f848:	b9e8      	cbnz	r0, 800f886 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 800f84a:	f9b7 5000 	ldrsh.w	r5, [r7]
 800f84e:	f9b6 4000 	ldrsh.w	r4, [r6]
 800f852:	42a5      	cmp	r5, r4
 800f854:	db17      	blt.n	800f886 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 800f856:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 800f85a:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
 800f85e:	429a      	cmp	r2, r3
 800f860:	db11      	blt.n	800f886 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 800f862:	88b9      	ldrh	r1, [r7, #4]
 800f864:	440d      	add	r5, r1
 800f866:	88b1      	ldrh	r1, [r6, #4]
 800f868:	440c      	add	r4, r1
 800f86a:	b22d      	sxth	r5, r5
 800f86c:	b224      	sxth	r4, r4
 800f86e:	42a5      	cmp	r5, r4
 800f870:	dc09      	bgt.n	800f886 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 800f872:	88f8      	ldrh	r0, [r7, #6]
 800f874:	4410      	add	r0, r2
 800f876:	88f2      	ldrh	r2, [r6, #6]
 800f878:	4413      	add	r3, r2
 800f87a:	b200      	sxth	r0, r0
 800f87c:	b21b      	sxth	r3, r3
 800f87e:	4298      	cmp	r0, r3
 800f880:	bfcc      	ite	gt
 800f882:	2000      	movgt	r0, #0
 800f884:	2001      	movle	r0, #1
 800f886:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800f888 <_ZN8touchgfx4Rect11expandToFitERKS0_>:
 800f888:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800f88a:	4604      	mov	r4, r0
 800f88c:	4608      	mov	r0, r1
 800f88e:	460d      	mov	r5, r1
 800f890:	f7fb fbd5 	bl	800b03e <_ZNK8touchgfx4Rect7isEmptyEv>
 800f894:	b978      	cbnz	r0, 800f8b6 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
 800f896:	4620      	mov	r0, r4
 800f898:	f7fb fbd1 	bl	800b03e <_ZNK8touchgfx4Rect7isEmptyEv>
 800f89c:	f9b5 6000 	ldrsh.w	r6, [r5]
 800f8a0:	b150      	cbz	r0, 800f8b8 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x30>
 800f8a2:	8026      	strh	r6, [r4, #0]
 800f8a4:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 800f8a8:	8063      	strh	r3, [r4, #2]
 800f8aa:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
 800f8ae:	80a3      	strh	r3, [r4, #4]
 800f8b0:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 800f8b4:	80e3      	strh	r3, [r4, #6]
 800f8b6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800f8b8:	f9b4 1000 	ldrsh.w	r1, [r4]
 800f8bc:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 800f8c0:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
 800f8c4:	f8b5 c004 	ldrh.w	ip, [r5, #4]
 800f8c8:	88ed      	ldrh	r5, [r5, #6]
 800f8ca:	42b1      	cmp	r1, r6
 800f8cc:	460f      	mov	r7, r1
 800f8ce:	bfa8      	it	ge
 800f8d0:	4637      	movge	r7, r6
 800f8d2:	4293      	cmp	r3, r2
 800f8d4:	4618      	mov	r0, r3
 800f8d6:	4466      	add	r6, ip
 800f8d8:	bfa8      	it	ge
 800f8da:	4610      	movge	r0, r2
 800f8dc:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 800f8e0:	8027      	strh	r7, [r4, #0]
 800f8e2:	442a      	add	r2, r5
 800f8e4:	88e5      	ldrh	r5, [r4, #6]
 800f8e6:	8060      	strh	r0, [r4, #2]
 800f8e8:	4461      	add	r1, ip
 800f8ea:	442b      	add	r3, r5
 800f8ec:	b236      	sxth	r6, r6
 800f8ee:	b209      	sxth	r1, r1
 800f8f0:	b212      	sxth	r2, r2
 800f8f2:	b21b      	sxth	r3, r3
 800f8f4:	428e      	cmp	r6, r1
 800f8f6:	bfac      	ite	ge
 800f8f8:	ebc7 0106 	rsbge	r1, r7, r6
 800f8fc:	ebc7 0101 	rsblt	r1, r7, r1
 800f900:	429a      	cmp	r2, r3
 800f902:	bfac      	ite	ge
 800f904:	ebc0 0202 	rsbge	r2, r0, r2
 800f908:	ebc0 0203 	rsblt	r2, r0, r3
 800f90c:	80a1      	strh	r1, [r4, #4]
 800f90e:	80e2      	strh	r2, [r4, #6]
 800f910:	e7d1      	b.n	800f8b6 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
	...

0800f914 <_ZN8touchgfx11Application11getInstanceEv>:
 800f914:	4b01      	ldr	r3, [pc, #4]	@ (800f91c <_ZN8touchgfx11Application11getInstanceEv+0x8>)
 800f916:	6818      	ldr	r0, [r3, #0]
 800f918:	4770      	bx	lr
 800f91a:	bf00      	nop
 800f91c:	20013428 	.word	0x20013428

0800f920 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>:
 800f920:	b510      	push	{r4, lr}
 800f922:	2300      	movs	r3, #0
 800f924:	f8a0 30a4 	strh.w	r3, [r0, #164]	@ 0xa4
 800f928:	f8b0 3080 	ldrh.w	r3, [r0, #128]	@ 0x80
 800f92c:	f8a0 30a6 	strh.w	r3, [r0, #166]	@ 0xa6
 800f930:	4604      	mov	r4, r0
 800f932:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	@ 0xa4
 800f936:	f8b4 20a6 	ldrh.w	r2, [r4, #166]	@ 0xa6
 800f93a:	429a      	cmp	r2, r3
 800f93c:	d90e      	bls.n	800f95c <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x3c>
 800f93e:	18e2      	adds	r2, r4, r3
 800f940:	f892 2084 	ldrb.w	r2, [r2, #132]	@ 0x84
 800f944:	b122      	cbz	r2, 800f950 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x30>
 800f946:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
 800f94a:	6803      	ldr	r3, [r0, #0]
 800f94c:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800f94e:	4798      	blx	r3
 800f950:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	@ 0xa4
 800f954:	3301      	adds	r3, #1
 800f956:	f8a4 30a4 	strh.w	r3, [r4, #164]	@ 0xa4
 800f95a:	e7ea      	b.n	800f932 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x12>
 800f95c:	bd10      	pop	{r4, pc}

0800f95e <_ZN8touchgfx11Application12TimerWidgets5clearEv>:
 800f95e:	2300      	movs	r3, #0
 800f960:	f8a0 3080 	strh.w	r3, [r0, #128]	@ 0x80
 800f964:	f100 0284 	add.w	r2, r0, #132	@ 0x84
 800f968:	30a4      	adds	r0, #164	@ 0xa4
 800f96a:	f802 3b01 	strb.w	r3, [r2], #1
 800f96e:	4282      	cmp	r2, r0
 800f970:	d1fb      	bne.n	800f96a <_ZN8touchgfx11Application12TimerWidgets5clearEv+0xc>
 800f972:	4770      	bx	lr

0800f974 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE>:
 800f974:	b570      	push	{r4, r5, r6, lr}
 800f976:	4c0b      	ldr	r4, [pc, #44]	@ (800f9a4 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x30>)
 800f978:	4605      	mov	r5, r0
 800f97a:	6820      	ldr	r0, [r4, #0]
 800f97c:	460e      	mov	r6, r1
 800f97e:	b110      	cbz	r0, 800f986 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x12>
 800f980:	6803      	ldr	r3, [r0, #0]
 800f982:	695b      	ldr	r3, [r3, #20]
 800f984:	4798      	blx	r3
 800f986:	1d28      	adds	r0, r5, #4
 800f988:	f7ff ffe9 	bl	800f95e <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 800f98c:	6026      	str	r6, [r4, #0]
 800f98e:	6833      	ldr	r3, [r6, #0]
 800f990:	4630      	mov	r0, r6
 800f992:	68db      	ldr	r3, [r3, #12]
 800f994:	4798      	blx	r3
 800f996:	682b      	ldr	r3, [r5, #0]
 800f998:	4628      	mov	r0, r5
 800f99a:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800f99c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800f9a0:	4718      	bx	r3
 800f9a2:	bf00      	nop
 800f9a4:	20013418 	.word	0x20013418

0800f9a8 <_ZN8touchgfx11Application12TimerWidgets7compactEv>:
 800f9a8:	2300      	movs	r3, #0
 800f9aa:	f8b0 c080 	ldrh.w	ip, [r0, #128]	@ 0x80
 800f9ae:	f8b0 10a4 	ldrh.w	r1, [r0, #164]	@ 0xa4
 800f9b2:	b5f0      	push	{r4, r5, r6, r7, lr}
 800f9b4:	461a      	mov	r2, r3
 800f9b6:	461c      	mov	r4, r3
 800f9b8:	461d      	mov	r5, r3
 800f9ba:	459c      	cmp	ip, r3
 800f9bc:	dd1a      	ble.n	800f9f4 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x4c>
 800f9be:	18c6      	adds	r6, r0, r3
 800f9c0:	f896 6084 	ldrb.w	r6, [r6, #132]	@ 0x84
 800f9c4:	b16e      	cbz	r6, 800f9e2 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x3a>
 800f9c6:	429a      	cmp	r2, r3
 800f9c8:	d008      	beq.n	800f9dc <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x34>
 800f9ca:	fa1f fe82 	uxth.w	lr, r2
 800f9ce:	f850 7023 	ldr.w	r7, [r0, r3, lsl #2]
 800f9d2:	f840 702e 	str.w	r7, [r0, lr, lsl #2]
 800f9d6:	1887      	adds	r7, r0, r2
 800f9d8:	f887 6084 	strb.w	r6, [r7, #132]	@ 0x84
 800f9dc:	3201      	adds	r2, #1
 800f9de:	3301      	adds	r3, #1
 800f9e0:	e7eb      	b.n	800f9ba <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x12>
 800f9e2:	f8b0 60a6 	ldrh.w	r6, [r0, #166]	@ 0xa6
 800f9e6:	4299      	cmp	r1, r3
 800f9e8:	bfa8      	it	ge
 800f9ea:	3501      	addge	r5, #1
 800f9ec:	429e      	cmp	r6, r3
 800f9ee:	bfc8      	it	gt
 800f9f0:	3401      	addgt	r4, #1
 800f9f2:	e7f4      	b.n	800f9de <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x36>
 800f9f4:	f8b0 30a6 	ldrh.w	r3, [r0, #166]	@ 0xa6
 800f9f8:	1b49      	subs	r1, r1, r5
 800f9fa:	1b1b      	subs	r3, r3, r4
 800f9fc:	f8a0 10a4 	strh.w	r1, [r0, #164]	@ 0xa4
 800fa00:	f8a0 30a6 	strh.w	r3, [r0, #166]	@ 0xa6
 800fa04:	f8b0 3080 	ldrh.w	r3, [r0, #128]	@ 0x80
 800fa08:	4293      	cmp	r3, r2
 800fa0a:	dd03      	ble.n	800fa14 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x6c>
 800fa0c:	3b01      	subs	r3, #1
 800fa0e:	f8a0 3080 	strh.w	r3, [r0, #128]	@ 0x80
 800fa12:	e7f7      	b.n	800fa04 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x5c>
 800fa14:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

0800fa18 <_ZN8touchgfx11Application15handleTickEventEv>:
 800fa18:	b570      	push	{r4, r5, r6, lr}
 800fa1a:	4d16      	ldr	r5, [pc, #88]	@ (800fa74 <_ZN8touchgfx11Application15handleTickEventEv+0x5c>)
 800fa1c:	4604      	mov	r4, r0
 800fa1e:	6828      	ldr	r0, [r5, #0]
 800fa20:	b140      	cbz	r0, 800fa34 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 800fa22:	7a03      	ldrb	r3, [r0, #8]
 800fa24:	b933      	cbnz	r3, 800fa34 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 800fa26:	f884 3138 	strb.w	r3, [r4, #312]	@ 0x138
 800fa2a:	6803      	ldr	r3, [r0, #0]
 800fa2c:	689b      	ldr	r3, [r3, #8]
 800fa2e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800fa32:	4718      	bx	r3
 800fa34:	f894 3138 	ldrb.w	r3, [r4, #312]	@ 0x138
 800fa38:	4e0f      	ldr	r6, [pc, #60]	@ (800fa78 <_ZN8touchgfx11Application15handleTickEventEv+0x60>)
 800fa3a:	b973      	cbnz	r3, 800fa5a <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 800fa3c:	b168      	cbz	r0, 800fa5a <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 800fa3e:	7a03      	ldrb	r3, [r0, #8]
 800fa40:	b15b      	cbz	r3, 800fa5a <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 800fa42:	6830      	ldr	r0, [r6, #0]
 800fa44:	b110      	cbz	r0, 800fa4c <_ZN8touchgfx11Application15handleTickEventEv+0x34>
 800fa46:	6803      	ldr	r3, [r0, #0]
 800fa48:	691b      	ldr	r3, [r3, #16]
 800fa4a:	4798      	blx	r3
 800fa4c:	6828      	ldr	r0, [r5, #0]
 800fa4e:	6803      	ldr	r3, [r0, #0]
 800fa50:	68db      	ldr	r3, [r3, #12]
 800fa52:	4798      	blx	r3
 800fa54:	2301      	movs	r3, #1
 800fa56:	f884 3138 	strb.w	r3, [r4, #312]	@ 0x138
 800fa5a:	3404      	adds	r4, #4
 800fa5c:	4620      	mov	r0, r4
 800fa5e:	f7ff ff5f 	bl	800f920 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>
 800fa62:	4620      	mov	r0, r4
 800fa64:	f7ff ffa0 	bl	800f9a8 <_ZN8touchgfx11Application12TimerWidgets7compactEv>
 800fa68:	6830      	ldr	r0, [r6, #0]
 800fa6a:	b110      	cbz	r0, 800fa72 <_ZN8touchgfx11Application15handleTickEventEv+0x5a>
 800fa6c:	6803      	ldr	r3, [r0, #0]
 800fa6e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800fa70:	e7dd      	b.n	800fa2e <_ZN8touchgfx11Application15handleTickEventEv+0x16>
 800fa72:	bd70      	pop	{r4, r5, r6, pc}
 800fa74:	2001341c 	.word	0x2001341c
 800fa78:	20013418 	.word	0x20013418

0800fa7c <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>:
 800fa7c:	4603      	mov	r3, r0
 800fa7e:	f100 0140 	add.w	r1, r0, #64	@ 0x40
 800fa82:	2200      	movs	r2, #0
 800fa84:	801a      	strh	r2, [r3, #0]
 800fa86:	805a      	strh	r2, [r3, #2]
 800fa88:	809a      	strh	r2, [r3, #4]
 800fa8a:	80da      	strh	r2, [r3, #6]
 800fa8c:	3308      	adds	r3, #8
 800fa8e:	428b      	cmp	r3, r1
 800fa90:	d1f8      	bne.n	800fa84 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev+0x8>
 800fa92:	f8a0 2040 	strh.w	r2, [r0, #64]	@ 0x40
 800fa96:	4770      	bx	lr

0800fa98 <_ZN8touchgfx11ApplicationC1Ev>:
 800fa98:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800fa9a:	4606      	mov	r6, r0
 800fa9c:	4b1c      	ldr	r3, [pc, #112]	@ (800fb10 <_ZN8touchgfx11ApplicationC1Ev+0x78>)
 800fa9e:	f846 3b04 	str.w	r3, [r6], #4
 800faa2:	4604      	mov	r4, r0
 800faa4:	2500      	movs	r5, #0
 800faa6:	22a8      	movs	r2, #168	@ 0xa8
 800faa8:	2100      	movs	r1, #0
 800faaa:	4630      	mov	r0, r6
 800faac:	f013 fb81 	bl	80231b2 <memset>
 800fab0:	f8a4 5084 	strh.w	r5, [r4, #132]	@ 0x84
 800fab4:	f104 00ac 	add.w	r0, r4, #172	@ 0xac
 800fab8:	f7ff ffe0 	bl	800fa7c <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 800fabc:	f104 00ee 	add.w	r0, r4, #238	@ 0xee
 800fac0:	f7ff ffdc 	bl	800fa7c <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 800fac4:	f8a4 5130 	strh.w	r5, [r4, #304]	@ 0x130
 800fac8:	f8a4 5132 	strh.w	r5, [r4, #306]	@ 0x132
 800facc:	f8a4 5134 	strh.w	r5, [r4, #308]	@ 0x134
 800fad0:	f8a4 5136 	strh.w	r5, [r4, #310]	@ 0x136
 800fad4:	f884 5138 	strb.w	r5, [r4, #312]	@ 0x138
 800fad8:	490e      	ldr	r1, [pc, #56]	@ (800fb14 <_ZN8touchgfx11ApplicationC1Ev+0x7c>)
 800fada:	480f      	ldr	r0, [pc, #60]	@ (800fb18 <_ZN8touchgfx11ApplicationC1Ev+0x80>)
 800fadc:	4f0f      	ldr	r7, [pc, #60]	@ (800fb1c <_ZN8touchgfx11ApplicationC1Ev+0x84>)
 800fade:	f011 faad 	bl	802103c <CRC_Lock>
 800fae2:	4b0f      	ldr	r3, [pc, #60]	@ (800fb20 <_ZN8touchgfx11ApplicationC1Ev+0x88>)
 800fae4:	b158      	cbz	r0, 800fafe <_ZN8touchgfx11ApplicationC1Ev+0x66>
 800fae6:	801d      	strh	r5, [r3, #0]
 800fae8:	4a0e      	ldr	r2, [pc, #56]	@ (800fb24 <_ZN8touchgfx11ApplicationC1Ev+0x8c>)
 800faea:	2300      	movs	r3, #0
 800faec:	6013      	str	r3, [r2, #0]
 800faee:	4a0e      	ldr	r2, [pc, #56]	@ (800fb28 <_ZN8touchgfx11ApplicationC1Ev+0x90>)
 800faf0:	603b      	str	r3, [r7, #0]
 800faf2:	4630      	mov	r0, r6
 800faf4:	6013      	str	r3, [r2, #0]
 800faf6:	f7ff ff32 	bl	800f95e <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 800fafa:	4620      	mov	r0, r4
 800fafc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800fafe:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 800fb02:	2002      	movs	r0, #2
 800fb04:	801a      	strh	r2, [r3, #0]
 800fb06:	6038      	str	r0, [r7, #0]
 800fb08:	f001 ff40 	bl	801198c <_ZN8touchgfx6Screen4drawEv>
 800fb0c:	e7ec      	b.n	800fae8 <_ZN8touchgfx11ApplicationC1Ev+0x50>
 800fb0e:	bf00      	nop
 800fb10:	08025224 	.word	0x08025224
 800fb14:	b5e8b5cd 	.word	0xb5e8b5cd
 800fb18:	f407a5c2 	.word	0xf407a5c2
 800fb1c:	20013418 	.word	0x20013418
 800fb20:	20000194 	.word	0x20000194
 800fb24:	20013428 	.word	0x20013428
 800fb28:	2001341c 	.word	0x2001341c

0800fb2c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>:
 800fb2c:	f8b0 3040 	ldrh.w	r3, [r0, #64]	@ 0x40
 800fb30:	3b01      	subs	r3, #1
 800fb32:	b29b      	uxth	r3, r3
 800fb34:	428b      	cmp	r3, r1
 800fb36:	b510      	push	{r4, lr}
 800fb38:	f8a0 3040 	strh.w	r3, [r0, #64]	@ 0x40
 800fb3c:	d908      	bls.n	800fb50 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x24>
 800fb3e:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 800fb42:	eb00 04c1 	add.w	r4, r0, r1, lsl #3
 800fb46:	681a      	ldr	r2, [r3, #0]
 800fb48:	f840 2031 	str.w	r2, [r0, r1, lsl #3]
 800fb4c:	685a      	ldr	r2, [r3, #4]
 800fb4e:	6062      	str	r2, [r4, #4]
 800fb50:	bd10      	pop	{r4, pc}
	...

0800fb54 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>:
 800fb54:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800fb58:	4b92      	ldr	r3, [pc, #584]	@ (800fda4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x250>)
 800fb5a:	b08f      	sub	sp, #60	@ 0x3c
 800fb5c:	ac0a      	add	r4, sp, #40	@ 0x28
 800fb5e:	e884 0006 	stmia.w	r4, {r1, r2}
 800fb62:	f9b3 2000 	ldrsh.w	r2, [r3]
 800fb66:	4b90      	ldr	r3, [pc, #576]	@ (800fda8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x254>)
 800fb68:	4683      	mov	fp, r0
 800fb6a:	f9b3 1000 	ldrsh.w	r1, [r3]
 800fb6e:	4620      	mov	r0, r4
 800fb70:	f7ff fe13 	bl	800f79a <_ZN8touchgfx4Rect10restrictToEss>
 800fb74:	4620      	mov	r0, r4
 800fb76:	f7fb fa62 	bl	800b03e <_ZNK8touchgfx4Rect7isEmptyEv>
 800fb7a:	2800      	cmp	r0, #0
 800fb7c:	d170      	bne.n	800fc60 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x10c>
 800fb7e:	4b8b      	ldr	r3, [pc, #556]	@ (800fdac <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x258>)
 800fb80:	681b      	ldr	r3, [r3, #0]
 800fb82:	f893 3048 	ldrb.w	r3, [r3, #72]	@ 0x48
 800fb86:	2b02      	cmp	r3, #2
 800fb88:	d06a      	beq.n	800fc60 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x10c>
 800fb8a:	9403      	str	r4, [sp, #12]
 800fb8c:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	@ 0xec
 800fb90:	f10b 03ac 	add.w	r3, fp, #172	@ 0xac
 800fb94:	eb0b 05c4 	add.w	r5, fp, r4, lsl #3
 800fb98:	35a4      	adds	r5, #164	@ 0xa4
 800fb9a:	9301      	str	r3, [sp, #4]
 800fb9c:	b15c      	cbz	r4, 800fbb6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x62>
 800fb9e:	4629      	mov	r1, r5
 800fba0:	9803      	ldr	r0, [sp, #12]
 800fba2:	f7ff fe4b 	bl	800f83c <_ZNK8touchgfx4Rect8includesERKS0_>
 800fba6:	3c01      	subs	r4, #1
 800fba8:	b118      	cbz	r0, 800fbb2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5e>
 800fbaa:	b2a1      	uxth	r1, r4
 800fbac:	9801      	ldr	r0, [sp, #4]
 800fbae:	f7ff ffbd 	bl	800fb2c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800fbb2:	3d08      	subs	r5, #8
 800fbb4:	e7f2      	b.n	800fb9c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x48>
 800fbb6:	f8bb a0ec 	ldrh.w	sl, [fp, #236]	@ 0xec
 800fbba:	f8cd a010 	str.w	sl, [sp, #16]
 800fbbe:	f10a 33ff 	add.w	r3, sl, #4294967295
 800fbc2:	9302      	str	r3, [sp, #8]
 800fbc4:	ea4f 03ca 	mov.w	r3, sl, lsl #3
 800fbc8:	f103 04a4 	add.w	r4, r3, #164	@ 0xa4
 800fbcc:	9306      	str	r3, [sp, #24]
 800fbce:	445c      	add	r4, fp
 800fbd0:	2500      	movs	r5, #0
 800fbd2:	4626      	mov	r6, r4
 800fbd4:	f8cd a014 	str.w	sl, [sp, #20]
 800fbd8:	462f      	mov	r7, r5
 800fbda:	9b05      	ldr	r3, [sp, #20]
 800fbdc:	2b00      	cmp	r3, #0
 800fbde:	d073      	beq.n	800fcc8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x174>
 800fbe0:	9903      	ldr	r1, [sp, #12]
 800fbe2:	4630      	mov	r0, r6
 800fbe4:	f7ff fdb7 	bl	800f756 <_ZNK8touchgfx4Rect9intersectERKS0_>
 800fbe8:	b350      	cbz	r0, 800fc40 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xec>
 800fbea:	f9bd e028 	ldrsh.w	lr, [sp, #40]	@ 0x28
 800fbee:	f9b6 c000 	ldrsh.w	ip, [r6]
 800fbf2:	f9bd 802a 	ldrsh.w	r8, [sp, #42]	@ 0x2a
 800fbf6:	f9b6 9002 	ldrsh.w	r9, [r6, #2]
 800fbfa:	45e6      	cmp	lr, ip
 800fbfc:	db33      	blt.n	800fc66 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x112>
 800fbfe:	f8bd 202c 	ldrh.w	r2, [sp, #44]	@ 0x2c
 800fc02:	88b3      	ldrh	r3, [r6, #4]
 800fc04:	4472      	add	r2, lr
 800fc06:	4463      	add	r3, ip
 800fc08:	b212      	sxth	r2, r2
 800fc0a:	b21b      	sxth	r3, r3
 800fc0c:	429a      	cmp	r2, r3
 800fc0e:	dc2a      	bgt.n	800fc66 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x112>
 800fc10:	88f3      	ldrh	r3, [r6, #6]
 800fc12:	f8bd 102e 	ldrh.w	r1, [sp, #46]	@ 0x2e
 800fc16:	fa1f f289 	uxth.w	r2, r9
 800fc1a:	4413      	add	r3, r2
 800fc1c:	b29b      	uxth	r3, r3
 800fc1e:	45c8      	cmp	r8, r9
 800fc20:	fa1f fc88 	uxth.w	ip, r8
 800fc24:	fa0f fe83 	sxth.w	lr, r3
 800fc28:	db0f      	blt.n	800fc4a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xf6>
 800fc2a:	eba3 030c 	sub.w	r3, r3, ip
 800fc2e:	1ac9      	subs	r1, r1, r3
 800fc30:	b209      	sxth	r1, r1
 800fc32:	2900      	cmp	r1, #0
 800fc34:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
 800fc38:	dd12      	ble.n	800fc60 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x10c>
 800fc3a:	f8ad e02a 	strh.w	lr, [sp, #42]	@ 0x2a
 800fc3e:	4605      	mov	r5, r0
 800fc40:	9b05      	ldr	r3, [sp, #20]
 800fc42:	3b01      	subs	r3, #1
 800fc44:	9305      	str	r3, [sp, #20]
 800fc46:	3e08      	subs	r6, #8
 800fc48:	e7c7      	b.n	800fbda <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x86>
 800fc4a:	4461      	add	r1, ip
 800fc4c:	b209      	sxth	r1, r1
 800fc4e:	4571      	cmp	r1, lr
 800fc50:	dc38      	bgt.n	800fcc4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x170>
 800fc52:	eba2 020c 	sub.w	r2, r2, ip
 800fc56:	b212      	sxth	r2, r2
 800fc58:	f8ad 202e 	strh.w	r2, [sp, #46]	@ 0x2e
 800fc5c:	2a00      	cmp	r2, #0
 800fc5e:	dcee      	bgt.n	800fc3e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
 800fc60:	b00f      	add	sp, #60	@ 0x3c
 800fc62:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800fc66:	45c8      	cmp	r8, r9
 800fc68:	db2c      	blt.n	800fcc4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x170>
 800fc6a:	88f3      	ldrh	r3, [r6, #6]
 800fc6c:	4499      	add	r9, r3
 800fc6e:	f8bd 302e 	ldrh.w	r3, [sp, #46]	@ 0x2e
 800fc72:	4498      	add	r8, r3
 800fc74:	fa0f f989 	sxth.w	r9, r9
 800fc78:	fa0f f888 	sxth.w	r8, r8
 800fc7c:	45c1      	cmp	r9, r8
 800fc7e:	db21      	blt.n	800fcc4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x170>
 800fc80:	88b3      	ldrh	r3, [r6, #4]
 800fc82:	f8bd 102c 	ldrh.w	r1, [sp, #44]	@ 0x2c
 800fc86:	fa1f f28c 	uxth.w	r2, ip
 800fc8a:	4413      	add	r3, r2
 800fc8c:	b29b      	uxth	r3, r3
 800fc8e:	45e6      	cmp	lr, ip
 800fc90:	fa1f f88e 	uxth.w	r8, lr
 800fc94:	fa0f f983 	sxth.w	r9, r3
 800fc98:	db0a      	blt.n	800fcb0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x15c>
 800fc9a:	eba3 0308 	sub.w	r3, r3, r8
 800fc9e:	1ac9      	subs	r1, r1, r3
 800fca0:	b209      	sxth	r1, r1
 800fca2:	2900      	cmp	r1, #0
 800fca4:	f8ad 102c 	strh.w	r1, [sp, #44]	@ 0x2c
 800fca8:	ddda      	ble.n	800fc60 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x10c>
 800fcaa:	f8ad 9028 	strh.w	r9, [sp, #40]	@ 0x28
 800fcae:	e7c6      	b.n	800fc3e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
 800fcb0:	4441      	add	r1, r8
 800fcb2:	b209      	sxth	r1, r1
 800fcb4:	4549      	cmp	r1, r9
 800fcb6:	dc05      	bgt.n	800fcc4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x170>
 800fcb8:	eba2 0208 	sub.w	r2, r2, r8
 800fcbc:	b212      	sxth	r2, r2
 800fcbe:	f8ad 202c 	strh.w	r2, [sp, #44]	@ 0x2c
 800fcc2:	e7cb      	b.n	800fc5c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x108>
 800fcc4:	4607      	mov	r7, r0
 800fcc6:	e7bb      	b.n	800fc40 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xec>
 800fcc8:	2d00      	cmp	r5, #0
 800fcca:	d181      	bne.n	800fbd0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x7c>
 800fccc:	2f00      	cmp	r7, #0
 800fcce:	f000 81df 	beq.w	8010090 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53c>
 800fcd2:	f9bd 6028 	ldrsh.w	r6, [sp, #40]	@ 0x28
 800fcd6:	f9bd 702a 	ldrsh.w	r7, [sp, #42]	@ 0x2a
 800fcda:	f8bd a02e 	ldrh.w	sl, [sp, #46]	@ 0x2e
 800fcde:	b2b3      	uxth	r3, r6
 800fce0:	9305      	str	r3, [sp, #20]
 800fce2:	9a05      	ldr	r2, [sp, #20]
 800fce4:	f8bd 302c 	ldrh.w	r3, [sp, #44]	@ 0x2c
 800fce8:	4413      	add	r3, r2
 800fcea:	b2ba      	uxth	r2, r7
 800fcec:	4492      	add	sl, r2
 800fcee:	b29b      	uxth	r3, r3
 800fcf0:	fa1f fa8a 	uxth.w	sl, sl
 800fcf4:	fa0f f883 	sxth.w	r8, r3
 800fcf8:	fa0f f98a 	sxth.w	r9, sl
 800fcfc:	e9cd 2307 	strd	r2, r3, [sp, #28]
 800fd00:	9b04      	ldr	r3, [sp, #16]
 800fd02:	2b00      	cmp	r3, #0
 800fd04:	d054      	beq.n	800fdb0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x25c>
 800fd06:	9903      	ldr	r1, [sp, #12]
 800fd08:	4620      	mov	r0, r4
 800fd0a:	f7ff fd24 	bl	800f756 <_ZNK8touchgfx4Rect9intersectERKS0_>
 800fd0e:	e9dd 2307 	ldrd	r2, r3, [sp, #28]
 800fd12:	b1c0      	cbz	r0, 800fd46 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f2>
 800fd14:	f9b4 e000 	ldrsh.w	lr, [r4]
 800fd18:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 800fd1c:	4576      	cmp	r6, lr
 800fd1e:	dc22      	bgt.n	800fd66 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x212>
 800fd20:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 800fd24:	44f4      	add	ip, lr
 800fd26:	fa0f fc8c 	sxth.w	ip, ip
 800fd2a:	45e0      	cmp	r8, ip
 800fd2c:	db1b      	blt.n	800fd66 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x212>
 800fd2e:	428f      	cmp	r7, r1
 800fd30:	fa1f fc81 	uxth.w	ip, r1
 800fd34:	88e1      	ldrh	r1, [r4, #6]
 800fd36:	dc0d      	bgt.n	800fd54 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x200>
 800fd38:	ebaa 0c0c 	sub.w	ip, sl, ip
 800fd3c:	eba1 010c 	sub.w	r1, r1, ip
 800fd40:	f8a4 9002 	strh.w	r9, [r4, #2]
 800fd44:	80e1      	strh	r1, [r4, #6]
 800fd46:	4628      	mov	r0, r5
 800fd48:	9904      	ldr	r1, [sp, #16]
 800fd4a:	3901      	subs	r1, #1
 800fd4c:	9104      	str	r1, [sp, #16]
 800fd4e:	3c08      	subs	r4, #8
 800fd50:	4605      	mov	r5, r0
 800fd52:	e7d3      	b.n	800fcfc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a8>
 800fd54:	4461      	add	r1, ip
 800fd56:	b209      	sxth	r1, r1
 800fd58:	4549      	cmp	r1, r9
 800fd5a:	dcf5      	bgt.n	800fd48 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f4>
 800fd5c:	eba2 0c0c 	sub.w	ip, r2, ip
 800fd60:	f8a4 c006 	strh.w	ip, [r4, #6]
 800fd64:	e7ef      	b.n	800fd46 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f2>
 800fd66:	428f      	cmp	r7, r1
 800fd68:	dcee      	bgt.n	800fd48 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f4>
 800fd6a:	f8b4 c006 	ldrh.w	ip, [r4, #6]
 800fd6e:	4461      	add	r1, ip
 800fd70:	b209      	sxth	r1, r1
 800fd72:	4589      	cmp	r9, r1
 800fd74:	dbe8      	blt.n	800fd48 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f4>
 800fd76:	4576      	cmp	r6, lr
 800fd78:	fa1f fc8e 	uxth.w	ip, lr
 800fd7c:	88a1      	ldrh	r1, [r4, #4]
 800fd7e:	dc07      	bgt.n	800fd90 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x23c>
 800fd80:	eba3 0c0c 	sub.w	ip, r3, ip
 800fd84:	eba1 010c 	sub.w	r1, r1, ip
 800fd88:	f8a4 8000 	strh.w	r8, [r4]
 800fd8c:	80a1      	strh	r1, [r4, #4]
 800fd8e:	e7da      	b.n	800fd46 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f2>
 800fd90:	4461      	add	r1, ip
 800fd92:	b209      	sxth	r1, r1
 800fd94:	4588      	cmp	r8, r1
 800fd96:	dbd7      	blt.n	800fd48 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f4>
 800fd98:	9905      	ldr	r1, [sp, #20]
 800fd9a:	eba1 0c0c 	sub.w	ip, r1, ip
 800fd9e:	f8a4 c004 	strh.w	ip, [r4, #4]
 800fda2:	e7d0      	b.n	800fd46 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f2>
 800fda4:	200133c8 	.word	0x200133c8
 800fda8:	200133c6 	.word	0x200133c6
 800fdac:	200133d4 	.word	0x200133d4
 800fdb0:	2d00      	cmp	r5, #0
 800fdb2:	f000 816d 	beq.w	8010090 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53c>
 800fdb6:	9b06      	ldr	r3, [sp, #24]
 800fdb8:	445b      	add	r3, fp
 800fdba:	461c      	mov	r4, r3
 800fdbc:	9b02      	ldr	r3, [sp, #8]
 800fdbe:	3301      	adds	r3, #1
 800fdc0:	f000 8166 	beq.w	8010090 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53c>
 800fdc4:	f104 05a4 	add.w	r5, r4, #164	@ 0xa4
 800fdc8:	4629      	mov	r1, r5
 800fdca:	9803      	ldr	r0, [sp, #12]
 800fdcc:	f7ff fd36 	bl	800f83c <_ZNK8touchgfx4Rect8includesERKS0_>
 800fdd0:	b120      	cbz	r0, 800fddc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x288>
 800fdd2:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 800fdd6:	9801      	ldr	r0, [sp, #4]
 800fdd8:	f7ff fea8 	bl	800fb2c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800fddc:	9903      	ldr	r1, [sp, #12]
 800fdde:	4628      	mov	r0, r5
 800fde0:	f7ff fcb9 	bl	800f756 <_ZNK8touchgfx4Rect9intersectERKS0_>
 800fde4:	2800      	cmp	r0, #0
 800fde6:	f000 809c 	beq.w	800ff22 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ce>
 800fdea:	f9b4 90a4 	ldrsh.w	r9, [r4, #164]	@ 0xa4
 800fdee:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	@ 0xa8
 800fdf2:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	@ 0x28
 800fdf6:	9309      	str	r3, [sp, #36]	@ 0x24
 800fdf8:	fa1f f189 	uxth.w	r1, r9
 800fdfc:	eb01 0c03 	add.w	ip, r1, r3
 800fe00:	fa1f fa8c 	uxth.w	sl, ip
 800fe04:	f8bd c02c 	ldrh.w	ip, [sp, #44]	@ 0x2c
 800fe08:	f9bd e02a 	ldrsh.w	lr, [sp, #42]	@ 0x2a
 800fe0c:	f9b4 20a6 	ldrsh.w	r2, [r4, #166]	@ 0xa6
 800fe10:	b283      	uxth	r3, r0
 800fe12:	eb03 050c 	add.w	r5, r3, ip
 800fe16:	b2ad      	uxth	r5, r5
 800fe18:	9505      	str	r5, [sp, #20]
 800fe1a:	f9bd 5014 	ldrsh.w	r5, [sp, #20]
 800fe1e:	9504      	str	r5, [sp, #16]
 800fe20:	4548      	cmp	r0, r9
 800fe22:	f8bb 50ec 	ldrh.w	r5, [fp, #236]	@ 0xec
 800fe26:	f340 8099 	ble.w	800ff5c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x408>
 800fe2a:	1a5b      	subs	r3, r3, r1
 800fe2c:	b29b      	uxth	r3, r3
 800fe2e:	4596      	cmp	lr, r2
 800fe30:	fa0f f08a 	sxth.w	r0, sl
 800fe34:	b21e      	sxth	r6, r3
 800fe36:	dd2e      	ble.n	800fe96 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x342>
 800fe38:	9f02      	ldr	r7, [sp, #8]
 800fe3a:	f8bd 402e 	ldrh.w	r4, [sp, #46]	@ 0x2e
 800fe3e:	eb0b 08c7 	add.w	r8, fp, r7, lsl #3
 800fe42:	9f04      	ldr	r7, [sp, #16]
 800fe44:	1a3f      	subs	r7, r7, r0
 800fe46:	f8b8 00b2 	ldrh.w	r0, [r8, #178]	@ 0xb2
 800fe4a:	fa1f fe8e 	uxth.w	lr, lr
 800fe4e:	b292      	uxth	r2, r2
 800fe50:	ebae 0102 	sub.w	r1, lr, r2
 800fe54:	44a6      	add	lr, r4
 800fe56:	4402      	add	r2, r0
 800fe58:	b289      	uxth	r1, r1
 800fe5a:	fa0f fe8e 	sxth.w	lr, lr
 800fe5e:	b212      	sxth	r2, r2
 800fe60:	b20d      	sxth	r5, r1
 800fe62:	ebae 0202 	sub.w	r2, lr, r2
 800fe66:	436f      	muls	r7, r5
 800fe68:	4372      	muls	r2, r6
 800fe6a:	4297      	cmp	r7, r2
 800fe6c:	db09      	blt.n	800fe82 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x32e>
 800fe6e:	f8b8 20ac 	ldrh.w	r2, [r8, #172]	@ 0xac
 800fe72:	f8a8 50b2 	strh.w	r5, [r8, #178]	@ 0xb2
 800fe76:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
 800fe7a:	449c      	add	ip, r3
 800fe7c:	f8ad c02c 	strh.w	ip, [sp, #44]	@ 0x2c
 800fe80:	e684      	b.n	800fb8c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x38>
 800fe82:	4421      	add	r1, r4
 800fe84:	f8b8 30ae 	ldrh.w	r3, [r8, #174]	@ 0xae
 800fe88:	f8a8 60b0 	strh.w	r6, [r8, #176]	@ 0xb0
 800fe8c:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
 800fe90:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
 800fe94:	e67a      	b.n	800fb8c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x38>
 800fe96:	9f04      	ldr	r7, [sp, #16]
 800fe98:	42b8      	cmp	r0, r7
 800fe9a:	da27      	bge.n	800feec <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x398>
 800fe9c:	9902      	ldr	r1, [sp, #8]
 800fe9e:	f8bd 502e 	ldrh.w	r5, [sp, #46]	@ 0x2e
 800fea2:	eb0b 04c1 	add.w	r4, fp, r1, lsl #3
 800fea6:	eb05 010e 	add.w	r1, r5, lr
 800feaa:	fa1f f881 	uxth.w	r8, r1
 800feae:	f8b4 10b2 	ldrh.w	r1, [r4, #178]	@ 0xb2
 800feb2:	4411      	add	r1, r2
 800feb4:	eba1 0108 	sub.w	r1, r1, r8
 800feb8:	b289      	uxth	r1, r1
 800feba:	fa0f f988 	sxth.w	r9, r8
 800febe:	eba2 020e 	sub.w	r2, r2, lr
 800fec2:	fa0f f881 	sxth.w	r8, r1
 800fec6:	1a3f      	subs	r7, r7, r0
 800fec8:	4372      	muls	r2, r6
 800feca:	fb08 f707 	mul.w	r7, r8, r7
 800fece:	42ba      	cmp	r2, r7
 800fed0:	dc06      	bgt.n	800fee0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x38c>
 800fed2:	f8a4 90ae 	strh.w	r9, [r4, #174]	@ 0xae
 800fed6:	f8a4 80b2 	strh.w	r8, [r4, #178]	@ 0xb2
 800feda:	f8b4 20ac 	ldrh.w	r2, [r4, #172]	@ 0xac
 800fede:	e7ca      	b.n	800fe76 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x322>
 800fee0:	f8a4 60b0 	strh.w	r6, [r4, #176]	@ 0xb0
 800fee4:	4429      	add	r1, r5
 800fee6:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
 800feea:	e64f      	b.n	800fb8c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x38>
 800feec:	9805      	ldr	r0, [sp, #20]
 800feee:	ebaa 0000 	sub.w	r0, sl, r0
 800fef2:	b280      	uxth	r0, r0
 800fef4:	2d06      	cmp	r5, #6
 800fef6:	fa0f fe80 	sxth.w	lr, r0
 800fefa:	d817      	bhi.n	800ff2c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3d8>
 800fefc:	9b04      	ldr	r3, [sp, #16]
 800fefe:	f8a4 30a4 	strh.w	r3, [r4, #164]	@ 0xa4
 800ff02:	1c6b      	adds	r3, r5, #1
 800ff04:	f9b4 10aa 	ldrsh.w	r1, [r4, #170]	@ 0xaa
 800ff08:	f8a4 e0a8 	strh.w	lr, [r4, #168]	@ 0xa8
 800ff0c:	f8ab 30ec 	strh.w	r3, [fp, #236]	@ 0xec
 800ff10:	9b01      	ldr	r3, [sp, #4]
 800ff12:	9801      	ldr	r0, [sp, #4]
 800ff14:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 800ff18:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
 800ff1c:	805a      	strh	r2, [r3, #2]
 800ff1e:	809e      	strh	r6, [r3, #4]
 800ff20:	80d9      	strh	r1, [r3, #6]
 800ff22:	9b02      	ldr	r3, [sp, #8]
 800ff24:	3b01      	subs	r3, #1
 800ff26:	9302      	str	r3, [sp, #8]
 800ff28:	3c08      	subs	r4, #8
 800ff2a:	e747      	b.n	800fdbc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x268>
 800ff2c:	9a02      	ldr	r2, [sp, #8]
 800ff2e:	45b6      	cmp	lr, r6
 800ff30:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 800ff34:	db0d      	blt.n	800ff52 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3fe>
 800ff36:	449c      	add	ip, r3
 800ff38:	fa1f fc8c 	uxth.w	ip, ip
 800ff3c:	445a      	add	r2, fp
 800ff3e:	f8ad c02c 	strh.w	ip, [sp, #44]	@ 0x2c
 800ff42:	448c      	add	ip, r1
 800ff44:	f8ad 9028 	strh.w	r9, [sp, #40]	@ 0x28
 800ff48:	f8a2 c0ac 	strh.w	ip, [r2, #172]	@ 0xac
 800ff4c:	f8a2 e0b0 	strh.w	lr, [r2, #176]	@ 0xb0
 800ff50:	e61c      	b.n	800fb8c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x38>
 800ff52:	445a      	add	r2, fp
 800ff54:	4484      	add	ip, r0
 800ff56:	f8a2 60b0 	strh.w	r6, [r2, #176]	@ 0xb0
 800ff5a:	e78f      	b.n	800fe7c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x328>
 800ff5c:	f8bd 602e 	ldrh.w	r6, [sp, #46]	@ 0x2e
 800ff60:	fa1f f18e 	uxth.w	r1, lr
 800ff64:	eb01 0806 	add.w	r8, r1, r6
 800ff68:	b293      	uxth	r3, r2
 800ff6a:	fa1f f888 	uxth.w	r8, r8
 800ff6e:	9306      	str	r3, [sp, #24]
 800ff70:	fa0f f388 	sxth.w	r3, r8
 800ff74:	9307      	str	r3, [sp, #28]
 800ff76:	9f06      	ldr	r7, [sp, #24]
 800ff78:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	@ 0xaa
 800ff7c:	443b      	add	r3, r7
 800ff7e:	b29b      	uxth	r3, r3
 800ff80:	4596      	cmp	lr, r2
 800ff82:	9308      	str	r3, [sp, #32]
 800ff84:	da24      	bge.n	800ffd0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x47c>
 800ff86:	9905      	ldr	r1, [sp, #20]
 800ff88:	eba3 0308 	sub.w	r3, r3, r8
 800ff8c:	ebaa 0401 	sub.w	r4, sl, r1
 800ff90:	b2a4      	uxth	r4, r4
 800ff92:	b29b      	uxth	r3, r3
 800ff94:	b225      	sxth	r5, r4
 800ff96:	b219      	sxth	r1, r3
 800ff98:	eba2 020e 	sub.w	r2, r2, lr
 800ff9c:	eba9 0000 	sub.w	r0, r9, r0
 800ffa0:	436a      	muls	r2, r5
 800ffa2:	4348      	muls	r0, r1
 800ffa4:	4282      	cmp	r2, r0
 800ffa6:	9a02      	ldr	r2, [sp, #8]
 800ffa8:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 800ffac:	445a      	add	r2, fp
 800ffae:	dc06      	bgt.n	800ffbe <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x46a>
 800ffb0:	9b07      	ldr	r3, [sp, #28]
 800ffb2:	f8a2 10b2 	strh.w	r1, [r2, #178]	@ 0xb2
 800ffb6:	f8a2 30ae 	strh.w	r3, [r2, #174]	@ 0xae
 800ffba:	44a4      	add	ip, r4
 800ffbc:	e75e      	b.n	800fe7c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x328>
 800ffbe:	9904      	ldr	r1, [sp, #16]
 800ffc0:	f8a2 50b0 	strh.w	r5, [r2, #176]	@ 0xb0
 800ffc4:	f8a2 10ac 	strh.w	r1, [r2, #172]	@ 0xac
 800ffc8:	4433      	add	r3, r6
 800ffca:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
 800ffce:	e5dd      	b.n	800fb8c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x38>
 800ffd0:	9f06      	ldr	r7, [sp, #24]
 800ffd2:	9b04      	ldr	r3, [sp, #16]
 800ffd4:	1bc9      	subs	r1, r1, r7
 800ffd6:	fa0f f78a 	sxth.w	r7, sl
 800ffda:	b289      	uxth	r1, r1
 800ffdc:	429f      	cmp	r7, r3
 800ffde:	fa0f fe81 	sxth.w	lr, r1
 800ffe2:	dd23      	ble.n	801002c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4d8>
 800ffe4:	9a05      	ldr	r2, [sp, #20]
 800ffe6:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 800ffea:	9d07      	ldr	r5, [sp, #28]
 800ffec:	ebaa 0202 	sub.w	r2, sl, r2
 800fff0:	b292      	uxth	r2, r2
 800fff2:	eba5 0a03 	sub.w	sl, r5, r3
 800fff6:	b214      	sxth	r4, r2
 800fff8:	eba9 0000 	sub.w	r0, r9, r0
 800fffc:	9b02      	ldr	r3, [sp, #8]
 800fffe:	fb0e f000 	mul.w	r0, lr, r0
 8010002:	fb04 fa0a 	mul.w	sl, r4, sl
 8010006:	00db      	lsls	r3, r3, #3
 8010008:	4550      	cmp	r0, sl
 801000a:	445b      	add	r3, fp
 801000c:	db03      	blt.n	8010016 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4c2>
 801000e:	f8a3 e0b2 	strh.w	lr, [r3, #178]	@ 0xb2
 8010012:	4494      	add	ip, r2
 8010014:	e732      	b.n	800fe7c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x328>
 8010016:	9a04      	ldr	r2, [sp, #16]
 8010018:	f8a3 20ac 	strh.w	r2, [r3, #172]	@ 0xac
 801001c:	f8a3 40b0 	strh.w	r4, [r3, #176]	@ 0xb0
 8010020:	f8b3 30ae 	ldrh.w	r3, [r3, #174]	@ 0xae
 8010024:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
 8010028:	4431      	add	r1, r6
 801002a:	e75c      	b.n	800fee6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x392>
 801002c:	9b08      	ldr	r3, [sp, #32]
 801002e:	eba3 0308 	sub.w	r3, r3, r8
 8010032:	b29b      	uxth	r3, r3
 8010034:	2d06      	cmp	r5, #6
 8010036:	b218      	sxth	r0, r3
 8010038:	d813      	bhi.n	8010062 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x50e>
 801003a:	9b07      	ldr	r3, [sp, #28]
 801003c:	f8a4 30a6 	strh.w	r3, [r4, #166]	@ 0xa6
 8010040:	1c6b      	adds	r3, r5, #1
 8010042:	f8a4 00aa 	strh.w	r0, [r4, #170]	@ 0xaa
 8010046:	f8ab 30ec 	strh.w	r3, [fp, #236]	@ 0xec
 801004a:	9b01      	ldr	r3, [sp, #4]
 801004c:	9901      	ldr	r1, [sp, #4]
 801004e:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 8010052:	f821 9035 	strh.w	r9, [r1, r5, lsl #3]
 8010056:	805a      	strh	r2, [r3, #2]
 8010058:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 801005a:	809a      	strh	r2, [r3, #4]
 801005c:	f8a3 e006 	strh.w	lr, [r3, #6]
 8010060:	e75f      	b.n	800ff22 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ce>
 8010062:	9c02      	ldr	r4, [sp, #8]
 8010064:	4570      	cmp	r0, lr
 8010066:	ea4f 04c4 	mov.w	r4, r4, lsl #3
 801006a:	db0d      	blt.n	8010088 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x534>
 801006c:	4431      	add	r1, r6
 801006e:	9b06      	ldr	r3, [sp, #24]
 8010070:	f8ad 202a 	strh.w	r2, [sp, #42]	@ 0x2a
 8010074:	b289      	uxth	r1, r1
 8010076:	445c      	add	r4, fp
 8010078:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
 801007c:	4419      	add	r1, r3
 801007e:	f8a4 10ae 	strh.w	r1, [r4, #174]	@ 0xae
 8010082:	f8a4 00b2 	strh.w	r0, [r4, #178]	@ 0xb2
 8010086:	e581      	b.n	800fb8c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x38>
 8010088:	445c      	add	r4, fp
 801008a:	f8a4 e0b2 	strh.w	lr, [r4, #178]	@ 0xb2
 801008e:	e79b      	b.n	800ffc8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x474>
 8010090:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	@ 0xec
 8010094:	1e65      	subs	r5, r4, #1
 8010096:	b2ad      	uxth	r5, r5
 8010098:	eb0b 04c4 	add.w	r4, fp, r4, lsl #3
 801009c:	f64f 76ff 	movw	r6, #65535	@ 0xffff
 80100a0:	42b5      	cmp	r5, r6
 80100a2:	d044      	beq.n	801012e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5da>
 80100a4:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
 80100a8:	f9b4 00a6 	ldrsh.w	r0, [r4, #166]	@ 0xa6
 80100ac:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	@ 0x28
 80100b0:	f9b4 70a4 	ldrsh.w	r7, [r4, #164]	@ 0xa4
 80100b4:	4282      	cmp	r2, r0
 80100b6:	d11f      	bne.n	80100f8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5a4>
 80100b8:	f9bd c02e 	ldrsh.w	ip, [sp, #46]	@ 0x2e
 80100bc:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	@ 0xaa
 80100c0:	459c      	cmp	ip, r3
 80100c2:	d119      	bne.n	80100f8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5a4>
 80100c4:	f8b4 30a8 	ldrh.w	r3, [r4, #168]	@ 0xa8
 80100c8:	f8bd 202c 	ldrh.w	r2, [sp, #44]	@ 0x2c
 80100cc:	19d8      	adds	r0, r3, r7
 80100ce:	b200      	sxth	r0, r0
 80100d0:	4288      	cmp	r0, r1
 80100d2:	d109      	bne.n	80100e8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
 80100d4:	f8ad 7028 	strh.w	r7, [sp, #40]	@ 0x28
 80100d8:	4413      	add	r3, r2
 80100da:	f8ad 302c 	strh.w	r3, [sp, #44]	@ 0x2c
 80100de:	4629      	mov	r1, r5
 80100e0:	9801      	ldr	r0, [sp, #4]
 80100e2:	f7ff fd23 	bl	800fb2c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 80100e6:	e003      	b.n	80100f0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x59c>
 80100e8:	4411      	add	r1, r2
 80100ea:	b209      	sxth	r1, r1
 80100ec:	42b9      	cmp	r1, r7
 80100ee:	d0f3      	beq.n	80100d8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x584>
 80100f0:	3d01      	subs	r5, #1
 80100f2:	b2ad      	uxth	r5, r5
 80100f4:	3c08      	subs	r4, #8
 80100f6:	e7d3      	b.n	80100a0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x54c>
 80100f8:	42b9      	cmp	r1, r7
 80100fa:	d1f9      	bne.n	80100f0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x59c>
 80100fc:	f9bd 102c 	ldrsh.w	r1, [sp, #44]	@ 0x2c
 8010100:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	@ 0xa8
 8010104:	4299      	cmp	r1, r3
 8010106:	d1f3      	bne.n	80100f0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x59c>
 8010108:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	@ 0xaa
 801010c:	f8bd 102e 	ldrh.w	r1, [sp, #46]	@ 0x2e
 8010110:	181f      	adds	r7, r3, r0
 8010112:	b23f      	sxth	r7, r7
 8010114:	42ba      	cmp	r2, r7
 8010116:	d105      	bne.n	8010124 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5d0>
 8010118:	f8ad 002a 	strh.w	r0, [sp, #42]	@ 0x2a
 801011c:	440b      	add	r3, r1
 801011e:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
 8010122:	e7dc      	b.n	80100de <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58a>
 8010124:	440a      	add	r2, r1
 8010126:	b212      	sxth	r2, r2
 8010128:	4290      	cmp	r0, r2
 801012a:	d1e1      	bne.n	80100f0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x59c>
 801012c:	e7f6      	b.n	801011c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5c8>
 801012e:	f8bb 60ec 	ldrh.w	r6, [fp, #236]	@ 0xec
 8010132:	2e07      	cmp	r6, #7
 8010134:	ea4f 04c6 	mov.w	r4, r6, lsl #3
 8010138:	d812      	bhi.n	8010160 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x60c>
 801013a:	1c75      	adds	r5, r6, #1
 801013c:	f8ab 50ec 	strh.w	r5, [fp, #236]	@ 0xec
 8010140:	9d01      	ldr	r5, [sp, #4]
 8010142:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	@ 0x28
 8010146:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	@ 0x2a
 801014a:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
 801014e:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	@ 0x2e
 8010152:	f825 0036 	strh.w	r0, [r5, r6, lsl #3]
 8010156:	442c      	add	r4, r5
 8010158:	8061      	strh	r1, [r4, #2]
 801015a:	80a2      	strh	r2, [r4, #4]
 801015c:	80e3      	strh	r3, [r4, #6]
 801015e:	e57f      	b.n	800fc60 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x10c>
 8010160:	f10b 03ac 	add.w	r3, fp, #172	@ 0xac
 8010164:	3e01      	subs	r6, #1
 8010166:	445c      	add	r4, fp
 8010168:	f06f 4a00 	mvn.w	sl, #2147483648	@ 0x80000000
 801016c:	f04f 37ff 	mov.w	r7, #4294967295
 8010170:	2500      	movs	r5, #0
 8010172:	9305      	str	r3, [sp, #20]
 8010174:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	@ 0xa8
 8010178:	9302      	str	r3, [sp, #8]
 801017a:	1e72      	subs	r2, r6, #1
 801017c:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	@ 0xaa
 8010180:	9304      	str	r3, [sp, #16]
 8010182:	4691      	mov	r9, r2
 8010184:	f104 03a4 	add.w	r3, r4, #164	@ 0xa4
 8010188:	f1b9 3fff 	cmp.w	r9, #4294967295
 801018c:	bf14      	ite	ne
 801018e:	9905      	ldrne	r1, [sp, #20]
 8010190:	f8dd e00c 	ldreq.w	lr, [sp, #12]
 8010194:	6818      	ldr	r0, [r3, #0]
 8010196:	9207      	str	r2, [sp, #28]
 8010198:	bf18      	it	ne
 801019a:	eb01 0ec9 	addne.w	lr, r1, r9, lsl #3
 801019e:	f10d 0c30 	add.w	ip, sp, #48	@ 0x30
 80101a2:	f8be 1006 	ldrh.w	r1, [lr, #6]
 80101a6:	f8be 8004 	ldrh.w	r8, [lr, #4]
 80101aa:	9306      	str	r3, [sp, #24]
 80101ac:	fb18 f801 	smulbb	r8, r8, r1
 80101b0:	6859      	ldr	r1, [r3, #4]
 80101b2:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 80101b6:	4671      	mov	r1, lr
 80101b8:	a80c      	add	r0, sp, #48	@ 0x30
 80101ba:	f7ff fb65 	bl	800f888 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 80101be:	f8bd 1036 	ldrh.w	r1, [sp, #54]	@ 0x36
 80101c2:	f8bd 0034 	ldrh.w	r0, [sp, #52]	@ 0x34
 80101c6:	9b04      	ldr	r3, [sp, #16]
 80101c8:	9a02      	ldr	r2, [sp, #8]
 80101ca:	fb10 f001 	smulbb	r0, r0, r1
 80101ce:	fb02 8803 	mla	r8, r2, r3, r8
 80101d2:	eba0 0108 	sub.w	r1, r0, r8
 80101d6:	f04f 0c08 	mov.w	ip, #8
 80101da:	fb90 f0fc 	sdiv	r0, r0, ip
 80101de:	4288      	cmp	r0, r1
 80101e0:	dc20      	bgt.n	8010224 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6d0>
 80101e2:	4551      	cmp	r1, sl
 80101e4:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 80101e8:	da03      	bge.n	80101f2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x69e>
 80101ea:	b1d9      	cbz	r1, 8010224 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6d0>
 80101ec:	468a      	mov	sl, r1
 80101ee:	464f      	mov	r7, r9
 80101f0:	4635      	mov	r5, r6
 80101f2:	f109 39ff 	add.w	r9, r9, #4294967295
 80101f6:	f119 0f02 	cmn.w	r9, #2
 80101fa:	d1c5      	bne.n	8010188 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x634>
 80101fc:	4616      	mov	r6, r2
 80101fe:	3201      	adds	r2, #1
 8010200:	f1a4 0408 	sub.w	r4, r4, #8
 8010204:	d1b6      	bne.n	8010174 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x620>
 8010206:	9b01      	ldr	r3, [sp, #4]
 8010208:	b2ac      	uxth	r4, r5
 801020a:	00ed      	lsls	r5, r5, #3
 801020c:	1958      	adds	r0, r3, r5
 801020e:	1c7b      	adds	r3, r7, #1
 8010210:	d10b      	bne.n	801022a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6d6>
 8010212:	4601      	mov	r1, r0
 8010214:	9803      	ldr	r0, [sp, #12]
 8010216:	f7ff fb37 	bl	800f888 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 801021a:	4621      	mov	r1, r4
 801021c:	9801      	ldr	r0, [sp, #4]
 801021e:	f7ff fc85 	bl	800fb2c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8010222:	e4b3      	b.n	800fb8c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x38>
 8010224:	464f      	mov	r7, r9
 8010226:	4635      	mov	r5, r6
 8010228:	e7ed      	b.n	8010206 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6b2>
 801022a:	9b01      	ldr	r3, [sp, #4]
 801022c:	00ff      	lsls	r7, r7, #3
 801022e:	19d9      	adds	r1, r3, r7
 8010230:	f7ff fb2a 	bl	800f888 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 8010234:	9b03      	ldr	r3, [sp, #12]
 8010236:	cb03      	ldmia	r3!, {r0, r1}
 8010238:	445f      	add	r7, fp
 801023a:	445d      	add	r5, fp
 801023c:	f8c7 00ac 	str.w	r0, [r7, #172]	@ 0xac
 8010240:	f8c7 10b0 	str.w	r1, [r7, #176]	@ 0xb0
 8010244:	f855 0fac 	ldr.w	r0, [r5, #172]!
 8010248:	9b03      	ldr	r3, [sp, #12]
 801024a:	6869      	ldr	r1, [r5, #4]
 801024c:	c303      	stmia	r3!, {r0, r1}
 801024e:	e7e4      	b.n	801021a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c6>

08010250 <_ZN8touchgfx11Application15drawCachedAreasEv>:
 8010250:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010254:	f500 7698 	add.w	r6, r0, #304	@ 0x130
 8010258:	b0a1      	sub	sp, #132	@ 0x84
 801025a:	4604      	mov	r4, r0
 801025c:	4630      	mov	r0, r6
 801025e:	f7fa feee 	bl	800b03e <_ZNK8touchgfx4Rect7isEmptyEv>
 8010262:	4605      	mov	r5, r0
 8010264:	b948      	cbnz	r0, 801027a <_ZN8touchgfx11Application15drawCachedAreasEv+0x2a>
 8010266:	6823      	ldr	r3, [r4, #0]
 8010268:	e896 0006 	ldmia.w	r6, {r1, r2}
 801026c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 801026e:	4620      	mov	r0, r4
 8010270:	4798      	blx	r3
 8010272:	f8c4 5130 	str.w	r5, [r4, #304]	@ 0x130
 8010276:	f8c4 5134 	str.w	r5, [r4, #308]	@ 0x134
 801027a:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	@ 0xec
 801027e:	2b00      	cmp	r3, #0
 8010280:	d149      	bne.n	8010316 <_ZN8touchgfx11Application15drawCachedAreasEv+0xc6>
 8010282:	4bb1      	ldr	r3, [pc, #708]	@ (8010548 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2f8>)
 8010284:	681b      	ldr	r3, [r3, #0]
 8010286:	f893 7048 	ldrb.w	r7, [r3, #72]	@ 0x48
 801028a:	1ebb      	subs	r3, r7, #2
 801028c:	425f      	negs	r7, r3
 801028e:	415f      	adcs	r7, r3
 8010290:	4bae      	ldr	r3, [pc, #696]	@ (801054c <_ZN8touchgfx11Application15drawCachedAreasEv+0x2fc>)
 8010292:	681b      	ldr	r3, [r3, #0]
 8010294:	2b00      	cmp	r3, #0
 8010296:	d040      	beq.n	801031a <_ZN8touchgfx11Application15drawCachedAreasEv+0xca>
 8010298:	4dad      	ldr	r5, [pc, #692]	@ (8010550 <_ZN8touchgfx11Application15drawCachedAreasEv+0x300>)
 801029a:	4628      	mov	r0, r5
 801029c:	f7fa fecf 	bl	800b03e <_ZNK8touchgfx4Rect7isEmptyEv>
 80102a0:	4606      	mov	r6, r0
 80102a2:	2800      	cmp	r0, #0
 80102a4:	d139      	bne.n	801031a <_ZN8touchgfx11Application15drawCachedAreasEv+0xca>
 80102a6:	4628      	mov	r0, r5
 80102a8:	f7ff f982 	bl	800f5b0 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 80102ac:	6823      	ldr	r3, [r4, #0]
 80102ae:	6829      	ldr	r1, [r5, #0]
 80102b0:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80102b2:	686a      	ldr	r2, [r5, #4]
 80102b4:	4620      	mov	r0, r4
 80102b6:	4798      	blx	r3
 80102b8:	802e      	strh	r6, [r5, #0]
 80102ba:	806e      	strh	r6, [r5, #2]
 80102bc:	80ae      	strh	r6, [r5, #4]
 80102be:	80ee      	strh	r6, [r5, #6]
 80102c0:	af0f      	add	r7, sp, #60	@ 0x3c
 80102c2:	4ea4      	ldr	r6, [pc, #656]	@ (8010554 <_ZN8touchgfx11Application15drawCachedAreasEv+0x304>)
 80102c4:	4638      	mov	r0, r7
 80102c6:	f7ff fbd9 	bl	800fa7c <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 80102ca:	8835      	ldrh	r5, [r6, #0]
 80102cc:	f8b4 c0ec 	ldrh.w	ip, [r4, #236]	@ 0xec
 80102d0:	462b      	mov	r3, r5
 80102d2:	f104 00ac 	add.w	r0, r4, #172	@ 0xac
 80102d6:	4563      	cmp	r3, ip
 80102d8:	d224      	bcs.n	8010324 <_ZN8touchgfx11Application15drawCachedAreasEv+0xd4>
 80102da:	f8bd 107c 	ldrh.w	r1, [sp, #124]	@ 0x7c
 80102de:	2907      	cmp	r1, #7
 80102e0:	d816      	bhi.n	8010310 <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
 80102e2:	eb00 02c3 	add.w	r2, r0, r3, lsl #3
 80102e6:	f930 9033 	ldrsh.w	r9, [r0, r3, lsl #3]
 80102ea:	f9b2 a002 	ldrsh.w	sl, [r2, #2]
 80102ee:	f9b2 8004 	ldrsh.w	r8, [r2, #4]
 80102f2:	f9b2 e006 	ldrsh.w	lr, [r2, #6]
 80102f6:	1c4a      	adds	r2, r1, #1
 80102f8:	f8ad 207c 	strh.w	r2, [sp, #124]	@ 0x7c
 80102fc:	eb07 02c1 	add.w	r2, r7, r1, lsl #3
 8010300:	f827 9031 	strh.w	r9, [r7, r1, lsl #3]
 8010304:	f8a2 a002 	strh.w	sl, [r2, #2]
 8010308:	f8a2 8004 	strh.w	r8, [r2, #4]
 801030c:	f8a2 e006 	strh.w	lr, [r2, #6]
 8010310:	3301      	adds	r3, #1
 8010312:	b29b      	uxth	r3, r3
 8010314:	e7df      	b.n	80102d6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x86>
 8010316:	2701      	movs	r7, #1
 8010318:	e7ba      	b.n	8010290 <_ZN8touchgfx11Application15drawCachedAreasEv+0x40>
 801031a:	2f00      	cmp	r7, #0
 801031c:	d1d0      	bne.n	80102c0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x70>
 801031e:	b021      	add	sp, #132	@ 0x84
 8010320:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010324:	f8b4 312e 	ldrh.w	r3, [r4, #302]	@ 0x12e
 8010328:	42ab      	cmp	r3, r5
 801032a:	d90c      	bls.n	8010346 <_ZN8touchgfx11Application15drawCachedAreasEv+0xf6>
 801032c:	eb04 03c5 	add.w	r3, r4, r5, lsl #3
 8010330:	6822      	ldr	r2, [r4, #0]
 8010332:	f8d3 10ee 	ldr.w	r1, [r3, #238]	@ 0xee
 8010336:	6c17      	ldr	r7, [r2, #64]	@ 0x40
 8010338:	f8d3 20f2 	ldr.w	r2, [r3, #242]	@ 0xf2
 801033c:	4620      	mov	r0, r4
 801033e:	3501      	adds	r5, #1
 8010340:	47b8      	blx	r7
 8010342:	b2ad      	uxth	r5, r5
 8010344:	e7ee      	b.n	8010324 <_ZN8touchgfx11Application15drawCachedAreasEv+0xd4>
 8010346:	4d80      	ldr	r5, [pc, #512]	@ (8010548 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2f8>)
 8010348:	6828      	ldr	r0, [r5, #0]
 801034a:	f890 3048 	ldrb.w	r3, [r0, #72]	@ 0x48
 801034e:	2b01      	cmp	r3, #1
 8010350:	f040 813b 	bne.w	80105ca <_ZN8touchgfx11Application15drawCachedAreasEv+0x37a>
 8010354:	4a80      	ldr	r2, [pc, #512]	@ (8010558 <_ZN8touchgfx11Application15drawCachedAreasEv+0x308>)
 8010356:	8833      	ldrh	r3, [r6, #0]
 8010358:	7812      	ldrb	r2, [r2, #0]
 801035a:	f8b4 00ec 	ldrh.w	r0, [r4, #236]	@ 0xec
 801035e:	2a01      	cmp	r2, #1
 8010360:	d014      	beq.n	801038c <_ZN8touchgfx11Application15drawCachedAreasEv+0x13c>
 8010362:	eb04 02c3 	add.w	r2, r4, r3, lsl #3
 8010366:	32ae      	adds	r2, #174	@ 0xae
 8010368:	f04f 0900 	mov.w	r9, #0
 801036c:	4283      	cmp	r3, r0
 801036e:	f102 0208 	add.w	r2, r2, #8
 8010372:	f280 8082 	bge.w	801047a <_ZN8touchgfx11Application15drawCachedAreasEv+0x22a>
 8010376:	f832 1c04 	ldrh.w	r1, [r2, #-4]
 801037a:	f832 7c08 	ldrh.w	r7, [r2, #-8]
 801037e:	4439      	add	r1, r7
 8010380:	b209      	sxth	r1, r1
 8010382:	4589      	cmp	r9, r1
 8010384:	bfb8      	it	lt
 8010386:	4689      	movlt	r9, r1
 8010388:	3301      	adds	r3, #1
 801038a:	e7ef      	b.n	801036c <_ZN8touchgfx11Application15drawCachedAreasEv+0x11c>
 801038c:	4f73      	ldr	r7, [pc, #460]	@ (801055c <_ZN8touchgfx11Application15drawCachedAreasEv+0x30c>)
 801038e:	883a      	ldrh	r2, [r7, #0]
 8010390:	4693      	mov	fp, r2
 8010392:	4283      	cmp	r3, r0
 8010394:	da08      	bge.n	80103a8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x158>
 8010396:	eb04 01c3 	add.w	r1, r4, r3, lsl #3
 801039a:	3301      	adds	r3, #1
 801039c:	f9b1 10ac 	ldrsh.w	r1, [r1, #172]	@ 0xac
 80103a0:	458b      	cmp	fp, r1
 80103a2:	bfa8      	it	ge
 80103a4:	468b      	movge	fp, r1
 80103a6:	e7f4      	b.n	8010392 <_ZN8touchgfx11Application15drawCachedAreasEv+0x142>
 80103a8:	2300      	movs	r3, #0
 80103aa:	2a0f      	cmp	r2, #15
 80103ac:	f8df 91b0 	ldr.w	r9, [pc, #432]	@ 8010560 <_ZN8touchgfx11Application15drawCachedAreasEv+0x310>
 80103b0:	f8ad 202c 	strh.w	r2, [sp, #44]	@ 0x2c
 80103b4:	bf8c      	ite	hi
 80103b6:	ea4f 08d2 	movhi.w	r8, r2, lsr #3
 80103ba:	f04f 0801 	movls.w	r8, #1
 80103be:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
 80103c2:	f8ad 3030 	strh.w	r3, [sp, #48]	@ 0x30
 80103c6:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 80103ca:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 80103ce:	6828      	ldr	r0, [r5, #0]
 80103d0:	455b      	cmp	r3, fp
 80103d2:	f340 80c7 	ble.w	8010564 <_ZN8touchgfx11Application15drawCachedAreasEv+0x314>
 80103d6:	6803      	ldr	r3, [r0, #0]
 80103d8:	f8b7 a000 	ldrh.w	sl, [r7]
 80103dc:	f8d3 30a8 	ldr.w	r3, [r3, #168]	@ 0xa8
 80103e0:	4798      	blx	r3
 80103e2:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	@ 0x2c
 80103e6:	682b      	ldr	r3, [r5, #0]
 80103e8:	ebaa 0000 	sub.w	r0, sl, r0
 80103ec:	b280      	uxth	r0, r0
 80103ee:	ebac 0e08 	sub.w	lr, ip, r8
 80103f2:	4570      	cmp	r0, lr
 80103f4:	f893 107c 	ldrb.w	r1, [r3, #124]	@ 0x7c
 80103f8:	f893 206a 	ldrb.w	r2, [r3, #106]	@ 0x6a
 80103fc:	dd05      	ble.n	801040a <_ZN8touchgfx11Application15drawCachedAreasEv+0x1ba>
 80103fe:	4558      	cmp	r0, fp
 8010400:	dd03      	ble.n	801040a <_ZN8touchgfx11Application15drawCachedAreasEv+0x1ba>
 8010402:	b901      	cbnz	r1, 8010406 <_ZN8touchgfx11Application15drawCachedAreasEv+0x1b6>
 8010404:	b392      	cbz	r2, 801046c <_ZN8touchgfx11Application15drawCachedAreasEv+0x21c>
 8010406:	4658      	mov	r0, fp
 8010408:	e006      	b.n	8010418 <_ZN8touchgfx11Application15drawCachedAreasEv+0x1c8>
 801040a:	2900      	cmp	r1, #0
 801040c:	d1fb      	bne.n	8010406 <_ZN8touchgfx11Application15drawCachedAreasEv+0x1b6>
 801040e:	2a00      	cmp	r2, #0
 8010410:	d1f9      	bne.n	8010406 <_ZN8touchgfx11Application15drawCachedAreasEv+0x1b6>
 8010412:	4558      	cmp	r0, fp
 8010414:	bfb8      	it	lt
 8010416:	4658      	movlt	r0, fp
 8010418:	f9b9 3000 	ldrsh.w	r3, [r9]
 801041c:	f8ad 002c 	strh.w	r0, [sp, #44]	@ 0x2c
 8010420:	2200      	movs	r2, #0
 8010422:	ebac 0000 	sub.w	r0, ip, r0
 8010426:	f8b6 a000 	ldrh.w	sl, [r6]
 801042a:	f8ad 202e 	strh.w	r2, [sp, #46]	@ 0x2e
 801042e:	f8ad 0030 	strh.w	r0, [sp, #48]	@ 0x30
 8010432:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 8010436:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	@ 0xec
 801043a:	4553      	cmp	r3, sl
 801043c:	ddc5      	ble.n	80103ca <_ZN8touchgfx11Application15drawCachedAreasEv+0x17a>
 801043e:	eb04 02ca 	add.w	r2, r4, sl, lsl #3
 8010442:	ab0d      	add	r3, sp, #52	@ 0x34
 8010444:	f852 0fac 	ldr.w	r0, [r2, #172]!
 8010448:	6851      	ldr	r1, [r2, #4]
 801044a:	c303      	stmia	r3!, {r0, r1}
 801044c:	a80d      	add	r0, sp, #52	@ 0x34
 801044e:	a90b      	add	r1, sp, #44	@ 0x2c
 8010450:	f7fa fdb2 	bl	800afb8 <_ZN8touchgfx4RectaNERKS0_>
 8010454:	a80d      	add	r0, sp, #52	@ 0x34
 8010456:	f7fa fdf2 	bl	800b03e <_ZNK8touchgfx4Rect7isEmptyEv>
 801045a:	b920      	cbnz	r0, 8010466 <_ZN8touchgfx11Application15drawCachedAreasEv+0x216>
 801045c:	6823      	ldr	r3, [r4, #0]
 801045e:	a90d      	add	r1, sp, #52	@ 0x34
 8010460:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8010462:	4620      	mov	r0, r4
 8010464:	4798      	blx	r3
 8010466:	f10a 0a01 	add.w	sl, sl, #1
 801046a:	e7e4      	b.n	8010436 <_ZN8touchgfx11Application15drawCachedAreasEv+0x1e6>
 801046c:	681a      	ldr	r2, [r3, #0]
 801046e:	2101      	movs	r1, #1
 8010470:	f8d2 20a4 	ldr.w	r2, [r2, #164]	@ 0xa4
 8010474:	4618      	mov	r0, r3
 8010476:	4790      	blx	r2
 8010478:	e7a7      	b.n	80103ca <_ZN8touchgfx11Application15drawCachedAreasEv+0x17a>
 801047a:	4b39      	ldr	r3, [pc, #228]	@ (8010560 <_ZN8touchgfx11Application15drawCachedAreasEv+0x310>)
 801047c:	f8df 80dc 	ldr.w	r8, [pc, #220]	@ 801055c <_ZN8touchgfx11Application15drawCachedAreasEv+0x30c>
 8010480:	881f      	ldrh	r7, [r3, #0]
 8010482:	2300      	movs	r3, #0
 8010484:	e9cd 330b 	strd	r3, r3, [sp, #44]	@ 0x2c
 8010488:	2f0f      	cmp	r7, #15
 801048a:	bf8c      	ite	hi
 801048c:	08ff      	lsrhi	r7, r7, #3
 801048e:	2701      	movls	r7, #1
 8010490:	f8bd 3032 	ldrh.w	r3, [sp, #50]	@ 0x32
 8010494:	f8bd 202e 	ldrh.w	r2, [sp, #46]	@ 0x2e
 8010498:	6828      	ldr	r0, [r5, #0]
 801049a:	4413      	add	r3, r2
 801049c:	b21b      	sxth	r3, r3
 801049e:	454b      	cmp	r3, r9
 80104a0:	da60      	bge.n	8010564 <_ZN8touchgfx11Application15drawCachedAreasEv+0x314>
 80104a2:	6803      	ldr	r3, [r0, #0]
 80104a4:	f8d3 30a8 	ldr.w	r3, [r3, #168]	@ 0xa8
 80104a8:	4798      	blx	r3
 80104aa:	f8bd e02e 	ldrh.w	lr, [sp, #46]	@ 0x2e
 80104ae:	f8bd 3032 	ldrh.w	r3, [sp, #50]	@ 0x32
 80104b2:	682a      	ldr	r2, [r5, #0]
 80104b4:	4473      	add	r3, lr
 80104b6:	b21b      	sxth	r3, r3
 80104b8:	eb03 0e07 	add.w	lr, r3, r7
 80104bc:	4570      	cmp	r0, lr
 80104be:	f892 c07c 	ldrb.w	ip, [r2, #124]	@ 0x7c
 80104c2:	f892 106a 	ldrb.w	r1, [r2, #106]	@ 0x6a
 80104c6:	da0d      	bge.n	80104e4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x294>
 80104c8:	4548      	cmp	r0, r9
 80104ca:	da0b      	bge.n	80104e4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x294>
 80104cc:	f1bc 0f00 	cmp.w	ip, #0
 80104d0:	d138      	bne.n	8010544 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2f4>
 80104d2:	2900      	cmp	r1, #0
 80104d4:	d136      	bne.n	8010544 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2f4>
 80104d6:	6813      	ldr	r3, [r2, #0]
 80104d8:	2101      	movs	r1, #1
 80104da:	f8d3 30a4 	ldr.w	r3, [r3, #164]	@ 0xa4
 80104de:	4610      	mov	r0, r2
 80104e0:	4798      	blx	r3
 80104e2:	e7d5      	b.n	8010490 <_ZN8touchgfx11Application15drawCachedAreasEv+0x240>
 80104e4:	f1bc 0f00 	cmp.w	ip, #0
 80104e8:	d12c      	bne.n	8010544 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2f4>
 80104ea:	bb59      	cbnz	r1, 8010544 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2f4>
 80104ec:	4548      	cmp	r0, r9
 80104ee:	bfa8      	it	ge
 80104f0:	4648      	movge	r0, r9
 80104f2:	f9b8 2000 	ldrsh.w	r2, [r8]
 80104f6:	f8b6 a000 	ldrh.w	sl, [r6]
 80104fa:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
 80104fe:	2100      	movs	r1, #0
 8010500:	1ac0      	subs	r0, r0, r3
 8010502:	f8ad 102c 	strh.w	r1, [sp, #44]	@ 0x2c
 8010506:	f8ad 2030 	strh.w	r2, [sp, #48]	@ 0x30
 801050a:	f8ad 0032 	strh.w	r0, [sp, #50]	@ 0x32
 801050e:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	@ 0xec
 8010512:	4553      	cmp	r3, sl
 8010514:	ddbc      	ble.n	8010490 <_ZN8touchgfx11Application15drawCachedAreasEv+0x240>
 8010516:	eb04 02ca 	add.w	r2, r4, sl, lsl #3
 801051a:	ab0d      	add	r3, sp, #52	@ 0x34
 801051c:	f852 0fac 	ldr.w	r0, [r2, #172]!
 8010520:	6851      	ldr	r1, [r2, #4]
 8010522:	c303      	stmia	r3!, {r0, r1}
 8010524:	a80d      	add	r0, sp, #52	@ 0x34
 8010526:	a90b      	add	r1, sp, #44	@ 0x2c
 8010528:	f7fa fd46 	bl	800afb8 <_ZN8touchgfx4RectaNERKS0_>
 801052c:	a80d      	add	r0, sp, #52	@ 0x34
 801052e:	f7fa fd86 	bl	800b03e <_ZNK8touchgfx4Rect7isEmptyEv>
 8010532:	b920      	cbnz	r0, 801053e <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ee>
 8010534:	6823      	ldr	r3, [r4, #0]
 8010536:	a90d      	add	r1, sp, #52	@ 0x34
 8010538:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 801053a:	4620      	mov	r0, r4
 801053c:	4798      	blx	r3
 801053e:	f10a 0a01 	add.w	sl, sl, #1
 8010542:	e7e4      	b.n	801050e <_ZN8touchgfx11Application15drawCachedAreasEv+0x2be>
 8010544:	4648      	mov	r0, r9
 8010546:	e7d4      	b.n	80104f2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2a2>
 8010548:	200133d4 	.word	0x200133d4
 801054c:	20013414 	.word	0x20013414
 8010550:	20013420 	.word	0x20013420
 8010554:	20000194 	.word	0x20000194
 8010558:	200133ca 	.word	0x200133ca
 801055c:	200133c6 	.word	0x200133c6
 8010560:	200133c8 	.word	0x200133c8
 8010564:	6828      	ldr	r0, [r5, #0]
 8010566:	6803      	ldr	r3, [r0, #0]
 8010568:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 801056a:	4798      	blx	r3
 801056c:	4ba5      	ldr	r3, [pc, #660]	@ (8010804 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5b4>)
 801056e:	781b      	ldrb	r3, [r3, #0]
 8010570:	2b00      	cmp	r3, #0
 8010572:	f43f aed4 	beq.w	801031e <_ZN8touchgfx11Application15drawCachedAreasEv+0xce>
 8010576:	2300      	movs	r3, #0
 8010578:	f8a4 312e 	strh.w	r3, [r4, #302]	@ 0x12e
 801057c:	4ba2      	ldr	r3, [pc, #648]	@ (8010808 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5b8>)
 801057e:	f8bd 607c 	ldrh.w	r6, [sp, #124]	@ 0x7c
 8010582:	881b      	ldrh	r3, [r3, #0]
 8010584:	a80f      	add	r0, sp, #60	@ 0x3c
 8010586:	f104 05ee 	add.w	r5, r4, #238	@ 0xee
 801058a:	42b3      	cmp	r3, r6
 801058c:	f4bf aec7 	bcs.w	801031e <_ZN8touchgfx11Application15drawCachedAreasEv+0xce>
 8010590:	f8b4 112e 	ldrh.w	r1, [r4, #302]	@ 0x12e
 8010594:	2907      	cmp	r1, #7
 8010596:	d815      	bhi.n	80105c4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x374>
 8010598:	eb00 02c3 	add.w	r2, r0, r3, lsl #3
 801059c:	f930 8033 	ldrsh.w	r8, [r0, r3, lsl #3]
 80105a0:	f9b2 e002 	ldrsh.w	lr, [r2, #2]
 80105a4:	f9b2 c004 	ldrsh.w	ip, [r2, #4]
 80105a8:	f9b2 7006 	ldrsh.w	r7, [r2, #6]
 80105ac:	1c4a      	adds	r2, r1, #1
 80105ae:	f8a4 212e 	strh.w	r2, [r4, #302]	@ 0x12e
 80105b2:	eb05 02c1 	add.w	r2, r5, r1, lsl #3
 80105b6:	f825 8031 	strh.w	r8, [r5, r1, lsl #3]
 80105ba:	f8a2 e002 	strh.w	lr, [r2, #2]
 80105be:	f8a2 c004 	strh.w	ip, [r2, #4]
 80105c2:	80d7      	strh	r7, [r2, #6]
 80105c4:	3301      	adds	r3, #1
 80105c6:	b29b      	uxth	r3, r3
 80105c8:	e7df      	b.n	801058a <_ZN8touchgfx11Application15drawCachedAreasEv+0x33a>
 80105ca:	2b02      	cmp	r3, #2
 80105cc:	f040 80d1 	bne.w	8010772 <_ZN8touchgfx11Application15drawCachedAreasEv+0x522>
 80105d0:	f8b0 3080 	ldrh.w	r3, [r0, #128]	@ 0x80
 80105d4:	9308      	str	r3, [sp, #32]
 80105d6:	f8b0 307e 	ldrh.w	r3, [r0, #126]	@ 0x7e
 80105da:	9307      	str	r3, [sp, #28]
 80105dc:	6803      	ldr	r3, [r0, #0]
 80105de:	f890 b07d 	ldrb.w	fp, [r0, #125]	@ 0x7d
 80105e2:	f8d3 30a8 	ldr.w	r3, [r3, #168]	@ 0xa8
 80105e6:	4798      	blx	r3
 80105e8:	4b88      	ldr	r3, [pc, #544]	@ (801080c <_ZN8touchgfx11Application15drawCachedAreasEv+0x5bc>)
 80105ea:	881b      	ldrh	r3, [r3, #0]
 80105ec:	9302      	str	r3, [sp, #8]
 80105ee:	4b88      	ldr	r3, [pc, #544]	@ (8010810 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5c0>)
 80105f0:	881e      	ldrh	r6, [r3, #0]
 80105f2:	4b88      	ldr	r3, [pc, #544]	@ (8010814 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5c4>)
 80105f4:	781b      	ldrb	r3, [r3, #0]
 80105f6:	f10b 37ff 	add.w	r7, fp, #4294967295
 80105fa:	2b01      	cmp	r3, #1
 80105fc:	bf1c      	itt	ne
 80105fe:	9b02      	ldrne	r3, [sp, #8]
 8010600:	9602      	strne	r6, [sp, #8]
 8010602:	b2bf      	uxth	r7, r7
 8010604:	fa0f f887 	sxth.w	r8, r7
 8010608:	4682      	mov	sl, r0
 801060a:	f04f 0000 	mov.w	r0, #0
 801060e:	bf18      	it	ne
 8010610:	461e      	movne	r6, r3
 8010612:	f7f0 fddd 	bl	80011d0 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 8010616:	fb96 fbfb 	sdiv	fp, r6, fp
 801061a:	fb0b f808 	mul.w	r8, fp, r8
 801061e:	45c2      	cmp	sl, r8
 8010620:	da0c      	bge.n	801063c <_ZN8touchgfx11Application15drawCachedAreasEv+0x3ec>
 8010622:	6828      	ldr	r0, [r5, #0]
 8010624:	6803      	ldr	r3, [r0, #0]
 8010626:	210a      	movs	r1, #10
 8010628:	f8d3 309c 	ldr.w	r3, [r3, #156]	@ 0x9c
 801062c:	4798      	blx	r3
 801062e:	6828      	ldr	r0, [r5, #0]
 8010630:	6803      	ldr	r3, [r0, #0]
 8010632:	f8d3 30a8 	ldr.w	r3, [r3, #168]	@ 0xa8
 8010636:	4798      	blx	r3
 8010638:	4682      	mov	sl, r0
 801063a:	e7f0      	b.n	801061e <_ZN8touchgfx11Application15drawCachedAreasEv+0x3ce>
 801063c:	2000      	movs	r0, #0
 801063e:	f7f0 fdf1 	bl	8001224 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 8010642:	fa1f f38b 	uxth.w	r3, fp
 8010646:	fb17 f703 	smulbb	r7, r7, r3
 801064a:	9304      	str	r3, [sp, #16]
 801064c:	b2bb      	uxth	r3, r7
 801064e:	9305      	str	r3, [sp, #20]
 8010650:	f04f 0800 	mov.w	r8, #0
 8010654:	0973      	lsrs	r3, r6, #5
 8010656:	4f70      	ldr	r7, [pc, #448]	@ (8010818 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5c8>)
 8010658:	9306      	str	r3, [sp, #24]
 801065a:	4645      	mov	r5, r8
 801065c:	42b5      	cmp	r5, r6
 801065e:	d085      	beq.n	801056c <_ZN8touchgfx11Application15drawCachedAreasEv+0x31c>
 8010660:	6838      	ldr	r0, [r7, #0]
 8010662:	6803      	ldr	r3, [r0, #0]
 8010664:	f8d3 30a8 	ldr.w	r3, [r3, #168]	@ 0xa8
 8010668:	4798      	blx	r3
 801066a:	4582      	cmp	sl, r0
 801066c:	4681      	mov	r9, r0
 801066e:	d907      	bls.n	8010680 <_ZN8touchgfx11Application15drawCachedAreasEv+0x430>
 8010670:	f1b8 0f00 	cmp.w	r8, #0
 8010674:	d007      	beq.n	8010686 <_ZN8touchgfx11Application15drawCachedAreasEv+0x436>
 8010676:	6838      	ldr	r0, [r7, #0]
 8010678:	6803      	ldr	r3, [r0, #0]
 801067a:	f8d3 30b8 	ldr.w	r3, [r3, #184]	@ 0xb8
 801067e:	e774      	b.n	801056a <_ZN8touchgfx11Application15drawCachedAreasEv+0x31a>
 8010680:	f1b8 0f00 	cmp.w	r8, #0
 8010684:	d003      	beq.n	801068e <_ZN8touchgfx11Application15drawCachedAreasEv+0x43e>
 8010686:	454d      	cmp	r5, r9
 8010688:	d3f5      	bcc.n	8010676 <_ZN8touchgfx11Application15drawCachedAreasEv+0x426>
 801068a:	f04f 0801 	mov.w	r8, #1
 801068e:	9a04      	ldr	r2, [sp, #16]
 8010690:	fb95 f3fb 	sdiv	r3, r5, fp
 8010694:	9303      	str	r3, [sp, #12]
 8010696:	3301      	adds	r3, #1
 8010698:	fb13 f302 	smulbb	r3, r3, r2
 801069c:	b299      	uxth	r1, r3
 801069e:	f1b8 0f00 	cmp.w	r8, #0
 80106a2:	d04e      	beq.n	8010742 <_ZN8touchgfx11Application15drawCachedAreasEv+0x4f2>
 80106a4:	eb09 030b 	add.w	r3, r9, fp
 80106a8:	42b3      	cmp	r3, r6
 80106aa:	bfa8      	it	ge
 80106ac:	4633      	movge	r3, r6
 80106ae:	9807      	ldr	r0, [sp, #28]
 80106b0:	b29b      	uxth	r3, r3
 80106b2:	428b      	cmp	r3, r1
 80106b4:	bf94      	ite	ls
 80106b6:	ebc5 0203 	rsbls	r2, r5, r3
 80106ba:	ebc5 0201 	rsbhi	r2, r5, r1
 80106be:	4282      	cmp	r2, r0
 80106c0:	bfa8      	it	ge
 80106c2:	4602      	movge	r2, r0
 80106c4:	9808      	ldr	r0, [sp, #32]
 80106c6:	fa1f fa82 	uxth.w	sl, r2
 80106ca:	4582      	cmp	sl, r0
 80106cc:	d205      	bcs.n	80106da <_ZN8touchgfx11Application15drawCachedAreasEv+0x48a>
 80106ce:	fa15 f082 	uxtah	r0, r5, r2
 80106d2:	4286      	cmp	r6, r0
 80106d4:	d001      	beq.n	80106da <_ZN8touchgfx11Application15drawCachedAreasEv+0x48a>
 80106d6:	4299      	cmp	r1, r3
 80106d8:	d240      	bcs.n	801075c <_ZN8touchgfx11Application15drawCachedAreasEv+0x50c>
 80106da:	2001      	movs	r0, #1
 80106dc:	9209      	str	r2, [sp, #36]	@ 0x24
 80106de:	f7f0 fd77 	bl	80011d0 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 80106e2:	6838      	ldr	r0, [r7, #0]
 80106e4:	f9bd 100c 	ldrsh.w	r1, [sp, #12]
 80106e8:	6803      	ldr	r3, [r0, #0]
 80106ea:	f8d3 3098 	ldr.w	r3, [r3, #152]	@ 0x98
 80106ee:	4798      	blx	r3
 80106f0:	4b48      	ldr	r3, [pc, #288]	@ (8010814 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5c4>)
 80106f2:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 80106f4:	781b      	ldrb	r3, [r3, #0]
 80106f6:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 80106fa:	2b01      	cmp	r3, #1
 80106fc:	b212      	sxth	r2, r2
 80106fe:	f04f 0000 	mov.w	r0, #0
 8010702:	d122      	bne.n	801074a <_ZN8touchgfx11Application15drawCachedAreasEv+0x4fa>
 8010704:	1b73      	subs	r3, r6, r5
 8010706:	eba3 030a 	sub.w	r3, r3, sl
 801070a:	f8ad 3034 	strh.w	r3, [sp, #52]	@ 0x34
 801070e:	f8ad 0036 	strh.w	r0, [sp, #54]	@ 0x36
 8010712:	f8ad 2038 	strh.w	r2, [sp, #56]	@ 0x38
 8010716:	f8ad 103a 	strh.w	r1, [sp, #58]	@ 0x3a
 801071a:	6823      	ldr	r3, [r4, #0]
 801071c:	a90d      	add	r1, sp, #52	@ 0x34
 801071e:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8010720:	4620      	mov	r0, r4
 8010722:	4798      	blx	r3
 8010724:	6838      	ldr	r0, [r7, #0]
 8010726:	9b03      	ldr	r3, [sp, #12]
 8010728:	4259      	negs	r1, r3
 801072a:	6803      	ldr	r3, [r0, #0]
 801072c:	b209      	sxth	r1, r1
 801072e:	f8d3 3098 	ldr.w	r3, [r3, #152]	@ 0x98
 8010732:	4798      	blx	r3
 8010734:	4455      	add	r5, sl
 8010736:	2001      	movs	r0, #1
 8010738:	b2ad      	uxth	r5, r5
 801073a:	f7f0 fd73 	bl	8001224 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 801073e:	46ca      	mov	sl, r9
 8010740:	e78c      	b.n	801065c <_ZN8touchgfx11Application15drawCachedAreasEv+0x40c>
 8010742:	9b05      	ldr	r3, [sp, #20]
 8010744:	eba9 0303 	sub.w	r3, r9, r3
 8010748:	e7b1      	b.n	80106ae <_ZN8touchgfx11Application15drawCachedAreasEv+0x45e>
 801074a:	f8ad 0034 	strh.w	r0, [sp, #52]	@ 0x34
 801074e:	f8ad 5036 	strh.w	r5, [sp, #54]	@ 0x36
 8010752:	f8ad 1038 	strh.w	r1, [sp, #56]	@ 0x38
 8010756:	f8ad 203a 	strh.w	r2, [sp, #58]	@ 0x3a
 801075a:	e7de      	b.n	801071a <_ZN8touchgfx11Application15drawCachedAreasEv+0x4ca>
 801075c:	6838      	ldr	r0, [r7, #0]
 801075e:	6803      	ldr	r3, [r0, #0]
 8010760:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8010762:	4798      	blx	r3
 8010764:	6838      	ldr	r0, [r7, #0]
 8010766:	9906      	ldr	r1, [sp, #24]
 8010768:	6803      	ldr	r3, [r0, #0]
 801076a:	f8d3 309c 	ldr.w	r3, [r3, #156]	@ 0x9c
 801076e:	4798      	blx	r3
 8010770:	e7e5      	b.n	801073e <_ZN8touchgfx11Application15drawCachedAreasEv+0x4ee>
 8010772:	2b03      	cmp	r3, #3
 8010774:	f040 8130 	bne.w	80109d8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x788>
 8010778:	4b26      	ldr	r3, [pc, #152]	@ (8010814 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5c4>)
 801077a:	f9b0 9082 	ldrsh.w	r9, [r0, #130]	@ 0x82
 801077e:	781b      	ldrb	r3, [r3, #0]
 8010780:	2b01      	cmp	r3, #1
 8010782:	f104 0aac 	add.w	sl, r4, #172	@ 0xac
 8010786:	f000 8093 	beq.w	80108b0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x660>
 801078a:	8832      	ldrh	r2, [r6, #0]
 801078c:	f8b4 10ec 	ldrh.w	r1, [r4, #236]	@ 0xec
 8010790:	3201      	adds	r2, #1
 8010792:	b292      	uxth	r2, r2
 8010794:	2900      	cmp	r1, #0
 8010796:	f43f aee9 	beq.w	801056c <_ZN8touchgfx11Application15drawCachedAreasEv+0x31c>
 801079a:	f8b4 50b2 	ldrh.w	r5, [r4, #178]	@ 0xb2
 801079e:	f8b4 30ae 	ldrh.w	r3, [r4, #174]	@ 0xae
 80107a2:	441d      	add	r5, r3
 80107a4:	b22d      	sxth	r5, r5
 80107a6:	4694      	mov	ip, r2
 80107a8:	f04f 0800 	mov.w	r8, #0
 80107ac:	fa1f f38c 	uxth.w	r3, ip
 80107b0:	4299      	cmp	r1, r3
 80107b2:	ea4f 07c8 	mov.w	r7, r8, lsl #3
 80107b6:	f240 80ba 	bls.w	801092e <_ZN8touchgfx11Application15drawCachedAreasEv+0x6de>
 80107ba:	4427      	add	r7, r4
 80107bc:	eb04 0ecc 	add.w	lr, r4, ip, lsl #3
 80107c0:	f9b7 30ae 	ldrsh.w	r3, [r7, #174]	@ 0xae
 80107c4:	f9be 00ae 	ldrsh.w	r0, [lr, #174]	@ 0xae
 80107c8:	4283      	cmp	r3, r0
 80107ca:	f340 809c 	ble.w	8010906 <_ZN8touchgfx11Application15drawCachedAreasEv+0x6b6>
 80107ce:	f8be 50b2 	ldrh.w	r5, [lr, #178]	@ 0xb2
 80107d2:	4405      	add	r5, r0
 80107d4:	b22d      	sxth	r5, r5
 80107d6:	429d      	cmp	r5, r3
 80107d8:	bfa8      	it	ge
 80107da:	461d      	movge	r5, r3
 80107dc:	46e0      	mov	r8, ip
 80107de:	f10c 0c01 	add.w	ip, ip, #1
 80107e2:	e7e3      	b.n	80107ac <_ZN8touchgfx11Application15drawCachedAreasEv+0x55c>
 80107e4:	d10a      	bne.n	80107fc <_ZN8touchgfx11Application15drawCachedAreasEv+0x5ac>
 80107e6:	f9b7 00b2 	ldrsh.w	r0, [r7, #178]	@ 0xb2
 80107ea:	f9be 10b2 	ldrsh.w	r1, [lr, #178]	@ 0xb2
 80107ee:	4562      	cmp	r2, ip
 80107f0:	bfb8      	it	lt
 80107f2:	4662      	movlt	r2, ip
 80107f4:	4288      	cmp	r0, r1
 80107f6:	bfb8      	it	lt
 80107f8:	4698      	movlt	r8, r3
 80107fa:	e082      	b.n	8010902 <_ZN8touchgfx11Application15drawCachedAreasEv+0x6b2>
 80107fc:	428a      	cmp	r2, r1
 80107fe:	bfb8      	it	lt
 8010800:	460a      	movlt	r2, r1
 8010802:	e07e      	b.n	8010902 <_ZN8touchgfx11Application15drawCachedAreasEv+0x6b2>
 8010804:	200133d0 	.word	0x200133d0
 8010808:	20000194 	.word	0x20000194
 801080c:	200133c8 	.word	0x200133c8
 8010810:	200133c6 	.word	0x200133c6
 8010814:	200133ca 	.word	0x200133ca
 8010818:	200133d4 	.word	0x200133d4
 801081c:	19e1      	adds	r1, r4, r7
 801081e:	ab0d      	add	r3, sp, #52	@ 0x34
 8010820:	f851 0fac 	ldr.w	r0, [r1, #172]!
 8010824:	6849      	ldr	r1, [r1, #4]
 8010826:	c303      	stmia	r3!, {r0, r1}
 8010828:	f9bd 3038 	ldrsh.w	r3, [sp, #56]	@ 0x38
 801082c:	f8bd 1034 	ldrh.w	r1, [sp, #52]	@ 0x34
 8010830:	454b      	cmp	r3, r9
 8010832:	bfb8      	it	lt
 8010834:	f9bd 2034 	ldrshlt.w	r2, [sp, #52]	@ 0x34
 8010838:	f8ad 2034 	strh.w	r2, [sp, #52]	@ 0x34
 801083c:	440b      	add	r3, r1
 801083e:	1a9b      	subs	r3, r3, r2
 8010840:	a80d      	add	r0, sp, #52	@ 0x34
 8010842:	f8ad 3038 	strh.w	r3, [sp, #56]	@ 0x38
 8010846:	f7fe fecd 	bl	800f5e4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801084a:	a80d      	add	r0, sp, #52	@ 0x34
 801084c:	f7fa fbf7 	bl	800b03e <_ZNK8touchgfx4Rect7isEmptyEv>
 8010850:	bb70      	cbnz	r0, 80108b0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x660>
 8010852:	f9bd c03a 	ldrsh.w	ip, [sp, #58]	@ 0x3a
 8010856:	6828      	ldr	r0, [r5, #0]
 8010858:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
 801085c:	f8d0 e000 	ldr.w	lr, [r0]
 8010860:	f8bd 2036 	ldrh.w	r2, [sp, #54]	@ 0x36
 8010864:	f8bd 1034 	ldrh.w	r1, [sp, #52]	@ 0x34
 8010868:	45cc      	cmp	ip, r9
 801086a:	bfd4      	ite	le
 801086c:	fa1f fc8c 	uxthle.w	ip, ip
 8010870:	fa1f fc89 	uxthgt.w	ip, r9
 8010874:	f8cd c000 	str.w	ip, [sp]
 8010878:	f8de b094 	ldr.w	fp, [lr, #148]	@ 0x94
 801087c:	47d8      	blx	fp
 801087e:	4683      	mov	fp, r0
 8010880:	f8ad 003a 	strh.w	r0, [sp, #58]	@ 0x3a
 8010884:	a80d      	add	r0, sp, #52	@ 0x34
 8010886:	f7fe fe93 	bl	800f5b0 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 801088a:	6823      	ldr	r3, [r4, #0]
 801088c:	4427      	add	r7, r4
 801088e:	4620      	mov	r0, r4
 8010890:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8010892:	a90d      	add	r1, sp, #52	@ 0x34
 8010894:	4798      	blx	r3
 8010896:	f8b7 00b0 	ldrh.w	r0, [r7, #176]	@ 0xb0
 801089a:	eba0 000b 	sub.w	r0, r0, fp
 801089e:	b200      	sxth	r0, r0
 80108a0:	f8a7 00b0 	strh.w	r0, [r7, #176]	@ 0xb0
 80108a4:	b920      	cbnz	r0, 80108b0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x660>
 80108a6:	fa1f f188 	uxth.w	r1, r8
 80108aa:	4650      	mov	r0, sl
 80108ac:	f7ff f93e 	bl	800fb2c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 80108b0:	f8b4 b0ec 	ldrh.w	fp, [r4, #236]	@ 0xec
 80108b4:	f1bb 0f00 	cmp.w	fp, #0
 80108b8:	f43f ae58 	beq.w	801056c <_ZN8touchgfx11Application15drawCachedAreasEv+0x31c>
 80108bc:	8833      	ldrh	r3, [r6, #0]
 80108be:	f9b4 20ac 	ldrsh.w	r2, [r4, #172]	@ 0xac
 80108c2:	3301      	adds	r3, #1
 80108c4:	b29b      	uxth	r3, r3
 80108c6:	f04f 0800 	mov.w	r8, #0
 80108ca:	b299      	uxth	r1, r3
 80108cc:	458b      	cmp	fp, r1
 80108ce:	ea4f 07c8 	mov.w	r7, r8, lsl #3
 80108d2:	d9a3      	bls.n	801081c <_ZN8touchgfx11Application15drawCachedAreasEv+0x5cc>
 80108d4:	4427      	add	r7, r4
 80108d6:	eb04 0ec3 	add.w	lr, r4, r3, lsl #3
 80108da:	f8b7 10b0 	ldrh.w	r1, [r7, #176]	@ 0xb0
 80108de:	f8b7 00ac 	ldrh.w	r0, [r7, #172]	@ 0xac
 80108e2:	f9be c0ac 	ldrsh.w	ip, [lr, #172]	@ 0xac
 80108e6:	4408      	add	r0, r1
 80108e8:	f8be 10b0 	ldrh.w	r1, [lr, #176]	@ 0xb0
 80108ec:	4461      	add	r1, ip
 80108ee:	b200      	sxth	r0, r0
 80108f0:	b209      	sxth	r1, r1
 80108f2:	4288      	cmp	r0, r1
 80108f4:	f6bf af76 	bge.w	80107e4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x594>
 80108f8:	4584      	cmp	ip, r0
 80108fa:	4662      	mov	r2, ip
 80108fc:	4698      	mov	r8, r3
 80108fe:	bfb8      	it	lt
 8010900:	4602      	movlt	r2, r0
 8010902:	3301      	adds	r3, #1
 8010904:	e7e1      	b.n	80108ca <_ZN8touchgfx11Application15drawCachedAreasEv+0x67a>
 8010906:	d10e      	bne.n	8010926 <_ZN8touchgfx11Application15drawCachedAreasEv+0x6d6>
 8010908:	f9be 00b0 	ldrsh.w	r0, [lr, #176]	@ 0xb0
 801090c:	f8be e0b2 	ldrh.w	lr, [lr, #178]	@ 0xb2
 8010910:	f9b7 70b0 	ldrsh.w	r7, [r7, #176]	@ 0xb0
 8010914:	4473      	add	r3, lr
 8010916:	b21b      	sxth	r3, r3
 8010918:	429d      	cmp	r5, r3
 801091a:	bfa8      	it	ge
 801091c:	461d      	movge	r5, r3
 801091e:	4287      	cmp	r7, r0
 8010920:	bfb8      	it	lt
 8010922:	46e0      	movlt	r8, ip
 8010924:	e75b      	b.n	80107de <_ZN8touchgfx11Application15drawCachedAreasEv+0x58e>
 8010926:	4285      	cmp	r5, r0
 8010928:	bfa8      	it	ge
 801092a:	4605      	movge	r5, r0
 801092c:	e757      	b.n	80107de <_ZN8touchgfx11Application15drawCachedAreasEv+0x58e>
 801092e:	eb0a 0007 	add.w	r0, sl, r7
 8010932:	4427      	add	r7, r4
 8010934:	e9cd 2102 	strd	r2, r1, [sp, #8]
 8010938:	f9b7 b0b2 	ldrsh.w	fp, [r7, #178]	@ 0xb2
 801093c:	45cb      	cmp	fp, r9
 801093e:	bfbe      	ittt	lt
 8010940:	f8b7 50ae 	ldrhlt.w	r5, [r7, #174]	@ 0xae
 8010944:	445d      	addlt	r5, fp
 8010946:	b22d      	sxthlt	r5, r5
 8010948:	f7fa fb79 	bl	800b03e <_ZNK8touchgfx4Rect7isEmptyEv>
 801094c:	e9dd 2102 	ldrd	r2, r1, [sp, #8]
 8010950:	2800      	cmp	r0, #0
 8010952:	f47f af1f 	bne.w	8010794 <_ZN8touchgfx11Application15drawCachedAreasEv+0x544>
 8010956:	f9b7 20ae 	ldrsh.w	r2, [r7, #174]	@ 0xae
 801095a:	f8ad 003a 	strh.w	r0, [sp, #58]	@ 0x3a
 801095e:	482b      	ldr	r0, [pc, #172]	@ (8010a0c <_ZN8touchgfx11Application15drawCachedAreasEv+0x7bc>)
 8010960:	f9b7 10ac 	ldrsh.w	r1, [r7, #172]	@ 0xac
 8010964:	f9b7 30b0 	ldrsh.w	r3, [r7, #176]	@ 0xb0
 8010968:	6800      	ldr	r0, [r0, #0]
 801096a:	f8ad 1034 	strh.w	r1, [sp, #52]	@ 0x34
 801096e:	1aad      	subs	r5, r5, r2
 8010970:	454d      	cmp	r5, r9
 8010972:	f8ad 2036 	strh.w	r2, [sp, #54]	@ 0x36
 8010976:	f8ad 3038 	strh.w	r3, [sp, #56]	@ 0x38
 801097a:	bfa8      	it	ge
 801097c:	464d      	movge	r5, r9
 801097e:	f8d0 c000 	ldr.w	ip, [r0]
 8010982:	b2ad      	uxth	r5, r5
 8010984:	fa1f fb8b 	uxth.w	fp, fp
 8010988:	455d      	cmp	r5, fp
 801098a:	bf94      	ite	ls
 801098c:	9500      	strls	r5, [sp, #0]
 801098e:	f8cd b000 	strhi.w	fp, [sp]
 8010992:	b292      	uxth	r2, r2
 8010994:	f8dc 5094 	ldr.w	r5, [ip, #148]	@ 0x94
 8010998:	b29b      	uxth	r3, r3
 801099a:	b289      	uxth	r1, r1
 801099c:	47a8      	blx	r5
 801099e:	6823      	ldr	r3, [r4, #0]
 80109a0:	f8ad 003a 	strh.w	r0, [sp, #58]	@ 0x3a
 80109a4:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 80109a6:	a90d      	add	r1, sp, #52	@ 0x34
 80109a8:	4620      	mov	r0, r4
 80109aa:	4798      	blx	r3
 80109ac:	f8bd 103a 	ldrh.w	r1, [sp, #58]	@ 0x3a
 80109b0:	f8b7 30b2 	ldrh.w	r3, [r7, #178]	@ 0xb2
 80109b4:	f8b7 20ae 	ldrh.w	r2, [r7, #174]	@ 0xae
 80109b8:	1a5b      	subs	r3, r3, r1
 80109ba:	440a      	add	r2, r1
 80109bc:	b21b      	sxth	r3, r3
 80109be:	f8a7 20ae 	strh.w	r2, [r7, #174]	@ 0xae
 80109c2:	f8a7 30b2 	strh.w	r3, [r7, #178]	@ 0xb2
 80109c6:	2b00      	cmp	r3, #0
 80109c8:	f47f aedf 	bne.w	801078a <_ZN8touchgfx11Application15drawCachedAreasEv+0x53a>
 80109cc:	fa1f f188 	uxth.w	r1, r8
 80109d0:	4650      	mov	r0, sl
 80109d2:	f7ff f8ab 	bl	800fb2c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 80109d6:	e6d8      	b.n	801078a <_ZN8touchgfx11Application15drawCachedAreasEv+0x53a>
 80109d8:	8835      	ldrh	r5, [r6, #0]
 80109da:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	@ 0xec
 80109de:	42ab      	cmp	r3, r5
 80109e0:	f67f adc4 	bls.w	801056c <_ZN8touchgfx11Application15drawCachedAreasEv+0x31c>
 80109e4:	eb04 02c5 	add.w	r2, r4, r5, lsl #3
 80109e8:	ab0d      	add	r3, sp, #52	@ 0x34
 80109ea:	f852 0fac 	ldr.w	r0, [r2, #172]!
 80109ee:	6851      	ldr	r1, [r2, #4]
 80109f0:	c303      	stmia	r3!, {r0, r1}
 80109f2:	a80d      	add	r0, sp, #52	@ 0x34
 80109f4:	f7fa fb23 	bl	800b03e <_ZNK8touchgfx4Rect7isEmptyEv>
 80109f8:	b920      	cbnz	r0, 8010a04 <_ZN8touchgfx11Application15drawCachedAreasEv+0x7b4>
 80109fa:	6823      	ldr	r3, [r4, #0]
 80109fc:	a90d      	add	r1, sp, #52	@ 0x34
 80109fe:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8010a00:	4620      	mov	r0, r4
 8010a02:	4798      	blx	r3
 8010a04:	3501      	adds	r5, #1
 8010a06:	b2ad      	uxth	r5, r5
 8010a08:	e7e7      	b.n	80109da <_ZN8touchgfx11Application15drawCachedAreasEv+0x78a>
 8010a0a:	bf00      	nop
 8010a0c:	200133d4 	.word	0x200133d4

08010a10 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE>:
 8010a10:	4b03      	ldr	r3, [pc, #12]	@ (8010a20 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE+0x10>)
 8010a12:	2200      	movs	r2, #0
 8010a14:	801a      	strh	r2, [r3, #0]
 8010a16:	805a      	strh	r2, [r3, #2]
 8010a18:	809a      	strh	r2, [r3, #4]
 8010a1a:	80da      	strh	r2, [r3, #6]
 8010a1c:	4770      	bx	lr
 8010a1e:	bf00      	nop
 8010a20:	20013420 	.word	0x20013420

08010a24 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>:
 8010a24:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010a28:	4606      	mov	r6, r0
 8010a2a:	b09d      	sub	sp, #116	@ 0x74
 8010a2c:	a803      	add	r0, sp, #12
 8010a2e:	4614      	mov	r4, r2
 8010a30:	468a      	mov	sl, r1
 8010a32:	461d      	mov	r5, r3
 8010a34:	f001 f924 	bl	8011c80 <_ZN8touchgfx12TextProviderC1Ev>
 8010a38:	6833      	ldr	r3, [r6, #0]
 8010a3a:	4630      	mov	r0, r6
 8010a3c:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8010a3e:	4798      	blx	r3
 8010a40:	6833      	ldr	r3, [r6, #0]
 8010a42:	4607      	mov	r7, r0
 8010a44:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8010a46:	4630      	mov	r0, r6
 8010a48:	4798      	blx	r3
 8010a4a:	462a      	mov	r2, r5
 8010a4c:	9000      	str	r0, [sp, #0]
 8010a4e:	4621      	mov	r1, r4
 8010a50:	463b      	mov	r3, r7
 8010a52:	a803      	add	r0, sp, #12
 8010a54:	f001 f967 	bl	8011d26 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8010a58:	2500      	movs	r5, #0
 8010a5a:	462c      	mov	r4, r5
 8010a5c:	46a9      	mov	r9, r5
 8010a5e:	46a8      	mov	r8, r5
 8010a60:	f242 0b0b 	movw	fp, #8203	@ 0x200b
 8010a64:	2300      	movs	r3, #0
 8010a66:	9302      	str	r3, [sp, #8]
 8010a68:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
 8010a6c:	429c      	cmp	r4, r3
 8010a6e:	d002      	beq.n	8010a76 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x52>
 8010a70:	455c      	cmp	r4, fp
 8010a72:	bf18      	it	ne
 8010a74:	4625      	movne	r5, r4
 8010a76:	ab02      	add	r3, sp, #8
 8010a78:	4632      	mov	r2, r6
 8010a7a:	4651      	mov	r1, sl
 8010a7c:	a803      	add	r0, sp, #12
 8010a7e:	f001 fc6d 	bl	801235c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8010a82:	4604      	mov	r4, r0
 8010a84:	b108      	cbz	r0, 8010a8a <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x66>
 8010a86:	280a      	cmp	r0, #10
 8010a88:	d10a      	bne.n	8010aa0 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x7c>
 8010a8a:	45c1      	cmp	r9, r8
 8010a8c:	bf38      	it	cc
 8010a8e:	46c1      	movcc	r9, r8
 8010a90:	f04f 0800 	mov.w	r8, #0
 8010a94:	2c00      	cmp	r4, #0
 8010a96:	d1e5      	bne.n	8010a64 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 8010a98:	4648      	mov	r0, r9
 8010a9a:	b01d      	add	sp, #116	@ 0x74
 8010a9c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010aa0:	9a02      	ldr	r2, [sp, #8]
 8010aa2:	2a00      	cmp	r2, #0
 8010aa4:	d0de      	beq.n	8010a64 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 8010aa6:	7b57      	ldrb	r7, [r2, #13]
 8010aa8:	6833      	ldr	r3, [r6, #0]
 8010aaa:	8894      	ldrh	r4, [r2, #4]
 8010aac:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8010aae:	007f      	lsls	r7, r7, #1
 8010ab0:	f407 7080 	and.w	r0, r7, #256	@ 0x100
 8010ab4:	7a97      	ldrb	r7, [r2, #10]
 8010ab6:	4629      	mov	r1, r5
 8010ab8:	4307      	orrs	r7, r0
 8010aba:	4630      	mov	r0, r6
 8010abc:	4798      	blx	r3
 8010abe:	4438      	add	r0, r7
 8010ac0:	4480      	add	r8, r0
 8010ac2:	fa1f f888 	uxth.w	r8, r8
 8010ac6:	e7e5      	b.n	8010a94 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x70>

08010ac8 <_ZNK8touchgfx4Font12getCharWidthEt>:
 8010ac8:	b508      	push	{r3, lr}
 8010aca:	6803      	ldr	r3, [r0, #0]
 8010acc:	68db      	ldr	r3, [r3, #12]
 8010ace:	4798      	blx	r3
 8010ad0:	b128      	cbz	r0, 8010ade <_ZNK8touchgfx4Font12getCharWidthEt+0x16>
 8010ad2:	7b43      	ldrb	r3, [r0, #13]
 8010ad4:	7a80      	ldrb	r0, [r0, #10]
 8010ad6:	005b      	lsls	r3, r3, #1
 8010ad8:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8010adc:	4318      	orrs	r0, r3
 8010ade:	bd08      	pop	{r3, pc}

08010ae0 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz>:
 8010ae0:	b40e      	push	{r1, r2, r3}
 8010ae2:	b5f0      	push	{r4, r5, r6, r7, lr}
 8010ae4:	b09e      	sub	sp, #120	@ 0x78
 8010ae6:	ab23      	add	r3, sp, #140	@ 0x8c
 8010ae8:	4605      	mov	r5, r0
 8010aea:	f853 4b04 	ldr.w	r4, [r3], #4
 8010aee:	9303      	str	r3, [sp, #12]
 8010af0:	a805      	add	r0, sp, #20
 8010af2:	f001 f8c5 	bl	8011c80 <_ZN8touchgfx12TextProviderC1Ev>
 8010af6:	682b      	ldr	r3, [r5, #0]
 8010af8:	4628      	mov	r0, r5
 8010afa:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8010afc:	4798      	blx	r3
 8010afe:	682b      	ldr	r3, [r5, #0]
 8010b00:	4606      	mov	r6, r0
 8010b02:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8010b04:	4628      	mov	r0, r5
 8010b06:	4798      	blx	r3
 8010b08:	4633      	mov	r3, r6
 8010b0a:	ae1e      	add	r6, sp, #120	@ 0x78
 8010b0c:	4621      	mov	r1, r4
 8010b0e:	9000      	str	r0, [sp, #0]
 8010b10:	9a03      	ldr	r2, [sp, #12]
 8010b12:	2400      	movs	r4, #0
 8010b14:	a805      	add	r0, sp, #20
 8010b16:	f001 f906 	bl	8011d26 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8010b1a:	f846 4d68 	str.w	r4, [r6, #-104]!
 8010b1e:	462a      	mov	r2, r5
 8010b20:	4633      	mov	r3, r6
 8010b22:	4621      	mov	r1, r4
 8010b24:	a805      	add	r0, sp, #20
 8010b26:	f001 fc19 	bl	801235c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8010b2a:	b1f0      	cbz	r0, 8010b6a <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x8a>
 8010b2c:	280a      	cmp	r0, #10
 8010b2e:	d018      	beq.n	8010b62 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 8010b30:	9f04      	ldr	r7, [sp, #16]
 8010b32:	b1b7      	cbz	r7, 8010b62 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 8010b34:	7b78      	ldrb	r0, [r7, #13]
 8010b36:	7a3b      	ldrb	r3, [r7, #8]
 8010b38:	88ea      	ldrh	r2, [r5, #6]
 8010b3a:	00c1      	lsls	r1, r0, #3
 8010b3c:	f401 7180 	and.w	r1, r1, #256	@ 0x100
 8010b40:	4319      	orrs	r1, r3
 8010b42:	0643      	lsls	r3, r0, #25
 8010b44:	bf44      	itt	mi
 8010b46:	f5a1 7300 	submi.w	r3, r1, #512	@ 0x200
 8010b4a:	b219      	sxthmi	r1, r3
 8010b4c:	0100      	lsls	r0, r0, #4
 8010b4e:	79fb      	ldrb	r3, [r7, #7]
 8010b50:	f400 7080 	and.w	r0, r0, #256	@ 0x100
 8010b54:	4303      	orrs	r3, r0
 8010b56:	4413      	add	r3, r2
 8010b58:	1a5b      	subs	r3, r3, r1
 8010b5a:	b21b      	sxth	r3, r3
 8010b5c:	429c      	cmp	r4, r3
 8010b5e:	bfb8      	it	lt
 8010b60:	461c      	movlt	r4, r3
 8010b62:	4633      	mov	r3, r6
 8010b64:	462a      	mov	r2, r5
 8010b66:	2100      	movs	r1, #0
 8010b68:	e7dc      	b.n	8010b24 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x44>
 8010b6a:	b2a0      	uxth	r0, r4
 8010b6c:	b01e      	add	sp, #120	@ 0x78
 8010b6e:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 8010b72:	b003      	add	sp, #12
 8010b74:	4770      	bx	lr

08010b76 <_ZNK8touchgfx4Font20getMinimumTextHeightEv>:
 8010b76:	7a43      	ldrb	r3, [r0, #9]
 8010b78:	8880      	ldrh	r0, [r0, #4]
 8010b7a:	4418      	add	r0, r3
 8010b7c:	b280      	uxth	r0, r0
 8010b7e:	4770      	bx	lr

08010b80 <_ZNK8touchgfx4Font13getFontHeightEv>:
 8010b80:	6803      	ldr	r3, [r0, #0]
 8010b82:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8010b84:	4718      	bx	r3

08010b86 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz>:
 8010b86:	b40e      	push	{r1, r2, r3}
 8010b88:	b570      	push	{r4, r5, r6, lr}
 8010b8a:	b09d      	sub	sp, #116	@ 0x74
 8010b8c:	ab21      	add	r3, sp, #132	@ 0x84
 8010b8e:	4604      	mov	r4, r0
 8010b90:	f853 5b04 	ldr.w	r5, [r3], #4
 8010b94:	9302      	str	r3, [sp, #8]
 8010b96:	a803      	add	r0, sp, #12
 8010b98:	f001 f872 	bl	8011c80 <_ZN8touchgfx12TextProviderC1Ev>
 8010b9c:	6823      	ldr	r3, [r4, #0]
 8010b9e:	4620      	mov	r0, r4
 8010ba0:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8010ba2:	4798      	blx	r3
 8010ba4:	6823      	ldr	r3, [r4, #0]
 8010ba6:	4606      	mov	r6, r0
 8010ba8:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8010baa:	4620      	mov	r0, r4
 8010bac:	4798      	blx	r3
 8010bae:	4633      	mov	r3, r6
 8010bb0:	9000      	str	r0, [sp, #0]
 8010bb2:	9a02      	ldr	r2, [sp, #8]
 8010bb4:	4629      	mov	r1, r5
 8010bb6:	a803      	add	r0, sp, #12
 8010bb8:	f001 f8b5 	bl	8011d26 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8010bbc:	a803      	add	r0, sp, #12
 8010bbe:	f001 fc4f 	bl	8012460 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8010bc2:	2401      	movs	r4, #1
 8010bc4:	b2a3      	uxth	r3, r4
 8010bc6:	b140      	cbz	r0, 8010bda <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x54>
 8010bc8:	280a      	cmp	r0, #10
 8010bca:	bf08      	it	eq
 8010bcc:	3301      	addeq	r3, #1
 8010bce:	a803      	add	r0, sp, #12
 8010bd0:	bf08      	it	eq
 8010bd2:	b21c      	sxtheq	r4, r3
 8010bd4:	f001 fc44 	bl	8012460 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8010bd8:	e7f4      	b.n	8010bc4 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x3e>
 8010bda:	4618      	mov	r0, r3
 8010bdc:	b01d      	add	sp, #116	@ 0x74
 8010bde:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010be2:	b003      	add	sp, #12
 8010be4:	4770      	bx	lr

08010be6 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz>:
 8010be6:	b40e      	push	{r1, r2, r3}
 8010be8:	b5f0      	push	{r4, r5, r6, r7, lr}
 8010bea:	b09e      	sub	sp, #120	@ 0x78
 8010bec:	ab23      	add	r3, sp, #140	@ 0x8c
 8010bee:	4604      	mov	r4, r0
 8010bf0:	f853 5b04 	ldr.w	r5, [r3], #4
 8010bf4:	9303      	str	r3, [sp, #12]
 8010bf6:	a805      	add	r0, sp, #20
 8010bf8:	f001 f842 	bl	8011c80 <_ZN8touchgfx12TextProviderC1Ev>
 8010bfc:	6823      	ldr	r3, [r4, #0]
 8010bfe:	4620      	mov	r0, r4
 8010c00:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8010c02:	4798      	blx	r3
 8010c04:	6823      	ldr	r3, [r4, #0]
 8010c06:	4606      	mov	r6, r0
 8010c08:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8010c0a:	4620      	mov	r0, r4
 8010c0c:	4798      	blx	r3
 8010c0e:	4633      	mov	r3, r6
 8010c10:	4629      	mov	r1, r5
 8010c12:	9000      	str	r0, [sp, #0]
 8010c14:	9a03      	ldr	r2, [sp, #12]
 8010c16:	a805      	add	r0, sp, #20
 8010c18:	ad1e      	add	r5, sp, #120	@ 0x78
 8010c1a:	f001 f884 	bl	8011d26 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8010c1e:	2100      	movs	r1, #0
 8010c20:	f845 1d68 	str.w	r1, [r5, #-104]!
 8010c24:	4622      	mov	r2, r4
 8010c26:	462b      	mov	r3, r5
 8010c28:	a805      	add	r0, sp, #20
 8010c2a:	f001 fb97 	bl	801235c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8010c2e:	f647 76ff 	movw	r6, #32767	@ 0x7fff
 8010c32:	b1d8      	cbz	r0, 8010c6c <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x86>
 8010c34:	280a      	cmp	r0, #10
 8010c36:	d012      	beq.n	8010c5e <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 8010c38:	9804      	ldr	r0, [sp, #16]
 8010c3a:	b180      	cbz	r0, 8010c5e <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 8010c3c:	7b47      	ldrb	r7, [r0, #13]
 8010c3e:	88e2      	ldrh	r2, [r4, #6]
 8010c40:	00fb      	lsls	r3, r7, #3
 8010c42:	f403 7180 	and.w	r1, r3, #256	@ 0x100
 8010c46:	7a03      	ldrb	r3, [r0, #8]
 8010c48:	430b      	orrs	r3, r1
 8010c4a:	0679      	lsls	r1, r7, #25
 8010c4c:	bf44      	itt	mi
 8010c4e:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 8010c52:	b21b      	sxthmi	r3, r3
 8010c54:	1ad3      	subs	r3, r2, r3
 8010c56:	b21b      	sxth	r3, r3
 8010c58:	429e      	cmp	r6, r3
 8010c5a:	bfa8      	it	ge
 8010c5c:	461e      	movge	r6, r3
 8010c5e:	462b      	mov	r3, r5
 8010c60:	4622      	mov	r2, r4
 8010c62:	2100      	movs	r1, #0
 8010c64:	a805      	add	r0, sp, #20
 8010c66:	f001 fb79 	bl	801235c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8010c6a:	e7e2      	b.n	8010c32 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x4c>
 8010c6c:	4630      	mov	r0, r6
 8010c6e:	b01e      	add	sp, #120	@ 0x78
 8010c70:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 8010c74:	b003      	add	sp, #12
 8010c76:	4770      	bx	lr

08010c78 <_ZNK8touchgfx8Drawable10invalidateEv>:
 8010c78:	b513      	push	{r0, r1, r4, lr}
 8010c7a:	6803      	ldr	r3, [r0, #0]
 8010c7c:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 8010c80:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8010c84:	f8ad 1004 	strh.w	r1, [sp, #4]
 8010c88:	2400      	movs	r4, #0
 8010c8a:	9400      	str	r4, [sp, #0]
 8010c8c:	f8ad 2006 	strh.w	r2, [sp, #6]
 8010c90:	691b      	ldr	r3, [r3, #16]
 8010c92:	4669      	mov	r1, sp
 8010c94:	4798      	blx	r3
 8010c96:	b002      	add	sp, #8
 8010c98:	bd10      	pop	{r4, pc}

08010c9a <_ZN8touchgfx8Drawable20getSolidRectAbsoluteEv>:
 8010c9a:	b538      	push	{r3, r4, r5, lr}
 8010c9c:	680b      	ldr	r3, [r1, #0]
 8010c9e:	460c      	mov	r4, r1
 8010ca0:	68db      	ldr	r3, [r3, #12]
 8010ca2:	4605      	mov	r5, r0
 8010ca4:	4798      	blx	r3
 8010ca6:	6823      	ldr	r3, [r4, #0]
 8010ca8:	4620      	mov	r0, r4
 8010caa:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8010cac:	4629      	mov	r1, r5
 8010cae:	4798      	blx	r3
 8010cb0:	4628      	mov	r0, r5
 8010cb2:	bd38      	pop	{r3, r4, r5, pc}

08010cb4 <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE>:
 8010cb4:	b410      	push	{r4}
 8010cb6:	880a      	ldrh	r2, [r1, #0]
 8010cb8:	8884      	ldrh	r4, [r0, #4]
 8010cba:	4422      	add	r2, r4
 8010cbc:	800a      	strh	r2, [r1, #0]
 8010cbe:	88c4      	ldrh	r4, [r0, #6]
 8010cc0:	884a      	ldrh	r2, [r1, #2]
 8010cc2:	4422      	add	r2, r4
 8010cc4:	804a      	strh	r2, [r1, #2]
 8010cc6:	6940      	ldr	r0, [r0, #20]
 8010cc8:	b120      	cbz	r0, 8010cd4 <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE+0x20>
 8010cca:	6803      	ldr	r3, [r0, #0]
 8010ccc:	f85d 4b04 	ldr.w	r4, [sp], #4
 8010cd0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8010cd2:	4718      	bx	r3
 8010cd4:	f85d 4b04 	ldr.w	r4, [sp], #4
 8010cd8:	4770      	bx	lr

08010cda <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE>:
 8010cda:	b570      	push	{r4, r5, r6, lr}
 8010cdc:	8882      	ldrh	r2, [r0, #4]
 8010cde:	880b      	ldrh	r3, [r1, #0]
 8010ce0:	4413      	add	r3, r2
 8010ce2:	800b      	strh	r3, [r1, #0]
 8010ce4:	88c2      	ldrh	r2, [r0, #6]
 8010ce6:	884b      	ldrh	r3, [r1, #2]
 8010ce8:	460c      	mov	r4, r1
 8010cea:	4413      	add	r3, r2
 8010cec:	804b      	strh	r3, [r1, #2]
 8010cee:	4605      	mov	r5, r0
 8010cf0:	1d01      	adds	r1, r0, #4
 8010cf2:	4620      	mov	r0, r4
 8010cf4:	f7fa f960 	bl	800afb8 <_ZN8touchgfx4RectaNERKS0_>
 8010cf8:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 8010cfc:	2b00      	cmp	r3, #0
 8010cfe:	dd0b      	ble.n	8010d18 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8010d00:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8010d04:	2b00      	cmp	r3, #0
 8010d06:	dd07      	ble.n	8010d18 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8010d08:	6968      	ldr	r0, [r5, #20]
 8010d0a:	b128      	cbz	r0, 8010d18 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8010d0c:	6803      	ldr	r3, [r0, #0]
 8010d0e:	4621      	mov	r1, r4
 8010d10:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8010d12:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010d16:	4718      	bx	r3
 8010d18:	bd70      	pop	{r4, r5, r6, pc}
	...

08010d1c <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE>:
 8010d1c:	b570      	push	{r4, r5, r6, lr}
 8010d1e:	8882      	ldrh	r2, [r0, #4]
 8010d20:	880b      	ldrh	r3, [r1, #0]
 8010d22:	4413      	add	r3, r2
 8010d24:	800b      	strh	r3, [r1, #0]
 8010d26:	88c2      	ldrh	r2, [r0, #6]
 8010d28:	884b      	ldrh	r3, [r1, #2]
 8010d2a:	460c      	mov	r4, r1
 8010d2c:	4413      	add	r3, r2
 8010d2e:	804b      	strh	r3, [r1, #2]
 8010d30:	4605      	mov	r5, r0
 8010d32:	1d01      	adds	r1, r0, #4
 8010d34:	4620      	mov	r0, r4
 8010d36:	f7fa f93f 	bl	800afb8 <_ZN8touchgfx4RectaNERKS0_>
 8010d3a:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 8010d3e:	2b00      	cmp	r3, #0
 8010d40:	dd19      	ble.n	8010d76 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 8010d42:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8010d46:	2b00      	cmp	r3, #0
 8010d48:	dd15      	ble.n	8010d76 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 8010d4a:	6968      	ldr	r0, [r5, #20]
 8010d4c:	b128      	cbz	r0, 8010d5a <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x3e>
 8010d4e:	6803      	ldr	r3, [r0, #0]
 8010d50:	4621      	mov	r1, r4
 8010d52:	691b      	ldr	r3, [r3, #16]
 8010d54:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010d58:	4718      	bx	r3
 8010d5a:	4b07      	ldr	r3, [pc, #28]	@ (8010d78 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5c>)
 8010d5c:	681b      	ldr	r3, [r3, #0]
 8010d5e:	3304      	adds	r3, #4
 8010d60:	429d      	cmp	r5, r3
 8010d62:	d108      	bne.n	8010d76 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 8010d64:	f7fe fdd6 	bl	800f914 <_ZN8touchgfx11Application11getInstanceEv>
 8010d68:	6803      	ldr	r3, [r0, #0]
 8010d6a:	6821      	ldr	r1, [r4, #0]
 8010d6c:	6862      	ldr	r2, [r4, #4]
 8010d6e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8010d70:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010d74:	4718      	bx	r3
 8010d76:	bd70      	pop	{r4, r5, r6, pc}
 8010d78:	20013418 	.word	0x20013418

08010d7c <_ZN8touchgfx8Drawable12moveRelativeEss>:
 8010d7c:	b570      	push	{r4, r5, r6, lr}
 8010d7e:	4604      	mov	r4, r0
 8010d80:	4616      	mov	r6, r2
 8010d82:	460d      	mov	r5, r1
 8010d84:	b901      	cbnz	r1, 8010d88 <_ZN8touchgfx8Drawable12moveRelativeEss+0xc>
 8010d86:	b192      	cbz	r2, 8010dae <_ZN8touchgfx8Drawable12moveRelativeEss+0x32>
 8010d88:	6823      	ldr	r3, [r4, #0]
 8010d8a:	4620      	mov	r0, r4
 8010d8c:	699b      	ldr	r3, [r3, #24]
 8010d8e:	4798      	blx	r3
 8010d90:	88e2      	ldrh	r2, [r4, #6]
 8010d92:	88a1      	ldrh	r1, [r4, #4]
 8010d94:	4432      	add	r2, r6
 8010d96:	4429      	add	r1, r5
 8010d98:	4620      	mov	r0, r4
 8010d9a:	b212      	sxth	r2, r2
 8010d9c:	b209      	sxth	r1, r1
 8010d9e:	f7f2 fc88 	bl	80036b2 <_ZN8touchgfx8Drawable5setXYEss>
 8010da2:	6823      	ldr	r3, [r4, #0]
 8010da4:	4620      	mov	r0, r4
 8010da6:	699b      	ldr	r3, [r3, #24]
 8010da8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010dac:	4718      	bx	r3
 8010dae:	bd70      	pop	{r4, r5, r6, pc}

08010db0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>:
 8010db0:	b510      	push	{r4, lr}
 8010db2:	4604      	mov	r4, r0
 8010db4:	4608      	mov	r0, r1
 8010db6:	2300      	movs	r3, #0
 8010db8:	8023      	strh	r3, [r4, #0]
 8010dba:	8063      	strh	r3, [r4, #2]
 8010dbc:	6803      	ldr	r3, [r0, #0]
 8010dbe:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8010dc2:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
 8010dc6:	80a1      	strh	r1, [r4, #4]
 8010dc8:	80e2      	strh	r2, [r4, #6]
 8010dca:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8010dcc:	4621      	mov	r1, r4
 8010dce:	4798      	blx	r3
 8010dd0:	4620      	mov	r0, r4
 8010dd2:	bd10      	pop	{r4, pc}

08010dd4 <_ZN8touchgfx22VectorFontRendererImplD1Ev>:
 8010dd4:	4770      	bx	lr

08010dd6 <_ZN8touchgfx22VectorFontRendererImplD0Ev>:
 8010dd6:	b510      	push	{r4, lr}
 8010dd8:	211c      	movs	r1, #28
 8010dda:	4604      	mov	r4, r0
 8010ddc:	f010 ffa3 	bl	8021d26 <_ZdlPvj>
 8010de0:	4620      	mov	r0, r4
 8010de2:	bd10      	pop	{r4, pc}

08010de4 <_ZN8touchgfx22VectorFontRendererImplC1Ev>:
 8010de4:	4a04      	ldr	r2, [pc, #16]	@ (8010df8 <_ZN8touchgfx22VectorFontRendererImplC1Ev+0x14>)
 8010de6:	6002      	str	r2, [r0, #0]
 8010de8:	2200      	movs	r2, #0
 8010dea:	e9c0 2201 	strd	r2, r2, [r0, #4]
 8010dee:	e9c0 2203 	strd	r2, r2, [r0, #12]
 8010df2:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8010df6:	4770      	bx	lr
 8010df8:	08025278 	.word	0x08025278

08010dfc <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs>:
 8010dfc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010e00:	4604      	mov	r4, r0
 8010e02:	b087      	sub	sp, #28
 8010e04:	8b45      	ldrh	r5, [r0, #26]
 8010e06:	f8b2 c000 	ldrh.w	ip, [r2]
 8010e0a:	9105      	str	r1, [sp, #20]
 8010e0c:	68e1      	ldr	r1, [r4, #12]
 8010e0e:	9203      	str	r2, [sp, #12]
 8010e10:	1c68      	adds	r0, r5, #1
 8010e12:	eb01 0185 	add.w	r1, r1, r5, lsl #2
 8010e16:	f01c 0501 	ands.w	r5, ip, #1
 8010e1a:	f9b3 2000 	ldrsh.w	r2, [r3]
 8010e1e:	9502      	str	r5, [sp, #8]
 8010e20:	b280      	uxth	r0, r0
 8010e22:	d07d      	beq.n	8010f20 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x124>
 8010e24:	ee07 2a90 	vmov	s15, r2
 8010e28:	eef8 6ae7 	vcvt.f32.s32	s13, s15
 8010e2c:	8360      	strh	r0, [r4, #26]
 8010e2e:	edc1 6a00 	vstr	s13, [r1]
 8010e32:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 8010e36:	8b61      	ldrh	r1, [r4, #26]
 8010e38:	ee07 2a10 	vmov	s14, r2
 8010e3c:	68e2      	ldr	r2, [r4, #12]
 8010e3e:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8010e42:	f04f 0e00 	mov.w	lr, #0
 8010e46:	1c48      	adds	r0, r1, #1
 8010e48:	eb02 0281 	add.w	r2, r2, r1, lsl #2
 8010e4c:	ee06 ea10 	vmov	s12, lr
 8010e50:	8360      	strh	r0, [r4, #26]
 8010e52:	ed82 7a00 	vstr	s14, [r2]
 8010e56:	8b21      	ldrh	r1, [r4, #24]
 8010e58:	68a2      	ldr	r2, [r4, #8]
 8010e5a:	2501      	movs	r5, #1
 8010e5c:	1c48      	adds	r0, r1, #1
 8010e5e:	8320      	strh	r0, [r4, #24]
 8010e60:	5455      	strb	r5, [r2, r1]
 8010e62:	2200      	movs	r2, #0
 8010e64:	3304      	adds	r3, #4
 8010e66:	ee07 2a90 	vmov	s15, r2
 8010e6a:	9300      	str	r3, [sp, #0]
 8010e6c:	46aa      	mov	sl, r5
 8010e6e:	4613      	mov	r3, r2
 8010e70:	4611      	mov	r1, r2
 8010e72:	462e      	mov	r6, r5
 8010e74:	9201      	str	r2, [sp, #4]
 8010e76:	eef6 5a00 	vmov.f32	s11, #96	@ 0x3f000000  0.5
 8010e7a:	f8b4 8018 	ldrh.w	r8, [r4, #24]
 8010e7e:	9805      	ldr	r0, [sp, #20]
 8010e80:	f8d4 b008 	ldr.w	fp, [r4, #8]
 8010e84:	f108 0701 	add.w	r7, r8, #1
 8010e88:	42a8      	cmp	r0, r5
 8010e8a:	b2bf      	uxth	r7, r7
 8010e8c:	eb0b 0908 	add.w	r9, fp, r8
 8010e90:	f340 80db 	ble.w	801104a <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x24e>
 8010e94:	fa4c f906 	asr.w	r9, ip, r6
 8010e98:	f009 0901 	and.w	r9, r9, #1
 8010e9c:	fa5f f389 	uxtb.w	r3, r9
 8010ea0:	9304      	str	r3, [sp, #16]
 8010ea2:	9b00      	ldr	r3, [sp, #0]
 8010ea4:	f9b3 1000 	ldrsh.w	r1, [r3]
 8010ea8:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8010eac:	f1b9 0f00 	cmp.w	r9, #0
 8010eb0:	d07d      	beq.n	8010fae <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x1b2>
 8010eb2:	ee05 1a10 	vmov	s10, r1
 8010eb6:	eef8 4ac5 	vcvt.f32.s32	s9, s10
 8010eba:	ee05 3a10 	vmov	s10, r3
 8010ebe:	8327      	strh	r7, [r4, #24]
 8010ec0:	eeb8 5ac5 	vcvt.f32.s32	s10, s10
 8010ec4:	f1ba 0f00 	cmp.w	sl, #0
 8010ec8:	d050      	beq.n	8010f6c <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x170>
 8010eca:	f04f 0002 	mov.w	r0, #2
 8010ece:	f80b 0008 	strb.w	r0, [fp, r8]
 8010ed2:	f8b4 801a 	ldrh.w	r8, [r4, #26]
 8010ed6:	68e7      	ldr	r7, [r4, #12]
 8010ed8:	f108 0901 	add.w	r9, r8, #1
 8010edc:	eb07 0788 	add.w	r7, r7, r8, lsl #2
 8010ee0:	f8a4 901a 	strh.w	r9, [r4, #26]
 8010ee4:	edc7 4a00 	vstr	s9, [r7]
 8010ee8:	f8b4 801a 	ldrh.w	r8, [r4, #26]
 8010eec:	68e7      	ldr	r7, [r4, #12]
 8010eee:	f108 0901 	add.w	r9, r8, #1
 8010ef2:	eb07 0788 	add.w	r7, r7, r8, lsl #2
 8010ef6:	f8a4 901a 	strh.w	r9, [r4, #26]
 8010efa:	ed87 5a00 	vstr	s10, [r7]
 8010efe:	3601      	adds	r6, #1
 8010f00:	2e10      	cmp	r6, #16
 8010f02:	d106      	bne.n	8010f12 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x116>
 8010f04:	9e01      	ldr	r6, [sp, #4]
 8010f06:	9803      	ldr	r0, [sp, #12]
 8010f08:	3601      	adds	r6, #1
 8010f0a:	9601      	str	r6, [sp, #4]
 8010f0c:	f830 c016 	ldrh.w	ip, [r0, r6, lsl #1]
 8010f10:	2600      	movs	r6, #0
 8010f12:	9800      	ldr	r0, [sp, #0]
 8010f14:	f8dd a010 	ldr.w	sl, [sp, #16]
 8010f18:	3004      	adds	r0, #4
 8010f1a:	3501      	adds	r5, #1
 8010f1c:	9000      	str	r0, [sp, #0]
 8010f1e:	e7ac      	b.n	8010e7a <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x7e>
 8010f20:	ee06 2a10 	vmov	s12, r2
 8010f24:	f9b3 2004 	ldrsh.w	r2, [r3, #4]
 8010f28:	f9b3 e002 	ldrsh.w	lr, [r3, #2]
 8010f2c:	ee16 5a10 	vmov	r5, s12
 8010f30:	442a      	add	r2, r5
 8010f32:	ee06 2a90 	vmov	s13, r2
 8010f36:	f9b3 2006 	ldrsh.w	r2, [r3, #6]
 8010f3a:	8360      	strh	r0, [r4, #26]
 8010f3c:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8010f40:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 8010f44:	4472      	add	r2, lr
 8010f46:	ee07 2a10 	vmov	s14, r2
 8010f4a:	ee66 6aa7 	vmul.f32	s13, s13, s15
 8010f4e:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8010f52:	edc1 6a00 	vstr	s13, [r1]
 8010f56:	8b61      	ldrh	r1, [r4, #26]
 8010f58:	68e2      	ldr	r2, [r4, #12]
 8010f5a:	ee27 7a27 	vmul.f32	s14, s14, s15
 8010f5e:	1c48      	adds	r0, r1, #1
 8010f60:	eb02 0281 	add.w	r2, r2, r1, lsl #2
 8010f64:	8360      	strh	r0, [r4, #26]
 8010f66:	ed82 7a00 	vstr	s14, [r2]
 8010f6a:	e774      	b.n	8010e56 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x5a>
 8010f6c:	f04f 0005 	mov.w	r0, #5
 8010f70:	f80b 0008 	strb.w	r0, [fp, r8]
 8010f74:	f8b4 801a 	ldrh.w	r8, [r4, #26]
 8010f78:	68e7      	ldr	r7, [r4, #12]
 8010f7a:	eeb8 4ae7 	vcvt.f32.s32	s8, s15
 8010f7e:	f108 0901 	add.w	r9, r8, #1
 8010f82:	eb07 0788 	add.w	r7, r7, r8, lsl #2
 8010f86:	f8a4 901a 	strh.w	r9, [r4, #26]
 8010f8a:	ed87 4a00 	vstr	s8, [r7]
 8010f8e:	ee04 2a10 	vmov	s8, r2
 8010f92:	f8b4 801a 	ldrh.w	r8, [r4, #26]
 8010f96:	68e7      	ldr	r7, [r4, #12]
 8010f98:	eeb8 4ac4 	vcvt.f32.s32	s8, s8
 8010f9c:	f108 0901 	add.w	r9, r8, #1
 8010fa0:	eb07 0788 	add.w	r7, r7, r8, lsl #2
 8010fa4:	f8a4 901a 	strh.w	r9, [r4, #26]
 8010fa8:	ed87 4a00 	vstr	s8, [r7]
 8010fac:	e791      	b.n	8010ed2 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0xd6>
 8010fae:	f1ba 0f00 	cmp.w	sl, #0
 8010fb2:	d146      	bne.n	8011042 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x246>
 8010fb4:	f04f 0005 	mov.w	r0, #5
 8010fb8:	8327      	strh	r7, [r4, #24]
 8010fba:	f80b 0008 	strb.w	r0, [fp, r8]
 8010fbe:	f8b4 801a 	ldrh.w	r8, [r4, #26]
 8010fc2:	68e7      	ldr	r7, [r4, #12]
 8010fc4:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
 8010fc8:	f108 0901 	add.w	r9, r8, #1
 8010fcc:	eb07 0788 	add.w	r7, r7, r8, lsl #2
 8010fd0:	ee17 0a90 	vmov	r0, s15
 8010fd4:	f8a4 901a 	strh.w	r9, [r4, #26]
 8010fd8:	ed87 5a00 	vstr	s10, [r7]
 8010fdc:	ee05 2a10 	vmov	s10, r2
 8010fe0:	f8b4 801a 	ldrh.w	r8, [r4, #26]
 8010fe4:	68e7      	ldr	r7, [r4, #12]
 8010fe6:	4408      	add	r0, r1
 8010fe8:	eeb8 5ac5 	vcvt.f32.s32	s10, s10
 8010fec:	ee07 0a90 	vmov	s15, r0
 8010ff0:	f108 0901 	add.w	r9, r8, #1
 8010ff4:	eb07 0788 	add.w	r7, r7, r8, lsl #2
 8010ff8:	f8a4 901a 	strh.w	r9, [r4, #26]
 8010ffc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8011000:	ed87 5a00 	vstr	s10, [r7]
 8011004:	f8b4 801a 	ldrh.w	r8, [r4, #26]
 8011008:	68e7      	ldr	r7, [r4, #12]
 801100a:	ee67 7aa5 	vmul.f32	s15, s15, s11
 801100e:	f108 0901 	add.w	r9, r8, #1
 8011012:	eb07 0788 	add.w	r7, r7, r8, lsl #2
 8011016:	441a      	add	r2, r3
 8011018:	f8a4 901a 	strh.w	r9, [r4, #26]
 801101c:	edc7 7a00 	vstr	s15, [r7]
 8011020:	ee07 2a90 	vmov	s15, r2
 8011024:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8011028:	f8b4 801a 	ldrh.w	r8, [r4, #26]
 801102c:	68e7      	ldr	r7, [r4, #12]
 801102e:	ee67 7aa5 	vmul.f32	s15, s15, s11
 8011032:	f108 0901 	add.w	r9, r8, #1
 8011036:	eb07 0788 	add.w	r7, r7, r8, lsl #2
 801103a:	f8a4 901a 	strh.w	r9, [r4, #26]
 801103e:	edc7 7a00 	vstr	s15, [r7]
 8011042:	461a      	mov	r2, r3
 8011044:	ee07 1a90 	vmov	s15, r1
 8011048:	e759      	b.n	8010efe <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x102>
 801104a:	f1ba 0f00 	cmp.w	sl, #0
 801104e:	d045      	beq.n	80110dc <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x2e0>
 8011050:	ee05 1a90 	vmov	s11, r1
 8011054:	eef8 5ae5 	vcvt.f32.s32	s11, s11
 8011058:	eef4 5a66 	vcmp.f32	s11, s13
 801105c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8011060:	d108      	bne.n	8011074 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x278>
 8011062:	ee05 3a90 	vmov	s11, r3
 8011066:	eef8 5ae5 	vcvt.f32.s32	s11, s11
 801106a:	eef4 5a47 	vcmp.f32	s11, s14
 801106e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8011072:	d033      	beq.n	80110dc <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x2e0>
 8011074:	9b02      	ldr	r3, [sp, #8]
 8011076:	8327      	strh	r7, [r4, #24]
 8011078:	b1b3      	cbz	r3, 80110a8 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x2ac>
 801107a:	2302      	movs	r3, #2
 801107c:	f889 3000 	strb.w	r3, [r9]
 8011080:	8b62      	ldrh	r2, [r4, #26]
 8011082:	68e3      	ldr	r3, [r4, #12]
 8011084:	1c51      	adds	r1, r2, #1
 8011086:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 801108a:	8361      	strh	r1, [r4, #26]
 801108c:	edc3 6a00 	vstr	s13, [r3]
 8011090:	8b62      	ldrh	r2, [r4, #26]
 8011092:	68e3      	ldr	r3, [r4, #12]
 8011094:	1c51      	adds	r1, r2, #1
 8011096:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 801109a:	8361      	strh	r1, [r4, #26]
 801109c:	ed83 7a00 	vstr	s14, [r3]
 80110a0:	9800      	ldr	r0, [sp, #0]
 80110a2:	b007      	add	sp, #28
 80110a4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80110a8:	2305      	movs	r3, #5
 80110aa:	f889 3000 	strb.w	r3, [r9]
 80110ae:	8b62      	ldrh	r2, [r4, #26]
 80110b0:	68e3      	ldr	r3, [r4, #12]
 80110b2:	eeb8 6ac6 	vcvt.f32.s32	s12, s12
 80110b6:	1c51      	adds	r1, r2, #1
 80110b8:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 80110bc:	8361      	strh	r1, [r4, #26]
 80110be:	ee07 ea90 	vmov	s15, lr
 80110c2:	ed83 6a00 	vstr	s12, [r3]
 80110c6:	8b62      	ldrh	r2, [r4, #26]
 80110c8:	68e3      	ldr	r3, [r4, #12]
 80110ca:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80110ce:	1c51      	adds	r1, r2, #1
 80110d0:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 80110d4:	8361      	strh	r1, [r4, #26]
 80110d6:	edc3 7a00 	vstr	s15, [r3]
 80110da:	e7d1      	b.n	8011080 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x284>
 80110dc:	ee05 2a90 	vmov	s11, r2
 80110e0:	9902      	ldr	r1, [sp, #8]
 80110e2:	8327      	strh	r7, [r4, #24]
 80110e4:	2305      	movs	r3, #5
 80110e6:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
 80110ea:	eef8 5ae5 	vcvt.f32.s32	s11, s11
 80110ee:	f889 3000 	strb.w	r3, [r9]
 80110f2:	b181      	cbz	r1, 8011116 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x31a>
 80110f4:	8b62      	ldrh	r2, [r4, #26]
 80110f6:	68e3      	ldr	r3, [r4, #12]
 80110f8:	1c51      	adds	r1, r2, #1
 80110fa:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 80110fe:	8361      	strh	r1, [r4, #26]
 8011100:	ed83 5a00 	vstr	s10, [r3]
 8011104:	8b62      	ldrh	r2, [r4, #26]
 8011106:	68e3      	ldr	r3, [r4, #12]
 8011108:	1c51      	adds	r1, r2, #1
 801110a:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 801110e:	8361      	strh	r1, [r4, #26]
 8011110:	edc3 5a00 	vstr	s11, [r3]
 8011114:	e7b4      	b.n	8011080 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x284>
 8011116:	8b65      	ldrh	r5, [r4, #26]
 8011118:	68e1      	ldr	r1, [r4, #12]
 801111a:	1c6e      	adds	r6, r5, #1
 801111c:	eb01 0185 	add.w	r1, r1, r5, lsl #2
 8011120:	8366      	strh	r6, [r4, #26]
 8011122:	ed81 5a00 	vstr	s10, [r1]
 8011126:	8b65      	ldrh	r5, [r4, #26]
 8011128:	68e1      	ldr	r1, [r4, #12]
 801112a:	1c6e      	adds	r6, r5, #1
 801112c:	eb01 0185 	add.w	r1, r1, r5, lsl #2
 8011130:	8366      	strh	r6, [r4, #26]
 8011132:	edc1 5a00 	vstr	s11, [r1]
 8011136:	8b65      	ldrh	r5, [r4, #26]
 8011138:	68e1      	ldr	r1, [r4, #12]
 801113a:	1c6e      	adds	r6, r5, #1
 801113c:	eb01 0185 	add.w	r1, r1, r5, lsl #2
 8011140:	ee17 0a90 	vmov	r0, s15
 8011144:	ee16 5a10 	vmov	r5, s12
 8011148:	4428      	add	r0, r5
 801114a:	ee07 0a90 	vmov	s15, r0
 801114e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8011152:	eef6 5a00 	vmov.f32	s11, #96	@ 0x3f000000  0.5
 8011156:	ee67 7aa5 	vmul.f32	s15, s15, s11
 801115a:	4472      	add	r2, lr
 801115c:	8366      	strh	r6, [r4, #26]
 801115e:	edc1 7a00 	vstr	s15, [r1]
 8011162:	ee07 2a90 	vmov	s15, r2
 8011166:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801116a:	8b61      	ldrh	r1, [r4, #26]
 801116c:	68e5      	ldr	r5, [r4, #12]
 801116e:	ee67 7aa5 	vmul.f32	s15, s15, s11
 8011172:	1c4e      	adds	r6, r1, #1
 8011174:	eb05 0181 	add.w	r1, r5, r1, lsl #2
 8011178:	8366      	strh	r6, [r4, #26]
 801117a:	edc1 7a00 	vstr	s15, [r1]
 801117e:	8b22      	ldrh	r2, [r4, #24]
 8011180:	68a1      	ldr	r1, [r4, #8]
 8011182:	1c55      	adds	r5, r2, #1
 8011184:	8325      	strh	r5, [r4, #24]
 8011186:	548b      	strb	r3, [r1, r2]
 8011188:	e791      	b.n	80110ae <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x2b2>
	...

0801118c <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii>:
 801118c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8011190:	b08e      	sub	sp, #56	@ 0x38
 8011192:	4604      	mov	r4, r0
 8011194:	4688      	mov	r8, r1
 8011196:	4615      	mov	r5, r2
 8011198:	4699      	mov	r9, r3
 801119a:	9e16      	ldr	r6, [sp, #88]	@ 0x58
 801119c:	f89d a064 	ldrb.w	sl, [sp, #100]	@ 0x64
 80111a0:	9f1a      	ldr	r7, [sp, #104]	@ 0x68
 80111a2:	f7f0 fea1 	bl	8001ee8 <_ZN8touchgfx14VectorRenderer11getInstanceEv>
 80111a6:	6060      	str	r0, [r4, #4]
 80111a8:	f1b9 0f00 	cmp.w	r9, #0
 80111ac:	f000 80e8 	beq.w	8011380 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x1f4>
 80111b0:	2800      	cmp	r0, #0
 80111b2:	f000 80e5 	beq.w	8011380 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x1f4>
 80111b6:	a805      	add	r0, sp, #20
 80111b8:	f000 f8f9 	bl	80113ae <_ZN8touchgfx9Matrix3x3C1Ev>
 80111bc:	6833      	ldr	r3, [r6, #0]
 80111be:	4630      	mov	r0, r6
 80111c0:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 80111c2:	4798      	blx	r3
 80111c4:	a805      	add	r0, sp, #20
 80111c6:	eef0 0a40 	vmov.f32	s1, s0
 80111ca:	f000 f8f4 	bl	80113b6 <_ZN8touchgfx9Matrix3x35scaleEff>
 80111ce:	6860      	ldr	r0, [r4, #4]
 80111d0:	f1ba 0f03 	cmp.w	sl, #3
 80111d4:	d83b      	bhi.n	801124e <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0xc2>
 80111d6:	e8df f00a 	tbb	[pc, sl]
 80111da:	1002      	.short	0x1002
 80111dc:	9f71      	.short	0x9f71
 80111de:	6803      	ldr	r3, [r0, #0]
 80111e0:	462a      	mov	r2, r5
 80111e2:	689b      	ldr	r3, [r3, #8]
 80111e4:	4641      	mov	r1, r8
 80111e6:	4798      	blx	r3
 80111e8:	eddd 7a1b 	vldr	s15, [sp, #108]	@ 0x6c
 80111ec:	eef8 0ae7 	vcvt.f32.s32	s1, s15
 80111f0:	ee07 7a90 	vmov	s15, r7
 80111f4:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 80111f8:	e026      	b.n	8011248 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0xbc>
 80111fa:	f9b5 2006 	ldrsh.w	r2, [r5, #6]
 80111fe:	f8b8 3004 	ldrh.w	r3, [r8, #4]
 8011202:	8869      	ldrh	r1, [r5, #2]
 8011204:	f8ad 2010 	strh.w	r2, [sp, #16]
 8011208:	1a9b      	subs	r3, r3, r2
 801120a:	1a5b      	subs	r3, r3, r1
 801120c:	f8ad 300c 	strh.w	r3, [sp, #12]
 8011210:	882b      	ldrh	r3, [r5, #0]
 8011212:	f8ad 300e 	strh.w	r3, [sp, #14]
 8011216:	88ab      	ldrh	r3, [r5, #4]
 8011218:	f8ad 3012 	strh.w	r3, [sp, #18]
 801121c:	6803      	ldr	r3, [r0, #0]
 801121e:	aa03      	add	r2, sp, #12
 8011220:	689b      	ldr	r3, [r3, #8]
 8011222:	4641      	mov	r1, r8
 8011224:	4798      	blx	r3
 8011226:	ed9f 0a58 	vldr	s0, [pc, #352]	@ 8011388 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x1fc>
 801122a:	a805      	add	r0, sp, #20
 801122c:	f000 f8e8 	bl	8011400 <_ZN8touchgfx9Matrix3x36rotateEf>
 8011230:	f9b8 3004 	ldrsh.w	r3, [r8, #4]
 8011234:	9a1b      	ldr	r2, [sp, #108]	@ 0x6c
 8011236:	ee07 7a90 	vmov	s15, r7
 801123a:	1a9b      	subs	r3, r3, r2
 801123c:	ee00 3a10 	vmov	s0, r3
 8011240:	eef8 0ae7 	vcvt.f32.s32	s1, s15
 8011244:	eeb8 0ac0 	vcvt.f32.s32	s0, s0
 8011248:	a805      	add	r0, sp, #20
 801124a:	f000 f927 	bl	801149c <_ZN8touchgfx9Matrix3x39translateEff>
 801124e:	6860      	ldr	r0, [r4, #4]
 8011250:	6803      	ldr	r3, [r0, #0]
 8011252:	a905      	add	r1, sp, #20
 8011254:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8011256:	4798      	blx	r3
 8011258:	6860      	ldr	r0, [r4, #4]
 801125a:	9917      	ldr	r1, [sp, #92]	@ 0x5c
 801125c:	6803      	ldr	r3, [r0, #0]
 801125e:	f041 417f 	orr.w	r1, r1, #4278190080	@ 0xff000000
 8011262:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8011264:	4798      	blx	r3
 8011266:	6860      	ldr	r0, [r4, #4]
 8011268:	f89d 1060 	ldrb.w	r1, [sp, #96]	@ 0x60
 801126c:	6803      	ldr	r3, [r0, #0]
 801126e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8011270:	4798      	blx	r3
 8011272:	6860      	ldr	r0, [r4, #4]
 8011274:	6803      	ldr	r3, [r0, #0]
 8011276:	2101      	movs	r1, #1
 8011278:	68db      	ldr	r3, [r3, #12]
 801127a:	2500      	movs	r5, #0
 801127c:	4798      	blx	r3
 801127e:	f8b9 7000 	ldrh.w	r7, [r9]
 8011282:	61a5      	str	r5, [r4, #24]
 8011284:	f104 0310 	add.w	r3, r4, #16
 8011288:	f104 0208 	add.w	r2, r4, #8
 801128c:	f104 0114 	add.w	r1, r4, #20
 8011290:	f104 000c 	add.w	r0, r4, #12
 8011294:	f109 0602 	add.w	r6, r9, #2
 8011298:	f7f2 fd02 	bl	8003ca0 <_ZN8touchgfx22VectorFontRendererImpl20getVectorFontBuffersERPfRiRPhS3_>
 801129c:	42af      	cmp	r7, r5
 801129e:	dd60      	ble.n	8011362 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x1d6>
 80112a0:	8831      	ldrh	r1, [r6, #0]
 80112a2:	f101 030f 	add.w	r3, r1, #15
 80112a6:	1cb2      	adds	r2, r6, #2
 80112a8:	f3c3 1307 	ubfx	r3, r3, #4, #8
 80112ac:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80112b0:	4620      	mov	r0, r4
 80112b2:	f7ff fda3 	bl	8010dfc <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs>
 80112b6:	3501      	adds	r5, #1
 80112b8:	4606      	mov	r6, r0
 80112ba:	e7ef      	b.n	801129c <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x110>
 80112bc:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 80112c0:	f8b8 3004 	ldrh.w	r3, [r8, #4]
 80112c4:	8829      	ldrh	r1, [r5, #0]
 80112c6:	f8ad 2010 	strh.w	r2, [sp, #16]
 80112ca:	1a9b      	subs	r3, r3, r2
 80112cc:	1a5b      	subs	r3, r3, r1
 80112ce:	f8ad 300c 	strh.w	r3, [sp, #12]
 80112d2:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 80112d6:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 80112da:	886d      	ldrh	r5, [r5, #2]
 80112dc:	f8ad 1012 	strh.w	r1, [sp, #18]
 80112e0:	1a5b      	subs	r3, r3, r1
 80112e2:	1b5b      	subs	r3, r3, r5
 80112e4:	f8ad 300e 	strh.w	r3, [sp, #14]
 80112e8:	6803      	ldr	r3, [r0, #0]
 80112ea:	aa03      	add	r2, sp, #12
 80112ec:	689b      	ldr	r3, [r3, #8]
 80112ee:	4641      	mov	r1, r8
 80112f0:	4798      	blx	r3
 80112f2:	ed9f 0a26 	vldr	s0, [pc, #152]	@ 801138c <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x200>
 80112f6:	a805      	add	r0, sp, #20
 80112f8:	f000 f882 	bl	8011400 <_ZN8touchgfx9Matrix3x36rotateEf>
 80112fc:	f9b8 3006 	ldrsh.w	r3, [r8, #6]
 8011300:	9a1b      	ldr	r2, [sp, #108]	@ 0x6c
 8011302:	1a9b      	subs	r3, r3, r2
 8011304:	ee00 3a90 	vmov	s1, r3
 8011308:	f9b8 3004 	ldrsh.w	r3, [r8, #4]
 801130c:	1bdb      	subs	r3, r3, r7
 801130e:	ee00 3a10 	vmov	s0, r3
 8011312:	eef8 0ae0 	vcvt.f32.s32	s1, s1
 8011316:	e795      	b.n	8011244 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0xb8>
 8011318:	886b      	ldrh	r3, [r5, #2]
 801131a:	f8ad 300c 	strh.w	r3, [sp, #12]
 801131e:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 8011322:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 8011326:	8829      	ldrh	r1, [r5, #0]
 8011328:	f8ad 2012 	strh.w	r2, [sp, #18]
 801132c:	1a9b      	subs	r3, r3, r2
 801132e:	1a5b      	subs	r3, r3, r1
 8011330:	f8ad 300e 	strh.w	r3, [sp, #14]
 8011334:	88eb      	ldrh	r3, [r5, #6]
 8011336:	f8ad 3010 	strh.w	r3, [sp, #16]
 801133a:	6803      	ldr	r3, [r0, #0]
 801133c:	aa03      	add	r2, sp, #12
 801133e:	689b      	ldr	r3, [r3, #8]
 8011340:	4641      	mov	r1, r8
 8011342:	4798      	blx	r3
 8011344:	ed9f 0a12 	vldr	s0, [pc, #72]	@ 8011390 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x204>
 8011348:	a805      	add	r0, sp, #20
 801134a:	f000 f859 	bl	8011400 <_ZN8touchgfx9Matrix3x36rotateEf>
 801134e:	f9b8 3006 	ldrsh.w	r3, [r8, #6]
 8011352:	eddd 7a1b 	vldr	s15, [sp, #108]	@ 0x6c
 8011356:	1bdb      	subs	r3, r3, r7
 8011358:	ee00 3a90 	vmov	s1, r3
 801135c:	eef8 0ae0 	vcvt.f32.s32	s1, s1
 8011360:	e748      	b.n	80111f4 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x68>
 8011362:	6860      	ldr	r0, [r4, #4]
 8011364:	8b22      	ldrh	r2, [r4, #24]
 8011366:	6803      	ldr	r3, [r0, #0]
 8011368:	2100      	movs	r1, #0
 801136a:	9101      	str	r1, [sp, #4]
 801136c:	8b61      	ldrh	r1, [r4, #26]
 801136e:	9100      	str	r1, [sp, #0]
 8011370:	6a1d      	ldr	r5, [r3, #32]
 8011372:	e9d4 1302 	ldrd	r1, r3, [r4, #8]
 8011376:	47a8      	blx	r5
 8011378:	6860      	ldr	r0, [r4, #4]
 801137a:	6803      	ldr	r3, [r0, #0]
 801137c:	69db      	ldr	r3, [r3, #28]
 801137e:	4798      	blx	r3
 8011380:	b00e      	add	sp, #56	@ 0x38
 8011382:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8011386:	bf00      	nop
 8011388:	42b40000 	.word	0x42b40000
 801138c:	43340000 	.word	0x43340000
 8011390:	43870000 	.word	0x43870000

08011394 <_ZN8touchgfx9Matrix3x35resetEv>:
 8011394:	2300      	movs	r3, #0
 8011396:	f04f 527e 	mov.w	r2, #1065353216	@ 0x3f800000
 801139a:	6002      	str	r2, [r0, #0]
 801139c:	6043      	str	r3, [r0, #4]
 801139e:	6083      	str	r3, [r0, #8]
 80113a0:	60c3      	str	r3, [r0, #12]
 80113a2:	6102      	str	r2, [r0, #16]
 80113a4:	6143      	str	r3, [r0, #20]
 80113a6:	6183      	str	r3, [r0, #24]
 80113a8:	61c3      	str	r3, [r0, #28]
 80113aa:	6202      	str	r2, [r0, #32]
 80113ac:	4770      	bx	lr

080113ae <_ZN8touchgfx9Matrix3x3C1Ev>:
 80113ae:	b508      	push	{r3, lr}
 80113b0:	f7ff fff0 	bl	8011394 <_ZN8touchgfx9Matrix3x35resetEv>
 80113b4:	bd08      	pop	{r3, pc}

080113b6 <_ZN8touchgfx9Matrix3x35scaleEff>:
 80113b6:	edd0 7a00 	vldr	s15, [r0]
 80113ba:	ee67 7a80 	vmul.f32	s15, s15, s0
 80113be:	edc0 7a00 	vstr	s15, [r0]
 80113c2:	edd0 7a01 	vldr	s15, [r0, #4]
 80113c6:	ee67 7a80 	vmul.f32	s15, s15, s0
 80113ca:	edc0 7a01 	vstr	s15, [r0, #4]
 80113ce:	edd0 7a02 	vldr	s15, [r0, #8]
 80113d2:	ee27 0a80 	vmul.f32	s0, s15, s0
 80113d6:	edd0 7a03 	vldr	s15, [r0, #12]
 80113da:	ed80 0a02 	vstr	s0, [r0, #8]
 80113de:	ee67 7aa0 	vmul.f32	s15, s15, s1
 80113e2:	edc0 7a03 	vstr	s15, [r0, #12]
 80113e6:	edd0 7a04 	vldr	s15, [r0, #16]
 80113ea:	ee67 7aa0 	vmul.f32	s15, s15, s1
 80113ee:	edc0 7a04 	vstr	s15, [r0, #16]
 80113f2:	edd0 7a05 	vldr	s15, [r0, #20]
 80113f6:	ee67 0aa0 	vmul.f32	s1, s15, s1
 80113fa:	edc0 0a05 	vstr	s1, [r0, #20]
 80113fe:	4770      	bx	lr

08011400 <_ZN8touchgfx9Matrix3x36rotateEf>:
 8011400:	b510      	push	{r4, lr}
 8011402:	eddf 7a24 	vldr	s15, [pc, #144]	@ 8011494 <_ZN8touchgfx9Matrix3x36rotateEf+0x94>
 8011406:	ee20 0a27 	vmul.f32	s0, s0, s15
 801140a:	eddf 7a23 	vldr	s15, [pc, #140]	@ 8011498 <_ZN8touchgfx9Matrix3x36rotateEf+0x98>
 801140e:	ed2d 8b02 	vpush	{d8}
 8011412:	eec0 8a27 	vdiv.f32	s17, s0, s15
 8011416:	4604      	mov	r4, r0
 8011418:	eeb0 0a68 	vmov.f32	s0, s17
 801141c:	f010 fcf8 	bl	8021e10 <cosf>
 8011420:	eeb0 8a40 	vmov.f32	s16, s0
 8011424:	eeb0 0a68 	vmov.f32	s0, s17
 8011428:	f010 fd36 	bl	8021e98 <sinf>
 801142c:	edd4 6a03 	vldr	s13, [r4, #12]
 8011430:	edd4 4a00 	vldr	s9, [r4]
 8011434:	ed94 7a04 	vldr	s14, [r4, #16]
 8011438:	ed94 5a01 	vldr	s10, [r4, #4]
 801143c:	edd4 5a02 	vldr	s11, [r4, #8]
 8011440:	ee60 7a66 	vnmul.f32	s15, s0, s13
 8011444:	ee66 6a88 	vmul.f32	s13, s13, s16
 8011448:	eee8 7a24 	vfma.f32	s15, s16, s9
 801144c:	eee0 6a24 	vfma.f32	s13, s0, s9
 8011450:	edc4 7a00 	vstr	s15, [r4]
 8011454:	ee60 7a47 	vnmul.f32	s15, s0, s14
 8011458:	ee27 7a08 	vmul.f32	s14, s14, s16
 801145c:	eee8 7a05 	vfma.f32	s15, s16, s10
 8011460:	eea0 7a05 	vfma.f32	s14, s0, s10
 8011464:	edc4 7a01 	vstr	s15, [r4, #4]
 8011468:	edd4 7a05 	vldr	s15, [r4, #20]
 801146c:	edc4 6a03 	vstr	s13, [r4, #12]
 8011470:	ee20 6a67 	vnmul.f32	s12, s0, s15
 8011474:	ee67 7a88 	vmul.f32	s15, s15, s16
 8011478:	eea8 6a25 	vfma.f32	s12, s16, s11
 801147c:	ecbd 8b02 	vpop	{d8}
 8011480:	eee0 7a25 	vfma.f32	s15, s0, s11
 8011484:	ed84 6a02 	vstr	s12, [r4, #8]
 8011488:	ed84 7a04 	vstr	s14, [r4, #16]
 801148c:	edc4 7a05 	vstr	s15, [r4, #20]
 8011490:	bd10      	pop	{r4, pc}
 8011492:	bf00      	nop
 8011494:	40490fdb 	.word	0x40490fdb
 8011498:	43340000 	.word	0x43340000

0801149c <_ZN8touchgfx9Matrix3x39translateEff>:
 801149c:	ed90 6a06 	vldr	s12, [r0, #24]
 80114a0:	edd0 7a00 	vldr	s15, [r0]
 80114a4:	edd0 6a07 	vldr	s13, [r0, #28]
 80114a8:	ed90 7a08 	vldr	s14, [r0, #32]
 80114ac:	eee6 7a00 	vfma.f32	s15, s12, s0
 80114b0:	edc0 7a00 	vstr	s15, [r0]
 80114b4:	edd0 7a01 	vldr	s15, [r0, #4]
 80114b8:	eee6 7a80 	vfma.f32	s15, s13, s0
 80114bc:	edc0 7a01 	vstr	s15, [r0, #4]
 80114c0:	edd0 7a02 	vldr	s15, [r0, #8]
 80114c4:	eee7 7a00 	vfma.f32	s15, s14, s0
 80114c8:	edc0 7a02 	vstr	s15, [r0, #8]
 80114cc:	edd0 7a03 	vldr	s15, [r0, #12]
 80114d0:	eee6 7a20 	vfma.f32	s15, s12, s1
 80114d4:	edc0 7a03 	vstr	s15, [r0, #12]
 80114d8:	edd0 7a04 	vldr	s15, [r0, #16]
 80114dc:	eee6 7aa0 	vfma.f32	s15, s13, s1
 80114e0:	edc0 7a04 	vstr	s15, [r0, #16]
 80114e4:	edd0 7a05 	vldr	s15, [r0, #20]
 80114e8:	eee7 7a20 	vfma.f32	s15, s14, s1
 80114ec:	edc0 7a05 	vstr	s15, [r0, #20]
 80114f0:	4770      	bx	lr

080114f2 <_ZNK8touchgfx9Matrix3x315affineTransformEff>:
 80114f2:	edd0 6a01 	vldr	s13, [r0, #4]
 80114f6:	edd0 7a04 	vldr	s15, [r0, #16]
 80114fa:	ed90 7a03 	vldr	s14, [r0, #12]
 80114fe:	ee60 7aa7 	vmul.f32	s15, s1, s15
 8011502:	ee60 0aa6 	vmul.f32	s1, s1, s13
 8011506:	edd0 6a00 	vldr	s13, [r0]
 801150a:	eee7 7a00 	vfma.f32	s15, s14, s0
 801150e:	b084      	sub	sp, #16
 8011510:	eee6 0a80 	vfma.f32	s1, s13, s0
 8011514:	ed90 7a05 	vldr	s14, [r0, #20]
 8011518:	ed90 0a02 	vldr	s0, [r0, #8]
 801151c:	ee30 0a80 	vadd.f32	s0, s1, s0
 8011520:	ee77 0a87 	vadd.f32	s1, s15, s14
 8011524:	b004      	add	sp, #16
 8011526:	4770      	bx	lr

08011528 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>:
 8011528:	b530      	push	{r4, r5, lr}
 801152a:	8083      	strh	r3, [r0, #4]
 801152c:	f8bd 300c 	ldrh.w	r3, [sp, #12]
 8011530:	80c3      	strh	r3, [r0, #6]
 8011532:	f89d 3010 	ldrb.w	r3, [sp, #16]
 8011536:	7203      	strb	r3, [r0, #8]
 8011538:	f89d 3014 	ldrb.w	r3, [sp, #20]
 801153c:	f89d 5018 	ldrb.w	r5, [sp, #24]
 8011540:	7243      	strb	r3, [r0, #9]
 8011542:	7a83      	ldrb	r3, [r0, #10]
 8011544:	6141      	str	r1, [r0, #20]
 8011546:	f365 0306 	bfi	r3, r5, #0, #7
 801154a:	f89d 501c 	ldrb.w	r5, [sp, #28]
 801154e:	8302      	strh	r2, [r0, #24]
 8011550:	f365 13c7 	bfi	r3, r5, #7, #1
 8011554:	7283      	strb	r3, [r0, #10]
 8011556:	f89d 3020 	ldrb.w	r3, [sp, #32]
 801155a:	72c3      	strb	r3, [r0, #11]
 801155c:	f89d 3024 	ldrb.w	r3, [sp, #36]	@ 0x24
 8011560:	7303      	strb	r3, [r0, #12]
 8011562:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 8011566:	81c3      	strh	r3, [r0, #14]
 8011568:	f8bd 302c 	ldrh.w	r3, [sp, #44]	@ 0x2c
 801156c:	8203      	strh	r3, [r0, #16]
 801156e:	4b01      	ldr	r3, [pc, #4]	@ (8011574 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt+0x4c>)
 8011570:	6003      	str	r3, [r0, #0]
 8011572:	bd30      	pop	{r4, r5, pc}
 8011574:	0802528c 	.word	0x0802528c

08011578 <_ZNK8touchgfx9ConstFont4findEt>:
 8011578:	b5f0      	push	{r4, r5, r6, r7, lr}
 801157a:	6944      	ldr	r4, [r0, #20]
 801157c:	b3bc      	cbz	r4, 80115ee <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801157e:	88a3      	ldrh	r3, [r4, #4]
 8011580:	8b02      	ldrh	r2, [r0, #24]
 8011582:	1acb      	subs	r3, r1, r3
 8011584:	f102 32ff 	add.w	r2, r2, #4294967295
 8011588:	d431      	bmi.n	80115ee <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801158a:	4293      	cmp	r3, r2
 801158c:	dd0c      	ble.n	80115a8 <_ZNK8touchgfx9ConstFont4findEt+0x30>
 801158e:	230e      	movs	r3, #14
 8011590:	fb03 4302 	mla	r3, r3, r2, r4
 8011594:	889b      	ldrh	r3, [r3, #4]
 8011596:	1a5b      	subs	r3, r3, r1
 8011598:	1ad3      	subs	r3, r2, r3
 801159a:	429a      	cmp	r2, r3
 801159c:	db27      	blt.n	80115ee <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801159e:	2b00      	cmp	r3, #0
 80115a0:	bfbc      	itt	lt
 80115a2:	2302      	movlt	r3, #2
 80115a4:	fb92 f3f3 	sdivlt	r3, r2, r3
 80115a8:	2500      	movs	r5, #0
 80115aa:	260e      	movs	r6, #14
 80115ac:	4295      	cmp	r5, r2
 80115ae:	dc1e      	bgt.n	80115ee <_ZNK8touchgfx9ConstFont4findEt+0x76>
 80115b0:	fb06 4003 	mla	r0, r6, r3, r4
 80115b4:	8887      	ldrh	r7, [r0, #4]
 80115b6:	42b9      	cmp	r1, r7
 80115b8:	d01a      	beq.n	80115f0 <_ZNK8touchgfx9ConstFont4findEt+0x78>
 80115ba:	d20d      	bcs.n	80115d8 <_ZNK8touchgfx9ConstFont4findEt+0x60>
 80115bc:	1e5a      	subs	r2, r3, #1
 80115be:	4295      	cmp	r5, r2
 80115c0:	dc15      	bgt.n	80115ee <_ZNK8touchgfx9ConstFont4findEt+0x76>
 80115c2:	f830 3c0a 	ldrh.w	r3, [r0, #-10]
 80115c6:	1a5b      	subs	r3, r3, r1
 80115c8:	1ad3      	subs	r3, r2, r3
 80115ca:	429a      	cmp	r2, r3
 80115cc:	db0f      	blt.n	80115ee <_ZNK8touchgfx9ConstFont4findEt+0x76>
 80115ce:	429d      	cmp	r5, r3
 80115d0:	ddec      	ble.n	80115ac <_ZNK8touchgfx9ConstFont4findEt+0x34>
 80115d2:	1953      	adds	r3, r2, r5
 80115d4:	105b      	asrs	r3, r3, #1
 80115d6:	e7e9      	b.n	80115ac <_ZNK8touchgfx9ConstFont4findEt+0x34>
 80115d8:	1c5d      	adds	r5, r3, #1
 80115da:	42aa      	cmp	r2, r5
 80115dc:	db07      	blt.n	80115ee <_ZNK8touchgfx9ConstFont4findEt+0x76>
 80115de:	8a43      	ldrh	r3, [r0, #18]
 80115e0:	1acb      	subs	r3, r1, r3
 80115e2:	442b      	add	r3, r5
 80115e4:	429d      	cmp	r5, r3
 80115e6:	dc02      	bgt.n	80115ee <_ZNK8touchgfx9ConstFont4findEt+0x76>
 80115e8:	429a      	cmp	r2, r3
 80115ea:	dadf      	bge.n	80115ac <_ZNK8touchgfx9ConstFont4findEt+0x34>
 80115ec:	e7f1      	b.n	80115d2 <_ZNK8touchgfx9ConstFont4findEt+0x5a>
 80115ee:	2000      	movs	r0, #0
 80115f0:	bdf0      	pop	{r4, r5, r6, r7, pc}

080115f2 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh>:
 80115f2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80115f4:	4604      	mov	r4, r0
 80115f6:	4617      	mov	r7, r2
 80115f8:	461e      	mov	r6, r3
 80115fa:	b911      	cbnz	r1, 8011602 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x10>
 80115fc:	2500      	movs	r5, #0
 80115fe:	4628      	mov	r0, r5
 8011600:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8011602:	290a      	cmp	r1, #10
 8011604:	d0fa      	beq.n	80115fc <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8011606:	f64f 62ff 	movw	r2, #65279	@ 0xfeff
 801160a:	4291      	cmp	r1, r2
 801160c:	d0f6      	beq.n	80115fc <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 801160e:	f242 020b 	movw	r2, #8203	@ 0x200b
 8011612:	4291      	cmp	r1, r2
 8011614:	d0f2      	beq.n	80115fc <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8011616:	f7ff ffaf 	bl	8011578 <_ZNK8touchgfx9ConstFont4findEt>
 801161a:	4605      	mov	r5, r0
 801161c:	b950      	cbnz	r0, 8011634 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x42>
 801161e:	6823      	ldr	r3, [r4, #0]
 8011620:	4620      	mov	r0, r4
 8011622:	691b      	ldr	r3, [r3, #16]
 8011624:	4798      	blx	r3
 8011626:	4601      	mov	r1, r0
 8011628:	4620      	mov	r0, r4
 801162a:	f7ff ffa5 	bl	8011578 <_ZNK8touchgfx9ConstFont4findEt>
 801162e:	4605      	mov	r5, r0
 8011630:	2800      	cmp	r0, #0
 8011632:	d0e3      	beq.n	80115fc <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8011634:	6823      	ldr	r3, [r4, #0]
 8011636:	4629      	mov	r1, r5
 8011638:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 801163a:	4620      	mov	r0, r4
 801163c:	4798      	blx	r3
 801163e:	6038      	str	r0, [r7, #0]
 8011640:	6823      	ldr	r3, [r4, #0]
 8011642:	4620      	mov	r0, r4
 8011644:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8011646:	4798      	blx	r3
 8011648:	7030      	strb	r0, [r6, #0]
 801164a:	e7d8      	b.n	80115fe <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xc>

0801164c <_ZNK8touchgfx10ClickEvent12getEventTypeEv>:
 801164c:	2000      	movs	r0, #0
 801164e:	4770      	bx	lr

08011650 <_ZNK8touchgfx9DragEvent12getEventTypeEv>:
 8011650:	2001      	movs	r0, #1
 8011652:	4770      	bx	lr

08011654 <_ZNK8touchgfx12GestureEvent12getEventTypeEv>:
 8011654:	2002      	movs	r0, #2
 8011656:	4770      	bx	lr

08011658 <_ZN8touchgfx6ScreenD1Ev>:
 8011658:	4770      	bx	lr

0801165a <_ZN8touchgfx12GestureEventD1Ev>:
 801165a:	4770      	bx	lr

0801165c <_ZN8touchgfx9DragEventD1Ev>:
 801165c:	4770      	bx	lr

0801165e <_ZN8touchgfx10ClickEventD1Ev>:
 801165e:	4770      	bx	lr

08011660 <_ZN8touchgfx10ClickEventD0Ev>:
 8011660:	b510      	push	{r4, lr}
 8011662:	210c      	movs	r1, #12
 8011664:	4604      	mov	r4, r0
 8011666:	f010 fb5e 	bl	8021d26 <_ZdlPvj>
 801166a:	4620      	mov	r0, r4
 801166c:	bd10      	pop	{r4, pc}

0801166e <_ZN8touchgfx9DragEventD0Ev>:
 801166e:	b510      	push	{r4, lr}
 8011670:	2110      	movs	r1, #16
 8011672:	4604      	mov	r4, r0
 8011674:	f010 fb57 	bl	8021d26 <_ZdlPvj>
 8011678:	4620      	mov	r0, r4
 801167a:	bd10      	pop	{r4, pc}

0801167c <_ZN8touchgfx12GestureEventD0Ev>:
 801167c:	b510      	push	{r4, lr}
 801167e:	210c      	movs	r1, #12
 8011680:	4604      	mov	r4, r0
 8011682:	f010 fb50 	bl	8021d26 <_ZdlPvj>
 8011686:	4620      	mov	r0, r4
 8011688:	bd10      	pop	{r4, pc}

0801168a <_ZN8touchgfx6ScreenD0Ev>:
 801168a:	b510      	push	{r4, lr}
 801168c:	213c      	movs	r1, #60	@ 0x3c
 801168e:	4604      	mov	r4, r0
 8011690:	f010 fb49 	bl	8021d26 <_ZdlPvj>
 8011694:	4620      	mov	r0, r4
 8011696:	bd10      	pop	{r4, pc}

08011698 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE>:
 8011698:	b530      	push	{r4, r5, lr}
 801169a:	460d      	mov	r5, r1
 801169c:	6b01      	ldr	r1, [r0, #48]	@ 0x30
 801169e:	b087      	sub	sp, #28
 80116a0:	4604      	mov	r4, r0
 80116a2:	b301      	cbz	r1, 80116e6 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x4e>
 80116a4:	a801      	add	r0, sp, #4
 80116a6:	f7ff fb83 	bl	8010db0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80116aa:	892a      	ldrh	r2, [r5, #8]
 80116ac:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 80116b0:	7928      	ldrb	r0, [r5, #4]
 80116b2:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 80116b6:	f88d 0010 	strb.w	r0, [sp, #16]
 80116ba:	1ad2      	subs	r2, r2, r3
 80116bc:	8ea3      	ldrh	r3, [r4, #52]	@ 0x34
 80116be:	6b20      	ldr	r0, [r4, #48]	@ 0x30
 80116c0:	f8ad 1012 	strh.w	r1, [sp, #18]
 80116c4:	441a      	add	r2, r3
 80116c6:	896b      	ldrh	r3, [r5, #10]
 80116c8:	f8bd 5006 	ldrh.w	r5, [sp, #6]
 80116cc:	f8ad 2014 	strh.w	r2, [sp, #20]
 80116d0:	1b5b      	subs	r3, r3, r5
 80116d2:	8ee5      	ldrh	r5, [r4, #54]	@ 0x36
 80116d4:	442b      	add	r3, r5
 80116d6:	4d05      	ldr	r5, [pc, #20]	@ (80116ec <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x54>)
 80116d8:	9503      	str	r5, [sp, #12]
 80116da:	f8ad 3016 	strh.w	r3, [sp, #22]
 80116de:	6803      	ldr	r3, [r0, #0]
 80116e0:	a903      	add	r1, sp, #12
 80116e2:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 80116e4:	4798      	blx	r3
 80116e6:	b007      	add	sp, #28
 80116e8:	bd30      	pop	{r4, r5, pc}
 80116ea:	bf00      	nop
 80116ec:	0802531c 	.word	0x0802531c

080116f0 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>:
 80116f0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80116f4:	6b03      	ldr	r3, [r0, #48]	@ 0x30
 80116f6:	b08a      	sub	sp, #40	@ 0x28
 80116f8:	4604      	mov	r4, r0
 80116fa:	460d      	mov	r5, r1
 80116fc:	b113      	cbz	r3, 8011704 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x14>
 80116fe:	790b      	ldrb	r3, [r1, #4]
 8011700:	2b00      	cmp	r3, #0
 8011702:	d044      	beq.n	801178e <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 8011704:	f104 0804 	add.w	r8, r4, #4
 8011708:	4641      	mov	r1, r8
 801170a:	a803      	add	r0, sp, #12
 801170c:	f7ff fb50 	bl	8010db0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8011710:	792b      	ldrb	r3, [r5, #4]
 8011712:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 8011716:	f9bd 600e 	ldrsh.w	r6, [sp, #14]
 801171a:	b983      	cbnz	r3, 801173e <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x4e>
 801171c:	892a      	ldrh	r2, [r5, #8]
 801171e:	88e9      	ldrh	r1, [r5, #6]
 8011720:	f104 0336 	add.w	r3, r4, #54	@ 0x36
 8011724:	1b92      	subs	r2, r2, r6
 8011726:	1bc9      	subs	r1, r1, r7
 8011728:	9301      	str	r3, [sp, #4]
 801172a:	f104 0334 	add.w	r3, r4, #52	@ 0x34
 801172e:	9300      	str	r3, [sp, #0]
 8011730:	b212      	sxth	r2, r2
 8011732:	f104 0330 	add.w	r3, r4, #48	@ 0x30
 8011736:	b209      	sxth	r1, r1
 8011738:	4640      	mov	r0, r8
 801173a:	f7f9 fb59 	bl	800adf0 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>
 801173e:	6b21      	ldr	r1, [r4, #48]	@ 0x30
 8011740:	b329      	cbz	r1, 801178e <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 8011742:	a805      	add	r0, sp, #20
 8011744:	f7ff fb34 	bl	8010db0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8011748:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 801174c:	792b      	ldrb	r3, [r5, #4]
 801174e:	6b20      	ldr	r0, [r4, #48]	@ 0x30
 8011750:	f88d 3020 	strb.w	r3, [sp, #32]
 8011754:	1abf      	subs	r7, r7, r2
 8011756:	88ea      	ldrh	r2, [r5, #6]
 8011758:	4417      	add	r7, r2
 801175a:	8ea2      	ldrh	r2, [r4, #52]	@ 0x34
 801175c:	4417      	add	r7, r2
 801175e:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 8011762:	f8ad 7022 	strh.w	r7, [sp, #34]	@ 0x22
 8011766:	1ab6      	subs	r6, r6, r2
 8011768:	892a      	ldrh	r2, [r5, #8]
 801176a:	4416      	add	r6, r2
 801176c:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
 801176e:	4416      	add	r6, r2
 8011770:	f8ad 6024 	strh.w	r6, [sp, #36]	@ 0x24
 8011774:	4a07      	ldr	r2, [pc, #28]	@ (8011794 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0xa4>)
 8011776:	9207      	str	r2, [sp, #28]
 8011778:	2600      	movs	r6, #0
 801177a:	f8ad 6026 	strh.w	r6, [sp, #38]	@ 0x26
 801177e:	6803      	ldr	r3, [r0, #0]
 8011780:	a907      	add	r1, sp, #28
 8011782:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8011784:	4798      	blx	r3
 8011786:	792b      	ldrb	r3, [r5, #4]
 8011788:	b10b      	cbz	r3, 801178e <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 801178a:	e9c4 660c 	strd	r6, r6, [r4, #48]	@ 0x30
 801178e:	b00a      	add	sp, #40	@ 0x28
 8011790:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8011794:	080252f4 	.word	0x080252f4

08011798 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>:
 8011798:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801179c:	460c      	mov	r4, r1
 801179e:	6b01      	ldr	r1, [r0, #48]	@ 0x30
 80117a0:	b088      	sub	sp, #32
 80117a2:	4605      	mov	r5, r0
 80117a4:	2900      	cmp	r1, #0
 80117a6:	d06d      	beq.n	8011884 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xec>
 80117a8:	4668      	mov	r0, sp
 80117aa:	f7ff fb01 	bl	8010db0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80117ae:	8ea9      	ldrh	r1, [r5, #52]	@ 0x34
 80117b0:	88e3      	ldrh	r3, [r4, #6]
 80117b2:	f9bd 8000 	ldrsh.w	r8, [sp]
 80117b6:	f9bd 7002 	ldrsh.w	r7, [sp, #2]
 80117ba:	440b      	add	r3, r1
 80117bc:	b21b      	sxth	r3, r3
 80117be:	4543      	cmp	r3, r8
 80117c0:	db31      	blt.n	8011826 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 80117c2:	f8bd c004 	ldrh.w	ip, [sp, #4]
 80117c6:	44c4      	add	ip, r8
 80117c8:	fa0f fc8c 	sxth.w	ip, ip
 80117cc:	4563      	cmp	r3, ip
 80117ce:	da2a      	bge.n	8011826 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 80117d0:	8eea      	ldrh	r2, [r5, #54]	@ 0x36
 80117d2:	8926      	ldrh	r6, [r4, #8]
 80117d4:	4416      	add	r6, r2
 80117d6:	b236      	sxth	r6, r6
 80117d8:	42be      	cmp	r6, r7
 80117da:	db24      	blt.n	8011826 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 80117dc:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 80117e0:	4438      	add	r0, r7
 80117e2:	b200      	sxth	r0, r0
 80117e4:	4286      	cmp	r6, r0
 80117e6:	da1e      	bge.n	8011826 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 80117e8:	8963      	ldrh	r3, [r4, #10]
 80117ea:	4419      	add	r1, r3
 80117ec:	b209      	sxth	r1, r1
 80117ee:	4541      	cmp	r1, r8
 80117f0:	db08      	blt.n	8011804 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 80117f2:	4561      	cmp	r1, ip
 80117f4:	da06      	bge.n	8011804 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 80117f6:	89a3      	ldrh	r3, [r4, #12]
 80117f8:	441a      	add	r2, r3
 80117fa:	b212      	sxth	r2, r2
 80117fc:	42ba      	cmp	r2, r7
 80117fe:	db01      	blt.n	8011804 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 8011800:	4282      	cmp	r2, r0
 8011802:	db10      	blt.n	8011826 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8011804:	4b21      	ldr	r3, [pc, #132]	@ (801188c <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf4>)
 8011806:	9304      	str	r3, [sp, #16]
 8011808:	2302      	movs	r3, #2
 801180a:	f88d 3014 	strb.w	r3, [sp, #20]
 801180e:	6b28      	ldr	r0, [r5, #48]	@ 0x30
 8011810:	2300      	movs	r3, #0
 8011812:	f8ad 3016 	strh.w	r3, [sp, #22]
 8011816:	f8ad 3018 	strh.w	r3, [sp, #24]
 801181a:	f8ad 301a 	strh.w	r3, [sp, #26]
 801181e:	6803      	ldr	r3, [r0, #0]
 8011820:	a904      	add	r1, sp, #16
 8011822:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8011824:	4798      	blx	r3
 8011826:	1d29      	adds	r1, r5, #4
 8011828:	a802      	add	r0, sp, #8
 801182a:	f7ff fac1 	bl	8010db0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801182e:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8011832:	88e0      	ldrh	r0, [r4, #6]
 8011834:	7921      	ldrb	r1, [r4, #4]
 8011836:	f8b5 c034 	ldrh.w	ip, [r5, #52]	@ 0x34
 801183a:	8922      	ldrh	r2, [r4, #8]
 801183c:	8eee      	ldrh	r6, [r5, #54]	@ 0x36
 801183e:	f88d 1014 	strb.w	r1, [sp, #20]
 8011842:	eba3 0808 	sub.w	r8, r3, r8
 8011846:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 801184a:	1bdf      	subs	r7, r3, r7
 801184c:	b2bb      	uxth	r3, r7
 801184e:	fa1f f888 	uxth.w	r8, r8
 8011852:	8967      	ldrh	r7, [r4, #10]
 8011854:	89a4      	ldrh	r4, [r4, #12]
 8011856:	4440      	add	r0, r8
 8011858:	4460      	add	r0, ip
 801185a:	441a      	add	r2, r3
 801185c:	44b8      	add	r8, r7
 801185e:	4423      	add	r3, r4
 8011860:	f8ad 0016 	strh.w	r0, [sp, #22]
 8011864:	4433      	add	r3, r6
 8011866:	4432      	add	r2, r6
 8011868:	44e0      	add	r8, ip
 801186a:	4c09      	ldr	r4, [pc, #36]	@ (8011890 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf8>)
 801186c:	6b28      	ldr	r0, [r5, #48]	@ 0x30
 801186e:	9404      	str	r4, [sp, #16]
 8011870:	f8ad 2018 	strh.w	r2, [sp, #24]
 8011874:	f8ad 801a 	strh.w	r8, [sp, #26]
 8011878:	f8ad 301c 	strh.w	r3, [sp, #28]
 801187c:	6803      	ldr	r3, [r0, #0]
 801187e:	a904      	add	r1, sp, #16
 8011880:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8011882:	4798      	blx	r3
 8011884:	b008      	add	sp, #32
 8011886:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801188a:	bf00      	nop
 801188c:	080252f4 	.word	0x080252f4
 8011890:	08025308 	.word	0x08025308

08011894 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>:
 8011894:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8011896:	4604      	mov	r4, r0
 8011898:	f934 2f0c 	ldrsh.w	r2, [r4, #12]!
 801189c:	3201      	adds	r2, #1
 801189e:	d112      	bne.n	80118c6 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv+0x32>
 80118a0:	6803      	ldr	r3, [r0, #0]
 80118a2:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 80118a6:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 80118aa:	f8ad 1004 	strh.w	r1, [sp, #4]
 80118ae:	2500      	movs	r5, #0
 80118b0:	9500      	str	r5, [sp, #0]
 80118b2:	466d      	mov	r5, sp
 80118b4:	4629      	mov	r1, r5
 80118b6:	f8ad 2006 	strh.w	r2, [sp, #6]
 80118ba:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80118bc:	4798      	blx	r3
 80118be:	e895 0003 	ldmia.w	r5, {r0, r1}
 80118c2:	e884 0003 	stmia.w	r4, {r0, r1}
 80118c6:	4620      	mov	r0, r4
 80118c8:	b003      	add	sp, #12
 80118ca:	bd30      	pop	{r4, r5, pc}

080118cc <_ZN8touchgfx8Drawable13getCachedAbsXEv>:
 80118cc:	b513      	push	{r0, r1, r4, lr}
 80118ce:	f9b0 3020 	ldrsh.w	r3, [r0, #32]
 80118d2:	3301      	adds	r3, #1
 80118d4:	4604      	mov	r4, r0
 80118d6:	d109      	bne.n	80118ec <_ZN8touchgfx8Drawable13getCachedAbsXEv+0x20>
 80118d8:	4601      	mov	r1, r0
 80118da:	4668      	mov	r0, sp
 80118dc:	f7ff fa68 	bl	8010db0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80118e0:	f8bd 3000 	ldrh.w	r3, [sp]
 80118e4:	8423      	strh	r3, [r4, #32]
 80118e6:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 80118ea:	8463      	strh	r3, [r4, #34]	@ 0x22
 80118ec:	f9b4 0020 	ldrsh.w	r0, [r4, #32]
 80118f0:	b002      	add	sp, #8
 80118f2:	bd10      	pop	{r4, pc}

080118f4 <_ZN8touchgfx8Drawable13getCachedAbsYEv>:
 80118f4:	b513      	push	{r0, r1, r4, lr}
 80118f6:	f9b0 3022 	ldrsh.w	r3, [r0, #34]	@ 0x22
 80118fa:	3301      	adds	r3, #1
 80118fc:	4604      	mov	r4, r0
 80118fe:	d109      	bne.n	8011914 <_ZN8touchgfx8Drawable13getCachedAbsYEv+0x20>
 8011900:	4601      	mov	r1, r0
 8011902:	4668      	mov	r0, sp
 8011904:	f7ff fa54 	bl	8010db0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8011908:	f8bd 3000 	ldrh.w	r3, [sp]
 801190c:	8423      	strh	r3, [r4, #32]
 801190e:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8011912:	8463      	strh	r3, [r4, #34]	@ 0x22
 8011914:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	@ 0x22
 8011918:	b002      	add	sp, #8
 801191a:	bd10      	pop	{r4, pc}

0801191c <_ZN8touchgfx6ScreenC1Ev>:
 801191c:	b570      	push	{r4, r5, r6, lr}
 801191e:	4605      	mov	r5, r0
 8011920:	4b16      	ldr	r3, [pc, #88]	@ (801197c <_ZN8touchgfx6ScreenC1Ev+0x60>)
 8011922:	f845 3b04 	str.w	r3, [r5], #4
 8011926:	2300      	movs	r3, #0
 8011928:	8103      	strh	r3, [r0, #8]
 801192a:	8143      	strh	r3, [r0, #10]
 801192c:	8183      	strh	r3, [r0, #12]
 801192e:	81c3      	strh	r3, [r0, #14]
 8011930:	8203      	strh	r3, [r0, #16]
 8011932:	8243      	strh	r3, [r0, #18]
 8011934:	8283      	strh	r3, [r0, #20]
 8011936:	82c3      	strh	r3, [r0, #22]
 8011938:	e9c0 3306 	strd	r3, r3, [r0, #24]
 801193c:	6203      	str	r3, [r0, #32]
 801193e:	8483      	strh	r3, [r0, #36]	@ 0x24
 8011940:	84c3      	strh	r3, [r0, #38]	@ 0x26
 8011942:	f880 3028 	strb.w	r3, [r0, #40]	@ 0x28
 8011946:	4a0e      	ldr	r2, [pc, #56]	@ (8011980 <_ZN8touchgfx6ScreenC1Ev+0x64>)
 8011948:	6343      	str	r3, [r0, #52]	@ 0x34
 801194a:	e9c0 330b 	strd	r3, r3, [r0, #44]	@ 0x2c
 801194e:	4b0d      	ldr	r3, [pc, #52]	@ (8011984 <_ZN8touchgfx6ScreenC1Ev+0x68>)
 8011950:	6042      	str	r2, [r0, #4]
 8011952:	f9b3 6000 	ldrsh.w	r6, [r3]
 8011956:	6b93      	ldr	r3, [r2, #56]	@ 0x38
 8011958:	4a0b      	ldr	r2, [pc, #44]	@ (8011988 <_ZN8touchgfx6ScreenC1Ev+0x6c>)
 801195a:	4604      	mov	r4, r0
 801195c:	2101      	movs	r1, #1
 801195e:	f880 1029 	strb.w	r1, [r0, #41]	@ 0x29
 8011962:	f880 1038 	strb.w	r1, [r0, #56]	@ 0x38
 8011966:	f9b2 1000 	ldrsh.w	r1, [r2]
 801196a:	4628      	mov	r0, r5
 801196c:	4798      	blx	r3
 801196e:	6863      	ldr	r3, [r4, #4]
 8011970:	4628      	mov	r0, r5
 8011972:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8011974:	4631      	mov	r1, r6
 8011976:	4798      	blx	r3
 8011978:	4620      	mov	r0, r4
 801197a:	bd70      	pop	{r4, r5, r6, pc}
 801197c:	08025330 	.word	0x08025330
 8011980:	08024f54 	.word	0x08024f54
 8011984:	200133c8 	.word	0x200133c8
 8011988:	200133c6 	.word	0x200133c6

0801198c <_ZN8touchgfx6Screen4drawEv>:
 801198c:	b507      	push	{r0, r1, r2, lr}
 801198e:	4b09      	ldr	r3, [pc, #36]	@ (80119b4 <_ZN8touchgfx6Screen4drawEv+0x28>)
 8011990:	f9b3 2000 	ldrsh.w	r2, [r3]
 8011994:	4b08      	ldr	r3, [pc, #32]	@ (80119b8 <_ZN8touchgfx6Screen4drawEv+0x2c>)
 8011996:	f8ad 2004 	strh.w	r2, [sp, #4]
 801199a:	f9b3 3000 	ldrsh.w	r3, [r3]
 801199e:	f8ad 3006 	strh.w	r3, [sp, #6]
 80119a2:	6803      	ldr	r3, [r0, #0]
 80119a4:	2100      	movs	r1, #0
 80119a6:	9100      	str	r1, [sp, #0]
 80119a8:	689b      	ldr	r3, [r3, #8]
 80119aa:	4669      	mov	r1, sp
 80119ac:	4798      	blx	r3
 80119ae:	b003      	add	sp, #12
 80119b0:	f85d fb04 	ldr.w	pc, [sp], #4
 80119b4:	200133c6 	.word	0x200133c6
 80119b8:	200133c8 	.word	0x200133c8

080119bc <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>:
 80119bc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80119c0:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 80119c4:	2b00      	cmp	r3, #0
 80119c6:	b089      	sub	sp, #36	@ 0x24
 80119c8:	4680      	mov	r8, r0
 80119ca:	460c      	mov	r4, r1
 80119cc:	4615      	mov	r5, r2
 80119ce:	dd0e      	ble.n	80119ee <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 80119d0:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 80119d4:	2b00      	cmp	r3, #0
 80119d6:	dd0a      	ble.n	80119ee <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 80119d8:	4628      	mov	r0, r5
 80119da:	f7ff ff5b 	bl	8011894 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 80119de:	4621      	mov	r1, r4
 80119e0:	f7fd feb9 	bl	800f756 <_ZNK8touchgfx4Rect9intersectERKS0_>
 80119e4:	69eb      	ldr	r3, [r5, #28]
 80119e6:	b928      	cbnz	r0, 80119f4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x38>
 80119e8:	461d      	mov	r5, r3
 80119ea:	2b00      	cmp	r3, #0
 80119ec:	d1f4      	bne.n	80119d8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1c>
 80119ee:	b009      	add	sp, #36	@ 0x24
 80119f0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80119f4:	ae04      	add	r6, sp, #16
 80119f6:	2b00      	cmp	r3, #0
 80119f8:	f000 80b5 	beq.w	8011b66 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 80119fc:	682b      	ldr	r3, [r5, #0]
 80119fe:	4629      	mov	r1, r5
 8011a00:	68db      	ldr	r3, [r3, #12]
 8011a02:	a802      	add	r0, sp, #8
 8011a04:	4798      	blx	r3
 8011a06:	4628      	mov	r0, r5
 8011a08:	f7ff ff60 	bl	80118cc <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 8011a0c:	f8bd 7008 	ldrh.w	r7, [sp, #8]
 8011a10:	4407      	add	r7, r0
 8011a12:	4628      	mov	r0, r5
 8011a14:	f7ff ff6e 	bl	80118f4 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 8011a18:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8011a1c:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 8011a20:	f8ad 2014 	strh.w	r2, [sp, #20]
 8011a24:	4418      	add	r0, r3
 8011a26:	4621      	mov	r1, r4
 8011a28:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 8011a2c:	f8ad 0012 	strh.w	r0, [sp, #18]
 8011a30:	b23f      	sxth	r7, r7
 8011a32:	4630      	mov	r0, r6
 8011a34:	f8ad 3016 	strh.w	r3, [sp, #22]
 8011a38:	f8ad 7010 	strh.w	r7, [sp, #16]
 8011a3c:	f7f9 fabc 	bl	800afb8 <_ZN8touchgfx4RectaNERKS0_>
 8011a40:	4628      	mov	r0, r5
 8011a42:	f7ff ff27 	bl	8011894 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 8011a46:	4602      	mov	r2, r0
 8011a48:	e896 0003 	ldmia.w	r6, {r0, r1}
 8011a4c:	ab06      	add	r3, sp, #24
 8011a4e:	e883 0003 	stmia.w	r3, {r0, r1}
 8011a52:	4611      	mov	r1, r2
 8011a54:	4618      	mov	r0, r3
 8011a56:	f7f9 faaf 	bl	800afb8 <_ZN8touchgfx4RectaNERKS0_>
 8011a5a:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8011a5e:	f9b4 1000 	ldrsh.w	r1, [r4]
 8011a62:	f9bd a01a 	ldrsh.w	sl, [sp, #26]
 8011a66:	f9bd b01c 	ldrsh.w	fp, [sp, #28]
 8011a6a:	f9bd 901e 	ldrsh.w	r9, [sp, #30]
 8011a6e:	4299      	cmp	r1, r3
 8011a70:	d10b      	bne.n	8011a8a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 8011a72:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 8011a76:	4552      	cmp	r2, sl
 8011a78:	d107      	bne.n	8011a8a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 8011a7a:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 8011a7e:	455a      	cmp	r2, fp
 8011a80:	d103      	bne.n	8011a8a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 8011a82:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 8011a86:	454a      	cmp	r2, r9
 8011a88:	d06d      	beq.n	8011b66 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 8011a8a:	f1bb 0f00 	cmp.w	fp, #0
 8011a8e:	dd65      	ble.n	8011b5c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 8011a90:	f1b9 0f00 	cmp.w	r9, #0
 8011a94:	dd62      	ble.n	8011b5c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 8011a96:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 8011a9a:	fa1f f08a 	uxth.w	r0, sl
 8011a9e:	4552      	cmp	r2, sl
 8011aa0:	9000      	str	r0, [sp, #0]
 8011aa2:	da12      	bge.n	8011aca <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x10e>
 8011aa4:	9301      	str	r3, [sp, #4]
 8011aa6:	9b00      	ldr	r3, [sp, #0]
 8011aa8:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8011aac:	f8ad 2012 	strh.w	r2, [sp, #18]
 8011ab0:	1a9a      	subs	r2, r3, r2
 8011ab2:	f8ad 1010 	strh.w	r1, [sp, #16]
 8011ab6:	f8ad 0014 	strh.w	r0, [sp, #20]
 8011aba:	f8ad 2016 	strh.w	r2, [sp, #22]
 8011abe:	69ea      	ldr	r2, [r5, #28]
 8011ac0:	4631      	mov	r1, r6
 8011ac2:	4640      	mov	r0, r8
 8011ac4:	f7ff ff7a 	bl	80119bc <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8011ac8:	9b01      	ldr	r3, [sp, #4]
 8011aca:	f9b4 2000 	ldrsh.w	r2, [r4]
 8011ace:	429a      	cmp	r2, r3
 8011ad0:	b29f      	uxth	r7, r3
 8011ad2:	da0d      	bge.n	8011af0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x134>
 8011ad4:	f8ad 2010 	strh.w	r2, [sp, #16]
 8011ad8:	1aba      	subs	r2, r7, r2
 8011ada:	f8ad a012 	strh.w	sl, [sp, #18]
 8011ade:	f8ad 2014 	strh.w	r2, [sp, #20]
 8011ae2:	f8ad 9016 	strh.w	r9, [sp, #22]
 8011ae6:	69ea      	ldr	r2, [r5, #28]
 8011ae8:	4631      	mov	r1, r6
 8011aea:	4640      	mov	r0, r8
 8011aec:	f7ff ff66 	bl	80119bc <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8011af0:	8822      	ldrh	r2, [r4, #0]
 8011af2:	88a3      	ldrh	r3, [r4, #4]
 8011af4:	445f      	add	r7, fp
 8011af6:	4413      	add	r3, r2
 8011af8:	b29b      	uxth	r3, r3
 8011afa:	b2bf      	uxth	r7, r7
 8011afc:	b23a      	sxth	r2, r7
 8011afe:	b219      	sxth	r1, r3
 8011b00:	4291      	cmp	r1, r2
 8011b02:	dd0d      	ble.n	8011b20 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x164>
 8011b04:	1bdb      	subs	r3, r3, r7
 8011b06:	f8ad 2010 	strh.w	r2, [sp, #16]
 8011b0a:	f8ad a012 	strh.w	sl, [sp, #18]
 8011b0e:	f8ad 3014 	strh.w	r3, [sp, #20]
 8011b12:	f8ad 9016 	strh.w	r9, [sp, #22]
 8011b16:	69ea      	ldr	r2, [r5, #28]
 8011b18:	4631      	mov	r1, r6
 8011b1a:	4640      	mov	r0, r8
 8011b1c:	f7ff ff4e 	bl	80119bc <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8011b20:	88e2      	ldrh	r2, [r4, #6]
 8011b22:	8863      	ldrh	r3, [r4, #2]
 8011b24:	4413      	add	r3, r2
 8011b26:	9a00      	ldr	r2, [sp, #0]
 8011b28:	444a      	add	r2, r9
 8011b2a:	b29b      	uxth	r3, r3
 8011b2c:	fa1f f982 	uxth.w	r9, r2
 8011b30:	fa0f f289 	sxth.w	r2, r9
 8011b34:	b219      	sxth	r1, r3
 8011b36:	428a      	cmp	r2, r1
 8011b38:	da15      	bge.n	8011b66 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 8011b3a:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8011b3e:	f9b4 0000 	ldrsh.w	r0, [r4]
 8011b42:	f8ad 1014 	strh.w	r1, [sp, #20]
 8011b46:	eba3 0309 	sub.w	r3, r3, r9
 8011b4a:	f8ad 0010 	strh.w	r0, [sp, #16]
 8011b4e:	f8ad 2012 	strh.w	r2, [sp, #18]
 8011b52:	f8ad 3016 	strh.w	r3, [sp, #22]
 8011b56:	69ea      	ldr	r2, [r5, #28]
 8011b58:	4631      	mov	r1, r6
 8011b5a:	e001      	b.n	8011b60 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a4>
 8011b5c:	69ea      	ldr	r2, [r5, #28]
 8011b5e:	4621      	mov	r1, r4
 8011b60:	4640      	mov	r0, r8
 8011b62:	f7ff ff2b 	bl	80119bc <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8011b66:	4628      	mov	r0, r5
 8011b68:	f7ff fe94 	bl	8011894 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 8011b6c:	6861      	ldr	r1, [r4, #4]
 8011b6e:	4602      	mov	r2, r0
 8011b70:	6820      	ldr	r0, [r4, #0]
 8011b72:	4633      	mov	r3, r6
 8011b74:	c303      	stmia	r3!, {r0, r1}
 8011b76:	4611      	mov	r1, r2
 8011b78:	4630      	mov	r0, r6
 8011b7a:	f7f9 fa1d 	bl	800afb8 <_ZN8touchgfx4RectaNERKS0_>
 8011b7e:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 8011b82:	2b00      	cmp	r3, #0
 8011b84:	f77f af33 	ble.w	80119ee <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8011b88:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 8011b8c:	2b00      	cmp	r3, #0
 8011b8e:	f77f af2e 	ble.w	80119ee <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8011b92:	4628      	mov	r0, r5
 8011b94:	f7ff fe9a 	bl	80118cc <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 8011b98:	f8bd 3010 	ldrh.w	r3, [sp, #16]
 8011b9c:	1a18      	subs	r0, r3, r0
 8011b9e:	f8ad 0010 	strh.w	r0, [sp, #16]
 8011ba2:	4628      	mov	r0, r5
 8011ba4:	f7ff fea6 	bl	80118f4 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 8011ba8:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8011bac:	1a18      	subs	r0, r3, r0
 8011bae:	f8ad 0012 	strh.w	r0, [sp, #18]
 8011bb2:	682b      	ldr	r3, [r5, #0]
 8011bb4:	4631      	mov	r1, r6
 8011bb6:	689b      	ldr	r3, [r3, #8]
 8011bb8:	4628      	mov	r0, r5
 8011bba:	4798      	blx	r3
 8011bbc:	e717      	b.n	80119ee <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>

08011bbe <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>:
 8011bbe:	b570      	push	{r4, r5, r6, lr}
 8011bc0:	460c      	mov	r4, r1
 8011bc2:	b086      	sub	sp, #24
 8011bc4:	1d06      	adds	r6, r0, #4
 8011bc6:	2300      	movs	r3, #0
 8011bc8:	4631      	mov	r1, r6
 8011bca:	4605      	mov	r5, r0
 8011bcc:	a802      	add	r0, sp, #8
 8011bce:	9301      	str	r3, [sp, #4]
 8011bd0:	f7ff f8ee 	bl	8010db0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8011bd4:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8011bd8:	8822      	ldrh	r2, [r4, #0]
 8011bda:	f8bd 100a 	ldrh.w	r1, [sp, #10]
 8011bde:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8011be2:	f8ad 0014 	strh.w	r0, [sp, #20]
 8011be6:	1ad2      	subs	r2, r2, r3
 8011be8:	8863      	ldrh	r3, [r4, #2]
 8011bea:	f8ad 2010 	strh.w	r2, [sp, #16]
 8011bee:	1a5b      	subs	r3, r3, r1
 8011bf0:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 8011bf4:	f8ad 1016 	strh.w	r1, [sp, #22]
 8011bf8:	aa01      	add	r2, sp, #4
 8011bfa:	a904      	add	r1, sp, #16
 8011bfc:	4630      	mov	r0, r6
 8011bfe:	f8ad 3012 	strh.w	r3, [sp, #18]
 8011c02:	f7f9 fab1 	bl	800b168 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>
 8011c06:	9a01      	ldr	r2, [sp, #4]
 8011c08:	b11a      	cbz	r2, 8011c12 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE+0x54>
 8011c0a:	4621      	mov	r1, r4
 8011c0c:	4628      	mov	r0, r5
 8011c0e:	f7ff fed5 	bl	80119bc <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8011c12:	b006      	add	sp, #24
 8011c14:	bd70      	pop	{r4, r5, r6, pc}

08011c16 <_ZN8touchgfx6Screen4drawERNS_4RectE>:
 8011c16:	b530      	push	{r4, r5, lr}
 8011c18:	4602      	mov	r2, r0
 8011c1a:	4604      	mov	r4, r0
 8011c1c:	f852 0f08 	ldr.w	r0, [r2, #8]!
 8011c20:	b085      	sub	sp, #20
 8011c22:	460d      	mov	r5, r1
 8011c24:	6851      	ldr	r1, [r2, #4]
 8011c26:	466b      	mov	r3, sp
 8011c28:	c303      	stmia	r3!, {r0, r1}
 8011c2a:	4629      	mov	r1, r5
 8011c2c:	4668      	mov	r0, sp
 8011c2e:	f7f9 f9c3 	bl	800afb8 <_ZN8touchgfx4RectaNERKS0_>
 8011c32:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
 8011c36:	b12b      	cbz	r3, 8011c44 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2e>
 8011c38:	4669      	mov	r1, sp
 8011c3a:	4620      	mov	r0, r4
 8011c3c:	f7ff ffbf 	bl	8011bbe <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>
 8011c40:	b005      	add	sp, #20
 8011c42:	bd30      	pop	{r4, r5, pc}
 8011c44:	3404      	adds	r4, #4
 8011c46:	4621      	mov	r1, r4
 8011c48:	a802      	add	r0, sp, #8
 8011c4a:	f7ff f8b1 	bl	8010db0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8011c4e:	f8bd 3000 	ldrh.w	r3, [sp]
 8011c52:	f8bd 2008 	ldrh.w	r2, [sp, #8]
 8011c56:	1a9b      	subs	r3, r3, r2
 8011c58:	f8ad 3000 	strh.w	r3, [sp]
 8011c5c:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8011c60:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8011c64:	4669      	mov	r1, sp
 8011c66:	1a9b      	subs	r3, r3, r2
 8011c68:	4620      	mov	r0, r4
 8011c6a:	f8ad 3002 	strh.w	r3, [sp, #2]
 8011c6e:	f7f9 fa42 	bl	800b0f6 <_ZNK8touchgfx9Container4drawERKNS_4RectE>
 8011c72:	e7e5      	b.n	8011c40 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2a>

08011c74 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>:
 8011c74:	680a      	ldr	r2, [r1, #0]
 8011c76:	460b      	mov	r3, r1
 8011c78:	6992      	ldr	r2, [r2, #24]
 8011c7a:	1d01      	adds	r1, r0, #4
 8011c7c:	4618      	mov	r0, r3
 8011c7e:	4710      	bx	r2

08011c80 <_ZN8touchgfx12TextProviderC1Ev>:
 8011c80:	b538      	push	{r3, r4, r5, lr}
 8011c82:	2500      	movs	r5, #0
 8011c84:	2302      	movs	r3, #2
 8011c86:	4604      	mov	r4, r0
 8011c88:	e9c0 5500 	strd	r5, r5, [r0]
 8011c8c:	7403      	strb	r3, [r0, #16]
 8011c8e:	6145      	str	r5, [r0, #20]
 8011c90:	7605      	strb	r5, [r0, #24]
 8011c92:	83c5      	strh	r5, [r0, #30]
 8011c94:	8405      	strh	r5, [r0, #32]
 8011c96:	86c5      	strh	r5, [r0, #54]	@ 0x36
 8011c98:	8705      	strh	r5, [r0, #56]	@ 0x38
 8011c9a:	87c5      	strh	r5, [r0, #62]	@ 0x3e
 8011c9c:	f8a0 5040 	strh.w	r5, [r0, #64]	@ 0x40
 8011ca0:	e9c0 5511 	strd	r5, r5, [r0, #68]	@ 0x44
 8011ca4:	220e      	movs	r2, #14
 8011ca6:	4629      	mov	r1, r5
 8011ca8:	304c      	adds	r0, #76	@ 0x4c
 8011caa:	f011 fa82 	bl	80231b2 <memset>
 8011cae:	2301      	movs	r3, #1
 8011cb0:	4620      	mov	r0, r4
 8011cb2:	f8a4 505a 	strh.w	r5, [r4, #90]	@ 0x5a
 8011cb6:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
 8011cba:	f8a4 505e 	strh.w	r5, [r4, #94]	@ 0x5e
 8011cbe:	f884 3060 	strb.w	r3, [r4, #96]	@ 0x60
 8011cc2:	f884 5061 	strb.w	r5, [r4, #97]	@ 0x61
 8011cc6:	f7f1 ff99 	bl	8003bfc <_ZN8touchgfx12TextProvider18initializeInternalEv>
 8011cca:	4620      	mov	r0, r4
 8011ccc:	bd38      	pop	{r3, r4, r5, pc}

08011cce <_ZN8touchgfx12TextProvider19getNextCharInternalEv>:
 8011cce:	b530      	push	{r4, r5, lr}
 8011cd0:	2500      	movs	r5, #0
 8011cd2:	2401      	movs	r4, #1
 8011cd4:	6843      	ldr	r3, [r0, #4]
 8011cd6:	b913      	cbnz	r3, 8011cde <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x10>
 8011cd8:	6803      	ldr	r3, [r0, #0]
 8011cda:	b313      	cbz	r3, 8011d22 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 8011cdc:	6043      	str	r3, [r0, #4]
 8011cde:	7e03      	ldrb	r3, [r0, #24]
 8011ce0:	b143      	cbz	r3, 8011cf4 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x26>
 8011ce2:	6943      	ldr	r3, [r0, #20]
 8011ce4:	b12b      	cbz	r3, 8011cf2 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 8011ce6:	881a      	ldrh	r2, [r3, #0]
 8011ce8:	b11a      	cbz	r2, 8011cf2 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 8011cea:	1c9a      	adds	r2, r3, #2
 8011cec:	6142      	str	r2, [r0, #20]
 8011cee:	8818      	ldrh	r0, [r3, #0]
 8011cf0:	bd30      	pop	{r4, r5, pc}
 8011cf2:	7605      	strb	r5, [r0, #24]
 8011cf4:	6843      	ldr	r3, [r0, #4]
 8011cf6:	8819      	ldrh	r1, [r3, #0]
 8011cf8:	b199      	cbz	r1, 8011d22 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 8011cfa:	1c9a      	adds	r2, r3, #2
 8011cfc:	2902      	cmp	r1, #2
 8011cfe:	6042      	str	r2, [r0, #4]
 8011d00:	d1f5      	bne.n	8011cee <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x20>
 8011d02:	7c03      	ldrb	r3, [r0, #16]
 8011d04:	2b01      	cmp	r3, #1
 8011d06:	d8e5      	bhi.n	8011cd4 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8011d08:	1c5a      	adds	r2, r3, #1
 8011d0a:	3302      	adds	r3, #2
 8011d0c:	7402      	strb	r2, [r0, #16]
 8011d0e:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 8011d12:	6143      	str	r3, [r0, #20]
 8011d14:	2b00      	cmp	r3, #0
 8011d16:	d0dd      	beq.n	8011cd4 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8011d18:	881b      	ldrh	r3, [r3, #0]
 8011d1a:	2b00      	cmp	r3, #0
 8011d1c:	d0da      	beq.n	8011cd4 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8011d1e:	7604      	strb	r4, [r0, #24]
 8011d20:	e7d8      	b.n	8011cd4 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8011d22:	2000      	movs	r0, #0
 8011d24:	e7e4      	b.n	8011cf0 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x22>

08011d26 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>:
 8011d26:	b430      	push	{r4, r5}
 8011d28:	6001      	str	r1, [r0, #0]
 8011d2a:	2100      	movs	r1, #0
 8011d2c:	6041      	str	r1, [r0, #4]
 8011d2e:	6815      	ldr	r5, [r2, #0]
 8011d30:	6085      	str	r5, [r0, #8]
 8011d32:	6852      	ldr	r2, [r2, #4]
 8011d34:	6443      	str	r3, [r0, #68]	@ 0x44
 8011d36:	9b02      	ldr	r3, [sp, #8]
 8011d38:	60c2      	str	r2, [r0, #12]
 8011d3a:	7401      	strb	r1, [r0, #16]
 8011d3c:	6141      	str	r1, [r0, #20]
 8011d3e:	7601      	strb	r1, [r0, #24]
 8011d40:	8701      	strh	r1, [r0, #56]	@ 0x38
 8011d42:	8401      	strh	r1, [r0, #32]
 8011d44:	f8a0 1040 	strh.w	r1, [r0, #64]	@ 0x40
 8011d48:	6483      	str	r3, [r0, #72]	@ 0x48
 8011d4a:	bc30      	pop	{r4, r5}
 8011d4c:	f7f1 bf56 	b.w	8003bfc <_ZN8touchgfx12TextProvider18initializeInternalEv>

08011d50 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>:
 8011d50:	b5f0      	push	{r4, r5, r6, r7, lr}
 8011d52:	4605      	mov	r5, r0
 8011d54:	4608      	mov	r0, r1
 8011d56:	b1e9      	cbz	r1, 8011d94 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x44>
 8011d58:	f105 044c 	add.w	r4, r5, #76	@ 0x4c
 8011d5c:	460b      	mov	r3, r1
 8011d5e:	f101 0708 	add.w	r7, r1, #8
 8011d62:	4622      	mov	r2, r4
 8011d64:	6818      	ldr	r0, [r3, #0]
 8011d66:	6859      	ldr	r1, [r3, #4]
 8011d68:	4626      	mov	r6, r4
 8011d6a:	c603      	stmia	r6!, {r0, r1}
 8011d6c:	3308      	adds	r3, #8
 8011d6e:	42bb      	cmp	r3, r7
 8011d70:	4634      	mov	r4, r6
 8011d72:	d1f7      	bne.n	8011d64 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x14>
 8011d74:	6818      	ldr	r0, [r3, #0]
 8011d76:	6030      	str	r0, [r6, #0]
 8011d78:	889b      	ldrh	r3, [r3, #4]
 8011d7a:	80b3      	strh	r3, [r6, #4]
 8011d7c:	f895 3059 	ldrb.w	r3, [r5, #89]	@ 0x59
 8011d80:	015b      	lsls	r3, r3, #5
 8011d82:	f403 7180 	and.w	r1, r3, #256	@ 0x100
 8011d86:	f895 3052 	ldrb.w	r3, [r5, #82]	@ 0x52
 8011d8a:	430b      	orrs	r3, r1
 8011d8c:	425b      	negs	r3, r3
 8011d8e:	f885 3055 	strb.w	r3, [r5, #85]	@ 0x55
 8011d92:	4610      	mov	r0, r2
 8011d94:	bdf0      	pop	{r4, r5, r6, r7, pc}

08011d96 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>:
 8011d96:	b538      	push	{r3, r4, r5, lr}
 8011d98:	460c      	mov	r4, r1
 8011d9a:	6811      	ldr	r1, [r2, #0]
 8011d9c:	4610      	mov	r0, r2
 8011d9e:	68cd      	ldr	r5, [r1, #12]
 8011da0:	4619      	mov	r1, r3
 8011da2:	47a8      	blx	r5
 8011da4:	2800      	cmp	r0, #0
 8011da6:	bf08      	it	eq
 8011da8:	4620      	moveq	r0, r4
 8011daa:	bd38      	pop	{r3, r4, r5, pc}

08011dac <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>:
 8011dac:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011db0:	468c      	mov	ip, r1
 8011db2:	4605      	mov	r5, r0
 8011db4:	4614      	mov	r4, r2
 8011db6:	b942      	cbnz	r2, 8011dca <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1e>
 8011db8:	f8a5 205a 	strh.w	r2, [r5, #90]	@ 0x5a
 8011dbc:	f8a5 205c 	strh.w	r2, [r5, #92]	@ 0x5c
 8011dc0:	f8a5 205e 	strh.w	r2, [r5, #94]	@ 0x5e
 8011dc4:	4620      	mov	r0, r4
 8011dc6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8011dca:	7b50      	ldrb	r0, [r2, #13]
 8011dcc:	8893      	ldrh	r3, [r2, #4]
 8011dce:	0106      	lsls	r6, r0, #4
 8011dd0:	f406 7280 	and.w	r2, r6, #256	@ 0x100
 8011dd4:	79e6      	ldrb	r6, [r4, #7]
 8011dd6:	f46f 6163 	mvn.w	r1, #3632	@ 0xe30
 8011dda:	4316      	orrs	r6, r2
 8011ddc:	185a      	adds	r2, r3, r1
 8011dde:	b291      	uxth	r1, r2
 8011de0:	291d      	cmp	r1, #29
 8011de2:	b2b7      	uxth	r7, r6
 8011de4:	d87e      	bhi.n	8011ee4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x138>
 8011de6:	2201      	movs	r2, #1
 8011de8:	408a      	lsls	r2, r1
 8011dea:	498a      	ldr	r1, [pc, #552]	@ (8012014 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x268>)
 8011dec:	420a      	tst	r2, r1
 8011dee:	ea4f 06e6 	mov.w	r6, r6, asr #3
 8011df2:	d12d      	bne.n	8011e50 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa4>
 8011df4:	f412 7f60 	tst.w	r2, #896	@ 0x380
 8011df8:	d074      	beq.n	8011ee4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x138>
 8011dfa:	f105 024c 	add.w	r2, r5, #76	@ 0x4c
 8011dfe:	4623      	mov	r3, r4
 8011e00:	f104 0e08 	add.w	lr, r4, #8
 8011e04:	4614      	mov	r4, r2
 8011e06:	6818      	ldr	r0, [r3, #0]
 8011e08:	6859      	ldr	r1, [r3, #4]
 8011e0a:	4694      	mov	ip, r2
 8011e0c:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 8011e10:	3308      	adds	r3, #8
 8011e12:	4573      	cmp	r3, lr
 8011e14:	4662      	mov	r2, ip
 8011e16:	d1f6      	bne.n	8011e06 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x5a>
 8011e18:	6818      	ldr	r0, [r3, #0]
 8011e1a:	f8cc 0000 	str.w	r0, [ip]
 8011e1e:	889b      	ldrh	r3, [r3, #4]
 8011e20:	f8ac 3004 	strh.w	r3, [ip, #4]
 8011e24:	f8b5 105c 	ldrh.w	r1, [r5, #92]	@ 0x5c
 8011e28:	f895 0059 	ldrb.w	r0, [r5, #89]	@ 0x59
 8011e2c:	b2b3      	uxth	r3, r6
 8011e2e:	1aca      	subs	r2, r1, r3
 8011e30:	b292      	uxth	r2, r2
 8011e32:	f885 2054 	strb.w	r2, [r5, #84]	@ 0x54
 8011e36:	10d2      	asrs	r2, r2, #3
 8011e38:	f020 0060 	bic.w	r0, r0, #96	@ 0x60
 8011e3c:	f002 0260 	and.w	r2, r2, #96	@ 0x60
 8011e40:	4302      	orrs	r2, r0
 8011e42:	1bcf      	subs	r7, r1, r7
 8011e44:	f885 2059 	strb.w	r2, [r5, #89]	@ 0x59
 8011e48:	1afb      	subs	r3, r7, r3
 8011e4a:	f8a5 305c 	strh.w	r3, [r5, #92]	@ 0x5c
 8011e4e:	e7b9      	b.n	8011dc4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x18>
 8011e50:	f105 024c 	add.w	r2, r5, #76	@ 0x4c
 8011e54:	4623      	mov	r3, r4
 8011e56:	f104 0808 	add.w	r8, r4, #8
 8011e5a:	4614      	mov	r4, r2
 8011e5c:	6818      	ldr	r0, [r3, #0]
 8011e5e:	6859      	ldr	r1, [r3, #4]
 8011e60:	4696      	mov	lr, r2
 8011e62:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 8011e66:	3308      	adds	r3, #8
 8011e68:	4543      	cmp	r3, r8
 8011e6a:	4672      	mov	r2, lr
 8011e6c:	d1f6      	bne.n	8011e5c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xb0>
 8011e6e:	6818      	ldr	r0, [r3, #0]
 8011e70:	f8ce 0000 	str.w	r0, [lr]
 8011e74:	889b      	ldrh	r3, [r3, #4]
 8011e76:	f8ae 3004 	strh.w	r3, [lr, #4]
 8011e7a:	8eeb      	ldrh	r3, [r5, #54]	@ 0x36
 8011e7c:	eb05 0343 	add.w	r3, r5, r3, lsl #1
 8011e80:	8c59      	ldrh	r1, [r3, #34]	@ 0x22
 8011e82:	f640 6333 	movw	r3, #3635	@ 0xe33
 8011e86:	4299      	cmp	r1, r3
 8011e88:	d111      	bne.n	8011eae <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x102>
 8011e8a:	f8dc 3000 	ldr.w	r3, [ip]
 8011e8e:	4660      	mov	r0, ip
 8011e90:	68db      	ldr	r3, [r3, #12]
 8011e92:	4798      	blx	r3
 8011e94:	7b41      	ldrb	r1, [r0, #13]
 8011e96:	00cb      	lsls	r3, r1, #3
 8011e98:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 8011e9c:	7a03      	ldrb	r3, [r0, #8]
 8011e9e:	4313      	orrs	r3, r2
 8011ea0:	064a      	lsls	r2, r1, #25
 8011ea2:	bf44      	itt	mi
 8011ea4:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 8011ea8:	b21b      	sxthmi	r3, r3
 8011eaa:	f8a5 305a 	strh.w	r3, [r5, #90]	@ 0x5a
 8011eae:	f8b5 305a 	ldrh.w	r3, [r5, #90]	@ 0x5a
 8011eb2:	f895 2059 	ldrb.w	r2, [r5, #89]	@ 0x59
 8011eb6:	443b      	add	r3, r7
 8011eb8:	4433      	add	r3, r6
 8011eba:	b29b      	uxth	r3, r3
 8011ebc:	f8a5 305a 	strh.w	r3, [r5, #90]	@ 0x5a
 8011ec0:	f885 3054 	strb.w	r3, [r5, #84]	@ 0x54
 8011ec4:	10db      	asrs	r3, r3, #3
 8011ec6:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
 8011eca:	f003 0360 	and.w	r3, r3, #96	@ 0x60
 8011ece:	4313      	orrs	r3, r2
 8011ed0:	f885 3059 	strb.w	r3, [r5, #89]	@ 0x59
 8011ed4:	f895 205e 	ldrb.w	r2, [r5, #94]	@ 0x5e
 8011ed8:	f895 3055 	ldrb.w	r3, [r5, #85]	@ 0x55
 8011edc:	1a9b      	subs	r3, r3, r2
 8011ede:	f885 3055 	strb.w	r3, [r5, #85]	@ 0x55
 8011ee2:	e76f      	b.n	8011dc4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x18>
 8011ee4:	f023 0204 	bic.w	r2, r3, #4
 8011ee8:	f640 611b 	movw	r1, #3611	@ 0xe1b
 8011eec:	428a      	cmp	r2, r1
 8011eee:	d003      	beq.n	8011ef8 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x14c>
 8011ef0:	f640 621d 	movw	r2, #3613	@ 0xe1d
 8011ef4:	4293      	cmp	r3, r2
 8011ef6:	d137      	bne.n	8011f68 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1bc>
 8011ef8:	f105 064c 	add.w	r6, r5, #76	@ 0x4c
 8011efc:	4622      	mov	r2, r4
 8011efe:	f104 0808 	add.w	r8, r4, #8
 8011f02:	4634      	mov	r4, r6
 8011f04:	6810      	ldr	r0, [r2, #0]
 8011f06:	6851      	ldr	r1, [r2, #4]
 8011f08:	46b6      	mov	lr, r6
 8011f0a:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 8011f0e:	3208      	adds	r2, #8
 8011f10:	4542      	cmp	r2, r8
 8011f12:	4676      	mov	r6, lr
 8011f14:	d1f6      	bne.n	8011f04 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x158>
 8011f16:	6810      	ldr	r0, [r2, #0]
 8011f18:	f8ce 0000 	str.w	r0, [lr]
 8011f1c:	8892      	ldrh	r2, [r2, #4]
 8011f1e:	f8ae 2004 	strh.w	r2, [lr, #4]
 8011f22:	3b01      	subs	r3, #1
 8011f24:	b29b      	uxth	r3, r3
 8011f26:	4662      	mov	r2, ip
 8011f28:	4621      	mov	r1, r4
 8011f2a:	4628      	mov	r0, r5
 8011f2c:	f7ff ff33 	bl	8011d96 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 8011f30:	7b41      	ldrb	r1, [r0, #13]
 8011f32:	00cb      	lsls	r3, r1, #3
 8011f34:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 8011f38:	7a03      	ldrb	r3, [r0, #8]
 8011f3a:	0648      	lsls	r0, r1, #25
 8011f3c:	ea43 0302 	orr.w	r3, r3, r2
 8011f40:	bf44      	itt	mi
 8011f42:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 8011f46:	b21b      	sxthmi	r3, r3
 8011f48:	f8a5 305a 	strh.w	r3, [r5, #90]	@ 0x5a
 8011f4c:	f895 3059 	ldrb.w	r3, [r5, #89]	@ 0x59
 8011f50:	f895 2056 	ldrb.w	r2, [r5, #86]	@ 0x56
 8011f54:	005b      	lsls	r3, r3, #1
 8011f56:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8011f5a:	4313      	orrs	r3, r2
 8011f5c:	115a      	asrs	r2, r3, #5
 8011f5e:	eb02 0393 	add.w	r3, r2, r3, lsr #2
 8011f62:	f8a5 305e 	strh.w	r3, [r5, #94]	@ 0x5e
 8011f66:	e046      	b.n	8011ff6 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x24a>
 8011f68:	00c2      	lsls	r2, r0, #3
 8011f6a:	f402 7180 	and.w	r1, r2, #256	@ 0x100
 8011f6e:	7a22      	ldrb	r2, [r4, #8]
 8011f70:	430a      	orrs	r2, r1
 8011f72:	0641      	lsls	r1, r0, #25
 8011f74:	bf44      	itt	mi
 8011f76:	f5a2 7200 	submi.w	r2, r2, #512	@ 0x200
 8011f7a:	b212      	sxthmi	r2, r2
 8011f7c:	f8a5 205a 	strh.w	r2, [r5, #90]	@ 0x5a
 8011f80:	f640 6109 	movw	r1, #3593	@ 0xe09
 8011f84:	f023 0210 	bic.w	r2, r3, #16
 8011f88:	428a      	cmp	r2, r1
 8011f8a:	d003      	beq.n	8011f94 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1e8>
 8011f8c:	f640 6213 	movw	r2, #3603	@ 0xe13
 8011f90:	4293      	cmp	r3, r2
 8011f92:	d13d      	bne.n	8012010 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x264>
 8011f94:	f105 024c 	add.w	r2, r5, #76	@ 0x4c
 8011f98:	f104 0808 	add.w	r8, r4, #8
 8011f9c:	4696      	mov	lr, r2
 8011f9e:	6820      	ldr	r0, [r4, #0]
 8011fa0:	6861      	ldr	r1, [r4, #4]
 8011fa2:	4616      	mov	r6, r2
 8011fa4:	c603      	stmia	r6!, {r0, r1}
 8011fa6:	3408      	adds	r4, #8
 8011fa8:	4544      	cmp	r4, r8
 8011faa:	4632      	mov	r2, r6
 8011fac:	d1f7      	bne.n	8011f9e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1f2>
 8011fae:	6820      	ldr	r0, [r4, #0]
 8011fb0:	6030      	str	r0, [r6, #0]
 8011fb2:	88a1      	ldrh	r1, [r4, #4]
 8011fb4:	80b1      	strh	r1, [r6, #4]
 8011fb6:	f895 6059 	ldrb.w	r6, [r5, #89]	@ 0x59
 8011fba:	0076      	lsls	r6, r6, #1
 8011fbc:	f406 7280 	and.w	r2, r6, #256	@ 0x100
 8011fc0:	f895 6056 	ldrb.w	r6, [r5, #86]	@ 0x56
 8011fc4:	4316      	orrs	r6, r2
 8011fc6:	f640 6213 	movw	r2, #3603	@ 0xe13
 8011fca:	4293      	cmp	r3, r2
 8011fcc:	bf1a      	itte	ne
 8011fce:	f103 33ff 	addne.w	r3, r3, #4294967295
 8011fd2:	b29b      	uxthne	r3, r3
 8011fd4:	f640 630c 	movweq	r3, #3596	@ 0xe0c
 8011fd8:	4662      	mov	r2, ip
 8011fda:	4671      	mov	r1, lr
 8011fdc:	4628      	mov	r0, r5
 8011fde:	4674      	mov	r4, lr
 8011fe0:	f7ff fed9 	bl	8011d96 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 8011fe4:	7b43      	ldrb	r3, [r0, #13]
 8011fe6:	7a82      	ldrb	r2, [r0, #10]
 8011fe8:	005b      	lsls	r3, r3, #1
 8011fea:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8011fee:	4313      	orrs	r3, r2
 8011ff0:	1af6      	subs	r6, r6, r3
 8011ff2:	f8a5 605e 	strh.w	r6, [r5, #94]	@ 0x5e
 8011ff6:	7b61      	ldrb	r1, [r4, #13]
 8011ff8:	00cb      	lsls	r3, r1, #3
 8011ffa:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 8011ffe:	7a23      	ldrb	r3, [r4, #8]
 8012000:	4313      	orrs	r3, r2
 8012002:	064a      	lsls	r2, r1, #25
 8012004:	bf44      	itt	mi
 8012006:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 801200a:	b21b      	sxthmi	r3, r3
 801200c:	1bdb      	subs	r3, r3, r7
 801200e:	e71c      	b.n	8011e4a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x9e>
 8012010:	2300      	movs	r3, #0
 8012012:	e7a6      	b.n	8011f62 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1b6>
 8012014:	3fc00079 	.word	0x3fc00079

08012018 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>:
 8012018:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801201c:	4604      	mov	r4, r0
 801201e:	b942      	cbnz	r2, 8012032 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1a>
 8012020:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 8012024:	f8a0 305a 	strh.w	r3, [r0, #90]	@ 0x5a
 8012028:	f8a0 305c 	strh.w	r3, [r0, #92]	@ 0x5c
 801202c:	f8a4 305e 	strh.w	r3, [r4, #94]	@ 0x5e
 8012030:	e047      	b.n	80120c2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 8012032:	7b51      	ldrb	r1, [r2, #13]
 8012034:	8893      	ldrh	r3, [r2, #4]
 8012036:	010d      	lsls	r5, r1, #4
 8012038:	f405 7080 	and.w	r0, r5, #256	@ 0x100
 801203c:	79d5      	ldrb	r5, [r2, #7]
 801203e:	4305      	orrs	r5, r0
 8012040:	2d04      	cmp	r5, #4
 8012042:	bfcc      	ite	gt
 8012044:	ea4f 0e95 	movgt.w	lr, r5, lsr #2
 8012048:	f04f 0e01 	movle.w	lr, #1
 801204c:	f5b3 6fdd 	cmp.w	r3, #1768	@ 0x6e8
 8012050:	f200 80ab 	bhi.w	80121aa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x192>
 8012054:	f240 60e7 	movw	r0, #1767	@ 0x6e7
 8012058:	4283      	cmp	r3, r0
 801205a:	d216      	bcs.n	801208a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801205c:	f240 605b 	movw	r0, #1627	@ 0x65b
 8012060:	4283      	cmp	r3, r0
 8012062:	d859      	bhi.n	8012118 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x100>
 8012064:	f240 6057 	movw	r0, #1623	@ 0x657
 8012068:	4283      	cmp	r3, r0
 801206a:	d20e      	bcs.n	801208a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801206c:	f5b3 6fca 	cmp.w	r3, #1616	@ 0x650
 8012070:	d24a      	bcs.n	8012108 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xf0>
 8012072:	f240 604e 	movw	r0, #1614	@ 0x64e
 8012076:	4283      	cmp	r3, r0
 8012078:	d207      	bcs.n	801208a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801207a:	f240 601a 	movw	r0, #1562	@ 0x61a
 801207e:	4283      	cmp	r3, r0
 8012080:	d02a      	beq.n	80120d8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8012082:	d821      	bhi.n	80120c8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xb0>
 8012084:	f5b3 6fc2 	cmp.w	r3, #1552	@ 0x610
 8012088:	d35b      	bcc.n	8012142 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 801208a:	f9b4 305a 	ldrsh.w	r3, [r4, #90]	@ 0x5a
 801208e:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
 8012092:	f040 80d0 	bne.w	8012236 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 8012096:	f9b4 005c 	ldrsh.w	r0, [r4, #92]	@ 0x5c
 801209a:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
 801209e:	f040 80ca 	bne.w	8012236 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 80120a2:	00cb      	lsls	r3, r1, #3
 80120a4:	f403 7080 	and.w	r0, r3, #256	@ 0x100
 80120a8:	7a13      	ldrb	r3, [r2, #8]
 80120aa:	0649      	lsls	r1, r1, #25
 80120ac:	ea43 0300 	orr.w	r3, r3, r0
 80120b0:	bf44      	itt	mi
 80120b2:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 80120b6:	b21b      	sxthmi	r3, r3
 80120b8:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
 80120bc:	1b5d      	subs	r5, r3, r5
 80120be:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
 80120c2:	4610      	mov	r0, r2
 80120c4:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80120c8:	f240 604b 	movw	r0, #1611	@ 0x64b
 80120cc:	4283      	cmp	r3, r0
 80120ce:	d338      	bcc.n	8012142 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 80120d0:	f240 604c 	movw	r0, #1612	@ 0x64c
 80120d4:	4283      	cmp	r3, r0
 80120d6:	d9d8      	bls.n	801208a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80120d8:	f9b4 005a 	ldrsh.w	r0, [r4, #90]	@ 0x5a
 80120dc:	f9b4 305c 	ldrsh.w	r3, [r4, #92]	@ 0x5c
 80120e0:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
 80120e4:	f040 80f2 	bne.w	80122cc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 80120e8:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
 80120ec:	f040 80ee 	bne.w	80122cc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 80120f0:	00cb      	lsls	r3, r1, #3
 80120f2:	f403 7080 	and.w	r0, r3, #256	@ 0x100
 80120f6:	7a13      	ldrb	r3, [r2, #8]
 80120f8:	064e      	lsls	r6, r1, #25
 80120fa:	ea43 0300 	orr.w	r3, r3, r0
 80120fe:	bf44      	itt	mi
 8012100:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 8012104:	b21b      	sxthmi	r3, r3
 8012106:	e7d9      	b.n	80120bc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa4>
 8012108:	f240 6054 	movw	r0, #1620	@ 0x654
 801210c:	4283      	cmp	r3, r0
 801210e:	d8e3      	bhi.n	80120d8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8012110:	f5b3 6fca 	cmp.w	r3, #1616	@ 0x650
 8012114:	d9e0      	bls.n	80120d8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8012116:	e7b8      	b.n	801208a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8012118:	f240 6074 	movw	r0, #1652	@ 0x674
 801211c:	4283      	cmp	r3, r0
 801211e:	d0b4      	beq.n	801208a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8012120:	d82d      	bhi.n	801217e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x166>
 8012122:	f240 605e 	movw	r0, #1630	@ 0x65e
 8012126:	4283      	cmp	r3, r0
 8012128:	d804      	bhi.n	8012134 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x11c>
 801212a:	f240 605d 	movw	r0, #1629	@ 0x65d
 801212e:	4283      	cmp	r3, r0
 8012130:	d3d2      	bcc.n	80120d8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8012132:	e7aa      	b.n	801208a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8012134:	f240 605f 	movw	r0, #1631	@ 0x65f
 8012138:	4283      	cmp	r3, r0
 801213a:	d0cd      	beq.n	80120d8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801213c:	f5b3 6fce 	cmp.w	r3, #1648	@ 0x670
 8012140:	d0a3      	beq.n	801208a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8012142:	00cb      	lsls	r3, r1, #3
 8012144:	f403 7080 	and.w	r0, r3, #256	@ 0x100
 8012148:	7a13      	ldrb	r3, [r2, #8]
 801214a:	0649      	lsls	r1, r1, #25
 801214c:	ea43 0300 	orr.w	r3, r3, r0
 8012150:	bf44      	itt	mi
 8012152:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 8012156:	b21b      	sxthmi	r3, r3
 8012158:	1b5d      	subs	r5, r3, r5
 801215a:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
 801215e:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
 8012162:	7b53      	ldrb	r3, [r2, #13]
 8012164:	015b      	lsls	r3, r3, #5
 8012166:	f403 7180 	and.w	r1, r3, #256	@ 0x100
 801216a:	7993      	ldrb	r3, [r2, #6]
 801216c:	430b      	orrs	r3, r1
 801216e:	005b      	lsls	r3, r3, #1
 8012170:	2105      	movs	r1, #5
 8012172:	fb93 f3f1 	sdiv	r3, r3, r1
 8012176:	f992 1009 	ldrsb.w	r1, [r2, #9]
 801217a:	440b      	add	r3, r1
 801217c:	e756      	b.n	801202c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x14>
 801217e:	f240 60e2 	movw	r0, #1762	@ 0x6e2
 8012182:	4283      	cmp	r3, r0
 8012184:	d809      	bhi.n	801219a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x182>
 8012186:	f240 60df 	movw	r0, #1759	@ 0x6df
 801218a:	4283      	cmp	r3, r0
 801218c:	f4bf af7d 	bcs.w	801208a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8012190:	f2a3 63d6 	subw	r3, r3, #1750	@ 0x6d6
 8012194:	2b05      	cmp	r3, #5
 8012196:	d8d4      	bhi.n	8012142 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8012198:	e777      	b.n	801208a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801219a:	f240 60e3 	movw	r0, #1763	@ 0x6e3
 801219e:	4283      	cmp	r3, r0
 80121a0:	d09a      	beq.n	80120d8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80121a2:	f240 60e4 	movw	r0, #1764	@ 0x6e4
 80121a6:	4283      	cmp	r3, r0
 80121a8:	e7ca      	b.n	8012140 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 80121aa:	f5b3 6f0f 	cmp.w	r3, #2288	@ 0x8f0
 80121ae:	d22b      	bcs.n	8012208 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1f0>
 80121b0:	f640 00ed 	movw	r0, #2285	@ 0x8ed
 80121b4:	4283      	cmp	r3, r0
 80121b6:	d28f      	bcs.n	80120d8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80121b8:	f640 00e5 	movw	r0, #2277	@ 0x8e5
 80121bc:	4283      	cmp	r3, r0
 80121be:	d816      	bhi.n	80121ee <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d6>
 80121c0:	f640 00e4 	movw	r0, #2276	@ 0x8e4
 80121c4:	4283      	cmp	r3, r0
 80121c6:	f4bf af60 	bcs.w	801208a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80121ca:	f240 60ec 	movw	r0, #1772	@ 0x6ec
 80121ce:	4283      	cmp	r3, r0
 80121d0:	d80a      	bhi.n	80121e8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d0>
 80121d2:	f240 60eb 	movw	r0, #1771	@ 0x6eb
 80121d6:	4283      	cmp	r3, r0
 80121d8:	f4bf af57 	bcs.w	801208a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80121dc:	f240 60ea 	movw	r0, #1770	@ 0x6ea
 80121e0:	4283      	cmp	r3, r0
 80121e2:	f43f af79 	beq.w	80120d8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80121e6:	e7ac      	b.n	8012142 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 80121e8:	f240 60ed 	movw	r0, #1773	@ 0x6ed
 80121ec:	e7f8      	b.n	80121e0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1c8>
 80121ee:	f640 00e8 	movw	r0, #2280	@ 0x8e8
 80121f2:	4283      	cmp	r3, r0
 80121f4:	d802      	bhi.n	80121fc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e4>
 80121f6:	f640 00e7 	movw	r0, #2279	@ 0x8e7
 80121fa:	e798      	b.n	801212e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x116>
 80121fc:	f640 00e9 	movw	r0, #2281	@ 0x8e9
 8012200:	4283      	cmp	r3, r0
 8012202:	f47f af42 	bne.w	801208a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8012206:	e767      	b.n	80120d8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8012208:	f640 00f6 	movw	r0, #2294	@ 0x8f6
 801220c:	4283      	cmp	r3, r0
 801220e:	f43f af63 	beq.w	80120d8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8012212:	d802      	bhi.n	801221a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x202>
 8012214:	f640 00f2 	movw	r0, #2290	@ 0x8f2
 8012218:	e7f2      	b.n	8012200 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e8>
 801221a:	f640 00fa 	movw	r0, #2298	@ 0x8fa
 801221e:	4283      	cmp	r3, r0
 8012220:	d805      	bhi.n	801222e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x216>
 8012222:	f640 00f9 	movw	r0, #2297	@ 0x8f9
 8012226:	4283      	cmp	r3, r0
 8012228:	f4ff af2f 	bcc.w	801208a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801222c:	e754      	b.n	80120d8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801222e:	f640 00fe 	movw	r0, #2302	@ 0x8fe
 8012232:	4283      	cmp	r3, r0
 8012234:	e7af      	b.n	8012196 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x17e>
 8012236:	f104 0c4c 	add.w	ip, r4, #76	@ 0x4c
 801223a:	4617      	mov	r7, r2
 801223c:	f102 0808 	add.w	r8, r2, #8
 8012240:	4666      	mov	r6, ip
 8012242:	6838      	ldr	r0, [r7, #0]
 8012244:	6879      	ldr	r1, [r7, #4]
 8012246:	46e6      	mov	lr, ip
 8012248:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 801224c:	3708      	adds	r7, #8
 801224e:	4547      	cmp	r7, r8
 8012250:	46f4      	mov	ip, lr
 8012252:	d1f6      	bne.n	8012242 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x22a>
 8012254:	6838      	ldr	r0, [r7, #0]
 8012256:	f8ce 0000 	str.w	r0, [lr]
 801225a:	88b9      	ldrh	r1, [r7, #4]
 801225c:	f8ae 1004 	strh.w	r1, [lr, #4]
 8012260:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	@ 0x5e
 8012264:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
 8012268:	d009      	beq.n	801227e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x266>
 801226a:	7b51      	ldrb	r1, [r2, #13]
 801226c:	7992      	ldrb	r2, [r2, #6]
 801226e:	0149      	lsls	r1, r1, #5
 8012270:	f401 7180 	and.w	r1, r1, #256	@ 0x100
 8012274:	4311      	orrs	r1, r2
 8012276:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 801227a:	f884 0055 	strb.w	r0, [r4, #85]	@ 0x55
 801227e:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
 8012282:	b2ad      	uxth	r5, r5
 8012284:	d00d      	beq.n	80122a2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x28a>
 8012286:	442b      	add	r3, r5
 8012288:	b29b      	uxth	r3, r3
 801228a:	f894 2059 	ldrb.w	r2, [r4, #89]	@ 0x59
 801228e:	f884 3054 	strb.w	r3, [r4, #84]	@ 0x54
 8012292:	10db      	asrs	r3, r3, #3
 8012294:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
 8012298:	f003 0360 	and.w	r3, r3, #96	@ 0x60
 801229c:	4313      	orrs	r3, r2
 801229e:	f884 3059 	strb.w	r3, [r4, #89]	@ 0x59
 80122a2:	f894 1059 	ldrb.w	r1, [r4, #89]	@ 0x59
 80122a6:	00cb      	lsls	r3, r1, #3
 80122a8:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 80122ac:	f894 3054 	ldrb.w	r3, [r4, #84]	@ 0x54
 80122b0:	064f      	lsls	r7, r1, #25
 80122b2:	ea43 0302 	orr.w	r3, r3, r2
 80122b6:	bf44      	itt	mi
 80122b8:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 80122bc:	b21b      	sxthmi	r3, r3
 80122be:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
 80122c2:	1b5b      	subs	r3, r3, r5
 80122c4:	f8a4 305c 	strh.w	r3, [r4, #92]	@ 0x5c
 80122c8:	4632      	mov	r2, r6
 80122ca:	e6fa      	b.n	80120c2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 80122cc:	f104 0c4c 	add.w	ip, r4, #76	@ 0x4c
 80122d0:	4617      	mov	r7, r2
 80122d2:	f102 0908 	add.w	r9, r2, #8
 80122d6:	4666      	mov	r6, ip
 80122d8:	6838      	ldr	r0, [r7, #0]
 80122da:	6879      	ldr	r1, [r7, #4]
 80122dc:	46e0      	mov	r8, ip
 80122de:	e8a8 0003 	stmia.w	r8!, {r0, r1}
 80122e2:	3708      	adds	r7, #8
 80122e4:	454f      	cmp	r7, r9
 80122e6:	46c4      	mov	ip, r8
 80122e8:	d1f6      	bne.n	80122d8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2c0>
 80122ea:	6838      	ldr	r0, [r7, #0]
 80122ec:	f8c8 0000 	str.w	r0, [r8]
 80122f0:	88b9      	ldrh	r1, [r7, #4]
 80122f2:	f8a8 1004 	strh.w	r1, [r8, #4]
 80122f6:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	@ 0x5e
 80122fa:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
 80122fe:	d009      	beq.n	8012314 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2fc>
 8012300:	7b51      	ldrb	r1, [r2, #13]
 8012302:	7992      	ldrb	r2, [r2, #6]
 8012304:	0149      	lsls	r1, r1, #5
 8012306:	f401 7180 	and.w	r1, r1, #256	@ 0x100
 801230a:	4311      	orrs	r1, r2
 801230c:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 8012310:	f884 0055 	strb.w	r0, [r4, #85]	@ 0x55
 8012314:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
 8012318:	d00e      	beq.n	8012338 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x320>
 801231a:	eba3 030e 	sub.w	r3, r3, lr
 801231e:	f894 2059 	ldrb.w	r2, [r4, #89]	@ 0x59
 8012322:	b29b      	uxth	r3, r3
 8012324:	f884 3054 	strb.w	r3, [r4, #84]	@ 0x54
 8012328:	10db      	asrs	r3, r3, #3
 801232a:	f003 0360 	and.w	r3, r3, #96	@ 0x60
 801232e:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
 8012332:	4313      	orrs	r3, r2
 8012334:	f884 3059 	strb.w	r3, [r4, #89]	@ 0x59
 8012338:	f894 1059 	ldrb.w	r1, [r4, #89]	@ 0x59
 801233c:	00cb      	lsls	r3, r1, #3
 801233e:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 8012342:	f894 3054 	ldrb.w	r3, [r4, #84]	@ 0x54
 8012346:	0648      	lsls	r0, r1, #25
 8012348:	ea43 0302 	orr.w	r3, r3, r2
 801234c:	bf44      	itt	mi
 801234e:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 8012352:	b21b      	sxthmi	r3, r3
 8012354:	1b5d      	subs	r5, r3, r5
 8012356:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
 801235a:	e7b5      	b.n	80122c8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b0>

0801235c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>:
 801235c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012360:	461e      	mov	r6, r3
 8012362:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
 8012364:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8012368:	4604      	mov	r4, r0
 801236a:	4617      	mov	r7, r2
 801236c:	f8b3 8022 	ldrh.w	r8, [r3, #34]	@ 0x22
 8012370:	f7f1 fc02 	bl	8003b78 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8012374:	4605      	mov	r5, r0
 8012376:	b918      	cbnz	r0, 8012380 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x24>
 8012378:	6030      	str	r0, [r6, #0]
 801237a:	4628      	mov	r0, r5
 801237c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8012380:	683b      	ldr	r3, [r7, #0]
 8012382:	4601      	mov	r1, r0
 8012384:	68db      	ldr	r3, [r3, #12]
 8012386:	4638      	mov	r0, r7
 8012388:	4798      	blx	r3
 801238a:	f5a8 63c0 	sub.w	r3, r8, #1536	@ 0x600
 801238e:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
 8012392:	4602      	mov	r2, r0
 8012394:	6030      	str	r0, [r6, #0]
 8012396:	d213      	bcs.n	80123c0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x64>
 8012398:	4643      	mov	r3, r8
 801239a:	4639      	mov	r1, r7
 801239c:	4620      	mov	r0, r4
 801239e:	f7ff fe3b 	bl	8012018 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 80123a2:	6030      	str	r0, [r6, #0]
 80123a4:	6833      	ldr	r3, [r6, #0]
 80123a6:	b143      	cbz	r3, 80123ba <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x5e>
 80123a8:	7b5a      	ldrb	r2, [r3, #13]
 80123aa:	7a9b      	ldrb	r3, [r3, #10]
 80123ac:	0052      	lsls	r2, r2, #1
 80123ae:	f402 7280 	and.w	r2, r2, #256	@ 0x100
 80123b2:	4313      	orrs	r3, r2
 80123b4:	bf0c      	ite	eq
 80123b6:	2301      	moveq	r3, #1
 80123b8:	2300      	movne	r3, #0
 80123ba:	f884 3061 	strb.w	r3, [r4, #97]	@ 0x61
 80123be:	e7dc      	b.n	801237a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x1e>
 80123c0:	f5a5 6360 	sub.w	r3, r5, #3584	@ 0xe00
 80123c4:	b29b      	uxth	r3, r3
 80123c6:	2b7f      	cmp	r3, #127	@ 0x7f
 80123c8:	d804      	bhi.n	80123d4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x78>
 80123ca:	4639      	mov	r1, r7
 80123cc:	4620      	mov	r0, r4
 80123ce:	f7ff fced 	bl	8011dac <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 80123d2:	e7e6      	b.n	80123a2 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>
 80123d4:	f894 3061 	ldrb.w	r3, [r4, #97]	@ 0x61
 80123d8:	2b00      	cmp	r3, #0
 80123da:	d0e3      	beq.n	80123a4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 80123dc:	f640 1302 	movw	r3, #2306	@ 0x902
 80123e0:	429d      	cmp	r5, r3
 80123e2:	d1df      	bne.n	80123a4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 80123e4:	4601      	mov	r1, r0
 80123e6:	4620      	mov	r0, r4
 80123e8:	f7ff fcb2 	bl	8011d50 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 80123ec:	e7d9      	b.n	80123a2 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>

080123ee <_ZN8touchgfx12TextProvider15fillInputBufferEv>:
 80123ee:	b510      	push	{r4, lr}
 80123f0:	4604      	mov	r4, r0
 80123f2:	f8b4 1040 	ldrh.w	r1, [r4, #64]	@ 0x40
 80123f6:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
 80123f8:	b1f1      	cbz	r1, 8012438 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 80123fa:	2b0a      	cmp	r3, #10
 80123fc:	d02f      	beq.n	801245e <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 80123fe:	8fe2      	ldrh	r2, [r4, #62]	@ 0x3e
 8012400:	eb04 0042 	add.w	r0, r4, r2, lsl #1
 8012404:	3901      	subs	r1, #1
 8012406:	8f40      	ldrh	r0, [r0, #58]	@ 0x3a
 8012408:	f8a4 1040 	strh.w	r1, [r4, #64]	@ 0x40
 801240c:	1c51      	adds	r1, r2, #1
 801240e:	b289      	uxth	r1, r1
 8012410:	2901      	cmp	r1, #1
 8012412:	bf84      	itt	hi
 8012414:	f102 32ff 	addhi.w	r2, r2, #4294967295
 8012418:	87e2      	strhhi	r2, [r4, #62]	@ 0x3e
 801241a:	f103 0201 	add.w	r2, r3, #1
 801241e:	8722      	strh	r2, [r4, #56]	@ 0x38
 8012420:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
 8012422:	bf98      	it	ls
 8012424:	87e1      	strhls	r1, [r4, #62]	@ 0x3e
 8012426:	4413      	add	r3, r2
 8012428:	b29b      	uxth	r3, r3
 801242a:	2b09      	cmp	r3, #9
 801242c:	bf88      	it	hi
 801242e:	3b0a      	subhi	r3, #10
 8012430:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8012434:	8458      	strh	r0, [r3, #34]	@ 0x22
 8012436:	e7dc      	b.n	80123f2 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4>
 8012438:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
 801243a:	2b0a      	cmp	r3, #10
 801243c:	d00f      	beq.n	801245e <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 801243e:	4620      	mov	r0, r4
 8012440:	f7ff fc45 	bl	8011cce <_ZN8touchgfx12TextProvider19getNextCharInternalEv>
 8012444:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
 8012446:	1c5a      	adds	r2, r3, #1
 8012448:	8722      	strh	r2, [r4, #56]	@ 0x38
 801244a:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
 801244c:	4413      	add	r3, r2
 801244e:	b29b      	uxth	r3, r3
 8012450:	2b09      	cmp	r3, #9
 8012452:	bf88      	it	hi
 8012454:	3b0a      	subhi	r3, #10
 8012456:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801245a:	8458      	strh	r0, [r3, #34]	@ 0x22
 801245c:	e7ec      	b.n	8012438 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 801245e:	bd10      	pop	{r4, pc}

08012460 <_ZN8touchgfx12TextProvider11getNextCharEv>:
 8012460:	b538      	push	{r3, r4, r5, lr}
 8012462:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
 8012464:	eb00 0243 	add.w	r2, r0, r3, lsl #1
 8012468:	4604      	mov	r4, r0
 801246a:	8c55      	ldrh	r5, [r2, #34]	@ 0x22
 801246c:	8f02      	ldrh	r2, [r0, #56]	@ 0x38
 801246e:	3a01      	subs	r2, #1
 8012470:	8702      	strh	r2, [r0, #56]	@ 0x38
 8012472:	1c5a      	adds	r2, r3, #1
 8012474:	b292      	uxth	r2, r2
 8012476:	2a09      	cmp	r2, #9
 8012478:	bf86      	itte	hi
 801247a:	3b09      	subhi	r3, #9
 801247c:	86c3      	strhhi	r3, [r0, #54]	@ 0x36
 801247e:	86c2      	strhls	r2, [r0, #54]	@ 0x36
 8012480:	f7ff ffb5 	bl	80123ee <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 8012484:	8c23      	ldrh	r3, [r4, #32]
 8012486:	2b01      	cmp	r3, #1
 8012488:	bf9c      	itt	ls
 801248a:	3301      	addls	r3, #1
 801248c:	8423      	strhls	r3, [r4, #32]
 801248e:	8be3      	ldrh	r3, [r4, #30]
 8012490:	b90b      	cbnz	r3, 8012496 <_ZN8touchgfx12TextProvider11getNextCharEv+0x36>
 8012492:	2302      	movs	r3, #2
 8012494:	83e3      	strh	r3, [r4, #30]
 8012496:	8be3      	ldrh	r3, [r4, #30]
 8012498:	3b01      	subs	r3, #1
 801249a:	b29b      	uxth	r3, r3
 801249c:	83e3      	strh	r3, [r4, #30]
 801249e:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80124a2:	4628      	mov	r0, r5
 80124a4:	8365      	strh	r5, [r4, #26]
 80124a6:	bd38      	pop	{r3, r4, r5, pc}

080124a8 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>:
 80124a8:	428a      	cmp	r2, r1
 80124aa:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80124ae:	8ec7      	ldrh	r7, [r0, #54]	@ 0x36
 80124b0:	d931      	bls.n	8012516 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x6e>
 80124b2:	8f05      	ldrh	r5, [r0, #56]	@ 0x38
 80124b4:	f8b0 8040 	ldrh.w	r8, [r0, #64]	@ 0x40
 80124b8:	f8b0 c03e 	ldrh.w	ip, [r0, #62]	@ 0x3e
 80124bc:	19ee      	adds	r6, r5, r7
 80124be:	1a54      	subs	r4, r2, r1
 80124c0:	3e01      	subs	r6, #1
 80124c2:	fa1f fe84 	uxth.w	lr, r4
 80124c6:	b2b4      	uxth	r4, r6
 80124c8:	eba4 090e 	sub.w	r9, r4, lr
 80124cc:	fa1f f989 	uxth.w	r9, r9
 80124d0:	2c09      	cmp	r4, #9
 80124d2:	4626      	mov	r6, r4
 80124d4:	bf88      	it	hi
 80124d6:	f1a4 060a 	subhi.w	r6, r4, #10
 80124da:	f1bc 0f00 	cmp.w	ip, #0
 80124de:	bf08      	it	eq
 80124e0:	f04f 0c02 	moveq.w	ip, #2
 80124e4:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 80124e8:	f10c 3cff 	add.w	ip, ip, #4294967295
 80124ec:	fa1f fc8c 	uxth.w	ip, ip
 80124f0:	3c01      	subs	r4, #1
 80124f2:	f8b6 a022 	ldrh.w	sl, [r6, #34]	@ 0x22
 80124f6:	b2a4      	uxth	r4, r4
 80124f8:	eb00 064c 	add.w	r6, r0, ip, lsl #1
 80124fc:	454c      	cmp	r4, r9
 80124fe:	f8a6 a03a 	strh.w	sl, [r6, #58]	@ 0x3a
 8012502:	d1e5      	bne.n	80124d0 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x28>
 8012504:	eba5 050e 	sub.w	r5, r5, lr
 8012508:	eb0e 0408 	add.w	r4, lr, r8
 801250c:	8705      	strh	r5, [r0, #56]	@ 0x38
 801250e:	f8a0 4040 	strh.w	r4, [r0, #64]	@ 0x40
 8012512:	f8a0 c03e 	strh.w	ip, [r0, #62]	@ 0x3e
 8012516:	8f04      	ldrh	r4, [r0, #56]	@ 0x38
 8012518:	1a64      	subs	r4, r4, r1
 801251a:	4439      	add	r1, r7
 801251c:	b289      	uxth	r1, r1
 801251e:	2909      	cmp	r1, #9
 8012520:	bf88      	it	hi
 8012522:	390a      	subhi	r1, #10
 8012524:	8704      	strh	r4, [r0, #56]	@ 0x38
 8012526:	86c1      	strh	r1, [r0, #54]	@ 0x36
 8012528:	250a      	movs	r5, #10
 801252a:	b18a      	cbz	r2, 8012550 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0xa8>
 801252c:	8f01      	ldrh	r1, [r0, #56]	@ 0x38
 801252e:	3a01      	subs	r2, #1
 8012530:	b292      	uxth	r2, r2
 8012532:	3101      	adds	r1, #1
 8012534:	f833 4012 	ldrh.w	r4, [r3, r2, lsl #1]
 8012538:	8701      	strh	r1, [r0, #56]	@ 0x38
 801253a:	8ec1      	ldrh	r1, [r0, #54]	@ 0x36
 801253c:	b901      	cbnz	r1, 8012540 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x98>
 801253e:	86c5      	strh	r5, [r0, #54]	@ 0x36
 8012540:	8ec1      	ldrh	r1, [r0, #54]	@ 0x36
 8012542:	3901      	subs	r1, #1
 8012544:	b289      	uxth	r1, r1
 8012546:	86c1      	strh	r1, [r0, #54]	@ 0x36
 8012548:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 801254c:	844c      	strh	r4, [r1, #34]	@ 0x22
 801254e:	e7ec      	b.n	801252a <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x82>
 8012550:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8012554:	f7ff bf4b 	b.w	80123ee <_ZN8touchgfx12TextProvider15fillInputBufferEv>

08012558 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>:
 8012558:	b570      	push	{r4, r5, r6, lr}
 801255a:	2500      	movs	r5, #0
 801255c:	4295      	cmp	r5, r2
 801255e:	d011      	beq.n	8012584 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x2c>
 8012560:	8bc4      	ldrh	r4, [r0, #30]
 8012562:	f831 6b02 	ldrh.w	r6, [r1], #2
 8012566:	4414      	add	r4, r2
 8012568:	3c01      	subs	r4, #1
 801256a:	1b64      	subs	r4, r4, r5
 801256c:	b2a4      	uxth	r4, r4
 801256e:	2c01      	cmp	r4, #1
 8012570:	bf88      	it	hi
 8012572:	3c02      	subhi	r4, #2
 8012574:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8012578:	8b64      	ldrh	r4, [r4, #26]
 801257a:	42b4      	cmp	r4, r6
 801257c:	d117      	bne.n	80125ae <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x56>
 801257e:	3501      	adds	r5, #1
 8012580:	b2ad      	uxth	r5, r5
 8012582:	e7eb      	b.n	801255c <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x4>
 8012584:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8012588:	2400      	movs	r4, #0
 801258a:	4413      	add	r3, r2
 801258c:	b2a2      	uxth	r2, r4
 801258e:	429a      	cmp	r2, r3
 8012590:	da0f      	bge.n	80125b2 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x5a>
 8012592:	8ec6      	ldrh	r6, [r0, #54]	@ 0x36
 8012594:	f831 5014 	ldrh.w	r5, [r1, r4, lsl #1]
 8012598:	4432      	add	r2, r6
 801259a:	b292      	uxth	r2, r2
 801259c:	2a09      	cmp	r2, #9
 801259e:	bf88      	it	hi
 80125a0:	3a0a      	subhi	r2, #10
 80125a2:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 80125a6:	3401      	adds	r4, #1
 80125a8:	8c52      	ldrh	r2, [r2, #34]	@ 0x22
 80125aa:	42aa      	cmp	r2, r5
 80125ac:	d0ee      	beq.n	801258c <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x34>
 80125ae:	2000      	movs	r0, #0
 80125b0:	bd70      	pop	{r4, r5, r6, pc}
 80125b2:	2001      	movs	r0, #1
 80125b4:	e7fc      	b.n	80125b0 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x58>

080125b6 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>:
 80125b6:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80125ba:	4605      	mov	r5, r0
 80125bc:	4616      	mov	r6, r2
 80125be:	1c8c      	adds	r4, r1, #2
 80125c0:	8809      	ldrh	r1, [r1, #0]
 80125c2:	ea4f 3a11 	mov.w	sl, r1, lsr #12
 80125c6:	f834 301a 	ldrh.w	r3, [r4, sl, lsl #1]
 80125ca:	42b3      	cmp	r3, r6
 80125cc:	d124      	bne.n	8012618 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x62>
 80125ce:	f3c1 2903 	ubfx	r9, r1, #8, #4
 80125d2:	f3c1 1803 	ubfx	r8, r1, #4, #4
 80125d6:	f001 070f 	and.w	r7, r1, #15
 80125da:	f8cd 8000 	str.w	r8, [sp]
 80125de:	464b      	mov	r3, r9
 80125e0:	4652      	mov	r2, sl
 80125e2:	4621      	mov	r1, r4
 80125e4:	4628      	mov	r0, r5
 80125e6:	f7ff ffb7 	bl	8012558 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>
 80125ea:	4683      	mov	fp, r0
 80125ec:	b168      	cbz	r0, 801260a <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x54>
 80125ee:	eb0a 0109 	add.w	r1, sl, r9
 80125f2:	4441      	add	r1, r8
 80125f4:	eb04 0341 	add.w	r3, r4, r1, lsl #1
 80125f8:	463a      	mov	r2, r7
 80125fa:	4649      	mov	r1, r9
 80125fc:	4628      	mov	r0, r5
 80125fe:	f7ff ff53 	bl	80124a8 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>
 8012602:	4658      	mov	r0, fp
 8012604:	b003      	add	sp, #12
 8012606:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801260a:	eb07 010a 	add.w	r1, r7, sl
 801260e:	4449      	add	r1, r9
 8012610:	4441      	add	r1, r8
 8012612:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 8012616:	e7d2      	b.n	80125be <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x8>
 8012618:	f04f 0b00 	mov.w	fp, #0
 801261c:	e7f1      	b.n	8012602 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x4c>

0801261e <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>:
 801261e:	b570      	push	{r4, r5, r6, lr}
 8012620:	8810      	ldrh	r0, [r2, #0]
 8012622:	4298      	cmp	r0, r3
 8012624:	d817      	bhi.n	8012656 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 8012626:	1e48      	subs	r0, r1, #1
 8012628:	f832 0020 	ldrh.w	r0, [r2, r0, lsl #2]
 801262c:	4298      	cmp	r0, r3
 801262e:	d312      	bcc.n	8012656 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 8012630:	2400      	movs	r4, #0
 8012632:	428c      	cmp	r4, r1
 8012634:	d20f      	bcs.n	8012656 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 8012636:	1860      	adds	r0, r4, r1
 8012638:	1040      	asrs	r0, r0, #1
 801263a:	0085      	lsls	r5, r0, #2
 801263c:	f832 6020 	ldrh.w	r6, [r2, r0, lsl #2]
 8012640:	42b3      	cmp	r3, r6
 8012642:	d902      	bls.n	801264a <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x2c>
 8012644:	3001      	adds	r0, #1
 8012646:	b284      	uxth	r4, r0
 8012648:	e7f3      	b.n	8012632 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 801264a:	d201      	bcs.n	8012650 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x32>
 801264c:	b281      	uxth	r1, r0
 801264e:	e7f0      	b.n	8012632 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 8012650:	442a      	add	r2, r5
 8012652:	8850      	ldrh	r0, [r2, #2]
 8012654:	bd70      	pop	{r4, r5, r6, pc}
 8012656:	2000      	movs	r0, #0
 8012658:	e7fc      	b.n	8012654 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x36>

0801265a <_ZN8touchgfx12TextProvider16substituteGlyphsEv>:
 801265a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801265e:	6c45      	ldr	r5, [r0, #68]	@ 0x44
 8012660:	886f      	ldrh	r7, [r5, #2]
 8012662:	4604      	mov	r4, r0
 8012664:	087f      	lsrs	r7, r7, #1
 8012666:	260b      	movs	r6, #11
 8012668:	3e01      	subs	r6, #1
 801266a:	d013      	beq.n	8012694 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 801266c:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 801266e:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8012672:	462a      	mov	r2, r5
 8012674:	f8b3 8022 	ldrh.w	r8, [r3, #34]	@ 0x22
 8012678:	4639      	mov	r1, r7
 801267a:	4643      	mov	r3, r8
 801267c:	4620      	mov	r0, r4
 801267e:	f7ff ffce 	bl	801261e <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>
 8012682:	b138      	cbz	r0, 8012694 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 8012684:	eb05 0140 	add.w	r1, r5, r0, lsl #1
 8012688:	4642      	mov	r2, r8
 801268a:	4620      	mov	r0, r4
 801268c:	f7ff ff93 	bl	80125b6 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>
 8012690:	2800      	cmp	r0, #0
 8012692:	d1e9      	bne.n	8012668 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0xe>
 8012694:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08012698 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>:
 8012698:	b570      	push	{r4, r5, r6, lr}
 801269a:	694a      	ldr	r2, [r1, #20]
 801269c:	6a8d      	ldr	r5, [r1, #40]	@ 0x28
 801269e:	684b      	ldr	r3, [r1, #4]
 80126a0:	6ace      	ldr	r6, [r1, #44]	@ 0x2c
 80126a2:	1b54      	subs	r4, r2, r5
 80126a4:	f000 8106 	beq.w	80128b4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x21c>
 80126a8:	1b9b      	subs	r3, r3, r6
 80126aa:	d003      	beq.n	80126b4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 80126ac:	4363      	muls	r3, r4
 80126ae:	2210      	movs	r2, #16
 80126b0:	fb93 f3f2 	sdiv	r3, r3, r2
 80126b4:	680c      	ldr	r4, [r1, #0]
 80126b6:	698a      	ldr	r2, [r1, #24]
 80126b8:	1b65      	subs	r5, r4, r5
 80126ba:	f000 80fd 	beq.w	80128b8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x220>
 80126be:	1b92      	subs	r2, r2, r6
 80126c0:	d003      	beq.n	80126ca <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 80126c2:	436a      	muls	r2, r5
 80126c4:	2410      	movs	r4, #16
 80126c6:	fb92 f2f4 	sdiv	r2, r2, r4
 80126ca:	1a9b      	subs	r3, r3, r2
 80126cc:	ee07 3a90 	vmov	s15, r3
 80126d0:	ed9f 4a88 	vldr	s8, [pc, #544]	@ 80128f4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x25c>
 80126d4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80126d8:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 80126dc:	ee67 7a84 	vmul.f32	s15, s15, s8
 80126e0:	460a      	mov	r2, r1
 80126e2:	ee87 3a27 	vdiv.f32	s6, s14, s15
 80126e6:	4603      	mov	r3, r0
 80126e8:	f100 040c 	add.w	r4, r0, #12
 80126ec:	eeb1 6a43 	vneg.f32	s12, s6
 80126f0:	edd2 7a02 	vldr	s15, [r2, #8]
 80126f4:	eec7 6a27 	vdiv.f32	s13, s14, s15
 80126f8:	3214      	adds	r2, #20
 80126fa:	ece3 6a01 	vstmia	r3!, {s13}
 80126fe:	ed52 7a02 	vldr	s15, [r2, #-8]
 8012702:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8012706:	429c      	cmp	r4, r3
 8012708:	edc3 7a02 	vstr	s15, [r3, #8]
 801270c:	ed52 7a01 	vldr	s15, [r2, #-4]
 8012710:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8012714:	edc3 7a05 	vstr	s15, [r3, #20]
 8012718:	d1ea      	bne.n	80126f0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x58>
 801271a:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
 801271c:	698b      	ldr	r3, [r1, #24]
 801271e:	edd0 4a02 	vldr	s9, [r0, #8]
 8012722:	edd0 3a00 	vldr	s7, [r0]
 8012726:	edd0 6a01 	vldr	s13, [r0, #4]
 801272a:	ed90 5a05 	vldr	s10, [r0, #20]
 801272e:	ed90 2a03 	vldr	s4, [r0, #12]
 8012732:	edd0 5a04 	vldr	s11, [r0, #16]
 8012736:	ed90 1a07 	vldr	s2, [r0, #28]
 801273a:	edd0 2a06 	vldr	s5, [r0, #24]
 801273e:	1a9b      	subs	r3, r3, r2
 8012740:	ee07 3a90 	vmov	s15, r3
 8012744:	684b      	ldr	r3, [r1, #4]
 8012746:	1a9b      	subs	r3, r3, r2
 8012748:	ee07 3a10 	vmov	s14, r3
 801274c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8012750:	ee76 6ae4 	vsub.f32	s13, s13, s9
 8012754:	ee67 7a84 	vmul.f32	s15, s15, s8
 8012758:	ee73 4ae4 	vsub.f32	s9, s7, s9
 801275c:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8012760:	ee64 7ae7 	vnmul.f32	s15, s9, s15
 8012764:	ee27 7a04 	vmul.f32	s14, s14, s8
 8012768:	ee75 5ac5 	vsub.f32	s11, s11, s10
 801276c:	eee6 7a87 	vfma.f32	s15, s13, s14
 8012770:	ee32 5a45 	vsub.f32	s10, s4, s10
 8012774:	ee67 7a83 	vmul.f32	s15, s15, s6
 8012778:	edc0 7a09 	vstr	s15, [r0, #36]	@ 0x24
 801277c:	6a8c      	ldr	r4, [r1, #40]	@ 0x28
 801277e:	694a      	ldr	r2, [r1, #20]
 8012780:	1b13      	subs	r3, r2, r4
 8012782:	ee07 3a10 	vmov	s14, r3
 8012786:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801278a:	680b      	ldr	r3, [r1, #0]
 801278c:	ee27 7a04 	vmul.f32	s14, s14, s8
 8012790:	1b1b      	subs	r3, r3, r4
 8012792:	ee64 4ac7 	vnmul.f32	s9, s9, s14
 8012796:	ee07 3a10 	vmov	s14, r3
 801279a:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801279e:	ee27 7a04 	vmul.f32	s14, s14, s8
 80127a2:	eee6 4a87 	vfma.f32	s9, s13, s14
 80127a6:	ee64 4a86 	vmul.f32	s9, s9, s12
 80127aa:	edc0 4a0a 	vstr	s9, [r0, #40]	@ 0x28
 80127ae:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
 80127b0:	698b      	ldr	r3, [r1, #24]
 80127b2:	1a9b      	subs	r3, r3, r2
 80127b4:	ee06 3a90 	vmov	s13, r3
 80127b8:	684b      	ldr	r3, [r1, #4]
 80127ba:	1a9b      	subs	r3, r3, r2
 80127bc:	ee07 3a10 	vmov	s14, r3
 80127c0:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 80127c4:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80127c8:	ee66 6a84 	vmul.f32	s13, s13, s8
 80127cc:	ee27 7a04 	vmul.f32	s14, s14, s8
 80127d0:	ee65 6a66 	vnmul.f32	s13, s10, s13
 80127d4:	eee5 6a87 	vfma.f32	s13, s11, s14
 80127d8:	ee66 6a83 	vmul.f32	s13, s13, s6
 80127dc:	edc0 6a0b 	vstr	s13, [r0, #44]	@ 0x2c
 80127e0:	6a8c      	ldr	r4, [r1, #40]	@ 0x28
 80127e2:	694a      	ldr	r2, [r1, #20]
 80127e4:	1b13      	subs	r3, r2, r4
 80127e6:	ee07 3a10 	vmov	s14, r3
 80127ea:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80127ee:	680b      	ldr	r3, [r1, #0]
 80127f0:	ee27 7a04 	vmul.f32	s14, s14, s8
 80127f4:	1b1b      	subs	r3, r3, r4
 80127f6:	ee25 5a47 	vnmul.f32	s10, s10, s14
 80127fa:	ee07 3a10 	vmov	s14, r3
 80127fe:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8012802:	ee27 7a04 	vmul.f32	s14, s14, s8
 8012806:	eea5 5a87 	vfma.f32	s10, s11, s14
 801280a:	edd0 5a08 	vldr	s11, [r0, #32]
 801280e:	ee25 5a06 	vmul.f32	s10, s10, s12
 8012812:	ee31 1a65 	vsub.f32	s2, s2, s11
 8012816:	ed80 5a0c 	vstr	s10, [r0, #48]	@ 0x30
 801281a:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
 801281c:	698b      	ldr	r3, [r1, #24]
 801281e:	1a9b      	subs	r3, r3, r2
 8012820:	ee07 3a10 	vmov	s14, r3
 8012824:	684b      	ldr	r3, [r1, #4]
 8012826:	1a9b      	subs	r3, r3, r2
 8012828:	ee01 3a90 	vmov	s3, r3
 801282c:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8012830:	ee72 5ae5 	vsub.f32	s11, s5, s11
 8012834:	ee27 7a04 	vmul.f32	s14, s14, s8
 8012838:	eef8 1ae1 	vcvt.f32.s32	s3, s3
 801283c:	ee25 7ac7 	vnmul.f32	s14, s11, s14
 8012840:	ee61 1a84 	vmul.f32	s3, s3, s8
 8012844:	eea1 7a21 	vfma.f32	s14, s2, s3
 8012848:	ee27 7a03 	vmul.f32	s14, s14, s6
 801284c:	ed80 7a0d 	vstr	s14, [r0, #52]	@ 0x34
 8012850:	6a8c      	ldr	r4, [r1, #40]	@ 0x28
 8012852:	694a      	ldr	r2, [r1, #20]
 8012854:	1b13      	subs	r3, r2, r4
 8012856:	ee03 3a10 	vmov	s6, r3
 801285a:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 801285e:	680b      	ldr	r3, [r1, #0]
 8012860:	ee23 3a04 	vmul.f32	s6, s6, s8
 8012864:	1b1b      	subs	r3, r3, r4
 8012866:	ee65 5ac3 	vnmul.f32	s11, s11, s6
 801286a:	ee03 3a10 	vmov	s6, r3
 801286e:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 8012872:	ee23 4a04 	vmul.f32	s8, s6, s8
 8012876:	eee1 5a04 	vfma.f32	s11, s2, s8
 801287a:	ee25 6a86 	vmul.f32	s12, s11, s12
 801287e:	ee62 5a67 	vnmul.f32	s11, s4, s15
 8012882:	ed80 6a0e 	vstr	s12, [r0, #56]	@ 0x38
 8012886:	eee3 5aa6 	vfma.f32	s11, s7, s13
 801288a:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 801288e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012892:	dd13      	ble.n	80128bc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x224>
 8012894:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 8012898:	ee62 7ae7 	vnmul.f32	s15, s5, s15
 801289c:	63c3      	str	r3, [r0, #60]	@ 0x3c
 801289e:	eee3 7a87 	vfma.f32	s15, s7, s14
 80128a2:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80128a6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80128aa:	dd15      	ble.n	80128d8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x240>
 80128ac:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 80128b0:	6403      	str	r3, [r0, #64]	@ 0x40
 80128b2:	bd70      	pop	{r4, r5, r6, pc}
 80128b4:	4623      	mov	r3, r4
 80128b6:	e6fd      	b.n	80126b4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 80128b8:	462a      	mov	r2, r5
 80128ba:	e706      	b.n	80126ca <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 80128bc:	d502      	bpl.n	80128c4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x22c>
 80128be:	f647 73ff 	movw	r3, #32767	@ 0x7fff
 80128c2:	e7e9      	b.n	8012898 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x200>
 80128c4:	ee22 2a64 	vnmul.f32	s4, s4, s9
 80128c8:	eea3 2a85 	vfma.f32	s4, s7, s10
 80128cc:	eeb5 2ac0 	vcmpe.f32	s4, #0.0
 80128d0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80128d4:	dade      	bge.n	8012894 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1fc>
 80128d6:	e7f2      	b.n	80128be <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x226>
 80128d8:	d502      	bpl.n	80128e0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x248>
 80128da:	f647 73ff 	movw	r3, #32767	@ 0x7fff
 80128de:	e7e7      	b.n	80128b0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x218>
 80128e0:	ee62 4ae4 	vnmul.f32	s9, s5, s9
 80128e4:	eee3 4a86 	vfma.f32	s9, s7, s12
 80128e8:	eef5 4ac0 	vcmpe.f32	s9, #0.0
 80128ec:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80128f0:	dadc      	bge.n	80128ac <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x214>
 80128f2:	e7f2      	b.n	80128da <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x242>
 80128f4:	3d800000 	.word	0x3d800000

080128f8 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>:
 80128f8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80128fc:	2714      	movs	r7, #20
 80128fe:	435f      	muls	r7, r3
 8012900:	eb02 0c07 	add.w	ip, r2, r7
 8012904:	f8dc 5004 	ldr.w	r5, [ip, #4]
 8012908:	f115 0e0f 	adds.w	lr, r5, #15
 801290c:	f100 80a2 	bmi.w	8012a54 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x15c>
 8012910:	ea4f 1e2e 	mov.w	lr, lr, asr #4
 8012914:	9c08      	ldr	r4, [sp, #32]
 8012916:	f8c0 e014 	str.w	lr, [r0, #20]
 801291a:	2614      	movs	r6, #20
 801291c:	4366      	muls	r6, r4
 801291e:	eb02 0806 	add.w	r8, r2, r6
 8012922:	f8d8 5004 	ldr.w	r5, [r8, #4]
 8012926:	f115 040f 	adds.w	r4, r5, #15
 801292a:	f100 809f 	bmi.w	8012a6c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x174>
 801292e:	1124      	asrs	r4, r4, #4
 8012930:	eba4 040e 	sub.w	r4, r4, lr
 8012934:	6184      	str	r4, [r0, #24]
 8012936:	2c00      	cmp	r4, #0
 8012938:	f000 808a 	beq.w	8012a50 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x158>
 801293c:	f8dc 9004 	ldr.w	r9, [ip, #4]
 8012940:	f8d8 4004 	ldr.w	r4, [r8, #4]
 8012944:	5995      	ldr	r5, [r2, r6]
 8012946:	eba4 0809 	sub.w	r8, r4, r9
 801294a:	59d4      	ldr	r4, [r2, r7]
 801294c:	eba5 0a04 	sub.w	sl, r5, r4
 8012950:	ea4f 150a 	mov.w	r5, sl, lsl #4
 8012954:	fb0e fe05 	mul.w	lr, lr, r5
 8012958:	fb0a ee19 	mls	lr, sl, r9, lr
 801295c:	fb08 e404 	mla	r4, r8, r4, lr
 8012960:	ea4f 1608 	mov.w	r6, r8, lsl #4
 8012964:	3c01      	subs	r4, #1
 8012966:	19a4      	adds	r4, r4, r6
 8012968:	f100 808c 	bmi.w	8012a84 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x18c>
 801296c:	fb94 fef6 	sdiv	lr, r4, r6
 8012970:	f8c0 e000 	str.w	lr, [r0]
 8012974:	fb06 441e 	mls	r4, r6, lr, r4
 8012978:	6104      	str	r4, [r0, #16]
 801297a:	2d00      	cmp	r5, #0
 801297c:	f2c0 8095 	blt.w	8012aaa <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1b2>
 8012980:	fb95 f4f6 	sdiv	r4, r5, r6
 8012984:	6044      	str	r4, [r0, #4]
 8012986:	fb06 5514 	mls	r5, r6, r4, r5
 801298a:	6085      	str	r5, [r0, #8]
 801298c:	60c6      	str	r6, [r0, #12]
 801298e:	f8dc 4004 	ldr.w	r4, [ip, #4]
 8012992:	6945      	ldr	r5, [r0, #20]
 8012994:	59d2      	ldr	r2, [r2, r7]
 8012996:	eddf 6a4d 	vldr	s13, [pc, #308]	@ 8012acc <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1d4>
 801299a:	ed91 6a0a 	vldr	s12, [r1, #40]	@ 0x28
 801299e:	ebc4 1405 	rsb	r4, r4, r5, lsl #4
 80129a2:	ee07 4a10 	vmov	s14, r4
 80129a6:	6804      	ldr	r4, [r0, #0]
 80129a8:	ebc2 1204 	rsb	r2, r2, r4, lsl #4
 80129ac:	ee07 2a90 	vmov	s15, r2
 80129b0:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80129b4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80129b8:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 80129bc:	ee27 7a26 	vmul.f32	s14, s14, s13
 80129c0:	ee67 7aa6 	vmul.f32	s15, s15, s13
 80129c4:	edd3 6a00 	vldr	s13, [r3]
 80129c8:	eee6 6a07 	vfma.f32	s13, s12, s14
 80129cc:	ed91 6a09 	vldr	s12, [r1, #36]	@ 0x24
 80129d0:	eee6 6a27 	vfma.f32	s13, s12, s15
 80129d4:	edc0 6a07 	vstr	s13, [r0, #28]
 80129d8:	edd0 6a01 	vldr	s13, [r0, #4]
 80129dc:	edd1 5a09 	vldr	s11, [r1, #36]	@ 0x24
 80129e0:	ed91 6a0a 	vldr	s12, [r1, #40]	@ 0x28
 80129e4:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 80129e8:	eea6 6aa5 	vfma.f32	s12, s13, s11
 80129ec:	ed80 6a08 	vstr	s12, [r0, #32]
 80129f0:	6a4a      	ldr	r2, [r1, #36]	@ 0x24
 80129f2:	6242      	str	r2, [r0, #36]	@ 0x24
 80129f4:	edd1 5a0c 	vldr	s11, [r1, #48]	@ 0x30
 80129f8:	ed93 6a03 	vldr	s12, [r3, #12]
 80129fc:	eea5 6a87 	vfma.f32	s12, s11, s14
 8012a00:	edd1 5a0b 	vldr	s11, [r1, #44]	@ 0x2c
 8012a04:	eea5 6aa7 	vfma.f32	s12, s11, s15
 8012a08:	ed80 6a0a 	vstr	s12, [r0, #40]	@ 0x28
 8012a0c:	edd1 5a0b 	vldr	s11, [r1, #44]	@ 0x2c
 8012a10:	ed91 6a0c 	vldr	s12, [r1, #48]	@ 0x30
 8012a14:	eea6 6aa5 	vfma.f32	s12, s13, s11
 8012a18:	ed80 6a0b 	vstr	s12, [r0, #44]	@ 0x2c
 8012a1c:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
 8012a1e:	6302      	str	r2, [r0, #48]	@ 0x30
 8012a20:	ed93 6a06 	vldr	s12, [r3, #24]
 8012a24:	edd1 5a0e 	vldr	s11, [r1, #56]	@ 0x38
 8012a28:	eea5 6a87 	vfma.f32	s12, s11, s14
 8012a2c:	eeb0 7a46 	vmov.f32	s14, s12
 8012a30:	ed91 6a0d 	vldr	s12, [r1, #52]	@ 0x34
 8012a34:	eea6 7a27 	vfma.f32	s14, s12, s15
 8012a38:	ed80 7a0d 	vstr	s14, [r0, #52]	@ 0x34
 8012a3c:	ed91 7a0d 	vldr	s14, [r1, #52]	@ 0x34
 8012a40:	edd1 7a0e 	vldr	s15, [r1, #56]	@ 0x38
 8012a44:	eee6 7a87 	vfma.f32	s15, s13, s14
 8012a48:	edc0 7a0e 	vstr	s15, [r0, #56]	@ 0x38
 8012a4c:	6b4b      	ldr	r3, [r1, #52]	@ 0x34
 8012a4e:	63c3      	str	r3, [r0, #60]	@ 0x3c
 8012a50:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8012a54:	f1c5 0501 	rsb	r5, r5, #1
 8012a58:	f015 050f 	ands.w	r5, r5, #15
 8012a5c:	bf18      	it	ne
 8012a5e:	2501      	movne	r5, #1
 8012a60:	2410      	movs	r4, #16
 8012a62:	fb9e fef4 	sdiv	lr, lr, r4
 8012a66:	ebae 0e05 	sub.w	lr, lr, r5
 8012a6a:	e753      	b.n	8012914 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1c>
 8012a6c:	f1c5 0501 	rsb	r5, r5, #1
 8012a70:	f015 050f 	ands.w	r5, r5, #15
 8012a74:	bf18      	it	ne
 8012a76:	2501      	movne	r5, #1
 8012a78:	f04f 0910 	mov.w	r9, #16
 8012a7c:	fb94 f4f9 	sdiv	r4, r4, r9
 8012a80:	1b64      	subs	r4, r4, r5
 8012a82:	e755      	b.n	8012930 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x38>
 8012a84:	4264      	negs	r4, r4
 8012a86:	fb94 fef6 	sdiv	lr, r4, r6
 8012a8a:	f1ce 0800 	rsb	r8, lr, #0
 8012a8e:	fb06 441e 	mls	r4, r6, lr, r4
 8012a92:	f8c0 8000 	str.w	r8, [r0]
 8012a96:	6104      	str	r4, [r0, #16]
 8012a98:	2c00      	cmp	r4, #0
 8012a9a:	f43f af6e 	beq.w	801297a <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x82>
 8012a9e:	ea6f 0e0e 	mvn.w	lr, lr
 8012aa2:	f8c0 e000 	str.w	lr, [r0]
 8012aa6:	1b34      	subs	r4, r6, r4
 8012aa8:	e766      	b.n	8012978 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x80>
 8012aaa:	426d      	negs	r5, r5
 8012aac:	fb95 f4f6 	sdiv	r4, r5, r6
 8012ab0:	f1c4 0e00 	rsb	lr, r4, #0
 8012ab4:	fb06 5514 	mls	r5, r6, r4, r5
 8012ab8:	f8c0 e004 	str.w	lr, [r0, #4]
 8012abc:	6085      	str	r5, [r0, #8]
 8012abe:	2d00      	cmp	r5, #0
 8012ac0:	f43f af64 	beq.w	801298c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x94>
 8012ac4:	43e4      	mvns	r4, r4
 8012ac6:	6044      	str	r4, [r0, #4]
 8012ac8:	1b75      	subs	r5, r6, r5
 8012aca:	e75e      	b.n	801298a <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x92>
 8012acc:	3d800000 	.word	0x3d800000

08012ad0 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>:
 8012ad0:	4b01      	ldr	r3, [pc, #4]	@ (8012ad8 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE+0x8>)
 8012ad2:	6018      	str	r0, [r3, #0]
 8012ad4:	4770      	bx	lr
 8012ad6:	bf00      	nop
 8012ad8:	2001343c 	.word	0x2001343c

08012adc <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>:
 8012adc:	4b06      	ldr	r3, [pc, #24]	@ (8012af8 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x1c>)
 8012ade:	881a      	ldrh	r2, [r3, #0]
 8012ae0:	4282      	cmp	r2, r0
 8012ae2:	d807      	bhi.n	8012af4 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x18>
 8012ae4:	4b05      	ldr	r3, [pc, #20]	@ (8012afc <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x20>)
 8012ae6:	881b      	ldrh	r3, [r3, #0]
 8012ae8:	4413      	add	r3, r2
 8012aea:	4298      	cmp	r0, r3
 8012aec:	bfac      	ite	ge
 8012aee:	2000      	movge	r0, #0
 8012af0:	2001      	movlt	r0, #1
 8012af2:	4770      	bx	lr
 8012af4:	2000      	movs	r0, #0
 8012af6:	4770      	bx	lr
 8012af8:	2001345c 	.word	0x2001345c
 8012afc:	20013460 	.word	0x20013460

08012b00 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>:
 8012b00:	b508      	push	{r3, lr}
 8012b02:	4601      	mov	r1, r0
 8012b04:	f7ff ffea 	bl	8012adc <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>
 8012b08:	b118      	cbz	r0, 8012b12 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x12>
 8012b0a:	4b02      	ldr	r3, [pc, #8]	@ (8012b14 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x14>)
 8012b0c:	681b      	ldr	r3, [r3, #0]
 8012b0e:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 8012b12:	bd08      	pop	{r3, pc}
 8012b14:	20013440 	.word	0x20013440

08012b18 <_ZN8touchgfx6Bitmap10clearCacheEv>:
 8012b18:	b5f0      	push	{r4, r5, r6, r7, lr}
 8012b1a:	4c24      	ldr	r4, [pc, #144]	@ (8012bac <_ZN8touchgfx6Bitmap10clearCacheEv+0x94>)
 8012b1c:	6823      	ldr	r3, [r4, #0]
 8012b1e:	2b00      	cmp	r3, #0
 8012b20:	d042      	beq.n	8012ba8 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 8012b22:	4a23      	ldr	r2, [pc, #140]	@ (8012bb0 <_ZN8touchgfx6Bitmap10clearCacheEv+0x98>)
 8012b24:	4d23      	ldr	r5, [pc, #140]	@ (8012bb4 <_ZN8touchgfx6Bitmap10clearCacheEv+0x9c>)
 8012b26:	8811      	ldrh	r1, [r2, #0]
 8012b28:	f8b5 c000 	ldrh.w	ip, [r5]
 8012b2c:	4822      	ldr	r0, [pc, #136]	@ (8012bb8 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa0>)
 8012b2e:	4461      	add	r1, ip
 8012b30:	1c4a      	adds	r2, r1, #1
 8012b32:	f022 0201 	bic.w	r2, r2, #1
 8012b36:	008f      	lsls	r7, r1, #2
 8012b38:	0412      	lsls	r2, r2, #16
 8012b3a:	19de      	adds	r6, r3, r7
 8012b3c:	0c12      	lsrs	r2, r2, #16
 8012b3e:	eb07 0742 	add.w	r7, r7, r2, lsl #1
 8012b42:	6006      	str	r6, [r0, #0]
 8012b44:	4e1d      	ldr	r6, [pc, #116]	@ (8012bbc <_ZN8touchgfx6Bitmap10clearCacheEv+0xa4>)
 8012b46:	19da      	adds	r2, r3, r7
 8012b48:	6032      	str	r2, [r6, #0]
 8012b4a:	220e      	movs	r2, #14
 8012b4c:	fb02 f20c 	mul.w	r2, r2, ip
 8012b50:	3203      	adds	r2, #3
 8012b52:	f022 0203 	bic.w	r2, r2, #3
 8012b56:	443a      	add	r2, r7
 8012b58:	4f19      	ldr	r7, [pc, #100]	@ (8012bc0 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa8>)
 8012b5a:	4413      	add	r3, r2
 8012b5c:	603b      	str	r3, [r7, #0]
 8012b5e:	4f19      	ldr	r7, [pc, #100]	@ (8012bc4 <_ZN8touchgfx6Bitmap10clearCacheEv+0xac>)
 8012b60:	2300      	movs	r3, #0
 8012b62:	803b      	strh	r3, [r7, #0]
 8012b64:	4f18      	ldr	r7, [pc, #96]	@ (8012bc8 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb0>)
 8012b66:	683f      	ldr	r7, [r7, #0]
 8012b68:	1aba      	subs	r2, r7, r2
 8012b6a:	4f18      	ldr	r7, [pc, #96]	@ (8012bcc <_ZN8touchgfx6Bitmap10clearCacheEv+0xb4>)
 8012b6c:	603a      	str	r2, [r7, #0]
 8012b6e:	4a18      	ldr	r2, [pc, #96]	@ (8012bd0 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb8>)
 8012b70:	469c      	mov	ip, r3
 8012b72:	8013      	strh	r3, [r2, #0]
 8012b74:	f64f 77ff 	movw	r7, #65535	@ 0xffff
 8012b78:	428b      	cmp	r3, r1
 8012b7a:	d10d      	bne.n	8012b98 <_ZN8touchgfx6Bitmap10clearCacheEv+0x80>
 8012b7c:	882d      	ldrh	r5, [r5, #0]
 8012b7e:	6830      	ldr	r0, [r6, #0]
 8012b80:	2300      	movs	r3, #0
 8012b82:	240e      	movs	r4, #14
 8012b84:	429d      	cmp	r5, r3
 8012b86:	d90f      	bls.n	8012ba8 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 8012b88:	fb04 0203 	mla	r2, r4, r3, r0
 8012b8c:	3301      	adds	r3, #1
 8012b8e:	7b11      	ldrb	r1, [r2, #12]
 8012b90:	f36f 1145 	bfc	r1, #5, #1
 8012b94:	7311      	strb	r1, [r2, #12]
 8012b96:	e7f5      	b.n	8012b84 <_ZN8touchgfx6Bitmap10clearCacheEv+0x6c>
 8012b98:	6822      	ldr	r2, [r4, #0]
 8012b9a:	f842 c023 	str.w	ip, [r2, r3, lsl #2]
 8012b9e:	6802      	ldr	r2, [r0, #0]
 8012ba0:	f822 7013 	strh.w	r7, [r2, r3, lsl #1]
 8012ba4:	3301      	adds	r3, #1
 8012ba6:	e7e7      	b.n	8012b78 <_ZN8touchgfx6Bitmap10clearCacheEv+0x60>
 8012ba8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8012baa:	bf00      	nop
 8012bac:	20013440 	.word	0x20013440
 8012bb0:	2001345c 	.word	0x2001345c
 8012bb4:	20013460 	.word	0x20013460
 8012bb8:	20013454 	.word	0x20013454
 8012bbc:	20013444 	.word	0x20013444
 8012bc0:	2001344c 	.word	0x2001344c
 8012bc4:	2001345e 	.word	0x2001345e
 8012bc8:	20013448 	.word	0x20013448
 8012bcc:	20013458 	.word	0x20013458
 8012bd0:	20013450 	.word	0x20013450

08012bd4 <_ZN8touchgfx6Bitmap8setCacheEPtmm>:
 8012bd4:	4b06      	ldr	r3, [pc, #24]	@ (8012bf0 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x1c>)
 8012bd6:	681b      	ldr	r3, [r3, #0]
 8012bd8:	b943      	cbnz	r3, 8012bec <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 8012bda:	b139      	cbz	r1, 8012bec <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 8012bdc:	4b05      	ldr	r3, [pc, #20]	@ (8012bf4 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x20>)
 8012bde:	801a      	strh	r2, [r3, #0]
 8012be0:	4b05      	ldr	r3, [pc, #20]	@ (8012bf8 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x24>)
 8012be2:	6019      	str	r1, [r3, #0]
 8012be4:	4b05      	ldr	r3, [pc, #20]	@ (8012bfc <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x28>)
 8012be6:	6018      	str	r0, [r3, #0]
 8012be8:	f7ff bf96 	b.w	8012b18 <_ZN8touchgfx6Bitmap10clearCacheEv>
 8012bec:	4770      	bx	lr
 8012bee:	bf00      	nop
 8012bf0:	2001344c 	.word	0x2001344c
 8012bf4:	20013460 	.word	0x20013460
 8012bf8:	20013448 	.word	0x20013448
 8012bfc:	20013440 	.word	0x20013440

08012c00 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>:
 8012c00:	b470      	push	{r4, r5, r6}
 8012c02:	4c07      	ldr	r4, [pc, #28]	@ (8012c20 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x20>)
 8012c04:	6826      	ldr	r6, [r4, #0]
 8012c06:	4605      	mov	r5, r0
 8012c08:	4610      	mov	r0, r2
 8012c0a:	9a03      	ldr	r2, [sp, #12]
 8012c0c:	b936      	cbnz	r6, 8012c1c <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x1c>
 8012c0e:	6025      	str	r5, [r4, #0]
 8012c10:	4c04      	ldr	r4, [pc, #16]	@ (8012c24 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x24>)
 8012c12:	8021      	strh	r1, [r4, #0]
 8012c14:	bc70      	pop	{r4, r5, r6}
 8012c16:	4619      	mov	r1, r3
 8012c18:	f7ff bfdc 	b.w	8012bd4 <_ZN8touchgfx6Bitmap8setCacheEPtmm>
 8012c1c:	bc70      	pop	{r4, r5, r6}
 8012c1e:	4770      	bx	lr
 8012c20:	20013464 	.word	0x20013464
 8012c24:	2001345c 	.word	0x2001345c

08012c28 <_ZNK8touchgfx6Bitmap8getWidthEv>:
 8012c28:	4a12      	ldr	r2, [pc, #72]	@ (8012c74 <_ZNK8touchgfx6Bitmap8getWidthEv+0x4c>)
 8012c2a:	8803      	ldrh	r3, [r0, #0]
 8012c2c:	8812      	ldrh	r2, [r2, #0]
 8012c2e:	4293      	cmp	r3, r2
 8012c30:	d207      	bcs.n	8012c42 <_ZNK8touchgfx6Bitmap8getWidthEv+0x1a>
 8012c32:	4a11      	ldr	r2, [pc, #68]	@ (8012c78 <_ZNK8touchgfx6Bitmap8getWidthEv+0x50>)
 8012c34:	6812      	ldr	r2, [r2, #0]
 8012c36:	2114      	movs	r1, #20
 8012c38:	fb01 2303 	mla	r3, r1, r3, r2
 8012c3c:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 8012c40:	4770      	bx	lr
 8012c42:	490e      	ldr	r1, [pc, #56]	@ (8012c7c <_ZNK8touchgfx6Bitmap8getWidthEv+0x54>)
 8012c44:	8809      	ldrh	r1, [r1, #0]
 8012c46:	4411      	add	r1, r2
 8012c48:	428b      	cmp	r3, r1
 8012c4a:	da04      	bge.n	8012c56 <_ZNK8touchgfx6Bitmap8getWidthEv+0x2e>
 8012c4c:	1a9b      	subs	r3, r3, r2
 8012c4e:	4a0c      	ldr	r2, [pc, #48]	@ (8012c80 <_ZNK8touchgfx6Bitmap8getWidthEv+0x58>)
 8012c50:	210e      	movs	r1, #14
 8012c52:	6812      	ldr	r2, [r2, #0]
 8012c54:	e7f0      	b.n	8012c38 <_ZNK8touchgfx6Bitmap8getWidthEv+0x10>
 8012c56:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
 8012c5a:	4293      	cmp	r3, r2
 8012c5c:	d108      	bne.n	8012c70 <_ZNK8touchgfx6Bitmap8getWidthEv+0x48>
 8012c5e:	4b09      	ldr	r3, [pc, #36]	@ (8012c84 <_ZNK8touchgfx6Bitmap8getWidthEv+0x5c>)
 8012c60:	781b      	ldrb	r3, [r3, #0]
 8012c62:	b91b      	cbnz	r3, 8012c6c <_ZNK8touchgfx6Bitmap8getWidthEv+0x44>
 8012c64:	4b08      	ldr	r3, [pc, #32]	@ (8012c88 <_ZNK8touchgfx6Bitmap8getWidthEv+0x60>)
 8012c66:	f9b3 0000 	ldrsh.w	r0, [r3]
 8012c6a:	4770      	bx	lr
 8012c6c:	4b07      	ldr	r3, [pc, #28]	@ (8012c8c <_ZNK8touchgfx6Bitmap8getWidthEv+0x64>)
 8012c6e:	e7fa      	b.n	8012c66 <_ZNK8touchgfx6Bitmap8getWidthEv+0x3e>
 8012c70:	2000      	movs	r0, #0
 8012c72:	4770      	bx	lr
 8012c74:	2001345c 	.word	0x2001345c
 8012c78:	20013464 	.word	0x20013464
 8012c7c:	20013460 	.word	0x20013460
 8012c80:	20013444 	.word	0x20013444
 8012c84:	200133ca 	.word	0x200133ca
 8012c88:	200133cc 	.word	0x200133cc
 8012c8c:	200133ce 	.word	0x200133ce

08012c90 <_ZNK8touchgfx6Bitmap9getHeightEv>:
 8012c90:	4a12      	ldr	r2, [pc, #72]	@ (8012cdc <_ZNK8touchgfx6Bitmap9getHeightEv+0x4c>)
 8012c92:	8803      	ldrh	r3, [r0, #0]
 8012c94:	8812      	ldrh	r2, [r2, #0]
 8012c96:	4293      	cmp	r3, r2
 8012c98:	d207      	bcs.n	8012caa <_ZNK8touchgfx6Bitmap9getHeightEv+0x1a>
 8012c9a:	4a11      	ldr	r2, [pc, #68]	@ (8012ce0 <_ZNK8touchgfx6Bitmap9getHeightEv+0x50>)
 8012c9c:	6812      	ldr	r2, [r2, #0]
 8012c9e:	2114      	movs	r1, #20
 8012ca0:	fb01 2303 	mla	r3, r1, r3, r2
 8012ca4:	f9b3 000a 	ldrsh.w	r0, [r3, #10]
 8012ca8:	4770      	bx	lr
 8012caa:	490e      	ldr	r1, [pc, #56]	@ (8012ce4 <_ZNK8touchgfx6Bitmap9getHeightEv+0x54>)
 8012cac:	8809      	ldrh	r1, [r1, #0]
 8012cae:	4411      	add	r1, r2
 8012cb0:	428b      	cmp	r3, r1
 8012cb2:	da04      	bge.n	8012cbe <_ZNK8touchgfx6Bitmap9getHeightEv+0x2e>
 8012cb4:	1a9b      	subs	r3, r3, r2
 8012cb6:	4a0c      	ldr	r2, [pc, #48]	@ (8012ce8 <_ZNK8touchgfx6Bitmap9getHeightEv+0x58>)
 8012cb8:	210e      	movs	r1, #14
 8012cba:	6812      	ldr	r2, [r2, #0]
 8012cbc:	e7f0      	b.n	8012ca0 <_ZNK8touchgfx6Bitmap9getHeightEv+0x10>
 8012cbe:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
 8012cc2:	4293      	cmp	r3, r2
 8012cc4:	d108      	bne.n	8012cd8 <_ZNK8touchgfx6Bitmap9getHeightEv+0x48>
 8012cc6:	4b09      	ldr	r3, [pc, #36]	@ (8012cec <_ZNK8touchgfx6Bitmap9getHeightEv+0x5c>)
 8012cc8:	781b      	ldrb	r3, [r3, #0]
 8012cca:	b91b      	cbnz	r3, 8012cd4 <_ZNK8touchgfx6Bitmap9getHeightEv+0x44>
 8012ccc:	4b08      	ldr	r3, [pc, #32]	@ (8012cf0 <_ZNK8touchgfx6Bitmap9getHeightEv+0x60>)
 8012cce:	f9b3 0000 	ldrsh.w	r0, [r3]
 8012cd2:	4770      	bx	lr
 8012cd4:	4b07      	ldr	r3, [pc, #28]	@ (8012cf4 <_ZNK8touchgfx6Bitmap9getHeightEv+0x64>)
 8012cd6:	e7fa      	b.n	8012cce <_ZNK8touchgfx6Bitmap9getHeightEv+0x3e>
 8012cd8:	2000      	movs	r0, #0
 8012cda:	4770      	bx	lr
 8012cdc:	2001345c 	.word	0x2001345c
 8012ce0:	20013464 	.word	0x20013464
 8012ce4:	20013460 	.word	0x20013460
 8012ce8:	20013444 	.word	0x20013444
 8012cec:	200133ca 	.word	0x200133ca
 8012cf0:	200133ce 	.word	0x200133ce
 8012cf4:	200133cc 	.word	0x200133cc

08012cf8 <_ZNK8touchgfx6Bitmap12getSolidRectEv>:
 8012cf8:	b530      	push	{r4, r5, lr}
 8012cfa:	4a22      	ldr	r2, [pc, #136]	@ (8012d84 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x8c>)
 8012cfc:	880b      	ldrh	r3, [r1, #0]
 8012cfe:	8812      	ldrh	r2, [r2, #0]
 8012d00:	4293      	cmp	r3, r2
 8012d02:	d213      	bcs.n	8012d2c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x34>
 8012d04:	4a20      	ldr	r2, [pc, #128]	@ (8012d88 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x90>)
 8012d06:	6812      	ldr	r2, [r2, #0]
 8012d08:	2114      	movs	r1, #20
 8012d0a:	fb01 2303 	mla	r3, r1, r3, r2
 8012d0e:	8a1a      	ldrh	r2, [r3, #16]
 8012d10:	f9b3 400c 	ldrsh.w	r4, [r3, #12]
 8012d14:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
 8012d18:	8a5b      	ldrh	r3, [r3, #18]
 8012d1a:	8004      	strh	r4, [r0, #0]
 8012d1c:	f3c2 020c 	ubfx	r2, r2, #0, #13
 8012d20:	f3c3 030c 	ubfx	r3, r3, #0, #13
 8012d24:	8041      	strh	r1, [r0, #2]
 8012d26:	8082      	strh	r2, [r0, #4]
 8012d28:	80c3      	strh	r3, [r0, #6]
 8012d2a:	e024      	b.n	8012d76 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x7e>
 8012d2c:	4917      	ldr	r1, [pc, #92]	@ (8012d8c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x94>)
 8012d2e:	8809      	ldrh	r1, [r1, #0]
 8012d30:	4411      	add	r1, r2
 8012d32:	428b      	cmp	r3, r1
 8012d34:	da10      	bge.n	8012d58 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x60>
 8012d36:	1a9b      	subs	r3, r3, r2
 8012d38:	220e      	movs	r2, #14
 8012d3a:	4353      	muls	r3, r2
 8012d3c:	4a14      	ldr	r2, [pc, #80]	@ (8012d90 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x98>)
 8012d3e:	6811      	ldr	r1, [r2, #0]
 8012d40:	18ca      	adds	r2, r1, r3
 8012d42:	5ecd      	ldrsh	r5, [r1, r3]
 8012d44:	f9b2 4002 	ldrsh.w	r4, [r2, #2]
 8012d48:	f9b2 1004 	ldrsh.w	r1, [r2, #4]
 8012d4c:	f9b2 3006 	ldrsh.w	r3, [r2, #6]
 8012d50:	8005      	strh	r5, [r0, #0]
 8012d52:	8044      	strh	r4, [r0, #2]
 8012d54:	8081      	strh	r1, [r0, #4]
 8012d56:	e7e7      	b.n	8012d28 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x30>
 8012d58:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
 8012d5c:	4293      	cmp	r3, r2
 8012d5e:	d10b      	bne.n	8012d78 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x80>
 8012d60:	4b0c      	ldr	r3, [pc, #48]	@ (8012d94 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x9c>)
 8012d62:	f9b3 1000 	ldrsh.w	r1, [r3]
 8012d66:	4b0c      	ldr	r3, [pc, #48]	@ (8012d98 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xa0>)
 8012d68:	8081      	strh	r1, [r0, #4]
 8012d6a:	f9b3 2000 	ldrsh.w	r2, [r3]
 8012d6e:	80c2      	strh	r2, [r0, #6]
 8012d70:	2300      	movs	r3, #0
 8012d72:	8003      	strh	r3, [r0, #0]
 8012d74:	8043      	strh	r3, [r0, #2]
 8012d76:	bd30      	pop	{r4, r5, pc}
 8012d78:	2300      	movs	r3, #0
 8012d7a:	8003      	strh	r3, [r0, #0]
 8012d7c:	8043      	strh	r3, [r0, #2]
 8012d7e:	8083      	strh	r3, [r0, #4]
 8012d80:	e7d2      	b.n	8012d28 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x30>
 8012d82:	bf00      	nop
 8012d84:	2001345c 	.word	0x2001345c
 8012d88:	20013464 	.word	0x20013464
 8012d8c:	20013460 	.word	0x20013460
 8012d90:	20013444 	.word	0x20013444
 8012d94:	200133c6 	.word	0x200133c6
 8012d98:	200133c8 	.word	0x200133c8

08012d9c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>:
 8012d9c:	4a17      	ldr	r2, [pc, #92]	@ (8012dfc <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x60>)
 8012d9e:	8803      	ldrh	r3, [r0, #0]
 8012da0:	8812      	ldrh	r2, [r2, #0]
 8012da2:	4293      	cmp	r3, r2
 8012da4:	d213      	bcs.n	8012dce <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x32>
 8012da6:	4a16      	ldr	r2, [pc, #88]	@ (8012e00 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x64>)
 8012da8:	6812      	ldr	r2, [r2, #0]
 8012daa:	2114      	movs	r1, #20
 8012dac:	fb01 2303 	mla	r3, r1, r3, r2
 8012db0:	8a1a      	ldrh	r2, [r3, #16]
 8012db2:	8919      	ldrh	r1, [r3, #8]
 8012db4:	f3c2 020c 	ubfx	r2, r2, #0, #13
 8012db8:	428a      	cmp	r2, r1
 8012dba:	db1d      	blt.n	8012df8 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 8012dbc:	8a58      	ldrh	r0, [r3, #18]
 8012dbe:	f3c0 000c 	ubfx	r0, r0, #0, #13
 8012dc2:	895b      	ldrh	r3, [r3, #10]
 8012dc4:	4298      	cmp	r0, r3
 8012dc6:	bfac      	ite	ge
 8012dc8:	2000      	movge	r0, #0
 8012dca:	2001      	movlt	r0, #1
 8012dcc:	4770      	bx	lr
 8012dce:	490d      	ldr	r1, [pc, #52]	@ (8012e04 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x68>)
 8012dd0:	8809      	ldrh	r1, [r1, #0]
 8012dd2:	4411      	add	r1, r2
 8012dd4:	428b      	cmp	r3, r1
 8012dd6:	da0d      	bge.n	8012df4 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x58>
 8012dd8:	1a9b      	subs	r3, r3, r2
 8012dda:	4a0b      	ldr	r2, [pc, #44]	@ (8012e08 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x6c>)
 8012ddc:	6812      	ldr	r2, [r2, #0]
 8012dde:	210e      	movs	r1, #14
 8012de0:	fb01 2303 	mla	r3, r1, r3, r2
 8012de4:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
 8012de8:	891a      	ldrh	r2, [r3, #8]
 8012dea:	4291      	cmp	r1, r2
 8012dec:	db04      	blt.n	8012df8 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 8012dee:	f9b3 0006 	ldrsh.w	r0, [r3, #6]
 8012df2:	e7e6      	b.n	8012dc2 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x26>
 8012df4:	2000      	movs	r0, #0
 8012df6:	4770      	bx	lr
 8012df8:	2001      	movs	r0, #1
 8012dfa:	4770      	bx	lr
 8012dfc:	2001345c 	.word	0x2001345c
 8012e00:	20013464 	.word	0x20013464
 8012e04:	20013460 	.word	0x20013460
 8012e08:	20013444 	.word	0x20013444

08012e0c <_ZNK8touchgfx6Bitmap7getDataEv>:
 8012e0c:	4a12      	ldr	r2, [pc, #72]	@ (8012e58 <_ZNK8touchgfx6Bitmap7getDataEv+0x4c>)
 8012e0e:	8803      	ldrh	r3, [r0, #0]
 8012e10:	8811      	ldrh	r1, [r2, #0]
 8012e12:	428b      	cmp	r3, r1
 8012e14:	d20b      	bcs.n	8012e2e <_ZNK8touchgfx6Bitmap7getDataEv+0x22>
 8012e16:	4a11      	ldr	r2, [pc, #68]	@ (8012e5c <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 8012e18:	6812      	ldr	r2, [r2, #0]
 8012e1a:	b112      	cbz	r2, 8012e22 <_ZNK8touchgfx6Bitmap7getDataEv+0x16>
 8012e1c:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 8012e20:	b9c0      	cbnz	r0, 8012e54 <_ZNK8touchgfx6Bitmap7getDataEv+0x48>
 8012e22:	4a0f      	ldr	r2, [pc, #60]	@ (8012e60 <_ZNK8touchgfx6Bitmap7getDataEv+0x54>)
 8012e24:	6811      	ldr	r1, [r2, #0]
 8012e26:	2214      	movs	r2, #20
 8012e28:	4353      	muls	r3, r2
 8012e2a:	58c8      	ldr	r0, [r1, r3]
 8012e2c:	4770      	bx	lr
 8012e2e:	4a0d      	ldr	r2, [pc, #52]	@ (8012e64 <_ZNK8touchgfx6Bitmap7getDataEv+0x58>)
 8012e30:	8812      	ldrh	r2, [r2, #0]
 8012e32:	440a      	add	r2, r1
 8012e34:	4293      	cmp	r3, r2
 8012e36:	da04      	bge.n	8012e42 <_ZNK8touchgfx6Bitmap7getDataEv+0x36>
 8012e38:	4a08      	ldr	r2, [pc, #32]	@ (8012e5c <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 8012e3a:	6812      	ldr	r2, [r2, #0]
 8012e3c:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 8012e40:	4770      	bx	lr
 8012e42:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
 8012e46:	4293      	cmp	r3, r2
 8012e48:	d103      	bne.n	8012e52 <_ZNK8touchgfx6Bitmap7getDataEv+0x46>
 8012e4a:	4b07      	ldr	r3, [pc, #28]	@ (8012e68 <_ZNK8touchgfx6Bitmap7getDataEv+0x5c>)
 8012e4c:	681b      	ldr	r3, [r3, #0]
 8012e4e:	6c58      	ldr	r0, [r3, #68]	@ 0x44
 8012e50:	4770      	bx	lr
 8012e52:	2000      	movs	r0, #0
 8012e54:	4770      	bx	lr
 8012e56:	bf00      	nop
 8012e58:	2001345c 	.word	0x2001345c
 8012e5c:	20013440 	.word	0x20013440
 8012e60:	20013464 	.word	0x20013464
 8012e64:	20013460 	.word	0x20013460
 8012e68:	200133d4 	.word	0x200133d4

08012e6c <_ZNK8touchgfx6Bitmap12getExtraDataEv>:
 8012e6c:	4b24      	ldr	r3, [pc, #144]	@ (8012f00 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x94>)
 8012e6e:	8802      	ldrh	r2, [r0, #0]
 8012e70:	8818      	ldrh	r0, [r3, #0]
 8012e72:	4282      	cmp	r2, r0
 8012e74:	d221      	bcs.n	8012eba <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x4e>
 8012e76:	4b23      	ldr	r3, [pc, #140]	@ (8012f04 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>)
 8012e78:	6819      	ldr	r1, [r3, #0]
 8012e7a:	2314      	movs	r3, #20
 8012e7c:	fb03 1302 	mla	r3, r3, r2, r1
 8012e80:	6858      	ldr	r0, [r3, #4]
 8012e82:	2800      	cmp	r0, #0
 8012e84:	d03a      	beq.n	8012efc <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 8012e86:	4920      	ldr	r1, [pc, #128]	@ (8012f08 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 8012e88:	6809      	ldr	r1, [r1, #0]
 8012e8a:	2900      	cmp	r1, #0
 8012e8c:	d036      	beq.n	8012efc <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 8012e8e:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
 8012e92:	2900      	cmp	r1, #0
 8012e94:	d032      	beq.n	8012efc <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 8012e96:	891a      	ldrh	r2, [r3, #8]
 8012e98:	8958      	ldrh	r0, [r3, #10]
 8012e9a:	4350      	muls	r0, r2
 8012e9c:	7c5a      	ldrb	r2, [r3, #17]
 8012e9e:	7cdb      	ldrb	r3, [r3, #19]
 8012ea0:	0952      	lsrs	r2, r2, #5
 8012ea2:	f3c3 1342 	ubfx	r3, r3, #5, #3
 8012ea6:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 8012eaa:	2b0b      	cmp	r3, #11
 8012eac:	bf18      	it	ne
 8012eae:	0040      	lslne	r0, r0, #1
 8012eb0:	3003      	adds	r0, #3
 8012eb2:	f020 0003 	bic.w	r0, r0, #3
 8012eb6:	4408      	add	r0, r1
 8012eb8:	4770      	bx	lr
 8012eba:	4b14      	ldr	r3, [pc, #80]	@ (8012f0c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa0>)
 8012ebc:	881b      	ldrh	r3, [r3, #0]
 8012ebe:	4403      	add	r3, r0
 8012ec0:	429a      	cmp	r2, r3
 8012ec2:	da1a      	bge.n	8012efa <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 8012ec4:	4b12      	ldr	r3, [pc, #72]	@ (8012f10 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
 8012ec6:	681b      	ldr	r3, [r3, #0]
 8012ec8:	1a10      	subs	r0, r2, r0
 8012eca:	210e      	movs	r1, #14
 8012ecc:	fb01 3000 	mla	r0, r1, r0, r3
 8012ed0:	7b03      	ldrb	r3, [r0, #12]
 8012ed2:	f003 031f 	and.w	r3, r3, #31
 8012ed6:	2b0b      	cmp	r3, #11
 8012ed8:	d10b      	bne.n	8012ef2 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x86>
 8012eda:	8903      	ldrh	r3, [r0, #8]
 8012edc:	8940      	ldrh	r0, [r0, #10]
 8012ede:	4358      	muls	r0, r3
 8012ee0:	4b09      	ldr	r3, [pc, #36]	@ (8012f08 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 8012ee2:	6819      	ldr	r1, [r3, #0]
 8012ee4:	3003      	adds	r0, #3
 8012ee6:	f020 0303 	bic.w	r3, r0, #3
 8012eea:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
 8012eee:	4418      	add	r0, r3
 8012ef0:	4770      	bx	lr
 8012ef2:	2b0d      	cmp	r3, #13
 8012ef4:	d101      	bne.n	8012efa <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 8012ef6:	300d      	adds	r0, #13
 8012ef8:	4770      	bx	lr
 8012efa:	2000      	movs	r0, #0
 8012efc:	4770      	bx	lr
 8012efe:	bf00      	nop
 8012f00:	2001345c 	.word	0x2001345c
 8012f04:	20013464 	.word	0x20013464
 8012f08:	20013440 	.word	0x20013440
 8012f0c:	20013460 	.word	0x20013460
 8012f10:	20013444 	.word	0x20013444

08012f14 <_ZNK8touchgfx6Bitmap9getFormatEv>:
 8012f14:	b510      	push	{r4, lr}
 8012f16:	4b1f      	ldr	r3, [pc, #124]	@ (8012f94 <_ZNK8touchgfx6Bitmap9getFormatEv+0x80>)
 8012f18:	8802      	ldrh	r2, [r0, #0]
 8012f1a:	881b      	ldrh	r3, [r3, #0]
 8012f1c:	429a      	cmp	r2, r3
 8012f1e:	d21a      	bcs.n	8012f56 <_ZNK8touchgfx6Bitmap9getFormatEv+0x42>
 8012f20:	4b1d      	ldr	r3, [pc, #116]	@ (8012f98 <_ZNK8touchgfx6Bitmap9getFormatEv+0x84>)
 8012f22:	681b      	ldr	r3, [r3, #0]
 8012f24:	2114      	movs	r1, #20
 8012f26:	fb01 3102 	mla	r1, r1, r2, r3
 8012f2a:	7c4b      	ldrb	r3, [r1, #17]
 8012f2c:	0958      	lsrs	r0, r3, #5
 8012f2e:	7ccb      	ldrb	r3, [r1, #19]
 8012f30:	491a      	ldr	r1, [pc, #104]	@ (8012f9c <_ZNK8touchgfx6Bitmap9getFormatEv+0x88>)
 8012f32:	f3c3 1342 	ubfx	r3, r3, #5, #3
 8012f36:	6809      	ldr	r1, [r1, #0]
 8012f38:	ea43 03c0 	orr.w	r3, r3, r0, lsl #3
 8012f3c:	b2d8      	uxtb	r0, r3
 8012f3e:	b149      	cbz	r1, 8012f54 <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
 8012f40:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 8012f44:	b132      	cbz	r2, 8012f54 <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
 8012f46:	2b0e      	cmp	r3, #14
 8012f48:	d021      	beq.n	8012f8e <_ZNK8touchgfx6Bitmap9getFormatEv+0x7a>
 8012f4a:	280f      	cmp	r0, #15
 8012f4c:	d01d      	beq.n	8012f8a <_ZNK8touchgfx6Bitmap9getFormatEv+0x76>
 8012f4e:	2810      	cmp	r0, #16
 8012f50:	bf08      	it	eq
 8012f52:	2002      	moveq	r0, #2
 8012f54:	bd10      	pop	{r4, pc}
 8012f56:	4912      	ldr	r1, [pc, #72]	@ (8012fa0 <_ZNK8touchgfx6Bitmap9getFormatEv+0x8c>)
 8012f58:	8809      	ldrh	r1, [r1, #0]
 8012f5a:	4419      	add	r1, r3
 8012f5c:	428a      	cmp	r2, r1
 8012f5e:	da09      	bge.n	8012f74 <_ZNK8touchgfx6Bitmap9getFormatEv+0x60>
 8012f60:	1ad3      	subs	r3, r2, r3
 8012f62:	4a10      	ldr	r2, [pc, #64]	@ (8012fa4 <_ZNK8touchgfx6Bitmap9getFormatEv+0x90>)
 8012f64:	6812      	ldr	r2, [r2, #0]
 8012f66:	210e      	movs	r1, #14
 8012f68:	fb01 2303 	mla	r3, r1, r3, r2
 8012f6c:	7b18      	ldrb	r0, [r3, #12]
 8012f6e:	f000 001f 	and.w	r0, r0, #31
 8012f72:	e7ef      	b.n	8012f54 <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
 8012f74:	f64f 73fe 	movw	r3, #65534	@ 0xfffe
 8012f78:	429a      	cmp	r2, r3
 8012f7a:	d108      	bne.n	8012f8e <_ZNK8touchgfx6Bitmap9getFormatEv+0x7a>
 8012f7c:	f7f0 fa24 	bl	80033c8 <_ZN8touchgfx3HAL3lcdEv>
 8012f80:	6803      	ldr	r3, [r0, #0]
 8012f82:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8012f86:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8012f88:	4718      	bx	r3
 8012f8a:	2001      	movs	r0, #1
 8012f8c:	e7e2      	b.n	8012f54 <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
 8012f8e:	2000      	movs	r0, #0
 8012f90:	e7e0      	b.n	8012f54 <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
 8012f92:	bf00      	nop
 8012f94:	2001345c 	.word	0x2001345c
 8012f98:	20013464 	.word	0x20013464
 8012f9c:	20013440 	.word	0x20013440
 8012fa0:	20013460 	.word	0x20013460
 8012fa4:	20013444 	.word	0x20013444

08012fa8 <_ZNK8touchgfx8LCD16bpp8bitDepthEv>:
 8012fa8:	2010      	movs	r0, #16
 8012faa:	4770      	bx	lr

08012fac <_ZNK8touchgfx8LCD16bpp17framebufferFormatEv>:
 8012fac:	2000      	movs	r0, #0
 8012fae:	4770      	bx	lr

08012fb0 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv>:
 8012fb0:	4b02      	ldr	r3, [pc, #8]	@ (8012fbc <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0xc>)
 8012fb2:	8818      	ldrh	r0, [r3, #0]
 8012fb4:	0040      	lsls	r0, r0, #1
 8012fb6:	b280      	uxth	r0, r0
 8012fb8:	4770      	bx	lr
 8012fba:	bf00      	nop
 8012fbc:	200133cc 	.word	0x200133cc

08012fc0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
 8012fc0:	2bff      	cmp	r3, #255	@ 0xff
 8012fc2:	d05e      	beq.n	8013082 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xc2>
 8012fc4:	2a0b      	cmp	r2, #11
 8012fc6:	d058      	beq.n	801307a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xba>
 8012fc8:	d80e      	bhi.n	8012fe8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x28>
 8012fca:	2a03      	cmp	r2, #3
 8012fcc:	d04d      	beq.n	801306a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xaa>
 8012fce:	d804      	bhi.n	8012fda <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
 8012fd0:	2a01      	cmp	r2, #1
 8012fd2:	d04c      	beq.n	801306e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xae>
 8012fd4:	d94d      	bls.n	8013072 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xb2>
 8012fd6:	6bc3      	ldr	r3, [r0, #60]	@ 0x3c
 8012fd8:	e031      	b.n	801303e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8012fda:	2a09      	cmp	r2, #9
 8012fdc:	d04d      	beq.n	801307a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xba>
 8012fde:	d84a      	bhi.n	8013076 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xb6>
 8012fe0:	2a08      	cmp	r2, #8
 8012fe2:	d048      	beq.n	8013076 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xb6>
 8012fe4:	2300      	movs	r3, #0
 8012fe6:	e02a      	b.n	801303e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8012fe8:	2a2f      	cmp	r2, #47	@ 0x2f
 8012fea:	d02c      	beq.n	8013046 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x86>
 8012fec:	d811      	bhi.n	8013012 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x52>
 8012fee:	2a2d      	cmp	r2, #45	@ 0x2d
 8012ff0:	d018      	beq.n	8013024 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x64>
 8012ff2:	d831      	bhi.n	8013058 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x98>
 8012ff4:	2a2c      	cmp	r2, #44	@ 0x2c
 8012ff6:	d1f5      	bne.n	8012fe4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8012ff8:	684a      	ldr	r2, [r1, #4]
 8012ffa:	7813      	ldrb	r3, [r2, #0]
 8012ffc:	7852      	ldrb	r2, [r2, #1]
 8012ffe:	2a00      	cmp	r2, #0
 8013000:	d1f0      	bne.n	8012fe4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8013002:	2b01      	cmp	r3, #1
 8013004:	d01d      	beq.n	8013042 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x82>
 8013006:	2b00      	cmp	r3, #0
 8013008:	d02d      	beq.n	8013066 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa6>
 801300a:	2b02      	cmp	r3, #2
 801300c:	d1ea      	bne.n	8012fe4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801300e:	68c3      	ldr	r3, [r0, #12]
 8013010:	e015      	b.n	801303e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8013012:	2a31      	cmp	r2, #49	@ 0x31
 8013014:	d004      	beq.n	8013020 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x60>
 8013016:	d332      	bcc.n	801307e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbe>
 8013018:	2a32      	cmp	r2, #50	@ 0x32
 801301a:	d030      	beq.n	801307e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbe>
 801301c:	2a33      	cmp	r2, #51	@ 0x33
 801301e:	d1e1      	bne.n	8012fe4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8013020:	6f43      	ldr	r3, [r0, #116]	@ 0x74
 8013022:	e00c      	b.n	801303e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8013024:	684a      	ldr	r2, [r1, #4]
 8013026:	7813      	ldrb	r3, [r2, #0]
 8013028:	7852      	ldrb	r2, [r2, #1]
 801302a:	2a00      	cmp	r2, #0
 801302c:	d1da      	bne.n	8012fe4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801302e:	2b01      	cmp	r3, #1
 8013030:	d004      	beq.n	801303c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7c>
 8013032:	d30f      	bcc.n	8013054 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x94>
 8013034:	2b02      	cmp	r3, #2
 8013036:	d1d5      	bne.n	8012fe4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8013038:	6943      	ldr	r3, [r0, #20]
 801303a:	e000      	b.n	801303e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801303c:	6a43      	ldr	r3, [r0, #36]	@ 0x24
 801303e:	4618      	mov	r0, r3
 8013040:	4770      	bx	lr
 8013042:	69c3      	ldr	r3, [r0, #28]
 8013044:	e7fb      	b.n	801303e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8013046:	684b      	ldr	r3, [r1, #4]
 8013048:	781a      	ldrb	r2, [r3, #0]
 801304a:	785b      	ldrb	r3, [r3, #1]
 801304c:	2b00      	cmp	r3, #0
 801304e:	d1c9      	bne.n	8012fe4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8013050:	2a00      	cmp	r2, #0
 8013052:	d1f4      	bne.n	801303e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8013054:	6b43      	ldr	r3, [r0, #52]	@ 0x34
 8013056:	e7f2      	b.n	801303e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8013058:	684b      	ldr	r3, [r1, #4]
 801305a:	781a      	ldrb	r2, [r3, #0]
 801305c:	785b      	ldrb	r3, [r3, #1]
 801305e:	2b00      	cmp	r3, #0
 8013060:	d1c0      	bne.n	8012fe4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8013062:	2a00      	cmp	r2, #0
 8013064:	d1eb      	bne.n	801303e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8013066:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 8013068:	e7e9      	b.n	801303e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801306a:	6cc3      	ldr	r3, [r0, #76]	@ 0x4c
 801306c:	e7e7      	b.n	801303e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801306e:	6d43      	ldr	r3, [r0, #84]	@ 0x54
 8013070:	e7e5      	b.n	801303e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8013072:	6c43      	ldr	r3, [r0, #68]	@ 0x44
 8013074:	e7e3      	b.n	801303e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8013076:	6dc3      	ldr	r3, [r0, #92]	@ 0x5c
 8013078:	e7e1      	b.n	801303e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801307a:	6e43      	ldr	r3, [r0, #100]	@ 0x64
 801307c:	e7df      	b.n	801303e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801307e:	6ec3      	ldr	r3, [r0, #108]	@ 0x6c
 8013080:	e7dd      	b.n	801303e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8013082:	2a0b      	cmp	r2, #11
 8013084:	d059      	beq.n	801313a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x17a>
 8013086:	d80e      	bhi.n	80130a6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xe6>
 8013088:	2a03      	cmp	r2, #3
 801308a:	d050      	beq.n	801312e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x16e>
 801308c:	d804      	bhi.n	8013098 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xd8>
 801308e:	2a01      	cmp	r2, #1
 8013090:	d04f      	beq.n	8013132 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x172>
 8013092:	d950      	bls.n	8013136 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x176>
 8013094:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 8013096:	e7d2      	b.n	801303e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8013098:	2a09      	cmp	r2, #9
 801309a:	d04e      	beq.n	801313a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x17a>
 801309c:	d801      	bhi.n	80130a2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xe2>
 801309e:	2a08      	cmp	r2, #8
 80130a0:	d1a0      	bne.n	8012fe4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80130a2:	6e03      	ldr	r3, [r0, #96]	@ 0x60
 80130a4:	e7cb      	b.n	801303e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 80130a6:	2a2f      	cmp	r2, #47	@ 0x2f
 80130a8:	d02d      	beq.n	8013106 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x146>
 80130aa:	d811      	bhi.n	80130d0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x110>
 80130ac:	2a2d      	cmp	r2, #45	@ 0x2d
 80130ae:	d018      	beq.n	80130e2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x122>
 80130b0:	d833      	bhi.n	801311a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x15a>
 80130b2:	2a2c      	cmp	r2, #44	@ 0x2c
 80130b4:	d196      	bne.n	8012fe4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80130b6:	684a      	ldr	r2, [r1, #4]
 80130b8:	7813      	ldrb	r3, [r2, #0]
 80130ba:	7852      	ldrb	r2, [r2, #1]
 80130bc:	2a00      	cmp	r2, #0
 80130be:	d191      	bne.n	8012fe4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80130c0:	2b01      	cmp	r3, #1
 80130c2:	d01e      	beq.n	8013102 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 80130c4:	2b00      	cmp	r3, #0
 80130c6:	d030      	beq.n	801312a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x16a>
 80130c8:	2b02      	cmp	r3, #2
 80130ca:	d18b      	bne.n	8012fe4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80130cc:	6903      	ldr	r3, [r0, #16]
 80130ce:	e7b6      	b.n	801303e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 80130d0:	2a31      	cmp	r2, #49	@ 0x31
 80130d2:	d004      	beq.n	80130de <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11e>
 80130d4:	d333      	bcc.n	801313e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x17e>
 80130d6:	2a32      	cmp	r2, #50	@ 0x32
 80130d8:	d031      	beq.n	801313e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x17e>
 80130da:	2a33      	cmp	r2, #51	@ 0x33
 80130dc:	d182      	bne.n	8012fe4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80130de:	6f83      	ldr	r3, [r0, #120]	@ 0x78
 80130e0:	e7ad      	b.n	801303e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 80130e2:	684a      	ldr	r2, [r1, #4]
 80130e4:	7813      	ldrb	r3, [r2, #0]
 80130e6:	7852      	ldrb	r2, [r2, #1]
 80130e8:	2a00      	cmp	r2, #0
 80130ea:	f47f af7b 	bne.w	8012fe4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80130ee:	2b01      	cmp	r3, #1
 80130f0:	d005      	beq.n	80130fe <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 80130f2:	d310      	bcc.n	8013116 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x156>
 80130f4:	2b02      	cmp	r3, #2
 80130f6:	f47f af75 	bne.w	8012fe4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80130fa:	6983      	ldr	r3, [r0, #24]
 80130fc:	e79f      	b.n	801303e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 80130fe:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 8013100:	e79d      	b.n	801303e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8013102:	6a03      	ldr	r3, [r0, #32]
 8013104:	e79b      	b.n	801303e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8013106:	684b      	ldr	r3, [r1, #4]
 8013108:	781a      	ldrb	r2, [r3, #0]
 801310a:	785b      	ldrb	r3, [r3, #1]
 801310c:	2b00      	cmp	r3, #0
 801310e:	f47f af69 	bne.w	8012fe4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8013112:	2a00      	cmp	r2, #0
 8013114:	d193      	bne.n	801303e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8013116:	6b83      	ldr	r3, [r0, #56]	@ 0x38
 8013118:	e791      	b.n	801303e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801311a:	684b      	ldr	r3, [r1, #4]
 801311c:	781a      	ldrb	r2, [r3, #0]
 801311e:	785b      	ldrb	r3, [r3, #1]
 8013120:	2b00      	cmp	r3, #0
 8013122:	f47f af5f 	bne.w	8012fe4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8013126:	2a00      	cmp	r2, #0
 8013128:	d189      	bne.n	801303e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801312a:	6b03      	ldr	r3, [r0, #48]	@ 0x30
 801312c:	e787      	b.n	801303e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801312e:	6d03      	ldr	r3, [r0, #80]	@ 0x50
 8013130:	e785      	b.n	801303e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8013132:	6d83      	ldr	r3, [r0, #88]	@ 0x58
 8013134:	e783      	b.n	801303e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8013136:	6c83      	ldr	r3, [r0, #72]	@ 0x48
 8013138:	e781      	b.n	801303e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801313a:	6e83      	ldr	r3, [r0, #104]	@ 0x68
 801313c:	e77f      	b.n	801303e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801313e:	6f03      	ldr	r3, [r0, #112]	@ 0x70
 8013140:	e77d      	b.n	801303e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>

08013142 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8013142:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013146:	b087      	sub	sp, #28
 8013148:	9815      	ldr	r0, [sp, #84]	@ 0x54
 801314a:	9205      	str	r2, [sp, #20]
 801314c:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 8013150:	9202      	str	r2, [sp, #8]
 8013152:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
 8013156:	9101      	str	r1, [sp, #4]
 8013158:	6841      	ldr	r1, [r0, #4]
 801315a:	f8dd e060 	ldr.w	lr, [sp, #96]	@ 0x60
 801315e:	fb01 2404 	mla	r4, r1, r4, r2
 8013162:	6802      	ldr	r2, [r0, #0]
 8013164:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8013168:	f8de 2000 	ldr.w	r2, [lr]
 801316c:	9203      	str	r2, [sp, #12]
 801316e:	f8de 2004 	ldr.w	r2, [lr, #4]
 8013172:	3204      	adds	r2, #4
 8013174:	9204      	str	r2, [sp, #16]
 8013176:	9a02      	ldr	r2, [sp, #8]
 8013178:	43d6      	mvns	r6, r2
 801317a:	b2f6      	uxtb	r6, r6
 801317c:	9a01      	ldr	r2, [sp, #4]
 801317e:	2a00      	cmp	r2, #0
 8013180:	dc03      	bgt.n	801318a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8013182:	9a05      	ldr	r2, [sp, #20]
 8013184:	2a00      	cmp	r2, #0
 8013186:	f340 8129 	ble.w	80133dc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 801318a:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 801318c:	f9be c008 	ldrsh.w	ip, [lr, #8]
 8013190:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 8013194:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 8013198:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 801319a:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 801319e:	2b00      	cmp	r3, #0
 80131a0:	dd0e      	ble.n	80131c0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 80131a2:	1408      	asrs	r0, r1, #16
 80131a4:	d405      	bmi.n	80131b2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80131a6:	4560      	cmp	r0, ip
 80131a8:	da03      	bge.n	80131b2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80131aa:	1410      	asrs	r0, r2, #16
 80131ac:	d401      	bmi.n	80131b2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80131ae:	42b8      	cmp	r0, r7
 80131b0:	db07      	blt.n	80131c2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 80131b2:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 80131b4:	4401      	add	r1, r0
 80131b6:	9814      	ldr	r0, [sp, #80]	@ 0x50
 80131b8:	3b01      	subs	r3, #1
 80131ba:	4402      	add	r2, r0
 80131bc:	3402      	adds	r4, #2
 80131be:	e7ee      	b.n	801319e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 80131c0:	d071      	beq.n	80132a6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80131c2:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 80131c4:	1e58      	subs	r0, r3, #1
 80131c6:	fb05 1500 	mla	r5, r5, r0, r1
 80131ca:	142d      	asrs	r5, r5, #16
 80131cc:	d45f      	bmi.n	801328e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 80131ce:	4565      	cmp	r5, ip
 80131d0:	da5d      	bge.n	801328e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 80131d2:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 80131d4:	fb05 2000 	mla	r0, r5, r0, r2
 80131d8:	1400      	asrs	r0, r0, #16
 80131da:	d458      	bmi.n	801328e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 80131dc:	42b8      	cmp	r0, r7
 80131de:	da56      	bge.n	801328e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 80131e0:	f8bd b008 	ldrh.w	fp, [sp, #8]
 80131e4:	4699      	mov	r9, r3
 80131e6:	46a2      	mov	sl, r4
 80131e8:	f1b9 0f00 	cmp.w	r9, #0
 80131ec:	dd57      	ble.n	801329e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
 80131ee:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 80131f2:	9803      	ldr	r0, [sp, #12]
 80131f4:	ea4f 4c22 	mov.w	ip, r2, asr #16
 80131f8:	140d      	asrs	r5, r1, #16
 80131fa:	fb07 000c 	mla	r0, r7, ip, r0
 80131fe:	f109 39ff 	add.w	r9, r9, #4294967295
 8013202:	5d40      	ldrb	r0, [r0, r5]
 8013204:	9d04      	ldr	r5, [sp, #16]
 8013206:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 801320a:	f8ba 5000 	ldrh.w	r5, [sl]
 801320e:	122f      	asrs	r7, r5, #8
 8013210:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8013214:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8013218:	fb17 f706 	smulbb	r7, r7, r6
 801321c:	ea4f 08e5 	mov.w	r8, r5, asr #3
 8013220:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8013224:	00ed      	lsls	r5, r5, #3
 8013226:	fb0c 7c0b 	mla	ip, ip, fp, r7
 801322a:	f008 08fc 	and.w	r8, r8, #252	@ 0xfc
 801322e:	10c7      	asrs	r7, r0, #3
 8013230:	b2ed      	uxtb	r5, r5
 8013232:	00c0      	lsls	r0, r0, #3
 8013234:	fb18 f806 	smulbb	r8, r8, r6
 8013238:	fb15 f506 	smulbb	r5, r5, r6
 801323c:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8013240:	b2c0      	uxtb	r0, r0
 8013242:	fa1f fc8c 	uxth.w	ip, ip
 8013246:	fb07 870b 	mla	r7, r7, fp, r8
 801324a:	fb00 500b 	mla	r0, r0, fp, r5
 801324e:	b280      	uxth	r0, r0
 8013250:	b2bf      	uxth	r7, r7
 8013252:	f10c 0501 	add.w	r5, ip, #1
 8013256:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801325a:	f107 0801 	add.w	r8, r7, #1
 801325e:	1c45      	adds	r5, r0, #1
 8013260:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8013264:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 8013268:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 801326a:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 801326e:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8013272:	ea4f 1858 	mov.w	r8, r8, lsr #5
 8013276:	ea45 0c0c 	orr.w	ip, r5, ip
 801327a:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 801327e:	4401      	add	r1, r0
 8013280:	9814      	ldr	r0, [sp, #80]	@ 0x50
 8013282:	ea4c 0c08 	orr.w	ip, ip, r8
 8013286:	f82a cb02 	strh.w	ip, [sl], #2
 801328a:	4402      	add	r2, r0
 801328c:	e7ac      	b.n	80131e8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801328e:	f8bd a008 	ldrh.w	sl, [sp, #8]
 8013292:	f04f 0800 	mov.w	r8, #0
 8013296:	eb03 0008 	add.w	r0, r3, r8
 801329a:	2800      	cmp	r0, #0
 801329c:	dc41      	bgt.n	8013322 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 801329e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80132a2:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80132a6:	9b01      	ldr	r3, [sp, #4]
 80132a8:	2b00      	cmp	r3, #0
 80132aa:	f340 8097 	ble.w	80133dc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 80132ae:	ee30 0a04 	vadd.f32	s0, s0, s8
 80132b2:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 80132b6:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80132ba:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80132bc:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80132c0:	ee31 1a05 	vadd.f32	s2, s2, s10
 80132c4:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80132c8:	eef0 6a62 	vmov.f32	s13, s5
 80132cc:	ee61 7a27 	vmul.f32	s15, s2, s15
 80132d0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80132d4:	ee77 2a62 	vsub.f32	s5, s14, s5
 80132d8:	edcd 6a11 	vstr	s13, [sp, #68]	@ 0x44
 80132dc:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80132e0:	eef0 6a43 	vmov.f32	s13, s6
 80132e4:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80132e8:	ee12 2a90 	vmov	r2, s5
 80132ec:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80132f0:	fb92 f3f3 	sdiv	r3, r2, r3
 80132f4:	ee13 2a10 	vmov	r2, s6
 80132f8:	9313      	str	r3, [sp, #76]	@ 0x4c
 80132fa:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80132fc:	fb92 f3f3 	sdiv	r3, r2, r3
 8013300:	9314      	str	r3, [sp, #80]	@ 0x50
 8013302:	9b01      	ldr	r3, [sp, #4]
 8013304:	9a05      	ldr	r2, [sp, #20]
 8013306:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801330a:	3b01      	subs	r3, #1
 801330c:	9301      	str	r3, [sp, #4]
 801330e:	edcd 6a12 	vstr	s13, [sp, #72]	@ 0x48
 8013312:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8013314:	eeb0 3a67 	vmov.f32	s6, s15
 8013318:	bf08      	it	eq
 801331a:	4613      	moveq	r3, r2
 801331c:	eef0 2a47 	vmov.f32	s5, s14
 8013320:	e72c      	b.n	801317c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8013322:	140f      	asrs	r7, r1, #16
 8013324:	d453      	bmi.n	80133ce <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8013326:	f8de 5008 	ldr.w	r5, [lr, #8]
 801332a:	42bd      	cmp	r5, r7
 801332c:	dd4f      	ble.n	80133ce <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801332e:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8013332:	d44c      	bmi.n	80133ce <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8013334:	f8de 000c 	ldr.w	r0, [lr, #12]
 8013338:	4560      	cmp	r0, ip
 801333a:	dd48      	ble.n	80133ce <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801333c:	9803      	ldr	r0, [sp, #12]
 801333e:	b22d      	sxth	r5, r5
 8013340:	fb0c 0505 	mla	r5, ip, r5, r0
 8013344:	5de8      	ldrb	r0, [r5, r7]
 8013346:	9d04      	ldr	r5, [sp, #16]
 8013348:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 801334c:	f06f 0501 	mvn.w	r5, #1
 8013350:	fb05 fb08 	mul.w	fp, r5, r8
 8013354:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8013358:	f834 500b 	ldrh.w	r5, [r4, fp]
 801335c:	122f      	asrs	r7, r5, #8
 801335e:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8013362:	fb17 f706 	smulbb	r7, r7, r6
 8013366:	ea4f 09e5 	mov.w	r9, r5, asr #3
 801336a:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801336e:	00ed      	lsls	r5, r5, #3
 8013370:	fb0c 7c0a 	mla	ip, ip, sl, r7
 8013374:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
 8013378:	10c7      	asrs	r7, r0, #3
 801337a:	b2ed      	uxtb	r5, r5
 801337c:	00c0      	lsls	r0, r0, #3
 801337e:	fb19 f906 	smulbb	r9, r9, r6
 8013382:	fb15 f506 	smulbb	r5, r5, r6
 8013386:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801338a:	b2c0      	uxtb	r0, r0
 801338c:	fa1f fc8c 	uxth.w	ip, ip
 8013390:	fb07 970a 	mla	r7, r7, sl, r9
 8013394:	fb00 500a 	mla	r0, r0, sl, r5
 8013398:	b2bf      	uxth	r7, r7
 801339a:	b280      	uxth	r0, r0
 801339c:	f10c 0501 	add.w	r5, ip, #1
 80133a0:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 80133a4:	f107 0901 	add.w	r9, r7, #1
 80133a8:	1c45      	adds	r5, r0, #1
 80133aa:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 80133ae:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 80133b2:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 80133b6:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 80133ba:	ea4f 1959 	mov.w	r9, r9, lsr #5
 80133be:	ea45 0c0c 	orr.w	ip, r5, ip
 80133c2:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 80133c6:	ea4c 0c09 	orr.w	ip, ip, r9
 80133ca:	f824 c00b 	strh.w	ip, [r4, fp]
 80133ce:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 80133d0:	4401      	add	r1, r0
 80133d2:	9814      	ldr	r0, [sp, #80]	@ 0x50
 80133d4:	f108 38ff 	add.w	r8, r8, #4294967295
 80133d8:	4402      	add	r2, r0
 80133da:	e75c      	b.n	8013296 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 80133dc:	b007      	add	sp, #28
 80133de:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080133e2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80133e2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80133e6:	b085      	sub	sp, #20
 80133e8:	4693      	mov	fp, r2
 80133ea:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 80133ec:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 80133ee:	6870      	ldr	r0, [r6, #4]
 80133f0:	9100      	str	r1, [sp, #0]
 80133f2:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 80133f6:	fb00 2404 	mla	r4, r0, r4, r2
 80133fa:	6832      	ldr	r2, [r6, #0]
 80133fc:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8013400:	682a      	ldr	r2, [r5, #0]
 8013402:	9201      	str	r2, [sp, #4]
 8013404:	686a      	ldr	r2, [r5, #4]
 8013406:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	@ 0x44
 801340a:	3204      	adds	r2, #4
 801340c:	9202      	str	r2, [sp, #8]
 801340e:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8013412:	9a00      	ldr	r2, [sp, #0]
 8013414:	2a00      	cmp	r2, #0
 8013416:	dc03      	bgt.n	8013420 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8013418:	f1bb 0f00 	cmp.w	fp, #0
 801341c:	f340 80a0 	ble.w	8013560 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 8013420:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8013422:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8013426:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 801342a:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 801342e:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8013430:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8013434:	2b00      	cmp	r3, #0
 8013436:	dd0c      	ble.n	8013452 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8013438:	1406      	asrs	r6, r0, #16
 801343a:	d405      	bmi.n	8013448 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801343c:	454e      	cmp	r6, r9
 801343e:	da03      	bge.n	8013448 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8013440:	1416      	asrs	r6, r2, #16
 8013442:	d401      	bmi.n	8013448 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8013444:	4546      	cmp	r6, r8
 8013446:	db05      	blt.n	8013454 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8013448:	4470      	add	r0, lr
 801344a:	4462      	add	r2, ip
 801344c:	3b01      	subs	r3, #1
 801344e:	3402      	adds	r4, #2
 8013450:	e7f0      	b.n	8013434 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8013452:	d00f      	beq.n	8013474 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8013454:	1e5e      	subs	r6, r3, #1
 8013456:	fb0e 0706 	mla	r7, lr, r6, r0
 801345a:	143f      	asrs	r7, r7, #16
 801345c:	d541      	bpl.n	80134e2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x100>
 801345e:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 8013462:	4698      	mov	r8, r3
 8013464:	9603      	str	r6, [sp, #12]
 8013466:	f1b8 0f00 	cmp.w	r8, #0
 801346a:	dc59      	bgt.n	8013520 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801346c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8013470:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8013474:	9b00      	ldr	r3, [sp, #0]
 8013476:	2b00      	cmp	r3, #0
 8013478:	dd72      	ble.n	8013560 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 801347a:	ee30 0a04 	vadd.f32	s0, s0, s8
 801347e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8013482:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8013486:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8013488:	ee31 1a05 	vadd.f32	s2, s2, s10
 801348c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8013490:	eeb0 6a62 	vmov.f32	s12, s5
 8013494:	ee61 7a27 	vmul.f32	s15, s2, s15
 8013498:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801349c:	ee77 2a62 	vsub.f32	s5, s14, s5
 80134a0:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 80134a4:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80134a8:	eeb0 6a43 	vmov.f32	s12, s6
 80134ac:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80134b0:	ee12 2a90 	vmov	r2, s5
 80134b4:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80134b8:	fb92 fef3 	sdiv	lr, r2, r3
 80134bc:	ee13 2a10 	vmov	r2, s6
 80134c0:	fb92 fcf3 	sdiv	ip, r2, r3
 80134c4:	9b00      	ldr	r3, [sp, #0]
 80134c6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80134ca:	3b01      	subs	r3, #1
 80134cc:	9300      	str	r3, [sp, #0]
 80134ce:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 80134d2:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80134d4:	eeb0 3a67 	vmov.f32	s6, s15
 80134d8:	bf08      	it	eq
 80134da:	465b      	moveq	r3, fp
 80134dc:	eef0 2a47 	vmov.f32	s5, s14
 80134e0:	e797      	b.n	8013412 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 80134e2:	454f      	cmp	r7, r9
 80134e4:	dabb      	bge.n	801345e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 80134e6:	fb0c 2606 	mla	r6, ip, r6, r2
 80134ea:	1436      	asrs	r6, r6, #16
 80134ec:	d4b7      	bmi.n	801345e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 80134ee:	4546      	cmp	r6, r8
 80134f0:	dab5      	bge.n	801345e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 80134f2:	461e      	mov	r6, r3
 80134f4:	46a0      	mov	r8, r4
 80134f6:	2e00      	cmp	r6, #0
 80134f8:	ddb8      	ble.n	801346c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 80134fa:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 80134fe:	9901      	ldr	r1, [sp, #4]
 8013500:	1417      	asrs	r7, r2, #16
 8013502:	ea4f 4920 	mov.w	r9, r0, asr #16
 8013506:	fb0a 1707 	mla	r7, sl, r7, r1
 801350a:	9902      	ldr	r1, [sp, #8]
 801350c:	f817 7009 	ldrb.w	r7, [r7, r9]
 8013510:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 8013514:	f828 7b02 	strh.w	r7, [r8], #2
 8013518:	4470      	add	r0, lr
 801351a:	4462      	add	r2, ip
 801351c:	3e01      	subs	r6, #1
 801351e:	e7ea      	b.n	80134f6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x114>
 8013520:	ea5f 4920 	movs.w	r9, r0, asr #16
 8013524:	d417      	bmi.n	8013556 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8013526:	68ae      	ldr	r6, [r5, #8]
 8013528:	454e      	cmp	r6, r9
 801352a:	dd14      	ble.n	8013556 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 801352c:	ea5f 4a22 	movs.w	sl, r2, asr #16
 8013530:	d411      	bmi.n	8013556 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8013532:	68ef      	ldr	r7, [r5, #12]
 8013534:	4557      	cmp	r7, sl
 8013536:	dd0e      	ble.n	8013556 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8013538:	9f01      	ldr	r7, [sp, #4]
 801353a:	b236      	sxth	r6, r6
 801353c:	fb0a 7606 	mla	r6, sl, r6, r7
 8013540:	9f02      	ldr	r7, [sp, #8]
 8013542:	f816 6009 	ldrb.w	r6, [r6, r9]
 8013546:	f06f 0101 	mvn.w	r1, #1
 801354a:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 801354e:	fb01 f608 	mul.w	r6, r1, r8
 8013552:	9903      	ldr	r1, [sp, #12]
 8013554:	538f      	strh	r7, [r1, r6]
 8013556:	4470      	add	r0, lr
 8013558:	4462      	add	r2, ip
 801355a:	f108 38ff 	add.w	r8, r8, #4294967295
 801355e:	e782      	b.n	8013466 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8013560:	b005      	add	sp, #20
 8013562:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08013566 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8013566:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801356a:	b087      	sub	sp, #28
 801356c:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 801356e:	9205      	str	r2, [sp, #20]
 8013570:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 8013574:	9203      	str	r2, [sp, #12]
 8013576:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	@ 0x58
 801357a:	9102      	str	r1, [sp, #8]
 801357c:	6861      	ldr	r1, [r4, #4]
 801357e:	f8dd c060 	ldr.w	ip, [sp, #96]	@ 0x60
 8013582:	fb01 2000 	mla	r0, r1, r0, r2
 8013586:	6822      	ldr	r2, [r4, #0]
 8013588:	eb02 0240 	add.w	r2, r2, r0, lsl #1
 801358c:	9200      	str	r2, [sp, #0]
 801358e:	f8dc 2000 	ldr.w	r2, [ip]
 8013592:	9204      	str	r2, [sp, #16]
 8013594:	f8dc 2004 	ldr.w	r2, [ip, #4]
 8013598:	3204      	adds	r2, #4
 801359a:	9201      	str	r2, [sp, #4]
 801359c:	9a03      	ldr	r2, [sp, #12]
 801359e:	43d5      	mvns	r5, r2
 80135a0:	b2ed      	uxtb	r5, r5
 80135a2:	9a02      	ldr	r2, [sp, #8]
 80135a4:	2a00      	cmp	r2, #0
 80135a6:	dc03      	bgt.n	80135b0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 80135a8:	9a05      	ldr	r2, [sp, #20]
 80135aa:	2a00      	cmp	r2, #0
 80135ac:	f340 812c 	ble.w	8013808 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 80135b0:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 80135b2:	f9bc e008 	ldrsh.w	lr, [ip, #8]
 80135b6:	f9bc 700c 	ldrsh.w	r7, [ip, #12]
 80135ba:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 80135be:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 80135c0:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 80135c4:	2b00      	cmp	r3, #0
 80135c6:	dd10      	ble.n	80135ea <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 80135c8:	140c      	asrs	r4, r1, #16
 80135ca:	d405      	bmi.n	80135d8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80135cc:	4574      	cmp	r4, lr
 80135ce:	da03      	bge.n	80135d8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80135d0:	1414      	asrs	r4, r2, #16
 80135d2:	d401      	bmi.n	80135d8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80135d4:	42bc      	cmp	r4, r7
 80135d6:	db09      	blt.n	80135ec <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 80135d8:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 80135da:	9800      	ldr	r0, [sp, #0]
 80135dc:	4421      	add	r1, r4
 80135de:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 80135e0:	3002      	adds	r0, #2
 80135e2:	4422      	add	r2, r4
 80135e4:	3b01      	subs	r3, #1
 80135e6:	9000      	str	r0, [sp, #0]
 80135e8:	e7ec      	b.n	80135c4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 80135ea:	d071      	beq.n	80136d0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16a>
 80135ec:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 80135ee:	1e5c      	subs	r4, r3, #1
 80135f0:	fb06 1604 	mla	r6, r6, r4, r1
 80135f4:	1436      	asrs	r6, r6, #16
 80135f6:	d45d      	bmi.n	80136b4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 80135f8:	4576      	cmp	r6, lr
 80135fa:	da5b      	bge.n	80136b4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 80135fc:	9e14      	ldr	r6, [sp, #80]	@ 0x50
 80135fe:	fb06 2404 	mla	r4, r6, r4, r2
 8013602:	1424      	asrs	r4, r4, #16
 8013604:	d456      	bmi.n	80136b4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8013606:	42bc      	cmp	r4, r7
 8013608:	da54      	bge.n	80136b4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801360a:	f8dd 9000 	ldr.w	r9, [sp]
 801360e:	f8bd a00c 	ldrh.w	sl, [sp, #12]
 8013612:	4698      	mov	r8, r3
 8013614:	f1b8 0f00 	cmp.w	r8, #0
 8013618:	dd54      	ble.n	80136c4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 801361a:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 801361e:	9804      	ldr	r0, [sp, #16]
 8013620:	1414      	asrs	r4, r2, #16
 8013622:	fb07 0404 	mla	r4, r7, r4, r0
 8013626:	140e      	asrs	r6, r1, #16
 8013628:	9801      	ldr	r0, [sp, #4]
 801362a:	f814 e006 	ldrb.w	lr, [r4, r6]
 801362e:	f8b9 4000 	ldrh.w	r4, [r9]
 8013632:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8013636:	eb00 0b0e 	add.w	fp, r0, lr
 801363a:	1227      	asrs	r7, r4, #8
 801363c:	f89b 6002 	ldrb.w	r6, [fp, #2]
 8013640:	f89b b001 	ldrb.w	fp, [fp, #1]
 8013644:	f810 e00e 	ldrb.w	lr, [r0, lr]
 8013648:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 801364a:	fb16 f60a 	smulbb	r6, r6, sl
 801364e:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8013652:	fb07 6705 	mla	r7, r7, r5, r6
 8013656:	10e6      	asrs	r6, r4, #3
 8013658:	00e4      	lsls	r4, r4, #3
 801365a:	b2e4      	uxtb	r4, r4
 801365c:	fb1b fb0a 	smulbb	fp, fp, sl
 8013660:	fb14 f405 	smulbb	r4, r4, r5
 8013664:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8013668:	b2bf      	uxth	r7, r7
 801366a:	fb06 b605 	mla	r6, r6, r5, fp
 801366e:	fb0e 4e0a 	mla	lr, lr, sl, r4
 8013672:	b2b6      	uxth	r6, r6
 8013674:	fa1f fe8e 	uxth.w	lr, lr
 8013678:	1c7c      	adds	r4, r7, #1
 801367a:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 801367e:	f106 0b01 	add.w	fp, r6, #1
 8013682:	f10e 0401 	add.w	r4, lr, #1
 8013686:	eb04 241e 	add.w	r4, r4, lr, lsr #8
 801368a:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 801368e:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 8013692:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 8013696:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 801369a:	4327      	orrs	r7, r4
 801369c:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
 80136a0:	4401      	add	r1, r0
 80136a2:	9814      	ldr	r0, [sp, #80]	@ 0x50
 80136a4:	ea47 070b 	orr.w	r7, r7, fp
 80136a8:	f829 7b02 	strh.w	r7, [r9], #2
 80136ac:	4402      	add	r2, r0
 80136ae:	f108 38ff 	add.w	r8, r8, #4294967295
 80136b2:	e7af      	b.n	8013614 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 80136b4:	f8bd 900c 	ldrh.w	r9, [sp, #12]
 80136b8:	f04f 0e00 	mov.w	lr, #0
 80136bc:	eb03 040e 	add.w	r4, r3, lr
 80136c0:	2c00      	cmp	r4, #0
 80136c2:	dc43      	bgt.n	801374c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 80136c4:	9a00      	ldr	r2, [sp, #0]
 80136c6:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80136ca:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80136ce:	9300      	str	r3, [sp, #0]
 80136d0:	9b02      	ldr	r3, [sp, #8]
 80136d2:	2b00      	cmp	r3, #0
 80136d4:	f340 8098 	ble.w	8013808 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 80136d8:	ee30 0a04 	vadd.f32	s0, s0, s8
 80136dc:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 80136e0:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80136e4:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80136e6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80136ea:	ee31 1a05 	vadd.f32	s2, s2, s10
 80136ee:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80136f2:	eef0 6a62 	vmov.f32	s13, s5
 80136f6:	ee61 7a27 	vmul.f32	s15, s2, s15
 80136fa:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80136fe:	ee77 2a62 	vsub.f32	s5, s14, s5
 8013702:	edcd 6a11 	vstr	s13, [sp, #68]	@ 0x44
 8013706:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801370a:	eef0 6a43 	vmov.f32	s13, s6
 801370e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8013712:	ee12 2a90 	vmov	r2, s5
 8013716:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801371a:	fb92 f3f3 	sdiv	r3, r2, r3
 801371e:	ee13 2a10 	vmov	r2, s6
 8013722:	9313      	str	r3, [sp, #76]	@ 0x4c
 8013724:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8013726:	fb92 f3f3 	sdiv	r3, r2, r3
 801372a:	9314      	str	r3, [sp, #80]	@ 0x50
 801372c:	9b02      	ldr	r3, [sp, #8]
 801372e:	9a05      	ldr	r2, [sp, #20]
 8013730:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8013734:	3b01      	subs	r3, #1
 8013736:	9302      	str	r3, [sp, #8]
 8013738:	edcd 6a12 	vstr	s13, [sp, #72]	@ 0x48
 801373c:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801373e:	eeb0 3a67 	vmov.f32	s6, s15
 8013742:	bf08      	it	eq
 8013744:	4613      	moveq	r3, r2
 8013746:	eef0 2a47 	vmov.f32	s5, s14
 801374a:	e72a      	b.n	80135a2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801374c:	140f      	asrs	r7, r1, #16
 801374e:	d454      	bmi.n	80137fa <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8013750:	f8dc 6008 	ldr.w	r6, [ip, #8]
 8013754:	42be      	cmp	r6, r7
 8013756:	dd50      	ble.n	80137fa <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8013758:	ea5f 4822 	movs.w	r8, r2, asr #16
 801375c:	d44d      	bmi.n	80137fa <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801375e:	f8dc 400c 	ldr.w	r4, [ip, #12]
 8013762:	4544      	cmp	r4, r8
 8013764:	dd49      	ble.n	80137fa <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8013766:	9c04      	ldr	r4, [sp, #16]
 8013768:	b236      	sxth	r6, r6
 801376a:	fb08 4606 	mla	r6, r8, r6, r4
 801376e:	f06f 0001 	mvn.w	r0, #1
 8013772:	f816 8007 	ldrb.w	r8, [r6, r7]
 8013776:	9c01      	ldr	r4, [sp, #4]
 8013778:	fb00 fa0e 	mul.w	sl, r0, lr
 801377c:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 8013780:	9800      	ldr	r0, [sp, #0]
 8013782:	eb04 0b08 	add.w	fp, r4, r8
 8013786:	f830 400a 	ldrh.w	r4, [r0, sl]
 801378a:	f89b 6002 	ldrb.w	r6, [fp, #2]
 801378e:	9801      	ldr	r0, [sp, #4]
 8013790:	f89b b001 	ldrb.w	fp, [fp, #1]
 8013794:	f810 8008 	ldrb.w	r8, [r0, r8]
 8013798:	9800      	ldr	r0, [sp, #0]
 801379a:	1227      	asrs	r7, r4, #8
 801379c:	fb16 f609 	smulbb	r6, r6, r9
 80137a0:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 80137a4:	fb07 6705 	mla	r7, r7, r5, r6
 80137a8:	10e6      	asrs	r6, r4, #3
 80137aa:	00e4      	lsls	r4, r4, #3
 80137ac:	b2e4      	uxtb	r4, r4
 80137ae:	fb1b fb09 	smulbb	fp, fp, r9
 80137b2:	fb14 f405 	smulbb	r4, r4, r5
 80137b6:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 80137ba:	b2bf      	uxth	r7, r7
 80137bc:	fb06 b605 	mla	r6, r6, r5, fp
 80137c0:	fb08 4809 	mla	r8, r8, r9, r4
 80137c4:	b2b6      	uxth	r6, r6
 80137c6:	fa1f f888 	uxth.w	r8, r8
 80137ca:	1c7c      	adds	r4, r7, #1
 80137cc:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 80137d0:	f106 0b01 	add.w	fp, r6, #1
 80137d4:	f108 0401 	add.w	r4, r8, #1
 80137d8:	eb04 2418 	add.w	r4, r4, r8, lsr #8
 80137dc:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 80137e0:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 80137e4:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 80137e8:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 80137ec:	4327      	orrs	r7, r4
 80137ee:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
 80137f2:	ea47 070b 	orr.w	r7, r7, fp
 80137f6:	f820 700a 	strh.w	r7, [r0, sl]
 80137fa:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 80137fc:	4401      	add	r1, r0
 80137fe:	9814      	ldr	r0, [sp, #80]	@ 0x50
 8013800:	f10e 3eff 	add.w	lr, lr, #4294967295
 8013804:	4402      	add	r2, r0
 8013806:	e759      	b.n	80136bc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 8013808:	b007      	add	sp, #28
 801380a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

08013810 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8013810:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013814:	b085      	sub	sp, #20
 8013816:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 801381a:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 801381c:	9203      	str	r2, [sp, #12]
 801381e:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 8013822:	6870      	ldr	r0, [r6, #4]
 8013824:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 8013826:	f8dd c044 	ldr.w	ip, [sp, #68]	@ 0x44
 801382a:	686f      	ldr	r7, [r5, #4]
 801382c:	9101      	str	r1, [sp, #4]
 801382e:	fb00 2404 	mla	r4, r0, r4, r2
 8013832:	6832      	ldr	r2, [r6, #0]
 8013834:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8013838:	682a      	ldr	r2, [r5, #0]
 801383a:	9202      	str	r2, [sp, #8]
 801383c:	3704      	adds	r7, #4
 801383e:	9a01      	ldr	r2, [sp, #4]
 8013840:	2a00      	cmp	r2, #0
 8013842:	dc03      	bgt.n	801384c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8013844:	9a03      	ldr	r2, [sp, #12]
 8013846:	2a00      	cmp	r2, #0
 8013848:	f340 80cc 	ble.w	80139e4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801384c:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801384e:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8013852:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 8013856:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 801385a:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 801385c:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8013860:	2b00      	cmp	r3, #0
 8013862:	dd0d      	ble.n	8013880 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8013864:	1406      	asrs	r6, r0, #16
 8013866:	d405      	bmi.n	8013874 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8013868:	454e      	cmp	r6, r9
 801386a:	da03      	bge.n	8013874 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 801386c:	1416      	asrs	r6, r2, #16
 801386e:	d401      	bmi.n	8013874 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8013870:	4546      	cmp	r6, r8
 8013872:	db06      	blt.n	8013882 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8013874:	9e12      	ldr	r6, [sp, #72]	@ 0x48
 8013876:	4460      	add	r0, ip
 8013878:	4432      	add	r2, r6
 801387a:	3b01      	subs	r3, #1
 801387c:	3402      	adds	r4, #2
 801387e:	e7ef      	b.n	8013860 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
 8013880:	d00f      	beq.n	80138a2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8013882:	1e5e      	subs	r6, r3, #1
 8013884:	fb0c 0e06 	mla	lr, ip, r6, r0
 8013888:	ea5f 4e2e 	movs.w	lr, lr, asr #16
 801388c:	d543      	bpl.n	8013916 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 801388e:	4698      	mov	r8, r3
 8013890:	eb04 0a43 	add.w	sl, r4, r3, lsl #1
 8013894:	f1b8 0f00 	cmp.w	r8, #0
 8013898:	dc71      	bgt.n	801397e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 801389a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801389e:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80138a2:	9b01      	ldr	r3, [sp, #4]
 80138a4:	2b00      	cmp	r3, #0
 80138a6:	f340 809d 	ble.w	80139e4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 80138aa:	ee30 0a04 	vadd.f32	s0, s0, s8
 80138ae:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80138b2:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80138b6:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80138b8:	ee31 1a05 	vadd.f32	s2, s2, s10
 80138bc:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80138c0:	eeb0 6a62 	vmov.f32	s12, s5
 80138c4:	ee61 7a27 	vmul.f32	s15, s2, s15
 80138c8:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80138cc:	ee77 2a62 	vsub.f32	s5, s14, s5
 80138d0:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 80138d4:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80138d8:	eeb0 6a43 	vmov.f32	s12, s6
 80138dc:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80138e0:	ee12 2a90 	vmov	r2, s5
 80138e4:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80138e8:	fb92 fcf3 	sdiv	ip, r2, r3
 80138ec:	ee13 2a10 	vmov	r2, s6
 80138f0:	fb92 f3f3 	sdiv	r3, r2, r3
 80138f4:	9312      	str	r3, [sp, #72]	@ 0x48
 80138f6:	9b01      	ldr	r3, [sp, #4]
 80138f8:	9a03      	ldr	r2, [sp, #12]
 80138fa:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80138fe:	3b01      	subs	r3, #1
 8013900:	9301      	str	r3, [sp, #4]
 8013902:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 8013906:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8013908:	eeb0 3a67 	vmov.f32	s6, s15
 801390c:	bf08      	it	eq
 801390e:	4613      	moveq	r3, r2
 8013910:	eef0 2a47 	vmov.f32	s5, s14
 8013914:	e793      	b.n	801383e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 8013916:	45ce      	cmp	lr, r9
 8013918:	dab9      	bge.n	801388e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801391a:	9912      	ldr	r1, [sp, #72]	@ 0x48
 801391c:	fb01 2606 	mla	r6, r1, r6, r2
 8013920:	1436      	asrs	r6, r6, #16
 8013922:	d4b4      	bmi.n	801388e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8013924:	4546      	cmp	r6, r8
 8013926:	dab2      	bge.n	801388e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8013928:	4698      	mov	r8, r3
 801392a:	46a2      	mov	sl, r4
 801392c:	f1b8 0f00 	cmp.w	r8, #0
 8013930:	ddb3      	ble.n	801389a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8013932:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8013936:	9902      	ldr	r1, [sp, #8]
 8013938:	1416      	asrs	r6, r2, #16
 801393a:	fb09 1606 	mla	r6, r9, r6, r1
 801393e:	ea4f 4e20 	mov.w	lr, r0, asr #16
 8013942:	492a      	ldr	r1, [pc, #168]	@ (80139ec <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>)
 8013944:	f816 e00e 	ldrb.w	lr, [r6, lr]
 8013948:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801394c:	eb07 0b0e 	add.w	fp, r7, lr
 8013950:	4460      	add	r0, ip
 8013952:	f89b 6001 	ldrb.w	r6, [fp, #1]
 8013956:	f89b 9002 	ldrb.w	r9, [fp, #2]
 801395a:	00f6      	lsls	r6, r6, #3
 801395c:	ea01 2909 	and.w	r9, r1, r9, lsl #8
 8013960:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 8013964:	ea49 0606 	orr.w	r6, r9, r6
 8013968:	f817 900e 	ldrb.w	r9, [r7, lr]
 801396c:	9912      	ldr	r1, [sp, #72]	@ 0x48
 801396e:	ea46 06d9 	orr.w	r6, r6, r9, lsr #3
 8013972:	f82a 6b02 	strh.w	r6, [sl], #2
 8013976:	440a      	add	r2, r1
 8013978:	f108 38ff 	add.w	r8, r8, #4294967295
 801397c:	e7d6      	b.n	801392c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801397e:	ea5f 4920 	movs.w	r9, r0, asr #16
 8013982:	d429      	bmi.n	80139d8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8013984:	68ae      	ldr	r6, [r5, #8]
 8013986:	454e      	cmp	r6, r9
 8013988:	dd26      	ble.n	80139d8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801398a:	ea5f 4b22 	movs.w	fp, r2, asr #16
 801398e:	d423      	bmi.n	80139d8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8013990:	68e9      	ldr	r1, [r5, #12]
 8013992:	4559      	cmp	r1, fp
 8013994:	dd20      	ble.n	80139d8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8013996:	9902      	ldr	r1, [sp, #8]
 8013998:	fa0f fe86 	sxth.w	lr, r6
 801399c:	fb0b 1e0e 	mla	lr, fp, lr, r1
 80139a0:	f06f 0101 	mvn.w	r1, #1
 80139a4:	f81e e009 	ldrb.w	lr, [lr, r9]
 80139a8:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 80139ac:	eb07 060e 	add.w	r6, r7, lr
 80139b0:	fb01 f908 	mul.w	r9, r1, r8
 80139b4:	f896 b002 	ldrb.w	fp, [r6, #2]
 80139b8:	7876      	ldrb	r6, [r6, #1]
 80139ba:	f2a1 71fe 	subw	r1, r1, #2046	@ 0x7fe
 80139be:	00f6      	lsls	r6, r6, #3
 80139c0:	ea01 2b0b 	and.w	fp, r1, fp, lsl #8
 80139c4:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 80139c8:	ea4b 0606 	orr.w	r6, fp, r6
 80139cc:	f817 b00e 	ldrb.w	fp, [r7, lr]
 80139d0:	ea46 06db 	orr.w	r6, r6, fp, lsr #3
 80139d4:	f82a 6009 	strh.w	r6, [sl, r9]
 80139d8:	9912      	ldr	r1, [sp, #72]	@ 0x48
 80139da:	4460      	add	r0, ip
 80139dc:	440a      	add	r2, r1
 80139de:	f108 38ff 	add.w	r8, r8, #4294967295
 80139e2:	e757      	b.n	8013894 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 80139e4:	b005      	add	sp, #20
 80139e6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80139ea:	bf00      	nop
 80139ec:	fffff800 	.word	0xfffff800

080139f0 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80139f0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80139f4:	b087      	sub	sp, #28
 80139f6:	468b      	mov	fp, r1
 80139f8:	9815      	ldr	r0, [sp, #84]	@ 0x54
 80139fa:	9204      	str	r2, [sp, #16]
 80139fc:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 8013a00:	9205      	str	r2, [sp, #20]
 8013a02:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
 8013a06:	6841      	ldr	r1, [r0, #4]
 8013a08:	f8dd c060 	ldr.w	ip, [sp, #96]	@ 0x60
 8013a0c:	fb01 2404 	mla	r4, r1, r4, r2
 8013a10:	6802      	ldr	r2, [r0, #0]
 8013a12:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8013a16:	f8dc 2000 	ldr.w	r2, [ip]
 8013a1a:	9201      	str	r2, [sp, #4]
 8013a1c:	f8dc 2004 	ldr.w	r2, [ip, #4]
 8013a20:	3204      	adds	r2, #4
 8013a22:	9202      	str	r2, [sp, #8]
 8013a24:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8013a28:	f1bb 0f00 	cmp.w	fp, #0
 8013a2c:	dc03      	bgt.n	8013a36 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 8013a2e:	9a04      	ldr	r2, [sp, #16]
 8013a30:	2a00      	cmp	r2, #0
 8013a32:	f340 8138 	ble.w	8013ca6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 8013a36:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8013a38:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 8013a3c:	f9bc 600c 	ldrsh.w	r6, [ip, #12]
 8013a40:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 8013a44:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8013a46:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 8013a4a:	2b00      	cmp	r3, #0
 8013a4c:	dd0e      	ble.n	8013a6c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8013a4e:	1402      	asrs	r2, r0, #16
 8013a50:	d405      	bmi.n	8013a5e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8013a52:	42ba      	cmp	r2, r7
 8013a54:	da03      	bge.n	8013a5e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8013a56:	140a      	asrs	r2, r1, #16
 8013a58:	d401      	bmi.n	8013a5e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8013a5a:	42b2      	cmp	r2, r6
 8013a5c:	db07      	blt.n	8013a6e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8013a5e:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8013a60:	4410      	add	r0, r2
 8013a62:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8013a64:	3b01      	subs	r3, #1
 8013a66:	4411      	add	r1, r2
 8013a68:	3402      	adds	r4, #2
 8013a6a:	e7ee      	b.n	8013a4a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 8013a6c:	d019      	beq.n	8013aa2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 8013a6e:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 8013a70:	1e5a      	subs	r2, r3, #1
 8013a72:	fb05 0502 	mla	r5, r5, r2, r0
 8013a76:	142d      	asrs	r5, r5, #16
 8013a78:	d409      	bmi.n	8013a8e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8013a7a:	42bd      	cmp	r5, r7
 8013a7c:	da07      	bge.n	8013a8e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8013a7e:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 8013a80:	fb05 1202 	mla	r2, r5, r2, r1
 8013a84:	1412      	asrs	r2, r2, #16
 8013a86:	d402      	bmi.n	8013a8e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8013a88:	42b2      	cmp	r2, r6
 8013a8a:	f2c0 80ac 	blt.w	8013be6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
 8013a8e:	f04f 0e00 	mov.w	lr, #0
 8013a92:	eb03 020e 	add.w	r2, r3, lr
 8013a96:	2a00      	cmp	r2, #0
 8013a98:	dc3e      	bgt.n	8013b18 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 8013a9a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8013a9e:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8013aa2:	f1bb 0f00 	cmp.w	fp, #0
 8013aa6:	f340 80fe 	ble.w	8013ca6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 8013aaa:	ee30 0a04 	vadd.f32	s0, s0, s8
 8013aae:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8013ab2:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8013ab6:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8013ab8:	f1bb 0b01 	subs.w	fp, fp, #1
 8013abc:	ee31 1a05 	vadd.f32	s2, s2, s10
 8013ac0:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8013ac4:	eeb0 6a62 	vmov.f32	s12, s5
 8013ac8:	ee61 7a27 	vmul.f32	s15, s2, s15
 8013acc:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8013ad0:	ee77 2a62 	vsub.f32	s5, s14, s5
 8013ad4:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
 8013ad8:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8013adc:	eeb0 6a43 	vmov.f32	s12, s6
 8013ae0:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8013ae4:	ee12 2a90 	vmov	r2, s5
 8013ae8:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8013aec:	fb92 f3f3 	sdiv	r3, r2, r3
 8013af0:	ee13 2a10 	vmov	r2, s6
 8013af4:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8013af8:	9313      	str	r3, [sp, #76]	@ 0x4c
 8013afa:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8013afc:	fb92 f3f3 	sdiv	r3, r2, r3
 8013b00:	9a04      	ldr	r2, [sp, #16]
 8013b02:	9314      	str	r3, [sp, #80]	@ 0x50
 8013b04:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
 8013b08:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8013b0a:	eeb0 3a67 	vmov.f32	s6, s15
 8013b0e:	bf08      	it	eq
 8013b10:	4613      	moveq	r3, r2
 8013b12:	eef0 2a47 	vmov.f32	s5, s14
 8013b16:	e787      	b.n	8013a28 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8013b18:	1406      	asrs	r6, r0, #16
 8013b1a:	d45d      	bmi.n	8013bd8 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8013b1c:	f8dc 5008 	ldr.w	r5, [ip, #8]
 8013b20:	42b5      	cmp	r5, r6
 8013b22:	dd59      	ble.n	8013bd8 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8013b24:	140f      	asrs	r7, r1, #16
 8013b26:	d457      	bmi.n	8013bd8 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8013b28:	f8dc 200c 	ldr.w	r2, [ip, #12]
 8013b2c:	42ba      	cmp	r2, r7
 8013b2e:	dd53      	ble.n	8013bd8 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8013b30:	9a01      	ldr	r2, [sp, #4]
 8013b32:	b22d      	sxth	r5, r5
 8013b34:	fb07 2505 	mla	r5, r7, r5, r2
 8013b38:	5daa      	ldrb	r2, [r5, r6]
 8013b3a:	9d02      	ldr	r5, [sp, #8]
 8013b3c:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 8013b40:	0e2e      	lsrs	r6, r5, #24
 8013b42:	d049      	beq.n	8013bd8 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8013b44:	f06f 0201 	mvn.w	r2, #1
 8013b48:	fb02 f20e 	mul.w	r2, r2, lr
 8013b4c:	9203      	str	r2, [sp, #12]
 8013b4e:	f834 8002 	ldrh.w	r8, [r4, r2]
 8013b52:	9a05      	ldr	r2, [sp, #20]
 8013b54:	4356      	muls	r6, r2
 8013b56:	1c72      	adds	r2, r6, #1
 8013b58:	eb02 2226 	add.w	r2, r2, r6, asr #8
 8013b5c:	1212      	asrs	r2, r2, #8
 8013b5e:	fa1f f982 	uxth.w	r9, r2
 8013b62:	ea4f 2728 	mov.w	r7, r8, asr #8
 8013b66:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8013b6a:	43d2      	mvns	r2, r2
 8013b6c:	b2d2      	uxtb	r2, r2
 8013b6e:	fb16 f609 	smulbb	r6, r6, r9
 8013b72:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8013b76:	fb07 6702 	mla	r7, r7, r2, r6
 8013b7a:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8013b7e:	ea4f 06e8 	mov.w	r6, r8, asr #3
 8013b82:	b2ed      	uxtb	r5, r5
 8013b84:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8013b88:	fa5f f888 	uxtb.w	r8, r8
 8013b8c:	fb15 f509 	smulbb	r5, r5, r9
 8013b90:	fb08 5502 	mla	r5, r8, r2, r5
 8013b94:	b2bf      	uxth	r7, r7
 8013b96:	fb1a fa09 	smulbb	sl, sl, r9
 8013b9a:	b2ad      	uxth	r5, r5
 8013b9c:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8013ba0:	fb06 a602 	mla	r6, r6, r2, sl
 8013ba4:	1c7a      	adds	r2, r7, #1
 8013ba6:	f105 0a01 	add.w	sl, r5, #1
 8013baa:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8013bae:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8013bb2:	b2b6      	uxth	r6, r6
 8013bb4:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8013bb8:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 8013bbc:	ea4a 0707 	orr.w	r7, sl, r7
 8013bc0:	f106 0a01 	add.w	sl, r6, #1
 8013bc4:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8013bc8:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8013bcc:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8013bd0:	9a03      	ldr	r2, [sp, #12]
 8013bd2:	ea47 070a 	orr.w	r7, r7, sl
 8013bd6:	52a7      	strh	r7, [r4, r2]
 8013bd8:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8013bda:	4410      	add	r0, r2
 8013bdc:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8013bde:	f10e 3eff 	add.w	lr, lr, #4294967295
 8013be2:	4411      	add	r1, r2
 8013be4:	e755      	b.n	8013a92 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8013be6:	f04f 0800 	mov.w	r8, #0
 8013bea:	eba3 0208 	sub.w	r2, r3, r8
 8013bee:	2a00      	cmp	r2, #0
 8013bf0:	f77f af53 	ble.w	8013a9a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 8013bf4:	f9bc 6008 	ldrsh.w	r6, [ip, #8]
 8013bf8:	9f01      	ldr	r7, [sp, #4]
 8013bfa:	140a      	asrs	r2, r1, #16
 8013bfc:	1405      	asrs	r5, r0, #16
 8013bfe:	fb06 7202 	mla	r2, r6, r2, r7
 8013c02:	5d52      	ldrb	r2, [r2, r5]
 8013c04:	9d02      	ldr	r5, [sp, #8]
 8013c06:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 8013c0a:	0e2e      	lsrs	r6, r5, #24
 8013c0c:	d044      	beq.n	8013c98 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8013c0e:	9a05      	ldr	r2, [sp, #20]
 8013c10:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 8013c14:	4356      	muls	r6, r2
 8013c16:	1c72      	adds	r2, r6, #1
 8013c18:	eb02 2226 	add.w	r2, r2, r6, asr #8
 8013c1c:	1212      	asrs	r2, r2, #8
 8013c1e:	fa1f f982 	uxth.w	r9, r2
 8013c22:	ea4f 272e 	mov.w	r7, lr, asr #8
 8013c26:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8013c2a:	43d2      	mvns	r2, r2
 8013c2c:	b2d2      	uxtb	r2, r2
 8013c2e:	fb16 f609 	smulbb	r6, r6, r9
 8013c32:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8013c36:	fb07 6702 	mla	r7, r7, r2, r6
 8013c3a:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8013c3e:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8013c42:	b2ed      	uxtb	r5, r5
 8013c44:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8013c48:	fa5f fe8e 	uxtb.w	lr, lr
 8013c4c:	fb15 f509 	smulbb	r5, r5, r9
 8013c50:	fb0e 5502 	mla	r5, lr, r2, r5
 8013c54:	b2bf      	uxth	r7, r7
 8013c56:	fb1a fa09 	smulbb	sl, sl, r9
 8013c5a:	b2ad      	uxth	r5, r5
 8013c5c:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8013c60:	fb06 a602 	mla	r6, r6, r2, sl
 8013c64:	1c7a      	adds	r2, r7, #1
 8013c66:	f105 0a01 	add.w	sl, r5, #1
 8013c6a:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8013c6e:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8013c72:	b2b6      	uxth	r6, r6
 8013c74:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8013c78:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 8013c7c:	ea4a 0707 	orr.w	r7, sl, r7
 8013c80:	f106 0a01 	add.w	sl, r6, #1
 8013c84:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8013c88:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8013c8c:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8013c90:	ea47 070a 	orr.w	r7, r7, sl
 8013c94:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 8013c98:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8013c9a:	4410      	add	r0, r2
 8013c9c:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8013c9e:	f108 0801 	add.w	r8, r8, #1
 8013ca2:	4411      	add	r1, r2
 8013ca4:	e7a1      	b.n	8013bea <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 8013ca6:	b007      	add	sp, #28
 8013ca8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08013cac <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8013cac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013cb0:	b085      	sub	sp, #20
 8013cb2:	468b      	mov	fp, r1
 8013cb4:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8013cb6:	9203      	str	r2, [sp, #12]
 8013cb8:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 8013cbc:	6841      	ldr	r1, [r0, #4]
 8013cbe:	f8dd e058 	ldr.w	lr, [sp, #88]	@ 0x58
 8013cc2:	fb01 2404 	mla	r4, r1, r4, r2
 8013cc6:	6802      	ldr	r2, [r0, #0]
 8013cc8:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8013ccc:	f8de 2000 	ldr.w	r2, [lr]
 8013cd0:	9200      	str	r2, [sp, #0]
 8013cd2:	f8de 2004 	ldr.w	r2, [lr, #4]
 8013cd6:	3204      	adds	r2, #4
 8013cd8:	9201      	str	r2, [sp, #4]
 8013cda:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8013cde:	f1bb 0f00 	cmp.w	fp, #0
 8013ce2:	dc03      	bgt.n	8013cec <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 8013ce4:	9a03      	ldr	r2, [sp, #12]
 8013ce6:	2a00      	cmp	r2, #0
 8013ce8:	f340 8153 	ble.w	8013f92 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 8013cec:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8013cee:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8013cf2:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 8013cf6:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 8013cfa:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8013cfc:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8013d00:	2b00      	cmp	r3, #0
 8013d02:	dd0e      	ble.n	8013d22 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8013d04:	1408      	asrs	r0, r1, #16
 8013d06:	d405      	bmi.n	8013d14 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8013d08:	42b8      	cmp	r0, r7
 8013d0a:	da03      	bge.n	8013d14 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8013d0c:	1410      	asrs	r0, r2, #16
 8013d0e:	d401      	bmi.n	8013d14 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8013d10:	42b0      	cmp	r0, r6
 8013d12:	db07      	blt.n	8013d24 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8013d14:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8013d16:	4401      	add	r1, r0
 8013d18:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8013d1a:	3b01      	subs	r3, #1
 8013d1c:	4402      	add	r2, r0
 8013d1e:	3402      	adds	r4, #2
 8013d20:	e7ee      	b.n	8013d00 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 8013d22:	d017      	beq.n	8013d54 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8013d24:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 8013d26:	1e58      	subs	r0, r3, #1
 8013d28:	fb05 1500 	mla	r5, r5, r0, r1
 8013d2c:	142d      	asrs	r5, r5, #16
 8013d2e:	d409      	bmi.n	8013d44 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8013d30:	42bd      	cmp	r5, r7
 8013d32:	da07      	bge.n	8013d44 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8013d34:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 8013d36:	fb05 2000 	mla	r0, r5, r0, r2
 8013d3a:	1400      	asrs	r0, r0, #16
 8013d3c:	d402      	bmi.n	8013d44 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8013d3e:	42b0      	cmp	r0, r6
 8013d40:	f2c0 80bc 	blt.w	8013ebc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x210>
 8013d44:	2600      	movs	r6, #0
 8013d46:	1998      	adds	r0, r3, r6
 8013d48:	2800      	cmp	r0, #0
 8013d4a:	dc3e      	bgt.n	8013dca <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11e>
 8013d4c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8013d50:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8013d54:	f1bb 0f00 	cmp.w	fp, #0
 8013d58:	f340 811b 	ble.w	8013f92 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 8013d5c:	ee30 0a04 	vadd.f32	s0, s0, s8
 8013d60:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8013d64:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8013d68:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8013d6a:	f1bb 0b01 	subs.w	fp, fp, #1
 8013d6e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8013d72:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8013d76:	eeb0 6a62 	vmov.f32	s12, s5
 8013d7a:	ee61 7a27 	vmul.f32	s15, s2, s15
 8013d7e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8013d82:	ee77 2a62 	vsub.f32	s5, s14, s5
 8013d86:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 8013d8a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8013d8e:	eeb0 6a43 	vmov.f32	s12, s6
 8013d92:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8013d96:	ee12 2a90 	vmov	r2, s5
 8013d9a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8013d9e:	fb92 f3f3 	sdiv	r3, r2, r3
 8013da2:	ee13 2a10 	vmov	r2, s6
 8013da6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8013daa:	9311      	str	r3, [sp, #68]	@ 0x44
 8013dac:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8013dae:	fb92 f3f3 	sdiv	r3, r2, r3
 8013db2:	9a03      	ldr	r2, [sp, #12]
 8013db4:	9312      	str	r3, [sp, #72]	@ 0x48
 8013db6:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 8013dba:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8013dbc:	eeb0 3a67 	vmov.f32	s6, s15
 8013dc0:	bf08      	it	eq
 8013dc2:	4613      	moveq	r3, r2
 8013dc4:	eef0 2a47 	vmov.f32	s5, s14
 8013dc8:	e789      	b.n	8013cde <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 8013dca:	140f      	asrs	r7, r1, #16
 8013dcc:	d426      	bmi.n	8013e1c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8013dce:	f8de 5008 	ldr.w	r5, [lr, #8]
 8013dd2:	42bd      	cmp	r5, r7
 8013dd4:	dd22      	ble.n	8013e1c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8013dd6:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8013dda:	d41f      	bmi.n	8013e1c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8013ddc:	f8de 000c 	ldr.w	r0, [lr, #12]
 8013de0:	4560      	cmp	r0, ip
 8013de2:	dd1b      	ble.n	8013e1c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8013de4:	9800      	ldr	r0, [sp, #0]
 8013de6:	b22d      	sxth	r5, r5
 8013de8:	fb0c 0505 	mla	r5, ip, r5, r0
 8013dec:	5de8      	ldrb	r0, [r5, r7]
 8013dee:	9d01      	ldr	r5, [sp, #4]
 8013df0:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
 8013df4:	0e07      	lsrs	r7, r0, #24
 8013df6:	2fff      	cmp	r7, #255	@ 0xff
 8013df8:	d116      	bne.n	8013e28 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8013dfa:	f06f 0501 	mvn.w	r5, #1
 8013dfe:	fb05 f706 	mul.w	r7, r5, r6
 8013e02:	f2a5 75fe 	subw	r5, r5, #2046	@ 0x7fe
 8013e06:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 8013e0a:	0945      	lsrs	r5, r0, #5
 8013e0c:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8013e10:	ea4c 0505 	orr.w	r5, ip, r5
 8013e14:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 8013e18:	4305      	orrs	r5, r0
 8013e1a:	53e5      	strh	r5, [r4, r7]
 8013e1c:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8013e1e:	4401      	add	r1, r0
 8013e20:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8013e22:	3e01      	subs	r6, #1
 8013e24:	4402      	add	r2, r0
 8013e26:	e78e      	b.n	8013d46 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8013e28:	b2fd      	uxtb	r5, r7
 8013e2a:	2f00      	cmp	r7, #0
 8013e2c:	d0f6      	beq.n	8013e1c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8013e2e:	f06f 0701 	mvn.w	r7, #1
 8013e32:	4377      	muls	r7, r6
 8013e34:	fa1f f985 	uxth.w	r9, r5
 8013e38:	f834 8007 	ldrh.w	r8, [r4, r7]
 8013e3c:	9702      	str	r7, [sp, #8]
 8013e3e:	ea4f 2c28 	mov.w	ip, r8, asr #8
 8013e42:	f3c0 4707 	ubfx	r7, r0, #16, #8
 8013e46:	43ed      	mvns	r5, r5
 8013e48:	b2ed      	uxtb	r5, r5
 8013e4a:	fb17 f709 	smulbb	r7, r7, r9
 8013e4e:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8013e52:	fb0c 7c05 	mla	ip, ip, r5, r7
 8013e56:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 8013e5a:	ea4f 07e8 	mov.w	r7, r8, asr #3
 8013e5e:	b2c0      	uxtb	r0, r0
 8013e60:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8013e64:	fa5f f888 	uxtb.w	r8, r8
 8013e68:	fb10 f009 	smulbb	r0, r0, r9
 8013e6c:	fb08 0005 	mla	r0, r8, r5, r0
 8013e70:	b280      	uxth	r0, r0
 8013e72:	fa1f fc8c 	uxth.w	ip, ip
 8013e76:	fb1a fa09 	smulbb	sl, sl, r9
 8013e7a:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8013e7e:	fb07 a705 	mla	r7, r7, r5, sl
 8013e82:	f100 0a01 	add.w	sl, r0, #1
 8013e86:	f10c 0501 	add.w	r5, ip, #1
 8013e8a:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 8013e8e:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8013e92:	b2bf      	uxth	r7, r7
 8013e94:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8013e98:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8013e9c:	ea4a 0c0c 	orr.w	ip, sl, ip
 8013ea0:	f107 0a01 	add.w	sl, r7, #1
 8013ea4:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8013ea8:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8013eac:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8013eb0:	9802      	ldr	r0, [sp, #8]
 8013eb2:	ea4c 0c0a 	orr.w	ip, ip, sl
 8013eb6:	f824 c000 	strh.w	ip, [r4, r0]
 8013eba:	e7af      	b.n	8013e1c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8013ebc:	f04f 0800 	mov.w	r8, #0
 8013ec0:	eba3 0008 	sub.w	r0, r3, r8
 8013ec4:	2800      	cmp	r0, #0
 8013ec6:	f77f af41 	ble.w	8013d4c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8013eca:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 8013ece:	9f00      	ldr	r7, [sp, #0]
 8013ed0:	1410      	asrs	r0, r2, #16
 8013ed2:	140d      	asrs	r5, r1, #16
 8013ed4:	fb06 7000 	mla	r0, r6, r0, r7
 8013ed8:	5d40      	ldrb	r0, [r0, r5]
 8013eda:	9d01      	ldr	r5, [sp, #4]
 8013edc:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 8013ee0:	0e2e      	lsrs	r6, r5, #24
 8013ee2:	2eff      	cmp	r6, #255	@ 0xff
 8013ee4:	d112      	bne.n	8013f0c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x260>
 8013ee6:	482c      	ldr	r0, [pc, #176]	@ (8013f98 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ec>)
 8013ee8:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 8013eec:	0968      	lsrs	r0, r5, #5
 8013eee:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8013ef2:	4330      	orrs	r0, r6
 8013ef4:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8013ef8:	4328      	orrs	r0, r5
 8013efa:	f824 0018 	strh.w	r0, [r4, r8, lsl #1]
 8013efe:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8013f00:	4401      	add	r1, r0
 8013f02:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8013f04:	f108 0801 	add.w	r8, r8, #1
 8013f08:	4402      	add	r2, r0
 8013f0a:	e7d9      	b.n	8013ec0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8013f0c:	b2f0      	uxtb	r0, r6
 8013f0e:	2e00      	cmp	r6, #0
 8013f10:	d0f5      	beq.n	8013efe <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 8013f12:	f834 c018 	ldrh.w	ip, [r4, r8, lsl #1]
 8013f16:	fa1f f980 	uxth.w	r9, r0
 8013f1a:	ea4f 272c 	mov.w	r7, ip, asr #8
 8013f1e:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8013f22:	43c0      	mvns	r0, r0
 8013f24:	b2c0      	uxtb	r0, r0
 8013f26:	fb16 f609 	smulbb	r6, r6, r9
 8013f2a:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8013f2e:	fb07 6700 	mla	r7, r7, r0, r6
 8013f32:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8013f36:	ea4f 06ec 	mov.w	r6, ip, asr #3
 8013f3a:	b2ed      	uxtb	r5, r5
 8013f3c:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8013f40:	fa5f fc8c 	uxtb.w	ip, ip
 8013f44:	fb15 f509 	smulbb	r5, r5, r9
 8013f48:	fb0c 5500 	mla	r5, ip, r0, r5
 8013f4c:	b2bf      	uxth	r7, r7
 8013f4e:	fb1a fa09 	smulbb	sl, sl, r9
 8013f52:	b2ad      	uxth	r5, r5
 8013f54:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8013f58:	fb06 a600 	mla	r6, r6, r0, sl
 8013f5c:	1c78      	adds	r0, r7, #1
 8013f5e:	f105 0a01 	add.w	sl, r5, #1
 8013f62:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 8013f66:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8013f6a:	b2b6      	uxth	r6, r6
 8013f6c:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8013f70:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 8013f74:	ea4a 0707 	orr.w	r7, sl, r7
 8013f78:	f106 0a01 	add.w	sl, r6, #1
 8013f7c:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8013f80:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8013f84:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8013f88:	ea47 070a 	orr.w	r7, r7, sl
 8013f8c:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 8013f90:	e7b5      	b.n	8013efe <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 8013f92:	b005      	add	sp, #20
 8013f94:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013f98:	fffff800 	.word	0xfffff800

08013f9c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8013f9c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013fa0:	b087      	sub	sp, #28
 8013fa2:	468b      	mov	fp, r1
 8013fa4:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 8013fa6:	9204      	str	r2, [sp, #16]
 8013fa8:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 8013fac:	9205      	str	r2, [sp, #20]
 8013fae:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	@ 0x58
 8013fb2:	6861      	ldr	r1, [r4, #4]
 8013fb4:	f8dd e060 	ldr.w	lr, [sp, #96]	@ 0x60
 8013fb8:	fb01 2000 	mla	r0, r1, r0, r2
 8013fbc:	6822      	ldr	r2, [r4, #0]
 8013fbe:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 8013fc2:	f8de 2000 	ldr.w	r2, [lr]
 8013fc6:	9201      	str	r2, [sp, #4]
 8013fc8:	f8de 2004 	ldr.w	r2, [lr, #4]
 8013fcc:	9202      	str	r2, [sp, #8]
 8013fce:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8013fd2:	f1bb 0f00 	cmp.w	fp, #0
 8013fd6:	dc03      	bgt.n	8013fe0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44>
 8013fd8:	9a04      	ldr	r2, [sp, #16]
 8013fda:	2a00      	cmp	r2, #0
 8013fdc:	f340 8142 	ble.w	8014264 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 8013fe0:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8013fe2:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8013fe6:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 8013fea:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 8013fee:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8013ff0:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8013ff4:	2b00      	cmp	r3, #0
 8013ff6:	dd0e      	ble.n	8014016 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8013ff8:	140c      	asrs	r4, r1, #16
 8013ffa:	d405      	bmi.n	8014008 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8013ffc:	42bc      	cmp	r4, r7
 8013ffe:	da03      	bge.n	8014008 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8014000:	1414      	asrs	r4, r2, #16
 8014002:	d401      	bmi.n	8014008 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8014004:	42b4      	cmp	r4, r6
 8014006:	db07      	blt.n	8014018 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8014008:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801400a:	4421      	add	r1, r4
 801400c:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801400e:	3b01      	subs	r3, #1
 8014010:	4422      	add	r2, r4
 8014012:	3002      	adds	r0, #2
 8014014:	e7ee      	b.n	8013ff4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8014016:	d019      	beq.n	801404c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 8014018:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 801401a:	1e5c      	subs	r4, r3, #1
 801401c:	fb05 1504 	mla	r5, r5, r4, r1
 8014020:	142d      	asrs	r5, r5, #16
 8014022:	d409      	bmi.n	8014038 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8014024:	42bd      	cmp	r5, r7
 8014026:	da07      	bge.n	8014038 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8014028:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 801402a:	fb05 2404 	mla	r4, r5, r4, r2
 801402e:	1424      	asrs	r4, r4, #16
 8014030:	d402      	bmi.n	8014038 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8014032:	42b4      	cmp	r4, r6
 8014034:	f2c0 80b1 	blt.w	801419a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 8014038:	f04f 0800 	mov.w	r8, #0
 801403c:	eb03 0408 	add.w	r4, r3, r8
 8014040:	2c00      	cmp	r4, #0
 8014042:	dc3e      	bgt.n	80140c2 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 8014044:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8014048:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801404c:	f1bb 0f00 	cmp.w	fp, #0
 8014050:	f340 8108 	ble.w	8014264 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 8014054:	ee30 0a04 	vadd.f32	s0, s0, s8
 8014058:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801405c:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8014060:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8014062:	f1bb 0b01 	subs.w	fp, fp, #1
 8014066:	ee31 1a05 	vadd.f32	s2, s2, s10
 801406a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801406e:	eeb0 6a62 	vmov.f32	s12, s5
 8014072:	ee61 7a27 	vmul.f32	s15, s2, s15
 8014076:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801407a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801407e:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
 8014082:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8014086:	eeb0 6a43 	vmov.f32	s12, s6
 801408a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801408e:	ee12 2a90 	vmov	r2, s5
 8014092:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8014096:	fb92 f3f3 	sdiv	r3, r2, r3
 801409a:	ee13 2a10 	vmov	r2, s6
 801409e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80140a2:	9313      	str	r3, [sp, #76]	@ 0x4c
 80140a4:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80140a6:	fb92 f3f3 	sdiv	r3, r2, r3
 80140aa:	9a04      	ldr	r2, [sp, #16]
 80140ac:	9314      	str	r3, [sp, #80]	@ 0x50
 80140ae:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
 80140b2:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80140b4:	eeb0 3a67 	vmov.f32	s6, s15
 80140b8:	bf08      	it	eq
 80140ba:	4613      	moveq	r3, r2
 80140bc:	eef0 2a47 	vmov.f32	s5, s14
 80140c0:	e787      	b.n	8013fd2 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
 80140c2:	140e      	asrs	r6, r1, #16
 80140c4:	d462      	bmi.n	801418c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 80140c6:	f8de 5008 	ldr.w	r5, [lr, #8]
 80140ca:	42b5      	cmp	r5, r6
 80140cc:	dd5e      	ble.n	801418c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 80140ce:	1417      	asrs	r7, r2, #16
 80140d0:	d45c      	bmi.n	801418c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 80140d2:	f8de 400c 	ldr.w	r4, [lr, #12]
 80140d6:	42bc      	cmp	r4, r7
 80140d8:	dd58      	ble.n	801418c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 80140da:	b22d      	sxth	r5, r5
 80140dc:	fb07 6505 	mla	r5, r7, r5, r6
 80140e0:	9c02      	ldr	r4, [sp, #8]
 80140e2:	5d66      	ldrb	r6, [r4, r5]
 80140e4:	2e00      	cmp	r6, #0
 80140e6:	d051      	beq.n	801418c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 80140e8:	9c01      	ldr	r4, [sp, #4]
 80140ea:	f834 9015 	ldrh.w	r9, [r4, r5, lsl #1]
 80140ee:	f06f 0401 	mvn.w	r4, #1
 80140f2:	fb04 f408 	mul.w	r4, r4, r8
 80140f6:	9403      	str	r4, [sp, #12]
 80140f8:	5b05      	ldrh	r5, [r0, r4]
 80140fa:	9c05      	ldr	r4, [sp, #20]
 80140fc:	4366      	muls	r6, r4
 80140fe:	1c74      	adds	r4, r6, #1
 8014100:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 8014104:	1224      	asrs	r4, r4, #8
 8014106:	b2a7      	uxth	r7, r4
 8014108:	122e      	asrs	r6, r5, #8
 801410a:	43e4      	mvns	r4, r4
 801410c:	b2e4      	uxtb	r4, r4
 801410e:	ea4f 2c29 	mov.w	ip, r9, asr #8
 8014112:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 8014116:	fb16 f604 	smulbb	r6, r6, r4
 801411a:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801411e:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8014122:	00ed      	lsls	r5, r5, #3
 8014124:	fb0c 6c07 	mla	ip, ip, r7, r6
 8014128:	b2ed      	uxtb	r5, r5
 801412a:	ea4f 06e9 	mov.w	r6, r9, asr #3
 801412e:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 8014132:	fb15 f504 	smulbb	r5, r5, r4
 8014136:	fa5f f989 	uxtb.w	r9, r9
 801413a:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 801413e:	fb09 5507 	mla	r5, r9, r7, r5
 8014142:	fb1a fa04 	smulbb	sl, sl, r4
 8014146:	fa1f fc8c 	uxth.w	ip, ip
 801414a:	b2ad      	uxth	r5, r5
 801414c:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8014150:	fb06 a607 	mla	r6, r6, r7, sl
 8014154:	f10c 0401 	add.w	r4, ip, #1
 8014158:	f105 0a01 	add.w	sl, r5, #1
 801415c:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8014160:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8014164:	b2b6      	uxth	r6, r6
 8014166:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801416a:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 801416e:	ea4a 0c0c 	orr.w	ip, sl, ip
 8014172:	f106 0a01 	add.w	sl, r6, #1
 8014176:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801417a:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801417e:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8014182:	9c03      	ldr	r4, [sp, #12]
 8014184:	ea4c 0c0a 	orr.w	ip, ip, sl
 8014188:	f820 c004 	strh.w	ip, [r0, r4]
 801418c:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801418e:	4421      	add	r1, r4
 8014190:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 8014192:	f108 38ff 	add.w	r8, r8, #4294967295
 8014196:	4422      	add	r2, r4
 8014198:	e750      	b.n	801403c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801419a:	f04f 0900 	mov.w	r9, #0
 801419e:	eba3 0409 	sub.w	r4, r3, r9
 80141a2:	2c00      	cmp	r4, #0
 80141a4:	f77f af4e 	ble.w	8014044 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 80141a8:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 80141ac:	140d      	asrs	r5, r1, #16
 80141ae:	1414      	asrs	r4, r2, #16
 80141b0:	fb06 5404 	mla	r4, r6, r4, r5
 80141b4:	9d02      	ldr	r5, [sp, #8]
 80141b6:	5d2e      	ldrb	r6, [r5, r4]
 80141b8:	2e00      	cmp	r6, #0
 80141ba:	d04c      	beq.n	8014256 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
 80141bc:	9d01      	ldr	r5, [sp, #4]
 80141be:	f835 8014 	ldrh.w	r8, [r5, r4, lsl #1]
 80141c2:	9c05      	ldr	r4, [sp, #20]
 80141c4:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 80141c8:	4366      	muls	r6, r4
 80141ca:	1c74      	adds	r4, r6, #1
 80141cc:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 80141d0:	1224      	asrs	r4, r4, #8
 80141d2:	b2a7      	uxth	r7, r4
 80141d4:	122e      	asrs	r6, r5, #8
 80141d6:	43e4      	mvns	r4, r4
 80141d8:	b2e4      	uxtb	r4, r4
 80141da:	ea4f 2c28 	mov.w	ip, r8, asr #8
 80141de:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 80141e2:	fb16 f604 	smulbb	r6, r6, r4
 80141e6:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 80141ea:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 80141ee:	00ed      	lsls	r5, r5, #3
 80141f0:	fb0c 6c07 	mla	ip, ip, r7, r6
 80141f4:	b2ed      	uxtb	r5, r5
 80141f6:	ea4f 06e8 	mov.w	r6, r8, asr #3
 80141fa:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 80141fe:	fb15 f504 	smulbb	r5, r5, r4
 8014202:	fa5f f888 	uxtb.w	r8, r8
 8014206:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 801420a:	fb08 5507 	mla	r5, r8, r7, r5
 801420e:	fb1a fa04 	smulbb	sl, sl, r4
 8014212:	fa1f fc8c 	uxth.w	ip, ip
 8014216:	b2ad      	uxth	r5, r5
 8014218:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 801421c:	fb06 a607 	mla	r6, r6, r7, sl
 8014220:	f10c 0401 	add.w	r4, ip, #1
 8014224:	f105 0a01 	add.w	sl, r5, #1
 8014228:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 801422c:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8014230:	b2b6      	uxth	r6, r6
 8014232:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8014236:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 801423a:	ea4a 0c0c 	orr.w	ip, sl, ip
 801423e:	f106 0a01 	add.w	sl, r6, #1
 8014242:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8014246:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801424a:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 801424e:	ea4c 0c0a 	orr.w	ip, ip, sl
 8014252:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 8014256:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 8014258:	4421      	add	r1, r4
 801425a:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801425c:	f109 0901 	add.w	r9, r9, #1
 8014260:	4422      	add	r2, r4
 8014262:	e79c      	b.n	801419e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
 8014264:	b007      	add	sp, #28
 8014266:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801426a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801426a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801426e:	b085      	sub	sp, #20
 8014270:	468b      	mov	fp, r1
 8014272:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 8014274:	9203      	str	r2, [sp, #12]
 8014276:	e9dd 2014 	ldrd	r2, r0, [sp, #80]	@ 0x50
 801427a:	6861      	ldr	r1, [r4, #4]
 801427c:	f8dd 8058 	ldr.w	r8, [sp, #88]	@ 0x58
 8014280:	fb01 2000 	mla	r0, r1, r0, r2
 8014284:	6822      	ldr	r2, [r4, #0]
 8014286:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 801428a:	f8d8 2000 	ldr.w	r2, [r8]
 801428e:	9200      	str	r2, [sp, #0]
 8014290:	f8d8 2004 	ldr.w	r2, [r8, #4]
 8014294:	9201      	str	r2, [sp, #4]
 8014296:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 801429a:	f1bb 0f00 	cmp.w	fp, #0
 801429e:	dc03      	bgt.n	80142a8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 80142a0:	9a03      	ldr	r2, [sp, #12]
 80142a2:	2a00      	cmp	r2, #0
 80142a4:	f340 8146 	ble.w	8014534 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 80142a8:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 80142aa:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 80142ae:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 80142b2:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 80142b6:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 80142b8:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 80142bc:	2b00      	cmp	r3, #0
 80142be:	dd0e      	ble.n	80142de <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 80142c0:	140c      	asrs	r4, r1, #16
 80142c2:	d405      	bmi.n	80142d0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80142c4:	42bc      	cmp	r4, r7
 80142c6:	da03      	bge.n	80142d0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80142c8:	1414      	asrs	r4, r2, #16
 80142ca:	d401      	bmi.n	80142d0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80142cc:	42b4      	cmp	r4, r6
 80142ce:	db07      	blt.n	80142e0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80142d0:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 80142d2:	4421      	add	r1, r4
 80142d4:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 80142d6:	3b01      	subs	r3, #1
 80142d8:	4422      	add	r2, r4
 80142da:	3002      	adds	r0, #2
 80142dc:	e7ee      	b.n	80142bc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 80142de:	d017      	beq.n	8014310 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 80142e0:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 80142e2:	1e5c      	subs	r4, r3, #1
 80142e4:	fb05 1504 	mla	r5, r5, r4, r1
 80142e8:	142d      	asrs	r5, r5, #16
 80142ea:	d409      	bmi.n	8014300 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 80142ec:	42bd      	cmp	r5, r7
 80142ee:	da07      	bge.n	8014300 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 80142f0:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 80142f2:	fb05 2404 	mla	r4, r5, r4, r2
 80142f6:	1424      	asrs	r4, r4, #16
 80142f8:	d402      	bmi.n	8014300 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 80142fa:	42b4      	cmp	r4, r6
 80142fc:	f2c0 80b3 	blt.w	8014466 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 8014300:	2600      	movs	r6, #0
 8014302:	199c      	adds	r4, r3, r6
 8014304:	2c00      	cmp	r4, #0
 8014306:	dc3e      	bgt.n	8014386 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8014308:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801430c:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8014310:	f1bb 0f00 	cmp.w	fp, #0
 8014314:	f340 810e 	ble.w	8014534 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 8014318:	ee30 0a04 	vadd.f32	s0, s0, s8
 801431c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8014320:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8014324:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8014326:	f1bb 0b01 	subs.w	fp, fp, #1
 801432a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801432e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8014332:	eeb0 6a62 	vmov.f32	s12, s5
 8014336:	ee61 7a27 	vmul.f32	s15, s2, s15
 801433a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801433e:	ee77 2a62 	vsub.f32	s5, s14, s5
 8014342:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 8014346:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801434a:	eeb0 6a43 	vmov.f32	s12, s6
 801434e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8014352:	ee12 2a90 	vmov	r2, s5
 8014356:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801435a:	fb92 f3f3 	sdiv	r3, r2, r3
 801435e:	ee13 2a10 	vmov	r2, s6
 8014362:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8014366:	9311      	str	r3, [sp, #68]	@ 0x44
 8014368:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801436a:	fb92 f3f3 	sdiv	r3, r2, r3
 801436e:	9a03      	ldr	r2, [sp, #12]
 8014370:	9312      	str	r3, [sp, #72]	@ 0x48
 8014372:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 8014376:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8014378:	eeb0 3a67 	vmov.f32	s6, s15
 801437c:	bf08      	it	eq
 801437e:	4613      	moveq	r3, r2
 8014380:	eef0 2a47 	vmov.f32	s5, s14
 8014384:	e789      	b.n	801429a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8014386:	140f      	asrs	r7, r1, #16
 8014388:	d418      	bmi.n	80143bc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801438a:	f8d8 5008 	ldr.w	r5, [r8, #8]
 801438e:	42bd      	cmp	r5, r7
 8014390:	dd14      	ble.n	80143bc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8014392:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8014396:	d411      	bmi.n	80143bc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8014398:	f8d8 400c 	ldr.w	r4, [r8, #12]
 801439c:	4564      	cmp	r4, ip
 801439e:	dd0d      	ble.n	80143bc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 80143a0:	b22d      	sxth	r5, r5
 80143a2:	fb0c 7505 	mla	r5, ip, r5, r7
 80143a6:	9c01      	ldr	r4, [sp, #4]
 80143a8:	5d64      	ldrb	r4, [r4, r5]
 80143aa:	2cff      	cmp	r4, #255	@ 0xff
 80143ac:	d10c      	bne.n	80143c8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 80143ae:	9c00      	ldr	r4, [sp, #0]
 80143b0:	f834 5015 	ldrh.w	r5, [r4, r5, lsl #1]
 80143b4:	f06f 0401 	mvn.w	r4, #1
 80143b8:	4374      	muls	r4, r6
 80143ba:	5305      	strh	r5, [r0, r4]
 80143bc:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 80143be:	4421      	add	r1, r4
 80143c0:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 80143c2:	3e01      	subs	r6, #1
 80143c4:	4422      	add	r2, r4
 80143c6:	e79c      	b.n	8014302 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 80143c8:	2c00      	cmp	r4, #0
 80143ca:	d0f7      	beq.n	80143bc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 80143cc:	9f00      	ldr	r7, [sp, #0]
 80143ce:	f837 9015 	ldrh.w	r9, [r7, r5, lsl #1]
 80143d2:	f06f 0501 	mvn.w	r5, #1
 80143d6:	4375      	muls	r5, r6
 80143d8:	9502      	str	r5, [sp, #8]
 80143da:	5b45      	ldrh	r5, [r0, r5]
 80143dc:	fa1f fc84 	uxth.w	ip, r4
 80143e0:	122f      	asrs	r7, r5, #8
 80143e2:	43e4      	mvns	r4, r4
 80143e4:	b2e4      	uxtb	r4, r4
 80143e6:	ea4f 2e29 	mov.w	lr, r9, asr #8
 80143ea:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 80143ee:	fb17 f704 	smulbb	r7, r7, r4
 80143f2:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 80143f6:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
 80143fa:	00ed      	lsls	r5, r5, #3
 80143fc:	fb0e 7e0c 	mla	lr, lr, ip, r7
 8014400:	b2ed      	uxtb	r5, r5
 8014402:	ea4f 07e9 	mov.w	r7, r9, asr #3
 8014406:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 801440a:	fb15 f504 	smulbb	r5, r5, r4
 801440e:	fa5f f989 	uxtb.w	r9, r9
 8014412:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 8014416:	fb09 550c 	mla	r5, r9, ip, r5
 801441a:	fb1a fa04 	smulbb	sl, sl, r4
 801441e:	fa1f fe8e 	uxth.w	lr, lr
 8014422:	b2ad      	uxth	r5, r5
 8014424:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8014428:	fb07 a70c 	mla	r7, r7, ip, sl
 801442c:	f10e 0401 	add.w	r4, lr, #1
 8014430:	f105 0a01 	add.w	sl, r5, #1
 8014434:	eb04 2e1e 	add.w	lr, r4, lr, lsr #8
 8014438:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801443c:	b2bf      	uxth	r7, r7
 801443e:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8014442:	f40e 4e78 	and.w	lr, lr, #63488	@ 0xf800
 8014446:	ea4a 0e0e 	orr.w	lr, sl, lr
 801444a:	f107 0a01 	add.w	sl, r7, #1
 801444e:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8014452:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8014456:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 801445a:	9c02      	ldr	r4, [sp, #8]
 801445c:	ea4e 0e0a 	orr.w	lr, lr, sl
 8014460:	f820 e004 	strh.w	lr, [r0, r4]
 8014464:	e7aa      	b.n	80143bc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8014466:	f04f 0900 	mov.w	r9, #0
 801446a:	eba3 0409 	sub.w	r4, r3, r9
 801446e:	2c00      	cmp	r4, #0
 8014470:	f77f af4a 	ble.w	8014308 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8014474:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 8014478:	1414      	asrs	r4, r2, #16
 801447a:	140d      	asrs	r5, r1, #16
 801447c:	fb06 5504 	mla	r5, r6, r4, r5
 8014480:	9c01      	ldr	r4, [sp, #4]
 8014482:	5d64      	ldrb	r4, [r4, r5]
 8014484:	2cff      	cmp	r4, #255	@ 0xff
 8014486:	d10b      	bne.n	80144a0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 8014488:	9c00      	ldr	r4, [sp, #0]
 801448a:	f834 4015 	ldrh.w	r4, [r4, r5, lsl #1]
 801448e:	f820 4019 	strh.w	r4, [r0, r9, lsl #1]
 8014492:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 8014494:	4421      	add	r1, r4
 8014496:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 8014498:	f109 0901 	add.w	r9, r9, #1
 801449c:	4422      	add	r2, r4
 801449e:	e7e4      	b.n	801446a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 80144a0:	2c00      	cmp	r4, #0
 80144a2:	d0f6      	beq.n	8014492 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 80144a4:	9e00      	ldr	r6, [sp, #0]
 80144a6:	f836 e015 	ldrh.w	lr, [r6, r5, lsl #1]
 80144aa:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 80144ae:	b2a7      	uxth	r7, r4
 80144b0:	122e      	asrs	r6, r5, #8
 80144b2:	43e4      	mvns	r4, r4
 80144b4:	b2e4      	uxtb	r4, r4
 80144b6:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 80144ba:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 80144be:	fb16 f604 	smulbb	r6, r6, r4
 80144c2:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 80144c6:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 80144ca:	00ed      	lsls	r5, r5, #3
 80144cc:	fb0c 6c07 	mla	ip, ip, r7, r6
 80144d0:	b2ed      	uxtb	r5, r5
 80144d2:	ea4f 06ee 	mov.w	r6, lr, asr #3
 80144d6:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80144da:	fb15 f504 	smulbb	r5, r5, r4
 80144de:	fa5f fe8e 	uxtb.w	lr, lr
 80144e2:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 80144e6:	fb0e 5507 	mla	r5, lr, r7, r5
 80144ea:	fb1a fa04 	smulbb	sl, sl, r4
 80144ee:	fa1f fc8c 	uxth.w	ip, ip
 80144f2:	b2ad      	uxth	r5, r5
 80144f4:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 80144f8:	fb06 a607 	mla	r6, r6, r7, sl
 80144fc:	f10c 0401 	add.w	r4, ip, #1
 8014500:	f105 0a01 	add.w	sl, r5, #1
 8014504:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8014508:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801450c:	b2b6      	uxth	r6, r6
 801450e:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8014512:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8014516:	ea4a 0c0c 	orr.w	ip, sl, ip
 801451a:	f106 0a01 	add.w	sl, r6, #1
 801451e:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8014522:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8014526:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 801452a:	ea4c 0c0a 	orr.w	ip, ip, sl
 801452e:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 8014532:	e7ae      	b.n	8014492 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8014534:	b005      	add	sp, #20
 8014536:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801453a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801453a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801453e:	b085      	sub	sp, #20
 8014540:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8014542:	9203      	str	r2, [sp, #12]
 8014544:	f89d 205c 	ldrb.w	r2, [sp, #92]	@ 0x5c
 8014548:	9201      	str	r2, [sp, #4]
 801454a:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 801454e:	9100      	str	r1, [sp, #0]
 8014550:	6841      	ldr	r1, [r0, #4]
 8014552:	f8dd e058 	ldr.w	lr, [sp, #88]	@ 0x58
 8014556:	fb01 2404 	mla	r4, r1, r4, r2
 801455a:	6802      	ldr	r2, [r0, #0]
 801455c:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8014560:	f8de 2000 	ldr.w	r2, [lr]
 8014564:	9202      	str	r2, [sp, #8]
 8014566:	9a01      	ldr	r2, [sp, #4]
 8014568:	43d6      	mvns	r6, r2
 801456a:	b2f6      	uxtb	r6, r6
 801456c:	9a00      	ldr	r2, [sp, #0]
 801456e:	2a00      	cmp	r2, #0
 8014570:	dc03      	bgt.n	801457a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 8014572:	9a03      	ldr	r2, [sp, #12]
 8014574:	2a00      	cmp	r2, #0
 8014576:	f340 8124 	ble.w	80147c2 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 801457a:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801457c:	f9be c008 	ldrsh.w	ip, [lr, #8]
 8014580:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 8014584:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 8014588:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 801458a:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 801458e:	2b00      	cmp	r3, #0
 8014590:	dd0e      	ble.n	80145b0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8014592:	1408      	asrs	r0, r1, #16
 8014594:	d405      	bmi.n	80145a2 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8014596:	4560      	cmp	r0, ip
 8014598:	da03      	bge.n	80145a2 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801459a:	1410      	asrs	r0, r2, #16
 801459c:	d401      	bmi.n	80145a2 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801459e:	42b8      	cmp	r0, r7
 80145a0:	db07      	blt.n	80145b2 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 80145a2:	9811      	ldr	r0, [sp, #68]	@ 0x44
 80145a4:	4401      	add	r1, r0
 80145a6:	9812      	ldr	r0, [sp, #72]	@ 0x48
 80145a8:	3b01      	subs	r3, #1
 80145aa:	4402      	add	r2, r0
 80145ac:	3402      	adds	r4, #2
 80145ae:	e7ee      	b.n	801458e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 80145b0:	d06e      	beq.n	8014690 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 80145b2:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 80145b4:	1e58      	subs	r0, r3, #1
 80145b6:	fb05 1500 	mla	r5, r5, r0, r1
 80145ba:	142d      	asrs	r5, r5, #16
 80145bc:	d45c      	bmi.n	8014678 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 80145be:	4565      	cmp	r5, ip
 80145c0:	da5a      	bge.n	8014678 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 80145c2:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 80145c4:	fb05 2000 	mla	r0, r5, r0, r2
 80145c8:	1400      	asrs	r0, r0, #16
 80145ca:	d455      	bmi.n	8014678 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 80145cc:	42b8      	cmp	r0, r7
 80145ce:	da53      	bge.n	8014678 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 80145d0:	f8bd b004 	ldrh.w	fp, [sp, #4]
 80145d4:	4699      	mov	r9, r3
 80145d6:	46a2      	mov	sl, r4
 80145d8:	f1b9 0f00 	cmp.w	r9, #0
 80145dc:	dd54      	ble.n	8014688 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 80145de:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 80145e2:	140d      	asrs	r5, r1, #16
 80145e4:	1410      	asrs	r0, r2, #16
 80145e6:	fb07 5000 	mla	r0, r7, r0, r5
 80145ea:	9d02      	ldr	r5, [sp, #8]
 80145ec:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 80145f0:	f8ba 5000 	ldrh.w	r5, [sl]
 80145f4:	122f      	asrs	r7, r5, #8
 80145f6:	ea4f 2c20 	mov.w	ip, r0, asr #8
 80145fa:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 80145fe:	fb17 f706 	smulbb	r7, r7, r6
 8014602:	ea4f 08e5 	mov.w	r8, r5, asr #3
 8014606:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801460a:	00ed      	lsls	r5, r5, #3
 801460c:	fb0c 7c0b 	mla	ip, ip, fp, r7
 8014610:	f008 08fc 	and.w	r8, r8, #252	@ 0xfc
 8014614:	10c7      	asrs	r7, r0, #3
 8014616:	b2ed      	uxtb	r5, r5
 8014618:	00c0      	lsls	r0, r0, #3
 801461a:	fb18 f806 	smulbb	r8, r8, r6
 801461e:	fb15 f506 	smulbb	r5, r5, r6
 8014622:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8014626:	b2c0      	uxtb	r0, r0
 8014628:	fa1f fc8c 	uxth.w	ip, ip
 801462c:	fb07 870b 	mla	r7, r7, fp, r8
 8014630:	fb00 500b 	mla	r0, r0, fp, r5
 8014634:	b280      	uxth	r0, r0
 8014636:	b2bf      	uxth	r7, r7
 8014638:	f10c 0501 	add.w	r5, ip, #1
 801463c:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8014640:	f107 0801 	add.w	r8, r7, #1
 8014644:	1c45      	adds	r5, r0, #1
 8014646:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801464a:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 801464e:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8014650:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8014654:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8014658:	ea4f 1858 	mov.w	r8, r8, lsr #5
 801465c:	ea45 0c0c 	orr.w	ip, r5, ip
 8014660:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 8014664:	4401      	add	r1, r0
 8014666:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8014668:	ea4c 0c08 	orr.w	ip, ip, r8
 801466c:	f82a cb02 	strh.w	ip, [sl], #2
 8014670:	4402      	add	r2, r0
 8014672:	f109 39ff 	add.w	r9, r9, #4294967295
 8014676:	e7af      	b.n	80145d8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8014678:	f8bd a004 	ldrh.w	sl, [sp, #4]
 801467c:	f04f 0800 	mov.w	r8, #0
 8014680:	eb03 0008 	add.w	r0, r3, r8
 8014684:	2800      	cmp	r0, #0
 8014686:	dc41      	bgt.n	801470c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 8014688:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801468c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8014690:	9b00      	ldr	r3, [sp, #0]
 8014692:	2b00      	cmp	r3, #0
 8014694:	f340 8095 	ble.w	80147c2 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 8014698:	ee30 0a04 	vadd.f32	s0, s0, s8
 801469c:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 80146a0:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80146a4:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80146a6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80146aa:	ee31 1a05 	vadd.f32	s2, s2, s10
 80146ae:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80146b2:	eef0 6a62 	vmov.f32	s13, s5
 80146b6:	ee61 7a27 	vmul.f32	s15, s2, s15
 80146ba:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80146be:	ee77 2a62 	vsub.f32	s5, s14, s5
 80146c2:	edcd 6a0f 	vstr	s13, [sp, #60]	@ 0x3c
 80146c6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80146ca:	eef0 6a43 	vmov.f32	s13, s6
 80146ce:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80146d2:	ee12 2a90 	vmov	r2, s5
 80146d6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80146da:	fb92 f3f3 	sdiv	r3, r2, r3
 80146de:	ee13 2a10 	vmov	r2, s6
 80146e2:	9311      	str	r3, [sp, #68]	@ 0x44
 80146e4:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80146e6:	fb92 f3f3 	sdiv	r3, r2, r3
 80146ea:	9312      	str	r3, [sp, #72]	@ 0x48
 80146ec:	9b00      	ldr	r3, [sp, #0]
 80146ee:	9a03      	ldr	r2, [sp, #12]
 80146f0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80146f4:	3b01      	subs	r3, #1
 80146f6:	9300      	str	r3, [sp, #0]
 80146f8:	edcd 6a10 	vstr	s13, [sp, #64]	@ 0x40
 80146fc:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80146fe:	eeb0 3a67 	vmov.f32	s6, s15
 8014702:	bf08      	it	eq
 8014704:	4613      	moveq	r3, r2
 8014706:	eef0 2a47 	vmov.f32	s5, s14
 801470a:	e72f      	b.n	801456c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 801470c:	140f      	asrs	r7, r1, #16
 801470e:	d451      	bmi.n	80147b4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8014710:	f8de 5008 	ldr.w	r5, [lr, #8]
 8014714:	42bd      	cmp	r5, r7
 8014716:	dd4d      	ble.n	80147b4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8014718:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801471c:	d44a      	bmi.n	80147b4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801471e:	f8de 000c 	ldr.w	r0, [lr, #12]
 8014722:	4560      	cmp	r0, ip
 8014724:	dd46      	ble.n	80147b4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8014726:	b22d      	sxth	r5, r5
 8014728:	fb0c 7505 	mla	r5, ip, r5, r7
 801472c:	9802      	ldr	r0, [sp, #8]
 801472e:	f830 0015 	ldrh.w	r0, [r0, r5, lsl #1]
 8014732:	f06f 0501 	mvn.w	r5, #1
 8014736:	fb05 fb08 	mul.w	fp, r5, r8
 801473a:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801473e:	f834 500b 	ldrh.w	r5, [r4, fp]
 8014742:	122f      	asrs	r7, r5, #8
 8014744:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8014748:	fb17 f706 	smulbb	r7, r7, r6
 801474c:	ea4f 09e5 	mov.w	r9, r5, asr #3
 8014750:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8014754:	00ed      	lsls	r5, r5, #3
 8014756:	fb0c 7c0a 	mla	ip, ip, sl, r7
 801475a:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
 801475e:	10c7      	asrs	r7, r0, #3
 8014760:	b2ed      	uxtb	r5, r5
 8014762:	00c0      	lsls	r0, r0, #3
 8014764:	fb19 f906 	smulbb	r9, r9, r6
 8014768:	fb15 f506 	smulbb	r5, r5, r6
 801476c:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8014770:	b2c0      	uxtb	r0, r0
 8014772:	fa1f fc8c 	uxth.w	ip, ip
 8014776:	fb07 970a 	mla	r7, r7, sl, r9
 801477a:	fb00 500a 	mla	r0, r0, sl, r5
 801477e:	b2bf      	uxth	r7, r7
 8014780:	b280      	uxth	r0, r0
 8014782:	f10c 0501 	add.w	r5, ip, #1
 8014786:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801478a:	f107 0901 	add.w	r9, r7, #1
 801478e:	1c45      	adds	r5, r0, #1
 8014790:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8014794:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 8014798:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 801479c:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 80147a0:	ea4f 1959 	mov.w	r9, r9, lsr #5
 80147a4:	ea45 0c0c 	orr.w	ip, r5, ip
 80147a8:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 80147ac:	ea4c 0c09 	orr.w	ip, ip, r9
 80147b0:	f824 c00b 	strh.w	ip, [r4, fp]
 80147b4:	9811      	ldr	r0, [sp, #68]	@ 0x44
 80147b6:	4401      	add	r1, r0
 80147b8:	9812      	ldr	r0, [sp, #72]	@ 0x48
 80147ba:	f108 38ff 	add.w	r8, r8, #4294967295
 80147be:	4402      	add	r2, r0
 80147c0:	e75e      	b.n	8014680 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x146>
 80147c2:	b005      	add	sp, #20
 80147c4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080147c8 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80147c8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80147cc:	b085      	sub	sp, #20
 80147ce:	4693      	mov	fp, r2
 80147d0:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 80147d2:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 80147d4:	6870      	ldr	r0, [r6, #4]
 80147d6:	9101      	str	r1, [sp, #4]
 80147d8:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 80147dc:	fb00 2404 	mla	r4, r0, r4, r2
 80147e0:	6832      	ldr	r2, [r6, #0]
 80147e2:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	@ 0x44
 80147e6:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80147ea:	682a      	ldr	r2, [r5, #0]
 80147ec:	9202      	str	r2, [sp, #8]
 80147ee:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 80147f2:	9a01      	ldr	r2, [sp, #4]
 80147f4:	2a00      	cmp	r2, #0
 80147f6:	dc03      	bgt.n	8014800 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 80147f8:	f1bb 0f00 	cmp.w	fp, #0
 80147fc:	f340 809a 	ble.w	8014934 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 8014800:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8014802:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8014806:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 801480a:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 801480e:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8014810:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8014814:	2b00      	cmp	r3, #0
 8014816:	dd0c      	ble.n	8014832 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 8014818:	1406      	asrs	r6, r0, #16
 801481a:	d405      	bmi.n	8014828 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801481c:	454e      	cmp	r6, r9
 801481e:	da03      	bge.n	8014828 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8014820:	1416      	asrs	r6, r2, #16
 8014822:	d401      	bmi.n	8014828 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8014824:	4546      	cmp	r6, r8
 8014826:	db05      	blt.n	8014834 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8014828:	4470      	add	r0, lr
 801482a:	4462      	add	r2, ip
 801482c:	3b01      	subs	r3, #1
 801482e:	3402      	adds	r4, #2
 8014830:	e7f0      	b.n	8014814 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 8014832:	d00f      	beq.n	8014854 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8014834:	1e5e      	subs	r6, r3, #1
 8014836:	fb0e 0706 	mla	r7, lr, r6, r0
 801483a:	143f      	asrs	r7, r7, #16
 801483c:	d541      	bpl.n	80148c2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfa>
 801483e:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 8014842:	4698      	mov	r8, r3
 8014844:	9603      	str	r6, [sp, #12]
 8014846:	f1b8 0f00 	cmp.w	r8, #0
 801484a:	dc56      	bgt.n	80148fa <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x132>
 801484c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8014850:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8014854:	9b01      	ldr	r3, [sp, #4]
 8014856:	2b00      	cmp	r3, #0
 8014858:	dd6c      	ble.n	8014934 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 801485a:	ee30 0a04 	vadd.f32	s0, s0, s8
 801485e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8014862:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8014866:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8014868:	ee31 1a05 	vadd.f32	s2, s2, s10
 801486c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8014870:	eeb0 6a62 	vmov.f32	s12, s5
 8014874:	ee61 7a27 	vmul.f32	s15, s2, s15
 8014878:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801487c:	ee77 2a62 	vsub.f32	s5, s14, s5
 8014880:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 8014884:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8014888:	eeb0 6a43 	vmov.f32	s12, s6
 801488c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8014890:	ee12 2a90 	vmov	r2, s5
 8014894:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8014898:	fb92 fef3 	sdiv	lr, r2, r3
 801489c:	ee13 2a10 	vmov	r2, s6
 80148a0:	fb92 fcf3 	sdiv	ip, r2, r3
 80148a4:	9b01      	ldr	r3, [sp, #4]
 80148a6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80148aa:	3b01      	subs	r3, #1
 80148ac:	9301      	str	r3, [sp, #4]
 80148ae:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 80148b2:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80148b4:	eeb0 3a67 	vmov.f32	s6, s15
 80148b8:	bf08      	it	eq
 80148ba:	465b      	moveq	r3, fp
 80148bc:	eef0 2a47 	vmov.f32	s5, s14
 80148c0:	e797      	b.n	80147f2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 80148c2:	454f      	cmp	r7, r9
 80148c4:	dabb      	bge.n	801483e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80148c6:	fb0c 2606 	mla	r6, ip, r6, r2
 80148ca:	1436      	asrs	r6, r6, #16
 80148cc:	d4b7      	bmi.n	801483e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80148ce:	4546      	cmp	r6, r8
 80148d0:	dab5      	bge.n	801483e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80148d2:	461e      	mov	r6, r3
 80148d4:	46a0      	mov	r8, r4
 80148d6:	2e00      	cmp	r6, #0
 80148d8:	ddb8      	ble.n	801484c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 80148da:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 80148de:	9902      	ldr	r1, [sp, #8]
 80148e0:	1417      	asrs	r7, r2, #16
 80148e2:	ea4f 4920 	mov.w	r9, r0, asr #16
 80148e6:	fb0a 9707 	mla	r7, sl, r7, r9
 80148ea:	4470      	add	r0, lr
 80148ec:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 80148f0:	f828 7b02 	strh.w	r7, [r8], #2
 80148f4:	4462      	add	r2, ip
 80148f6:	3e01      	subs	r6, #1
 80148f8:	e7ed      	b.n	80148d6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
 80148fa:	ea5f 4920 	movs.w	r9, r0, asr #16
 80148fe:	d414      	bmi.n	801492a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8014900:	68ae      	ldr	r6, [r5, #8]
 8014902:	454e      	cmp	r6, r9
 8014904:	dd11      	ble.n	801492a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8014906:	ea5f 4a22 	movs.w	sl, r2, asr #16
 801490a:	d40e      	bmi.n	801492a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801490c:	68ef      	ldr	r7, [r5, #12]
 801490e:	4557      	cmp	r7, sl
 8014910:	dd0b      	ble.n	801492a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8014912:	b236      	sxth	r6, r6
 8014914:	fb0a 9606 	mla	r6, sl, r6, r9
 8014918:	9f02      	ldr	r7, [sp, #8]
 801491a:	f06f 0101 	mvn.w	r1, #1
 801491e:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 8014922:	fb01 f608 	mul.w	r6, r1, r8
 8014926:	9903      	ldr	r1, [sp, #12]
 8014928:	538f      	strh	r7, [r1, r6]
 801492a:	4470      	add	r0, lr
 801492c:	4462      	add	r2, ip
 801492e:	f108 38ff 	add.w	r8, r8, #4294967295
 8014932:	e788      	b.n	8014846 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8014934:	b005      	add	sp, #20
 8014936:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801493a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801493a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801493e:	b087      	sub	sp, #28
 8014940:	468b      	mov	fp, r1
 8014942:	9815      	ldr	r0, [sp, #84]	@ 0x54
 8014944:	9203      	str	r2, [sp, #12]
 8014946:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 801494a:	9204      	str	r2, [sp, #16]
 801494c:	e9dd 2516 	ldrd	r2, r5, [sp, #88]	@ 0x58
 8014950:	6841      	ldr	r1, [r0, #4]
 8014952:	f8dd 9060 	ldr.w	r9, [sp, #96]	@ 0x60
 8014956:	fb01 2505 	mla	r5, r1, r5, r2
 801495a:	6802      	ldr	r2, [r0, #0]
 801495c:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 8014960:	f8d9 2000 	ldr.w	r2, [r9]
 8014964:	9201      	str	r2, [sp, #4]
 8014966:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 801496a:	f1bb 0f00 	cmp.w	fp, #0
 801496e:	dc03      	bgt.n	8014978 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8014970:	9a03      	ldr	r2, [sp, #12]
 8014972:	2a00      	cmp	r2, #0
 8014974:	f340 8159 	ble.w	8014c2a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 8014978:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 801497a:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 801497e:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 8014982:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 8014986:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8014988:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 801498c:	2b00      	cmp	r3, #0
 801498e:	dd0e      	ble.n	80149ae <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8014990:	1402      	asrs	r2, r0, #16
 8014992:	d405      	bmi.n	80149a0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8014994:	42ba      	cmp	r2, r7
 8014996:	da03      	bge.n	80149a0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8014998:	140a      	asrs	r2, r1, #16
 801499a:	d401      	bmi.n	80149a0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801499c:	42b2      	cmp	r2, r6
 801499e:	db07      	blt.n	80149b0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80149a0:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 80149a2:	4410      	add	r0, r2
 80149a4:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 80149a6:	3b01      	subs	r3, #1
 80149a8:	4411      	add	r1, r2
 80149aa:	3502      	adds	r5, #2
 80149ac:	e7ee      	b.n	801498c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 80149ae:	d017      	beq.n	80149e0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 80149b0:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 80149b2:	1e5a      	subs	r2, r3, #1
 80149b4:	fb04 0402 	mla	r4, r4, r2, r0
 80149b8:	1424      	asrs	r4, r4, #16
 80149ba:	d409      	bmi.n	80149d0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 80149bc:	42bc      	cmp	r4, r7
 80149be:	da07      	bge.n	80149d0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 80149c0:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 80149c2:	fb04 1202 	mla	r2, r4, r2, r1
 80149c6:	1412      	asrs	r2, r2, #16
 80149c8:	d402      	bmi.n	80149d0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 80149ca:	42b2      	cmp	r2, r6
 80149cc:	f2c0 80bf 	blt.w	8014b4e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 80149d0:	2700      	movs	r7, #0
 80149d2:	19da      	adds	r2, r3, r7
 80149d4:	2a00      	cmp	r2, #0
 80149d6:	dc3e      	bgt.n	8014a56 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 80149d8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80149dc:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 80149e0:	f1bb 0f00 	cmp.w	fp, #0
 80149e4:	f340 8121 	ble.w	8014c2a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 80149e8:	ee30 0a04 	vadd.f32	s0, s0, s8
 80149ec:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80149f0:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80149f4:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80149f6:	f1bb 0b01 	subs.w	fp, fp, #1
 80149fa:	ee31 1a05 	vadd.f32	s2, s2, s10
 80149fe:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8014a02:	eeb0 6a62 	vmov.f32	s12, s5
 8014a06:	ee61 7a27 	vmul.f32	s15, s2, s15
 8014a0a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8014a0e:	ee77 2a62 	vsub.f32	s5, s14, s5
 8014a12:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
 8014a16:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8014a1a:	eeb0 6a43 	vmov.f32	s12, s6
 8014a1e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8014a22:	ee12 2a90 	vmov	r2, s5
 8014a26:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8014a2a:	fb92 f3f3 	sdiv	r3, r2, r3
 8014a2e:	ee13 2a10 	vmov	r2, s6
 8014a32:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8014a36:	9313      	str	r3, [sp, #76]	@ 0x4c
 8014a38:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8014a3a:	fb92 f3f3 	sdiv	r3, r2, r3
 8014a3e:	9a03      	ldr	r2, [sp, #12]
 8014a40:	9314      	str	r3, [sp, #80]	@ 0x50
 8014a42:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
 8014a46:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8014a48:	eeb0 3a67 	vmov.f32	s6, s15
 8014a4c:	bf08      	it	eq
 8014a4e:	4613      	moveq	r3, r2
 8014a50:	eef0 2a47 	vmov.f32	s5, s14
 8014a54:	e789      	b.n	801496a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8014a56:	1406      	asrs	r6, r0, #16
 8014a58:	d42d      	bmi.n	8014ab6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8014a5a:	f8d9 4008 	ldr.w	r4, [r9, #8]
 8014a5e:	42b4      	cmp	r4, r6
 8014a60:	dd29      	ble.n	8014ab6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8014a62:	ea5f 4c21 	movs.w	ip, r1, asr #16
 8014a66:	d426      	bmi.n	8014ab6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8014a68:	f8d9 200c 	ldr.w	r2, [r9, #12]
 8014a6c:	4562      	cmp	r2, ip
 8014a6e:	dd22      	ble.n	8014ab6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8014a70:	b224      	sxth	r4, r4
 8014a72:	9a01      	ldr	r2, [sp, #4]
 8014a74:	fb0c 6404 	mla	r4, ip, r4, r6
 8014a78:	f852 4024 	ldr.w	r4, [r2, r4, lsl #2]
 8014a7c:	0e22      	lsrs	r2, r4, #24
 8014a7e:	d01a      	beq.n	8014ab6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8014a80:	9e04      	ldr	r6, [sp, #16]
 8014a82:	4372      	muls	r2, r6
 8014a84:	1c56      	adds	r6, r2, #1
 8014a86:	eb06 2222 	add.w	r2, r6, r2, asr #8
 8014a8a:	1212      	asrs	r2, r2, #8
 8014a8c:	0a26      	lsrs	r6, r4, #8
 8014a8e:	2aff      	cmp	r2, #255	@ 0xff
 8014a90:	9605      	str	r6, [sp, #20]
 8014a92:	d116      	bne.n	8014ac2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 8014a94:	f06f 0201 	mvn.w	r2, #1
 8014a98:	fb02 fc07 	mul.w	ip, r2, r7
 8014a9c:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
 8014aa0:	0962      	lsrs	r2, r4, #5
 8014aa2:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8014aa6:	f026 0607 	bic.w	r6, r6, #7
 8014aaa:	4316      	orrs	r6, r2
 8014aac:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 8014ab0:	4326      	orrs	r6, r4
 8014ab2:	f825 600c 	strh.w	r6, [r5, ip]
 8014ab6:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8014ab8:	4410      	add	r0, r2
 8014aba:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8014abc:	3f01      	subs	r7, #1
 8014abe:	4411      	add	r1, r2
 8014ac0:	e787      	b.n	80149d2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8014ac2:	f06f 0601 	mvn.w	r6, #1
 8014ac6:	437e      	muls	r6, r7
 8014ac8:	fa1f fa82 	uxth.w	sl, r2
 8014acc:	f835 8006 	ldrh.w	r8, [r5, r6]
 8014ad0:	9602      	str	r6, [sp, #8]
 8014ad2:	ea4f 2e28 	mov.w	lr, r8, asr #8
 8014ad6:	f3c4 4c07 	ubfx	ip, r4, #16, #8
 8014ada:	43d2      	mvns	r2, r2
 8014adc:	b2d2      	uxtb	r2, r2
 8014ade:	fb1c fc0a 	smulbb	ip, ip, sl
 8014ae2:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
 8014ae6:	fb0e ce02 	mla	lr, lr, r2, ip
 8014aea:	b2e4      	uxtb	r4, r4
 8014aec:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 8014af0:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8014af4:	f89d 6014 	ldrb.w	r6, [sp, #20]
 8014af8:	fa5f f888 	uxtb.w	r8, r8
 8014afc:	fb14 f40a 	smulbb	r4, r4, sl
 8014b00:	fb08 4402 	mla	r4, r8, r2, r4
 8014b04:	fa1f fe8e 	uxth.w	lr, lr
 8014b08:	fb16 f60a 	smulbb	r6, r6, sl
 8014b0c:	b2a4      	uxth	r4, r4
 8014b0e:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
 8014b12:	fb0c 6c02 	mla	ip, ip, r2, r6
 8014b16:	f10e 0201 	add.w	r2, lr, #1
 8014b1a:	1c66      	adds	r6, r4, #1
 8014b1c:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 8014b20:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 8014b24:	fa1f fc8c 	uxth.w	ip, ip
 8014b28:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8014b2c:	f40e 4e78 	and.w	lr, lr, #63488	@ 0xf800
 8014b30:	ea46 0e0e 	orr.w	lr, r6, lr
 8014b34:	f10c 0601 	add.w	r6, ip, #1
 8014b38:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 8014b3c:	0976      	lsrs	r6, r6, #5
 8014b3e:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 8014b42:	9a02      	ldr	r2, [sp, #8]
 8014b44:	ea4e 0e06 	orr.w	lr, lr, r6
 8014b48:	f825 e002 	strh.w	lr, [r5, r2]
 8014b4c:	e7b3      	b.n	8014ab6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8014b4e:	f04f 0800 	mov.w	r8, #0
 8014b52:	eba3 0208 	sub.w	r2, r3, r8
 8014b56:	2a00      	cmp	r2, #0
 8014b58:	f77f af3e 	ble.w	80149d8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8014b5c:	f9b9 6008 	ldrsh.w	r6, [r9, #8]
 8014b60:	1404      	asrs	r4, r0, #16
 8014b62:	140a      	asrs	r2, r1, #16
 8014b64:	fb06 4202 	mla	r2, r6, r2, r4
 8014b68:	9c01      	ldr	r4, [sp, #4]
 8014b6a:	f854 4022 	ldr.w	r4, [r4, r2, lsl #2]
 8014b6e:	0e22      	lsrs	r2, r4, #24
 8014b70:	d016      	beq.n	8014ba0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 8014b72:	9e04      	ldr	r6, [sp, #16]
 8014b74:	4372      	muls	r2, r6
 8014b76:	1c56      	adds	r6, r2, #1
 8014b78:	eb06 2222 	add.w	r2, r6, r2, asr #8
 8014b7c:	1212      	asrs	r2, r2, #8
 8014b7e:	2aff      	cmp	r2, #255	@ 0xff
 8014b80:	ea4f 2614 	mov.w	r6, r4, lsr #8
 8014b84:	d113      	bne.n	8014bae <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x274>
 8014b86:	0962      	lsrs	r2, r4, #5
 8014b88:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
 8014b8c:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8014b90:	f026 0607 	bic.w	r6, r6, #7
 8014b94:	4316      	orrs	r6, r2
 8014b96:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 8014b9a:	4326      	orrs	r6, r4
 8014b9c:	f825 6018 	strh.w	r6, [r5, r8, lsl #1]
 8014ba0:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8014ba2:	4410      	add	r0, r2
 8014ba4:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8014ba6:	f108 0801 	add.w	r8, r8, #1
 8014baa:	4411      	add	r1, r2
 8014bac:	e7d1      	b.n	8014b52 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x218>
 8014bae:	f835 e018 	ldrh.w	lr, [r5, r8, lsl #1]
 8014bb2:	fa1f fa82 	uxth.w	sl, r2
 8014bb6:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8014bba:	f3c4 4707 	ubfx	r7, r4, #16, #8
 8014bbe:	43d2      	mvns	r2, r2
 8014bc0:	b2d2      	uxtb	r2, r2
 8014bc2:	fb17 f70a 	smulbb	r7, r7, sl
 8014bc6:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8014bca:	fb0c 7c02 	mla	ip, ip, r2, r7
 8014bce:	b2e4      	uxtb	r4, r4
 8014bd0:	ea4f 07ee 	mov.w	r7, lr, asr #3
 8014bd4:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8014bd8:	fa5f fe8e 	uxtb.w	lr, lr
 8014bdc:	fb14 f40a 	smulbb	r4, r4, sl
 8014be0:	fb0e 4402 	mla	r4, lr, r2, r4
 8014be4:	b2f6      	uxtb	r6, r6
 8014be6:	fa1f fc8c 	uxth.w	ip, ip
 8014bea:	fb16 f60a 	smulbb	r6, r6, sl
 8014bee:	b2a4      	uxth	r4, r4
 8014bf0:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8014bf4:	fb07 6702 	mla	r7, r7, r2, r6
 8014bf8:	f10c 0201 	add.w	r2, ip, #1
 8014bfc:	1c66      	adds	r6, r4, #1
 8014bfe:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 8014c02:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 8014c06:	b2bf      	uxth	r7, r7
 8014c08:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8014c0c:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8014c10:	ea46 0c0c 	orr.w	ip, r6, ip
 8014c14:	1c7e      	adds	r6, r7, #1
 8014c16:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 8014c1a:	0976      	lsrs	r6, r6, #5
 8014c1c:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 8014c20:	ea4c 0c06 	orr.w	ip, ip, r6
 8014c24:	f825 c018 	strh.w	ip, [r5, r8, lsl #1]
 8014c28:	e7ba      	b.n	8014ba0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 8014c2a:	b007      	add	sp, #28
 8014c2c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08014c30 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8014c30:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014c34:	b085      	sub	sp, #20
 8014c36:	468b      	mov	fp, r1
 8014c38:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8014c3a:	9203      	str	r2, [sp, #12]
 8014c3c:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 8014c40:	6841      	ldr	r1, [r0, #4]
 8014c42:	f8dd 8058 	ldr.w	r8, [sp, #88]	@ 0x58
 8014c46:	fb01 2404 	mla	r4, r1, r4, r2
 8014c4a:	6802      	ldr	r2, [r0, #0]
 8014c4c:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8014c50:	f8d8 2000 	ldr.w	r2, [r8]
 8014c54:	9201      	str	r2, [sp, #4]
 8014c56:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8014c5a:	f1bb 0f00 	cmp.w	fp, #0
 8014c5e:	dc03      	bgt.n	8014c68 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8014c60:	9a03      	ldr	r2, [sp, #12]
 8014c62:	2a00      	cmp	r2, #0
 8014c64:	f340 814f 	ble.w	8014f06 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 8014c68:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8014c6a:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 8014c6e:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 8014c72:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 8014c76:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8014c78:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8014c7c:	2b00      	cmp	r3, #0
 8014c7e:	dd0e      	ble.n	8014c9e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8014c80:	1408      	asrs	r0, r1, #16
 8014c82:	d405      	bmi.n	8014c90 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8014c84:	42b8      	cmp	r0, r7
 8014c86:	da03      	bge.n	8014c90 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8014c88:	1410      	asrs	r0, r2, #16
 8014c8a:	d401      	bmi.n	8014c90 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8014c8c:	42b0      	cmp	r0, r6
 8014c8e:	db07      	blt.n	8014ca0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8014c90:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8014c92:	4401      	add	r1, r0
 8014c94:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8014c96:	3b01      	subs	r3, #1
 8014c98:	4402      	add	r2, r0
 8014c9a:	3402      	adds	r4, #2
 8014c9c:	e7ee      	b.n	8014c7c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 8014c9e:	d017      	beq.n	8014cd0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8014ca0:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 8014ca2:	1e58      	subs	r0, r3, #1
 8014ca4:	fb05 1500 	mla	r5, r5, r0, r1
 8014ca8:	142d      	asrs	r5, r5, #16
 8014caa:	d409      	bmi.n	8014cc0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8014cac:	42bd      	cmp	r5, r7
 8014cae:	da07      	bge.n	8014cc0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8014cb0:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 8014cb2:	fb05 2000 	mla	r0, r5, r0, r2
 8014cb6:	1400      	asrs	r0, r0, #16
 8014cb8:	d402      	bmi.n	8014cc0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8014cba:	42b0      	cmp	r0, r6
 8014cbc:	f2c0 80ba 	blt.w	8014e34 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8014cc0:	2600      	movs	r6, #0
 8014cc2:	1998      	adds	r0, r3, r6
 8014cc4:	2800      	cmp	r0, #0
 8014cc6:	dc3e      	bgt.n	8014d46 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8014cc8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8014ccc:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8014cd0:	f1bb 0f00 	cmp.w	fp, #0
 8014cd4:	f340 8117 	ble.w	8014f06 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 8014cd8:	ee30 0a04 	vadd.f32	s0, s0, s8
 8014cdc:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8014ce0:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8014ce4:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8014ce6:	f1bb 0b01 	subs.w	fp, fp, #1
 8014cea:	ee31 1a05 	vadd.f32	s2, s2, s10
 8014cee:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8014cf2:	eeb0 6a62 	vmov.f32	s12, s5
 8014cf6:	ee61 7a27 	vmul.f32	s15, s2, s15
 8014cfa:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8014cfe:	ee77 2a62 	vsub.f32	s5, s14, s5
 8014d02:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 8014d06:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8014d0a:	eeb0 6a43 	vmov.f32	s12, s6
 8014d0e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8014d12:	ee12 2a90 	vmov	r2, s5
 8014d16:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8014d1a:	fb92 f3f3 	sdiv	r3, r2, r3
 8014d1e:	ee13 2a10 	vmov	r2, s6
 8014d22:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8014d26:	9311      	str	r3, [sp, #68]	@ 0x44
 8014d28:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8014d2a:	fb92 f3f3 	sdiv	r3, r2, r3
 8014d2e:	9a03      	ldr	r2, [sp, #12]
 8014d30:	9312      	str	r3, [sp, #72]	@ 0x48
 8014d32:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 8014d36:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8014d38:	eeb0 3a67 	vmov.f32	s6, s15
 8014d3c:	bf08      	it	eq
 8014d3e:	4613      	moveq	r3, r2
 8014d40:	eef0 2a47 	vmov.f32	s5, s14
 8014d44:	e789      	b.n	8014c5a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 8014d46:	140f      	asrs	r7, r1, #16
 8014d48:	d424      	bmi.n	8014d94 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8014d4a:	f8d8 5008 	ldr.w	r5, [r8, #8]
 8014d4e:	42bd      	cmp	r5, r7
 8014d50:	dd20      	ble.n	8014d94 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8014d52:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8014d56:	d41d      	bmi.n	8014d94 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8014d58:	f8d8 000c 	ldr.w	r0, [r8, #12]
 8014d5c:	4560      	cmp	r0, ip
 8014d5e:	dd19      	ble.n	8014d94 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8014d60:	b22d      	sxth	r5, r5
 8014d62:	fb0c 7505 	mla	r5, ip, r5, r7
 8014d66:	9801      	ldr	r0, [sp, #4]
 8014d68:	f850 0025 	ldr.w	r0, [r0, r5, lsl #2]
 8014d6c:	0e07      	lsrs	r7, r0, #24
 8014d6e:	2fff      	cmp	r7, #255	@ 0xff
 8014d70:	d116      	bne.n	8014da0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8014d72:	f06f 0501 	mvn.w	r5, #1
 8014d76:	fb05 f706 	mul.w	r7, r5, r6
 8014d7a:	f2a5 75fe 	subw	r5, r5, #2046	@ 0x7fe
 8014d7e:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 8014d82:	0945      	lsrs	r5, r0, #5
 8014d84:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8014d88:	ea4c 0505 	orr.w	r5, ip, r5
 8014d8c:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 8014d90:	4305      	orrs	r5, r0
 8014d92:	53e5      	strh	r5, [r4, r7]
 8014d94:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8014d96:	4401      	add	r1, r0
 8014d98:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8014d9a:	3e01      	subs	r6, #1
 8014d9c:	4402      	add	r2, r0
 8014d9e:	e790      	b.n	8014cc2 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8014da0:	b2fd      	uxtb	r5, r7
 8014da2:	2f00      	cmp	r7, #0
 8014da4:	d0f6      	beq.n	8014d94 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8014da6:	f06f 0701 	mvn.w	r7, #1
 8014daa:	4377      	muls	r7, r6
 8014dac:	fa1f f985 	uxth.w	r9, r5
 8014db0:	f834 e007 	ldrh.w	lr, [r4, r7]
 8014db4:	9702      	str	r7, [sp, #8]
 8014db6:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8014dba:	f3c0 4707 	ubfx	r7, r0, #16, #8
 8014dbe:	43ed      	mvns	r5, r5
 8014dc0:	b2ed      	uxtb	r5, r5
 8014dc2:	fb17 f709 	smulbb	r7, r7, r9
 8014dc6:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8014dca:	fb0c 7c05 	mla	ip, ip, r5, r7
 8014dce:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 8014dd2:	ea4f 07ee 	mov.w	r7, lr, asr #3
 8014dd6:	b2c0      	uxtb	r0, r0
 8014dd8:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8014ddc:	fa5f fe8e 	uxtb.w	lr, lr
 8014de0:	fb10 f009 	smulbb	r0, r0, r9
 8014de4:	fb0e 0005 	mla	r0, lr, r5, r0
 8014de8:	b280      	uxth	r0, r0
 8014dea:	fa1f fc8c 	uxth.w	ip, ip
 8014dee:	fb1a fa09 	smulbb	sl, sl, r9
 8014df2:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8014df6:	fb07 a705 	mla	r7, r7, r5, sl
 8014dfa:	f100 0a01 	add.w	sl, r0, #1
 8014dfe:	f10c 0501 	add.w	r5, ip, #1
 8014e02:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 8014e06:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8014e0a:	b2bf      	uxth	r7, r7
 8014e0c:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8014e10:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8014e14:	ea4a 0c0c 	orr.w	ip, sl, ip
 8014e18:	f107 0a01 	add.w	sl, r7, #1
 8014e1c:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8014e20:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8014e24:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8014e28:	9802      	ldr	r0, [sp, #8]
 8014e2a:	ea4c 0c0a 	orr.w	ip, ip, sl
 8014e2e:	f824 c000 	strh.w	ip, [r4, r0]
 8014e32:	e7af      	b.n	8014d94 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8014e34:	f04f 0e00 	mov.w	lr, #0
 8014e38:	eba3 000e 	sub.w	r0, r3, lr
 8014e3c:	2800      	cmp	r0, #0
 8014e3e:	f77f af43 	ble.w	8014cc8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8014e42:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 8014e46:	140d      	asrs	r5, r1, #16
 8014e48:	1410      	asrs	r0, r2, #16
 8014e4a:	fb06 5000 	mla	r0, r6, r0, r5
 8014e4e:	9d01      	ldr	r5, [sp, #4]
 8014e50:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 8014e54:	0e2e      	lsrs	r6, r5, #24
 8014e56:	2eff      	cmp	r6, #255	@ 0xff
 8014e58:	d112      	bne.n	8014e80 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x250>
 8014e5a:	482c      	ldr	r0, [pc, #176]	@ (8014f0c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>)
 8014e5c:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 8014e60:	0968      	lsrs	r0, r5, #5
 8014e62:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8014e66:	4330      	orrs	r0, r6
 8014e68:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8014e6c:	4328      	orrs	r0, r5
 8014e6e:	f824 001e 	strh.w	r0, [r4, lr, lsl #1]
 8014e72:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8014e74:	4401      	add	r1, r0
 8014e76:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8014e78:	f10e 0e01 	add.w	lr, lr, #1
 8014e7c:	4402      	add	r2, r0
 8014e7e:	e7db      	b.n	8014e38 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
 8014e80:	b2f0      	uxtb	r0, r6
 8014e82:	2e00      	cmp	r6, #0
 8014e84:	d0f5      	beq.n	8014e72 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 8014e86:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 8014e8a:	fa1f f980 	uxth.w	r9, r0
 8014e8e:	ea4f 272c 	mov.w	r7, ip, asr #8
 8014e92:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8014e96:	43c0      	mvns	r0, r0
 8014e98:	b2c0      	uxtb	r0, r0
 8014e9a:	fb16 f609 	smulbb	r6, r6, r9
 8014e9e:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8014ea2:	fb07 6700 	mla	r7, r7, r0, r6
 8014ea6:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8014eaa:	ea4f 06ec 	mov.w	r6, ip, asr #3
 8014eae:	b2ed      	uxtb	r5, r5
 8014eb0:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8014eb4:	fa5f fc8c 	uxtb.w	ip, ip
 8014eb8:	fb15 f509 	smulbb	r5, r5, r9
 8014ebc:	fb0c 5500 	mla	r5, ip, r0, r5
 8014ec0:	b2bf      	uxth	r7, r7
 8014ec2:	fb1a fa09 	smulbb	sl, sl, r9
 8014ec6:	b2ad      	uxth	r5, r5
 8014ec8:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8014ecc:	fb06 a600 	mla	r6, r6, r0, sl
 8014ed0:	1c78      	adds	r0, r7, #1
 8014ed2:	f105 0a01 	add.w	sl, r5, #1
 8014ed6:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 8014eda:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8014ede:	b2b6      	uxth	r6, r6
 8014ee0:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8014ee4:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 8014ee8:	ea4a 0707 	orr.w	r7, sl, r7
 8014eec:	f106 0a01 	add.w	sl, r6, #1
 8014ef0:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8014ef4:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8014ef8:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8014efc:	ea47 070a 	orr.w	r7, r7, sl
 8014f00:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
 8014f04:	e7b5      	b.n	8014e72 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 8014f06:	b005      	add	sp, #20
 8014f08:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014f0c:	fffff800 	.word	0xfffff800

08014f10 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8014f10:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014f14:	b087      	sub	sp, #28
 8014f16:	468b      	mov	fp, r1
 8014f18:	9815      	ldr	r0, [sp, #84]	@ 0x54
 8014f1a:	9203      	str	r2, [sp, #12]
 8014f1c:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 8014f20:	9204      	str	r2, [sp, #16]
 8014f22:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
 8014f26:	6841      	ldr	r1, [r0, #4]
 8014f28:	f8dd 9060 	ldr.w	r9, [sp, #96]	@ 0x60
 8014f2c:	fb01 2404 	mla	r4, r1, r4, r2
 8014f30:	6802      	ldr	r2, [r0, #0]
 8014f32:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8014f36:	f8d9 2008 	ldr.w	r2, [r9, #8]
 8014f3a:	3201      	adds	r2, #1
 8014f3c:	f022 0201 	bic.w	r2, r2, #1
 8014f40:	9200      	str	r2, [sp, #0]
 8014f42:	f8d9 2000 	ldr.w	r2, [r9]
 8014f46:	9201      	str	r2, [sp, #4]
 8014f48:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8014f4c:	f1bb 0f00 	cmp.w	fp, #0
 8014f50:	dc03      	bgt.n	8014f5a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8014f52:	9a03      	ldr	r2, [sp, #12]
 8014f54:	2a00      	cmp	r2, #0
 8014f56:	f340 8169 	ble.w	801522c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 8014f5a:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8014f5c:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 8014f60:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 8014f64:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 8014f68:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8014f6a:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 8014f6e:	2b00      	cmp	r3, #0
 8014f70:	dd0e      	ble.n	8014f90 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8014f72:	1402      	asrs	r2, r0, #16
 8014f74:	d405      	bmi.n	8014f82 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8014f76:	42ba      	cmp	r2, r7
 8014f78:	da03      	bge.n	8014f82 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8014f7a:	140a      	asrs	r2, r1, #16
 8014f7c:	d401      	bmi.n	8014f82 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8014f7e:	42b2      	cmp	r2, r6
 8014f80:	db07      	blt.n	8014f92 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8014f82:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8014f84:	4410      	add	r0, r2
 8014f86:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8014f88:	3b01      	subs	r3, #1
 8014f8a:	4411      	add	r1, r2
 8014f8c:	3402      	adds	r4, #2
 8014f8e:	e7ee      	b.n	8014f6e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 8014f90:	d017      	beq.n	8014fc2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 8014f92:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 8014f94:	1e5a      	subs	r2, r3, #1
 8014f96:	fb05 0502 	mla	r5, r5, r2, r0
 8014f9a:	142d      	asrs	r5, r5, #16
 8014f9c:	d409      	bmi.n	8014fb2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8014f9e:	42bd      	cmp	r5, r7
 8014fa0:	da07      	bge.n	8014fb2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8014fa2:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 8014fa4:	fb05 1202 	mla	r2, r5, r2, r1
 8014fa8:	1412      	asrs	r2, r2, #16
 8014faa:	d402      	bmi.n	8014fb2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8014fac:	42b2      	cmp	r2, r6
 8014fae:	f2c0 80c7 	blt.w	8015140 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x230>
 8014fb2:	2700      	movs	r7, #0
 8014fb4:	19da      	adds	r2, r3, r7
 8014fb6:	2a00      	cmp	r2, #0
 8014fb8:	dc3e      	bgt.n	8015038 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 8014fba:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8014fbe:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8014fc2:	f1bb 0f00 	cmp.w	fp, #0
 8014fc6:	f340 8131 	ble.w	801522c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 8014fca:	ee30 0a04 	vadd.f32	s0, s0, s8
 8014fce:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8014fd2:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8014fd6:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8014fd8:	f1bb 0b01 	subs.w	fp, fp, #1
 8014fdc:	ee31 1a05 	vadd.f32	s2, s2, s10
 8014fe0:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8014fe4:	eeb0 6a62 	vmov.f32	s12, s5
 8014fe8:	ee61 7a27 	vmul.f32	s15, s2, s15
 8014fec:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8014ff0:	ee77 2a62 	vsub.f32	s5, s14, s5
 8014ff4:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
 8014ff8:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8014ffc:	eeb0 6a43 	vmov.f32	s12, s6
 8015000:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8015004:	ee12 2a90 	vmov	r2, s5
 8015008:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801500c:	fb92 f3f3 	sdiv	r3, r2, r3
 8015010:	ee13 2a10 	vmov	r2, s6
 8015014:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8015018:	9313      	str	r3, [sp, #76]	@ 0x4c
 801501a:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801501c:	fb92 f3f3 	sdiv	r3, r2, r3
 8015020:	9a03      	ldr	r2, [sp, #12]
 8015022:	9314      	str	r3, [sp, #80]	@ 0x50
 8015024:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
 8015028:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801502a:	eeb0 3a67 	vmov.f32	s6, s15
 801502e:	bf08      	it	eq
 8015030:	4613      	moveq	r3, r2
 8015032:	eef0 2a47 	vmov.f32	s5, s14
 8015036:	e789      	b.n	8014f4c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8015038:	1405      	asrs	r5, r0, #16
 801503a:	d435      	bmi.n	80150a8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801503c:	f8d9 2008 	ldr.w	r2, [r9, #8]
 8015040:	42aa      	cmp	r2, r5
 8015042:	dd31      	ble.n	80150a8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8015044:	140e      	asrs	r6, r1, #16
 8015046:	d42f      	bmi.n	80150a8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8015048:	f8d9 200c 	ldr.w	r2, [r9, #12]
 801504c:	42b2      	cmp	r2, r6
 801504e:	dd2b      	ble.n	80150a8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8015050:	9a00      	ldr	r2, [sp, #0]
 8015052:	fb06 5502 	mla	r5, r6, r2, r5
 8015056:	086a      	lsrs	r2, r5, #1
 8015058:	9e01      	ldr	r6, [sp, #4]
 801505a:	5cb2      	ldrb	r2, [r6, r2]
 801505c:	07ee      	lsls	r6, r5, #31
 801505e:	bf54      	ite	pl
 8015060:	f002 020f 	andpl.w	r2, r2, #15
 8015064:	1112      	asrmi	r2, r2, #4
 8015066:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801506a:	b2d2      	uxtb	r2, r2
 801506c:	b1e2      	cbz	r2, 80150a8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801506e:	9d04      	ldr	r5, [sp, #16]
 8015070:	436a      	muls	r2, r5
 8015072:	1c55      	adds	r5, r2, #1
 8015074:	eb05 2222 	add.w	r2, r5, r2, asr #8
 8015078:	4d6e      	ldr	r5, [pc, #440]	@ (8015234 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 801507a:	682d      	ldr	r5, [r5, #0]
 801507c:	1212      	asrs	r2, r2, #8
 801507e:	0a2e      	lsrs	r6, r5, #8
 8015080:	2aff      	cmp	r2, #255	@ 0xff
 8015082:	9605      	str	r6, [sp, #20]
 8015084:	d116      	bne.n	80150b4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8015086:	f06f 0201 	mvn.w	r2, #1
 801508a:	fb02 fc07 	mul.w	ip, r2, r7
 801508e:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
 8015092:	096a      	lsrs	r2, r5, #5
 8015094:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8015098:	f026 0607 	bic.w	r6, r6, #7
 801509c:	4316      	orrs	r6, r2
 801509e:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 80150a2:	432e      	orrs	r6, r5
 80150a4:	f824 600c 	strh.w	r6, [r4, ip]
 80150a8:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 80150aa:	4410      	add	r0, r2
 80150ac:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 80150ae:	3f01      	subs	r7, #1
 80150b0:	4411      	add	r1, r2
 80150b2:	e77f      	b.n	8014fb4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 80150b4:	f06f 0601 	mvn.w	r6, #1
 80150b8:	437e      	muls	r6, r7
 80150ba:	fa1f fa82 	uxth.w	sl, r2
 80150be:	f834 8006 	ldrh.w	r8, [r4, r6]
 80150c2:	9602      	str	r6, [sp, #8]
 80150c4:	ea4f 2e28 	mov.w	lr, r8, asr #8
 80150c8:	f3c5 4c07 	ubfx	ip, r5, #16, #8
 80150cc:	43d2      	mvns	r2, r2
 80150ce:	b2d2      	uxtb	r2, r2
 80150d0:	fb1c fc0a 	smulbb	ip, ip, sl
 80150d4:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
 80150d8:	fb0e ce02 	mla	lr, lr, r2, ip
 80150dc:	b2ed      	uxtb	r5, r5
 80150de:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 80150e2:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 80150e6:	f89d 6014 	ldrb.w	r6, [sp, #20]
 80150ea:	fa5f f888 	uxtb.w	r8, r8
 80150ee:	fb15 f50a 	smulbb	r5, r5, sl
 80150f2:	fb08 5502 	mla	r5, r8, r2, r5
 80150f6:	fa1f fe8e 	uxth.w	lr, lr
 80150fa:	fb16 f60a 	smulbb	r6, r6, sl
 80150fe:	b2ad      	uxth	r5, r5
 8015100:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
 8015104:	fb0c 6c02 	mla	ip, ip, r2, r6
 8015108:	f10e 0201 	add.w	r2, lr, #1
 801510c:	1c6e      	adds	r6, r5, #1
 801510e:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 8015112:	eb06 2615 	add.w	r6, r6, r5, lsr #8
 8015116:	fa1f fc8c 	uxth.w	ip, ip
 801511a:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801511e:	f40e 4e78 	and.w	lr, lr, #63488	@ 0xf800
 8015122:	ea46 0e0e 	orr.w	lr, r6, lr
 8015126:	f10c 0601 	add.w	r6, ip, #1
 801512a:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 801512e:	0976      	lsrs	r6, r6, #5
 8015130:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 8015134:	9a02      	ldr	r2, [sp, #8]
 8015136:	ea4e 0e06 	orr.w	lr, lr, r6
 801513a:	f824 e002 	strh.w	lr, [r4, r2]
 801513e:	e7b3      	b.n	80150a8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8015140:	f04f 0800 	mov.w	r8, #0
 8015144:	eba3 0208 	sub.w	r2, r3, r8
 8015148:	2a00      	cmp	r2, #0
 801514a:	f77f af36 	ble.w	8014fba <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 801514e:	9e00      	ldr	r6, [sp, #0]
 8015150:	1402      	asrs	r2, r0, #16
 8015152:	140d      	asrs	r5, r1, #16
 8015154:	fb06 2505 	mla	r5, r6, r5, r2
 8015158:	086a      	lsrs	r2, r5, #1
 801515a:	9e01      	ldr	r6, [sp, #4]
 801515c:	5cb2      	ldrb	r2, [r6, r2]
 801515e:	07ed      	lsls	r5, r5, #31
 8015160:	bf54      	ite	pl
 8015162:	f002 020f 	andpl.w	r2, r2, #15
 8015166:	1112      	asrmi	r2, r2, #4
 8015168:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801516c:	b2d2      	uxtb	r2, r2
 801516e:	b1c2      	cbz	r2, 80151a2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 8015170:	9d04      	ldr	r5, [sp, #16]
 8015172:	436a      	muls	r2, r5
 8015174:	1c55      	adds	r5, r2, #1
 8015176:	eb05 2222 	add.w	r2, r5, r2, asr #8
 801517a:	4d2e      	ldr	r5, [pc, #184]	@ (8015234 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 801517c:	1212      	asrs	r2, r2, #8
 801517e:	682e      	ldr	r6, [r5, #0]
 8015180:	2aff      	cmp	r2, #255	@ 0xff
 8015182:	ea4f 2516 	mov.w	r5, r6, lsr #8
 8015186:	d113      	bne.n	80151b0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 8015188:	0972      	lsrs	r2, r6, #5
 801518a:	f425 65ff 	bic.w	r5, r5, #2040	@ 0x7f8
 801518e:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8015192:	f025 0507 	bic.w	r5, r5, #7
 8015196:	4315      	orrs	r5, r2
 8015198:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 801519c:	4335      	orrs	r5, r6
 801519e:	f824 5018 	strh.w	r5, [r4, r8, lsl #1]
 80151a2:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 80151a4:	4410      	add	r0, r2
 80151a6:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 80151a8:	f108 0801 	add.w	r8, r8, #1
 80151ac:	4411      	add	r1, r2
 80151ae:	e7c9      	b.n	8015144 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 80151b0:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 80151b4:	fa1f fa82 	uxth.w	sl, r2
 80151b8:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 80151bc:	f3c6 4707 	ubfx	r7, r6, #16, #8
 80151c0:	43d2      	mvns	r2, r2
 80151c2:	b2d2      	uxtb	r2, r2
 80151c4:	fb17 f70a 	smulbb	r7, r7, sl
 80151c8:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 80151cc:	fb0c 7c02 	mla	ip, ip, r2, r7
 80151d0:	b2f6      	uxtb	r6, r6
 80151d2:	ea4f 07ee 	mov.w	r7, lr, asr #3
 80151d6:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80151da:	fa5f fe8e 	uxtb.w	lr, lr
 80151de:	fb16 f60a 	smulbb	r6, r6, sl
 80151e2:	fb0e 6602 	mla	r6, lr, r2, r6
 80151e6:	b2ed      	uxtb	r5, r5
 80151e8:	fa1f fc8c 	uxth.w	ip, ip
 80151ec:	fb15 f50a 	smulbb	r5, r5, sl
 80151f0:	b2b6      	uxth	r6, r6
 80151f2:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 80151f6:	fb07 5702 	mla	r7, r7, r2, r5
 80151fa:	f10c 0201 	add.w	r2, ip, #1
 80151fe:	1c75      	adds	r5, r6, #1
 8015200:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 8015204:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 8015208:	b2bf      	uxth	r7, r7
 801520a:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801520e:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8015212:	ea45 0c0c 	orr.w	ip, r5, ip
 8015216:	1c7d      	adds	r5, r7, #1
 8015218:	eb05 2517 	add.w	r5, r5, r7, lsr #8
 801521c:	096d      	lsrs	r5, r5, #5
 801521e:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8015222:	ea4c 0c05 	orr.w	ip, ip, r5
 8015226:	f824 c018 	strh.w	ip, [r4, r8, lsl #1]
 801522a:	e7ba      	b.n	80151a2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 801522c:	b007      	add	sp, #28
 801522e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015232:	bf00      	nop
 8015234:	200133e4 	.word	0x200133e4

08015238 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8015238:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801523c:	b087      	sub	sp, #28
 801523e:	f8df 830c 	ldr.w	r8, [pc, #780]	@ 801554c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
 8015242:	9815      	ldr	r0, [sp, #84]	@ 0x54
 8015244:	9205      	str	r2, [sp, #20]
 8015246:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
 801524a:	9101      	str	r1, [sp, #4]
 801524c:	6841      	ldr	r1, [r0, #4]
 801524e:	f8dd b060 	ldr.w	fp, [sp, #96]	@ 0x60
 8015252:	fb01 2404 	mla	r4, r1, r4, r2
 8015256:	6802      	ldr	r2, [r0, #0]
 8015258:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801525c:	f8db 2008 	ldr.w	r2, [fp, #8]
 8015260:	3201      	adds	r2, #1
 8015262:	f022 0201 	bic.w	r2, r2, #1
 8015266:	9202      	str	r2, [sp, #8]
 8015268:	f8db 2000 	ldr.w	r2, [fp]
 801526c:	9203      	str	r2, [sp, #12]
 801526e:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8015272:	9a01      	ldr	r2, [sp, #4]
 8015274:	2a00      	cmp	r2, #0
 8015276:	dc03      	bgt.n	8015280 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8015278:	9a05      	ldr	r2, [sp, #20]
 801527a:	2a00      	cmp	r2, #0
 801527c:	f340 8162 	ble.w	8015544 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 8015280:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8015282:	f9bb 7008 	ldrsh.w	r7, [fp, #8]
 8015286:	f9bb 600c 	ldrsh.w	r6, [fp, #12]
 801528a:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 801528e:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8015290:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 8015294:	2b00      	cmp	r3, #0
 8015296:	dd0e      	ble.n	80152b6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8015298:	1402      	asrs	r2, r0, #16
 801529a:	d405      	bmi.n	80152a8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801529c:	42ba      	cmp	r2, r7
 801529e:	da03      	bge.n	80152a8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80152a0:	140a      	asrs	r2, r1, #16
 80152a2:	d401      	bmi.n	80152a8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80152a4:	42b2      	cmp	r2, r6
 80152a6:	db07      	blt.n	80152b8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 80152a8:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 80152aa:	4410      	add	r0, r2
 80152ac:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 80152ae:	3b01      	subs	r3, #1
 80152b0:	4411      	add	r1, r2
 80152b2:	3402      	adds	r4, #2
 80152b4:	e7ee      	b.n	8015294 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 80152b6:	d017      	beq.n	80152e8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 80152b8:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 80152ba:	1e5a      	subs	r2, r3, #1
 80152bc:	fb05 0502 	mla	r5, r5, r2, r0
 80152c0:	142d      	asrs	r5, r5, #16
 80152c2:	d409      	bmi.n	80152d8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 80152c4:	42bd      	cmp	r5, r7
 80152c6:	da07      	bge.n	80152d8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 80152c8:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 80152ca:	fb05 1202 	mla	r2, r5, r2, r1
 80152ce:	1412      	asrs	r2, r2, #16
 80152d0:	d402      	bmi.n	80152d8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 80152d2:	42b2      	cmp	r2, r6
 80152d4:	f2c0 80c3 	blt.w	801545e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x226>
 80152d8:	2500      	movs	r5, #0
 80152da:	195a      	adds	r2, r3, r5
 80152dc:	2a00      	cmp	r2, #0
 80152de:	dc3f      	bgt.n	8015360 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 80152e0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80152e4:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80152e8:	9b01      	ldr	r3, [sp, #4]
 80152ea:	2b00      	cmp	r3, #0
 80152ec:	f340 812a 	ble.w	8015544 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 80152f0:	ee30 0a04 	vadd.f32	s0, s0, s8
 80152f4:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80152f8:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80152fc:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80152fe:	ee31 1a05 	vadd.f32	s2, s2, s10
 8015302:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8015306:	eeb0 6a62 	vmov.f32	s12, s5
 801530a:	ee61 7a27 	vmul.f32	s15, s2, s15
 801530e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8015312:	ee77 2a62 	vsub.f32	s5, s14, s5
 8015316:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
 801531a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801531e:	eeb0 6a43 	vmov.f32	s12, s6
 8015322:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8015326:	ee12 2a90 	vmov	r2, s5
 801532a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801532e:	fb92 f3f3 	sdiv	r3, r2, r3
 8015332:	ee13 2a10 	vmov	r2, s6
 8015336:	9313      	str	r3, [sp, #76]	@ 0x4c
 8015338:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801533a:	fb92 f3f3 	sdiv	r3, r2, r3
 801533e:	9314      	str	r3, [sp, #80]	@ 0x50
 8015340:	9b01      	ldr	r3, [sp, #4]
 8015342:	9a05      	ldr	r2, [sp, #20]
 8015344:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8015348:	3b01      	subs	r3, #1
 801534a:	9301      	str	r3, [sp, #4]
 801534c:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
 8015350:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8015352:	eeb0 3a67 	vmov.f32	s6, s15
 8015356:	bf08      	it	eq
 8015358:	4613      	moveq	r3, r2
 801535a:	eef0 2a47 	vmov.f32	s5, s14
 801535e:	e788      	b.n	8015272 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8015360:	1406      	asrs	r6, r0, #16
 8015362:	d42c      	bmi.n	80153be <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8015364:	f8db 2008 	ldr.w	r2, [fp, #8]
 8015368:	42b2      	cmp	r2, r6
 801536a:	dd28      	ble.n	80153be <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801536c:	140f      	asrs	r7, r1, #16
 801536e:	d426      	bmi.n	80153be <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8015370:	f8db 200c 	ldr.w	r2, [fp, #12]
 8015374:	42ba      	cmp	r2, r7
 8015376:	dd22      	ble.n	80153be <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8015378:	9a02      	ldr	r2, [sp, #8]
 801537a:	fb07 6602 	mla	r6, r7, r2, r6
 801537e:	0872      	lsrs	r2, r6, #1
 8015380:	9f03      	ldr	r7, [sp, #12]
 8015382:	5cba      	ldrb	r2, [r7, r2]
 8015384:	07f6      	lsls	r6, r6, #31
 8015386:	bf54      	ite	pl
 8015388:	f002 020f 	andpl.w	r2, r2, #15
 801538c:	1112      	asrmi	r2, r2, #4
 801538e:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8015392:	b2d2      	uxtb	r2, r2
 8015394:	2aff      	cmp	r2, #255	@ 0xff
 8015396:	d118      	bne.n	80153ca <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x192>
 8015398:	f8d8 2000 	ldr.w	r2, [r8]
 801539c:	f06f 0601 	mvn.w	r6, #1
 80153a0:	fb06 f705 	mul.w	r7, r6, r5
 80153a4:	f2a6 76fe 	subw	r6, r6, #2046	@ 0x7fe
 80153a8:	ea06 2c12 	and.w	ip, r6, r2, lsr #8
 80153ac:	0956      	lsrs	r6, r2, #5
 80153ae:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 80153b2:	ea4c 0606 	orr.w	r6, ip, r6
 80153b6:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80153ba:	4316      	orrs	r6, r2
 80153bc:	53e6      	strh	r6, [r4, r7]
 80153be:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 80153c0:	4410      	add	r0, r2
 80153c2:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 80153c4:	3d01      	subs	r5, #1
 80153c6:	4411      	add	r1, r2
 80153c8:	e787      	b.n	80152da <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 80153ca:	2a00      	cmp	r2, #0
 80153cc:	d0f7      	beq.n	80153be <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 80153ce:	f06f 0601 	mvn.w	r6, #1
 80153d2:	436e      	muls	r6, r5
 80153d4:	f8d8 c000 	ldr.w	ip, [r8]
 80153d8:	f834 e006 	ldrh.w	lr, [r4, r6]
 80153dc:	9604      	str	r6, [sp, #16]
 80153de:	fa1f f982 	uxth.w	r9, r2
 80153e2:	ea4f 272e 	mov.w	r7, lr, asr #8
 80153e6:	f3cc 4607 	ubfx	r6, ip, #16, #8
 80153ea:	43d2      	mvns	r2, r2
 80153ec:	b2d2      	uxtb	r2, r2
 80153ee:	fb16 f609 	smulbb	r6, r6, r9
 80153f2:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 80153f6:	fb07 6702 	mla	r7, r7, r2, r6
 80153fa:	f3cc 2a07 	ubfx	sl, ip, #8, #8
 80153fe:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8015402:	fa5f fc8c 	uxtb.w	ip, ip
 8015406:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801540a:	fa5f fe8e 	uxtb.w	lr, lr
 801540e:	fb1c fc09 	smulbb	ip, ip, r9
 8015412:	fb0e cc02 	mla	ip, lr, r2, ip
 8015416:	b2bf      	uxth	r7, r7
 8015418:	fb1a fa09 	smulbb	sl, sl, r9
 801541c:	fa1f fc8c 	uxth.w	ip, ip
 8015420:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8015424:	fb06 a602 	mla	r6, r6, r2, sl
 8015428:	1c7a      	adds	r2, r7, #1
 801542a:	f10c 0a01 	add.w	sl, ip, #1
 801542e:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8015432:	eb0a 2a1c 	add.w	sl, sl, ip, lsr #8
 8015436:	b2b6      	uxth	r6, r6
 8015438:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801543c:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 8015440:	ea4a 0707 	orr.w	r7, sl, r7
 8015444:	f106 0a01 	add.w	sl, r6, #1
 8015448:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801544c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8015450:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8015454:	9a04      	ldr	r2, [sp, #16]
 8015456:	ea47 070a 	orr.w	r7, r7, sl
 801545a:	52a7      	strh	r7, [r4, r2]
 801545c:	e7af      	b.n	80153be <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801545e:	f04f 0e00 	mov.w	lr, #0
 8015462:	eba3 020e 	sub.w	r2, r3, lr
 8015466:	2a00      	cmp	r2, #0
 8015468:	f77f af3a 	ble.w	80152e0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801546c:	9e02      	ldr	r6, [sp, #8]
 801546e:	1402      	asrs	r2, r0, #16
 8015470:	140d      	asrs	r5, r1, #16
 8015472:	fb06 2505 	mla	r5, r6, r5, r2
 8015476:	086a      	lsrs	r2, r5, #1
 8015478:	9e03      	ldr	r6, [sp, #12]
 801547a:	5cb2      	ldrb	r2, [r6, r2]
 801547c:	07ed      	lsls	r5, r5, #31
 801547e:	bf54      	ite	pl
 8015480:	f002 020f 	andpl.w	r2, r2, #15
 8015484:	1112      	asrmi	r2, r2, #4
 8015486:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801548a:	b2d2      	uxtb	r2, r2
 801548c:	2aff      	cmp	r2, #255	@ 0xff
 801548e:	d115      	bne.n	80154bc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x284>
 8015490:	f8d8 5000 	ldr.w	r5, [r8]
 8015494:	f6a2 02ff 	subw	r2, r2, #2303	@ 0x8ff
 8015498:	ea02 2615 	and.w	r6, r2, r5, lsr #8
 801549c:	096a      	lsrs	r2, r5, #5
 801549e:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 80154a2:	4332      	orrs	r2, r6
 80154a4:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 80154a8:	432a      	orrs	r2, r5
 80154aa:	f824 201e 	strh.w	r2, [r4, lr, lsl #1]
 80154ae:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 80154b0:	4410      	add	r0, r2
 80154b2:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 80154b4:	f10e 0e01 	add.w	lr, lr, #1
 80154b8:	4411      	add	r1, r2
 80154ba:	e7d2      	b.n	8015462 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 80154bc:	2a00      	cmp	r2, #0
 80154be:	d0f6      	beq.n	80154ae <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 80154c0:	f8d8 7000 	ldr.w	r7, [r8]
 80154c4:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 80154c8:	fa1f f982 	uxth.w	r9, r2
 80154cc:	ea4f 262c 	mov.w	r6, ip, asr #8
 80154d0:	f3c7 4507 	ubfx	r5, r7, #16, #8
 80154d4:	43d2      	mvns	r2, r2
 80154d6:	b2d2      	uxtb	r2, r2
 80154d8:	fb15 f509 	smulbb	r5, r5, r9
 80154dc:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 80154e0:	fb06 5602 	mla	r6, r6, r2, r5
 80154e4:	f3c7 2a07 	ubfx	sl, r7, #8, #8
 80154e8:	ea4f 05ec 	mov.w	r5, ip, asr #3
 80154ec:	b2ff      	uxtb	r7, r7
 80154ee:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80154f2:	fa5f fc8c 	uxtb.w	ip, ip
 80154f6:	fb17 f709 	smulbb	r7, r7, r9
 80154fa:	fb0c 7702 	mla	r7, ip, r2, r7
 80154fe:	b2b6      	uxth	r6, r6
 8015500:	fb1a fa09 	smulbb	sl, sl, r9
 8015504:	b2bf      	uxth	r7, r7
 8015506:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 801550a:	fb05 a502 	mla	r5, r5, r2, sl
 801550e:	1c72      	adds	r2, r6, #1
 8015510:	f107 0a01 	add.w	sl, r7, #1
 8015514:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 8015518:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801551c:	b2ad      	uxth	r5, r5
 801551e:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8015522:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
 8015526:	ea4a 0606 	orr.w	r6, sl, r6
 801552a:	f105 0a01 	add.w	sl, r5, #1
 801552e:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8015532:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8015536:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 801553a:	ea46 060a 	orr.w	r6, r6, sl
 801553e:	f824 601e 	strh.w	r6, [r4, lr, lsl #1]
 8015542:	e7b4      	b.n	80154ae <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 8015544:	b007      	add	sp, #28
 8015546:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801554a:	bf00      	nop
 801554c:	200133e4 	.word	0x200133e4

08015550 <_ZN8touchgfx8LCD16bppD1Ev>:
 8015550:	4770      	bx	lr

08015552 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOID1Ev>:
 8015552:	4770      	bx	lr

08015554 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D1Ev>:
 8015554:	4770      	bx	lr

08015556 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED1Ev>:
 8015556:	4770      	bx	lr

08015558 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D1Ev>:
 8015558:	4770      	bx	lr

0801555a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev>:
 801555a:	4770      	bx	lr

0801555c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev>:
 801555c:	4770      	bx	lr

0801555e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev>:
 801555e:	4770      	bx	lr

08015560 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev>:
 8015560:	4770      	bx	lr

08015562 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 8015562:	4770      	bx	lr

08015564 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8015564:	4770      	bx	lr

08015566 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 8015566:	4770      	bx	lr

08015568 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 8015568:	4770      	bx	lr

0801556a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801556a:	4770      	bx	lr

0801556c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 801556c:	4770      	bx	lr

0801556e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801556e:	4770      	bx	lr

08015570 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8015570:	4770      	bx	lr

08015572 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 8015572:	4770      	bx	lr

08015574 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 8015574:	4770      	bx	lr

08015576 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 8015576:	4770      	bx	lr

08015578 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD1Ev>:
 8015578:	4770      	bx	lr

0801557a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801557a:	4770      	bx	lr

0801557c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801557c:	4770      	bx	lr

0801557e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801557e:	4770      	bx	lr

08015580 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 8015580:	4770      	bx	lr

08015582 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
 8015582:	4770      	bx	lr

08015584 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
 8015584:	4770      	bx	lr

08015586 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
 8015586:	4770      	bx	lr

08015588 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
 8015588:	4770      	bx	lr

0801558a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801558a:	4770      	bx	lr

0801558c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 801558c:	4770      	bx	lr

0801558e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 801558e:	4770      	bx	lr

08015590 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 8015590:	4770      	bx	lr

08015592 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t>:
 8015592:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8015596:	b088      	sub	sp, #32
 8015598:	ac08      	add	r4, sp, #32
 801559a:	4606      	mov	r6, r0
 801559c:	f824 3d0c 	strh.w	r3, [r4, #-12]!
 80155a0:	4620      	mov	r0, r4
 80155a2:	4688      	mov	r8, r1
 80155a4:	4691      	mov	r9, r2
 80155a6:	f7fd fc31 	bl	8012e0c <_ZNK8touchgfx6Bitmap7getDataEv>
 80155aa:	6833      	ldr	r3, [r6, #0]
 80155ac:	4605      	mov	r5, r0
 80155ae:	4620      	mov	r0, r4
 80155b0:	699f      	ldr	r7, [r3, #24]
 80155b2:	f7fd fb39 	bl	8012c28 <_ZNK8touchgfx6Bitmap8getWidthEv>
 80155b6:	4682      	mov	sl, r0
 80155b8:	4620      	mov	r0, r4
 80155ba:	f7fd fb69 	bl	8012c90 <_ZNK8touchgfx6Bitmap9getHeightEv>
 80155be:	9500      	str	r5, [sp, #0]
 80155c0:	e9cd a001 	strd	sl, r0, [sp, #4]
 80155c4:	464b      	mov	r3, r9
 80155c6:	a806      	add	r0, sp, #24
 80155c8:	4642      	mov	r2, r8
 80155ca:	4631      	mov	r1, r6
 80155cc:	47b8      	blx	r7
 80155ce:	4628      	mov	r0, r5
 80155d0:	b008      	add	sp, #32
 80155d2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
	...

080155d8 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE>:
 80155d8:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 80155dc:	2300      	movs	r3, #0
 80155de:	9300      	str	r3, [sp, #0]
 80155e0:	4b3d      	ldr	r3, [pc, #244]	@ (80156d8 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x100>)
 80155e2:	781b      	ldrb	r3, [r3, #0]
 80155e4:	2b00      	cmp	r3, #0
 80155e6:	d137      	bne.n	8015658 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x80>
 80155e8:	4a3c      	ldr	r2, [pc, #240]	@ (80156dc <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 80155ea:	f9b2 2000 	ldrsh.w	r2, [r2]
 80155ee:	f8ad 2004 	strh.w	r2, [sp, #4]
 80155f2:	2b00      	cmp	r3, #0
 80155f4:	d132      	bne.n	801565c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x84>
 80155f6:	4b3a      	ldr	r3, [pc, #232]	@ (80156e0 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 80155f8:	f9b3 3000 	ldrsh.w	r3, [r3]
 80155fc:	6808      	ldr	r0, [r1, #0]
 80155fe:	6849      	ldr	r1, [r1, #4]
 8015600:	f8ad 3006 	strh.w	r3, [sp, #6]
 8015604:	ac02      	add	r4, sp, #8
 8015606:	ab02      	add	r3, sp, #8
 8015608:	c303      	stmia	r3!, {r0, r1}
 801560a:	4669      	mov	r1, sp
 801560c:	4620      	mov	r0, r4
 801560e:	f7fa f811 	bl	800f634 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8015612:	4668      	mov	r0, sp
 8015614:	f7f9 ffe6 	bl	800f5e4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8015618:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 801561c:	f8bd 2000 	ldrh.w	r2, [sp]
 8015620:	4d30      	ldr	r5, [pc, #192]	@ (80156e4 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x10c>)
 8015622:	4413      	add	r3, r2
 8015624:	f8ad 3008 	strh.w	r3, [sp, #8]
 8015628:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 801562c:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8015630:	6828      	ldr	r0, [r5, #0]
 8015632:	4413      	add	r3, r2
 8015634:	f8ad 300a 	strh.w	r3, [sp, #10]
 8015638:	6803      	ldr	r3, [r0, #0]
 801563a:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 801563c:	4798      	blx	r3
 801563e:	f010 0f01 	tst.w	r0, #1
 8015642:	462f      	mov	r7, r5
 8015644:	d00c      	beq.n	8015660 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x88>
 8015646:	6828      	ldr	r0, [r5, #0]
 8015648:	6803      	ldr	r3, [r0, #0]
 801564a:	e894 0006 	ldmia.w	r4, {r1, r2}
 801564e:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8015650:	4798      	blx	r3
 8015652:	b004      	add	sp, #16
 8015654:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8015658:	4a21      	ldr	r2, [pc, #132]	@ (80156e0 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 801565a:	e7c6      	b.n	80155ea <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x12>
 801565c:	4b1f      	ldr	r3, [pc, #124]	@ (80156dc <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801565e:	e7cb      	b.n	80155f8 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x20>
 8015660:	6838      	ldr	r0, [r7, #0]
 8015662:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 8015666:	6803      	ldr	r3, [r0, #0]
 8015668:	f9bd 500e 	ldrsh.w	r5, [sp, #14]
 801566c:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 801566e:	4798      	blx	r3
 8015670:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
 8015674:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8015678:	f8bd 6004 	ldrh.w	r6, [sp, #4]
 801567c:	fb16 3602 	smlabb	r6, r6, r2, r3
 8015680:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 8015684:	6838      	ldr	r0, [r7, #0]
 8015686:	6803      	ldr	r3, [r0, #0]
 8015688:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801568a:	4798      	blx	r3
 801568c:	4a13      	ldr	r2, [pc, #76]	@ (80156dc <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801568e:	f9bd 400a 	ldrsh.w	r4, [sp, #10]
 8015692:	8813      	ldrh	r3, [r2, #0]
 8015694:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 8015698:	fb03 1404 	mla	r4, r3, r4, r1
 801569c:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 80156a0:	435d      	muls	r5, r3
 80156a2:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 80156a6:	ea4f 0848 	mov.w	r8, r8, lsl #1
 80156aa:	4691      	mov	r9, r2
 80156ac:	6838      	ldr	r0, [r7, #0]
 80156ae:	42ac      	cmp	r4, r5
 80156b0:	6803      	ldr	r3, [r0, #0]
 80156b2:	d20e      	bcs.n	80156d2 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xfa>
 80156b4:	f8d3 a038 	ldr.w	sl, [r3, #56]	@ 0x38
 80156b8:	4632      	mov	r2, r6
 80156ba:	4643      	mov	r3, r8
 80156bc:	4621      	mov	r1, r4
 80156be:	47d0      	blx	sl
 80156c0:	f8b9 3000 	ldrh.w	r3, [r9]
 80156c4:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80156c8:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 80156cc:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 80156d0:	e7ec      	b.n	80156ac <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xd4>
 80156d2:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80156d4:	4798      	blx	r3
 80156d6:	e7bc      	b.n	8015652 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x7a>
 80156d8:	200133ca 	.word	0x200133ca
 80156dc:	200133cc 	.word	0x200133cc
 80156e0:	200133ce 	.word	0x200133ce
 80156e4:	200133d4 	.word	0x200133d4

080156e8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb>:
 80156e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80156ec:	b08b      	sub	sp, #44	@ 0x2c
 80156ee:	460f      	mov	r7, r1
 80156f0:	f89d b050 	ldrb.w	fp, [sp, #80]	@ 0x50
 80156f4:	f89d 4054 	ldrb.w	r4, [sp, #84]	@ 0x54
 80156f8:	4616      	mov	r6, r2
 80156fa:	f1bb 0f00 	cmp.w	fp, #0
 80156fe:	d04a      	beq.n	8015796 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
 8015700:	6810      	ldr	r0, [r2, #0]
 8015702:	6851      	ldr	r1, [r2, #4]
 8015704:	ad06      	add	r5, sp, #24
 8015706:	c503      	stmia	r5!, {r0, r1}
 8015708:	6818      	ldr	r0, [r3, #0]
 801570a:	6859      	ldr	r1, [r3, #4]
 801570c:	ad08      	add	r5, sp, #32
 801570e:	c503      	stmia	r5!, {r0, r1}
 8015710:	a806      	add	r0, sp, #24
 8015712:	f7f9 ff67 	bl	800f5e4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8015716:	4631      	mov	r1, r6
 8015718:	a808      	add	r0, sp, #32
 801571a:	f7f9 ff8b 	bl	800f634 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801571e:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 8015722:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	@ 0x22
 8015726:	f8bd 601c 	ldrh.w	r6, [sp, #28]
 801572a:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	@ 0x24
 801572e:	f9bd 5026 	ldrsh.w	r5, [sp, #38]	@ 0x26
 8015732:	fb16 2103 	smlabb	r1, r6, r3, r2
 8015736:	eb07 0641 	add.w	r6, r7, r1, lsl #1
 801573a:	f8bd 1018 	ldrh.w	r1, [sp, #24]
 801573e:	4f5f      	ldr	r7, [pc, #380]	@ (80158bc <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 8015740:	440a      	add	r2, r1
 8015742:	f8ad 2020 	strh.w	r2, [sp, #32]
 8015746:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 801574a:	6838      	ldr	r0, [r7, #0]
 801574c:	4413      	add	r3, r2
 801574e:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
 8015752:	6803      	ldr	r3, [r0, #0]
 8015754:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8015756:	4798      	blx	r3
 8015758:	f1bb 0fff 	cmp.w	fp, #255	@ 0xff
 801575c:	46b9      	mov	r9, r7
 801575e:	d11d      	bne.n	801579c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb4>
 8015760:	b9fc      	cbnz	r4, 80157a2 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 8015762:	f010 0f01 	tst.w	r0, #1
 8015766:	d01c      	beq.n	80157a2 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 8015768:	f8d9 0000 	ldr.w	r0, [r9]
 801576c:	f8bd 3022 	ldrh.w	r3, [sp, #34]	@ 0x22
 8015770:	6801      	ldr	r1, [r0, #0]
 8015772:	f8cd b00c 	str.w	fp, [sp, #12]
 8015776:	2700      	movs	r7, #0
 8015778:	e9cd 4704 	strd	r4, r7, [sp, #16]
 801577c:	f8bd 401c 	ldrh.w	r4, [sp, #28]
 8015780:	9402      	str	r4, [sp, #8]
 8015782:	b2ad      	uxth	r5, r5
 8015784:	fa1f f488 	uxth.w	r4, r8
 8015788:	9501      	str	r5, [sp, #4]
 801578a:	9400      	str	r4, [sp, #0]
 801578c:	6c8c      	ldr	r4, [r1, #72]	@ 0x48
 801578e:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 8015792:	4631      	mov	r1, r6
 8015794:	47a0      	blx	r4
 8015796:	b00b      	add	sp, #44	@ 0x2c
 8015798:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801579c:	f010 0f04 	tst.w	r0, #4
 80157a0:	e7e1      	b.n	8015766 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x7e>
 80157a2:	f8d9 0000 	ldr.w	r0, [r9]
 80157a6:	6803      	ldr	r3, [r0, #0]
 80157a8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80157aa:	4798      	blx	r3
 80157ac:	4b44      	ldr	r3, [pc, #272]	@ (80158c0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d8>)
 80157ae:	f9bd 4022 	ldrsh.w	r4, [sp, #34]	@ 0x22
 80157b2:	881a      	ldrh	r2, [r3, #0]
 80157b4:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
 80157b8:	f1bb 0fff 	cmp.w	fp, #255	@ 0xff
 80157bc:	fb02 1404 	mla	r4, r2, r4, r1
 80157c0:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 80157c4:	469a      	mov	sl, r3
 80157c6:	fb05 f502 	mul.w	r5, r5, r2
 80157ca:	ea4f 0748 	mov.w	r7, r8, lsl #1
 80157ce:	d059      	beq.n	8015884 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x19c>
 80157d0:	f1cb 09ff 	rsb	r9, fp, #255	@ 0xff
 80157d4:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 80157d8:	fa1f f28b 	uxth.w	r2, fp
 80157dc:	fa1f f989 	uxth.w	r9, r9
 80157e0:	469e      	mov	lr, r3
 80157e2:	42ac      	cmp	r4, r5
 80157e4:	d264      	bcs.n	80158b0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 80157e6:	eb04 0a07 	add.w	sl, r4, r7
 80157ea:	4554      	cmp	r4, sl
 80157ec:	d23d      	bcs.n	801586a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x182>
 80157ee:	8821      	ldrh	r1, [r4, #0]
 80157f0:	f836 3b02 	ldrh.w	r3, [r6], #2
 80157f4:	1208      	asrs	r0, r1, #8
 80157f6:	ea4f 2c23 	mov.w	ip, r3, asr #8
 80157fa:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 80157fe:	fb10 f009 	smulbb	r0, r0, r9
 8015802:	ea4f 0be1 	mov.w	fp, r1, asr #3
 8015806:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801580a:	00c9      	lsls	r1, r1, #3
 801580c:	fb0c 0c02 	mla	ip, ip, r2, r0
 8015810:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
 8015814:	10d8      	asrs	r0, r3, #3
 8015816:	b2c9      	uxtb	r1, r1
 8015818:	00db      	lsls	r3, r3, #3
 801581a:	fa1f fc8c 	uxth.w	ip, ip
 801581e:	fb1b fb09 	smulbb	fp, fp, r9
 8015822:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 8015826:	b2db      	uxtb	r3, r3
 8015828:	fb11 f109 	smulbb	r1, r1, r9
 801582c:	fb00 b002 	mla	r0, r0, r2, fp
 8015830:	fb03 1302 	mla	r3, r3, r2, r1
 8015834:	f10c 0b01 	add.w	fp, ip, #1
 8015838:	b29b      	uxth	r3, r3
 801583a:	eb0b 2c1c 	add.w	ip, fp, ip, lsr #8
 801583e:	b280      	uxth	r0, r0
 8015840:	f40c 4b78 	and.w	fp, ip, #63488	@ 0xf800
 8015844:	f103 0c01 	add.w	ip, r3, #1
 8015848:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801584c:	1c43      	adds	r3, r0, #1
 801584e:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8015852:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8015856:	0940      	lsrs	r0, r0, #5
 8015858:	ea4c 0c0b 	orr.w	ip, ip, fp
 801585c:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8015860:	ea4c 0c00 	orr.w	ip, ip, r0
 8015864:	f824 cb02 	strh.w	ip, [r4], #2
 8015868:	e7bf      	b.n	80157ea <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x102>
 801586a:	f8be 3000 	ldrh.w	r3, [lr]
 801586e:	eba3 0308 	sub.w	r3, r3, r8
 8015872:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8015876:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 801587a:	eba3 0308 	sub.w	r3, r3, r8
 801587e:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 8015882:	e7ae      	b.n	80157e2 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xfa>
 8015884:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 8015888:	f8d9 0000 	ldr.w	r0, [r9]
 801588c:	42ac      	cmp	r4, r5
 801588e:	6803      	ldr	r3, [r0, #0]
 8015890:	d20e      	bcs.n	80158b0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 8015892:	f8d3 8038 	ldr.w	r8, [r3, #56]	@ 0x38
 8015896:	4632      	mov	r2, r6
 8015898:	463b      	mov	r3, r7
 801589a:	4621      	mov	r1, r4
 801589c:	47c0      	blx	r8
 801589e:	f8ba 3000 	ldrh.w	r3, [sl]
 80158a2:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80158a6:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 80158aa:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 80158ae:	e7eb      	b.n	8015888 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1a0>
 80158b0:	4b02      	ldr	r3, [pc, #8]	@ (80158bc <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 80158b2:	6818      	ldr	r0, [r3, #0]
 80158b4:	6803      	ldr	r3, [r0, #0]
 80158b6:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80158b8:	4798      	blx	r3
 80158ba:	e76c      	b.n	8015796 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
 80158bc:	200133d4 	.word	0x200133d4
 80158c0:	200133cc 	.word	0x200133cc

080158c4 <_ZN8touchgfx8LCD16bppD0Ev>:
 80158c4:	b510      	push	{r4, lr}
 80158c6:	218c      	movs	r1, #140	@ 0x8c
 80158c8:	4604      	mov	r4, r0
 80158ca:	f00c fa2c 	bl	8021d26 <_ZdlPvj>
 80158ce:	4620      	mov	r0, r4
 80158d0:	bd10      	pop	{r4, pc}

080158d2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D0Ev>:
 80158d2:	b510      	push	{r4, lr}
 80158d4:	2104      	movs	r1, #4
 80158d6:	4604      	mov	r4, r0
 80158d8:	f00c fa25 	bl	8021d26 <_ZdlPvj>
 80158dc:	4620      	mov	r0, r4
 80158de:	bd10      	pop	{r4, pc}

080158e0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED0Ev>:
 80158e0:	b510      	push	{r4, lr}
 80158e2:	2104      	movs	r1, #4
 80158e4:	4604      	mov	r4, r0
 80158e6:	f00c fa1e 	bl	8021d26 <_ZdlPvj>
 80158ea:	4620      	mov	r0, r4
 80158ec:	bd10      	pop	{r4, pc}

080158ee <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D0Ev>:
 80158ee:	b510      	push	{r4, lr}
 80158f0:	f640 0144 	movw	r1, #2116	@ 0x844
 80158f4:	4604      	mov	r4, r0
 80158f6:	f00c fa16 	bl	8021d26 <_ZdlPvj>
 80158fa:	4620      	mov	r0, r4
 80158fc:	bd10      	pop	{r4, pc}

080158fe <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOID0Ev>:
 80158fe:	b510      	push	{r4, lr}
 8015900:	f44f 7182 	mov.w	r1, #260	@ 0x104
 8015904:	4604      	mov	r4, r0
 8015906:	f00c fa0e 	bl	8021d26 <_ZdlPvj>
 801590a:	4620      	mov	r0, r4
 801590c:	bd10      	pop	{r4, pc}

0801590e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801590e:	b510      	push	{r4, lr}
 8015910:	2104      	movs	r1, #4
 8015912:	4604      	mov	r4, r0
 8015914:	f00c fa07 	bl	8021d26 <_ZdlPvj>
 8015918:	4620      	mov	r0, r4
 801591a:	bd10      	pop	{r4, pc}

0801591c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 801591c:	b510      	push	{r4, lr}
 801591e:	2104      	movs	r1, #4
 8015920:	4604      	mov	r4, r0
 8015922:	f00c fa00 	bl	8021d26 <_ZdlPvj>
 8015926:	4620      	mov	r0, r4
 8015928:	bd10      	pop	{r4, pc}

0801592a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 801592a:	b510      	push	{r4, lr}
 801592c:	2104      	movs	r1, #4
 801592e:	4604      	mov	r4, r0
 8015930:	f00c f9f9 	bl	8021d26 <_ZdlPvj>
 8015934:	4620      	mov	r0, r4
 8015936:	bd10      	pop	{r4, pc}

08015938 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 8015938:	b510      	push	{r4, lr}
 801593a:	2104      	movs	r1, #4
 801593c:	4604      	mov	r4, r0
 801593e:	f00c f9f2 	bl	8021d26 <_ZdlPvj>
 8015942:	4620      	mov	r0, r4
 8015944:	bd10      	pop	{r4, pc}

08015946 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
 8015946:	b510      	push	{r4, lr}
 8015948:	2104      	movs	r1, #4
 801594a:	4604      	mov	r4, r0
 801594c:	f00c f9eb 	bl	8021d26 <_ZdlPvj>
 8015950:	4620      	mov	r0, r4
 8015952:	bd10      	pop	{r4, pc}

08015954 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
 8015954:	b510      	push	{r4, lr}
 8015956:	2104      	movs	r1, #4
 8015958:	4604      	mov	r4, r0
 801595a:	f00c f9e4 	bl	8021d26 <_ZdlPvj>
 801595e:	4620      	mov	r0, r4
 8015960:	bd10      	pop	{r4, pc}

08015962 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
 8015962:	b510      	push	{r4, lr}
 8015964:	2104      	movs	r1, #4
 8015966:	4604      	mov	r4, r0
 8015968:	f00c f9dd 	bl	8021d26 <_ZdlPvj>
 801596c:	4620      	mov	r0, r4
 801596e:	bd10      	pop	{r4, pc}

08015970 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
 8015970:	b510      	push	{r4, lr}
 8015972:	2104      	movs	r1, #4
 8015974:	4604      	mov	r4, r0
 8015976:	f00c f9d6 	bl	8021d26 <_ZdlPvj>
 801597a:	4620      	mov	r0, r4
 801597c:	bd10      	pop	{r4, pc}

0801597e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801597e:	b510      	push	{r4, lr}
 8015980:	2104      	movs	r1, #4
 8015982:	4604      	mov	r4, r0
 8015984:	f00c f9cf 	bl	8021d26 <_ZdlPvj>
 8015988:	4620      	mov	r0, r4
 801598a:	bd10      	pop	{r4, pc}

0801598c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801598c:	b510      	push	{r4, lr}
 801598e:	2104      	movs	r1, #4
 8015990:	4604      	mov	r4, r0
 8015992:	f00c f9c8 	bl	8021d26 <_ZdlPvj>
 8015996:	4620      	mov	r0, r4
 8015998:	bd10      	pop	{r4, pc}

0801599a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801599a:	b510      	push	{r4, lr}
 801599c:	2104      	movs	r1, #4
 801599e:	4604      	mov	r4, r0
 80159a0:	f00c f9c1 	bl	8021d26 <_ZdlPvj>
 80159a4:	4620      	mov	r0, r4
 80159a6:	bd10      	pop	{r4, pc}

080159a8 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 80159a8:	b510      	push	{r4, lr}
 80159aa:	2104      	movs	r1, #4
 80159ac:	4604      	mov	r4, r0
 80159ae:	f00c f9ba 	bl	8021d26 <_ZdlPvj>
 80159b2:	4620      	mov	r0, r4
 80159b4:	bd10      	pop	{r4, pc}

080159b6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 80159b6:	b510      	push	{r4, lr}
 80159b8:	2104      	movs	r1, #4
 80159ba:	4604      	mov	r4, r0
 80159bc:	f00c f9b3 	bl	8021d26 <_ZdlPvj>
 80159c0:	4620      	mov	r0, r4
 80159c2:	bd10      	pop	{r4, pc}

080159c4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 80159c4:	b510      	push	{r4, lr}
 80159c6:	2104      	movs	r1, #4
 80159c8:	4604      	mov	r4, r0
 80159ca:	f00c f9ac 	bl	8021d26 <_ZdlPvj>
 80159ce:	4620      	mov	r0, r4
 80159d0:	bd10      	pop	{r4, pc}

080159d2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 80159d2:	b510      	push	{r4, lr}
 80159d4:	2104      	movs	r1, #4
 80159d6:	4604      	mov	r4, r0
 80159d8:	f00c f9a5 	bl	8021d26 <_ZdlPvj>
 80159dc:	4620      	mov	r0, r4
 80159de:	bd10      	pop	{r4, pc}

080159e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD0Ev>:
 80159e0:	b510      	push	{r4, lr}
 80159e2:	2104      	movs	r1, #4
 80159e4:	4604      	mov	r4, r0
 80159e6:	f00c f99e 	bl	8021d26 <_ZdlPvj>
 80159ea:	4620      	mov	r0, r4
 80159ec:	bd10      	pop	{r4, pc}

080159ee <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 80159ee:	b510      	push	{r4, lr}
 80159f0:	2104      	movs	r1, #4
 80159f2:	4604      	mov	r4, r0
 80159f4:	f00c f997 	bl	8021d26 <_ZdlPvj>
 80159f8:	4620      	mov	r0, r4
 80159fa:	bd10      	pop	{r4, pc}

080159fc <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 80159fc:	b510      	push	{r4, lr}
 80159fe:	2104      	movs	r1, #4
 8015a00:	4604      	mov	r4, r0
 8015a02:	f00c f990 	bl	8021d26 <_ZdlPvj>
 8015a06:	4620      	mov	r0, r4
 8015a08:	bd10      	pop	{r4, pc}

08015a0a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 8015a0a:	b510      	push	{r4, lr}
 8015a0c:	2104      	movs	r1, #4
 8015a0e:	4604      	mov	r4, r0
 8015a10:	f00c f989 	bl	8021d26 <_ZdlPvj>
 8015a14:	4620      	mov	r0, r4
 8015a16:	bd10      	pop	{r4, pc}

08015a18 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD0Ev>:
 8015a18:	b510      	push	{r4, lr}
 8015a1a:	2104      	movs	r1, #4
 8015a1c:	4604      	mov	r4, r0
 8015a1e:	f00c f982 	bl	8021d26 <_ZdlPvj>
 8015a22:	4620      	mov	r0, r4
 8015a24:	bd10      	pop	{r4, pc}

08015a26 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 8015a26:	b510      	push	{r4, lr}
 8015a28:	2104      	movs	r1, #4
 8015a2a:	4604      	mov	r4, r0
 8015a2c:	f00c f97b 	bl	8021d26 <_ZdlPvj>
 8015a30:	4620      	mov	r0, r4
 8015a32:	bd10      	pop	{r4, pc}

08015a34 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8015a34:	b510      	push	{r4, lr}
 8015a36:	2104      	movs	r1, #4
 8015a38:	4604      	mov	r4, r0
 8015a3a:	f00c f974 	bl	8021d26 <_ZdlPvj>
 8015a3e:	4620      	mov	r0, r4
 8015a40:	bd10      	pop	{r4, pc}

08015a42 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 8015a42:	b510      	push	{r4, lr}
 8015a44:	2104      	movs	r1, #4
 8015a46:	4604      	mov	r4, r0
 8015a48:	f00c f96d 	bl	8021d26 <_ZdlPvj>
 8015a4c:	4620      	mov	r0, r4
 8015a4e:	bd10      	pop	{r4, pc}

08015a50 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 8015a50:	b510      	push	{r4, lr}
 8015a52:	2104      	movs	r1, #4
 8015a54:	4604      	mov	r4, r0
 8015a56:	f00c f966 	bl	8021d26 <_ZdlPvj>
 8015a5a:	4620      	mov	r0, r4
 8015a5c:	bd10      	pop	{r4, pc}

08015a5e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD0Ev>:
 8015a5e:	b510      	push	{r4, lr}
 8015a60:	2104      	movs	r1, #4
 8015a62:	4604      	mov	r4, r0
 8015a64:	f00c f95f 	bl	8021d26 <_ZdlPvj>
 8015a68:	4620      	mov	r0, r4
 8015a6a:	bd10      	pop	{r4, pc}

08015a6c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD0Ev>:
 8015a6c:	b510      	push	{r4, lr}
 8015a6e:	2104      	movs	r1, #4
 8015a70:	4604      	mov	r4, r0
 8015a72:	f00c f958 	bl	8021d26 <_ZdlPvj>
 8015a76:	4620      	mov	r0, r4
 8015a78:	bd10      	pop	{r4, pc}

08015a7a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD0Ev>:
 8015a7a:	b510      	push	{r4, lr}
 8015a7c:	2104      	movs	r1, #4
 8015a7e:	4604      	mov	r4, r0
 8015a80:	f00c f951 	bl	8021d26 <_ZdlPvj>
 8015a84:	4620      	mov	r0, r4
 8015a86:	bd10      	pop	{r4, pc}

08015a88 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD0Ev>:
 8015a88:	b510      	push	{r4, lr}
 8015a8a:	2104      	movs	r1, #4
 8015a8c:	4604      	mov	r4, r0
 8015a8e:	f00c f94a 	bl	8021d26 <_ZdlPvj>
 8015a92:	4620      	mov	r0, r4
 8015a94:	bd10      	pop	{r4, pc}
	...

08015a98 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h>:
 8015a98:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015a9c:	b08f      	sub	sp, #60	@ 0x3c
 8015a9e:	4616      	mov	r6, r2
 8015aa0:	f89d 2060 	ldrb.w	r2, [sp, #96]	@ 0x60
 8015aa4:	9205      	str	r2, [sp, #20]
 8015aa6:	4682      	mov	sl, r0
 8015aa8:	460d      	mov	r5, r1
 8015aaa:	2a00      	cmp	r2, #0
 8015aac:	f000 82b7 	beq.w	801601e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x586>
 8015ab0:	6830      	ldr	r0, [r6, #0]
 8015ab2:	6871      	ldr	r1, [r6, #4]
 8015ab4:	ac0a      	add	r4, sp, #40	@ 0x28
 8015ab6:	c403      	stmia	r4!, {r0, r1}
 8015ab8:	6818      	ldr	r0, [r3, #0]
 8015aba:	6859      	ldr	r1, [r3, #4]
 8015abc:	ac0c      	add	r4, sp, #48	@ 0x30
 8015abe:	c403      	stmia	r4!, {r0, r1}
 8015ac0:	a80a      	add	r0, sp, #40	@ 0x28
 8015ac2:	f7f9 fd8f 	bl	800f5e4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8015ac6:	4631      	mov	r1, r6
 8015ac8:	a80c      	add	r0, sp, #48	@ 0x30
 8015aca:	f7f9 fdb3 	bl	800f634 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8015ace:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
 8015ad2:	f5b2 6f80 	cmp.w	r2, #1024	@ 0x400
 8015ad6:	bfd7      	itett	le
 8015ad8:	b293      	uxthle	r3, r2
 8015ada:	2301      	movgt	r3, #1
 8015adc:	f44f 6180 	movle.w	r1, #1024	@ 0x400
 8015ae0:	fb91 f3f3 	sdivle	r3, r1, r3
 8015ae4:	9300      	str	r3, [sp, #0]
 8015ae6:	f105 0308 	add.w	r3, r5, #8
 8015aea:	9900      	ldr	r1, [sp, #0]
 8015aec:	9306      	str	r3, [sp, #24]
 8015aee:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	@ 0x2e
 8015af2:	440b      	add	r3, r1
 8015af4:	3b01      	subs	r3, #1
 8015af6:	fb93 f3f1 	sdiv	r3, r3, r1
 8015afa:	9906      	ldr	r1, [sp, #24]
 8015afc:	3b01      	subs	r3, #1
 8015afe:	b29b      	uxth	r3, r3
 8015b00:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 8015b04:	9307      	str	r3, [sp, #28]
 8015b06:	9900      	ldr	r1, [sp, #0]
 8015b08:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 8015b0c:	fb93 f0f1 	sdiv	r0, r3, r1
 8015b10:	b284      	uxth	r4, r0
 8015b12:	9402      	str	r4, [sp, #8]
 8015b14:	9d02      	ldr	r5, [sp, #8]
 8015b16:	9c00      	ldr	r4, [sp, #0]
 8015b18:	f8bd 1030 	ldrh.w	r1, [sp, #48]	@ 0x30
 8015b1c:	fb05 3414 	mls	r4, r5, r4, r3
 8015b20:	fb14 f402 	smulbb	r4, r4, r2
 8015b24:	440c      	add	r4, r1
 8015b26:	b2a4      	uxth	r4, r4
 8015b28:	2d00      	cmp	r5, #0
 8015b2a:	d06c      	beq.n	8015c06 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x16e>
 8015b2c:	1e6a      	subs	r2, r5, #1
 8015b2e:	9806      	ldr	r0, [sp, #24]
 8015b30:	f850 6022 	ldr.w	r6, [r0, r2, lsl #2]
 8015b34:	9a07      	ldr	r2, [sp, #28]
 8015b36:	ba36      	rev	r6, r6
 8015b38:	4416      	add	r6, r2
 8015b3a:	f8bd 2028 	ldrh.w	r2, [sp, #40]	@ 0x28
 8015b3e:	f9bd 5036 	ldrsh.w	r5, [sp, #54]	@ 0x36
 8015b42:	f8df 9334 	ldr.w	r9, [pc, #820]	@ 8015e78 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3e0>
 8015b46:	4411      	add	r1, r2
 8015b48:	f8bd 202a 	ldrh.w	r2, [sp, #42]	@ 0x2a
 8015b4c:	f8ad 1030 	strh.w	r1, [sp, #48]	@ 0x30
 8015b50:	4413      	add	r3, r2
 8015b52:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 8015b56:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
 8015b5a:	9301      	str	r3, [sp, #4]
 8015b5c:	4bc4      	ldr	r3, [pc, #784]	@ (8015e70 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3d8>)
 8015b5e:	6818      	ldr	r0, [r3, #0]
 8015b60:	6803      	ldr	r3, [r0, #0]
 8015b62:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8015b64:	4798      	blx	r3
 8015b66:	4bc3      	ldr	r3, [pc, #780]	@ (8015e74 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3dc>)
 8015b68:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	@ 0x30
 8015b6c:	881b      	ldrh	r3, [r3, #0]
 8015b6e:	f9bd 8032 	ldrsh.w	r8, [sp, #50]	@ 0x32
 8015b72:	fb03 2808 	mla	r8, r3, r8, r2
 8015b76:	eb00 0848 	add.w	r8, r0, r8, lsl #1
 8015b7a:	436b      	muls	r3, r5
 8015b7c:	eb08 0343 	add.w	r3, r8, r3, lsl #1
 8015b80:	9309      	str	r3, [sp, #36]	@ 0x24
 8015b82:	2500      	movs	r5, #0
 8015b84:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 8015b88:	fb94 f3f3 	sdiv	r3, r4, r3
 8015b8c:	9304      	str	r3, [sp, #16]
 8015b8e:	f10a 0304 	add.w	r3, sl, #4
 8015b92:	f44f 7280 	mov.w	r2, #256	@ 0x100
 8015b96:	4629      	mov	r1, r5
 8015b98:	4618      	mov	r0, r3
 8015b9a:	9308      	str	r3, [sp, #32]
 8015b9c:	f00d fb09 	bl	80231b2 <memset>
 8015ba0:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8015ba2:	4543      	cmp	r3, r8
 8015ba4:	f240 8236 	bls.w	8016014 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x57c>
 8015ba8:	2203      	movs	r2, #3
 8015baa:	2107      	movs	r1, #7
 8015bac:	200b      	movs	r0, #11
 8015bae:	2c00      	cmp	r4, #0
 8015bb0:	f000 8131 	beq.w	8015e16 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x37e>
 8015bb4:	7833      	ldrb	r3, [r6, #0]
 8015bb6:	b2db      	uxtb	r3, r3
 8015bb8:	2bfe      	cmp	r3, #254	@ 0xfe
 8015bba:	d126      	bne.n	8015c0a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x172>
 8015bbc:	f896 e001 	ldrb.w	lr, [r6, #1]
 8015bc0:	f896 c002 	ldrb.w	ip, [r6, #2]
 8015bc4:	f896 b003 	ldrb.w	fp, [r6, #3]
 8015bc8:	fa5f fe8e 	uxtb.w	lr, lr
 8015bcc:	fa5f fc8c 	uxtb.w	ip, ip
 8015bd0:	f36e 0507 	bfi	r5, lr, #0, #8
 8015bd4:	f36c 250f 	bfi	r5, ip, #8, #8
 8015bd8:	fa5f fb8b 	uxtb.w	fp, fp
 8015bdc:	eb0c 0c8c 	add.w	ip, ip, ip, lsl #2
 8015be0:	f36b 4517 	bfi	r5, fp, #16, #8
 8015be4:	fb12 cc0b 	smlabb	ip, r2, fp, ip
 8015be8:	0e2b      	lsrs	r3, r5, #24
 8015bea:	fb11 cc0e 	smlabb	ip, r1, lr, ip
 8015bee:	fb10 c303 	smlabb	r3, r0, r3, ip
 8015bf2:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 8015bf6:	eb0a 0383 	add.w	r3, sl, r3, lsl #2
 8015bfa:	3c01      	subs	r4, #1
 8015bfc:	1d37      	adds	r7, r6, #4
 8015bfe:	b2a4      	uxth	r4, r4
 8015c00:	605d      	str	r5, [r3, #4]
 8015c02:	463e      	mov	r6, r7
 8015c04:	e7d3      	b.n	8015bae <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x116>
 8015c06:	9e07      	ldr	r6, [sp, #28]
 8015c08:	e797      	b.n	8015b3a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0xa2>
 8015c0a:	2bff      	cmp	r3, #255	@ 0xff
 8015c0c:	d127      	bne.n	8015c5e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x1c6>
 8015c0e:	f896 c001 	ldrb.w	ip, [r6, #1]
 8015c12:	78b3      	ldrb	r3, [r6, #2]
 8015c14:	f896 e003 	ldrb.w	lr, [r6, #3]
 8015c18:	f896 b004 	ldrb.w	fp, [r6, #4]
 8015c1c:	fa5f fc8c 	uxtb.w	ip, ip
 8015c20:	b2db      	uxtb	r3, r3
 8015c22:	f36c 0507 	bfi	r5, ip, #0, #8
 8015c26:	f363 250f 	bfi	r5, r3, #8, #8
 8015c2a:	fa5f fe8e 	uxtb.w	lr, lr
 8015c2e:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 8015c32:	fb12 330e 	smlabb	r3, r2, lr, r3
 8015c36:	fa5f fb8b 	uxtb.w	fp, fp
 8015c3a:	f36e 4517 	bfi	r5, lr, #16, #8
 8015c3e:	fb11 330c 	smlabb	r3, r1, ip, r3
 8015c42:	f36b 651f 	bfi	r5, fp, #24, #8
 8015c46:	fb10 3b0b 	smlabb	fp, r0, fp, r3
 8015c4a:	f00b 0b3f 	and.w	fp, fp, #63	@ 0x3f
 8015c4e:	eb0a 0b8b 	add.w	fp, sl, fp, lsl #2
 8015c52:	3c01      	subs	r4, #1
 8015c54:	1d77      	adds	r7, r6, #5
 8015c56:	b2a4      	uxth	r4, r4
 8015c58:	f8cb 5004 	str.w	r5, [fp, #4]
 8015c5c:	e7d1      	b.n	8015c02 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x16a>
 8015c5e:	ea5f 1ca3 	movs.w	ip, r3, asr #6
 8015c62:	f106 0701 	add.w	r7, r6, #1
 8015c66:	d107      	bne.n	8015c78 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x1e0>
 8015c68:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 8015c6c:	eb0a 0383 	add.w	r3, sl, r3, lsl #2
 8015c70:	685d      	ldr	r5, [r3, #4]
 8015c72:	3c01      	subs	r4, #1
 8015c74:	b2a4      	uxth	r4, r4
 8015c76:	e7c4      	b.n	8015c02 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x16a>
 8015c78:	f1bc 0f01 	cmp.w	ip, #1
 8015c7c:	d12c      	bne.n	8015cd8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x240>
 8015c7e:	f003 0e03 	and.w	lr, r3, #3
 8015c82:	f1ae 0e02 	sub.w	lr, lr, #2
 8015c86:	eb05 0ece 	add.w	lr, r5, lr, lsl #3
 8015c8a:	fa5f fe8e 	uxtb.w	lr, lr
 8015c8e:	f003 0c0c 	and.w	ip, r3, #12
 8015c92:	f36e 0507 	bfi	r5, lr, #0, #8
 8015c96:	f1ac 0c08 	sub.w	ip, ip, #8
 8015c9a:	eb0c 2c15 	add.w	ip, ip, r5, lsr #8
 8015c9e:	f00c 0cff 	and.w	ip, ip, #255	@ 0xff
 8015ca2:	f36c 250f 	bfi	r5, ip, #8, #8
 8015ca6:	f3c3 1301 	ubfx	r3, r3, #4, #2
 8015caa:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8015cae:	3b02      	subs	r3, #2
 8015cb0:	eb06 03c3 	add.w	r3, r6, r3, lsl #3
 8015cb4:	b2db      	uxtb	r3, r3
 8015cb6:	eb0c 0c8c 	add.w	ip, ip, ip, lsl #2
 8015cba:	f363 4517 	bfi	r5, r3, #16, #8
 8015cbe:	fb12 cc03 	smlabb	ip, r2, r3, ip
 8015cc2:	0e2e      	lsrs	r6, r5, #24
 8015cc4:	fb11 cc0e 	smlabb	ip, r1, lr, ip
 8015cc8:	fb10 c606 	smlabb	r6, r0, r6, ip
 8015ccc:	f006 063f 	and.w	r6, r6, #63	@ 0x3f
 8015cd0:	eb0a 0686 	add.w	r6, sl, r6, lsl #2
 8015cd4:	6075      	str	r5, [r6, #4]
 8015cd6:	e7cc      	b.n	8015c72 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x1da>
 8015cd8:	f1bc 0f02 	cmp.w	ip, #2
 8015cdc:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 8015ce0:	d12a      	bne.n	8015d38 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2a0>
 8015ce2:	1cb7      	adds	r7, r6, #2
 8015ce4:	7876      	ldrb	r6, [r6, #1]
 8015ce6:	b2f6      	uxtb	r6, r6
 8015ce8:	f006 0c0f 	and.w	ip, r6, #15
 8015cec:	3b20      	subs	r3, #32
 8015cee:	f1ac 0c08 	sub.w	ip, ip, #8
 8015cf2:	449c      	add	ip, r3
 8015cf4:	eb05 0ccc 	add.w	ip, r5, ip, lsl #3
 8015cf8:	fa5f fc8c 	uxtb.w	ip, ip
 8015cfc:	f36c 0507 	bfi	r5, ip, #0, #8
 8015d00:	f3c5 2e07 	ubfx	lr, r5, #8, #8
 8015d04:	eb0e 0e83 	add.w	lr, lr, r3, lsl #2
 8015d08:	fa5f fe8e 	uxtb.w	lr, lr
 8015d0c:	1136      	asrs	r6, r6, #4
 8015d0e:	f36e 250f 	bfi	r5, lr, #8, #8
 8015d12:	3e08      	subs	r6, #8
 8015d14:	4433      	add	r3, r6
 8015d16:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8015d1a:	eb06 03c3 	add.w	r3, r6, r3, lsl #3
 8015d1e:	b2db      	uxtb	r3, r3
 8015d20:	eb0e 0e8e 	add.w	lr, lr, lr, lsl #2
 8015d24:	f363 4517 	bfi	r5, r3, #16, #8
 8015d28:	fb12 ee03 	smlabb	lr, r2, r3, lr
 8015d2c:	0e2e      	lsrs	r6, r5, #24
 8015d2e:	fb11 ee0c 	smlabb	lr, r1, ip, lr
 8015d32:	fb10 e606 	smlabb	r6, r0, r6, lr
 8015d36:	e7c9      	b.n	8015ccc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x234>
 8015d38:	1c5e      	adds	r6, r3, #1
 8015d3a:	42a6      	cmp	r6, r4
 8015d3c:	dd4e      	ble.n	8015ddc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x344>
 8015d3e:	1b36      	subs	r6, r6, r4
 8015d40:	2e00      	cmp	r6, #0
 8015d42:	dc4e      	bgt.n	8015de2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x34a>
 8015d44:	f8dd b004 	ldr.w	fp, [sp, #4]
 8015d48:	2400      	movs	r4, #0
 8015d4a:	f1bb 0f00 	cmp.w	fp, #0
 8015d4e:	f340 8122 	ble.w	8015f96 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4fe>
 8015d52:	1c7b      	adds	r3, r7, #1
 8015d54:	9303      	str	r3, [sp, #12]
 8015d56:	783b      	ldrb	r3, [r7, #0]
 8015d58:	b2db      	uxtb	r3, r3
 8015d5a:	2bfe      	cmp	r3, #254	@ 0xfe
 8015d5c:	d160      	bne.n	8015e20 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x388>
 8015d5e:	7879      	ldrb	r1, [r7, #1]
 8015d60:	78ba      	ldrb	r2, [r7, #2]
 8015d62:	78f8      	ldrb	r0, [r7, #3]
 8015d64:	b2c9      	uxtb	r1, r1
 8015d66:	f361 0507 	bfi	r5, r1, #0, #8
 8015d6a:	b2d2      	uxtb	r2, r2
 8015d6c:	1d3b      	adds	r3, r7, #4
 8015d6e:	f362 250f 	bfi	r5, r2, #8, #8
 8015d72:	b2c0      	uxtb	r0, r0
 8015d74:	9303      	str	r3, [sp, #12]
 8015d76:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 8015d7a:	2303      	movs	r3, #3
 8015d7c:	fb13 2200 	smlabb	r2, r3, r0, r2
 8015d80:	f360 4517 	bfi	r5, r0, #16, #8
 8015d84:	2307      	movs	r3, #7
 8015d86:	fb13 2101 	smlabb	r1, r3, r1, r2
 8015d8a:	0e2e      	lsrs	r6, r5, #24
 8015d8c:	230b      	movs	r3, #11
 8015d8e:	fb13 1306 	smlabb	r3, r3, r6, r1
 8015d92:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 8015d96:	eb0a 0383 	add.w	r3, sl, r3, lsl #2
 8015d9a:	605d      	str	r5, [r3, #4]
 8015d9c:	2601      	movs	r6, #1
 8015d9e:	4637      	mov	r7, r6
 8015da0:	0e2b      	lsrs	r3, r5, #24
 8015da2:	ebab 0b07 	sub.w	fp, fp, r7
 8015da6:	eba6 0607 	sub.w	r6, r6, r7
 8015daa:	f040 80d3 	bne.w	8015f54 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4bc>
 8015dae:	b18c      	cbz	r4, 8015dd4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x33c>
 8015db0:	4648      	mov	r0, r9
 8015db2:	00a1      	lsls	r1, r4, #2
 8015db4:	f7eb fd88 	bl	80018c8 <_ZN8touchgfx5paint9flushLineEPmi>
 8015db8:	9b05      	ldr	r3, [sp, #20]
 8015dba:	4622      	mov	r2, r4
 8015dbc:	4649      	mov	r1, r9
 8015dbe:	4640      	mov	r0, r8
 8015dc0:	f7eb fdd0 	bl	8001964 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh>
 8015dc4:	4b2c      	ldr	r3, [pc, #176]	@ (8015e78 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3e0>)
 8015dc6:	4a2d      	ldr	r2, [pc, #180]	@ (8015e7c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3e4>)
 8015dc8:	4599      	cmp	r9, r3
 8015dca:	bf08      	it	eq
 8015dcc:	4613      	moveq	r3, r2
 8015dce:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 8015dd2:	4699      	mov	r9, r3
 8015dd4:	eb08 0847 	add.w	r8, r8, r7, lsl #1
 8015dd8:	2400      	movs	r4, #0
 8015dda:	e0da      	b.n	8015f92 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4fa>
 8015ddc:	1ba6      	subs	r6, r4, r6
 8015dde:	b2b4      	uxth	r4, r6
 8015de0:	e70f      	b.n	8015c02 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x16a>
 8015de2:	9b01      	ldr	r3, [sp, #4]
 8015de4:	9a01      	ldr	r2, [sp, #4]
 8015de6:	42b3      	cmp	r3, r6
 8015de8:	bfa8      	it	ge
 8015dea:	4633      	movge	r3, r6
 8015dec:	0e2c      	lsrs	r4, r5, #24
 8015dee:	eba2 0b03 	sub.w	fp, r2, r3
 8015df2:	eba6 0603 	sub.w	r6, r6, r3
 8015df6:	d00b      	beq.n	8015e10 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x378>
 8015df8:	f1a9 0104 	sub.w	r1, r9, #4
 8015dfc:	461a      	mov	r2, r3
 8015dfe:	2a00      	cmp	r2, #0
 8015e00:	dc02      	bgt.n	8015e08 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x370>
 8015e02:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8015e06:	e7a0      	b.n	8015d4a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2b2>
 8015e08:	f841 5f04 	str.w	r5, [r1, #4]!
 8015e0c:	3a01      	subs	r2, #1
 8015e0e:	e7f6      	b.n	8015dfe <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x366>
 8015e10:	eb08 0843 	add.w	r8, r8, r3, lsl #1
 8015e14:	e799      	b.n	8015d4a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2b2>
 8015e16:	4637      	mov	r7, r6
 8015e18:	f8dd b004 	ldr.w	fp, [sp, #4]
 8015e1c:	4626      	mov	r6, r4
 8015e1e:	e794      	b.n	8015d4a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2b2>
 8015e20:	2bff      	cmp	r3, #255	@ 0xff
 8015e22:	d11d      	bne.n	8015e60 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3c8>
 8015e24:	7878      	ldrb	r0, [r7, #1]
 8015e26:	78ba      	ldrb	r2, [r7, #2]
 8015e28:	78fe      	ldrb	r6, [r7, #3]
 8015e2a:	1d7b      	adds	r3, r7, #5
 8015e2c:	b2c0      	uxtb	r0, r0
 8015e2e:	9303      	str	r3, [sp, #12]
 8015e30:	793b      	ldrb	r3, [r7, #4]
 8015e32:	f360 0507 	bfi	r5, r0, #0, #8
 8015e36:	b2d2      	uxtb	r2, r2
 8015e38:	b2d9      	uxtb	r1, r3
 8015e3a:	f362 250f 	bfi	r5, r2, #8, #8
 8015e3e:	b2f6      	uxtb	r6, r6
 8015e40:	2303      	movs	r3, #3
 8015e42:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 8015e46:	fb13 2206 	smlabb	r2, r3, r6, r2
 8015e4a:	2307      	movs	r3, #7
 8015e4c:	fb13 2000 	smlabb	r0, r3, r0, r2
 8015e50:	f366 4517 	bfi	r5, r6, #16, #8
 8015e54:	230b      	movs	r3, #11
 8015e56:	f361 651f 	bfi	r5, r1, #24, #8
 8015e5a:	fb13 0301 	smlabb	r3, r3, r1, r0
 8015e5e:	e798      	b.n	8015d92 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2fa>
 8015e60:	119e      	asrs	r6, r3, #6
 8015e62:	d10d      	bne.n	8015e80 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3e8>
 8015e64:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 8015e68:	eb0a 0383 	add.w	r3, sl, r3, lsl #2
 8015e6c:	685d      	ldr	r5, [r3, #4]
 8015e6e:	e795      	b.n	8015d9c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x304>
 8015e70:	200133d4 	.word	0x200133d4
 8015e74:	200133cc 	.word	0x200133cc
 8015e78:	20000280 	.word	0x20000280
 8015e7c:	20000380 	.word	0x20000380
 8015e80:	2e01      	cmp	r6, #1
 8015e82:	ea4f 6115 	mov.w	r1, r5, lsr #24
 8015e86:	d12b      	bne.n	8015ee0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x448>
 8015e88:	f003 0003 	and.w	r0, r3, #3
 8015e8c:	3802      	subs	r0, #2
 8015e8e:	eb05 00c0 	add.w	r0, r5, r0, lsl #3
 8015e92:	b2c0      	uxtb	r0, r0
 8015e94:	f003 020c 	and.w	r2, r3, #12
 8015e98:	f360 0507 	bfi	r5, r0, #0, #8
 8015e9c:	3a08      	subs	r2, #8
 8015e9e:	eb02 2215 	add.w	r2, r2, r5, lsr #8
 8015ea2:	f002 02ff 	and.w	r2, r2, #255	@ 0xff
 8015ea6:	f362 250f 	bfi	r5, r2, #8, #8
 8015eaa:	f3c3 1301 	ubfx	r3, r3, #4, #2
 8015eae:	1e9f      	subs	r7, r3, #2
 8015eb0:	f3c5 4307 	ubfx	r3, r5, #16, #8
 8015eb4:	eb03 03c7 	add.w	r3, r3, r7, lsl #3
 8015eb8:	b2db      	uxtb	r3, r3
 8015eba:	2703      	movs	r7, #3
 8015ebc:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 8015ec0:	fb17 2203 	smlabb	r2, r7, r3, r2
 8015ec4:	2707      	movs	r7, #7
 8015ec6:	f363 4517 	bfi	r5, r3, #16, #8
 8015eca:	fb17 2000 	smlabb	r0, r7, r0, r2
 8015ece:	230b      	movs	r3, #11
 8015ed0:	fb13 0101 	smlabb	r1, r3, r1, r0
 8015ed4:	f001 013f 	and.w	r1, r1, #63	@ 0x3f
 8015ed8:	eb0a 0181 	add.w	r1, sl, r1, lsl #2
 8015edc:	604d      	str	r5, [r1, #4]
 8015ede:	e75e      	b.n	8015d9e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x306>
 8015ee0:	2e02      	cmp	r6, #2
 8015ee2:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 8015ee6:	d12f      	bne.n	8015f48 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4b0>
 8015ee8:	7878      	ldrb	r0, [r7, #1]
 8015eea:	1cba      	adds	r2, r7, #2
 8015eec:	b2c0      	uxtb	r0, r0
 8015eee:	9203      	str	r2, [sp, #12]
 8015ef0:	f000 020f 	and.w	r2, r0, #15
 8015ef4:	3b20      	subs	r3, #32
 8015ef6:	3a08      	subs	r2, #8
 8015ef8:	441a      	add	r2, r3
 8015efa:	eb05 02c2 	add.w	r2, r5, r2, lsl #3
 8015efe:	b2d2      	uxtb	r2, r2
 8015f00:	f362 0507 	bfi	r5, r2, #0, #8
 8015f04:	f3c5 2607 	ubfx	r6, r5, #8, #8
 8015f08:	eb06 0683 	add.w	r6, r6, r3, lsl #2
 8015f0c:	b2f6      	uxtb	r6, r6
 8015f0e:	1100      	asrs	r0, r0, #4
 8015f10:	f366 250f 	bfi	r5, r6, #8, #8
 8015f14:	3808      	subs	r0, #8
 8015f16:	4403      	add	r3, r0
 8015f18:	f3c5 4007 	ubfx	r0, r5, #16, #8
 8015f1c:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 8015f20:	b2db      	uxtb	r3, r3
 8015f22:	2003      	movs	r0, #3
 8015f24:	eb06 0686 	add.w	r6, r6, r6, lsl #2
 8015f28:	fb10 6603 	smlabb	r6, r0, r3, r6
 8015f2c:	2007      	movs	r0, #7
 8015f2e:	f363 4517 	bfi	r5, r3, #16, #8
 8015f32:	fb10 6202 	smlabb	r2, r0, r2, r6
 8015f36:	230b      	movs	r3, #11
 8015f38:	fb13 2101 	smlabb	r1, r3, r1, r2
 8015f3c:	f001 013f 	and.w	r1, r1, #63	@ 0x3f
 8015f40:	eb0a 0181 	add.w	r1, sl, r1, lsl #2
 8015f44:	604d      	str	r5, [r1, #4]
 8015f46:	e729      	b.n	8015d9c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x304>
 8015f48:	1c5e      	adds	r6, r3, #1
 8015f4a:	45b3      	cmp	fp, r6
 8015f4c:	465f      	mov	r7, fp
 8015f4e:	bfa8      	it	ge
 8015f50:	4637      	movge	r7, r6
 8015f52:	e725      	b.n	8015da0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x308>
 8015f54:	193b      	adds	r3, r7, r4
 8015f56:	2b40      	cmp	r3, #64	@ 0x40
 8015f58:	dd13      	ble.n	8015f82 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4ea>
 8015f5a:	4648      	mov	r0, r9
 8015f5c:	00a1      	lsls	r1, r4, #2
 8015f5e:	f7eb fcb3 	bl	80018c8 <_ZN8touchgfx5paint9flushLineEPmi>
 8015f62:	4649      	mov	r1, r9
 8015f64:	9b05      	ldr	r3, [sp, #20]
 8015f66:	4622      	mov	r2, r4
 8015f68:	4640      	mov	r0, r8
 8015f6a:	f7eb fcfb 	bl	8001964 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh>
 8015f6e:	4b2d      	ldr	r3, [pc, #180]	@ (8016024 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x58c>)
 8015f70:	4599      	cmp	r9, r3
 8015f72:	bf0c      	ite	eq
 8015f74:	f8df 90b8 	ldreq.w	r9, [pc, #184]	@ 8016030 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x598>
 8015f78:	f8df 90a8 	ldrne.w	r9, [pc, #168]	@ 8016024 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x58c>
 8015f7c:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 8015f80:	2400      	movs	r4, #0
 8015f82:	eb09 0284 	add.w	r2, r9, r4, lsl #2
 8015f86:	463b      	mov	r3, r7
 8015f88:	3b01      	subs	r3, #1
 8015f8a:	f842 5b04 	str.w	r5, [r2], #4
 8015f8e:	d1fb      	bne.n	8015f88 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4f0>
 8015f90:	443c      	add	r4, r7
 8015f92:	9f03      	ldr	r7, [sp, #12]
 8015f94:	e6d9      	b.n	8015d4a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2b2>
 8015f96:	b15c      	cbz	r4, 8015fb0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x518>
 8015f98:	00a1      	lsls	r1, r4, #2
 8015f9a:	4648      	mov	r0, r9
 8015f9c:	f7eb fc94 	bl	80018c8 <_ZN8touchgfx5paint9flushLineEPmi>
 8015fa0:	4640      	mov	r0, r8
 8015fa2:	9b05      	ldr	r3, [sp, #20]
 8015fa4:	4622      	mov	r2, r4
 8015fa6:	4649      	mov	r1, r9
 8015fa8:	f7eb fcdc 	bl	8001964 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh>
 8015fac:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 8015fb0:	4b1d      	ldr	r3, [pc, #116]	@ (8016028 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x590>)
 8015fb2:	9a01      	ldr	r2, [sp, #4]
 8015fb4:	881b      	ldrh	r3, [r3, #0]
 8015fb6:	1a9b      	subs	r3, r3, r2
 8015fb8:	eb08 0843 	add.w	r8, r8, r3, lsl #1
 8015fbc:	9b04      	ldr	r3, [sp, #16]
 8015fbe:	3301      	adds	r3, #1
 8015fc0:	9304      	str	r3, [sp, #16]
 8015fc2:	9a04      	ldr	r2, [sp, #16]
 8015fc4:	9b00      	ldr	r3, [sp, #0]
 8015fc6:	4293      	cmp	r3, r2
 8015fc8:	d11d      	bne.n	8016006 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x56e>
 8015fca:	9b02      	ldr	r3, [sp, #8]
 8015fcc:	9a02      	ldr	r2, [sp, #8]
 8015fce:	f8bd 4030 	ldrh.w	r4, [sp, #48]	@ 0x30
 8015fd2:	f8bd 6028 	ldrh.w	r6, [sp, #40]	@ 0x28
 8015fd6:	9808      	ldr	r0, [sp, #32]
 8015fd8:	f103 0b01 	add.w	fp, r3, #1
 8015fdc:	9b06      	ldr	r3, [sp, #24]
 8015fde:	f853 7022 	ldr.w	r7, [r3, r2, lsl #2]
 8015fe2:	9b07      	ldr	r3, [sp, #28]
 8015fe4:	2500      	movs	r5, #0
 8015fe6:	ba3f      	rev	r7, r7
 8015fe8:	1ba4      	subs	r4, r4, r6
 8015fea:	f44f 7280 	mov.w	r2, #256	@ 0x100
 8015fee:	4629      	mov	r1, r5
 8015ff0:	441f      	add	r7, r3
 8015ff2:	b2a4      	uxth	r4, r4
 8015ff4:	f00d f8dd 	bl	80231b2 <memset>
 8015ff8:	f8cd b008 	str.w	fp, [sp, #8]
 8015ffc:	9504      	str	r5, [sp, #16]
 8015ffe:	f7eb fc59 	bl	80018b4 <_ZN8touchgfx5paint8tearDownEv>
 8016002:	463e      	mov	r6, r7
 8016004:	e5cc      	b.n	8015ba0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x108>
 8016006:	f8bd 402c 	ldrh.w	r4, [sp, #44]	@ 0x2c
 801600a:	9b01      	ldr	r3, [sp, #4]
 801600c:	1ae4      	subs	r4, r4, r3
 801600e:	1ba4      	subs	r4, r4, r6
 8016010:	b2a4      	uxth	r4, r4
 8016012:	e7f4      	b.n	8015ffe <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x566>
 8016014:	4b05      	ldr	r3, [pc, #20]	@ (801602c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x594>)
 8016016:	6818      	ldr	r0, [r3, #0]
 8016018:	6803      	ldr	r3, [r0, #0]
 801601a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 801601c:	4798      	blx	r3
 801601e:	b00f      	add	sp, #60	@ 0x3c
 8016020:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016024:	20000280 	.word	0x20000280
 8016028:	200133cc 	.word	0x200133cc
 801602c:	200133d4 	.word	0x200133d4
 8016030:	20000380 	.word	0x20000380

08016034 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 8016034:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016038:	b08f      	sub	sp, #60	@ 0x3c
 801603a:	461c      	mov	r4, r3
 801603c:	9205      	str	r2, [sp, #20]
 801603e:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 8016042:	9100      	str	r1, [sp, #0]
 8016044:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 8016046:	9201      	str	r2, [sp, #4]
 8016048:	2a00      	cmp	r2, #0
 801604a:	f000 8115 	beq.w	8016278 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x244>
 801604e:	6820      	ldr	r0, [r4, #0]
 8016050:	6861      	ldr	r1, [r4, #4]
 8016052:	aa0a      	add	r2, sp, #40	@ 0x28
 8016054:	c203      	stmia	r2!, {r0, r1}
 8016056:	6818      	ldr	r0, [r3, #0]
 8016058:	6859      	ldr	r1, [r3, #4]
 801605a:	aa0c      	add	r2, sp, #48	@ 0x30
 801605c:	c203      	stmia	r2!, {r0, r1}
 801605e:	a80a      	add	r0, sp, #40	@ 0x28
 8016060:	f7f9 fac0 	bl	800f5e4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8016064:	4621      	mov	r1, r4
 8016066:	a80c      	add	r0, sp, #48	@ 0x30
 8016068:	f7f9 fae4 	bl	800f634 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801606c:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	@ 0x2c
 8016070:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	@ 0x2e
 8016074:	f8bd 0030 	ldrh.w	r0, [sp, #48]	@ 0x30
 8016078:	f5b6 6f80 	cmp.w	r6, #1024	@ 0x400
 801607c:	bfde      	ittt	le
 801607e:	b2b3      	uxthle	r3, r6
 8016080:	f44f 6280 	movle.w	r2, #1024	@ 0x400
 8016084:	fb92 f3f3 	sdivle	r3, r2, r3
 8016088:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
 801608c:	bfc8      	it	gt
 801608e:	2301      	movgt	r3, #1
 8016090:	fb92 f1f3 	sdiv	r1, r2, r3
 8016094:	fa1f fc81 	uxth.w	ip, r1
 8016098:	fb0c 2413 	mls	r4, ip, r3, r2
 801609c:	fb14 f406 	smulbb	r4, r4, r6
 80160a0:	441d      	add	r5, r3
 80160a2:	4404      	add	r4, r0
 80160a4:	4661      	mov	r1, ip
 80160a6:	3d01      	subs	r5, #1
 80160a8:	b2a4      	uxth	r4, r4
 80160aa:	fb95 f5f3 	sdiv	r5, r5, r3
 80160ae:	b131      	cbz	r1, 80160be <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x8a>
 80160b0:	9b05      	ldr	r3, [sp, #20]
 80160b2:	9900      	ldr	r1, [sp, #0]
 80160b4:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 80160b8:	ba1b      	rev	r3, r3
 80160ba:	4419      	add	r1, r3
 80160bc:	9100      	str	r1, [sp, #0]
 80160be:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 80160c2:	f9bd 8034 	ldrsh.w	r8, [sp, #52]	@ 0x34
 80160c6:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	@ 0x36
 80160ca:	4418      	add	r0, r3
 80160cc:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 80160d0:	f8ad 0030 	strh.w	r0, [sp, #48]	@ 0x30
 80160d4:	441a      	add	r2, r3
 80160d6:	4b6a      	ldr	r3, [pc, #424]	@ (8016280 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
 80160d8:	f8ad 2032 	strh.w	r2, [sp, #50]	@ 0x32
 80160dc:	6818      	ldr	r0, [r3, #0]
 80160de:	6803      	ldr	r3, [r0, #0]
 80160e0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80160e2:	4798      	blx	r3
 80160e4:	4967      	ldr	r1, [pc, #412]	@ (8016284 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x250>)
 80160e6:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
 80160ea:	880b      	ldrh	r3, [r1, #0]
 80160ec:	f9bd c030 	ldrsh.w	ip, [sp, #48]	@ 0x30
 80160f0:	9109      	str	r1, [sp, #36]	@ 0x24
 80160f2:	fb03 c202 	mla	r2, r3, r2, ip
 80160f6:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 80160fa:	4373      	muls	r3, r6
 80160fc:	b2ad      	uxth	r5, r5
 80160fe:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8016102:	00ad      	lsls	r5, r5, #2
 8016104:	9306      	str	r3, [sp, #24]
 8016106:	1d2b      	adds	r3, r5, #4
 8016108:	9307      	str	r3, [sp, #28]
 801610a:	9b01      	ldr	r3, [sp, #4]
 801610c:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 8016110:	9103      	str	r1, [sp, #12]
 8016112:	f1c3 02ff 	rsb	r2, r3, #255	@ 0xff
 8016116:	2c00      	cmp	r4, #0
 8016118:	bf0c      	ite	eq
 801611a:	46c6      	moveq	lr, r8
 801611c:	f04f 0e00 	movne.w	lr, #0
 8016120:	2300      	movs	r3, #0
 8016122:	b292      	uxth	r2, r2
 8016124:	fa1f fe8e 	uxth.w	lr, lr
 8016128:	9302      	str	r3, [sp, #8]
 801612a:	9204      	str	r2, [sp, #16]
 801612c:	9a06      	ldr	r2, [sp, #24]
 801612e:	4282      	cmp	r2, r0
 8016130:	f240 809d 	bls.w	801626e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x23a>
 8016134:	b963      	cbnz	r3, 8016150 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11c>
 8016136:	9b00      	ldr	r3, [sp, #0]
 8016138:	781a      	ldrb	r2, [r3, #0]
 801613a:	0993      	lsrs	r3, r2, #6
 801613c:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 8016140:	9202      	str	r2, [sp, #8]
 8016142:	1e5a      	subs	r2, r3, #1
 8016144:	2a02      	cmp	r2, #2
 8016146:	d815      	bhi.n	8016174 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x140>
 8016148:	9a00      	ldr	r2, [sp, #0]
 801614a:	3201      	adds	r2, #1
 801614c:	9200      	str	r2, [sp, #0]
 801614e:	b29b      	uxth	r3, r3
 8016150:	b1b4      	cbz	r4, 8016180 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x14c>
 8016152:	429c      	cmp	r4, r3
 8016154:	bf95      	itete	ls
 8016156:	1b1c      	subls	r4, r3, r4
 8016158:	1ae4      	subhi	r4, r4, r3
 801615a:	fa1f fa84 	uxthls.w	sl, r4
 801615e:	b2a4      	uxthhi	r4, r4
 8016160:	bf87      	ittee	hi
 8016162:	4671      	movhi	r1, lr
 8016164:	f04f 0a00 	movhi.w	sl, #0
 8016168:	fa1f f188 	uxthls.w	r1, r8
 801616c:	2400      	movls	r4, #0
 801616e:	4653      	mov	r3, sl
 8016170:	468e      	mov	lr, r1
 8016172:	e7db      	b.n	801612c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xf8>
 8016174:	9a00      	ldr	r2, [sp, #0]
 8016176:	9b00      	ldr	r3, [sp, #0]
 8016178:	3202      	adds	r2, #2
 801617a:	785b      	ldrb	r3, [r3, #1]
 801617c:	9200      	str	r2, [sp, #0]
 801617e:	e7e7      	b.n	8016150 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11c>
 8016180:	2202      	movs	r2, #2
 8016182:	4615      	mov	r5, r2
 8016184:	9907      	ldr	r1, [sp, #28]
 8016186:	9a02      	ldr	r2, [sp, #8]
 8016188:	fb15 1202 	smlabb	r2, r5, r2, r1
 801618c:	9905      	ldr	r1, [sp, #20]
 801618e:	4573      	cmp	r3, lr
 8016190:	f831 c002 	ldrh.w	ip, [r1, r2]
 8016194:	9a01      	ldr	r2, [sp, #4]
 8016196:	bf2b      	itete	cs
 8016198:	eba3 0a0e 	subcs.w	sl, r3, lr
 801619c:	ebae 0103 	subcc.w	r1, lr, r3
 80161a0:	46f1      	movcs	r9, lr
 80161a2:	4699      	movcc	r9, r3
 80161a4:	bf27      	ittee	cs
 80161a6:	fa1f fa8a 	uxthcs.w	sl, sl
 80161aa:	4621      	movcs	r1, r4
 80161ac:	b289      	uxthcc	r1, r1
 80161ae:	46a2      	movcc	sl, r4
 80161b0:	2aff      	cmp	r2, #255	@ 0xff
 80161b2:	ea4f 0949 	mov.w	r9, r9, lsl #1
 80161b6:	d105      	bne.n	80161c4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x190>
 80161b8:	4481      	add	r9, r0
 80161ba:	4581      	cmp	r9, r0
 80161bc:	d045      	beq.n	801624a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x216>
 80161be:	f820 cb02 	strh.w	ip, [r0], #2
 80161c2:	e7fa      	b.n	80161ba <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x186>
 80161c4:	9d03      	ldr	r5, [sp, #12]
 80161c6:	ea4f 222c 	mov.w	r2, ip, asr #8
 80161ca:	ea4f 0bec 	mov.w	fp, ip, asr #3
 80161ce:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 80161d2:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80161d6:	436a      	muls	r2, r5
 80161d8:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
 80161dc:	fa5f fc8c 	uxtb.w	ip, ip
 80161e0:	9208      	str	r2, [sp, #32]
 80161e2:	fb0b fb05 	mul.w	fp, fp, r5
 80161e6:	fb0c fc05 	mul.w	ip, ip, r5
 80161ea:	4481      	add	r9, r0
 80161ec:	4581      	cmp	r9, r0
 80161ee:	d02c      	beq.n	801624a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x216>
 80161f0:	8802      	ldrh	r2, [r0, #0]
 80161f2:	9d04      	ldr	r5, [sp, #16]
 80161f4:	9f04      	ldr	r7, [sp, #16]
 80161f6:	1216      	asrs	r6, r2, #8
 80161f8:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 80161fc:	fb16 f605 	smulbb	r6, r6, r5
 8016200:	9d08      	ldr	r5, [sp, #32]
 8016202:	442e      	add	r6, r5
 8016204:	10d5      	asrs	r5, r2, #3
 8016206:	00d2      	lsls	r2, r2, #3
 8016208:	b2d2      	uxtb	r2, r2
 801620a:	fb12 f207 	smulbb	r2, r2, r7
 801620e:	b2b6      	uxth	r6, r6
 8016210:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 8016214:	4462      	add	r2, ip
 8016216:	fb15 f507 	smulbb	r5, r5, r7
 801621a:	b292      	uxth	r2, r2
 801621c:	1c77      	adds	r7, r6, #1
 801621e:	eb07 2616 	add.w	r6, r7, r6, lsr #8
 8016222:	1c57      	adds	r7, r2, #1
 8016224:	445d      	add	r5, fp
 8016226:	eb07 2212 	add.w	r2, r7, r2, lsr #8
 801622a:	b2ad      	uxth	r5, r5
 801622c:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8016230:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
 8016234:	4316      	orrs	r6, r2
 8016236:	1c6a      	adds	r2, r5, #1
 8016238:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 801623c:	096d      	lsrs	r5, r5, #5
 801623e:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8016242:	432e      	orrs	r6, r5
 8016244:	f820 6b02 	strh.w	r6, [r0], #2
 8016248:	e7d0      	b.n	80161ec <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1b8>
 801624a:	4573      	cmp	r3, lr
 801624c:	d38f      	bcc.n	801616e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13a>
 801624e:	f8bd 402c 	ldrh.w	r4, [sp, #44]	@ 0x2c
 8016252:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8016254:	fa1f f188 	uxth.w	r1, r8
 8016258:	1a64      	subs	r4, r4, r1
 801625a:	881b      	ldrh	r3, [r3, #0]
 801625c:	b2a4      	uxth	r4, r4
 801625e:	2c00      	cmp	r4, #0
 8016260:	eba3 0308 	sub.w	r3, r3, r8
 8016264:	bf18      	it	ne
 8016266:	2100      	movne	r1, #0
 8016268:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801626c:	e77f      	b.n	801616e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13a>
 801626e:	4b04      	ldr	r3, [pc, #16]	@ (8016280 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
 8016270:	6818      	ldr	r0, [r3, #0]
 8016272:	6803      	ldr	r3, [r0, #0]
 8016274:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8016276:	4798      	blx	r3
 8016278:	b00f      	add	sp, #60	@ 0x3c
 801627a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801627e:	bf00      	nop
 8016280:	200133d4 	.word	0x200133d4
 8016284:	200133cc 	.word	0x200133cc

08016288 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 8016288:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801628c:	b09f      	sub	sp, #124	@ 0x7c
 801628e:	e9cd 1213 	strd	r1, r2, [sp, #76]	@ 0x4c
 8016292:	f89d 20a4 	ldrb.w	r2, [sp, #164]	@ 0xa4
 8016296:	9209      	str	r2, [sp, #36]	@ 0x24
 8016298:	461d      	mov	r5, r3
 801629a:	4604      	mov	r4, r0
 801629c:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801629e:	2a00      	cmp	r2, #0
 80162a0:	f000 81eb 	beq.w	801667a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3f2>
 80162a4:	6828      	ldr	r0, [r5, #0]
 80162a6:	6869      	ldr	r1, [r5, #4]
 80162a8:	aa1a      	add	r2, sp, #104	@ 0x68
 80162aa:	c203      	stmia	r2!, {r0, r1}
 80162ac:	6818      	ldr	r0, [r3, #0]
 80162ae:	6859      	ldr	r1, [r3, #4]
 80162b0:	aa1c      	add	r2, sp, #112	@ 0x70
 80162b2:	c203      	stmia	r2!, {r0, r1}
 80162b4:	a81a      	add	r0, sp, #104	@ 0x68
 80162b6:	f7f9 f995 	bl	800f5e4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80162ba:	4629      	mov	r1, r5
 80162bc:	a81c      	add	r0, sp, #112	@ 0x70
 80162be:	f7f9 f9b9 	bl	800f634 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80162c2:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	@ 0x6c
 80162c6:	f9bd 806e 	ldrsh.w	r8, [sp, #110]	@ 0x6e
 80162ca:	f9bd 6076 	ldrsh.w	r6, [sp, #118]	@ 0x76
 80162ce:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 80162d2:	bfd7      	itett	le
 80162d4:	b29a      	uxthle	r2, r3
 80162d6:	2201      	movgt	r2, #1
 80162d8:	f44f 6180 	movle.w	r1, #1024	@ 0x400
 80162dc:	fb91 f2f2 	sdivle	r2, r1, r2
 80162e0:	9202      	str	r2, [sp, #8]
 80162e2:	9802      	ldr	r0, [sp, #8]
 80162e4:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	@ 0x72
 80162e8:	fb92 f0f0 	sdiv	r0, r2, r0
 80162ec:	b280      	uxth	r0, r0
 80162ee:	9010      	str	r0, [sp, #64]	@ 0x40
 80162f0:	9902      	ldr	r1, [sp, #8]
 80162f2:	9802      	ldr	r0, [sp, #8]
 80162f4:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 80162f6:	4488      	add	r8, r1
 80162f8:	fb05 2510 	mls	r5, r5, r0, r2
 80162fc:	fb15 f503 	smulbb	r5, r5, r3
 8016300:	f108 38ff 	add.w	r8, r8, #4294967295
 8016304:	f8bd 3068 	ldrh.w	r3, [sp, #104]	@ 0x68
 8016308:	fb98 f8f1 	sdiv	r8, r8, r1
 801630c:	f8bd 1070 	ldrh.w	r1, [sp, #112]	@ 0x70
 8016310:	440d      	add	r5, r1
 8016312:	4419      	add	r1, r3
 8016314:	f8bd 306a 	ldrh.w	r3, [sp, #106]	@ 0x6a
 8016318:	f8ad 1070 	strh.w	r1, [sp, #112]	@ 0x70
 801631c:	441a      	add	r2, r3
 801631e:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	@ 0x74
 8016322:	9304      	str	r3, [sp, #16]
 8016324:	4b95      	ldr	r3, [pc, #596]	@ (801657c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2f4>)
 8016326:	f8ad 2072 	strh.w	r2, [sp, #114]	@ 0x72
 801632a:	6818      	ldr	r0, [r3, #0]
 801632c:	6803      	ldr	r3, [r0, #0]
 801632e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8016330:	4798      	blx	r3
 8016332:	4b93      	ldr	r3, [pc, #588]	@ (8016580 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2f8>)
 8016334:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	@ 0x72
 8016338:	881a      	ldrh	r2, [r3, #0]
 801633a:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	@ 0x70
 801633e:	9318      	str	r3, [sp, #96]	@ 0x60
 8016340:	fb02 7101 	mla	r1, r2, r1, r7
 8016344:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 8016348:	4356      	muls	r6, r2
 801634a:	eb00 0246 	add.w	r2, r0, r6, lsl #1
 801634e:	f108 0801 	add.w	r8, r8, #1
 8016352:	920a      	str	r2, [sp, #40]	@ 0x28
 8016354:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8016356:	f8bd 3024 	ldrh.w	r3, [sp, #36]	@ 0x24
 801635a:	930f      	str	r3, [sp, #60]	@ 0x3c
 801635c:	fa1f f888 	uxth.w	r8, r8
 8016360:	eb02 0888 	add.w	r8, r2, r8, lsl #2
 8016364:	f108 0204 	add.w	r2, r8, #4
 8016368:	9211      	str	r2, [sp, #68]	@ 0x44
 801636a:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 801636c:	4b85      	ldr	r3, [pc, #532]	@ (8016584 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2fc>)
 801636e:	f1c2 02ff 	rsb	r2, r2, #255	@ 0xff
 8016372:	b2ad      	uxth	r5, r5
 8016374:	9215      	str	r2, [sp, #84]	@ 0x54
 8016376:	2d00      	cmp	r5, #0
 8016378:	9a04      	ldr	r2, [sp, #16]
 801637a:	f04f 0100 	mov.w	r1, #0
 801637e:	bf18      	it	ne
 8016380:	2200      	movne	r2, #0
 8016382:	1b1b      	subs	r3, r3, r4
 8016384:	b292      	uxth	r2, r2
 8016386:	910d      	str	r1, [sp, #52]	@ 0x34
 8016388:	9319      	str	r3, [sp, #100]	@ 0x64
 801638a:	9910      	ldr	r1, [sp, #64]	@ 0x40
 801638c:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801638e:	fa11 f383 	uxtah	r3, r1, r3
 8016392:	9914      	ldr	r1, [sp, #80]	@ 0x50
 8016394:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 8016398:	3304      	adds	r3, #4
 801639a:	9306      	str	r3, [sp, #24]
 801639c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801639e:	4283      	cmp	r3, r0
 80163a0:	f240 8166 	bls.w	8016670 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3e8>
 80163a4:	9902      	ldr	r1, [sp, #8]
 80163a6:	f8bd 306c 	ldrh.w	r3, [sp, #108]	@ 0x6c
 80163aa:	fbb5 f3f3 	udiv	r3, r5, r3
 80163ae:	1acb      	subs	r3, r1, r3
 80163b0:	b29b      	uxth	r3, r3
 80163b2:	9316      	str	r3, [sp, #88]	@ 0x58
 80163b4:	9b06      	ldr	r3, [sp, #24]
 80163b6:	9e06      	ldr	r6, [sp, #24]
 80163b8:	7859      	ldrb	r1, [r3, #1]
 80163ba:	789b      	ldrb	r3, [r3, #2]
 80163bc:	7836      	ldrb	r6, [r6, #0]
 80163be:	9612      	str	r6, [sp, #72]	@ 0x48
 80163c0:	021b      	lsls	r3, r3, #8
 80163c2:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 80163c6:	9906      	ldr	r1, [sp, #24]
 80163c8:	78c9      	ldrb	r1, [r1, #3]
 80163ca:	430b      	orrs	r3, r1
 80163cc:	9913      	ldr	r1, [sp, #76]	@ 0x4c
 80163ce:	3601      	adds	r6, #1
 80163d0:	4419      	add	r1, r3
 80163d2:	9605      	str	r6, [sp, #20]
 80163d4:	1c4e      	adds	r6, r1, #1
 80163d6:	9603      	str	r6, [sp, #12]
 80163d8:	7849      	ldrb	r1, [r1, #1]
 80163da:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 80163dc:	0209      	lsls	r1, r1, #8
 80163de:	5cf3      	ldrb	r3, [r6, r3]
 80163e0:	f401 71ff 	and.w	r1, r1, #510	@ 0x1fe
 80163e4:	4319      	orrs	r1, r3
 80163e6:	b28b      	uxth	r3, r1
 80163e8:	930c      	str	r3, [sp, #48]	@ 0x30
 80163ea:	2300      	movs	r3, #0
 80163ec:	f04f 0a01 	mov.w	sl, #1
 80163f0:	9307      	str	r3, [sp, #28]
 80163f2:	469c      	mov	ip, r3
 80163f4:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
 80163f8:	f884 1804 	strb.w	r1, [r4, #2052]	@ 0x804
 80163fc:	46d3      	mov	fp, sl
 80163fe:	4657      	mov	r7, sl
 8016400:	930e      	str	r3, [sp, #56]	@ 0x38
 8016402:	2d00      	cmp	r5, #0
 8016404:	d07e      	beq.n	8016504 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x27c>
 8016406:	42af      	cmp	r7, r5
 8016408:	d26e      	bcs.n	80164e8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x260>
 801640a:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801640c:	9201      	str	r2, [sp, #4]
 801640e:	1bed      	subs	r5, r5, r7
 8016410:	4283      	cmp	r3, r0
 8016412:	b2ad      	uxth	r5, r5
 8016414:	d802      	bhi.n	801641c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x194>
 8016416:	e073      	b.n	8016500 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x278>
 8016418:	2b00      	cmp	r3, #0
 801641a:	d15f      	bne.n	80164dc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x254>
 801641c:	9b03      	ldr	r3, [sp, #12]
 801641e:	785b      	ldrb	r3, [r3, #1]
 8016420:	f1cb 0207 	rsb	r2, fp, #7
 8016424:	4093      	lsls	r3, r2
 8016426:	005b      	lsls	r3, r3, #1
 8016428:	f403 72ff 	and.w	r2, r3, #510	@ 0x1fe
 801642c:	9b03      	ldr	r3, [sp, #12]
 801642e:	781b      	ldrb	r3, [r3, #0]
 8016430:	fa43 f30b 	asr.w	r3, r3, fp
 8016434:	b2db      	uxtb	r3, r3
 8016436:	4313      	orrs	r3, r2
 8016438:	f10b 0201 	add.w	r2, fp, #1
 801643c:	fa5f fb82 	uxtb.w	fp, r2
 8016440:	9a03      	ldr	r2, [sp, #12]
 8016442:	f1bb 0f08 	cmp.w	fp, #8
 8016446:	bf15      	itete	ne
 8016448:	3201      	addne	r2, #1
 801644a:	3202      	addeq	r2, #2
 801644c:	9203      	strne	r2, [sp, #12]
 801644e:	9203      	streq	r2, [sp, #12]
 8016450:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8016452:	b29f      	uxth	r7, r3
 8016454:	bf08      	it	eq
 8016456:	f04f 0b00 	moveq.w	fp, #0
 801645a:	42ba      	cmp	r2, r7
 801645c:	d309      	bcc.n	8016472 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1ea>
 801645e:	f884 3804 	strb.w	r3, [r4, #2052]	@ 0x804
 8016462:	2301      	movs	r3, #1
 8016464:	9a05      	ldr	r2, [sp, #20]
 8016466:	f5b2 7f00 	cmp.w	r2, #512	@ 0x200
 801646a:	d30e      	bcc.n	801648a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x202>
 801646c:	469a      	mov	sl, r3
 801646e:	2600      	movs	r6, #0
 8016470:	e035      	b.n	80164de <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x256>
 8016472:	9b05      	ldr	r3, [sp, #20]
 8016474:	429f      	cmp	r7, r3
 8016476:	d318      	bcc.n	80164aa <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x222>
 8016478:	eb04 030a 	add.w	r3, r4, sl
 801647c:	f894 2804 	ldrb.w	r2, [r4, #2052]	@ 0x804
 8016480:	f883 2804 	strb.w	r2, [r3, #2052]	@ 0x804
 8016484:	f10a 0301 	add.w	r3, sl, #1
 8016488:	b29b      	uxth	r3, r3
 801648a:	9a05      	ldr	r2, [sp, #20]
 801648c:	f894 6804 	ldrb.w	r6, [r4, #2052]	@ 0x804
 8016490:	990c      	ldr	r1, [sp, #48]	@ 0x30
 8016492:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 8016496:	7116      	strb	r6, [r2, #4]
 8016498:	f10a 0601 	add.w	r6, sl, #1
 801649c:	80d1      	strh	r1, [r2, #6]
 801649e:	7156      	strb	r6, [r2, #5]
 80164a0:	9a05      	ldr	r2, [sp, #20]
 80164a2:	3201      	adds	r2, #1
 80164a4:	b292      	uxth	r2, r2
 80164a6:	9205      	str	r2, [sp, #20]
 80164a8:	e7e0      	b.n	801646c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e4>
 80164aa:	eb04 0387 	add.w	r3, r4, r7, lsl #2
 80164ae:	463a      	mov	r2, r7
 80164b0:	795b      	ldrb	r3, [r3, #5]
 80164b2:	f603 0604 	addw	r6, r3, #2052	@ 0x804
 80164b6:	4426      	add	r6, r4
 80164b8:	9919      	ldr	r1, [sp, #100]	@ 0x64
 80164ba:	eb01 0c06 	add.w	ip, r1, r6
 80164be:	f1bc 0f00 	cmp.w	ip, #0
 80164c2:	dd07      	ble.n	80164d4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>
 80164c4:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 80164c8:	f892 c004 	ldrb.w	ip, [r2, #4]
 80164cc:	f806 cd01 	strb.w	ip, [r6, #-1]!
 80164d0:	88d2      	ldrh	r2, [r2, #6]
 80164d2:	e7f1      	b.n	80164b8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x230>
 80164d4:	f884 2804 	strb.w	r2, [r4, #2052]	@ 0x804
 80164d8:	b29b      	uxth	r3, r3
 80164da:	e7c3      	b.n	8016464 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1dc>
 80164dc:	9f0c      	ldr	r7, [sp, #48]	@ 0x30
 80164de:	970c      	str	r7, [sp, #48]	@ 0x30
 80164e0:	9a01      	ldr	r2, [sp, #4]
 80164e2:	46b4      	mov	ip, r6
 80164e4:	461f      	mov	r7, r3
 80164e6:	e78c      	b.n	8016402 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x17a>
 80164e8:	1b7b      	subs	r3, r7, r5
 80164ea:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 80164ee:	9201      	str	r2, [sp, #4]
 80164f0:	eb0c 0605 	add.w	r6, ip, r5
 80164f4:	b29b      	uxth	r3, r3
 80164f6:	b2b6      	uxth	r6, r6
 80164f8:	2500      	movs	r5, #0
 80164fa:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 80164fc:	4282      	cmp	r2, r0
 80164fe:	d88b      	bhi.n	8016418 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x190>
 8016500:	9a01      	ldr	r2, [sp, #4]
 8016502:	e74b      	b.n	801639c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x114>
 8016504:	4297      	cmp	r7, r2
 8016506:	d332      	bcc.n	801656e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2e6>
 8016508:	1abb      	subs	r3, r7, r2
 801650a:	b29b      	uxth	r3, r3
 801650c:	9208      	str	r2, [sp, #32]
 801650e:	9501      	str	r5, [sp, #4]
 8016510:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8016512:	29ff      	cmp	r1, #255	@ 0xff
 8016514:	9908      	ldr	r1, [sp, #32]
 8016516:	eb0c 0601 	add.w	r6, ip, r1
 801651a:	d135      	bne.n	8016588 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x300>
 801651c:	f1a0 0e02 	sub.w	lr, r0, #2
 8016520:	b2b6      	uxth	r6, r6
 8016522:	45b4      	cmp	ip, r6
 8016524:	f040 808c 	bne.w	8016640 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3b8>
 8016528:	9908      	ldr	r1, [sp, #32]
 801652a:	4297      	cmp	r7, r2
 801652c:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 8016530:	d3e2      	bcc.n	80164f8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x270>
 8016532:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 8016534:	9904      	ldr	r1, [sp, #16]
 8016536:	8812      	ldrh	r2, [r2, #0]
 8016538:	1a52      	subs	r2, r2, r1
 801653a:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801653e:	9a07      	ldr	r2, [sp, #28]
 8016540:	9916      	ldr	r1, [sp, #88]	@ 0x58
 8016542:	3201      	adds	r2, #1
 8016544:	428a      	cmp	r2, r1
 8016546:	9207      	str	r2, [sp, #28]
 8016548:	f040 8087 	bne.w	801665a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3d2>
 801654c:	f8bd 5070 	ldrh.w	r5, [sp, #112]	@ 0x70
 8016550:	f8bd 7068 	ldrh.w	r7, [sp, #104]	@ 0x68
 8016554:	9b04      	ldr	r3, [sp, #16]
 8016556:	1bed      	subs	r5, r5, r7
 8016558:	b2ad      	uxth	r5, r5
 801655a:	2d00      	cmp	r5, #0
 801655c:	bf08      	it	eq
 801655e:	461a      	moveq	r2, r3
 8016560:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8016562:	bf18      	it	ne
 8016564:	2200      	movne	r2, #0
 8016566:	3301      	adds	r3, #1
 8016568:	930d      	str	r3, [sp, #52]	@ 0x34
 801656a:	b292      	uxth	r2, r2
 801656c:	e70d      	b.n	801638a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x102>
 801656e:	1bd1      	subs	r1, r2, r7
 8016570:	b28b      	uxth	r3, r1
 8016572:	9301      	str	r3, [sp, #4]
 8016574:	9708      	str	r7, [sp, #32]
 8016576:	462b      	mov	r3, r5
 8016578:	e7ca      	b.n	8016510 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x288>
 801657a:	bf00      	nop
 801657c:	200133d4 	.word	0x200133d4
 8016580:	200133cc 	.word	0x200133cc
 8016584:	fffff7fb 	.word	0xfffff7fb
 8016588:	b2b6      	uxth	r6, r6
 801658a:	900b      	str	r0, [sp, #44]	@ 0x2c
 801658c:	45b4      	cmp	ip, r6
 801658e:	d0cb      	beq.n	8016528 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2a0>
 8016590:	f10c 0101 	add.w	r1, ip, #1
 8016594:	44a4      	add	ip, r4
 8016596:	9117      	str	r1, [sp, #92]	@ 0x5c
 8016598:	f89c 5804 	ldrb.w	r5, [ip, #2052]	@ 0x804
 801659c:	9911      	ldr	r1, [sp, #68]	@ 0x44
 801659e:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
 80165a2:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 80165a4:	f8b1 c000 	ldrh.w	ip, [r1]
 80165a8:	990e      	ldr	r1, [sp, #56]	@ 0x38
 80165aa:	ea4f 2e2c 	mov.w	lr, ip, asr #8
 80165ae:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
 80165b2:	fb1e fe01 	smulbb	lr, lr, r1
 80165b6:	ea4f 2825 	mov.w	r8, r5, asr #8
 80165ba:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 80165bc:	f008 08f8 	and.w	r8, r8, #248	@ 0xf8
 80165c0:	fb08 e801 	mla	r8, r8, r1, lr
 80165c4:	ea4f 09ec 	mov.w	r9, ip, asr #3
 80165c8:	990e      	ldr	r1, [sp, #56]	@ 0x38
 80165ca:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
 80165ce:	fb19 f901 	smulbb	r9, r9, r1
 80165d2:	ea4f 0ee5 	mov.w	lr, r5, asr #3
 80165d6:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 80165d8:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
 80165dc:	fb0e 9e01 	mla	lr, lr, r1, r9
 80165e0:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80165e4:	990e      	ldr	r1, [sp, #56]	@ 0x38
 80165e6:	fa5f fc8c 	uxtb.w	ip, ip
 80165ea:	fb1c fc01 	smulbb	ip, ip, r1
 80165ee:	00ed      	lsls	r5, r5, #3
 80165f0:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 80165f2:	b2ed      	uxtb	r5, r5
 80165f4:	fb05 c501 	mla	r5, r5, r1, ip
 80165f8:	fa1f f888 	uxth.w	r8, r8
 80165fc:	fa1f fe8e 	uxth.w	lr, lr
 8016600:	b2ad      	uxth	r5, r5
 8016602:	f108 0c01 	add.w	ip, r8, #1
 8016606:	eb0c 2818 	add.w	r8, ip, r8, lsr #8
 801660a:	f10e 0901 	add.w	r9, lr, #1
 801660e:	f105 0c01 	add.w	ip, r5, #1
 8016612:	eb0c 2c15 	add.w	ip, ip, r5, lsr #8
 8016616:	eb09 291e 	add.w	r9, r9, lr, lsr #8
 801661a:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801661e:	f408 4878 	and.w	r8, r8, #63488	@ 0xf800
 8016622:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8016626:	ea4c 0808 	orr.w	r8, ip, r8
 801662a:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 801662c:	f8bd c05c 	ldrh.w	ip, [sp, #92]	@ 0x5c
 8016630:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 8016634:	ea48 0809 	orr.w	r8, r8, r9
 8016638:	f821 8b02 	strh.w	r8, [r1], #2
 801663c:	910b      	str	r1, [sp, #44]	@ 0x2c
 801663e:	e7a5      	b.n	801658c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x304>
 8016640:	f10c 0801 	add.w	r8, ip, #1
 8016644:	44a4      	add	ip, r4
 8016646:	9911      	ldr	r1, [sp, #68]	@ 0x44
 8016648:	f89c 5804 	ldrb.w	r5, [ip, #2052]	@ 0x804
 801664c:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
 8016650:	f82e 5f02 	strh.w	r5, [lr, #2]!
 8016654:	fa1f fc88 	uxth.w	ip, r8
 8016658:	e763      	b.n	8016522 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x29a>
 801665a:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801665e:	f8bd 506c 	ldrh.w	r5, [sp, #108]	@ 0x6c
 8016662:	1aad      	subs	r5, r5, r2
 8016664:	b2ad      	uxth	r5, r5
 8016666:	2d00      	cmp	r5, #0
 8016668:	bf18      	it	ne
 801666a:	2200      	movne	r2, #0
 801666c:	9201      	str	r2, [sp, #4]
 801666e:	e744      	b.n	80164fa <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x272>
 8016670:	4b03      	ldr	r3, [pc, #12]	@ (8016680 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3f8>)
 8016672:	6818      	ldr	r0, [r3, #0]
 8016674:	6803      	ldr	r3, [r0, #0]
 8016676:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8016678:	4798      	blx	r3
 801667a:	b01f      	add	sp, #124	@ 0x7c
 801667c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016680:	200133d4 	.word	0x200133d4

08016684 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h>:
 8016684:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016688:	b093      	sub	sp, #76	@ 0x4c
 801668a:	4616      	mov	r6, r2
 801668c:	f89d 2070 	ldrb.w	r2, [sp, #112]	@ 0x70
 8016690:	9003      	str	r0, [sp, #12]
 8016692:	460d      	mov	r5, r1
 8016694:	9201      	str	r2, [sp, #4]
 8016696:	2a00      	cmp	r2, #0
 8016698:	f000 8304 	beq.w	8016ca4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x620>
 801669c:	6830      	ldr	r0, [r6, #0]
 801669e:	6871      	ldr	r1, [r6, #4]
 80166a0:	ac0e      	add	r4, sp, #56	@ 0x38
 80166a2:	c403      	stmia	r4!, {r0, r1}
 80166a4:	6818      	ldr	r0, [r3, #0]
 80166a6:	6859      	ldr	r1, [r3, #4]
 80166a8:	ac10      	add	r4, sp, #64	@ 0x40
 80166aa:	c403      	stmia	r4!, {r0, r1}
 80166ac:	a80e      	add	r0, sp, #56	@ 0x38
 80166ae:	f7f8 ff99 	bl	800f5e4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80166b2:	4631      	mov	r1, r6
 80166b4:	a810      	add	r0, sp, #64	@ 0x40
 80166b6:	f7f8 ffbd 	bl	800f634 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80166ba:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	@ 0x3c
 80166be:	f5b2 6f80 	cmp.w	r2, #1024	@ 0x400
 80166c2:	bfd7      	itett	le
 80166c4:	b293      	uxthle	r3, r2
 80166c6:	2301      	movgt	r3, #1
 80166c8:	f44f 6180 	movle.w	r1, #1024	@ 0x400
 80166cc:	fb91 f3f3 	sdivle	r3, r1, r3
 80166d0:	9304      	str	r3, [sp, #16]
 80166d2:	f105 0308 	add.w	r3, r5, #8
 80166d6:	9904      	ldr	r1, [sp, #16]
 80166d8:	9308      	str	r3, [sp, #32]
 80166da:	f9bd 303e 	ldrsh.w	r3, [sp, #62]	@ 0x3e
 80166de:	440b      	add	r3, r1
 80166e0:	3b01      	subs	r3, #1
 80166e2:	fb93 f3f1 	sdiv	r3, r3, r1
 80166e6:	9908      	ldr	r1, [sp, #32]
 80166e8:	3b01      	subs	r3, #1
 80166ea:	b29b      	uxth	r3, r3
 80166ec:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 80166f0:	9309      	str	r3, [sp, #36]	@ 0x24
 80166f2:	9904      	ldr	r1, [sp, #16]
 80166f4:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	@ 0x42
 80166f8:	fb93 f0f1 	sdiv	r0, r3, r1
 80166fc:	b284      	uxth	r4, r0
 80166fe:	9405      	str	r4, [sp, #20]
 8016700:	e9dd 4504 	ldrd	r4, r5, [sp, #16]
 8016704:	f8bd 1040 	ldrh.w	r1, [sp, #64]	@ 0x40
 8016708:	fb05 3914 	mls	r9, r5, r4, r3
 801670c:	fb19 f902 	smulbb	r9, r9, r2
 8016710:	4489      	add	r9, r1
 8016712:	fa1f f989 	uxth.w	r9, r9
 8016716:	2d00      	cmp	r5, #0
 8016718:	d05d      	beq.n	80167d6 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x152>
 801671a:	1e6a      	subs	r2, r5, #1
 801671c:	9808      	ldr	r0, [sp, #32]
 801671e:	f850 a022 	ldr.w	sl, [r0, r2, lsl #2]
 8016722:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8016724:	fa9a fa8a 	rev.w	sl, sl
 8016728:	4492      	add	sl, r2
 801672a:	f8bd 2038 	ldrh.w	r2, [sp, #56]	@ 0x38
 801672e:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	@ 0x46
 8016732:	4411      	add	r1, r2
 8016734:	f8bd 203a 	ldrh.w	r2, [sp, #58]	@ 0x3a
 8016738:	f8ad 1040 	strh.w	r1, [sp, #64]	@ 0x40
 801673c:	4413      	add	r3, r2
 801673e:	f8ad 3042 	strh.w	r3, [sp, #66]	@ 0x42
 8016742:	f9bd 3044 	ldrsh.w	r3, [sp, #68]	@ 0x44
 8016746:	9302      	str	r3, [sp, #8]
 8016748:	4bcb      	ldr	r3, [pc, #812]	@ (8016a78 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3f4>)
 801674a:	6818      	ldr	r0, [r3, #0]
 801674c:	6803      	ldr	r3, [r0, #0]
 801674e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8016750:	4798      	blx	r3
 8016752:	4bca      	ldr	r3, [pc, #808]	@ (8016a7c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3f8>)
 8016754:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	@ 0x40
 8016758:	881b      	ldrh	r3, [r3, #0]
 801675a:	f9bd 4042 	ldrsh.w	r4, [sp, #66]	@ 0x42
 801675e:	fb03 2404 	mla	r4, r3, r4, r2
 8016762:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8016766:	436b      	muls	r3, r5
 8016768:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801676c:	930d      	str	r3, [sp, #52]	@ 0x34
 801676e:	f9bd 303c 	ldrsh.w	r3, [sp, #60]	@ 0x3c
 8016772:	fb99 f3f3 	sdiv	r3, r9, r3
 8016776:	9306      	str	r3, [sp, #24]
 8016778:	9b01      	ldr	r3, [sp, #4]
 801677a:	43db      	mvns	r3, r3
 801677c:	b2db      	uxtb	r3, r3
 801677e:	930a      	str	r3, [sp, #40]	@ 0x28
 8016780:	9b03      	ldr	r3, [sp, #12]
 8016782:	3304      	adds	r3, #4
 8016784:	4618      	mov	r0, r3
 8016786:	2280      	movs	r2, #128	@ 0x80
 8016788:	2100      	movs	r1, #0
 801678a:	930b      	str	r3, [sp, #44]	@ 0x2c
 801678c:	f00c fd11 	bl	80231b2 <memset>
 8016790:	4bbb      	ldr	r3, [pc, #748]	@ (8016a80 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3fc>)
 8016792:	9300      	str	r3, [sp, #0]
 8016794:	2300      	movs	r3, #0
 8016796:	f04f 0600 	mov.w	r6, #0
 801679a:	9307      	str	r3, [sp, #28]
 801679c:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801679e:	42a3      	cmp	r3, r4
 80167a0:	f240 827b 	bls.w	8016c9a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x616>
 80167a4:	f04f 0e07 	mov.w	lr, #7
 80167a8:	f1b9 0f00 	cmp.w	r9, #0
 80167ac:	f000 8159 	beq.w	8016a62 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3de>
 80167b0:	f89a 5000 	ldrb.w	r5, [sl]
 80167b4:	b2ed      	uxtb	r5, r5
 80167b6:	11aa      	asrs	r2, r5, #6
 80167b8:	f10a 0701 	add.w	r7, sl, #1
 80167bc:	d10e      	bne.n	80167dc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x158>
 80167be:	9b03      	ldr	r3, [sp, #12]
 80167c0:	f005 053f 	and.w	r5, r5, #63	@ 0x3f
 80167c4:	eb03 0545 	add.w	r5, r3, r5, lsl #1
 80167c8:	88ae      	ldrh	r6, [r5, #4]
 80167ca:	f109 39ff 	add.w	r9, r9, #4294967295
 80167ce:	fa1f f989 	uxth.w	r9, r9
 80167d2:	46ba      	mov	sl, r7
 80167d4:	e7e8      	b.n	80167a8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x124>
 80167d6:	f8dd a024 	ldr.w	sl, [sp, #36]	@ 0x24
 80167da:	e7a6      	b.n	801672a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0xa6>
 80167dc:	2a01      	cmp	r2, #1
 80167de:	d129      	bne.n	8016834 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x1b0>
 80167e0:	f3c6 0304 	ubfx	r3, r6, #0, #5
 80167e4:	f005 0203 	and.w	r2, r5, #3
 80167e8:	3b02      	subs	r3, #2
 80167ea:	4413      	add	r3, r2
 80167ec:	f003 031f 	and.w	r3, r3, #31
 80167f0:	f3c5 0281 	ubfx	r2, r5, #2, #2
 80167f4:	f363 0604 	bfi	r6, r3, #0, #5
 80167f8:	3a02      	subs	r2, #2
 80167fa:	eb02 1256 	add.w	r2, r2, r6, lsr #5
 80167fe:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 8016802:	f3c5 1501 	ubfx	r5, r5, #4, #2
 8016806:	f362 164a 	bfi	r6, r2, #5, #6
 801680a:	3d02      	subs	r5, #2
 801680c:	eb05 25d6 	add.w	r5, r5, r6, lsr #11
 8016810:	f005 051f 	and.w	r5, r5, #31
 8016814:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 8016818:	2103      	movs	r1, #3
 801681a:	fb11 2205 	smlabb	r2, r1, r5, r2
 801681e:	fb1e 2303 	smlabb	r3, lr, r3, r2
 8016822:	9a03      	ldr	r2, [sp, #12]
 8016824:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 8016828:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801682c:	f365 26cf 	bfi	r6, r5, #11, #5
 8016830:	809e      	strh	r6, [r3, #4]
 8016832:	e7ca      	b.n	80167ca <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x146>
 8016834:	f005 053f 	and.w	r5, r5, #63	@ 0x3f
 8016838:	2a02      	cmp	r2, #2
 801683a:	b2ab      	uxth	r3, r5
 801683c:	d136      	bne.n	80168ac <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x228>
 801683e:	2101      	movs	r1, #1
 8016840:	fb12 1205 	smlabb	r2, r2, r5, r1
 8016844:	4492      	add	sl, r2
 8016846:	463a      	mov	r2, r7
 8016848:	4552      	cmp	r2, sl
 801684a:	d01c      	beq.n	8016886 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x202>
 801684c:	4694      	mov	ip, r2
 801684e:	f04f 0b03 	mov.w	fp, #3
 8016852:	f81c 1b02 	ldrb.w	r1, [ip], #2
 8016856:	7852      	ldrb	r2, [r2, #1]
 8016858:	ea41 2102 	orr.w	r1, r1, r2, lsl #8
 801685c:	f3c1 1045 	ubfx	r0, r1, #5, #6
 8016860:	ea4f 28d1 	mov.w	r8, r1, lsr #11
 8016864:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 8016868:	f001 021f 	and.w	r2, r1, #31
 801686c:	fb1b 0008 	smlabb	r0, fp, r8, r0
 8016870:	fb1e 0002 	smlabb	r0, lr, r2, r0
 8016874:	9a03      	ldr	r2, [sp, #12]
 8016876:	f000 003f 	and.w	r0, r0, #63	@ 0x3f
 801687a:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 801687e:	460e      	mov	r6, r1
 8016880:	8081      	strh	r1, [r0, #4]
 8016882:	4662      	mov	r2, ip
 8016884:	e7e0      	b.n	8016848 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x1c4>
 8016886:	4599      	cmp	r9, r3
 8016888:	d20b      	bcs.n	80168a2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x21e>
 801688a:	eba5 0509 	sub.w	r5, r5, r9
 801688e:	2d00      	cmp	r5, #0
 8016890:	eb07 0749 	add.w	r7, r7, r9, lsl #1
 8016894:	f300 8209 	bgt.w	8016caa <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x626>
 8016898:	f8dd 8008 	ldr.w	r8, [sp, #8]
 801689c:	2301      	movs	r3, #1
 801689e:	9307      	str	r3, [sp, #28]
 80168a0:	e00c      	b.n	80168bc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x238>
 80168a2:	eb07 0745 	add.w	r7, r7, r5, lsl #1
 80168a6:	eba9 0903 	sub.w	r9, r9, r3
 80168aa:	e790      	b.n	80167ce <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x14a>
 80168ac:	4599      	cmp	r9, r3
 80168ae:	d2fa      	bcs.n	80168a6 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x222>
 80168b0:	eba5 0509 	sub.w	r5, r5, r9
 80168b4:	2d00      	cmp	r5, #0
 80168b6:	dc1d      	bgt.n	80168f4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x270>
 80168b8:	f8dd 8008 	ldr.w	r8, [sp, #8]
 80168bc:	f04f 0b00 	mov.w	fp, #0
 80168c0:	f1b8 0f00 	cmp.w	r8, #0
 80168c4:	f340 81a1 	ble.w	8016c0a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x586>
 80168c8:	783b      	ldrb	r3, [r7, #0]
 80168ca:	b2db      	uxtb	r3, r3
 80168cc:	119a      	asrs	r2, r3, #6
 80168ce:	f107 0a01 	add.w	sl, r7, #1
 80168d2:	f040 80d7 	bne.w	8016a84 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x400>
 80168d6:	9a03      	ldr	r2, [sp, #12]
 80168d8:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 80168dc:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80168e0:	889e      	ldrh	r6, [r3, #4]
 80168e2:	9b01      	ldr	r3, [sp, #4]
 80168e4:	2bff      	cmp	r3, #255	@ 0xff
 80168e6:	f040 81e9 	bne.w	8016cbc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x638>
 80168ea:	8026      	strh	r6, [r4, #0]
 80168ec:	f108 38ff 	add.w	r8, r8, #4294967295
 80168f0:	3402      	adds	r4, #2
 80168f2:	e0be      	b.n	8016a72 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3ee>
 80168f4:	9b02      	ldr	r3, [sp, #8]
 80168f6:	9a02      	ldr	r2, [sp, #8]
 80168f8:	42ab      	cmp	r3, r5
 80168fa:	bfa8      	it	ge
 80168fc:	462b      	movge	r3, r5
 80168fe:	eba2 0803 	sub.w	r8, r2, r3
 8016902:	9a07      	ldr	r2, [sp, #28]
 8016904:	1aed      	subs	r5, r5, r3
 8016906:	2a00      	cmp	r2, #0
 8016908:	d05a      	beq.n	80169c0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x33c>
 801690a:	9a01      	ldr	r2, [sp, #4]
 801690c:	2aff      	cmp	r2, #255	@ 0xff
 801690e:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8016912:	d049      	beq.n	80169a8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x324>
 8016914:	f8bd e004 	ldrh.w	lr, [sp, #4]
 8016918:	f8bd 9028 	ldrh.w	r9, [sp, #40]	@ 0x28
 801691c:	42a3      	cmp	r3, r4
 801691e:	f240 80a5 	bls.w	8016a6c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3e8>
 8016922:	46bc      	mov	ip, r7
 8016924:	8820      	ldrh	r0, [r4, #0]
 8016926:	f81c 2b02 	ldrb.w	r2, [ip], #2
 801692a:	7879      	ldrb	r1, [r7, #1]
 801692c:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 8016930:	b212      	sxth	r2, r2
 8016932:	b291      	uxth	r1, r2
 8016934:	ea4f 2a20 	mov.w	sl, r0, asr #8
 8016938:	120f      	asrs	r7, r1, #8
 801693a:	f00a 0af8 	and.w	sl, sl, #248	@ 0xf8
 801693e:	fb1a fa09 	smulbb	sl, sl, r9
 8016942:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8016946:	fb07 a70e 	mla	r7, r7, lr, sl
 801694a:	ea4f 0ae0 	mov.w	sl, r0, asr #3
 801694e:	00c0      	lsls	r0, r0, #3
 8016950:	10c9      	asrs	r1, r1, #3
 8016952:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 8016956:	00d2      	lsls	r2, r2, #3
 8016958:	b2c0      	uxtb	r0, r0
 801695a:	fb1a fa09 	smulbb	sl, sl, r9
 801695e:	fb10 f009 	smulbb	r0, r0, r9
 8016962:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 8016966:	b2d2      	uxtb	r2, r2
 8016968:	b2bf      	uxth	r7, r7
 801696a:	fb01 a10e 	mla	r1, r1, lr, sl
 801696e:	fb02 020e 	mla	r2, r2, lr, r0
 8016972:	b289      	uxth	r1, r1
 8016974:	b292      	uxth	r2, r2
 8016976:	1c78      	adds	r0, r7, #1
 8016978:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 801697c:	f101 0a01 	add.w	sl, r1, #1
 8016980:	1c50      	adds	r0, r2, #1
 8016982:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 8016986:	eb0a 2a11 	add.w	sl, sl, r1, lsr #8
 801698a:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 801698e:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8016992:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8016996:	4307      	orrs	r7, r0
 8016998:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 801699c:	ea47 070a 	orr.w	r7, r7, sl
 80169a0:	f824 7b02 	strh.w	r7, [r4], #2
 80169a4:	4667      	mov	r7, ip
 80169a6:	e7b9      	b.n	801691c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x298>
 80169a8:	42a3      	cmp	r3, r4
 80169aa:	d95f      	bls.n	8016a6c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3e8>
 80169ac:	463a      	mov	r2, r7
 80169ae:	f812 1b02 	ldrb.w	r1, [r2], #2
 80169b2:	7878      	ldrb	r0, [r7, #1]
 80169b4:	ea41 2100 	orr.w	r1, r1, r0, lsl #8
 80169b8:	f824 1b02 	strh.w	r1, [r4], #2
 80169bc:	4617      	mov	r7, r2
 80169be:	e7f3      	b.n	80169a8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x324>
 80169c0:	9901      	ldr	r1, [sp, #4]
 80169c2:	29ff      	cmp	r1, #255	@ 0xff
 80169c4:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 80169c8:	b2b2      	uxth	r2, r6
 80169ca:	d044      	beq.n	8016a56 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3d2>
 80169cc:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 80169d0:	f8bd a028 	ldrh.w	sl, [sp, #40]	@ 0x28
 80169d4:	ea4f 2922 	mov.w	r9, r2, asr #8
 80169d8:	ea4f 0ee2 	mov.w	lr, r2, asr #3
 80169dc:	f009 09f8 	and.w	r9, r9, #248	@ 0xf8
 80169e0:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
 80169e4:	4608      	mov	r0, r1
 80169e6:	fb09 f901 	mul.w	r9, r9, r1
 80169ea:	fb0e fe01 	mul.w	lr, lr, r1
 80169ee:	00d1      	lsls	r1, r2, #3
 80169f0:	b2c9      	uxtb	r1, r1
 80169f2:	4341      	muls	r1, r0
 80169f4:	429c      	cmp	r4, r3
 80169f6:	f4bf af61 	bcs.w	80168bc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x238>
 80169fa:	8822      	ldrh	r2, [r4, #0]
 80169fc:	1210      	asrs	r0, r2, #8
 80169fe:	ea4f 0ce2 	mov.w	ip, r2, asr #3
 8016a02:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 8016a06:	00d2      	lsls	r2, r2, #3
 8016a08:	fb00 900a 	mla	r0, r0, sl, r9
 8016a0c:	b2d2      	uxtb	r2, r2
 8016a0e:	b280      	uxth	r0, r0
 8016a10:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
 8016a14:	fb02 120a 	mla	r2, r2, sl, r1
 8016a18:	b292      	uxth	r2, r2
 8016a1a:	f100 0b01 	add.w	fp, r0, #1
 8016a1e:	fb0c ec0a 	mla	ip, ip, sl, lr
 8016a22:	fa1f fc8c 	uxth.w	ip, ip
 8016a26:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
 8016a2a:	1c50      	adds	r0, r2, #1
 8016a2c:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 8016a30:	f10c 0201 	add.w	r2, ip, #1
 8016a34:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 8016a38:	f40b 4b78 	and.w	fp, fp, #63488	@ 0xf800
 8016a3c:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8016a40:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8016a44:	ea40 0b0b 	orr.w	fp, r0, fp
 8016a48:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 8016a4c:	ea4b 0b0c 	orr.w	fp, fp, ip
 8016a50:	f824 bb02 	strh.w	fp, [r4], #2
 8016a54:	e7ce      	b.n	80169f4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x370>
 8016a56:	429c      	cmp	r4, r3
 8016a58:	f4bf af30 	bcs.w	80168bc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x238>
 8016a5c:	f824 2b02 	strh.w	r2, [r4], #2
 8016a60:	e7f9      	b.n	8016a56 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3d2>
 8016a62:	f8dd 8008 	ldr.w	r8, [sp, #8]
 8016a66:	4657      	mov	r7, sl
 8016a68:	464d      	mov	r5, r9
 8016a6a:	e727      	b.n	80168bc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x238>
 8016a6c:	2300      	movs	r3, #0
 8016a6e:	e716      	b.n	801689e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x21a>
 8016a70:	44bb      	add	fp, r7
 8016a72:	4657      	mov	r7, sl
 8016a74:	e724      	b.n	80168c0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x23c>
 8016a76:	bf00      	nop
 8016a78:	200133d4 	.word	0x200133d4
 8016a7c:	200133cc 	.word	0x200133cc
 8016a80:	20000280 	.word	0x20000280
 8016a84:	2a01      	cmp	r2, #1
 8016a86:	d12a      	bne.n	8016ade <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x45a>
 8016a88:	f3c6 0104 	ubfx	r1, r6, #0, #5
 8016a8c:	f003 0203 	and.w	r2, r3, #3
 8016a90:	3902      	subs	r1, #2
 8016a92:	4411      	add	r1, r2
 8016a94:	f001 011f 	and.w	r1, r1, #31
 8016a98:	f3c3 0081 	ubfx	r0, r3, #2, #2
 8016a9c:	f361 0604 	bfi	r6, r1, #0, #5
 8016aa0:	3802      	subs	r0, #2
 8016aa2:	eb00 1056 	add.w	r0, r0, r6, lsr #5
 8016aa6:	f000 003f 	and.w	r0, r0, #63	@ 0x3f
 8016aaa:	f3c3 1301 	ubfx	r3, r3, #4, #2
 8016aae:	f360 164a 	bfi	r6, r0, #5, #6
 8016ab2:	3b02      	subs	r3, #2
 8016ab4:	eb03 22d6 	add.w	r2, r3, r6, lsr #11
 8016ab8:	f002 031f 	and.w	r3, r2, #31
 8016abc:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 8016ac0:	2203      	movs	r2, #3
 8016ac2:	f363 26cf 	bfi	r6, r3, #11, #5
 8016ac6:	fb12 0303 	smlabb	r3, r2, r3, r0
 8016aca:	2207      	movs	r2, #7
 8016acc:	fb12 3301 	smlabb	r3, r2, r1, r3
 8016ad0:	9a03      	ldr	r2, [sp, #12]
 8016ad2:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 8016ad6:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8016ada:	809e      	strh	r6, [r3, #4]
 8016adc:	e701      	b.n	80168e2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x25e>
 8016ade:	f003 053f 	and.w	r5, r3, #63	@ 0x3f
 8016ae2:	45a8      	cmp	r8, r5
 8016ae4:	4647      	mov	r7, r8
 8016ae6:	bfa8      	it	ge
 8016ae8:	462f      	movge	r7, r5
 8016aea:	2a02      	cmp	r2, #2
 8016aec:	d154      	bne.n	8016b98 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x514>
 8016aee:	9b01      	ldr	r3, [sp, #4]
 8016af0:	2bff      	cmp	r3, #255	@ 0xff
 8016af2:	d01a      	beq.n	8016b2a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x4a6>
 8016af4:	eb0b 0307 	add.w	r3, fp, r7
 8016af8:	2b40      	cmp	r3, #64	@ 0x40
 8016afa:	dd16      	ble.n	8016b2a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x4a6>
 8016afc:	ea4f 094b 	mov.w	r9, fp, lsl #1
 8016b00:	4649      	mov	r1, r9
 8016b02:	9800      	ldr	r0, [sp, #0]
 8016b04:	f7ea fee0 	bl	80018c8 <_ZN8touchgfx5paint9flushLineEPmi>
 8016b08:	465a      	mov	r2, fp
 8016b0a:	9b01      	ldr	r3, [sp, #4]
 8016b0c:	9900      	ldr	r1, [sp, #0]
 8016b0e:	4620      	mov	r0, r4
 8016b10:	f7ea ff04 	bl	800191c <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh>
 8016b14:	9b00      	ldr	r3, [sp, #0]
 8016b16:	461a      	mov	r2, r3
 8016b18:	4b6c      	ldr	r3, [pc, #432]	@ (8016ccc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x648>)
 8016b1a:	429a      	cmp	r2, r3
 8016b1c:	bf0c      	ite	eq
 8016b1e:	4b6c      	ldreq	r3, [pc, #432]	@ (8016cd0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x64c>)
 8016b20:	4b6a      	ldrne	r3, [pc, #424]	@ (8016ccc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x648>)
 8016b22:	9300      	str	r3, [sp, #0]
 8016b24:	444c      	add	r4, r9
 8016b26:	f04f 0b00 	mov.w	fp, #0
 8016b2a:	4652      	mov	r2, sl
 8016b2c:	2100      	movs	r1, #0
 8016b2e:	42a9      	cmp	r1, r5
 8016b30:	da2c      	bge.n	8016b8c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x508>
 8016b32:	4694      	mov	ip, r2
 8016b34:	f04f 0903 	mov.w	r9, #3
 8016b38:	f81c 3b02 	ldrb.w	r3, [ip], #2
 8016b3c:	7852      	ldrb	r2, [r2, #1]
 8016b3e:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8016b42:	f3c3 1045 	ubfx	r0, r3, #5, #6
 8016b46:	ea4f 2ed3 	mov.w	lr, r3, lsr #11
 8016b4a:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 8016b4e:	f003 021f 	and.w	r2, r3, #31
 8016b52:	fb19 000e 	smlabb	r0, r9, lr, r0
 8016b56:	f04f 0e07 	mov.w	lr, #7
 8016b5a:	fb1e 0002 	smlabb	r0, lr, r2, r0
 8016b5e:	9a03      	ldr	r2, [sp, #12]
 8016b60:	f000 003f 	and.w	r0, r0, #63	@ 0x3f
 8016b64:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 8016b68:	42b9      	cmp	r1, r7
 8016b6a:	461e      	mov	r6, r3
 8016b6c:	8083      	strh	r3, [r0, #4]
 8016b6e:	da0a      	bge.n	8016b86 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x502>
 8016b70:	9a01      	ldr	r2, [sp, #4]
 8016b72:	2aff      	cmp	r2, #255	@ 0xff
 8016b74:	bf15      	itete	ne
 8016b76:	9a00      	ldrne	r2, [sp, #0]
 8016b78:	8023      	strheq	r3, [r4, #0]
 8016b7a:	f822 301b 	strhne.w	r3, [r2, fp, lsl #1]
 8016b7e:	3402      	addeq	r4, #2
 8016b80:	bf18      	it	ne
 8016b82:	f10b 0b01 	addne.w	fp, fp, #1
 8016b86:	3101      	adds	r1, #1
 8016b88:	4662      	mov	r2, ip
 8016b8a:	e7d0      	b.n	8016b2e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x4aa>
 8016b8c:	eb0a 0a45 	add.w	sl, sl, r5, lsl #1
 8016b90:	eba8 0807 	sub.w	r8, r8, r7
 8016b94:	1bed      	subs	r5, r5, r7
 8016b96:	e76c      	b.n	8016a72 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3ee>
 8016b98:	9b01      	ldr	r3, [sp, #4]
 8016b9a:	2bff      	cmp	r3, #255	@ 0xff
 8016b9c:	eba8 0807 	sub.w	r8, r8, r7
 8016ba0:	eba5 0507 	sub.w	r5, r5, r7
 8016ba4:	fa1f f986 	uxth.w	r9, r6
 8016ba8:	d027      	beq.n	8016bfa <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x576>
 8016baa:	eb0b 0307 	add.w	r3, fp, r7
 8016bae:	2b40      	cmp	r3, #64	@ 0x40
 8016bb0:	dd18      	ble.n	8016be4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x560>
 8016bb2:	ea4f 034b 	mov.w	r3, fp, lsl #1
 8016bb6:	4619      	mov	r1, r3
 8016bb8:	9800      	ldr	r0, [sp, #0]
 8016bba:	930c      	str	r3, [sp, #48]	@ 0x30
 8016bbc:	f7ea fe84 	bl	80018c8 <_ZN8touchgfx5paint9flushLineEPmi>
 8016bc0:	465a      	mov	r2, fp
 8016bc2:	9b01      	ldr	r3, [sp, #4]
 8016bc4:	9900      	ldr	r1, [sp, #0]
 8016bc6:	4620      	mov	r0, r4
 8016bc8:	f7ea fea8 	bl	800191c <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh>
 8016bcc:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8016bce:	441c      	add	r4, r3
 8016bd0:	9b00      	ldr	r3, [sp, #0]
 8016bd2:	461a      	mov	r2, r3
 8016bd4:	4b3d      	ldr	r3, [pc, #244]	@ (8016ccc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x648>)
 8016bd6:	429a      	cmp	r2, r3
 8016bd8:	bf0c      	ite	eq
 8016bda:	4b3d      	ldreq	r3, [pc, #244]	@ (8016cd0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x64c>)
 8016bdc:	4b3b      	ldrne	r3, [pc, #236]	@ (8016ccc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x648>)
 8016bde:	9300      	str	r3, [sp, #0]
 8016be0:	f04f 0b00 	mov.w	fp, #0
 8016be4:	9b00      	ldr	r3, [sp, #0]
 8016be6:	eb03 024b 	add.w	r2, r3, fp, lsl #1
 8016bea:	463b      	mov	r3, r7
 8016bec:	2b00      	cmp	r3, #0
 8016bee:	f43f af3f 	beq.w	8016a70 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3ec>
 8016bf2:	f822 9b02 	strh.w	r9, [r2], #2
 8016bf6:	3b01      	subs	r3, #1
 8016bf8:	e7f8      	b.n	8016bec <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x568>
 8016bfa:	eb04 0747 	add.w	r7, r4, r7, lsl #1
 8016bfe:	42a7      	cmp	r7, r4
 8016c00:	f67f af37 	bls.w	8016a72 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3ee>
 8016c04:	f824 9b02 	strh.w	r9, [r4], #2
 8016c08:	e7f9      	b.n	8016bfe <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x57a>
 8016c0a:	f1bb 0f00 	cmp.w	fp, #0
 8016c0e:	d00c      	beq.n	8016c2a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x5a6>
 8016c10:	ea4f 084b 	mov.w	r8, fp, lsl #1
 8016c14:	4641      	mov	r1, r8
 8016c16:	9800      	ldr	r0, [sp, #0]
 8016c18:	f7ea fe56 	bl	80018c8 <_ZN8touchgfx5paint9flushLineEPmi>
 8016c1c:	4620      	mov	r0, r4
 8016c1e:	9b01      	ldr	r3, [sp, #4]
 8016c20:	9900      	ldr	r1, [sp, #0]
 8016c22:	465a      	mov	r2, fp
 8016c24:	f7ea fe7a 	bl	800191c <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh>
 8016c28:	4444      	add	r4, r8
 8016c2a:	4b2a      	ldr	r3, [pc, #168]	@ (8016cd4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x650>)
 8016c2c:	9a02      	ldr	r2, [sp, #8]
 8016c2e:	881b      	ldrh	r3, [r3, #0]
 8016c30:	1a9b      	subs	r3, r3, r2
 8016c32:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8016c36:	9b06      	ldr	r3, [sp, #24]
 8016c38:	3301      	adds	r3, #1
 8016c3a:	9306      	str	r3, [sp, #24]
 8016c3c:	9a06      	ldr	r2, [sp, #24]
 8016c3e:	9b04      	ldr	r3, [sp, #16]
 8016c40:	4293      	cmp	r3, r2
 8016c42:	d120      	bne.n	8016c86 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x602>
 8016c44:	9b05      	ldr	r3, [sp, #20]
 8016c46:	9a05      	ldr	r2, [sp, #20]
 8016c48:	f8bd 9040 	ldrh.w	r9, [sp, #64]	@ 0x40
 8016c4c:	f8bd 5038 	ldrh.w	r5, [sp, #56]	@ 0x38
 8016c50:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 8016c52:	f103 0801 	add.w	r8, r3, #1
 8016c56:	9b08      	ldr	r3, [sp, #32]
 8016c58:	f853 7022 	ldr.w	r7, [r3, r2, lsl #2]
 8016c5c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8016c5e:	ba3f      	rev	r7, r7
 8016c60:	2280      	movs	r2, #128	@ 0x80
 8016c62:	2100      	movs	r1, #0
 8016c64:	441f      	add	r7, r3
 8016c66:	eba9 0905 	sub.w	r9, r9, r5
 8016c6a:	f00c faa2 	bl	80231b2 <memset>
 8016c6e:	2300      	movs	r3, #0
 8016c70:	fa1f f989 	uxth.w	r9, r9
 8016c74:	f04f 0600 	mov.w	r6, #0
 8016c78:	f8cd 8014 	str.w	r8, [sp, #20]
 8016c7c:	9306      	str	r3, [sp, #24]
 8016c7e:	f7ea fe19 	bl	80018b4 <_ZN8touchgfx5paint8tearDownEv>
 8016c82:	46ba      	mov	sl, r7
 8016c84:	e58a      	b.n	801679c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x118>
 8016c86:	f8bd 903c 	ldrh.w	r9, [sp, #60]	@ 0x3c
 8016c8a:	9b02      	ldr	r3, [sp, #8]
 8016c8c:	eba9 0903 	sub.w	r9, r9, r3
 8016c90:	eba9 0505 	sub.w	r5, r9, r5
 8016c94:	fa1f f985 	uxth.w	r9, r5
 8016c98:	e7f1      	b.n	8016c7e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x5fa>
 8016c9a:	4b0f      	ldr	r3, [pc, #60]	@ (8016cd8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x654>)
 8016c9c:	6818      	ldr	r0, [r3, #0]
 8016c9e:	6803      	ldr	r3, [r0, #0]
 8016ca0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8016ca2:	4798      	blx	r3
 8016ca4:	b013      	add	sp, #76	@ 0x4c
 8016ca6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016caa:	9b02      	ldr	r3, [sp, #8]
 8016cac:	9a02      	ldr	r2, [sp, #8]
 8016cae:	42ab      	cmp	r3, r5
 8016cb0:	bfa8      	it	ge
 8016cb2:	462b      	movge	r3, r5
 8016cb4:	eba2 0803 	sub.w	r8, r2, r3
 8016cb8:	1aed      	subs	r5, r5, r3
 8016cba:	e626      	b.n	801690a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x286>
 8016cbc:	f108 38ff 	add.w	r8, r8, #4294967295
 8016cc0:	fa1f f986 	uxth.w	r9, r6
 8016cc4:	2500      	movs	r5, #0
 8016cc6:	2701      	movs	r7, #1
 8016cc8:	e76f      	b.n	8016baa <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x526>
 8016cca:	bf00      	nop
 8016ccc:	20000280 	.word	0x20000280
 8016cd0:	20000380 	.word	0x20000380
 8016cd4:	200133cc 	.word	0x200133cc
 8016cd8:	200133d4 	.word	0x200133d4

08016cdc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 8016cdc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016ce0:	b08f      	sub	sp, #60	@ 0x3c
 8016ce2:	461c      	mov	r4, r3
 8016ce4:	9203      	str	r2, [sp, #12]
 8016ce6:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 8016cea:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 8016cec:	9202      	str	r2, [sp, #8]
 8016cee:	460f      	mov	r7, r1
 8016cf0:	2a00      	cmp	r2, #0
 8016cf2:	f000 8128 	beq.w	8016f46 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x26a>
 8016cf6:	6820      	ldr	r0, [r4, #0]
 8016cf8:	6861      	ldr	r1, [r4, #4]
 8016cfa:	aa0a      	add	r2, sp, #40	@ 0x28
 8016cfc:	c203      	stmia	r2!, {r0, r1}
 8016cfe:	6818      	ldr	r0, [r3, #0]
 8016d00:	6859      	ldr	r1, [r3, #4]
 8016d02:	aa0c      	add	r2, sp, #48	@ 0x30
 8016d04:	c203      	stmia	r2!, {r0, r1}
 8016d06:	a80a      	add	r0, sp, #40	@ 0x28
 8016d08:	f7f8 fc6c 	bl	800f5e4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8016d0c:	4621      	mov	r1, r4
 8016d0e:	a80c      	add	r0, sp, #48	@ 0x30
 8016d10:	f7f8 fc90 	bl	800f634 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8016d14:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	@ 0x2c
 8016d18:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	@ 0x2e
 8016d1c:	f8bd 0030 	ldrh.w	r0, [sp, #48]	@ 0x30
 8016d20:	f5b6 6f80 	cmp.w	r6, #1024	@ 0x400
 8016d24:	bfde      	ittt	le
 8016d26:	b2b3      	uxthle	r3, r6
 8016d28:	f44f 6280 	movle.w	r2, #1024	@ 0x400
 8016d2c:	fb92 f3f3 	sdivle	r3, r2, r3
 8016d30:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
 8016d34:	bfc8      	it	gt
 8016d36:	2301      	movgt	r3, #1
 8016d38:	fb92 f1f3 	sdiv	r1, r2, r3
 8016d3c:	fa1f fc81 	uxth.w	ip, r1
 8016d40:	fb0c 2413 	mls	r4, ip, r3, r2
 8016d44:	fb14 f406 	smulbb	r4, r4, r6
 8016d48:	441d      	add	r5, r3
 8016d4a:	4404      	add	r4, r0
 8016d4c:	4661      	mov	r1, ip
 8016d4e:	3d01      	subs	r5, #1
 8016d50:	b2a4      	uxth	r4, r4
 8016d52:	fb95 f5f3 	sdiv	r5, r5, r3
 8016d56:	b121      	cbz	r1, 8016d62 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x86>
 8016d58:	9b03      	ldr	r3, [sp, #12]
 8016d5a:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 8016d5e:	ba1b      	rev	r3, r3
 8016d60:	441f      	add	r7, r3
 8016d62:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 8016d66:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	@ 0x34
 8016d6a:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	@ 0x36
 8016d6e:	4418      	add	r0, r3
 8016d70:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 8016d74:	f8ad 0030 	strh.w	r0, [sp, #48]	@ 0x30
 8016d78:	441a      	add	r2, r3
 8016d7a:	4b74      	ldr	r3, [pc, #464]	@ (8016f4c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
 8016d7c:	f8ad 2032 	strh.w	r2, [sp, #50]	@ 0x32
 8016d80:	6818      	ldr	r0, [r3, #0]
 8016d82:	6803      	ldr	r3, [r0, #0]
 8016d84:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8016d86:	4798      	blx	r3
 8016d88:	4a71      	ldr	r2, [pc, #452]	@ (8016f50 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x274>)
 8016d8a:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	@ 0x32
 8016d8e:	8813      	ldrh	r3, [r2, #0]
 8016d90:	f9bd c030 	ldrsh.w	ip, [sp, #48]	@ 0x30
 8016d94:	9209      	str	r2, [sp, #36]	@ 0x24
 8016d96:	fb03 c101 	mla	r1, r3, r1, ip
 8016d9a:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 8016d9e:	4373      	muls	r3, r6
 8016da0:	b2ad      	uxth	r5, r5
 8016da2:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8016da6:	00ad      	lsls	r5, r5, #2
 8016da8:	2c00      	cmp	r4, #0
 8016daa:	9304      	str	r3, [sp, #16]
 8016dac:	f105 0304 	add.w	r3, r5, #4
 8016db0:	9305      	str	r3, [sp, #20]
 8016db2:	bf0c      	ite	eq
 8016db4:	46c8      	moveq	r8, r9
 8016db6:	f04f 0800 	movne.w	r8, #0
 8016dba:	2300      	movs	r3, #0
 8016dbc:	fa1f f888 	uxth.w	r8, r8
 8016dc0:	9301      	str	r3, [sp, #4]
 8016dc2:	9a04      	ldr	r2, [sp, #16]
 8016dc4:	4282      	cmp	r2, r0
 8016dc6:	f240 80b9 	bls.w	8016f3c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x260>
 8016dca:	b95b      	cbnz	r3, 8016de4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x108>
 8016dcc:	783a      	ldrb	r2, [r7, #0]
 8016dce:	0993      	lsrs	r3, r2, #6
 8016dd0:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 8016dd4:	9201      	str	r2, [sp, #4]
 8016dd6:	1e5a      	subs	r2, r3, #1
 8016dd8:	2a02      	cmp	r2, #2
 8016dda:	bf8d      	iteet	hi
 8016ddc:	787b      	ldrbhi	r3, [r7, #1]
 8016dde:	3701      	addls	r7, #1
 8016de0:	b29b      	uxthls	r3, r3
 8016de2:	3702      	addhi	r7, #2
 8016de4:	b184      	cbz	r4, 8016e08 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x12c>
 8016de6:	429c      	cmp	r4, r3
 8016de8:	bf95      	itete	ls
 8016dea:	1b1c      	subls	r4, r3, r4
 8016dec:	1ae4      	subhi	r4, r4, r3
 8016dee:	fa1f fa84 	uxthls.w	sl, r4
 8016df2:	b2a4      	uxthhi	r4, r4
 8016df4:	bf87      	ittee	hi
 8016df6:	46c4      	movhi	ip, r8
 8016df8:	f04f 0a00 	movhi.w	sl, #0
 8016dfc:	fa1f fc89 	uxthls.w	ip, r9
 8016e00:	2400      	movls	r4, #0
 8016e02:	4653      	mov	r3, sl
 8016e04:	46e0      	mov	r8, ip
 8016e06:	e7dc      	b.n	8016dc2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xe6>
 8016e08:	2204      	movs	r2, #4
 8016e0a:	4615      	mov	r5, r2
 8016e0c:	9905      	ldr	r1, [sp, #20]
 8016e0e:	9a01      	ldr	r2, [sp, #4]
 8016e10:	fb15 1202 	smlabb	r2, r5, r2, r1
 8016e14:	9903      	ldr	r1, [sp, #12]
 8016e16:	588a      	ldr	r2, [r1, r2]
 8016e18:	4543      	cmp	r3, r8
 8016e1a:	bf27      	ittee	cs
 8016e1c:	eba3 0a08 	subcs.w	sl, r3, r8
 8016e20:	46c6      	movcs	lr, r8
 8016e22:	eba8 0c03 	subcc.w	ip, r8, r3
 8016e26:	469e      	movcc	lr, r3
 8016e28:	ea4f 6112 	mov.w	r1, r2, lsr #24
 8016e2c:	bf27      	ittee	cs
 8016e2e:	fa1f fa8a 	uxthcs.w	sl, sl
 8016e32:	46a4      	movcs	ip, r4
 8016e34:	fa1f fc8c 	uxthcc.w	ip, ip
 8016e38:	46a2      	movcc	sl, r4
 8016e3a:	ea4f 0e4e 	mov.w	lr, lr, lsl #1
 8016e3e:	2900      	cmp	r1, #0
 8016e40:	d066      	beq.n	8016f10 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x234>
 8016e42:	29ff      	cmp	r1, #255	@ 0xff
 8016e44:	ea4f 2612 	mov.w	r6, r2, lsr #8
 8016e48:	d114      	bne.n	8016e74 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
 8016e4a:	9d02      	ldr	r5, [sp, #8]
 8016e4c:	2dff      	cmp	r5, #255	@ 0xff
 8016e4e:	d111      	bne.n	8016e74 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
 8016e50:	0951      	lsrs	r1, r2, #5
 8016e52:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
 8016e56:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8016e5a:	f026 0607 	bic.w	r6, r6, #7
 8016e5e:	430e      	orrs	r6, r1
 8016e60:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8016e64:	4316      	orrs	r6, r2
 8016e66:	b2b6      	uxth	r6, r6
 8016e68:	4486      	add	lr, r0
 8016e6a:	4586      	cmp	lr, r0
 8016e6c:	d051      	beq.n	8016f12 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 8016e6e:	f820 6b02 	strh.w	r6, [r0], #2
 8016e72:	e7fa      	b.n	8016e6a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x18e>
 8016e74:	9d02      	ldr	r5, [sp, #8]
 8016e76:	4369      	muls	r1, r5
 8016e78:	1c4d      	adds	r5, r1, #1
 8016e7a:	eb05 2521 	add.w	r5, r5, r1, asr #8
 8016e7e:	122d      	asrs	r5, r5, #8
 8016e80:	ea6f 0b05 	mvn.w	fp, r5
 8016e84:	f3c2 4107 	ubfx	r1, r2, #16, #8
 8016e88:	b2ad      	uxth	r5, r5
 8016e8a:	b2f6      	uxtb	r6, r6
 8016e8c:	b2d2      	uxtb	r2, r2
 8016e8e:	fb11 f105 	smulbb	r1, r1, r5
 8016e92:	fb16 f605 	smulbb	r6, r6, r5
 8016e96:	fb12 f205 	smulbb	r2, r2, r5
 8016e9a:	b289      	uxth	r1, r1
 8016e9c:	b2b6      	uxth	r6, r6
 8016e9e:	b292      	uxth	r2, r2
 8016ea0:	9106      	str	r1, [sp, #24]
 8016ea2:	9607      	str	r6, [sp, #28]
 8016ea4:	9208      	str	r2, [sp, #32]
 8016ea6:	4486      	add	lr, r0
 8016ea8:	fa5f fb8b 	uxtb.w	fp, fp
 8016eac:	4586      	cmp	lr, r0
 8016eae:	d030      	beq.n	8016f12 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 8016eb0:	8802      	ldrh	r2, [r0, #0]
 8016eb2:	9906      	ldr	r1, [sp, #24]
 8016eb4:	1216      	asrs	r6, r2, #8
 8016eb6:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 8016eba:	10d5      	asrs	r5, r2, #3
 8016ebc:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 8016ec0:	fb06 160b 	mla	r6, r6, fp, r1
 8016ec4:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 8016ec8:	9907      	ldr	r1, [sp, #28]
 8016eca:	00d2      	lsls	r2, r2, #3
 8016ecc:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 8016ed0:	fb05 150b 	mla	r5, r5, fp, r1
 8016ed4:	b2d2      	uxtb	r2, r2
 8016ed6:	9908      	ldr	r1, [sp, #32]
 8016ed8:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8016edc:	b2b6      	uxth	r6, r6
 8016ede:	fb02 120b 	mla	r2, r2, fp, r1
 8016ee2:	b292      	uxth	r2, r2
 8016ee4:	1c71      	adds	r1, r6, #1
 8016ee6:	eb01 2616 	add.w	r6, r1, r6, lsr #8
 8016eea:	1c51      	adds	r1, r2, #1
 8016eec:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8016ef0:	b2ad      	uxth	r5, r5
 8016ef2:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8016ef6:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
 8016efa:	4316      	orrs	r6, r2
 8016efc:	1c6a      	adds	r2, r5, #1
 8016efe:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 8016f02:	096d      	lsrs	r5, r5, #5
 8016f04:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8016f08:	432e      	orrs	r6, r5
 8016f0a:	f820 6b02 	strh.w	r6, [r0], #2
 8016f0e:	e7cd      	b.n	8016eac <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d0>
 8016f10:	4470      	add	r0, lr
 8016f12:	4543      	cmp	r3, r8
 8016f14:	f4ff af75 	bcc.w	8016e02 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x126>
 8016f18:	f8bd 402c 	ldrh.w	r4, [sp, #44]	@ 0x2c
 8016f1c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8016f1e:	fa1f fc89 	uxth.w	ip, r9
 8016f22:	eba4 040c 	sub.w	r4, r4, ip
 8016f26:	881b      	ldrh	r3, [r3, #0]
 8016f28:	b2a4      	uxth	r4, r4
 8016f2a:	2c00      	cmp	r4, #0
 8016f2c:	eba3 0309 	sub.w	r3, r3, r9
 8016f30:	bf18      	it	ne
 8016f32:	f04f 0c00 	movne.w	ip, #0
 8016f36:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8016f3a:	e762      	b.n	8016e02 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x126>
 8016f3c:	4b03      	ldr	r3, [pc, #12]	@ (8016f4c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
 8016f3e:	6818      	ldr	r0, [r3, #0]
 8016f40:	6803      	ldr	r3, [r0, #0]
 8016f42:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8016f44:	4798      	blx	r3
 8016f46:	b00f      	add	sp, #60	@ 0x3c
 8016f48:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016f4c:	200133d4 	.word	0x200133d4
 8016f50:	200133cc 	.word	0x200133cc

08016f54 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 8016f54:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016f58:	b093      	sub	sp, #76	@ 0x4c
 8016f5a:	461c      	mov	r4, r3
 8016f5c:	9205      	str	r2, [sp, #20]
 8016f5e:	f89d 2074 	ldrb.w	r2, [sp, #116]	@ 0x74
 8016f62:	9101      	str	r1, [sp, #4]
 8016f64:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8016f66:	9202      	str	r2, [sp, #8]
 8016f68:	2a00      	cmp	r2, #0
 8016f6a:	f000 812c 	beq.w	80171c6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x272>
 8016f6e:	6820      	ldr	r0, [r4, #0]
 8016f70:	6861      	ldr	r1, [r4, #4]
 8016f72:	aa0e      	add	r2, sp, #56	@ 0x38
 8016f74:	c203      	stmia	r2!, {r0, r1}
 8016f76:	6818      	ldr	r0, [r3, #0]
 8016f78:	6859      	ldr	r1, [r3, #4]
 8016f7a:	aa10      	add	r2, sp, #64	@ 0x40
 8016f7c:	c203      	stmia	r2!, {r0, r1}
 8016f7e:	a80e      	add	r0, sp, #56	@ 0x38
 8016f80:	f7f8 fb30 	bl	800f5e4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8016f84:	4621      	mov	r1, r4
 8016f86:	a810      	add	r0, sp, #64	@ 0x40
 8016f88:	f7f8 fb54 	bl	800f634 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8016f8c:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	@ 0x3c
 8016f90:	f9bd 503e 	ldrsh.w	r5, [sp, #62]	@ 0x3e
 8016f94:	f8bd 0040 	ldrh.w	r0, [sp, #64]	@ 0x40
 8016f98:	f5b6 6f80 	cmp.w	r6, #1024	@ 0x400
 8016f9c:	bfde      	ittt	le
 8016f9e:	b2b3      	uxthle	r3, r6
 8016fa0:	f44f 6280 	movle.w	r2, #1024	@ 0x400
 8016fa4:	fb92 f3f3 	sdivle	r3, r2, r3
 8016fa8:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	@ 0x42
 8016fac:	bfc8      	it	gt
 8016fae:	2301      	movgt	r3, #1
 8016fb0:	fb92 f1f3 	sdiv	r1, r2, r3
 8016fb4:	fa1f fc81 	uxth.w	ip, r1
 8016fb8:	fb0c 2413 	mls	r4, ip, r3, r2
 8016fbc:	fb14 f406 	smulbb	r4, r4, r6
 8016fc0:	441d      	add	r5, r3
 8016fc2:	4404      	add	r4, r0
 8016fc4:	4661      	mov	r1, ip
 8016fc6:	3d01      	subs	r5, #1
 8016fc8:	b2a4      	uxth	r4, r4
 8016fca:	fb95 f5f3 	sdiv	r5, r5, r3
 8016fce:	b131      	cbz	r1, 8016fde <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x8a>
 8016fd0:	9b05      	ldr	r3, [sp, #20]
 8016fd2:	9901      	ldr	r1, [sp, #4]
 8016fd4:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 8016fd8:	ba1b      	rev	r3, r3
 8016fda:	4419      	add	r1, r3
 8016fdc:	9101      	str	r1, [sp, #4]
 8016fde:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
 8016fe2:	f9bd b044 	ldrsh.w	fp, [sp, #68]	@ 0x44
 8016fe6:	f9bd 6046 	ldrsh.w	r6, [sp, #70]	@ 0x46
 8016fea:	4418      	add	r0, r3
 8016fec:	f8bd 303a 	ldrh.w	r3, [sp, #58]	@ 0x3a
 8016ff0:	f8ad 0040 	strh.w	r0, [sp, #64]	@ 0x40
 8016ff4:	441a      	add	r2, r3
 8016ff6:	4b75      	ldr	r3, [pc, #468]	@ (80171cc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>)
 8016ff8:	f8ad 2042 	strh.w	r2, [sp, #66]	@ 0x42
 8016ffc:	6818      	ldr	r0, [r3, #0]
 8016ffe:	6803      	ldr	r3, [r0, #0]
 8017000:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8017002:	4798      	blx	r3
 8017004:	4972      	ldr	r1, [pc, #456]	@ (80171d0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27c>)
 8017006:	f9bd c040 	ldrsh.w	ip, [sp, #64]	@ 0x40
 801700a:	880b      	ldrh	r3, [r1, #0]
 801700c:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	@ 0x42
 8017010:	910d      	str	r1, [sp, #52]	@ 0x34
 8017012:	fb03 c202 	mla	r2, r3, r2, ip
 8017016:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801701a:	4373      	muls	r3, r6
 801701c:	b2ad      	uxth	r5, r5
 801701e:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8017022:	00ad      	lsls	r5, r5, #2
 8017024:	9308      	str	r3, [sp, #32]
 8017026:	1d2b      	adds	r3, r5, #4
 8017028:	9309      	str	r3, [sp, #36]	@ 0x24
 801702a:	9b02      	ldr	r3, [sp, #8]
 801702c:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8017030:	9106      	str	r1, [sp, #24]
 8017032:	43da      	mvns	r2, r3
 8017034:	2c00      	cmp	r4, #0
 8017036:	bf0c      	ite	eq
 8017038:	46dc      	moveq	ip, fp
 801703a:	f04f 0c00 	movne.w	ip, #0
 801703e:	2300      	movs	r3, #0
 8017040:	b2d2      	uxtb	r2, r2
 8017042:	fa1f fc8c 	uxth.w	ip, ip
 8017046:	9303      	str	r3, [sp, #12]
 8017048:	9207      	str	r2, [sp, #28]
 801704a:	9a08      	ldr	r2, [sp, #32]
 801704c:	4282      	cmp	r2, r0
 801704e:	f240 80b5 	bls.w	80171bc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x268>
 8017052:	b963      	cbnz	r3, 801706e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11a>
 8017054:	9b01      	ldr	r3, [sp, #4]
 8017056:	781a      	ldrb	r2, [r3, #0]
 8017058:	0993      	lsrs	r3, r2, #6
 801705a:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 801705e:	9203      	str	r2, [sp, #12]
 8017060:	1e5a      	subs	r2, r3, #1
 8017062:	2a02      	cmp	r2, #2
 8017064:	d815      	bhi.n	8017092 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x13e>
 8017066:	9a01      	ldr	r2, [sp, #4]
 8017068:	3201      	adds	r2, #1
 801706a:	9201      	str	r2, [sp, #4]
 801706c:	b29b      	uxth	r3, r3
 801706e:	b1b4      	cbz	r4, 801709e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x14a>
 8017070:	429c      	cmp	r4, r3
 8017072:	bf95      	itete	ls
 8017074:	1b1c      	subls	r4, r3, r4
 8017076:	1ae4      	subhi	r4, r4, r3
 8017078:	fa1f f884 	uxthls.w	r8, r4
 801707c:	b2a4      	uxthhi	r4, r4
 801707e:	bf87      	ittee	hi
 8017080:	4666      	movhi	r6, ip
 8017082:	f04f 0800 	movhi.w	r8, #0
 8017086:	fa1f f68b 	uxthls.w	r6, fp
 801708a:	2400      	movls	r4, #0
 801708c:	4643      	mov	r3, r8
 801708e:	46b4      	mov	ip, r6
 8017090:	e7db      	b.n	801704a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf6>
 8017092:	9a01      	ldr	r2, [sp, #4]
 8017094:	9b01      	ldr	r3, [sp, #4]
 8017096:	3202      	adds	r2, #2
 8017098:	785b      	ldrb	r3, [r3, #1]
 801709a:	9201      	str	r2, [sp, #4]
 801709c:	e7e7      	b.n	801706e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11a>
 801709e:	2203      	movs	r2, #3
 80170a0:	4615      	mov	r5, r2
 80170a2:	9909      	ldr	r1, [sp, #36]	@ 0x24
 80170a4:	9a03      	ldr	r2, [sp, #12]
 80170a6:	fb15 1202 	smlabb	r2, r5, r2, r1
 80170aa:	9905      	ldr	r1, [sp, #20]
 80170ac:	4563      	cmp	r3, ip
 80170ae:	eb01 0502 	add.w	r5, r1, r2
 80170b2:	9902      	ldr	r1, [sp, #8]
 80170b4:	bf29      	itett	cs
 80170b6:	eba3 080c 	subcs.w	r8, r3, ip
 80170ba:	ebac 0603 	subcc.w	r6, ip, r3
 80170be:	fa1f f888 	uxthcs.w	r8, r8
 80170c2:	46e1      	movcs	r9, ip
 80170c4:	bf2f      	iteee	cs
 80170c6:	4626      	movcs	r6, r4
 80170c8:	b2b6      	uxthcc	r6, r6
 80170ca:	4699      	movcc	r9, r3
 80170cc:	46a0      	movcc	r8, r4
 80170ce:	29ff      	cmp	r1, #255	@ 0xff
 80170d0:	d04a      	beq.n	8017168 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x214>
 80170d2:	9f06      	ldr	r7, [sp, #24]
 80170d4:	78a9      	ldrb	r1, [r5, #2]
 80170d6:	9004      	str	r0, [sp, #16]
 80170d8:	4379      	muls	r1, r7
 80170da:	910a      	str	r1, [sp, #40]	@ 0x28
 80170dc:	7869      	ldrb	r1, [r5, #1]
 80170de:	4379      	muls	r1, r7
 80170e0:	910b      	str	r1, [sp, #44]	@ 0x2c
 80170e2:	9905      	ldr	r1, [sp, #20]
 80170e4:	5c8a      	ldrb	r2, [r1, r2]
 80170e6:	437a      	muls	r2, r7
 80170e8:	920c      	str	r2, [sp, #48]	@ 0x30
 80170ea:	46ca      	mov	sl, r9
 80170ec:	f1ba 0f00 	cmp.w	sl, #0
 80170f0:	d03d      	beq.n	801716e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21a>
 80170f2:	9a04      	ldr	r2, [sp, #16]
 80170f4:	9f07      	ldr	r7, [sp, #28]
 80170f6:	8812      	ldrh	r2, [r2, #0]
 80170f8:	1215      	asrs	r5, r2, #8
 80170fa:	46be      	mov	lr, r7
 80170fc:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 8017100:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
 8017102:	10d1      	asrs	r1, r2, #3
 8017104:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 8017108:	fb05 750e 	mla	r5, r5, lr, r7
 801710c:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 8017110:	9f0b      	ldr	r7, [sp, #44]	@ 0x2c
 8017112:	00d2      	lsls	r2, r2, #3
 8017114:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 8017118:	fb01 710e 	mla	r1, r1, lr, r7
 801711c:	b2d2      	uxtb	r2, r2
 801711e:	9f0c      	ldr	r7, [sp, #48]	@ 0x30
 8017120:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8017124:	b2ad      	uxth	r5, r5
 8017126:	fb02 720e 	mla	r2, r2, lr, r7
 801712a:	b292      	uxth	r2, r2
 801712c:	f105 0e01 	add.w	lr, r5, #1
 8017130:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 8017134:	f102 0e01 	add.w	lr, r2, #1
 8017138:	eb0e 2212 	add.w	r2, lr, r2, lsr #8
 801713c:	b289      	uxth	r1, r1
 801713e:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8017142:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 8017146:	4315      	orrs	r5, r2
 8017148:	1c4a      	adds	r2, r1, #1
 801714a:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801714e:	0949      	lsrs	r1, r1, #5
 8017150:	9a04      	ldr	r2, [sp, #16]
 8017152:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8017156:	430d      	orrs	r5, r1
 8017158:	f822 5b02 	strh.w	r5, [r2], #2
 801715c:	f10a 3aff 	add.w	sl, sl, #4294967295
 8017160:	9204      	str	r2, [sp, #16]
 8017162:	fa1f fa8a 	uxth.w	sl, sl
 8017166:	e7c1      	b.n	80170ec <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x198>
 8017168:	4649      	mov	r1, r9
 801716a:	4686      	mov	lr, r0
 801716c:	b999      	cbnz	r1, 8017196 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x242>
 801716e:	4563      	cmp	r3, ip
 8017170:	eb00 0049 	add.w	r0, r0, r9, lsl #1
 8017174:	d38a      	bcc.n	801708c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x138>
 8017176:	f8bd 403c 	ldrh.w	r4, [sp, #60]	@ 0x3c
 801717a:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801717c:	fa1f f68b 	uxth.w	r6, fp
 8017180:	1ba4      	subs	r4, r4, r6
 8017182:	881b      	ldrh	r3, [r3, #0]
 8017184:	b2a4      	uxth	r4, r4
 8017186:	2c00      	cmp	r4, #0
 8017188:	eba3 030b 	sub.w	r3, r3, fp
 801718c:	bf18      	it	ne
 801718e:	2600      	movne	r6, #0
 8017190:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8017194:	e77a      	b.n	801708c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x138>
 8017196:	78aa      	ldrb	r2, [r5, #2]
 8017198:	4f0e      	ldr	r7, [pc, #56]	@ (80171d4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x280>)
 801719a:	ea07 2a02 	and.w	sl, r7, r2, lsl #8
 801719e:	786a      	ldrb	r2, [r5, #1]
 80171a0:	00d2      	lsls	r2, r2, #3
 80171a2:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 80171a6:	ea4a 0202 	orr.w	r2, sl, r2
 80171aa:	f895 a000 	ldrb.w	sl, [r5]
 80171ae:	3901      	subs	r1, #1
 80171b0:	ea42 02da 	orr.w	r2, r2, sl, lsr #3
 80171b4:	f82e 2b02 	strh.w	r2, [lr], #2
 80171b8:	b289      	uxth	r1, r1
 80171ba:	e7d7      	b.n	801716c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x218>
 80171bc:	4b03      	ldr	r3, [pc, #12]	@ (80171cc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>)
 80171be:	6818      	ldr	r0, [r3, #0]
 80171c0:	6803      	ldr	r3, [r0, #0]
 80171c2:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80171c4:	4798      	blx	r3
 80171c6:	b013      	add	sp, #76	@ 0x4c
 80171c8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80171cc:	200133d4 	.word	0x200133d4
 80171d0:	200133cc 	.word	0x200133cc
 80171d4:	fffff800 	.word	0xfffff800

080171d8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 80171d8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80171dc:	b09d      	sub	sp, #116	@ 0x74
 80171de:	e9cd 1211 	strd	r1, r2, [sp, #68]	@ 0x44
 80171e2:	f89d 209c 	ldrb.w	r2, [sp, #156]	@ 0x9c
 80171e6:	920e      	str	r2, [sp, #56]	@ 0x38
 80171e8:	461c      	mov	r4, r3
 80171ea:	4683      	mov	fp, r0
 80171ec:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 80171ee:	2a00      	cmp	r2, #0
 80171f0:	f000 81e0 	beq.w	80175b4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3dc>
 80171f4:	6820      	ldr	r0, [r4, #0]
 80171f6:	6861      	ldr	r1, [r4, #4]
 80171f8:	aa18      	add	r2, sp, #96	@ 0x60
 80171fa:	c203      	stmia	r2!, {r0, r1}
 80171fc:	6818      	ldr	r0, [r3, #0]
 80171fe:	6859      	ldr	r1, [r3, #4]
 8017200:	aa1a      	add	r2, sp, #104	@ 0x68
 8017202:	c203      	stmia	r2!, {r0, r1}
 8017204:	a818      	add	r0, sp, #96	@ 0x60
 8017206:	f7f8 f9ed 	bl	800f5e4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801720a:	4621      	mov	r1, r4
 801720c:	a81a      	add	r0, sp, #104	@ 0x68
 801720e:	f7f8 fa11 	bl	800f634 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8017212:	f9bd 3064 	ldrsh.w	r3, [sp, #100]	@ 0x64
 8017216:	f9bd 4066 	ldrsh.w	r4, [sp, #102]	@ 0x66
 801721a:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	@ 0x6e
 801721e:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8017222:	bfd7      	itett	le
 8017224:	b29a      	uxthle	r2, r3
 8017226:	2201      	movgt	r2, #1
 8017228:	f44f 6180 	movle.w	r1, #1024	@ 0x400
 801722c:	fb91 f2f2 	sdivle	r2, r1, r2
 8017230:	9202      	str	r2, [sp, #8]
 8017232:	9802      	ldr	r0, [sp, #8]
 8017234:	f9bd 206a 	ldrsh.w	r2, [sp, #106]	@ 0x6a
 8017238:	fb92 f0f0 	sdiv	r0, r2, r0
 801723c:	b280      	uxth	r0, r0
 801723e:	900f      	str	r0, [sp, #60]	@ 0x3c
 8017240:	9902      	ldr	r1, [sp, #8]
 8017242:	9802      	ldr	r0, [sp, #8]
 8017244:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 8017246:	440c      	add	r4, r1
 8017248:	fb05 2510 	mls	r5, r5, r0, r2
 801724c:	fb15 f503 	smulbb	r5, r5, r3
 8017250:	3c01      	subs	r4, #1
 8017252:	f8bd 3060 	ldrh.w	r3, [sp, #96]	@ 0x60
 8017256:	fb94 f4f1 	sdiv	r4, r4, r1
 801725a:	f8bd 1068 	ldrh.w	r1, [sp, #104]	@ 0x68
 801725e:	440d      	add	r5, r1
 8017260:	4419      	add	r1, r3
 8017262:	f8bd 3062 	ldrh.w	r3, [sp, #98]	@ 0x62
 8017266:	f8ad 1068 	strh.w	r1, [sp, #104]	@ 0x68
 801726a:	441a      	add	r2, r3
 801726c:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	@ 0x6c
 8017270:	9306      	str	r3, [sp, #24]
 8017272:	4bb3      	ldr	r3, [pc, #716]	@ (8017540 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x368>)
 8017274:	f8ad 206a 	strh.w	r2, [sp, #106]	@ 0x6a
 8017278:	6818      	ldr	r0, [r3, #0]
 801727a:	6803      	ldr	r3, [r0, #0]
 801727c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801727e:	4798      	blx	r3
 8017280:	4bb0      	ldr	r3, [pc, #704]	@ (8017544 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x36c>)
 8017282:	f9bd 106a 	ldrsh.w	r1, [sp, #106]	@ 0x6a
 8017286:	881a      	ldrh	r2, [r3, #0]
 8017288:	f9bd 7068 	ldrsh.w	r7, [sp, #104]	@ 0x68
 801728c:	9316      	str	r3, [sp, #88]	@ 0x58
 801728e:	fb02 7101 	mla	r1, r2, r1, r7
 8017292:	3401      	adds	r4, #1
 8017294:	eb00 0841 	add.w	r8, r0, r1, lsl #1
 8017298:	b2a4      	uxth	r4, r4
 801729a:	4356      	muls	r6, r2
 801729c:	eb08 0246 	add.w	r2, r8, r6, lsl #1
 80172a0:	00a4      	lsls	r4, r4, #2
 80172a2:	920a      	str	r2, [sp, #40]	@ 0x28
 80172a4:	1d22      	adds	r2, r4, #4
 80172a6:	b2ad      	uxth	r5, r5
 80172a8:	9213      	str	r2, [sp, #76]	@ 0x4c
 80172aa:	4ba7      	ldr	r3, [pc, #668]	@ (8017548 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x370>)
 80172ac:	9a06      	ldr	r2, [sp, #24]
 80172ae:	2d00      	cmp	r5, #0
 80172b0:	bf0c      	ite	eq
 80172b2:	4611      	moveq	r1, r2
 80172b4:	2100      	movne	r1, #0
 80172b6:	2200      	movs	r2, #0
 80172b8:	eba3 030b 	sub.w	r3, r3, fp
 80172bc:	b289      	uxth	r1, r1
 80172be:	920d      	str	r2, [sp, #52]	@ 0x34
 80172c0:	9317      	str	r3, [sp, #92]	@ 0x5c
 80172c2:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 80172c4:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80172c6:	fa12 f383 	uxtah	r3, r2, r3
 80172ca:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 80172cc:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 80172d0:	3304      	adds	r3, #4
 80172d2:	9308      	str	r3, [sp, #32]
 80172d4:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80172d6:	4543      	cmp	r3, r8
 80172d8:	f240 8167 	bls.w	80175aa <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3d2>
 80172dc:	9a02      	ldr	r2, [sp, #8]
 80172de:	f8bd 3064 	ldrh.w	r3, [sp, #100]	@ 0x64
 80172e2:	fbb5 f3f3 	udiv	r3, r5, r3
 80172e6:	1ad3      	subs	r3, r2, r3
 80172e8:	b29b      	uxth	r3, r3
 80172ea:	9314      	str	r3, [sp, #80]	@ 0x50
 80172ec:	9b08      	ldr	r3, [sp, #32]
 80172ee:	9808      	ldr	r0, [sp, #32]
 80172f0:	785a      	ldrb	r2, [r3, #1]
 80172f2:	789b      	ldrb	r3, [r3, #2]
 80172f4:	7800      	ldrb	r0, [r0, #0]
 80172f6:	9010      	str	r0, [sp, #64]	@ 0x40
 80172f8:	021b      	lsls	r3, r3, #8
 80172fa:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 80172fe:	9a08      	ldr	r2, [sp, #32]
 8017300:	78d2      	ldrb	r2, [r2, #3]
 8017302:	4313      	orrs	r3, r2
 8017304:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8017306:	3001      	adds	r0, #1
 8017308:	441a      	add	r2, r3
 801730a:	9007      	str	r0, [sp, #28]
 801730c:	1c50      	adds	r0, r2, #1
 801730e:	9005      	str	r0, [sp, #20]
 8017310:	7852      	ldrb	r2, [r2, #1]
 8017312:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8017314:	0212      	lsls	r2, r2, #8
 8017316:	5cc3      	ldrb	r3, [r0, r3]
 8017318:	f402 72ff 	and.w	r2, r2, #510	@ 0x1fe
 801731c:	431a      	orrs	r2, r3
 801731e:	b293      	uxth	r3, r2
 8017320:	930b      	str	r3, [sp, #44]	@ 0x2c
 8017322:	2300      	movs	r3, #0
 8017324:	9309      	str	r3, [sp, #36]	@ 0x24
 8017326:	2301      	movs	r3, #1
 8017328:	9301      	str	r3, [sp, #4]
 801732a:	9304      	str	r3, [sp, #16]
 801732c:	2300      	movs	r3, #0
 801732e:	f88b 2804 	strb.w	r2, [fp, #2052]	@ 0x804
 8017332:	9303      	str	r3, [sp, #12]
 8017334:	f04f 0e01 	mov.w	lr, #1
 8017338:	2d00      	cmp	r5, #0
 801733a:	d07c      	beq.n	8017436 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25e>
 801733c:	45ae      	cmp	lr, r5
 801733e:	d26b      	bcs.n	8017418 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x240>
 8017340:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8017342:	eba5 050e 	sub.w	r5, r5, lr
 8017346:	4543      	cmp	r3, r8
 8017348:	b2ad      	uxth	r5, r5
 801734a:	460c      	mov	r4, r1
 801734c:	d802      	bhi.n	8017354 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x17c>
 801734e:	e070      	b.n	8017432 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25a>
 8017350:	2b00      	cmp	r3, #0
 8017352:	d15c      	bne.n	801740e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 8017354:	9b05      	ldr	r3, [sp, #20]
 8017356:	9a04      	ldr	r2, [sp, #16]
 8017358:	785b      	ldrb	r3, [r3, #1]
 801735a:	9904      	ldr	r1, [sp, #16]
 801735c:	f1c2 0207 	rsb	r2, r2, #7
 8017360:	4093      	lsls	r3, r2
 8017362:	005b      	lsls	r3, r3, #1
 8017364:	f403 72ff 	and.w	r2, r3, #510	@ 0x1fe
 8017368:	9b05      	ldr	r3, [sp, #20]
 801736a:	781b      	ldrb	r3, [r3, #0]
 801736c:	410b      	asrs	r3, r1
 801736e:	3101      	adds	r1, #1
 8017370:	b2c9      	uxtb	r1, r1
 8017372:	2908      	cmp	r1, #8
 8017374:	9104      	str	r1, [sp, #16]
 8017376:	9905      	ldr	r1, [sp, #20]
 8017378:	bf0a      	itet	eq
 801737a:	3102      	addeq	r1, #2
 801737c:	3101      	addne	r1, #1
 801737e:	9105      	streq	r1, [sp, #20]
 8017380:	b2db      	uxtb	r3, r3
 8017382:	bf0a      	itet	eq
 8017384:	2100      	moveq	r1, #0
 8017386:	9105      	strne	r1, [sp, #20]
 8017388:	9104      	streq	r1, [sp, #16]
 801738a:	4313      	orrs	r3, r2
 801738c:	9910      	ldr	r1, [sp, #64]	@ 0x40
 801738e:	b29a      	uxth	r2, r3
 8017390:	4291      	cmp	r1, r2
 8017392:	d30a      	bcc.n	80173aa <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d2>
 8017394:	f88b 3804 	strb.w	r3, [fp, #2052]	@ 0x804
 8017398:	2301      	movs	r3, #1
 801739a:	9907      	ldr	r1, [sp, #28]
 801739c:	f5b1 7f00 	cmp.w	r1, #512	@ 0x200
 80173a0:	d30f      	bcc.n	80173c2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1ea>
 80173a2:	2100      	movs	r1, #0
 80173a4:	9301      	str	r3, [sp, #4]
 80173a6:	9103      	str	r1, [sp, #12]
 80173a8:	e032      	b.n	8017410 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x238>
 80173aa:	9b07      	ldr	r3, [sp, #28]
 80173ac:	429a      	cmp	r2, r3
 80173ae:	d318      	bcc.n	80173e2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x20a>
 80173b0:	9b01      	ldr	r3, [sp, #4]
 80173b2:	f89b 1804 	ldrb.w	r1, [fp, #2052]	@ 0x804
 80173b6:	445b      	add	r3, fp
 80173b8:	f883 1804 	strb.w	r1, [r3, #2052]	@ 0x804
 80173bc:	9b01      	ldr	r3, [sp, #4]
 80173be:	3301      	adds	r3, #1
 80173c0:	b29b      	uxth	r3, r3
 80173c2:	9907      	ldr	r1, [sp, #28]
 80173c4:	f89b 0804 	ldrb.w	r0, [fp, #2052]	@ 0x804
 80173c8:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
 80173cc:	7108      	strb	r0, [r1, #4]
 80173ce:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 80173d0:	80c8      	strh	r0, [r1, #6]
 80173d2:	9801      	ldr	r0, [sp, #4]
 80173d4:	3001      	adds	r0, #1
 80173d6:	7148      	strb	r0, [r1, #5]
 80173d8:	9907      	ldr	r1, [sp, #28]
 80173da:	3101      	adds	r1, #1
 80173dc:	b289      	uxth	r1, r1
 80173de:	9107      	str	r1, [sp, #28]
 80173e0:	e7df      	b.n	80173a2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1ca>
 80173e2:	eb0b 0382 	add.w	r3, fp, r2, lsl #2
 80173e6:	4611      	mov	r1, r2
 80173e8:	795b      	ldrb	r3, [r3, #5]
 80173ea:	f603 0004 	addw	r0, r3, #2052	@ 0x804
 80173ee:	4458      	add	r0, fp
 80173f0:	9e17      	ldr	r6, [sp, #92]	@ 0x5c
 80173f2:	4406      	add	r6, r0
 80173f4:	2e00      	cmp	r6, #0
 80173f6:	dd06      	ble.n	8017406 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x22e>
 80173f8:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
 80173fc:	790e      	ldrb	r6, [r1, #4]
 80173fe:	f800 6d01 	strb.w	r6, [r0, #-1]!
 8017402:	88c9      	ldrh	r1, [r1, #6]
 8017404:	e7f4      	b.n	80173f0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x218>
 8017406:	f88b 1804 	strb.w	r1, [fp, #2052]	@ 0x804
 801740a:	b29b      	uxth	r3, r3
 801740c:	e7c5      	b.n	801739a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1c2>
 801740e:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8017410:	920b      	str	r2, [sp, #44]	@ 0x2c
 8017412:	4621      	mov	r1, r4
 8017414:	469e      	mov	lr, r3
 8017416:	e78f      	b.n	8017338 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x160>
 8017418:	9a03      	ldr	r2, [sp, #12]
 801741a:	f8bd 4018 	ldrh.w	r4, [sp, #24]
 801741e:	442a      	add	r2, r5
 8017420:	ebae 0305 	sub.w	r3, lr, r5
 8017424:	b292      	uxth	r2, r2
 8017426:	b29b      	uxth	r3, r3
 8017428:	9203      	str	r2, [sp, #12]
 801742a:	2500      	movs	r5, #0
 801742c:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 801742e:	4542      	cmp	r2, r8
 8017430:	d88e      	bhi.n	8017350 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x178>
 8017432:	4621      	mov	r1, r4
 8017434:	e74e      	b.n	80172d4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xfc>
 8017436:	458e      	cmp	lr, r1
 8017438:	bf29      	itett	cs
 801743a:	ebae 0301 	subcs.w	r3, lr, r1
 801743e:	eba1 040e 	subcc.w	r4, r1, lr
 8017442:	b29b      	uxthcs	r3, r3
 8017444:	910c      	strcs	r1, [sp, #48]	@ 0x30
 8017446:	bf2f      	iteee	cs
 8017448:	462c      	movcs	r4, r5
 801744a:	b2a4      	uxthcc	r4, r4
 801744c:	f8cd e030 	strcc.w	lr, [sp, #48]	@ 0x30
 8017450:	462b      	movcc	r3, r5
 8017452:	f04f 0900 	mov.w	r9, #0
 8017456:	9a03      	ldr	r2, [sp, #12]
 8017458:	980c      	ldr	r0, [sp, #48]	@ 0x30
 801745a:	444a      	add	r2, r9
 801745c:	4548      	cmp	r0, r9
 801745e:	b292      	uxth	r2, r2
 8017460:	d074      	beq.n	801754c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x374>
 8017462:	445a      	add	r2, fp
 8017464:	2004      	movs	r0, #4
 8017466:	4605      	mov	r5, r0
 8017468:	f892 2804 	ldrb.w	r2, [r2, #2052]	@ 0x804
 801746c:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 801746e:	fb15 0202 	smlabb	r2, r5, r2, r0
 8017472:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8017474:	5880      	ldr	r0, [r0, r2]
 8017476:	ea5f 6a10 	movs.w	sl, r0, lsr #24
 801747a:	d014      	beq.n	80174a6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2ce>
 801747c:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 8017480:	ea4f 2510 	mov.w	r5, r0, lsr #8
 8017484:	d112      	bne.n	80174ac <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d4>
 8017486:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8017488:	2aff      	cmp	r2, #255	@ 0xff
 801748a:	d10f      	bne.n	80174ac <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d4>
 801748c:	0942      	lsrs	r2, r0, #5
 801748e:	f425 65ff 	bic.w	r5, r5, #2040	@ 0x7f8
 8017492:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8017496:	f025 0507 	bic.w	r5, r5, #7
 801749a:	4315      	orrs	r5, r2
 801749c:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 80174a0:	4305      	orrs	r5, r0
 80174a2:	f828 5019 	strh.w	r5, [r8, r9, lsl #1]
 80174a6:	f109 0901 	add.w	r9, r9, #1
 80174aa:	e7d4      	b.n	8017456 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x27e>
 80174ac:	f838 c019 	ldrh.w	ip, [r8, r9, lsl #1]
 80174b0:	ea4f 06ec 	mov.w	r6, ip, asr #3
 80174b4:	f006 02fc 	and.w	r2, r6, #252	@ 0xfc
 80174b8:	9215      	str	r2, [sp, #84]	@ 0x54
 80174ba:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 80174bc:	fb02 fa0a 	mul.w	sl, r2, sl
 80174c0:	f10a 0201 	add.w	r2, sl, #1
 80174c4:	eb02 222a 	add.w	r2, r2, sl, asr #8
 80174c8:	ea4f 272c 	mov.w	r7, ip, asr #8
 80174cc:	1212      	asrs	r2, r2, #8
 80174ce:	fa1f fa82 	uxth.w	sl, r2
 80174d2:	f3c0 4607 	ubfx	r6, r0, #16, #8
 80174d6:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 80174da:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80174de:	43d2      	mvns	r2, r2
 80174e0:	b2d2      	uxtb	r2, r2
 80174e2:	fb16 f60a 	smulbb	r6, r6, sl
 80174e6:	fa5f fc8c 	uxtb.w	ip, ip
 80174ea:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 80174ee:	b2c0      	uxtb	r0, r0
 80174f0:	fb07 6702 	mla	r7, r7, r2, r6
 80174f4:	ea4c 1c5c 	orr.w	ip, ip, ip, lsr #5
 80174f8:	9e15      	ldr	r6, [sp, #84]	@ 0x54
 80174fa:	fb10 f00a 	smulbb	r0, r0, sl
 80174fe:	fb0c 0002 	mla	r0, ip, r2, r0
 8017502:	b2ed      	uxtb	r5, r5
 8017504:	b2bf      	uxth	r7, r7
 8017506:	fb15 f50a 	smulbb	r5, r5, sl
 801750a:	b280      	uxth	r0, r0
 801750c:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 8017510:	fb06 5602 	mla	r6, r6, r2, r5
 8017514:	1c7a      	adds	r2, r7, #1
 8017516:	1c45      	adds	r5, r0, #1
 8017518:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801751c:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8017520:	b2b6      	uxth	r6, r6
 8017522:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8017526:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 801752a:	432f      	orrs	r7, r5
 801752c:	1c75      	adds	r5, r6, #1
 801752e:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 8017532:	096d      	lsrs	r5, r5, #5
 8017534:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8017538:	432f      	orrs	r7, r5
 801753a:	f828 7019 	strh.w	r7, [r8, r9, lsl #1]
 801753e:	e7b2      	b.n	80174a6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2ce>
 8017540:	200133d4 	.word	0x200133d4
 8017544:	200133cc 	.word	0x200133cc
 8017548:	fffff7fb 	.word	0xfffff7fb
 801754c:	9203      	str	r2, [sp, #12]
 801754e:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 8017550:	458e      	cmp	lr, r1
 8017552:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 8017556:	f4ff af68 	bcc.w	801742a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x252>
 801755a:	9a16      	ldr	r2, [sp, #88]	@ 0x58
 801755c:	9906      	ldr	r1, [sp, #24]
 801755e:	8812      	ldrh	r2, [r2, #0]
 8017560:	1a52      	subs	r2, r2, r1
 8017562:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 8017566:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8017568:	9914      	ldr	r1, [sp, #80]	@ 0x50
 801756a:	3201      	adds	r2, #1
 801756c:	428a      	cmp	r2, r1
 801756e:	9209      	str	r2, [sp, #36]	@ 0x24
 8017570:	d111      	bne.n	8017596 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3be>
 8017572:	f8bd 5068 	ldrh.w	r5, [sp, #104]	@ 0x68
 8017576:	f8bd 9060 	ldrh.w	r9, [sp, #96]	@ 0x60
 801757a:	9b06      	ldr	r3, [sp, #24]
 801757c:	eba5 0509 	sub.w	r5, r5, r9
 8017580:	b2ad      	uxth	r5, r5
 8017582:	2d00      	cmp	r5, #0
 8017584:	bf08      	it	eq
 8017586:	4619      	moveq	r1, r3
 8017588:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801758a:	bf18      	it	ne
 801758c:	2100      	movne	r1, #0
 801758e:	3301      	adds	r3, #1
 8017590:	930d      	str	r3, [sp, #52]	@ 0x34
 8017592:	b289      	uxth	r1, r1
 8017594:	e695      	b.n	80172c2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xea>
 8017596:	f8bd 4018 	ldrh.w	r4, [sp, #24]
 801759a:	f8bd 5064 	ldrh.w	r5, [sp, #100]	@ 0x64
 801759e:	1b2d      	subs	r5, r5, r4
 80175a0:	b2ad      	uxth	r5, r5
 80175a2:	2d00      	cmp	r5, #0
 80175a4:	bf18      	it	ne
 80175a6:	2400      	movne	r4, #0
 80175a8:	e740      	b.n	801742c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x254>
 80175aa:	4b04      	ldr	r3, [pc, #16]	@ (80175bc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3e4>)
 80175ac:	6818      	ldr	r0, [r3, #0]
 80175ae:	6803      	ldr	r3, [r0, #0]
 80175b0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80175b2:	4798      	blx	r3
 80175b4:	b01d      	add	sp, #116	@ 0x74
 80175b6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80175ba:	bf00      	nop
 80175bc:	200133d4 	.word	0x200133d4

080175c0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 80175c0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80175c4:	b09f      	sub	sp, #124	@ 0x7c
 80175c6:	e9cd 1213 	strd	r1, r2, [sp, #76]	@ 0x4c
 80175ca:	f89d 20a4 	ldrb.w	r2, [sp, #164]	@ 0xa4
 80175ce:	920a      	str	r2, [sp, #40]	@ 0x28
 80175d0:	461d      	mov	r5, r3
 80175d2:	4604      	mov	r4, r0
 80175d4:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 80175d6:	2a00      	cmp	r2, #0
 80175d8:	f000 81fa 	beq.w	80179d0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x410>
 80175dc:	6828      	ldr	r0, [r5, #0]
 80175de:	6869      	ldr	r1, [r5, #4]
 80175e0:	aa1a      	add	r2, sp, #104	@ 0x68
 80175e2:	c203      	stmia	r2!, {r0, r1}
 80175e4:	6818      	ldr	r0, [r3, #0]
 80175e6:	6859      	ldr	r1, [r3, #4]
 80175e8:	aa1c      	add	r2, sp, #112	@ 0x70
 80175ea:	c203      	stmia	r2!, {r0, r1}
 80175ec:	a81a      	add	r0, sp, #104	@ 0x68
 80175ee:	f7f7 fff9 	bl	800f5e4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80175f2:	4629      	mov	r1, r5
 80175f4:	a81c      	add	r0, sp, #112	@ 0x70
 80175f6:	f7f8 f81d 	bl	800f634 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80175fa:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	@ 0x6c
 80175fe:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	@ 0x6e
 8017602:	f9bd 7076 	ldrsh.w	r7, [sp, #118]	@ 0x76
 8017606:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 801760a:	bfd7      	itett	le
 801760c:	b29a      	uxthle	r2, r3
 801760e:	2201      	movgt	r2, #1
 8017610:	f44f 6180 	movle.w	r1, #1024	@ 0x400
 8017614:	fb91 f2f2 	sdivle	r2, r1, r2
 8017618:	9201      	str	r2, [sp, #4]
 801761a:	9801      	ldr	r0, [sp, #4]
 801761c:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	@ 0x72
 8017620:	fb92 f0f0 	sdiv	r0, r2, r0
 8017624:	b280      	uxth	r0, r0
 8017626:	9010      	str	r0, [sp, #64]	@ 0x40
 8017628:	9901      	ldr	r1, [sp, #4]
 801762a:	9801      	ldr	r0, [sp, #4]
 801762c:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 801762e:	440e      	add	r6, r1
 8017630:	fb05 2510 	mls	r5, r5, r0, r2
 8017634:	fb15 f503 	smulbb	r5, r5, r3
 8017638:	3e01      	subs	r6, #1
 801763a:	f8bd 3068 	ldrh.w	r3, [sp, #104]	@ 0x68
 801763e:	fb96 f6f1 	sdiv	r6, r6, r1
 8017642:	f8bd 1070 	ldrh.w	r1, [sp, #112]	@ 0x70
 8017646:	440d      	add	r5, r1
 8017648:	4419      	add	r1, r3
 801764a:	f8bd 306a 	ldrh.w	r3, [sp, #106]	@ 0x6a
 801764e:	f8ad 1070 	strh.w	r1, [sp, #112]	@ 0x70
 8017652:	441a      	add	r2, r3
 8017654:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	@ 0x74
 8017658:	9304      	str	r3, [sp, #16]
 801765a:	4b96      	ldr	r3, [pc, #600]	@ (80178b4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2f4>)
 801765c:	f8ad 2072 	strh.w	r2, [sp, #114]	@ 0x72
 8017660:	6818      	ldr	r0, [r3, #0]
 8017662:	6803      	ldr	r3, [r0, #0]
 8017664:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8017666:	4798      	blx	r3
 8017668:	4b93      	ldr	r3, [pc, #588]	@ (80178b8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2f8>)
 801766a:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	@ 0x72
 801766e:	881a      	ldrh	r2, [r3, #0]
 8017670:	f9bd c070 	ldrsh.w	ip, [sp, #112]	@ 0x70
 8017674:	9318      	str	r3, [sp, #96]	@ 0x60
 8017676:	fb02 c101 	mla	r1, r2, r1, ip
 801767a:	eb00 0b41 	add.w	fp, r0, r1, lsl #1
 801767e:	4357      	muls	r7, r2
 8017680:	eb0b 0247 	add.w	r2, fp, r7, lsl #1
 8017684:	3601      	adds	r6, #1
 8017686:	920b      	str	r2, [sp, #44]	@ 0x2c
 8017688:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801768a:	4b8c      	ldr	r3, [pc, #560]	@ (80178bc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2fc>)
 801768c:	b2b6      	uxth	r6, r6
 801768e:	eb02 0686 	add.w	r6, r2, r6, lsl #2
 8017692:	1d32      	adds	r2, r6, #4
 8017694:	9206      	str	r2, [sp, #24]
 8017696:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8017698:	43d2      	mvns	r2, r2
 801769a:	b2d2      	uxtb	r2, r2
 801769c:	b2ad      	uxth	r5, r5
 801769e:	9215      	str	r2, [sp, #84]	@ 0x54
 80176a0:	9a04      	ldr	r2, [sp, #16]
 80176a2:	2d00      	cmp	r5, #0
 80176a4:	bf0c      	ite	eq
 80176a6:	4611      	moveq	r1, r2
 80176a8:	2100      	movne	r1, #0
 80176aa:	2200      	movs	r2, #0
 80176ac:	1b1b      	subs	r3, r3, r4
 80176ae:	b289      	uxth	r1, r1
 80176b0:	920d      	str	r2, [sp, #52]	@ 0x34
 80176b2:	9319      	str	r3, [sp, #100]	@ 0x64
 80176b4:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 80176b6:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80176b8:	fa12 f383 	uxtah	r3, r2, r3
 80176bc:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 80176be:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 80176c2:	3304      	adds	r3, #4
 80176c4:	9307      	str	r3, [sp, #28]
 80176c6:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 80176c8:	455b      	cmp	r3, fp
 80176ca:	f240 817c 	bls.w	80179c6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x406>
 80176ce:	9a01      	ldr	r2, [sp, #4]
 80176d0:	f8bd 306c 	ldrh.w	r3, [sp, #108]	@ 0x6c
 80176d4:	fbb5 f3f3 	udiv	r3, r5, r3
 80176d8:	1ad3      	subs	r3, r2, r3
 80176da:	b29b      	uxth	r3, r3
 80176dc:	9316      	str	r3, [sp, #88]	@ 0x58
 80176de:	9b07      	ldr	r3, [sp, #28]
 80176e0:	9807      	ldr	r0, [sp, #28]
 80176e2:	785a      	ldrb	r2, [r3, #1]
 80176e4:	789b      	ldrb	r3, [r3, #2]
 80176e6:	7800      	ldrb	r0, [r0, #0]
 80176e8:	9011      	str	r0, [sp, #68]	@ 0x44
 80176ea:	021b      	lsls	r3, r3, #8
 80176ec:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 80176f0:	9a07      	ldr	r2, [sp, #28]
 80176f2:	78d2      	ldrb	r2, [r2, #3]
 80176f4:	4313      	orrs	r3, r2
 80176f6:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 80176f8:	3001      	adds	r0, #1
 80176fa:	441a      	add	r2, r3
 80176fc:	9005      	str	r0, [sp, #20]
 80176fe:	1c50      	adds	r0, r2, #1
 8017700:	9003      	str	r0, [sp, #12]
 8017702:	7852      	ldrb	r2, [r2, #1]
 8017704:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8017706:	0212      	lsls	r2, r2, #8
 8017708:	5cc3      	ldrb	r3, [r0, r3]
 801770a:	f402 72ff 	and.w	r2, r2, #510	@ 0x1fe
 801770e:	431a      	orrs	r2, r3
 8017710:	b293      	uxth	r3, r2
 8017712:	930c      	str	r3, [sp, #48]	@ 0x30
 8017714:	2300      	movs	r3, #0
 8017716:	f884 2804 	strb.w	r2, [r4, #2052]	@ 0x804
 801771a:	9308      	str	r3, [sp, #32]
 801771c:	461a      	mov	r2, r3
 801771e:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 8017722:	930e      	str	r3, [sp, #56]	@ 0x38
 8017724:	f04f 0801 	mov.w	r8, #1
 8017728:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
 801772c:	f8cd 8008 	str.w	r8, [sp, #8]
 8017730:	46c4      	mov	ip, r8
 8017732:	930f      	str	r3, [sp, #60]	@ 0x3c
 8017734:	2d00      	cmp	r5, #0
 8017736:	d07c      	beq.n	8017832 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x272>
 8017738:	45ac      	cmp	ip, r5
 801773a:	d26c      	bcs.n	8017816 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x256>
 801773c:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801773e:	eba5 050c 	sub.w	r5, r5, ip
 8017742:	455b      	cmp	r3, fp
 8017744:	b2ad      	uxth	r5, r5
 8017746:	4608      	mov	r0, r1
 8017748:	d802      	bhi.n	8017750 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x190>
 801774a:	e070      	b.n	801782e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x26e>
 801774c:	2b00      	cmp	r3, #0
 801774e:	d15c      	bne.n	801780a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24a>
 8017750:	9b03      	ldr	r3, [sp, #12]
 8017752:	9a02      	ldr	r2, [sp, #8]
 8017754:	785b      	ldrb	r3, [r3, #1]
 8017756:	9902      	ldr	r1, [sp, #8]
 8017758:	f1c2 0207 	rsb	r2, r2, #7
 801775c:	4093      	lsls	r3, r2
 801775e:	005b      	lsls	r3, r3, #1
 8017760:	f403 72ff 	and.w	r2, r3, #510	@ 0x1fe
 8017764:	9b03      	ldr	r3, [sp, #12]
 8017766:	781b      	ldrb	r3, [r3, #0]
 8017768:	410b      	asrs	r3, r1
 801776a:	3101      	adds	r1, #1
 801776c:	b2c9      	uxtb	r1, r1
 801776e:	2908      	cmp	r1, #8
 8017770:	9102      	str	r1, [sp, #8]
 8017772:	9903      	ldr	r1, [sp, #12]
 8017774:	bf0a      	itet	eq
 8017776:	3102      	addeq	r1, #2
 8017778:	3101      	addne	r1, #1
 801777a:	9103      	streq	r1, [sp, #12]
 801777c:	b2db      	uxtb	r3, r3
 801777e:	bf0a      	itet	eq
 8017780:	2100      	moveq	r1, #0
 8017782:	9103      	strne	r1, [sp, #12]
 8017784:	9102      	streq	r1, [sp, #8]
 8017786:	4313      	orrs	r3, r2
 8017788:	9911      	ldr	r1, [sp, #68]	@ 0x44
 801778a:	b29a      	uxth	r2, r3
 801778c:	4291      	cmp	r1, r2
 801778e:	d30a      	bcc.n	80177a6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1e6>
 8017790:	f884 3804 	strb.w	r3, [r4, #2052]	@ 0x804
 8017794:	2301      	movs	r3, #1
 8017796:	9905      	ldr	r1, [sp, #20]
 8017798:	f5b1 7f00 	cmp.w	r1, #512	@ 0x200
 801779c:	d30f      	bcc.n	80177be <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1fe>
 801779e:	2100      	movs	r1, #0
 80177a0:	4698      	mov	r8, r3
 80177a2:	9100      	str	r1, [sp, #0]
 80177a4:	e032      	b.n	801780c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24c>
 80177a6:	9b05      	ldr	r3, [sp, #20]
 80177a8:	429a      	cmp	r2, r3
 80177aa:	d318      	bcc.n	80177de <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21e>
 80177ac:	eb04 0308 	add.w	r3, r4, r8
 80177b0:	f894 1804 	ldrb.w	r1, [r4, #2052]	@ 0x804
 80177b4:	f883 1804 	strb.w	r1, [r3, #2052]	@ 0x804
 80177b8:	f108 0301 	add.w	r3, r8, #1
 80177bc:	b29b      	uxth	r3, r3
 80177be:	9905      	ldr	r1, [sp, #20]
 80177c0:	f894 6804 	ldrb.w	r6, [r4, #2052]	@ 0x804
 80177c4:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 80177c8:	710e      	strb	r6, [r1, #4]
 80177ca:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 80177cc:	80ce      	strh	r6, [r1, #6]
 80177ce:	f108 0601 	add.w	r6, r8, #1
 80177d2:	714e      	strb	r6, [r1, #5]
 80177d4:	9905      	ldr	r1, [sp, #20]
 80177d6:	3101      	adds	r1, #1
 80177d8:	b289      	uxth	r1, r1
 80177da:	9105      	str	r1, [sp, #20]
 80177dc:	e7df      	b.n	801779e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1de>
 80177de:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 80177e2:	4611      	mov	r1, r2
 80177e4:	795b      	ldrb	r3, [r3, #5]
 80177e6:	f603 0604 	addw	r6, r3, #2052	@ 0x804
 80177ea:	4426      	add	r6, r4
 80177ec:	9f19      	ldr	r7, [sp, #100]	@ 0x64
 80177ee:	4437      	add	r7, r6
 80177f0:	2f00      	cmp	r7, #0
 80177f2:	dd06      	ble.n	8017802 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x242>
 80177f4:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 80177f8:	790f      	ldrb	r7, [r1, #4]
 80177fa:	f806 7d01 	strb.w	r7, [r6, #-1]!
 80177fe:	88c9      	ldrh	r1, [r1, #6]
 8017800:	e7f4      	b.n	80177ec <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x22c>
 8017802:	f884 1804 	strb.w	r1, [r4, #2052]	@ 0x804
 8017806:	b29b      	uxth	r3, r3
 8017808:	e7c5      	b.n	8017796 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d6>
 801780a:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 801780c:	920c      	str	r2, [sp, #48]	@ 0x30
 801780e:	4601      	mov	r1, r0
 8017810:	9a00      	ldr	r2, [sp, #0]
 8017812:	469c      	mov	ip, r3
 8017814:	e78e      	b.n	8017734 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x174>
 8017816:	1957      	adds	r7, r2, r5
 8017818:	ebac 0305 	sub.w	r3, ip, r5
 801781c:	b2ba      	uxth	r2, r7
 801781e:	f8bd 0010 	ldrh.w	r0, [sp, #16]
 8017822:	9200      	str	r2, [sp, #0]
 8017824:	b29b      	uxth	r3, r3
 8017826:	2500      	movs	r5, #0
 8017828:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 801782a:	455a      	cmp	r2, fp
 801782c:	d88e      	bhi.n	801774c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x18c>
 801782e:	4601      	mov	r1, r0
 8017830:	e749      	b.n	80176c6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x106>
 8017832:	458c      	cmp	ip, r1
 8017834:	bf2c      	ite	cs
 8017836:	4628      	movcs	r0, r5
 8017838:	462b      	movcc	r3, r5
 801783a:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
 801783c:	bf27      	ittee	cs
 801783e:	9109      	strcs	r1, [sp, #36]	@ 0x24
 8017840:	ebac 0301 	subcs.w	r3, ip, r1
 8017844:	eba1 000c 	subcc.w	r0, r1, ip
 8017848:	f8cd c024 	strcc.w	ip, [sp, #36]	@ 0x24
 801784c:	bf2c      	ite	cs
 801784e:	b29b      	uxthcs	r3, r3
 8017850:	b280      	uxthcc	r0, r0
 8017852:	2dff      	cmp	r5, #255	@ 0xff
 8017854:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 8017856:	eb02 0705 	add.w	r7, r2, r5
 801785a:	b2bd      	uxth	r5, r7
 801785c:	9500      	str	r5, [sp, #0]
 801785e:	d12f      	bne.n	80178c0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x300>
 8017860:	465e      	mov	r6, fp
 8017862:	9d00      	ldr	r5, [sp, #0]
 8017864:	42aa      	cmp	r2, r5
 8017866:	f040 8084 	bne.w	8017972 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3b2>
 801786a:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 801786c:	458c      	cmp	ip, r1
 801786e:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
 8017872:	d3d8      	bcc.n	8017826 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x266>
 8017874:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 8017876:	9904      	ldr	r1, [sp, #16]
 8017878:	8812      	ldrh	r2, [r2, #0]
 801787a:	1a52      	subs	r2, r2, r1
 801787c:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
 8017880:	9a08      	ldr	r2, [sp, #32]
 8017882:	9916      	ldr	r1, [sp, #88]	@ 0x58
 8017884:	3201      	adds	r2, #1
 8017886:	428a      	cmp	r2, r1
 8017888:	9208      	str	r2, [sp, #32]
 801788a:	f040 8092 	bne.w	80179b2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3f2>
 801788e:	f8bd 5070 	ldrh.w	r5, [sp, #112]	@ 0x70
 8017892:	f8bd c068 	ldrh.w	ip, [sp, #104]	@ 0x68
 8017896:	9b04      	ldr	r3, [sp, #16]
 8017898:	eba5 050c 	sub.w	r5, r5, ip
 801789c:	b2ad      	uxth	r5, r5
 801789e:	2d00      	cmp	r5, #0
 80178a0:	bf08      	it	eq
 80178a2:	4619      	moveq	r1, r3
 80178a4:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80178a6:	bf18      	it	ne
 80178a8:	2100      	movne	r1, #0
 80178aa:	3301      	adds	r3, #1
 80178ac:	930d      	str	r3, [sp, #52]	@ 0x34
 80178ae:	b289      	uxth	r1, r1
 80178b0:	e700      	b.n	80176b4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 80178b2:	bf00      	nop
 80178b4:	200133d4 	.word	0x200133d4
 80178b8:	200133cc 	.word	0x200133cc
 80178bc:	fffff7fb 	.word	0xfffff7fb
 80178c0:	46d9      	mov	r9, fp
 80178c2:	9d00      	ldr	r5, [sp, #0]
 80178c4:	42aa      	cmp	r2, r5
 80178c6:	d0d0      	beq.n	801786a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2aa>
 80178c8:	1c55      	adds	r5, r2, #1
 80178ca:	4422      	add	r2, r4
 80178cc:	9517      	str	r5, [sp, #92]	@ 0x5c
 80178ce:	f892 e804 	ldrb.w	lr, [r2, #2052]	@ 0x804
 80178d2:	9a06      	ldr	r2, [sp, #24]
 80178d4:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 80178d8:	4472      	add	r2, lr
 80178da:	9212      	str	r2, [sp, #72]	@ 0x48
 80178dc:	9f12      	ldr	r7, [sp, #72]	@ 0x48
 80178de:	f8b9 2000 	ldrh.w	r2, [r9]
 80178e2:	f897 a002 	ldrb.w	sl, [r7, #2]
 80178e6:	9f0e      	ldr	r7, [sp, #56]	@ 0x38
 80178e8:	1216      	asrs	r6, r2, #8
 80178ea:	fb1a fa07 	smulbb	sl, sl, r7
 80178ee:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 80178f2:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 80178f4:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 80178f8:	fb06 a607 	mla	r6, r6, r7, sl
 80178fc:	9f12      	ldr	r7, [sp, #72]	@ 0x48
 80178fe:	f897 a001 	ldrb.w	sl, [r7, #1]
 8017902:	9f0e      	ldr	r7, [sp, #56]	@ 0x38
 8017904:	10d5      	asrs	r5, r2, #3
 8017906:	fb1a fa07 	smulbb	sl, sl, r7
 801790a:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 801790e:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 8017910:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 8017914:	fb05 a507 	mla	r5, r5, r7, sl
 8017918:	9f06      	ldr	r7, [sp, #24]
 801791a:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801791e:	9f0e      	ldr	r7, [sp, #56]	@ 0x38
 8017920:	00d2      	lsls	r2, r2, #3
 8017922:	fb1e fe07 	smulbb	lr, lr, r7
 8017926:	b2d2      	uxtb	r2, r2
 8017928:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 801792a:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801792e:	b2b6      	uxth	r6, r6
 8017930:	fb02 e207 	mla	r2, r2, r7, lr
 8017934:	b292      	uxth	r2, r2
 8017936:	b2ad      	uxth	r5, r5
 8017938:	f106 0a01 	add.w	sl, r6, #1
 801793c:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 8017940:	f102 0e01 	add.w	lr, r2, #1
 8017944:	f105 0a01 	add.w	sl, r5, #1
 8017948:	eb0e 2e12 	add.w	lr, lr, r2, lsr #8
 801794c:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8017950:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
 8017954:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 8017958:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801795c:	ea4e 0606 	orr.w	r6, lr, r6
 8017960:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8017964:	ea46 060a 	orr.w	r6, r6, sl
 8017968:	f829 6b02 	strh.w	r6, [r9], #2
 801796c:	f8bd 205c 	ldrh.w	r2, [sp, #92]	@ 0x5c
 8017970:	e7a7      	b.n	80178c2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x302>
 8017972:	f102 0e01 	add.w	lr, r2, #1
 8017976:	4422      	add	r2, r4
 8017978:	9f06      	ldr	r7, [sp, #24]
 801797a:	f892 5804 	ldrb.w	r5, [r2, #2052]	@ 0x804
 801797e:	9a06      	ldr	r2, [sp, #24]
 8017980:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8017984:	eb02 0a05 	add.w	sl, r2, r5
 8017988:	4a13      	ldr	r2, [pc, #76]	@ (80179d8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x418>)
 801798a:	f89a 9002 	ldrb.w	r9, [sl, #2]
 801798e:	ea02 2909 	and.w	r9, r2, r9, lsl #8
 8017992:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8017996:	00d2      	lsls	r2, r2, #3
 8017998:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801799c:	ea49 0202 	orr.w	r2, r9, r2
 80179a0:	f817 9005 	ldrb.w	r9, [r7, r5]
 80179a4:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 80179a8:	f826 2b02 	strh.w	r2, [r6], #2
 80179ac:	fa1f f28e 	uxth.w	r2, lr
 80179b0:	e757      	b.n	8017862 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a2>
 80179b2:	f8bd 0010 	ldrh.w	r0, [sp, #16]
 80179b6:	f8bd 506c 	ldrh.w	r5, [sp, #108]	@ 0x6c
 80179ba:	1a2d      	subs	r5, r5, r0
 80179bc:	b2ad      	uxth	r5, r5
 80179be:	2d00      	cmp	r5, #0
 80179c0:	bf18      	it	ne
 80179c2:	2000      	movne	r0, #0
 80179c4:	e730      	b.n	8017828 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x268>
 80179c6:	4b05      	ldr	r3, [pc, #20]	@ (80179dc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x41c>)
 80179c8:	6818      	ldr	r0, [r3, #0]
 80179ca:	6803      	ldr	r3, [r0, #0]
 80179cc:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80179ce:	4798      	blx	r3
 80179d0:	b01f      	add	sp, #124	@ 0x7c
 80179d2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80179d6:	bf00      	nop
 80179d8:	fffff800 	.word	0xfffff800
 80179dc:	200133d4 	.word	0x200133d4

080179e0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss>:
 80179e0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80179e4:	b091      	sub	sp, #68	@ 0x44
 80179e6:	469b      	mov	fp, r3
 80179e8:	f10d 0828 	add.w	r8, sp, #40	@ 0x28
 80179ec:	4616      	mov	r6, r2
 80179ee:	f9bd 906c 	ldrsh.w	r9, [sp, #108]	@ 0x6c
 80179f2:	f9b3 2000 	ldrsh.w	r2, [r3]
 80179f6:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	@ 0x70
 80179fa:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 80179fe:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
 8017a02:	4604      	mov	r4, r0
 8017a04:	460d      	mov	r5, r1
 8017a06:	4640      	mov	r0, r8
 8017a08:	4659      	mov	r1, fp
 8017a0a:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
 8017a0e:	f8ad 902c 	strh.w	r9, [sp, #44]	@ 0x2c
 8017a12:	f8ad 702e 	strh.w	r7, [sp, #46]	@ 0x2e
 8017a16:	f7f3 facf 	bl	800afb8 <_ZN8touchgfx4RectaNERKS0_>
 8017a1a:	4631      	mov	r1, r6
 8017a1c:	4640      	mov	r0, r8
 8017a1e:	f7f3 facb 	bl	800afb8 <_ZN8touchgfx4RectaNERKS0_>
 8017a22:	4b74      	ldr	r3, [pc, #464]	@ (8017bf4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x214>)
 8017a24:	8818      	ldrh	r0, [r3, #0]
 8017a26:	4b74      	ldr	r3, [pc, #464]	@ (8017bf8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x218>)
 8017a28:	8819      	ldrh	r1, [r3, #0]
 8017a2a:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	@ 0x28
 8017a2e:	2b00      	cmp	r3, #0
 8017a30:	b202      	sxth	r2, r0
 8017a32:	b20e      	sxth	r6, r1
 8017a34:	da07      	bge.n	8017a46 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x66>
 8017a36:	f8bd c02c 	ldrh.w	ip, [sp, #44]	@ 0x2c
 8017a3a:	4463      	add	r3, ip
 8017a3c:	f8ad 302c 	strh.w	r3, [sp, #44]	@ 0x2c
 8017a40:	2300      	movs	r3, #0
 8017a42:	f8ad 3028 	strh.w	r3, [sp, #40]	@ 0x28
 8017a46:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	@ 0x28
 8017a4a:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	@ 0x2c
 8017a4e:	1ad2      	subs	r2, r2, r3
 8017a50:	4594      	cmp	ip, r2
 8017a52:	bfc4      	itt	gt
 8017a54:	1ac2      	subgt	r2, r0, r3
 8017a56:	f8ad 202c 	strhgt.w	r2, [sp, #44]	@ 0x2c
 8017a5a:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
 8017a5e:	2a00      	cmp	r2, #0
 8017a60:	da07      	bge.n	8017a72 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x92>
 8017a62:	f8bd c02e 	ldrh.w	ip, [sp, #46]	@ 0x2e
 8017a66:	4462      	add	r2, ip
 8017a68:	f8ad 202e 	strh.w	r2, [sp, #46]	@ 0x2e
 8017a6c:	2200      	movs	r2, #0
 8017a6e:	f8ad 202a 	strh.w	r2, [sp, #42]	@ 0x2a
 8017a72:	f9bd a02a 	ldrsh.w	sl, [sp, #42]	@ 0x2a
 8017a76:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	@ 0x2e
 8017a7a:	eba6 060a 	sub.w	r6, r6, sl
 8017a7e:	42b2      	cmp	r2, r6
 8017a80:	bfc4      	itt	gt
 8017a82:	eba1 020a 	subgt.w	r2, r1, sl
 8017a86:	f8ad 202e 	strhgt.w	r2, [sp, #46]	@ 0x2e
 8017a8a:	4a5c      	ldr	r2, [pc, #368]	@ (8017bfc <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x21c>)
 8017a8c:	7812      	ldrb	r2, [r2, #0]
 8017a8e:	b9a2      	cbnz	r2, 8017aba <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xda>
 8017a90:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	@ 0x2c
 8017a94:	4286      	cmp	r6, r0
 8017a96:	4640      	mov	r0, r8
 8017a98:	9303      	str	r3, [sp, #12]
 8017a9a:	bf14      	ite	ne
 8017a9c:	2600      	movne	r6, #0
 8017a9e:	2601      	moveq	r6, #1
 8017aa0:	f7f3 facd 	bl	800b03e <_ZNK8touchgfx4Rect7isEmptyEv>
 8017aa4:	9b03      	ldr	r3, [sp, #12]
 8017aa6:	b160      	cbz	r0, 8017ac2 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xe2>
 8017aa8:	2300      	movs	r3, #0
 8017aaa:	8023      	strh	r3, [r4, #0]
 8017aac:	8063      	strh	r3, [r4, #2]
 8017aae:	80a3      	strh	r3, [r4, #4]
 8017ab0:	4620      	mov	r0, r4
 8017ab2:	80e3      	strh	r3, [r4, #6]
 8017ab4:	b011      	add	sp, #68	@ 0x44
 8017ab6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017aba:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	@ 0x2e
 8017abe:	428e      	cmp	r6, r1
 8017ac0:	e7e9      	b.n	8017a96 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xb6>
 8017ac2:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
 8017ac6:	9205      	str	r2, [sp, #20]
 8017ac8:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	@ 0x2e
 8017acc:	9206      	str	r2, [sp, #24]
 8017ace:	f8bb 2000 	ldrh.w	r2, [fp]
 8017ad2:	900e      	str	r0, [sp, #56]	@ 0x38
 8017ad4:	1a9b      	subs	r3, r3, r2
 8017ad6:	b21b      	sxth	r3, r3
 8017ad8:	9303      	str	r3, [sp, #12]
 8017ada:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 8017ade:	f8ad 903c 	strh.w	r9, [sp, #60]	@ 0x3c
 8017ae2:	ebaa 0a03 	sub.w	sl, sl, r3
 8017ae6:	fa0f f38a 	sxth.w	r3, sl
 8017aea:	9304      	str	r3, [sp, #16]
 8017aec:	9b03      	ldr	r3, [sp, #12]
 8017aee:	f8ad 3030 	strh.w	r3, [sp, #48]	@ 0x30
 8017af2:	9b04      	ldr	r3, [sp, #16]
 8017af4:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 8017af8:	9b05      	ldr	r3, [sp, #20]
 8017afa:	f8ad 3034 	strh.w	r3, [sp, #52]	@ 0x34
 8017afe:	a90e      	add	r1, sp, #56	@ 0x38
 8017b00:	9b06      	ldr	r3, [sp, #24]
 8017b02:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 8017b06:	a80c      	add	r0, sp, #48	@ 0x30
 8017b08:	f8ad 703e 	strh.w	r7, [sp, #62]	@ 0x3e
 8017b0c:	f7f7 fd92 	bl	800f634 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8017b10:	4640      	mov	r0, r8
 8017b12:	f7f7 fd67 	bl	800f5e4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8017b16:	a80e      	add	r0, sp, #56	@ 0x38
 8017b18:	f7f7 fd64 	bl	800f5e4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8017b1c:	4b38      	ldr	r3, [pc, #224]	@ (8017c00 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x220>)
 8017b1e:	f9bd a03c 	ldrsh.w	sl, [sp, #60]	@ 0x3c
 8017b22:	881b      	ldrh	r3, [r3, #0]
 8017b24:	9307      	str	r3, [sp, #28]
 8017b26:	682b      	ldr	r3, [r5, #0]
 8017b28:	f8df b0d8 	ldr.w	fp, [pc, #216]	@ 8017c04 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 8017b2c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8017b2e:	4628      	mov	r0, r5
 8017b30:	4798      	blx	r3
 8017b32:	f8bd 5032 	ldrh.w	r5, [sp, #50]	@ 0x32
 8017b36:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	@ 0x30
 8017b3a:	4681      	mov	r9, r0
 8017b3c:	fb1a 3305 	smlabb	r3, sl, r5, r3
 8017b40:	f8db 0000 	ldr.w	r0, [fp]
 8017b44:	9d1a      	ldr	r5, [sp, #104]	@ 0x68
 8017b46:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 8017b4a:	6803      	ldr	r3, [r0, #0]
 8017b4c:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8017b4e:	4798      	blx	r3
 8017b50:	4607      	mov	r7, r0
 8017b52:	f8db 0000 	ldr.w	r0, [fp]
 8017b56:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	@ 0x28
 8017b5a:	6803      	ldr	r3, [r0, #0]
 8017b5c:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
 8017b60:	9109      	str	r1, [sp, #36]	@ 0x24
 8017b62:	9208      	str	r2, [sp, #32]
 8017b64:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8017b66:	4798      	blx	r3
 8017b68:	f010 0f01 	tst.w	r0, #1
 8017b6c:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 8017b70:	d012      	beq.n	8017b98 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1b8>
 8017b72:	f8db 0000 	ldr.w	r0, [fp]
 8017b76:	f9bd 2034 	ldrsh.w	r2, [sp, #52]	@ 0x34
 8017b7a:	6803      	ldr	r3, [r0, #0]
 8017b7c:	9200      	str	r2, [sp, #0]
 8017b7e:	6f1e      	ldr	r6, [r3, #112]	@ 0x70
 8017b80:	e898 0006 	ldmia.w	r8, {r1, r2}
 8017b84:	462b      	mov	r3, r5
 8017b86:	47b0      	blx	r6
 8017b88:	9b03      	ldr	r3, [sp, #12]
 8017b8a:	8023      	strh	r3, [r4, #0]
 8017b8c:	9b04      	ldr	r3, [sp, #16]
 8017b8e:	8063      	strh	r3, [r4, #2]
 8017b90:	9b05      	ldr	r3, [sp, #20]
 8017b92:	80a3      	strh	r3, [r4, #4]
 8017b94:	9b06      	ldr	r3, [sp, #24]
 8017b96:	e78b      	b.n	8017ab0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xd0>
 8017b98:	fb09 f202 	mul.w	r2, r9, r2
 8017b9c:	eb02 0141 	add.w	r1, r2, r1, lsl #1
 8017ba0:	440f      	add	r7, r1
 8017ba2:	f9bd 3036 	ldrsh.w	r3, [sp, #54]	@ 0x36
 8017ba6:	b166      	cbz	r6, 8017bc2 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 8017ba8:	9a07      	ldr	r2, [sp, #28]
 8017baa:	4592      	cmp	sl, r2
 8017bac:	d109      	bne.n	8017bc2 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 8017bae:	f8db 0000 	ldr.w	r0, [fp]
 8017bb2:	6802      	ldr	r2, [r0, #0]
 8017bb4:	fb09 f303 	mul.w	r3, r9, r3
 8017bb8:	6b96      	ldr	r6, [r2, #56]	@ 0x38
 8017bba:	4629      	mov	r1, r5
 8017bbc:	463a      	mov	r2, r7
 8017bbe:	47b0      	blx	r6
 8017bc0:	e7e2      	b.n	8017b88 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 8017bc2:	fb0a f303 	mul.w	r3, sl, r3
 8017bc6:	f8df b03c 	ldr.w	fp, [pc, #60]	@ 8017c04 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 8017bca:	eb05 0843 	add.w	r8, r5, r3, lsl #1
 8017bce:	ea4f 064a 	mov.w	r6, sl, lsl #1
 8017bd2:	4545      	cmp	r5, r8
 8017bd4:	d2d8      	bcs.n	8017b88 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 8017bd6:	f8db 0000 	ldr.w	r0, [fp]
 8017bda:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
 8017bde:	6802      	ldr	r2, [r0, #0]
 8017be0:	4629      	mov	r1, r5
 8017be2:	f8d2 a038 	ldr.w	sl, [r2, #56]	@ 0x38
 8017be6:	005b      	lsls	r3, r3, #1
 8017be8:	463a      	mov	r2, r7
 8017bea:	47d0      	blx	sl
 8017bec:	444f      	add	r7, r9
 8017bee:	4435      	add	r5, r6
 8017bf0:	e7ef      	b.n	8017bd2 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1f2>
 8017bf2:	bf00      	nop
 8017bf4:	200133c6 	.word	0x200133c6
 8017bf8:	200133c8 	.word	0x200133c8
 8017bfc:	200133ca 	.word	0x200133ca
 8017c00:	200133cc 	.word	0x200133cc
 8017c04:	200133d4 	.word	0x200133d4

08017c08 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh>:
 8017c08:	b5f0      	push	{r4, r5, r6, r7, lr}
 8017c0a:	4606      	mov	r6, r0
 8017c0c:	b087      	sub	sp, #28
 8017c0e:	460c      	mov	r4, r1
 8017c10:	4617      	mov	r7, r2
 8017c12:	461d      	mov	r5, r3
 8017c14:	b333      	cbz	r3, 8017c64 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 8017c16:	4608      	mov	r0, r1
 8017c18:	f7f3 fa11 	bl	800b03e <_ZNK8touchgfx4Rect7isEmptyEv>
 8017c1c:	bb10      	cbnz	r0, 8017c64 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 8017c1e:	6820      	ldr	r0, [r4, #0]
 8017c20:	6861      	ldr	r1, [r4, #4]
 8017c22:	4c1c      	ldr	r4, [pc, #112]	@ (8017c94 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x8c>)
 8017c24:	ab04      	add	r3, sp, #16
 8017c26:	c303      	stmia	r3!, {r0, r1}
 8017c28:	a804      	add	r0, sp, #16
 8017c2a:	f7f7 fcdb 	bl	800f5e4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8017c2e:	6820      	ldr	r0, [r4, #0]
 8017c30:	6803      	ldr	r3, [r0, #0]
 8017c32:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8017c34:	4798      	blx	r3
 8017c36:	2dff      	cmp	r5, #255	@ 0xff
 8017c38:	d016      	beq.n	8017c68 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x60>
 8017c3a:	f010 0f08 	tst.w	r0, #8
 8017c3e:	6820      	ldr	r0, [r4, #0]
 8017c40:	d015      	beq.n	8017c6e <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x66>
 8017c42:	2400      	movs	r4, #0
 8017c44:	6801      	ldr	r1, [r0, #0]
 8017c46:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8017c4a:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8017c4e:	e9cd 5402 	strd	r5, r4, [sp, #8]
 8017c52:	f8bd 4016 	ldrh.w	r4, [sp, #22]
 8017c56:	9401      	str	r4, [sp, #4]
 8017c58:	f8bd 4014 	ldrh.w	r4, [sp, #20]
 8017c5c:	9400      	str	r4, [sp, #0]
 8017c5e:	6e4c      	ldr	r4, [r1, #100]	@ 0x64
 8017c60:	4639      	mov	r1, r7
 8017c62:	47a0      	blx	r4
 8017c64:	b007      	add	sp, #28
 8017c66:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8017c68:	f010 0f02 	tst.w	r0, #2
 8017c6c:	e7e7      	b.n	8017c3e <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x36>
 8017c6e:	6803      	ldr	r3, [r0, #0]
 8017c70:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8017c72:	4798      	blx	r3
 8017c74:	4b08      	ldr	r3, [pc, #32]	@ (8017c98 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x90>)
 8017c76:	881a      	ldrh	r2, [r3, #0]
 8017c78:	6833      	ldr	r3, [r6, #0]
 8017c7a:	e9cd 7500 	strd	r7, r5, [sp]
 8017c7e:	4601      	mov	r1, r0
 8017c80:	6a5d      	ldr	r5, [r3, #36]	@ 0x24
 8017c82:	4630      	mov	r0, r6
 8017c84:	ab04      	add	r3, sp, #16
 8017c86:	47a8      	blx	r5
 8017c88:	6820      	ldr	r0, [r4, #0]
 8017c8a:	6803      	ldr	r3, [r0, #0]
 8017c8c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8017c8e:	4798      	blx	r3
 8017c90:	e7e8      	b.n	8017c64 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 8017c92:	bf00      	nop
 8017c94:	200133d4 	.word	0x200133d4
 8017c98:	200133cc 	.word	0x200133cc

08017c9c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh>:
 8017c9c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8017ca0:	f89d 7024 	ldrb.w	r7, [sp, #36]	@ 0x24
 8017ca4:	9e08      	ldr	r6, [sp, #32]
 8017ca6:	4688      	mov	r8, r1
 8017ca8:	4614      	mov	r4, r2
 8017caa:	461d      	mov	r5, r3
 8017cac:	2f00      	cmp	r7, #0
 8017cae:	f000 80a9 	beq.w	8017e04 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 8017cb2:	4618      	mov	r0, r3
 8017cb4:	f7f3 f9c3 	bl	800b03e <_ZNK8touchgfx4Rect7isEmptyEv>
 8017cb8:	2800      	cmp	r0, #0
 8017cba:	f040 80a3 	bne.w	8017e04 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 8017cbe:	f9b5 1000 	ldrsh.w	r1, [r5]
 8017cc2:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 8017cc6:	f9b5 0004 	ldrsh.w	r0, [r5, #4]
 8017cca:	f9b5 5006 	ldrsh.w	r5, [r5, #6]
 8017cce:	fb04 1303 	mla	r3, r4, r3, r1
 8017cd2:	eb08 0143 	add.w	r1, r8, r3, lsl #1
 8017cd6:	4365      	muls	r5, r4
 8017cd8:	2fff      	cmp	r7, #255	@ 0xff
 8017cda:	eba4 0200 	sub.w	r2, r4, r0
 8017cde:	eb01 0545 	add.w	r5, r1, r5, lsl #1
 8017ce2:	ea4f 2816 	mov.w	r8, r6, lsr #8
 8017ce6:	d04a      	beq.n	8017d7e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe2>
 8017ce8:	b2bc      	uxth	r4, r7
 8017cea:	f1c7 0cff 	rsb	ip, r7, #255	@ 0xff
 8017cee:	f3c6 4e07 	ubfx	lr, r6, #16, #8
 8017cf2:	fa5f f788 	uxtb.w	r7, r8
 8017cf6:	b2f3      	uxtb	r3, r6
 8017cf8:	0040      	lsls	r0, r0, #1
 8017cfa:	fb0e fe04 	mul.w	lr, lr, r4
 8017cfe:	4367      	muls	r7, r4
 8017d00:	4363      	muls	r3, r4
 8017d02:	ea4f 0842 	mov.w	r8, r2, lsl #1
 8017d06:	fa1f fc8c 	uxth.w	ip, ip
 8017d0a:	42a9      	cmp	r1, r5
 8017d0c:	d27a      	bcs.n	8017e04 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 8017d0e:	eb01 0900 	add.w	r9, r1, r0
 8017d12:	4549      	cmp	r1, r9
 8017d14:	d231      	bcs.n	8017d7a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xde>
 8017d16:	880a      	ldrh	r2, [r1, #0]
 8017d18:	1214      	asrs	r4, r2, #8
 8017d1a:	10d6      	asrs	r6, r2, #3
 8017d1c:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 8017d20:	00d2      	lsls	r2, r2, #3
 8017d22:	b2d2      	uxtb	r2, r2
 8017d24:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8017d28:	fb14 f40c 	smulbb	r4, r4, ip
 8017d2c:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8017d30:	4474      	add	r4, lr
 8017d32:	fb12 f20c 	smulbb	r2, r2, ip
 8017d36:	b2a4      	uxth	r4, r4
 8017d38:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8017d3c:	441a      	add	r2, r3
 8017d3e:	b292      	uxth	r2, r2
 8017d40:	f104 0a01 	add.w	sl, r4, #1
 8017d44:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 8017d48:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 8017d4c:	fb16 f60c 	smulbb	r6, r6, ip
 8017d50:	f102 0a01 	add.w	sl, r2, #1
 8017d54:	443e      	add	r6, r7
 8017d56:	eb0a 2212 	add.w	r2, sl, r2, lsr #8
 8017d5a:	b2b6      	uxth	r6, r6
 8017d5c:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
 8017d60:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8017d64:	4322      	orrs	r2, r4
 8017d66:	1c74      	adds	r4, r6, #1
 8017d68:	eb04 2616 	add.w	r6, r4, r6, lsr #8
 8017d6c:	0976      	lsrs	r6, r6, #5
 8017d6e:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 8017d72:	4332      	orrs	r2, r6
 8017d74:	f821 2b02 	strh.w	r2, [r1], #2
 8017d78:	e7cb      	b.n	8017d12 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x76>
 8017d7a:	4441      	add	r1, r8
 8017d7c:	e7c5      	b.n	8017d0a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x6e>
 8017d7e:	4f22      	ldr	r7, [pc, #136]	@ (8017e08 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>)
 8017d80:	0973      	lsrs	r3, r6, #5
 8017d82:	ea08 0707 	and.w	r7, r8, r7
 8017d86:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8017d8a:	433b      	orrs	r3, r7
 8017d8c:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 8017d90:	4333      	orrs	r3, r6
 8017d92:	07e7      	lsls	r7, r4, #31
 8017d94:	b29b      	uxth	r3, r3
 8017d96:	d50b      	bpl.n	8017db0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x114>
 8017d98:	0040      	lsls	r0, r0, #1
 8017d9a:	0052      	lsls	r2, r2, #1
 8017d9c:	42a9      	cmp	r1, r5
 8017d9e:	d231      	bcs.n	8017e04 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 8017da0:	180c      	adds	r4, r1, r0
 8017da2:	42a1      	cmp	r1, r4
 8017da4:	d202      	bcs.n	8017dac <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x110>
 8017da6:	f821 3b02 	strh.w	r3, [r1], #2
 8017daa:	e7fa      	b.n	8017da2 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x106>
 8017dac:	4411      	add	r1, r2
 8017dae:	e7f5      	b.n	8017d9c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x100>
 8017db0:	078e      	lsls	r6, r1, #30
 8017db2:	d008      	beq.n	8017dc6 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12a>
 8017db4:	0066      	lsls	r6, r4, #1
 8017db6:	460a      	mov	r2, r1
 8017db8:	42aa      	cmp	r2, r5
 8017dba:	d202      	bcs.n	8017dc2 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x126>
 8017dbc:	8013      	strh	r3, [r2, #0]
 8017dbe:	4432      	add	r2, r6
 8017dc0:	e7fa      	b.n	8017db8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x11c>
 8017dc2:	3102      	adds	r1, #2
 8017dc4:	3801      	subs	r0, #1
 8017dc6:	07c2      	lsls	r2, r0, #31
 8017dc8:	d50b      	bpl.n	8017de2 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x146>
 8017dca:	f100 4200 	add.w	r2, r0, #2147483648	@ 0x80000000
 8017dce:	3a01      	subs	r2, #1
 8017dd0:	eb01 0242 	add.w	r2, r1, r2, lsl #1
 8017dd4:	0066      	lsls	r6, r4, #1
 8017dd6:	42aa      	cmp	r2, r5
 8017dd8:	d202      	bcs.n	8017de0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x144>
 8017dda:	8013      	strh	r3, [r2, #0]
 8017ddc:	4432      	add	r2, r6
 8017dde:	e7fa      	b.n	8017dd6 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x13a>
 8017de0:	3801      	subs	r0, #1
 8017de2:	b178      	cbz	r0, 8017e04 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 8017de4:	1040      	asrs	r0, r0, #1
 8017de6:	ea43 4303 	orr.w	r3, r3, r3, lsl #16
 8017dea:	0080      	lsls	r0, r0, #2
 8017dec:	0064      	lsls	r4, r4, #1
 8017dee:	42a9      	cmp	r1, r5
 8017df0:	d208      	bcs.n	8017e04 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 8017df2:	180e      	adds	r6, r1, r0
 8017df4:	460a      	mov	r2, r1
 8017df6:	42b2      	cmp	r2, r6
 8017df8:	d202      	bcs.n	8017e00 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x164>
 8017dfa:	f842 3b04 	str.w	r3, [r2], #4
 8017dfe:	e7fa      	b.n	8017df6 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x15a>
 8017e00:	4421      	add	r1, r4
 8017e02:	e7f4      	b.n	8017dee <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x152>
 8017e04:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8017e08:	00fff800 	.word	0x00fff800

08017e0c <_ZN8touchgfx8LCD16bppC1Ev>:
 8017e0c:	2200      	movs	r2, #0
 8017e0e:	4912      	ldr	r1, [pc, #72]	@ (8017e58 <_ZN8touchgfx8LCD16bppC1Ev+0x4c>)
 8017e10:	6001      	str	r1, [r0, #0]
 8017e12:	e9c0 2201 	strd	r2, r2, [r0, #4]
 8017e16:	e9c0 2203 	strd	r2, r2, [r0, #12]
 8017e1a:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8017e1e:	e9c0 2207 	strd	r2, r2, [r0, #28]
 8017e22:	e9c0 2209 	strd	r2, r2, [r0, #36]	@ 0x24
 8017e26:	e9c0 220b 	strd	r2, r2, [r0, #44]	@ 0x2c
 8017e2a:	e9c0 220d 	strd	r2, r2, [r0, #52]	@ 0x34
 8017e2e:	e9c0 220f 	strd	r2, r2, [r0, #60]	@ 0x3c
 8017e32:	e9c0 2211 	strd	r2, r2, [r0, #68]	@ 0x44
 8017e36:	e9c0 2213 	strd	r2, r2, [r0, #76]	@ 0x4c
 8017e3a:	e9c0 2215 	strd	r2, r2, [r0, #84]	@ 0x54
 8017e3e:	e9c0 2217 	strd	r2, r2, [r0, #92]	@ 0x5c
 8017e42:	e9c0 2219 	strd	r2, r2, [r0, #100]	@ 0x64
 8017e46:	e9c0 221b 	strd	r2, r2, [r0, #108]	@ 0x6c
 8017e4a:	e9c0 221d 	strd	r2, r2, [r0, #116]	@ 0x74
 8017e4e:	e9c0 221f 	strd	r2, r2, [r0, #124]	@ 0x7c
 8017e52:	e9c0 2221 	strd	r2, r2, [r0, #132]	@ 0x84
 8017e56:	4770      	bx	lr
 8017e58:	08025600 	.word	0x08025600

08017e5c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>:
 8017e5c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017e60:	460d      	mov	r5, r1
 8017e62:	b08d      	sub	sp, #52	@ 0x34
 8017e64:	4604      	mov	r4, r0
 8017e66:	6808      	ldr	r0, [r1, #0]
 8017e68:	6849      	ldr	r1, [r1, #4]
 8017e6a:	4699      	mov	r9, r3
 8017e6c:	ab08      	add	r3, sp, #32
 8017e6e:	c303      	stmia	r3!, {r0, r1}
 8017e70:	6810      	ldr	r0, [r2, #0]
 8017e72:	6851      	ldr	r1, [r2, #4]
 8017e74:	ab0a      	add	r3, sp, #40	@ 0x28
 8017e76:	c303      	stmia	r3!, {r0, r1}
 8017e78:	a808      	add	r0, sp, #32
 8017e7a:	f7f7 fbb3 	bl	800f5e4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8017e7e:	4629      	mov	r1, r5
 8017e80:	a80a      	add	r0, sp, #40	@ 0x28
 8017e82:	f7f7 fbd7 	bl	800f634 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8017e86:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	@ 0x28
 8017e8a:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	@ 0x2a
 8017e8e:	f8bd 1024 	ldrh.w	r1, [sp, #36]	@ 0x24
 8017e92:	4d63      	ldr	r5, [pc, #396]	@ (8018020 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 8017e94:	f9bd 802c 	ldrsh.w	r8, [sp, #44]	@ 0x2c
 8017e98:	6828      	ldr	r0, [r5, #0]
 8017e9a:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	@ 0x2e
 8017e9e:	fb11 2103 	smlabb	r1, r1, r3, r2
 8017ea2:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 8017ea6:	f8bd 1020 	ldrh.w	r1, [sp, #32]
 8017eaa:	440a      	add	r2, r1
 8017eac:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
 8017eb0:	f8bd 2022 	ldrh.w	r2, [sp, #34]	@ 0x22
 8017eb4:	4413      	add	r3, r2
 8017eb6:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
 8017eba:	6803      	ldr	r3, [r0, #0]
 8017ebc:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8017ebe:	4798      	blx	r3
 8017ec0:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 8017ec4:	d119      	bne.n	8017efa <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x9e>
 8017ec6:	f010 0f20 	tst.w	r0, #32
 8017eca:	6828      	ldr	r0, [r5, #0]
 8017ecc:	d018      	beq.n	8017f00 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xa4>
 8017ece:	2500      	movs	r5, #0
 8017ed0:	6801      	ldr	r1, [r0, #0]
 8017ed2:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 8017ed6:	f8bd 2028 	ldrh.w	r2, [sp, #40]	@ 0x28
 8017eda:	e9cd 9503 	strd	r9, r5, [sp, #12]
 8017ede:	f8bd 5024 	ldrh.w	r5, [sp, #36]	@ 0x24
 8017ee2:	9502      	str	r5, [sp, #8]
 8017ee4:	b2b6      	uxth	r6, r6
 8017ee6:	fa1f f588 	uxth.w	r5, r8
 8017eea:	9601      	str	r6, [sp, #4]
 8017eec:	9500      	str	r5, [sp, #0]
 8017eee:	6d4d      	ldr	r5, [r1, #84]	@ 0x54
 8017ef0:	4621      	mov	r1, r4
 8017ef2:	47a8      	blx	r5
 8017ef4:	b00d      	add	sp, #52	@ 0x34
 8017ef6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017efa:	f010 0f40 	tst.w	r0, #64	@ 0x40
 8017efe:	e7e4      	b.n	8017eca <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x6e>
 8017f00:	6803      	ldr	r3, [r0, #0]
 8017f02:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8017f04:	4798      	blx	r3
 8017f06:	4947      	ldr	r1, [pc, #284]	@ (8018024 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c8>)
 8017f08:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
 8017f0c:	880b      	ldrh	r3, [r1, #0]
 8017f0e:	f9bd 5028 	ldrsh.w	r5, [sp, #40]	@ 0x28
 8017f12:	fb03 5202 	mla	r2, r3, r2, r5
 8017f16:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8017f1a:	4373      	muls	r3, r6
 8017f1c:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8017f20:	9307      	str	r3, [sp, #28]
 8017f22:	ea4f 0348 	mov.w	r3, r8, lsl #1
 8017f26:	9306      	str	r3, [sp, #24]
 8017f28:	468a      	mov	sl, r1
 8017f2a:	9b07      	ldr	r3, [sp, #28]
 8017f2c:	4298      	cmp	r0, r3
 8017f2e:	d270      	bcs.n	8018012 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b6>
 8017f30:	9b06      	ldr	r3, [sp, #24]
 8017f32:	4621      	mov	r1, r4
 8017f34:	eb00 0b03 	add.w	fp, r0, r3
 8017f38:	4558      	cmp	r0, fp
 8017f3a:	d25d      	bcs.n	8017ff8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x19c>
 8017f3c:	f851 4b04 	ldr.w	r4, [r1], #4
 8017f40:	0e23      	lsrs	r3, r4, #24
 8017f42:	d014      	beq.n	8017f6e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 8017f44:	2bff      	cmp	r3, #255	@ 0xff
 8017f46:	ea4f 2c14 	mov.w	ip, r4, lsr #8
 8017f4a:	d112      	bne.n	8017f72 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 8017f4c:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 8017f50:	d10f      	bne.n	8017f72 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 8017f52:	0963      	lsrs	r3, r4, #5
 8017f54:	f42c 6cff 	bic.w	ip, ip, #2040	@ 0x7f8
 8017f58:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8017f5c:	f02c 0c07 	bic.w	ip, ip, #7
 8017f60:	ea43 0c0c 	orr.w	ip, r3, ip
 8017f64:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 8017f68:	ea4c 0404 	orr.w	r4, ip, r4
 8017f6c:	8004      	strh	r4, [r0, #0]
 8017f6e:	3002      	adds	r0, #2
 8017f70:	e7e2      	b.n	8017f38 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xdc>
 8017f72:	fb09 f303 	mul.w	r3, r9, r3
 8017f76:	8807      	ldrh	r7, [r0, #0]
 8017f78:	1c5a      	adds	r2, r3, #1
 8017f7a:	eb02 2223 	add.w	r2, r2, r3, asr #8
 8017f7e:	1212      	asrs	r2, r2, #8
 8017f80:	123e      	asrs	r6, r7, #8
 8017f82:	b293      	uxth	r3, r2
 8017f84:	f3c4 4e07 	ubfx	lr, r4, #16, #8
 8017f88:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 8017f8c:	43d2      	mvns	r2, r2
 8017f8e:	b2d2      	uxtb	r2, r2
 8017f90:	10fd      	asrs	r5, r7, #3
 8017f92:	fb1e fe03 	smulbb	lr, lr, r3
 8017f96:	00ff      	lsls	r7, r7, #3
 8017f98:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 8017f9c:	fb06 e602 	mla	r6, r6, r2, lr
 8017fa0:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 8017fa4:	b2ff      	uxtb	r7, r7
 8017fa6:	fa5f fc8c 	uxtb.w	ip, ip
 8017faa:	b2e4      	uxtb	r4, r4
 8017fac:	b2b6      	uxth	r6, r6
 8017fae:	fb1c fc03 	smulbb	ip, ip, r3
 8017fb2:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 8017fb6:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 8017fba:	fb14 f403 	smulbb	r4, r4, r3
 8017fbe:	fb05 c502 	mla	r5, r5, r2, ip
 8017fc2:	f106 0e01 	add.w	lr, r6, #1
 8017fc6:	fb07 4702 	mla	r7, r7, r2, r4
 8017fca:	b2ad      	uxth	r5, r5
 8017fcc:	b2bf      	uxth	r7, r7
 8017fce:	eb0e 2616 	add.w	r6, lr, r6, lsr #8
 8017fd2:	f406 4e78 	and.w	lr, r6, #63488	@ 0xf800
 8017fd6:	f105 0c01 	add.w	ip, r5, #1
 8017fda:	1c7e      	adds	r6, r7, #1
 8017fdc:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 8017fe0:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8017fe4:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8017fe8:	096d      	lsrs	r5, r5, #5
 8017fea:	ea46 060e 	orr.w	r6, r6, lr
 8017fee:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8017ff2:	432e      	orrs	r6, r5
 8017ff4:	8006      	strh	r6, [r0, #0]
 8017ff6:	e7ba      	b.n	8017f6e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 8017ff8:	f8ba 3000 	ldrh.w	r3, [sl]
 8017ffc:	f9bd 4024 	ldrsh.w	r4, [sp, #36]	@ 0x24
 8018000:	eba3 0308 	sub.w	r3, r3, r8
 8018004:	eba4 0408 	sub.w	r4, r4, r8
 8018008:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801800c:	eb01 0484 	add.w	r4, r1, r4, lsl #2
 8018010:	e78b      	b.n	8017f2a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xce>
 8018012:	4b03      	ldr	r3, [pc, #12]	@ (8018020 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 8018014:	6818      	ldr	r0, [r3, #0]
 8018016:	6803      	ldr	r3, [r0, #0]
 8018018:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 801801a:	4798      	blx	r3
 801801c:	e76a      	b.n	8017ef4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x98>
 801801e:	bf00      	nop
 8018020:	200133d4 	.word	0x200133d4
 8018024:	200133cc 	.word	0x200133cc

08018028 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>:
 8018028:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801802c:	460c      	mov	r4, r1
 801802e:	b085      	sub	sp, #20
 8018030:	6810      	ldr	r0, [r2, #0]
 8018032:	6851      	ldr	r1, [r2, #4]
 8018034:	466d      	mov	r5, sp
 8018036:	c503      	stmia	r5!, {r0, r1}
 8018038:	6818      	ldr	r0, [r3, #0]
 801803a:	6859      	ldr	r1, [r3, #4]
 801803c:	4616      	mov	r6, r2
 801803e:	c503      	stmia	r5!, {r0, r1}
 8018040:	4668      	mov	r0, sp
 8018042:	f7f7 facf 	bl	800f5e4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8018046:	4631      	mov	r1, r6
 8018048:	a802      	add	r0, sp, #8
 801804a:	f7f7 faf3 	bl	800f634 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801804e:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
 8018052:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 8018056:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 801805a:	4d28      	ldr	r5, [pc, #160]	@ (80180fc <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd4>)
 801805c:	4e28      	ldr	r6, [pc, #160]	@ (8018100 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd8>)
 801805e:	6828      	ldr	r0, [r5, #0]
 8018060:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 8018064:	f9bd 800e 	ldrsh.w	r8, [sp, #14]
 8018068:	fb11 2103 	smlabb	r1, r1, r3, r2
 801806c:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 8018070:	f8bd 1000 	ldrh.w	r1, [sp]
 8018074:	440a      	add	r2, r1
 8018076:	f8ad 2008 	strh.w	r2, [sp, #8]
 801807a:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 801807e:	4413      	add	r3, r2
 8018080:	f8ad 300a 	strh.w	r3, [sp, #10]
 8018084:	6803      	ldr	r3, [r0, #0]
 8018086:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8018088:	4798      	blx	r3
 801808a:	8833      	ldrh	r3, [r6, #0]
 801808c:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
 8018090:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 8018094:	f8df e06c 	ldr.w	lr, [pc, #108]	@ 8018104 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xdc>
 8018098:	fb03 1202 	mla	r2, r3, r2, r1
 801809c:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 80180a0:	fb08 f303 	mul.w	r3, r8, r3
 80180a4:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 80180a8:	ea4f 0c47 	mov.w	ip, r7, lsl #1
 80180ac:	4298      	cmp	r0, r3
 80180ae:	d21d      	bcs.n	80180ec <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xc4>
 80180b0:	eb00 080c 	add.w	r8, r0, ip
 80180b4:	4540      	cmp	r0, r8
 80180b6:	d20f      	bcs.n	80180d8 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xb0>
 80180b8:	f854 1b04 	ldr.w	r1, [r4], #4
 80180bc:	ea4f 1951 	mov.w	r9, r1, lsr #5
 80180c0:	ea0e 2211 	and.w	r2, lr, r1, lsr #8
 80180c4:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 80180c8:	ea42 0209 	orr.w	r2, r2, r9
 80180cc:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 80180d0:	430a      	orrs	r2, r1
 80180d2:	f820 2b02 	strh.w	r2, [r0], #2
 80180d6:	e7ed      	b.n	80180b4 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x8c>
 80180d8:	8832      	ldrh	r2, [r6, #0]
 80180da:	1bd2      	subs	r2, r2, r7
 80180dc:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 80180e0:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
 80180e4:	1bd2      	subs	r2, r2, r7
 80180e6:	eb04 0482 	add.w	r4, r4, r2, lsl #2
 80180ea:	e7df      	b.n	80180ac <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x84>
 80180ec:	6828      	ldr	r0, [r5, #0]
 80180ee:	6803      	ldr	r3, [r0, #0]
 80180f0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80180f2:	4798      	blx	r3
 80180f4:	b005      	add	sp, #20
 80180f6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80180fa:	bf00      	nop
 80180fc:	200133d4 	.word	0x200133d4
 8018100:	200133cc 	.word	0x200133cc
 8018104:	fffff800 	.word	0xfffff800

08018108 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>:
 8018108:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801810c:	460e      	mov	r6, r1
 801810e:	b08e      	sub	sp, #56	@ 0x38
 8018110:	4604      	mov	r4, r0
 8018112:	6808      	ldr	r0, [r1, #0]
 8018114:	6849      	ldr	r1, [r1, #4]
 8018116:	f8df 81d8 	ldr.w	r8, [pc, #472]	@ 80182f0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>
 801811a:	f8df 91d8 	ldr.w	r9, [pc, #472]	@ 80182f4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1ec>
 801811e:	461d      	mov	r5, r3
 8018120:	ab0a      	add	r3, sp, #40	@ 0x28
 8018122:	c303      	stmia	r3!, {r0, r1}
 8018124:	6810      	ldr	r0, [r2, #0]
 8018126:	6851      	ldr	r1, [r2, #4]
 8018128:	ab0c      	add	r3, sp, #48	@ 0x30
 801812a:	c303      	stmia	r3!, {r0, r1}
 801812c:	a80a      	add	r0, sp, #40	@ 0x28
 801812e:	f7f7 fa59 	bl	800f5e4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8018132:	4631      	mov	r1, r6
 8018134:	a80c      	add	r0, sp, #48	@ 0x30
 8018136:	f7f7 fa7d 	bl	800f634 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801813a:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	@ 0x30
 801813e:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 8018142:	f8bd 102c 	ldrh.w	r1, [sp, #44]	@ 0x2c
 8018146:	f8d8 0000 	ldr.w	r0, [r8]
 801814a:	f9bd 7034 	ldrsh.w	r7, [sp, #52]	@ 0x34
 801814e:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	@ 0x36
 8018152:	fb11 2103 	smlabb	r1, r1, r3, r2
 8018156:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 801815a:	440c      	add	r4, r1
 801815c:	f8bd 1028 	ldrh.w	r1, [sp, #40]	@ 0x28
 8018160:	440a      	add	r2, r1
 8018162:	f8ad 2030 	strh.w	r2, [sp, #48]	@ 0x30
 8018166:	f8bd 202a 	ldrh.w	r2, [sp, #42]	@ 0x2a
 801816a:	4413      	add	r3, r2
 801816c:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 8018170:	6803      	ldr	r3, [r0, #0]
 8018172:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8018174:	4798      	blx	r3
 8018176:	2dff      	cmp	r5, #255	@ 0xff
 8018178:	d124      	bne.n	80181c4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xbc>
 801817a:	f010 0f01 	tst.w	r0, #1
 801817e:	f8d8 0000 	ldr.w	r0, [r8]
 8018182:	d022      	beq.n	80181ca <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xc2>
 8018184:	2100      	movs	r1, #0
 8018186:	f8d0 c000 	ldr.w	ip, [r0]
 801818a:	f8bd 3032 	ldrh.w	r3, [sp, #50]	@ 0x32
 801818e:	f8bd 2030 	ldrh.w	r2, [sp, #48]	@ 0x30
 8018192:	e9cd 1107 	strd	r1, r1, [sp, #28]
 8018196:	f04f 0e01 	mov.w	lr, #1
 801819a:	f8cd e018 	str.w	lr, [sp, #24]
 801819e:	f8b9 e000 	ldrh.w	lr, [r9]
 80181a2:	9503      	str	r5, [sp, #12]
 80181a4:	e9cd 1e04 	strd	r1, lr, [sp, #16]
 80181a8:	b2b6      	uxth	r6, r6
 80181aa:	f8bd 102c 	ldrh.w	r1, [sp, #44]	@ 0x2c
 80181ae:	9102      	str	r1, [sp, #8]
 80181b0:	b2bf      	uxth	r7, r7
 80181b2:	9601      	str	r6, [sp, #4]
 80181b4:	9700      	str	r7, [sp, #0]
 80181b6:	f8dc 5044 	ldr.w	r5, [ip, #68]	@ 0x44
 80181ba:	4621      	mov	r1, r4
 80181bc:	47a8      	blx	r5
 80181be:	b00e      	add	sp, #56	@ 0x38
 80181c0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80181c4:	f010 0f04 	tst.w	r0, #4
 80181c8:	e7d9      	b.n	801817e <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x76>
 80181ca:	6803      	ldr	r3, [r0, #0]
 80181cc:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80181ce:	4798      	blx	r3
 80181d0:	f8b9 3000 	ldrh.w	r3, [r9]
 80181d4:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
 80181d8:	f9bd 1030 	ldrsh.w	r1, [sp, #48]	@ 0x30
 80181dc:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	@ 0x2c
 80181e0:	fb03 1202 	mla	r2, r3, r2, r1
 80181e4:	ebac 0c07 	sub.w	ip, ip, r7
 80181e8:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 80181ec:	435e      	muls	r6, r3
 80181ee:	ea4f 0e47 	mov.w	lr, r7, lsl #1
 80181f2:	2dff      	cmp	r5, #255	@ 0xff
 80181f4:	eba3 0707 	sub.w	r7, r3, r7
 80181f8:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 80181fc:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 8018200:	ea4f 0747 	mov.w	r7, r7, lsl #1
 8018204:	d049      	beq.n	801829a <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x192>
 8018206:	43eb      	mvns	r3, r5
 8018208:	fa1f f985 	uxth.w	r9, r5
 801820c:	b2db      	uxtb	r3, r3
 801820e:	42b0      	cmp	r0, r6
 8018210:	d266      	bcs.n	80182e0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 8018212:	eb00 0a0e 	add.w	sl, r0, lr
 8018216:	4550      	cmp	r0, sl
 8018218:	4621      	mov	r1, r4
 801821a:	f104 0403 	add.w	r4, r4, #3
 801821e:	d25b      	bcs.n	80182d8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d0>
 8018220:	8802      	ldrh	r2, [r0, #0]
 8018222:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 8018226:	ea4f 2822 	mov.w	r8, r2, asr #8
 801822a:	f008 08f8 	and.w	r8, r8, #248	@ 0xf8
 801822e:	fb11 f109 	smulbb	r1, r1, r9
 8018232:	ea48 1858 	orr.w	r8, r8, r8, lsr #5
 8018236:	10d5      	asrs	r5, r2, #3
 8018238:	fb08 1803 	mla	r8, r8, r3, r1
 801823c:	f814 1c02 	ldrb.w	r1, [r4, #-2]
 8018240:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 8018244:	fb11 f109 	smulbb	r1, r1, r9
 8018248:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801824c:	fb05 1503 	mla	r5, r5, r3, r1
 8018250:	00d2      	lsls	r2, r2, #3
 8018252:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 8018256:	b2d2      	uxtb	r2, r2
 8018258:	fb11 f109 	smulbb	r1, r1, r9
 801825c:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8018260:	fa1f f888 	uxth.w	r8, r8
 8018264:	fb02 1203 	mla	r2, r2, r3, r1
 8018268:	b292      	uxth	r2, r2
 801826a:	f108 0101 	add.w	r1, r8, #1
 801826e:	b2ad      	uxth	r5, r5
 8018270:	eb01 2818 	add.w	r8, r1, r8, lsr #8
 8018274:	1c51      	adds	r1, r2, #1
 8018276:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801827a:	1c69      	adds	r1, r5, #1
 801827c:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 8018280:	f408 4878 	and.w	r8, r8, #63488	@ 0xf800
 8018284:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8018288:	096d      	lsrs	r5, r5, #5
 801828a:	ea42 0208 	orr.w	r2, r2, r8
 801828e:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8018292:	432a      	orrs	r2, r5
 8018294:	f820 2b02 	strh.w	r2, [r0], #2
 8018298:	e7bd      	b.n	8018216 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x10e>
 801829a:	4a14      	ldr	r2, [pc, #80]	@ (80182ec <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e4>)
 801829c:	42b0      	cmp	r0, r6
 801829e:	d21f      	bcs.n	80182e0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 80182a0:	eb00 050e 	add.w	r5, r0, lr
 80182a4:	42a8      	cmp	r0, r5
 80182a6:	4621      	mov	r1, r4
 80182a8:	f104 0403 	add.w	r4, r4, #3
 80182ac:	d210      	bcs.n	80182d0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1c8>
 80182ae:	f814 3c02 	ldrb.w	r3, [r4, #-2]
 80182b2:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 80182b6:	00db      	lsls	r3, r3, #3
 80182b8:	ea02 2101 	and.w	r1, r2, r1, lsl #8
 80182bc:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 80182c0:	430b      	orrs	r3, r1
 80182c2:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 80182c6:	ea43 03d1 	orr.w	r3, r3, r1, lsr #3
 80182ca:	f820 3b02 	strh.w	r3, [r0], #2
 80182ce:	e7e9      	b.n	80182a4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x19c>
 80182d0:	4438      	add	r0, r7
 80182d2:	eb01 040c 	add.w	r4, r1, ip
 80182d6:	e7e1      	b.n	801829c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x194>
 80182d8:	4438      	add	r0, r7
 80182da:	eb01 040c 	add.w	r4, r1, ip
 80182de:	e796      	b.n	801820e <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x106>
 80182e0:	4b03      	ldr	r3, [pc, #12]	@ (80182f0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>)
 80182e2:	6818      	ldr	r0, [r3, #0]
 80182e4:	6803      	ldr	r3, [r0, #0]
 80182e6:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80182e8:	4798      	blx	r3
 80182ea:	e768      	b.n	80181be <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xb6>
 80182ec:	fffff800 	.word	0xfffff800
 80182f0:	200133d4 	.word	0x200133d4
 80182f4:	200133cc 	.word	0x200133cc

080182f8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb>:
 80182f8:	b4f0      	push	{r4, r5, r6, r7}
 80182fa:	4616      	mov	r6, r2
 80182fc:	2e01      	cmp	r6, #1
 80182fe:	461c      	mov	r4, r3
 8018300:	460d      	mov	r5, r1
 8018302:	9a04      	ldr	r2, [sp, #16]
 8018304:	f89d 3014 	ldrb.w	r3, [sp, #20]
 8018308:	f89d 7018 	ldrb.w	r7, [sp, #24]
 801830c:	d012      	beq.n	8018334 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x3c>
 801830e:	d303      	bcc.n	8018318 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x20>
 8018310:	2e02      	cmp	r6, #2
 8018312:	d00a      	beq.n	801832a <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x32>
 8018314:	bcf0      	pop	{r4, r5, r6, r7}
 8018316:	4770      	bx	lr
 8018318:	6805      	ldr	r5, [r0, #0]
 801831a:	e9cd 3704 	strd	r3, r7, [sp, #16]
 801831e:	68ed      	ldr	r5, [r5, #12]
 8018320:	4613      	mov	r3, r2
 8018322:	46ac      	mov	ip, r5
 8018324:	4622      	mov	r2, r4
 8018326:	bcf0      	pop	{r4, r5, r6, r7}
 8018328:	4760      	bx	ip
 801832a:	4621      	mov	r1, r4
 801832c:	4628      	mov	r0, r5
 801832e:	bcf0      	pop	{r4, r5, r6, r7}
 8018330:	f7ff bd94 	b.w	8017e5c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8018334:	4621      	mov	r1, r4
 8018336:	4628      	mov	r0, r5
 8018338:	bcf0      	pop	{r4, r5, r6, r7}
 801833a:	f7ff bee5 	b.w	8018108 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
	...

08018340 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>:
 8018340:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018344:	4681      	mov	r9, r0
 8018346:	b093      	sub	sp, #76	@ 0x4c
 8018348:	6810      	ldr	r0, [r2, #0]
 801834a:	f89d a070 	ldrb.w	sl, [sp, #112]	@ 0x70
 801834e:	4f6d      	ldr	r7, [pc, #436]	@ (8018504 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c4>)
 8018350:	4688      	mov	r8, r1
 8018352:	6851      	ldr	r1, [r2, #4]
 8018354:	ac0e      	add	r4, sp, #56	@ 0x38
 8018356:	c403      	stmia	r4!, {r0, r1}
 8018358:	6818      	ldr	r0, [r3, #0]
 801835a:	6859      	ldr	r1, [r3, #4]
 801835c:	ac10      	add	r4, sp, #64	@ 0x40
 801835e:	4616      	mov	r6, r2
 8018360:	c403      	stmia	r4!, {r0, r1}
 8018362:	a80e      	add	r0, sp, #56	@ 0x38
 8018364:	f7f7 f93e 	bl	800f5e4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8018368:	4631      	mov	r1, r6
 801836a:	a810      	add	r0, sp, #64	@ 0x40
 801836c:	f7f7 f962 	bl	800f634 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8018370:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	@ 0x40
 8018374:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	@ 0x42
 8018378:	f8bd 103c 	ldrh.w	r1, [sp, #60]	@ 0x3c
 801837c:	4e62      	ldr	r6, [pc, #392]	@ (8018508 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 801837e:	f9bd 4044 	ldrsh.w	r4, [sp, #68]	@ 0x44
 8018382:	6830      	ldr	r0, [r6, #0]
 8018384:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	@ 0x46
 8018388:	fb11 2103 	smlabb	r1, r1, r3, r2
 801838c:	4489      	add	r9, r1
 801838e:	f8bd 1038 	ldrh.w	r1, [sp, #56]	@ 0x38
 8018392:	440a      	add	r2, r1
 8018394:	f8ad 2040 	strh.w	r2, [sp, #64]	@ 0x40
 8018398:	f8bd 203a 	ldrh.w	r2, [sp, #58]	@ 0x3a
 801839c:	4413      	add	r3, r2
 801839e:	f8ad 3042 	strh.w	r3, [sp, #66]	@ 0x42
 80183a2:	6803      	ldr	r3, [r0, #0]
 80183a4:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80183a6:	4798      	blx	r3
 80183a8:	f010 0f80 	tst.w	r0, #128	@ 0x80
 80183ac:	6830      	ldr	r0, [r6, #0]
 80183ae:	d01d      	beq.n	80183ec <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xac>
 80183b0:	2200      	movs	r2, #0
 80183b2:	6801      	ldr	r1, [r0, #0]
 80183b4:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
 80183b8:	e9cd 2208 	strd	r2, r2, [sp, #32]
 80183bc:	220b      	movs	r2, #11
 80183be:	9207      	str	r2, [sp, #28]
 80183c0:	883a      	ldrh	r2, [r7, #0]
 80183c2:	9206      	str	r2, [sp, #24]
 80183c4:	2201      	movs	r2, #1
 80183c6:	e9cd a204 	strd	sl, r2, [sp, #16]
 80183ca:	f8bd 203c 	ldrh.w	r2, [sp, #60]	@ 0x3c
 80183ce:	9203      	str	r2, [sp, #12]
 80183d0:	b2a4      	uxth	r4, r4
 80183d2:	f8bd 2042 	ldrh.w	r2, [sp, #66]	@ 0x42
 80183d6:	9200      	str	r2, [sp, #0]
 80183d8:	b2ad      	uxth	r5, r5
 80183da:	9502      	str	r5, [sp, #8]
 80183dc:	9401      	str	r4, [sp, #4]
 80183de:	6c0c      	ldr	r4, [r1, #64]	@ 0x40
 80183e0:	4642      	mov	r2, r8
 80183e2:	4649      	mov	r1, r9
 80183e4:	47a0      	blx	r4
 80183e6:	b013      	add	sp, #76	@ 0x4c
 80183e8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80183ec:	6803      	ldr	r3, [r0, #0]
 80183ee:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80183f0:	4798      	blx	r3
 80183f2:	883b      	ldrh	r3, [r7, #0]
 80183f4:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	@ 0x42
 80183f8:	f9bd 1040 	ldrsh.w	r1, [sp, #64]	@ 0x40
 80183fc:	fb03 1202 	mla	r2, r3, r2, r1
 8018400:	435d      	muls	r5, r3
 8018402:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8018406:	eb00 0245 	add.w	r2, r0, r5, lsl #1
 801840a:	920c      	str	r2, [sp, #48]	@ 0x30
 801840c:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	@ 0x3c
 8018410:	1b12      	subs	r2, r2, r4
 8018412:	920d      	str	r2, [sp, #52]	@ 0x34
 8018414:	0062      	lsls	r2, r4, #1
 8018416:	1b1c      	subs	r4, r3, r4
 8018418:	0063      	lsls	r3, r4, #1
 801841a:	920a      	str	r2, [sp, #40]	@ 0x28
 801841c:	930b      	str	r3, [sp, #44]	@ 0x2c
 801841e:	f04f 0e04 	mov.w	lr, #4
 8018422:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8018424:	4298      	cmp	r0, r3
 8018426:	d266      	bcs.n	80184f6 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1b6>
 8018428:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801842a:	eb00 0b03 	add.w	fp, r0, r3
 801842e:	4558      	cmp	r0, fp
 8018430:	d25c      	bcs.n	80184ec <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1ac>
 8018432:	f819 3b01 	ldrb.w	r3, [r9], #1
 8018436:	fb1e e303 	smlabb	r3, lr, r3, lr
 801843a:	f858 2003 	ldr.w	r2, [r8, r3]
 801843e:	0e11      	lsrs	r1, r2, #24
 8018440:	d012      	beq.n	8018468 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 8018442:	29ff      	cmp	r1, #255	@ 0xff
 8018444:	ea4f 2712 	mov.w	r7, r2, lsr #8
 8018448:	d110      	bne.n	801846c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 801844a:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 801844e:	d10d      	bne.n	801846c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 8018450:	0953      	lsrs	r3, r2, #5
 8018452:	f427 67ff 	bic.w	r7, r7, #2040	@ 0x7f8
 8018456:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801845a:	f027 0707 	bic.w	r7, r7, #7
 801845e:	431f      	orrs	r7, r3
 8018460:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8018464:	433a      	orrs	r2, r7
 8018466:	8002      	strh	r2, [r0, #0]
 8018468:	3002      	adds	r0, #2
 801846a:	e7e0      	b.n	801842e <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xee>
 801846c:	fb0a f101 	mul.w	r1, sl, r1
 8018470:	8806      	ldrh	r6, [r0, #0]
 8018472:	1c4b      	adds	r3, r1, #1
 8018474:	eb03 2321 	add.w	r3, r3, r1, asr #8
 8018478:	1235      	asrs	r5, r6, #8
 801847a:	10f4      	asrs	r4, r6, #3
 801847c:	121b      	asrs	r3, r3, #8
 801847e:	00f6      	lsls	r6, r6, #3
 8018480:	b299      	uxth	r1, r3
 8018482:	f3c2 4c07 	ubfx	ip, r2, #16, #8
 8018486:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 801848a:	b2f6      	uxtb	r6, r6
 801848c:	43db      	mvns	r3, r3
 801848e:	b2d2      	uxtb	r2, r2
 8018490:	b2db      	uxtb	r3, r3
 8018492:	fb1c fc01 	smulbb	ip, ip, r1
 8018496:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 801849a:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801849e:	fb12 f201 	smulbb	r2, r2, r1
 80184a2:	fb05 c503 	mla	r5, r5, r3, ip
 80184a6:	f004 04fc 	and.w	r4, r4, #252	@ 0xfc
 80184aa:	b2ff      	uxtb	r7, r7
 80184ac:	fb06 2203 	mla	r2, r6, r3, r2
 80184b0:	b2ad      	uxth	r5, r5
 80184b2:	fb17 f701 	smulbb	r7, r7, r1
 80184b6:	b292      	uxth	r2, r2
 80184b8:	ea44 1494 	orr.w	r4, r4, r4, lsr #6
 80184bc:	fb04 7403 	mla	r4, r4, r3, r7
 80184c0:	f105 0c01 	add.w	ip, r5, #1
 80184c4:	1c57      	adds	r7, r2, #1
 80184c6:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 80184ca:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 80184ce:	b2a4      	uxth	r4, r4
 80184d0:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 80184d4:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 80184d8:	433d      	orrs	r5, r7
 80184da:	1c67      	adds	r7, r4, #1
 80184dc:	eb07 2414 	add.w	r4, r7, r4, lsr #8
 80184e0:	0964      	lsrs	r4, r4, #5
 80184e2:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 80184e6:	4325      	orrs	r5, r4
 80184e8:	8005      	strh	r5, [r0, #0]
 80184ea:	e7bd      	b.n	8018468 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 80184ec:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 80184ee:	4418      	add	r0, r3
 80184f0:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80184f2:	4499      	add	r9, r3
 80184f4:	e795      	b.n	8018422 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xe2>
 80184f6:	4b04      	ldr	r3, [pc, #16]	@ (8018508 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 80184f8:	6818      	ldr	r0, [r3, #0]
 80184fa:	6803      	ldr	r3, [r0, #0]
 80184fc:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80184fe:	4798      	blx	r3
 8018500:	e771      	b.n	80183e6 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xa6>
 8018502:	bf00      	nop
 8018504:	200133cc 	.word	0x200133cc
 8018508:	200133d4 	.word	0x200133d4

0801850c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>:
 801850c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018510:	b087      	sub	sp, #28
 8018512:	4680      	mov	r8, r0
 8018514:	f89d 6040 	ldrb.w	r6, [sp, #64]	@ 0x40
 8018518:	460d      	mov	r5, r1
 801851a:	4614      	mov	r4, r2
 801851c:	2e00      	cmp	r6, #0
 801851e:	f000 80b9 	beq.w	8018694 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x188>
 8018522:	6810      	ldr	r0, [r2, #0]
 8018524:	6851      	ldr	r1, [r2, #4]
 8018526:	af02      	add	r7, sp, #8
 8018528:	c703      	stmia	r7!, {r0, r1}
 801852a:	6818      	ldr	r0, [r3, #0]
 801852c:	6859      	ldr	r1, [r3, #4]
 801852e:	af04      	add	r7, sp, #16
 8018530:	c703      	stmia	r7!, {r0, r1}
 8018532:	a802      	add	r0, sp, #8
 8018534:	f7f7 f856 	bl	800f5e4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8018538:	4621      	mov	r1, r4
 801853a:	a804      	add	r0, sp, #16
 801853c:	f7f7 f87a 	bl	800f634 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8018540:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 8018544:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8018548:	f8bd 400c 	ldrh.w	r4, [sp, #12]
 801854c:	f9bd 7016 	ldrsh.w	r7, [sp, #22]
 8018550:	fb14 2103 	smlabb	r1, r4, r3, r2
 8018554:	eb08 0401 	add.w	r4, r8, r1
 8018558:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801855c:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 8018560:	440a      	add	r2, r1
 8018562:	f8ad 2010 	strh.w	r2, [sp, #16]
 8018566:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801856a:	4413      	add	r3, r2
 801856c:	f8ad 3012 	strh.w	r3, [sp, #18]
 8018570:	4b4a      	ldr	r3, [pc, #296]	@ (801869c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 8018572:	6818      	ldr	r0, [r3, #0]
 8018574:	6803      	ldr	r3, [r0, #0]
 8018576:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8018578:	4798      	blx	r3
 801857a:	4b49      	ldr	r3, [pc, #292]	@ (80186a0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x194>)
 801857c:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
 8018580:	881a      	ldrh	r2, [r3, #0]
 8018582:	f9bd c010 	ldrsh.w	ip, [sp, #16]
 8018586:	2eff      	cmp	r6, #255	@ 0xff
 8018588:	fb02 c101 	mla	r1, r2, r1, ip
 801858c:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 8018590:	fb02 f207 	mul.w	r2, r2, r7
 8018594:	f105 0104 	add.w	r1, r5, #4
 8018598:	ea4f 0a48 	mov.w	sl, r8, lsl #1
 801859c:	461d      	mov	r5, r3
 801859e:	d05a      	beq.n	8018656 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14a>
 80185a0:	f1c6 0eff 	rsb	lr, r6, #255	@ 0xff
 80185a4:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 80185a8:	b2b6      	uxth	r6, r6
 80185aa:	fa1f fe8e 	uxth.w	lr, lr
 80185ae:	9301      	str	r3, [sp, #4]
 80185b0:	4282      	cmp	r2, r0
 80185b2:	d96a      	bls.n	801868a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 80185b4:	eb00 0b0a 	add.w	fp, r0, sl
 80185b8:	4583      	cmp	fp, r0
 80185ba:	d940      	bls.n	801863e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x132>
 80185bc:	f814 3b01 	ldrb.w	r3, [r4], #1
 80185c0:	8805      	ldrh	r5, [r0, #0]
 80185c2:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 80185c6:	122f      	asrs	r7, r5, #8
 80185c8:	ea4f 2c23 	mov.w	ip, r3, asr #8
 80185cc:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 80185d0:	fb17 f70e 	smulbb	r7, r7, lr
 80185d4:	ea4f 09e5 	mov.w	r9, r5, asr #3
 80185d8:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 80185dc:	00ed      	lsls	r5, r5, #3
 80185de:	fb0c 7c06 	mla	ip, ip, r6, r7
 80185e2:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
 80185e6:	10df      	asrs	r7, r3, #3
 80185e8:	b2ed      	uxtb	r5, r5
 80185ea:	00db      	lsls	r3, r3, #3
 80185ec:	fa1f fc8c 	uxth.w	ip, ip
 80185f0:	fb19 f90e 	smulbb	r9, r9, lr
 80185f4:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 80185f8:	b2db      	uxtb	r3, r3
 80185fa:	fb15 f50e 	smulbb	r5, r5, lr
 80185fe:	fb07 9706 	mla	r7, r7, r6, r9
 8018602:	fb03 5306 	mla	r3, r3, r6, r5
 8018606:	f10c 0901 	add.w	r9, ip, #1
 801860a:	b29b      	uxth	r3, r3
 801860c:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
 8018610:	f40c 4978 	and.w	r9, ip, #63488	@ 0xf800
 8018614:	f103 0c01 	add.w	ip, r3, #1
 8018618:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801861c:	b2bf      	uxth	r7, r7
 801861e:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8018622:	ea4c 0c09 	orr.w	ip, ip, r9
 8018626:	f107 0901 	add.w	r9, r7, #1
 801862a:	eb09 2717 	add.w	r7, r9, r7, lsr #8
 801862e:	097f      	lsrs	r7, r7, #5
 8018630:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 8018634:	ea4c 0c07 	orr.w	ip, ip, r7
 8018638:	f820 cb02 	strh.w	ip, [r0], #2
 801863c:	e7bc      	b.n	80185b8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xac>
 801863e:	9b01      	ldr	r3, [sp, #4]
 8018640:	881b      	ldrh	r3, [r3, #0]
 8018642:	eba3 0308 	sub.w	r3, r3, r8
 8018646:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801864a:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 801864e:	eba3 0308 	sub.w	r3, r3, r8
 8018652:	441c      	add	r4, r3
 8018654:	e7ac      	b.n	80185b0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xa4>
 8018656:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 801865a:	4282      	cmp	r2, r0
 801865c:	d915      	bls.n	801868a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 801865e:	eb00 060a 	add.w	r6, r0, sl
 8018662:	4286      	cmp	r6, r0
 8018664:	d906      	bls.n	8018674 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x168>
 8018666:	f814 3b01 	ldrb.w	r3, [r4], #1
 801866a:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 801866e:	f820 3b02 	strh.w	r3, [r0], #2
 8018672:	e7f6      	b.n	8018662 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x156>
 8018674:	882b      	ldrh	r3, [r5, #0]
 8018676:	eba3 0308 	sub.w	r3, r3, r8
 801867a:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801867e:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 8018682:	eba3 0308 	sub.w	r3, r3, r8
 8018686:	441c      	add	r4, r3
 8018688:	e7e7      	b.n	801865a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14e>
 801868a:	4b04      	ldr	r3, [pc, #16]	@ (801869c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 801868c:	6818      	ldr	r0, [r3, #0]
 801868e:	6803      	ldr	r3, [r0, #0]
 8018690:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8018692:	4798      	blx	r3
 8018694:	b007      	add	sp, #28
 8018696:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801869a:	bf00      	nop
 801869c:	200133d4 	.word	0x200133d4
 80186a0:	200133cc 	.word	0x200133cc

080186a4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>:
 80186a4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80186a8:	b091      	sub	sp, #68	@ 0x44
 80186aa:	4680      	mov	r8, r0
 80186ac:	f89d 5068 	ldrb.w	r5, [sp, #104]	@ 0x68
 80186b0:	460f      	mov	r7, r1
 80186b2:	4614      	mov	r4, r2
 80186b4:	2d00      	cmp	r5, #0
 80186b6:	d051      	beq.n	801875c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 80186b8:	6810      	ldr	r0, [r2, #0]
 80186ba:	6851      	ldr	r1, [r2, #4]
 80186bc:	f8df 9200 	ldr.w	r9, [pc, #512]	@ 80188c0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>
 80186c0:	ae0c      	add	r6, sp, #48	@ 0x30
 80186c2:	c603      	stmia	r6!, {r0, r1}
 80186c4:	6818      	ldr	r0, [r3, #0]
 80186c6:	6859      	ldr	r1, [r3, #4]
 80186c8:	ae0e      	add	r6, sp, #56	@ 0x38
 80186ca:	c603      	stmia	r6!, {r0, r1}
 80186cc:	a80c      	add	r0, sp, #48	@ 0x30
 80186ce:	f7f6 ff89 	bl	800f5e4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80186d2:	4621      	mov	r1, r4
 80186d4:	a80e      	add	r0, sp, #56	@ 0x38
 80186d6:	f7f6 ffad 	bl	800f634 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80186da:	f9bd 2038 	ldrsh.w	r2, [sp, #56]	@ 0x38
 80186de:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	@ 0x3a
 80186e2:	f8bd 1034 	ldrh.w	r1, [sp, #52]	@ 0x34
 80186e6:	f8d9 0000 	ldr.w	r0, [r9]
 80186ea:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	@ 0x3c
 80186ee:	f9bd a03e 	ldrsh.w	sl, [sp, #62]	@ 0x3e
 80186f2:	fb11 2103 	smlabb	r1, r1, r3, r2
 80186f6:	eb08 0401 	add.w	r4, r8, r1
 80186fa:	f8bd 1030 	ldrh.w	r1, [sp, #48]	@ 0x30
 80186fe:	f8df 81c4 	ldr.w	r8, [pc, #452]	@ 80188c4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x220>
 8018702:	440a      	add	r2, r1
 8018704:	f8ad 2038 	strh.w	r2, [sp, #56]	@ 0x38
 8018708:	f8bd 2032 	ldrh.w	r2, [sp, #50]	@ 0x32
 801870c:	4413      	add	r3, r2
 801870e:	f8ad 303a 	strh.w	r3, [sp, #58]	@ 0x3a
 8018712:	6803      	ldr	r3, [r0, #0]
 8018714:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8018716:	4798      	blx	r3
 8018718:	f010 0f80 	tst.w	r0, #128	@ 0x80
 801871c:	f8d9 0000 	ldr.w	r0, [r9]
 8018720:	d01f      	beq.n	8018762 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xbe>
 8018722:	2200      	movs	r2, #0
 8018724:	6801      	ldr	r1, [r0, #0]
 8018726:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
 801872a:	e9cd 2208 	strd	r2, r2, [sp, #32]
 801872e:	220b      	movs	r2, #11
 8018730:	9207      	str	r2, [sp, #28]
 8018732:	f8b8 2000 	ldrh.w	r2, [r8]
 8018736:	9206      	str	r2, [sp, #24]
 8018738:	2201      	movs	r2, #1
 801873a:	e9cd 5204 	strd	r5, r2, [sp, #16]
 801873e:	f8bd 2034 	ldrh.w	r2, [sp, #52]	@ 0x34
 8018742:	9203      	str	r2, [sp, #12]
 8018744:	fa1f f28a 	uxth.w	r2, sl
 8018748:	9202      	str	r2, [sp, #8]
 801874a:	b2b6      	uxth	r6, r6
 801874c:	f8bd 203a 	ldrh.w	r2, [sp, #58]	@ 0x3a
 8018750:	9200      	str	r2, [sp, #0]
 8018752:	9601      	str	r6, [sp, #4]
 8018754:	6c0d      	ldr	r5, [r1, #64]	@ 0x40
 8018756:	463a      	mov	r2, r7
 8018758:	4621      	mov	r1, r4
 801875a:	47a8      	blx	r5
 801875c:	b011      	add	sp, #68	@ 0x44
 801875e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018762:	6803      	ldr	r3, [r0, #0]
 8018764:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8018766:	4798      	blx	r3
 8018768:	f8b8 2000 	ldrh.w	r2, [r8]
 801876c:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	@ 0x3a
 8018770:	f9bd 1038 	ldrsh.w	r1, [sp, #56]	@ 0x38
 8018774:	2dff      	cmp	r5, #255	@ 0xff
 8018776:	fb02 1303 	mla	r3, r2, r3, r1
 801877a:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801877e:	ea4f 0946 	mov.w	r9, r6, lsl #1
 8018782:	fb0a fa02 	mul.w	sl, sl, r2
 8018786:	d062      	beq.n	801884e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1aa>
 8018788:	ea6f 0c05 	mvn.w	ip, r5
 801878c:	eb00 034a 	add.w	r3, r0, sl, lsl #1
 8018790:	930a      	str	r3, [sp, #40]	@ 0x28
 8018792:	b2ad      	uxth	r5, r5
 8018794:	fa5f fc8c 	uxtb.w	ip, ip
 8018798:	f8cd 802c 	str.w	r8, [sp, #44]	@ 0x2c
 801879c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801879e:	4298      	cmp	r0, r3
 80187a0:	f080 8085 	bcs.w	80188ae <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 80187a4:	eb00 0b09 	add.w	fp, r0, r9
 80187a8:	4558      	cmp	r0, fp
 80187aa:	d246      	bcs.n	801883a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x196>
 80187ac:	f814 eb01 	ldrb.w	lr, [r4], #1
 80187b0:	2303      	movs	r3, #3
 80187b2:	2204      	movs	r2, #4
 80187b4:	fb13 2e0e 	smlabb	lr, r3, lr, r2
 80187b8:	eb07 0a0e 	add.w	sl, r7, lr
 80187bc:	8803      	ldrh	r3, [r0, #0]
 80187be:	f89a 8002 	ldrb.w	r8, [sl, #2]
 80187c2:	f817 e00e 	ldrb.w	lr, [r7, lr]
 80187c6:	1219      	asrs	r1, r3, #8
 80187c8:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 80187cc:	fb18 f805 	smulbb	r8, r8, r5
 80187d0:	ea41 1151 	orr.w	r1, r1, r1, lsr #5
 80187d4:	10da      	asrs	r2, r3, #3
 80187d6:	fb01 810c 	mla	r1, r1, ip, r8
 80187da:	00db      	lsls	r3, r3, #3
 80187dc:	f89a 8001 	ldrb.w	r8, [sl, #1]
 80187e0:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 80187e4:	b2db      	uxtb	r3, r3
 80187e6:	fb18 f805 	smulbb	r8, r8, r5
 80187ea:	fb1e fe05 	smulbb	lr, lr, r5
 80187ee:	ea42 1292 	orr.w	r2, r2, r2, lsr #6
 80187f2:	ea43 1353 	orr.w	r3, r3, r3, lsr #5
 80187f6:	b289      	uxth	r1, r1
 80187f8:	fb02 820c 	mla	r2, r2, ip, r8
 80187fc:	fb03 e30c 	mla	r3, r3, ip, lr
 8018800:	b292      	uxth	r2, r2
 8018802:	b29b      	uxth	r3, r3
 8018804:	f101 0801 	add.w	r8, r1, #1
 8018808:	eb08 2111 	add.w	r1, r8, r1, lsr #8
 801880c:	f103 0e01 	add.w	lr, r3, #1
 8018810:	f102 0801 	add.w	r8, r2, #1
 8018814:	eb0e 2e13 	add.w	lr, lr, r3, lsr #8
 8018818:	eb08 2812 	add.w	r8, r8, r2, lsr #8
 801881c:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
 8018820:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 8018824:	ea4f 1858 	mov.w	r8, r8, lsr #5
 8018828:	ea4e 0101 	orr.w	r1, lr, r1
 801882c:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 8018830:	ea41 0108 	orr.w	r1, r1, r8
 8018834:	f820 1b02 	strh.w	r1, [r0], #2
 8018838:	e7b6      	b.n	80187a8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x104>
 801883a:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801883c:	881b      	ldrh	r3, [r3, #0]
 801883e:	1b9b      	subs	r3, r3, r6
 8018840:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8018844:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
 8018848:	1b9b      	subs	r3, r3, r6
 801884a:	441c      	add	r4, r3
 801884c:	e7a6      	b.n	801879c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xf8>
 801884e:	491b      	ldr	r1, [pc, #108]	@ (80188bc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x218>)
 8018850:	eb00 0a4a 	add.w	sl, r0, sl, lsl #1
 8018854:	2203      	movs	r2, #3
 8018856:	2504      	movs	r5, #4
 8018858:	4550      	cmp	r0, sl
 801885a:	d228      	bcs.n	80188ae <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 801885c:	eb00 0c09 	add.w	ip, r0, r9
 8018860:	4560      	cmp	r0, ip
 8018862:	4623      	mov	r3, r4
 8018864:	d219      	bcs.n	801889a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1f6>
 8018866:	f893 e000 	ldrb.w	lr, [r3]
 801886a:	fb12 5e0e 	smlabb	lr, r2, lr, r5
 801886e:	eb07 0b0e 	add.w	fp, r7, lr
 8018872:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8018876:	f89b 3002 	ldrb.w	r3, [fp, #2]
 801887a:	f89b b001 	ldrb.w	fp, [fp, #1]
 801887e:	ea4f 0bcb 	mov.w	fp, fp, lsl #3
 8018882:	ea01 2303 	and.w	r3, r1, r3, lsl #8
 8018886:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
 801888a:	ea43 030b 	orr.w	r3, r3, fp
 801888e:	ea43 03de 	orr.w	r3, r3, lr, lsr #3
 8018892:	3401      	adds	r4, #1
 8018894:	f820 3b02 	strh.w	r3, [r0], #2
 8018898:	e7e2      	b.n	8018860 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1bc>
 801889a:	f8b8 3000 	ldrh.w	r3, [r8]
 801889e:	1b9b      	subs	r3, r3, r6
 80188a0:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80188a4:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
 80188a8:	1b9b      	subs	r3, r3, r6
 80188aa:	441c      	add	r4, r3
 80188ac:	e7d4      	b.n	8018858 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1b4>
 80188ae:	4b04      	ldr	r3, [pc, #16]	@ (80188c0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>)
 80188b0:	6818      	ldr	r0, [r3, #0]
 80188b2:	6803      	ldr	r3, [r0, #0]
 80188b4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80188b6:	4798      	blx	r3
 80188b8:	e750      	b.n	801875c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 80188ba:	bf00      	nop
 80188bc:	fffff800 	.word	0xfffff800
 80188c0:	200133d4 	.word	0x200133d4
 80188c4:	200133cc 	.word	0x200133cc

080188c8 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>:
 80188c8:	b4f0      	push	{r4, r5, r6, r7}
 80188ca:	460c      	mov	r4, r1
 80188cc:	4611      	mov	r1, r2
 80188ce:	f89d 5014 	ldrb.w	r5, [sp, #20]
 80188d2:	780f      	ldrb	r7, [r1, #0]
 80188d4:	784e      	ldrb	r6, [r1, #1]
 80188d6:	2f01      	cmp	r7, #1
 80188d8:	461a      	mov	r2, r3
 80188da:	9b04      	ldr	r3, [sp, #16]
 80188dc:	d038      	beq.n	8018950 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x88>
 80188de:	d31f      	bcc.n	8018920 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x58>
 80188e0:	2f02      	cmp	r7, #2
 80188e2:	d14d      	bne.n	8018980 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 80188e4:	2e03      	cmp	r6, #3
 80188e6:	d84b      	bhi.n	8018980 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 80188e8:	e8df f006 	tbb	[pc, r6]
 80188ec:	17140702 	.word	0x17140702
 80188f0:	9504      	str	r5, [sp, #16]
 80188f2:	4620      	mov	r0, r4
 80188f4:	bcf0      	pop	{r4, r5, r6, r7}
 80188f6:	f7ff be09 	b.w	801850c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>
 80188fa:	6fc0      	ldr	r0, [r0, #124]	@ 0x7c
 80188fc:	2800      	cmp	r0, #0
 80188fe:	d03f      	beq.n	8018980 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 8018900:	6806      	ldr	r6, [r0, #0]
 8018902:	e9cd 3504 	strd	r3, r5, [sp, #16]
 8018906:	68b5      	ldr	r5, [r6, #8]
 8018908:	4613      	mov	r3, r2
 801890a:	46ac      	mov	ip, r5
 801890c:	460a      	mov	r2, r1
 801890e:	4621      	mov	r1, r4
 8018910:	bcf0      	pop	{r4, r5, r6, r7}
 8018912:	4760      	bx	ip
 8018914:	f8d0 0080 	ldr.w	r0, [r0, #128]	@ 0x80
 8018918:	e7f0      	b.n	80188fc <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
 801891a:	f8d0 0084 	ldr.w	r0, [r0, #132]	@ 0x84
 801891e:	e7ed      	b.n	80188fc <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
 8018920:	2e03      	cmp	r6, #3
 8018922:	d82d      	bhi.n	8018980 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 8018924:	e8df f006 	tbb	[pc, r6]
 8018928:	110e0702 	.word	0x110e0702
 801892c:	9504      	str	r5, [sp, #16]
 801892e:	4620      	mov	r0, r4
 8018930:	bcf0      	pop	{r4, r5, r6, r7}
 8018932:	f7ff bd05 	b.w	8018340 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>
 8018936:	6fc0      	ldr	r0, [r0, #124]	@ 0x7c
 8018938:	b310      	cbz	r0, 8018980 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 801893a:	6806      	ldr	r6, [r0, #0]
 801893c:	e9cd 3504 	strd	r3, r5, [sp, #16]
 8018940:	68f5      	ldr	r5, [r6, #12]
 8018942:	e7e1      	b.n	8018908 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
 8018944:	f8d0 0080 	ldr.w	r0, [r0, #128]	@ 0x80
 8018948:	e7f6      	b.n	8018938 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x70>
 801894a:	f8d0 0084 	ldr.w	r0, [r0, #132]	@ 0x84
 801894e:	e7f3      	b.n	8018938 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x70>
 8018950:	2e03      	cmp	r6, #3
 8018952:	d815      	bhi.n	8018980 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 8018954:	e8df f006 	tbb	[pc, r6]
 8018958:	110e0702 	.word	0x110e0702
 801895c:	9504      	str	r5, [sp, #16]
 801895e:	4620      	mov	r0, r4
 8018960:	bcf0      	pop	{r4, r5, r6, r7}
 8018962:	f7ff be9f 	b.w	80186a4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>
 8018966:	6fc0      	ldr	r0, [r0, #124]	@ 0x7c
 8018968:	b150      	cbz	r0, 8018980 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 801896a:	6806      	ldr	r6, [r0, #0]
 801896c:	e9cd 3504 	strd	r3, r5, [sp, #16]
 8018970:	6935      	ldr	r5, [r6, #16]
 8018972:	e7c9      	b.n	8018908 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
 8018974:	f8d0 0080 	ldr.w	r0, [r0, #128]	@ 0x80
 8018978:	e7f6      	b.n	8018968 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xa0>
 801897a:	f8d0 0084 	ldr.w	r0, [r0, #132]	@ 0x84
 801897e:	e7f3      	b.n	8018968 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xa0>
 8018980:	bcf0      	pop	{r4, r5, r6, r7}
 8018982:	4770      	bx	lr

08018984 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>:
 8018984:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018988:	4604      	mov	r4, r0
 801898a:	b087      	sub	sp, #28
 801898c:	6810      	ldr	r0, [r2, #0]
 801898e:	f89d a040 	ldrb.w	sl, [sp, #64]	@ 0x40
 8018992:	f8df 9238 	ldr.w	r9, [pc, #568]	@ 8018bcc <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x248>
 8018996:	460e      	mov	r6, r1
 8018998:	6851      	ldr	r1, [r2, #4]
 801899a:	ad02      	add	r5, sp, #8
 801899c:	c503      	stmia	r5!, {r0, r1}
 801899e:	6818      	ldr	r0, [r3, #0]
 80189a0:	6859      	ldr	r1, [r3, #4]
 80189a2:	ad04      	add	r5, sp, #16
 80189a4:	4617      	mov	r7, r2
 80189a6:	c503      	stmia	r5!, {r0, r1}
 80189a8:	a802      	add	r0, sp, #8
 80189aa:	f7f6 fe1b 	bl	800f5e4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80189ae:	4639      	mov	r1, r7
 80189b0:	a804      	add	r0, sp, #16
 80189b2:	f7f6 fe3f 	bl	800f634 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80189b6:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 80189ba:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 80189be:	f8bd 100c 	ldrh.w	r1, [sp, #12]
 80189c2:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 80189c6:	f9bd 5016 	ldrsh.w	r5, [sp, #22]
 80189ca:	fb11 2103 	smlabb	r1, r1, r3, r2
 80189ce:	eb04 0441 	add.w	r4, r4, r1, lsl #1
 80189d2:	440e      	add	r6, r1
 80189d4:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 80189d8:	440a      	add	r2, r1
 80189da:	f8ad 2010 	strh.w	r2, [sp, #16]
 80189de:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 80189e2:	4413      	add	r3, r2
 80189e4:	f8ad 3012 	strh.w	r3, [sp, #18]
 80189e8:	4b77      	ldr	r3, [pc, #476]	@ (8018bc8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 80189ea:	6818      	ldr	r0, [r3, #0]
 80189ec:	6803      	ldr	r3, [r0, #0]
 80189ee:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80189f0:	4798      	blx	r3
 80189f2:	f8b9 b000 	ldrh.w	fp, [r9]
 80189f6:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 80189fa:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 80189fe:	fb0b 2303 	mla	r3, fp, r3, r2
 8018a02:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8018a06:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 8018a0a:	ea4f 0348 	mov.w	r3, r8, lsl #1
 8018a0e:	fb05 f50b 	mul.w	r5, r5, fp
 8018a12:	9300      	str	r3, [sp, #0]
 8018a14:	d069      	beq.n	8018aea <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x166>
 8018a16:	eb00 0b45 	add.w	fp, r0, r5, lsl #1
 8018a1a:	4558      	cmp	r0, fp
 8018a1c:	f080 80cc 	bcs.w	8018bb8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 8018a20:	9b00      	ldr	r3, [sp, #0]
 8018a22:	18c3      	adds	r3, r0, r3
 8018a24:	9301      	str	r3, [sp, #4]
 8018a26:	4631      	mov	r1, r6
 8018a28:	9b01      	ldr	r3, [sp, #4]
 8018a2a:	4298      	cmp	r0, r3
 8018a2c:	d24f      	bcs.n	8018ace <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x14a>
 8018a2e:	f811 2b01 	ldrb.w	r2, [r1], #1
 8018a32:	2a00      	cmp	r2, #0
 8018a34:	d048      	beq.n	8018ac8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 8018a36:	fb0a f202 	mul.w	r2, sl, r2
 8018a3a:	1c53      	adds	r3, r2, #1
 8018a3c:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8018a40:	121b      	asrs	r3, r3, #8
 8018a42:	d041      	beq.n	8018ac8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 8018a44:	8802      	ldrh	r2, [r0, #0]
 8018a46:	f8b4 c000 	ldrh.w	ip, [r4]
 8018a4a:	b29e      	uxth	r6, r3
 8018a4c:	1215      	asrs	r5, r2, #8
 8018a4e:	43db      	mvns	r3, r3
 8018a50:	b2db      	uxtb	r3, r3
 8018a52:	ea4f 272c 	mov.w	r7, ip, asr #8
 8018a56:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 8018a5a:	fb15 f503 	smulbb	r5, r5, r3
 8018a5e:	ea4f 0ee2 	mov.w	lr, r2, asr #3
 8018a62:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8018a66:	00d2      	lsls	r2, r2, #3
 8018a68:	fb07 5706 	mla	r7, r7, r6, r5
 8018a6c:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
 8018a70:	ea4f 05ec 	mov.w	r5, ip, asr #3
 8018a74:	b2d2      	uxtb	r2, r2
 8018a76:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8018a7a:	b2bf      	uxth	r7, r7
 8018a7c:	fb1e fe03 	smulbb	lr, lr, r3
 8018a80:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 8018a84:	fa5f fc8c 	uxtb.w	ip, ip
 8018a88:	fb12 f203 	smulbb	r2, r2, r3
 8018a8c:	fb05 e506 	mla	r5, r5, r6, lr
 8018a90:	fb0c 2c06 	mla	ip, ip, r6, r2
 8018a94:	f107 0e01 	add.w	lr, r7, #1
 8018a98:	fa1f fc8c 	uxth.w	ip, ip
 8018a9c:	eb0e 2717 	add.w	r7, lr, r7, lsr #8
 8018aa0:	f407 4e78 	and.w	lr, r7, #63488	@ 0xf800
 8018aa4:	f10c 0701 	add.w	r7, ip, #1
 8018aa8:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8018aac:	b2ad      	uxth	r5, r5
 8018aae:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8018ab2:	ea47 070e 	orr.w	r7, r7, lr
 8018ab6:	f105 0e01 	add.w	lr, r5, #1
 8018aba:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 8018abe:	096d      	lsrs	r5, r5, #5
 8018ac0:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8018ac4:	432f      	orrs	r7, r5
 8018ac6:	8007      	strh	r7, [r0, #0]
 8018ac8:	3002      	adds	r0, #2
 8018aca:	3402      	adds	r4, #2
 8018acc:	e7ac      	b.n	8018a28 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xa4>
 8018ace:	f8b9 3000 	ldrh.w	r3, [r9]
 8018ad2:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 8018ad6:	eba3 0308 	sub.w	r3, r3, r8
 8018ada:	eba6 0608 	sub.w	r6, r6, r8
 8018ade:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 8018ae2:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8018ae6:	440e      	add	r6, r1
 8018ae8:	e797      	b.n	8018a1a <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x96>
 8018aea:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 8018aee:	42a8      	cmp	r0, r5
 8018af0:	d262      	bcs.n	8018bb8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 8018af2:	9b00      	ldr	r3, [sp, #0]
 8018af4:	4631      	mov	r1, r6
 8018af6:	eb00 0b03 	add.w	fp, r0, r3
 8018afa:	4558      	cmp	r0, fp
 8018afc:	d24e      	bcs.n	8018b9c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x218>
 8018afe:	f811 3b01 	ldrb.w	r3, [r1], #1
 8018b02:	b12b      	cbz	r3, 8018b10 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 8018b04:	2bff      	cmp	r3, #255	@ 0xff
 8018b06:	f8b4 e000 	ldrh.w	lr, [r4]
 8018b0a:	d104      	bne.n	8018b16 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x192>
 8018b0c:	f8a0 e000 	strh.w	lr, [r0]
 8018b10:	3002      	adds	r0, #2
 8018b12:	3402      	adds	r4, #2
 8018b14:	e7f1      	b.n	8018afa <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x176>
 8018b16:	8802      	ldrh	r2, [r0, #0]
 8018b18:	b29f      	uxth	r7, r3
 8018b1a:	1216      	asrs	r6, r2, #8
 8018b1c:	43db      	mvns	r3, r3
 8018b1e:	b2db      	uxtb	r3, r3
 8018b20:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8018b24:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 8018b28:	fb16 f603 	smulbb	r6, r6, r3
 8018b2c:	ea4f 0ae2 	mov.w	sl, r2, asr #3
 8018b30:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8018b34:	00d2      	lsls	r2, r2, #3
 8018b36:	fb0c 6c07 	mla	ip, ip, r7, r6
 8018b3a:	b2d2      	uxtb	r2, r2
 8018b3c:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8018b40:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 8018b44:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8018b48:	fb1a fa03 	smulbb	sl, sl, r3
 8018b4c:	fa1f fc8c 	uxth.w	ip, ip
 8018b50:	fb12 f303 	smulbb	r3, r2, r3
 8018b54:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8018b58:	fa5f fe8e 	uxtb.w	lr, lr
 8018b5c:	fb06 a607 	mla	r6, r6, r7, sl
 8018b60:	f10c 0201 	add.w	r2, ip, #1
 8018b64:	fb0e 3307 	mla	r3, lr, r7, r3
 8018b68:	b2b6      	uxth	r6, r6
 8018b6a:	b29b      	uxth	r3, r3
 8018b6c:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 8018b70:	f40c 4278 	and.w	r2, ip, #63488	@ 0xf800
 8018b74:	f106 0a01 	add.w	sl, r6, #1
 8018b78:	f103 0c01 	add.w	ip, r3, #1
 8018b7c:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8018b80:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 8018b84:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8018b88:	0976      	lsrs	r6, r6, #5
 8018b8a:	ea4c 0c02 	orr.w	ip, ip, r2
 8018b8e:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 8018b92:	ea4c 0c06 	orr.w	ip, ip, r6
 8018b96:	f8a0 c000 	strh.w	ip, [r0]
 8018b9a:	e7b9      	b.n	8018b10 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 8018b9c:	f8b9 3000 	ldrh.w	r3, [r9]
 8018ba0:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 8018ba4:	eba3 0308 	sub.w	r3, r3, r8
 8018ba8:	eba6 0608 	sub.w	r6, r6, r8
 8018bac:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 8018bb0:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8018bb4:	440e      	add	r6, r1
 8018bb6:	e79a      	b.n	8018aee <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x16a>
 8018bb8:	4b03      	ldr	r3, [pc, #12]	@ (8018bc8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 8018bba:	6818      	ldr	r0, [r3, #0]
 8018bbc:	6803      	ldr	r3, [r0, #0]
 8018bbe:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8018bc0:	4798      	blx	r3
 8018bc2:	b007      	add	sp, #28
 8018bc4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018bc8:	200133d4 	.word	0x200133d4
 8018bcc:	200133cc 	.word	0x200133cc

08018bd0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb>:
 8018bd0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018bd4:	b089      	sub	sp, #36	@ 0x24
 8018bd6:	4607      	mov	r7, r0
 8018bd8:	f89d 604c 	ldrb.w	r6, [sp, #76]	@ 0x4c
 8018bdc:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 8018bde:	4688      	mov	r8, r1
 8018be0:	4692      	mov	sl, r2
 8018be2:	4699      	mov	r9, r3
 8018be4:	2e00      	cmp	r6, #0
 8018be6:	d048      	beq.n	8018c7a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 8018be8:	4608      	mov	r0, r1
 8018bea:	f7fa f81d 	bl	8012c28 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8018bee:	4605      	mov	r5, r0
 8018bf0:	4640      	mov	r0, r8
 8018bf2:	f7fa f84d 	bl	8012c90 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8018bf6:	f8ad 000e 	strh.w	r0, [sp, #14]
 8018bfa:	4640      	mov	r0, r8
 8018bfc:	f8ad a008 	strh.w	sl, [sp, #8]
 8018c00:	f8ad 500c 	strh.w	r5, [sp, #12]
 8018c04:	f8ad 900a 	strh.w	r9, [sp, #10]
 8018c08:	f7fa f900 	bl	8012e0c <_ZNK8touchgfx6Bitmap7getDataEv>
 8018c0c:	4605      	mov	r5, r0
 8018c0e:	4640      	mov	r0, r8
 8018c10:	f7fa f92c 	bl	8012e6c <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 8018c14:	4682      	mov	sl, r0
 8018c16:	4640      	mov	r0, r8
 8018c18:	f7fa f97c 	bl	8012f14 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8018c1c:	2810      	cmp	r0, #16
 8018c1e:	d82c      	bhi.n	8018c7a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 8018c20:	e8df f010 	tbh	[pc, r0, lsl #1]
 8018c24:	00ba00ca 	.word	0x00ba00ca
 8018c28:	002b0011 	.word	0x002b0011
 8018c2c:	002b002b 	.word	0x002b002b
 8018c30:	002b002b 	.word	0x002b002b
 8018c34:	002b002b 	.word	0x002b002b
 8018c38:	00c1002b 	.word	0x00c1002b
 8018c3c:	002b002b 	.word	0x002b002b
 8018c40:	002b0180 	.word	0x002b0180
 8018c44:	0173      	.short	0x0173
 8018c46:	4bbc      	ldr	r3, [pc, #752]	@ (8018f38 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x368>)
 8018c48:	6818      	ldr	r0, [r3, #0]
 8018c4a:	6803      	ldr	r3, [r0, #0]
 8018c4c:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8018c4e:	4798      	blx	r3
 8018c50:	2eff      	cmp	r6, #255	@ 0xff
 8018c52:	d101      	bne.n	8018c58 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x88>
 8018c54:	0683      	lsls	r3, r0, #26
 8018c56:	d506      	bpl.n	8018c66 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x96>
 8018c58:	4633      	mov	r3, r6
 8018c5a:	4622      	mov	r2, r4
 8018c5c:	a902      	add	r1, sp, #8
 8018c5e:	4628      	mov	r0, r5
 8018c60:	f7ff f8fc 	bl	8017e5c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8018c64:	e009      	b.n	8018c7a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 8018c66:	4640      	mov	r0, r8
 8018c68:	f7fa f898 	bl	8012d9c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 8018c6c:	b940      	cbnz	r0, 8018c80 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xb0>
 8018c6e:	4623      	mov	r3, r4
 8018c70:	aa02      	add	r2, sp, #8
 8018c72:	4629      	mov	r1, r5
 8018c74:	4638      	mov	r0, r7
 8018c76:	f7ff f9d7 	bl	8018028 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 8018c7a:	b009      	add	sp, #36	@ 0x24
 8018c7c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018c80:	f10d 0918 	add.w	r9, sp, #24
 8018c84:	4641      	mov	r1, r8
 8018c86:	4648      	mov	r0, r9
 8018c88:	f7fa f836 	bl	8012cf8 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8018c8c:	e899 0003 	ldmia.w	r9, {r0, r1}
 8018c90:	f10d 0810 	add.w	r8, sp, #16
 8018c94:	e888 0003 	stmia.w	r8, {r0, r1}
 8018c98:	4640      	mov	r0, r8
 8018c9a:	4621      	mov	r1, r4
 8018c9c:	f7f2 f98c 	bl	800afb8 <_ZN8touchgfx4RectaNERKS0_>
 8018ca0:	4640      	mov	r0, r8
 8018ca2:	f7f2 f9cc 	bl	800b03e <_ZNK8touchgfx4Rect7isEmptyEv>
 8018ca6:	2800      	cmp	r0, #0
 8018ca8:	d1d6      	bne.n	8018c58 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x88>
 8018caa:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8018cae:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 8018cb2:	4293      	cmp	r3, r2
 8018cb4:	dd12      	ble.n	8018cdc <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x10c>
 8018cb6:	1a9b      	subs	r3, r3, r2
 8018cb8:	f9b4 0000 	ldrsh.w	r0, [r4]
 8018cbc:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8018cc0:	f8ad 0018 	strh.w	r0, [sp, #24]
 8018cc4:	f8ad 201a 	strh.w	r2, [sp, #26]
 8018cc8:	f8ad 101c 	strh.w	r1, [sp, #28]
 8018ccc:	f8ad 301e 	strh.w	r3, [sp, #30]
 8018cd0:	464a      	mov	r2, r9
 8018cd2:	4633      	mov	r3, r6
 8018cd4:	a902      	add	r1, sp, #8
 8018cd6:	4628      	mov	r0, r5
 8018cd8:	f7ff f8c0 	bl	8017e5c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8018cdc:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 8018ce0:	f9b4 2000 	ldrsh.w	r2, [r4]
 8018ce4:	4293      	cmp	r3, r2
 8018ce6:	dd12      	ble.n	8018d0e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x13e>
 8018ce8:	1a9b      	subs	r3, r3, r2
 8018cea:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 8018cee:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 8018cf2:	f8ad 2018 	strh.w	r2, [sp, #24]
 8018cf6:	f8ad 001a 	strh.w	r0, [sp, #26]
 8018cfa:	f8ad 301c 	strh.w	r3, [sp, #28]
 8018cfe:	f8ad 101e 	strh.w	r1, [sp, #30]
 8018d02:	23ff      	movs	r3, #255	@ 0xff
 8018d04:	464a      	mov	r2, r9
 8018d06:	a902      	add	r1, sp, #8
 8018d08:	4628      	mov	r0, r5
 8018d0a:	f7ff f8a7 	bl	8017e5c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8018d0e:	4643      	mov	r3, r8
 8018d10:	aa02      	add	r2, sp, #8
 8018d12:	4629      	mov	r1, r5
 8018d14:	4638      	mov	r0, r7
 8018d16:	f7ff f987 	bl	8018028 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 8018d1a:	88a2      	ldrh	r2, [r4, #4]
 8018d1c:	8823      	ldrh	r3, [r4, #0]
 8018d1e:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 8018d22:	4413      	add	r3, r2
 8018d24:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8018d28:	440a      	add	r2, r1
 8018d2a:	b29b      	uxth	r3, r3
 8018d2c:	b292      	uxth	r2, r2
 8018d2e:	b211      	sxth	r1, r2
 8018d30:	b218      	sxth	r0, r3
 8018d32:	4288      	cmp	r0, r1
 8018d34:	dd12      	ble.n	8018d5c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x18c>
 8018d36:	1a9b      	subs	r3, r3, r2
 8018d38:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 8018d3c:	f9bd 6012 	ldrsh.w	r6, [sp, #18]
 8018d40:	f8ad 1018 	strh.w	r1, [sp, #24]
 8018d44:	f8ad 301c 	strh.w	r3, [sp, #28]
 8018d48:	f8ad 001e 	strh.w	r0, [sp, #30]
 8018d4c:	23ff      	movs	r3, #255	@ 0xff
 8018d4e:	464a      	mov	r2, r9
 8018d50:	a902      	add	r1, sp, #8
 8018d52:	4628      	mov	r0, r5
 8018d54:	f8ad 601a 	strh.w	r6, [sp, #26]
 8018d58:	f7ff f880 	bl	8017e5c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8018d5c:	88e2      	ldrh	r2, [r4, #6]
 8018d5e:	8863      	ldrh	r3, [r4, #2]
 8018d60:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 8018d64:	4413      	add	r3, r2
 8018d66:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8018d6a:	440a      	add	r2, r1
 8018d6c:	b29b      	uxth	r3, r3
 8018d6e:	b292      	uxth	r2, r2
 8018d70:	b211      	sxth	r1, r2
 8018d72:	b218      	sxth	r0, r3
 8018d74:	4288      	cmp	r0, r1
 8018d76:	dd80      	ble.n	8018c7a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 8018d78:	1a9b      	subs	r3, r3, r2
 8018d7a:	f9b4 6000 	ldrsh.w	r6, [r4]
 8018d7e:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8018d82:	f8ad 301e 	strh.w	r3, [sp, #30]
 8018d86:	f8ad 6018 	strh.w	r6, [sp, #24]
 8018d8a:	f8ad 101a 	strh.w	r1, [sp, #26]
 8018d8e:	f8ad 001c 	strh.w	r0, [sp, #28]
 8018d92:	23ff      	movs	r3, #255	@ 0xff
 8018d94:	464a      	mov	r2, r9
 8018d96:	e761      	b.n	8018c5c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x8c>
 8018d98:	4633      	mov	r3, r6
 8018d9a:	4622      	mov	r2, r4
 8018d9c:	a902      	add	r1, sp, #8
 8018d9e:	4628      	mov	r0, r5
 8018da0:	f7ff f9b2 	bl	8018108 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
 8018da4:	e769      	b.n	8018c7a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 8018da6:	e9cd 4600 	strd	r4, r6, [sp]
 8018daa:	ab02      	add	r3, sp, #8
 8018dac:	4652      	mov	r2, sl
 8018dae:	4629      	mov	r1, r5
 8018db0:	4638      	mov	r0, r7
 8018db2:	f7ff fd89 	bl	80188c8 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>
 8018db6:	e760      	b.n	8018c7a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 8018db8:	4640      	mov	r0, r8
 8018dba:	f7f9 ffef 	bl	8012d9c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 8018dbe:	b948      	cbnz	r0, 8018dd4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x204>
 8018dc0:	683b      	ldr	r3, [r7, #0]
 8018dc2:	e9cd 6000 	strd	r6, r0, [sp]
 8018dc6:	aa02      	add	r2, sp, #8
 8018dc8:	68de      	ldr	r6, [r3, #12]
 8018dca:	4629      	mov	r1, r5
 8018dcc:	4623      	mov	r3, r4
 8018dce:	4638      	mov	r0, r7
 8018dd0:	47b0      	blx	r6
 8018dd2:	e752      	b.n	8018c7a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 8018dd4:	f10d 0918 	add.w	r9, sp, #24
 8018dd8:	4641      	mov	r1, r8
 8018dda:	4648      	mov	r0, r9
 8018ddc:	f7f9 ff8c 	bl	8012cf8 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8018de0:	e899 0003 	ldmia.w	r9, {r0, r1}
 8018de4:	f10d 0810 	add.w	r8, sp, #16
 8018de8:	e888 0003 	stmia.w	r8, {r0, r1}
 8018dec:	4640      	mov	r0, r8
 8018dee:	4621      	mov	r1, r4
 8018df0:	f7f2 f8e2 	bl	800afb8 <_ZN8touchgfx4RectaNERKS0_>
 8018df4:	4640      	mov	r0, r8
 8018df6:	f7f2 f922 	bl	800b03e <_ZNK8touchgfx4Rect7isEmptyEv>
 8018dfa:	b138      	cbz	r0, 8018e0c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x23c>
 8018dfc:	9600      	str	r6, [sp, #0]
 8018dfe:	4623      	mov	r3, r4
 8018e00:	aa02      	add	r2, sp, #8
 8018e02:	4651      	mov	r1, sl
 8018e04:	4628      	mov	r0, r5
 8018e06:	f7ff fdbd 	bl	8018984 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8018e0a:	e736      	b.n	8018c7a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 8018e0c:	683b      	ldr	r3, [r7, #0]
 8018e0e:	e9cd 6000 	strd	r6, r0, [sp]
 8018e12:	aa02      	add	r2, sp, #8
 8018e14:	f8d3 b00c 	ldr.w	fp, [r3, #12]
 8018e18:	4629      	mov	r1, r5
 8018e1a:	4643      	mov	r3, r8
 8018e1c:	4638      	mov	r0, r7
 8018e1e:	47d8      	blx	fp
 8018e20:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8018e24:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 8018e28:	4293      	cmp	r3, r2
 8018e2a:	dd13      	ble.n	8018e54 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x284>
 8018e2c:	f9b4 0000 	ldrsh.w	r0, [r4]
 8018e30:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8018e34:	f8ad 0018 	strh.w	r0, [sp, #24]
 8018e38:	1a9b      	subs	r3, r3, r2
 8018e3a:	f8ad 201a 	strh.w	r2, [sp, #26]
 8018e3e:	f8ad 101c 	strh.w	r1, [sp, #28]
 8018e42:	f8ad 301e 	strh.w	r3, [sp, #30]
 8018e46:	9600      	str	r6, [sp, #0]
 8018e48:	464b      	mov	r3, r9
 8018e4a:	aa02      	add	r2, sp, #8
 8018e4c:	4651      	mov	r1, sl
 8018e4e:	4628      	mov	r0, r5
 8018e50:	f7ff fd98 	bl	8018984 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8018e54:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 8018e58:	f9b4 2000 	ldrsh.w	r2, [r4]
 8018e5c:	4293      	cmp	r3, r2
 8018e5e:	dd13      	ble.n	8018e88 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2b8>
 8018e60:	1a9b      	subs	r3, r3, r2
 8018e62:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 8018e66:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 8018e6a:	f8ad 2018 	strh.w	r2, [sp, #24]
 8018e6e:	f8ad 001a 	strh.w	r0, [sp, #26]
 8018e72:	f8ad 301c 	strh.w	r3, [sp, #28]
 8018e76:	f8ad 101e 	strh.w	r1, [sp, #30]
 8018e7a:	9600      	str	r6, [sp, #0]
 8018e7c:	464b      	mov	r3, r9
 8018e7e:	aa02      	add	r2, sp, #8
 8018e80:	4651      	mov	r1, sl
 8018e82:	4628      	mov	r0, r5
 8018e84:	f7ff fd7e 	bl	8018984 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8018e88:	88a2      	ldrh	r2, [r4, #4]
 8018e8a:	8823      	ldrh	r3, [r4, #0]
 8018e8c:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 8018e90:	4413      	add	r3, r2
 8018e92:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8018e96:	440a      	add	r2, r1
 8018e98:	b29b      	uxth	r3, r3
 8018e9a:	b292      	uxth	r2, r2
 8018e9c:	b211      	sxth	r1, r2
 8018e9e:	b218      	sxth	r0, r3
 8018ea0:	4288      	cmp	r0, r1
 8018ea2:	dd13      	ble.n	8018ecc <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2fc>
 8018ea4:	1a9b      	subs	r3, r3, r2
 8018ea6:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 8018eaa:	f9bd 7012 	ldrsh.w	r7, [sp, #18]
 8018eae:	f8ad 1018 	strh.w	r1, [sp, #24]
 8018eb2:	f8ad 301c 	strh.w	r3, [sp, #28]
 8018eb6:	f8ad 001e 	strh.w	r0, [sp, #30]
 8018eba:	9600      	str	r6, [sp, #0]
 8018ebc:	464b      	mov	r3, r9
 8018ebe:	aa02      	add	r2, sp, #8
 8018ec0:	4651      	mov	r1, sl
 8018ec2:	4628      	mov	r0, r5
 8018ec4:	f8ad 701a 	strh.w	r7, [sp, #26]
 8018ec8:	f7ff fd5c 	bl	8018984 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8018ecc:	88e2      	ldrh	r2, [r4, #6]
 8018ece:	8863      	ldrh	r3, [r4, #2]
 8018ed0:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 8018ed4:	4413      	add	r3, r2
 8018ed6:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8018eda:	440a      	add	r2, r1
 8018edc:	b29b      	uxth	r3, r3
 8018ede:	b292      	uxth	r2, r2
 8018ee0:	b211      	sxth	r1, r2
 8018ee2:	b218      	sxth	r0, r3
 8018ee4:	4288      	cmp	r0, r1
 8018ee6:	f77f aec8 	ble.w	8018c7a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 8018eea:	f9b4 7000 	ldrsh.w	r7, [r4]
 8018eee:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8018ef2:	f8ad 7018 	strh.w	r7, [sp, #24]
 8018ef6:	1a9b      	subs	r3, r3, r2
 8018ef8:	f8ad 301e 	strh.w	r3, [sp, #30]
 8018efc:	f8ad 101a 	strh.w	r1, [sp, #26]
 8018f00:	f8ad 001c 	strh.w	r0, [sp, #28]
 8018f04:	9600      	str	r6, [sp, #0]
 8018f06:	464b      	mov	r3, r9
 8018f08:	e77a      	b.n	8018e00 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x230>
 8018f0a:	f8d7 0088 	ldr.w	r0, [r7, #136]	@ 0x88
 8018f0e:	2800      	cmp	r0, #0
 8018f10:	f43f aeb3 	beq.w	8018c7a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 8018f14:	6803      	ldr	r3, [r0, #0]
 8018f16:	9600      	str	r6, [sp, #0]
 8018f18:	68de      	ldr	r6, [r3, #12]
 8018f1a:	4623      	mov	r3, r4
 8018f1c:	aa02      	add	r2, sp, #8
 8018f1e:	4629      	mov	r1, r5
 8018f20:	47b0      	blx	r6
 8018f22:	e6aa      	b.n	8018c7a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 8018f24:	f8d7 0088 	ldr.w	r0, [r7, #136]	@ 0x88
 8018f28:	2800      	cmp	r0, #0
 8018f2a:	f43f aea6 	beq.w	8018c7a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 8018f2e:	6803      	ldr	r3, [r0, #0]
 8018f30:	9600      	str	r6, [sp, #0]
 8018f32:	689e      	ldr	r6, [r3, #8]
 8018f34:	e7f1      	b.n	8018f1a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x34a>
 8018f36:	bf00      	nop
 8018f38:	200133d4 	.word	0x200133d4

08018f3c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>:
 8018f3c:	b180      	cbz	r0, 8018f60 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x24>
 8018f3e:	2903      	cmp	r1, #3
 8018f40:	d81c      	bhi.n	8018f7c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 8018f42:	e8df f001 	tbb	[pc, r1]
 8018f46:	1d02      	.short	0x1d02
 8018f48:	1f08      	.short	0x1f08
 8018f4a:	4b10      	ldr	r3, [pc, #64]	@ (8018f8c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 8018f4c:	8818      	ldrh	r0, [r3, #0]
 8018f4e:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8018f52:	4240      	negs	r0, r0
 8018f54:	4770      	bx	lr
 8018f56:	4b0d      	ldr	r3, [pc, #52]	@ (8018f8c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 8018f58:	8818      	ldrh	r0, [r3, #0]
 8018f5a:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8018f5e:	4770      	bx	lr
 8018f60:	2903      	cmp	r1, #3
 8018f62:	d80b      	bhi.n	8018f7c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 8018f64:	a301      	add	r3, pc, #4	@ (adr r3, 8018f6c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x30>)
 8018f66:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 8018f6a:	bf00      	nop
 8018f6c:	08018f81 	.word	0x08018f81
 8018f70:	08018f57 	.word	0x08018f57
 8018f74:	08018f85 	.word	0x08018f85
 8018f78:	08018f4b 	.word	0x08018f4b
 8018f7c:	2000      	movs	r0, #0
 8018f7e:	4770      	bx	lr
 8018f80:	2001      	movs	r0, #1
 8018f82:	4770      	bx	lr
 8018f84:	f04f 30ff 	mov.w	r0, #4294967295
 8018f88:	4770      	bx	lr
 8018f8a:	bf00      	nop
 8018f8c:	200133cc 	.word	0x200133cc

08018f90 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>:
 8018f90:	b180      	cbz	r0, 8018fb4 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x24>
 8018f92:	2903      	cmp	r1, #3
 8018f94:	d81c      	bhi.n	8018fd0 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 8018f96:	e8df f001 	tbb	[pc, r1]
 8018f9a:	021d      	.short	0x021d
 8018f9c:	071f      	.short	0x071f
 8018f9e:	4b10      	ldr	r3, [pc, #64]	@ (8018fe0 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 8018fa0:	8818      	ldrh	r0, [r3, #0]
 8018fa2:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8018fa6:	4770      	bx	lr
 8018fa8:	4b0d      	ldr	r3, [pc, #52]	@ (8018fe0 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 8018faa:	8818      	ldrh	r0, [r3, #0]
 8018fac:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8018fb0:	4240      	negs	r0, r0
 8018fb2:	4770      	bx	lr
 8018fb4:	2903      	cmp	r1, #3
 8018fb6:	d80b      	bhi.n	8018fd0 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 8018fb8:	a301      	add	r3, pc, #4	@ (adr r3, 8018fc0 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x30>)
 8018fba:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 8018fbe:	bf00      	nop
 8018fc0:	08018f9f 	.word	0x08018f9f
 8018fc4:	08018fd9 	.word	0x08018fd9
 8018fc8:	08018fa9 	.word	0x08018fa9
 8018fcc:	08018fd5 	.word	0x08018fd5
 8018fd0:	2000      	movs	r0, #0
 8018fd2:	4770      	bx	lr
 8018fd4:	2001      	movs	r0, #1
 8018fd6:	4770      	bx	lr
 8018fd8:	f04f 30ff 	mov.w	r0, #4294967295
 8018fdc:	4770      	bx	lr
 8018fde:	bf00      	nop
 8018fe0:	200133cc 	.word	0x200133cc

08018fe4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE>:
 8018fe4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018fe8:	b099      	sub	sp, #100	@ 0x64
 8018fea:	910d      	str	r1, [sp, #52]	@ 0x34
 8018fec:	a914      	add	r1, sp, #80	@ 0x50
 8018fee:	e881 000c 	stmia.w	r1, {r2, r3}
 8018ff2:	f9bd 308c 	ldrsh.w	r3, [sp, #140]	@ 0x8c
 8018ff6:	930b      	str	r3, [sp, #44]	@ 0x2c
 8018ff8:	e9dd 2126 	ldrd	r2, r1, [sp, #152]	@ 0x98
 8018ffc:	f89d 30a4 	ldrb.w	r3, [sp, #164]	@ 0xa4
 8019000:	9310      	str	r3, [sp, #64]	@ 0x40
 8019002:	f89d 30ac 	ldrb.w	r3, [sp, #172]	@ 0xac
 8019006:	9308      	str	r3, [sp, #32]
 8019008:	f89d 30b0 	ldrb.w	r3, [sp, #176]	@ 0xb0
 801900c:	9309      	str	r3, [sp, #36]	@ 0x24
 801900e:	7b4b      	ldrb	r3, [r1, #13]
 8019010:	f9bd 4088 	ldrsh.w	r4, [sp, #136]	@ 0x88
 8019014:	f8bd 5090 	ldrh.w	r5, [sp, #144]	@ 0x90
 8019018:	f8bd 6094 	ldrh.w	r6, [sp, #148]	@ 0x94
 801901c:	9f28      	ldr	r7, [sp, #160]	@ 0xa0
 801901e:	f8dd 90a8 	ldr.w	r9, [sp, #168]	@ 0xa8
 8019022:	f89d a0b4 	ldrb.w	sl, [sp, #180]	@ 0xb4
 8019026:	ea4f 1843 	mov.w	r8, r3, lsl #5
 801902a:	f408 7080 	and.w	r0, r8, #256	@ 0x100
 801902e:	f891 8006 	ldrb.w	r8, [r1, #6]
 8019032:	ea58 0800 	orrs.w	r8, r8, r0
 8019036:	f000 81ce 	beq.w	80193d6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f2>
 801903a:	011b      	lsls	r3, r3, #4
 801903c:	79c8      	ldrb	r0, [r1, #7]
 801903e:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8019042:	4303      	orrs	r3, r0
 8019044:	930c      	str	r3, [sp, #48]	@ 0x30
 8019046:	f000 81c6 	beq.w	80193d6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f2>
 801904a:	f991 3009 	ldrsb.w	r3, [r1, #9]
 801904e:	b29b      	uxth	r3, r3
 8019050:	2d00      	cmp	r5, #0
 8019052:	f000 812c 	beq.w	80192ae <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2ca>
 8019056:	1aed      	subs	r5, r5, r3
 8019058:	b2ad      	uxth	r5, r5
 801905a:	0429      	lsls	r1, r5, #16
 801905c:	d502      	bpl.n	8019064 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x80>
 801905e:	1b64      	subs	r4, r4, r5
 8019060:	b224      	sxth	r4, r4
 8019062:	2500      	movs	r5, #0
 8019064:	f9b2 0000 	ldrsh.w	r0, [r2]
 8019068:	8891      	ldrh	r1, [r2, #4]
 801906a:	4284      	cmp	r4, r0
 801906c:	b283      	uxth	r3, r0
 801906e:	bfb8      	it	lt
 8019070:	18ed      	addlt	r5, r5, r3
 8019072:	440b      	add	r3, r1
 8019074:	b21b      	sxth	r3, r3
 8019076:	930a      	str	r3, [sp, #40]	@ 0x28
 8019078:	88d3      	ldrh	r3, [r2, #6]
 801907a:	8852      	ldrh	r2, [r2, #2]
 801907c:	4413      	add	r3, r2
 801907e:	b21b      	sxth	r3, r3
 8019080:	930f      	str	r3, [sp, #60]	@ 0x3c
 8019082:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8019084:	930e      	str	r3, [sp, #56]	@ 0x38
 8019086:	bfb8      	it	lt
 8019088:	1b2c      	sublt	r4, r5, r4
 801908a:	4bb5      	ldr	r3, [pc, #724]	@ (8019360 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x37c>)
 801908c:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 801908e:	f893 b000 	ldrb.w	fp, [r3]
 8019092:	bfbc      	itt	lt
 8019094:	b2a5      	uxthlt	r5, r4
 8019096:	4604      	movlt	r4, r0
 8019098:	4653      	mov	r3, sl
 801909a:	4621      	mov	r1, r4
 801909c:	a814      	add	r0, sp, #80	@ 0x50
 801909e:	f7f6 f915 	bl	800f2cc <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>
 80190a2:	4621      	mov	r1, r4
 80190a4:	f8ad 005c 	strh.w	r0, [sp, #92]	@ 0x5c
 80190a8:	4653      	mov	r3, sl
 80190aa:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 80190ac:	a814      	add	r0, sp, #80	@ 0x50
 80190ae:	f7f6 f92a 	bl	800f306 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>
 80190b2:	a918      	add	r1, sp, #96	@ 0x60
 80190b4:	f821 0d02 	strh.w	r0, [r1, #-2]!
 80190b8:	a817      	add	r0, sp, #92	@ 0x5c
 80190ba:	f7f6 fa51 	bl	800f560 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>
 80190be:	f1ba 0f00 	cmp.w	sl, #0
 80190c2:	f040 80f7 	bne.w	80192b4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2d0>
 80190c6:	f1bb 0f01 	cmp.w	fp, #1
 80190ca:	f040 80fb 	bne.w	80192c4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2e0>
 80190ce:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80190d0:	2b00      	cmp	r3, #0
 80190d2:	f040 81a8 	bne.w	8019426 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x442>
 80190d6:	fa1f f288 	uxth.w	r2, r8
 80190da:	b905      	cbnz	r5, 80190de <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xfa>
 80190dc:	b15e      	cbz	r6, 80190f6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x112>
 80190de:	9808      	ldr	r0, [sp, #32]
 80190e0:	fb06 5302 	mla	r3, r6, r2, r5
 80190e4:	4343      	muls	r3, r0
 80190e6:	4631      	mov	r1, r6
 80190e8:	eb07 07d3 	add.w	r7, r7, r3, lsr #3
 80190ec:	f003 0607 	and.w	r6, r3, #7
 80190f0:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80190f2:	1a5b      	subs	r3, r3, r1
 80190f4:	930e      	str	r3, [sp, #56]	@ 0x38
 80190f6:	f10b 31ff 	add.w	r1, fp, #4294967295
 80190fa:	424b      	negs	r3, r1
 80190fc:	414b      	adcs	r3, r1
 80190fe:	4618      	mov	r0, r3
 8019100:	4651      	mov	r1, sl
 8019102:	930c      	str	r3, [sp, #48]	@ 0x30
 8019104:	f7ff ff1a 	bl	8018f3c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>
 8019108:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801910a:	4683      	mov	fp, r0
 801910c:	4618      	mov	r0, r3
 801910e:	f7ff ff3f 	bl	8018f90 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>
 8019112:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 8019114:	4603      	mov	r3, r0
 8019116:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 8019118:	eba1 0a00 	sub.w	sl, r1, r0
 801911c:	990e      	ldr	r1, [sp, #56]	@ 0x38
 801911e:	458a      	cmp	sl, r1
 8019120:	bfa8      	it	ge
 8019122:	468a      	movge	sl, r1
 8019124:	f1ba 0f00 	cmp.w	sl, #0
 8019128:	f340 8155 	ble.w	80193d6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f2>
 801912c:	990a      	ldr	r1, [sp, #40]	@ 0x28
 801912e:	1b64      	subs	r4, r4, r5
 8019130:	1b0c      	subs	r4, r1, r4
 8019132:	4544      	cmp	r4, r8
 8019134:	bfd4      	ite	le
 8019136:	ebc5 0504 	rsble	r5, r5, r4
 801913a:	ebc5 0508 	rsbgt	r5, r5, r8
 801913e:	2d00      	cmp	r5, #0
 8019140:	f340 8149 	ble.w	80193d6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f2>
 8019144:	9908      	ldr	r1, [sp, #32]
 8019146:	1b52      	subs	r2, r2, r5
 8019148:	434a      	muls	r2, r1
 801914a:	920e      	str	r2, [sp, #56]	@ 0x38
 801914c:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 801914e:	2a00      	cmp	r2, #0
 8019150:	f040 8175 	bne.w	801943e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x45a>
 8019154:	4a83      	ldr	r2, [pc, #524]	@ (8019364 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x380>)
 8019156:	930a      	str	r3, [sp, #40]	@ 0x28
 8019158:	6810      	ldr	r0, [r2, #0]
 801915a:	6802      	ldr	r2, [r0, #0]
 801915c:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
 801915e:	4790      	blx	r2
 8019160:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8019162:	9908      	ldr	r1, [sp, #32]
 8019164:	2201      	movs	r2, #1
 8019166:	408a      	lsls	r2, r1
 8019168:	3a01      	subs	r2, #1
 801916a:	497f      	ldr	r1, [pc, #508]	@ (8019368 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x384>)
 801916c:	b2d2      	uxtb	r2, r2
 801916e:	880c      	ldrh	r4, [r1, #0]
 8019170:	920c      	str	r2, [sp, #48]	@ 0x30
 8019172:	f9bd 105c 	ldrsh.w	r1, [sp, #92]	@ 0x5c
 8019176:	f9bd 205e 	ldrsh.w	r2, [sp, #94]	@ 0x5e
 801917a:	fb04 1202 	mla	r2, r4, r2, r1
 801917e:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 8019182:	ea4f 2419 	mov.w	r4, r9, lsr #8
 8019186:	920a      	str	r2, [sp, #40]	@ 0x28
 8019188:	f3c9 4207 	ubfx	r2, r9, #16, #8
 801918c:	9212      	str	r2, [sp, #72]	@ 0x48
 801918e:	b2e2      	uxtb	r2, r4
 8019190:	9211      	str	r2, [sp, #68]	@ 0x44
 8019192:	fa5f f289 	uxtb.w	r2, r9
 8019196:	9210      	str	r2, [sp, #64]	@ 0x40
 8019198:	4a74      	ldr	r2, [pc, #464]	@ (801936c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x388>)
 801919a:	ea4f 1159 	mov.w	r1, r9, lsr #5
 801919e:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 80191a2:	4022      	ands	r2, r4
 80191a4:	430a      	orrs	r2, r1
 80191a6:	f3c9 09c4 	ubfx	r9, r9, #3, #5
 80191aa:	ea42 0209 	orr.w	r2, r2, r9
 80191ae:	ea4f 014b 	mov.w	r1, fp, lsl #1
 80191b2:	b292      	uxth	r2, r2
 80191b4:	fb05 3b1b 	mls	fp, r5, fp, r3
 80191b8:	920f      	str	r2, [sp, #60]	@ 0x3c
 80191ba:	460b      	mov	r3, r1
 80191bc:	783a      	ldrb	r2, [r7, #0]
 80191be:	910b      	str	r1, [sp, #44]	@ 0x2c
 80191c0:	436b      	muls	r3, r5
 80191c2:	4132      	asrs	r2, r6
 80191c4:	eb03 034b 	add.w	r3, r3, fp, lsl #1
 80191c8:	b2d2      	uxtb	r2, r2
 80191ca:	9313      	str	r3, [sp, #76]	@ 0x4c
 80191cc:	f11a 3aff 	adds.w	sl, sl, #4294967295
 80191d0:	f0c0 8149 	bcc.w	8019466 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x482>
 80191d4:	f8dd 8028 	ldr.w	r8, [sp, #40]	@ 0x28
 80191d8:	46a9      	mov	r9, r5
 80191da:	f119 39ff 	adds.w	r9, r9, #4294967295
 80191de:	f0c0 8132 	bcc.w	8019446 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x462>
 80191e2:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80191e4:	4013      	ands	r3, r2
 80191e6:	d054      	beq.n	8019292 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2ae>
 80191e8:	20ff      	movs	r0, #255	@ 0xff
 80191ea:	990c      	ldr	r1, [sp, #48]	@ 0x30
 80191ec:	fb90 f1f1 	sdiv	r1, r0, r1
 80191f0:	434b      	muls	r3, r1
 80191f2:	2bfe      	cmp	r3, #254	@ 0xfe
 80191f4:	dd03      	ble.n	80191fe <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x21a>
 80191f6:	9909      	ldr	r1, [sp, #36]	@ 0x24
 80191f8:	4281      	cmp	r1, r0
 80191fa:	f000 8122 	beq.w	8019442 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x45e>
 80191fe:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8019200:	f8b8 4000 	ldrh.w	r4, [r8]
 8019204:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8019206:	fb11 f303 	smulbb	r3, r1, r3
 801920a:	b29b      	uxth	r3, r3
 801920c:	1c59      	adds	r1, r3, #1
 801920e:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8019212:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8019216:	fa1f fe83 	uxth.w	lr, r3
 801921a:	1221      	asrs	r1, r4, #8
 801921c:	fb10 fb0e 	smulbb	fp, r0, lr
 8019220:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 8019224:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8019226:	43db      	mvns	r3, r3
 8019228:	b2db      	uxtb	r3, r3
 801922a:	ea41 1151 	orr.w	r1, r1, r1, lsr #5
 801922e:	fb01 b103 	mla	r1, r1, r3, fp
 8019232:	ea4f 0ce4 	mov.w	ip, r4, asr #3
 8019236:	fb10 fb0e 	smulbb	fp, r0, lr
 801923a:	00e4      	lsls	r4, r4, #3
 801923c:	9810      	ldr	r0, [sp, #64]	@ 0x40
 801923e:	b2e4      	uxtb	r4, r4
 8019240:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8019244:	fb10 fe0e 	smulbb	lr, r0, lr
 8019248:	fb04 e403 	mla	r4, r4, r3, lr
 801924c:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
 8019250:	b289      	uxth	r1, r1
 8019252:	b2a4      	uxth	r4, r4
 8019254:	ea4c 1c9c 	orr.w	ip, ip, ip, lsr #6
 8019258:	fb0c bc03 	mla	ip, ip, r3, fp
 801925c:	1c4b      	adds	r3, r1, #1
 801925e:	f104 0b01 	add.w	fp, r4, #1
 8019262:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8019266:	eb0b 2b14 	add.w	fp, fp, r4, lsr #8
 801926a:	fa1f fc8c 	uxth.w	ip, ip
 801926e:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
 8019272:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
 8019276:	ea4b 0101 	orr.w	r1, fp, r1
 801927a:	f10c 0b01 	add.w	fp, ip, #1
 801927e:	eb0b 2b1c 	add.w	fp, fp, ip, lsr #8
 8019282:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 8019286:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
 801928a:	ea41 010b 	orr.w	r1, r1, fp
 801928e:	f8a8 1000 	strh.w	r1, [r8]
 8019292:	9b08      	ldr	r3, [sp, #32]
 8019294:	441e      	add	r6, r3
 8019296:	b2b6      	uxth	r6, r6
 8019298:	2e07      	cmp	r6, #7
 801929a:	bf98      	it	ls
 801929c:	411a      	asrls	r2, r3
 801929e:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 80192a0:	bf89      	itett	hi
 80192a2:	787a      	ldrbhi	r2, [r7, #1]
 80192a4:	b2d2      	uxtbls	r2, r2
 80192a6:	3701      	addhi	r7, #1
 80192a8:	2600      	movhi	r6, #0
 80192aa:	4498      	add	r8, r3
 80192ac:	e795      	b.n	80191da <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1f6>
 80192ae:	441c      	add	r4, r3
 80192b0:	b224      	sxth	r4, r4
 80192b2:	e6d7      	b.n	8019064 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x80>
 80192b4:	f1ba 0f01 	cmp.w	sl, #1
 80192b8:	f47f af09 	bne.w	80190ce <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xea>
 80192bc:	f1bb 0f01 	cmp.w	fp, #1
 80192c0:	f47f af05 	bne.w	80190ce <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xea>
 80192c4:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 80192c6:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 80192c8:	1a99      	subs	r1, r3, r2
 80192ca:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80192cc:	1b9b      	subs	r3, r3, r6
 80192ce:	4299      	cmp	r1, r3
 80192d0:	bfa8      	it	ge
 80192d2:	4619      	movge	r1, r3
 80192d4:	2900      	cmp	r1, #0
 80192d6:	9112      	str	r1, [sp, #72]	@ 0x48
 80192d8:	dd7d      	ble.n	80193d6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f2>
 80192da:	4a22      	ldr	r2, [pc, #136]	@ (8019364 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x380>)
 80192dc:	9211      	str	r2, [sp, #68]	@ 0x44
 80192de:	6810      	ldr	r0, [r2, #0]
 80192e0:	6803      	ldr	r3, [r0, #0]
 80192e2:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80192e4:	4798      	blx	r3
 80192e6:	f410 7380 	ands.w	r3, r0, #256	@ 0x100
 80192ea:	9912      	ldr	r1, [sp, #72]	@ 0x48
 80192ec:	d006      	beq.n	80192fc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x318>
 80192ee:	9b08      	ldr	r3, [sp, #32]
 80192f0:	2b04      	cmp	r3, #4
 80192f2:	d133      	bne.n	801935c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x378>
 80192f4:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80192f6:	3300      	adds	r3, #0
 80192f8:	bf18      	it	ne
 80192fa:	2301      	movne	r3, #1
 80192fc:	0582      	lsls	r2, r0, #22
 80192fe:	fa1f fc88 	uxth.w	ip, r8
 8019302:	f140 80b9 	bpl.w	8019478 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x494>
 8019306:	9808      	ldr	r0, [sp, #32]
 8019308:	2808      	cmp	r0, #8
 801930a:	f040 80b5 	bne.w	8019478 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x494>
 801930e:	2b00      	cmp	r3, #0
 8019310:	d064      	beq.n	80193dc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f8>
 8019312:	f10c 0c01 	add.w	ip, ip, #1
 8019316:	f02c 0301 	bic.w	r3, ip, #1
 801931a:	b29b      	uxth	r3, r3
 801931c:	bb45      	cbnz	r5, 8019370 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x38c>
 801931e:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8019320:	eb08 0004 	add.w	r0, r8, r4
 8019324:	4290      	cmp	r0, r2
 8019326:	dc23      	bgt.n	8019370 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x38c>
 8019328:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 801932a:	f8bd e05e 	ldrh.w	lr, [sp, #94]	@ 0x5e
 801932e:	6810      	ldr	r0, [r2, #0]
 8019330:	f8bd 205c 	ldrh.w	r2, [sp, #92]	@ 0x5c
 8019334:	6804      	ldr	r4, [r0, #0]
 8019336:	9506      	str	r5, [sp, #24]
 8019338:	f44f 7580 	mov.w	r5, #256	@ 0x100
 801933c:	9505      	str	r5, [sp, #20]
 801933e:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 8019340:	9302      	str	r3, [sp, #8]
 8019342:	b289      	uxth	r1, r1
 8019344:	e9cd 3100 	strd	r3, r1, [sp]
 8019348:	e9cd 9503 	strd	r9, r5, [sp, #12]
 801934c:	ea4f 0c5c 	mov.w	ip, ip, lsr #1
 8019350:	6da4      	ldr	r4, [r4, #88]	@ 0x58
 8019352:	4673      	mov	r3, lr
 8019354:	fb06 710c 	mla	r1, r6, ip, r7
 8019358:	47a0      	blx	r4
 801935a:	e03c      	b.n	80193d6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f2>
 801935c:	2300      	movs	r3, #0
 801935e:	e7cd      	b.n	80192fc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x318>
 8019360:	200133ca 	.word	0x200133ca
 8019364:	200133d4 	.word	0x200133d4
 8019368:	200133cc 	.word	0x200133cc
 801936c:	00fff800 	.word	0x00fff800
 8019370:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8019372:	eba4 0e05 	sub.w	lr, r4, r5
 8019376:	eba2 0e0e 	sub.w	lr, r2, lr
 801937a:	45c6      	cmp	lr, r8
 801937c:	bfd4      	ite	le
 801937e:	ebc5 0e0e 	rsble	lr, r5, lr
 8019382:	ebc5 0e08 	rsbgt	lr, r5, r8
 8019386:	f1be 0f00 	cmp.w	lr, #0
 801938a:	d024      	beq.n	80193d6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f2>
 801938c:	07e8      	lsls	r0, r5, #31
 801938e:	f53f ae9e 	bmi.w	80190ce <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xea>
 8019392:	f01e 0001 	ands.w	r0, lr, #1
 8019396:	f47f ae9a 	bne.w	80190ce <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xea>
 801939a:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 801939c:	f8bd 805e 	ldrh.w	r8, [sp, #94]	@ 0x5e
 80193a0:	6814      	ldr	r4, [r2, #0]
 80193a2:	f8bd 205c 	ldrh.w	r2, [sp, #92]	@ 0x5c
 80193a6:	086d      	lsrs	r5, r5, #1
 80193a8:	ea4f 0c5c 	mov.w	ip, ip, lsr #1
 80193ac:	fb06 560c 	mla	r6, r6, ip, r5
 80193b0:	6825      	ldr	r5, [r4, #0]
 80193b2:	9006      	str	r0, [sp, #24]
 80193b4:	f44f 7080 	mov.w	r0, #256	@ 0x100
 80193b8:	9005      	str	r0, [sp, #20]
 80193ba:	9809      	ldr	r0, [sp, #36]	@ 0x24
 80193bc:	9302      	str	r3, [sp, #8]
 80193be:	e9cd 9003 	strd	r9, r0, [sp, #12]
 80193c2:	b289      	uxth	r1, r1
 80193c4:	fa1f f38e 	uxth.w	r3, lr
 80193c8:	9101      	str	r1, [sp, #4]
 80193ca:	9300      	str	r3, [sp, #0]
 80193cc:	6dad      	ldr	r5, [r5, #88]	@ 0x58
 80193ce:	4643      	mov	r3, r8
 80193d0:	19b9      	adds	r1, r7, r6
 80193d2:	4620      	mov	r0, r4
 80193d4:	47a8      	blx	r5
 80193d6:	b019      	add	sp, #100	@ 0x64
 80193d8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80193dc:	4a28      	ldr	r2, [pc, #160]	@ (8019480 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x49c>)
 80193de:	f8bd e05e 	ldrh.w	lr, [sp, #94]	@ 0x5e
 80193e2:	6810      	ldr	r0, [r2, #0]
 80193e4:	f8bd 205c 	ldrh.w	r2, [sp, #92]	@ 0x5c
 80193e8:	f8d0 a000 	ldr.w	sl, [r0]
 80193ec:	9306      	str	r3, [sp, #24]
 80193ee:	f44f 7300 	mov.w	r3, #512	@ 0x200
 80193f2:	9305      	str	r3, [sp, #20]
 80193f4:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80193f6:	f8cd c008 	str.w	ip, [sp, #8]
 80193fa:	e9cd 9303 	strd	r9, r3, [sp, #12]
 80193fe:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8019400:	1b64      	subs	r4, r4, r5
 8019402:	1b1c      	subs	r4, r3, r4
 8019404:	fb06 5608 	mla	r6, r6, r8, r5
 8019408:	4544      	cmp	r4, r8
 801940a:	bfd4      	ite	le
 801940c:	ebc5 0504 	rsble	r5, r5, r4
 8019410:	ebc5 0508 	rsbgt	r5, r5, r8
 8019414:	b289      	uxth	r1, r1
 8019416:	b2ad      	uxth	r5, r5
 8019418:	9101      	str	r1, [sp, #4]
 801941a:	9500      	str	r5, [sp, #0]
 801941c:	f8da 4058 	ldr.w	r4, [sl, #88]	@ 0x58
 8019420:	4673      	mov	r3, lr
 8019422:	19b9      	adds	r1, r7, r6
 8019424:	e798      	b.n	8019358 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x374>
 8019426:	2208      	movs	r2, #8
 8019428:	9b08      	ldr	r3, [sp, #32]
 801942a:	fb92 f3f3 	sdiv	r3, r2, r3
 801942e:	1e5a      	subs	r2, r3, #1
 8019430:	4442      	add	r2, r8
 8019432:	fb92 f2f3 	sdiv	r2, r2, r3
 8019436:	fb12 f203 	smulbb	r2, r2, r3
 801943a:	b292      	uxth	r2, r2
 801943c:	e64d      	b.n	80190da <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf6>
 801943e:	980d      	ldr	r0, [sp, #52]	@ 0x34
 8019440:	e68f      	b.n	8019162 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x17e>
 8019442:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 8019444:	e723      	b.n	801928e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2aa>
 8019446:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8019448:	b143      	cbz	r3, 801945c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x478>
 801944a:	441e      	add	r6, r3
 801944c:	b2b6      	uxth	r6, r6
 801944e:	eb07 07d6 	add.w	r7, r7, r6, lsr #3
 8019452:	f006 0607 	and.w	r6, r6, #7
 8019456:	783a      	ldrb	r2, [r7, #0]
 8019458:	4132      	asrs	r2, r6
 801945a:	b2d2      	uxtb	r2, r2
 801945c:	990a      	ldr	r1, [sp, #40]	@ 0x28
 801945e:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 8019460:	4419      	add	r1, r3
 8019462:	910a      	str	r1, [sp, #40]	@ 0x28
 8019464:	e6b2      	b.n	80191cc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1e8>
 8019466:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8019468:	2b00      	cmp	r3, #0
 801946a:	d1b4      	bne.n	80193d6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f2>
 801946c:	4b04      	ldr	r3, [pc, #16]	@ (8019480 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x49c>)
 801946e:	6818      	ldr	r0, [r3, #0]
 8019470:	6803      	ldr	r3, [r0, #0]
 8019472:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8019474:	4798      	blx	r3
 8019476:	e7ae      	b.n	80193d6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f2>
 8019478:	2b00      	cmp	r3, #0
 801947a:	f47f af4a 	bne.w	8019312 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x32e>
 801947e:	e626      	b.n	80190ce <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xea>
 8019480:	200133d4 	.word	0x200133d4

08019484 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>:
 8019484:	b538      	push	{r3, r4, r5, lr}
 8019486:	4c15      	ldr	r4, [pc, #84]	@ (80194dc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x58>)
 8019488:	7823      	ldrb	r3, [r4, #0]
 801948a:	f3bf 8f5b 	dmb	ish
 801948e:	07da      	lsls	r2, r3, #31
 8019490:	4605      	mov	r5, r0
 8019492:	d40b      	bmi.n	80194ac <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 8019494:	4620      	mov	r0, r4
 8019496:	f008 fc48 	bl	8021d2a <__cxa_guard_acquire>
 801949a:	b138      	cbz	r0, 80194ac <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 801949c:	4620      	mov	r0, r4
 801949e:	f008 fc50 	bl	8021d42 <__cxa_guard_release>
 80194a2:	4a0f      	ldr	r2, [pc, #60]	@ (80194e0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 80194a4:	490f      	ldr	r1, [pc, #60]	@ (80194e4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x60>)
 80194a6:	4810      	ldr	r0, [pc, #64]	@ (80194e8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 80194a8:	f008 fc38 	bl	8021d1c <__aeabi_atexit>
 80194ac:	4c0f      	ldr	r4, [pc, #60]	@ (80194ec <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x68>)
 80194ae:	7823      	ldrb	r3, [r4, #0]
 80194b0:	f3bf 8f5b 	dmb	ish
 80194b4:	07db      	lsls	r3, r3, #31
 80194b6:	d40b      	bmi.n	80194d0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 80194b8:	4620      	mov	r0, r4
 80194ba:	f008 fc36 	bl	8021d2a <__cxa_guard_acquire>
 80194be:	b138      	cbz	r0, 80194d0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 80194c0:	4620      	mov	r0, r4
 80194c2:	f008 fc3e 	bl	8021d42 <__cxa_guard_release>
 80194c6:	4a06      	ldr	r2, [pc, #24]	@ (80194e0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 80194c8:	4909      	ldr	r1, [pc, #36]	@ (80194f0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x6c>)
 80194ca:	480a      	ldr	r0, [pc, #40]	@ (80194f4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 80194cc:	f008 fc26 	bl	8021d1c <__aeabi_atexit>
 80194d0:	4b05      	ldr	r3, [pc, #20]	@ (80194e8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 80194d2:	616b      	str	r3, [r5, #20]
 80194d4:	4b07      	ldr	r3, [pc, #28]	@ (80194f4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 80194d6:	61ab      	str	r3, [r5, #24]
 80194d8:	bd38      	pop	{r3, r4, r5, pc}
 80194da:	bf00      	nop
 80194dc:	200134b8 	.word	0x200134b8
 80194e0:	20000000 	.word	0x20000000
 80194e4:	0801558d 	.word	0x0801558d
 80194e8:	200001e0 	.word	0x200001e0
 80194ec:	200134bc 	.word	0x200134bc
 80194f0:	0801558b 	.word	0x0801558b
 80194f4:	200001e4 	.word	0x200001e4

080194f8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>:
 80194f8:	b538      	push	{r3, r4, r5, lr}
 80194fa:	4c15      	ldr	r4, [pc, #84]	@ (8019550 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x58>)
 80194fc:	7823      	ldrb	r3, [r4, #0]
 80194fe:	f3bf 8f5b 	dmb	ish
 8019502:	07da      	lsls	r2, r3, #31
 8019504:	4605      	mov	r5, r0
 8019506:	d40b      	bmi.n	8019520 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 8019508:	4620      	mov	r0, r4
 801950a:	f008 fc0e 	bl	8021d2a <__cxa_guard_acquire>
 801950e:	b138      	cbz	r0, 8019520 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 8019510:	4620      	mov	r0, r4
 8019512:	f008 fc16 	bl	8021d42 <__cxa_guard_release>
 8019516:	4a0f      	ldr	r2, [pc, #60]	@ (8019554 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 8019518:	490f      	ldr	r1, [pc, #60]	@ (8019558 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x60>)
 801951a:	4810      	ldr	r0, [pc, #64]	@ (801955c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 801951c:	f008 fbfe 	bl	8021d1c <__aeabi_atexit>
 8019520:	4c0f      	ldr	r4, [pc, #60]	@ (8019560 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x68>)
 8019522:	7823      	ldrb	r3, [r4, #0]
 8019524:	f3bf 8f5b 	dmb	ish
 8019528:	07db      	lsls	r3, r3, #31
 801952a:	d40b      	bmi.n	8019544 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 801952c:	4620      	mov	r0, r4
 801952e:	f008 fbfc 	bl	8021d2a <__cxa_guard_acquire>
 8019532:	b138      	cbz	r0, 8019544 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 8019534:	4620      	mov	r0, r4
 8019536:	f008 fc04 	bl	8021d42 <__cxa_guard_release>
 801953a:	4a06      	ldr	r2, [pc, #24]	@ (8019554 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 801953c:	4909      	ldr	r1, [pc, #36]	@ (8019564 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x6c>)
 801953e:	480a      	ldr	r0, [pc, #40]	@ (8019568 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 8019540:	f008 fbec 	bl	8021d1c <__aeabi_atexit>
 8019544:	4b05      	ldr	r3, [pc, #20]	@ (801955c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 8019546:	60eb      	str	r3, [r5, #12]
 8019548:	4b07      	ldr	r3, [pc, #28]	@ (8019568 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 801954a:	612b      	str	r3, [r5, #16]
 801954c:	bd38      	pop	{r3, r4, r5, pc}
 801954e:	bf00      	nop
 8019550:	20013490 	.word	0x20013490
 8019554:	20000000 	.word	0x20000000
 8019558:	08015591 	.word	0x08015591
 801955c:	200001b8 	.word	0x200001b8
 8019560:	20013494 	.word	0x20013494
 8019564:	0801558f 	.word	0x0801558f
 8019568:	200001bc 	.word	0x200001bc

0801956c <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>:
 801956c:	b510      	push	{r4, lr}
 801956e:	4604      	mov	r4, r0
 8019570:	f7ff ff88 	bl	8019484 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>
 8019574:	4620      	mov	r0, r4
 8019576:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801957a:	f7ff bfbd 	b.w	80194f8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>
	...

08019580 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>:
 8019580:	b538      	push	{r3, r4, r5, lr}
 8019582:	4c15      	ldr	r4, [pc, #84]	@ (80195d8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x58>)
 8019584:	7823      	ldrb	r3, [r4, #0]
 8019586:	f3bf 8f5b 	dmb	ish
 801958a:	07da      	lsls	r2, r3, #31
 801958c:	4605      	mov	r5, r0
 801958e:	d40b      	bmi.n	80195a8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 8019590:	4620      	mov	r0, r4
 8019592:	f008 fbca 	bl	8021d2a <__cxa_guard_acquire>
 8019596:	b138      	cbz	r0, 80195a8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 8019598:	4620      	mov	r0, r4
 801959a:	f008 fbd2 	bl	8021d42 <__cxa_guard_release>
 801959e:	4a0f      	ldr	r2, [pc, #60]	@ (80195dc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 80195a0:	490f      	ldr	r1, [pc, #60]	@ (80195e0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x60>)
 80195a2:	4810      	ldr	r0, [pc, #64]	@ (80195e4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 80195a4:	f008 fbba 	bl	8021d1c <__aeabi_atexit>
 80195a8:	4c0f      	ldr	r4, [pc, #60]	@ (80195e8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x68>)
 80195aa:	7823      	ldrb	r3, [r4, #0]
 80195ac:	f3bf 8f5b 	dmb	ish
 80195b0:	07db      	lsls	r3, r3, #31
 80195b2:	d40b      	bmi.n	80195cc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 80195b4:	4620      	mov	r0, r4
 80195b6:	f008 fbb8 	bl	8021d2a <__cxa_guard_acquire>
 80195ba:	b138      	cbz	r0, 80195cc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 80195bc:	4620      	mov	r0, r4
 80195be:	f008 fbc0 	bl	8021d42 <__cxa_guard_release>
 80195c2:	4a06      	ldr	r2, [pc, #24]	@ (80195dc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 80195c4:	4909      	ldr	r1, [pc, #36]	@ (80195ec <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x6c>)
 80195c6:	480a      	ldr	r0, [pc, #40]	@ (80195f0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 80195c8:	f008 fba8 	bl	8021d1c <__aeabi_atexit>
 80195cc:	4b05      	ldr	r3, [pc, #20]	@ (80195e4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 80195ce:	626b      	str	r3, [r5, #36]	@ 0x24
 80195d0:	4b07      	ldr	r3, [pc, #28]	@ (80195f0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 80195d2:	62ab      	str	r3, [r5, #40]	@ 0x28
 80195d4:	bd38      	pop	{r3, r4, r5, pc}
 80195d6:	bf00      	nop
 80195d8:	200134c0 	.word	0x200134c0
 80195dc:	20000000 	.word	0x20000000
 80195e0:	08015585 	.word	0x08015585
 80195e4:	200001e8 	.word	0x200001e8
 80195e8:	200134c4 	.word	0x200134c4
 80195ec:	08015583 	.word	0x08015583
 80195f0:	200001ec 	.word	0x200001ec

080195f4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>:
 80195f4:	b538      	push	{r3, r4, r5, lr}
 80195f6:	4c15      	ldr	r4, [pc, #84]	@ (801964c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x58>)
 80195f8:	7823      	ldrb	r3, [r4, #0]
 80195fa:	f3bf 8f5b 	dmb	ish
 80195fe:	07da      	lsls	r2, r3, #31
 8019600:	4605      	mov	r5, r0
 8019602:	d40b      	bmi.n	801961c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 8019604:	4620      	mov	r0, r4
 8019606:	f008 fb90 	bl	8021d2a <__cxa_guard_acquire>
 801960a:	b138      	cbz	r0, 801961c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 801960c:	4620      	mov	r0, r4
 801960e:	f008 fb98 	bl	8021d42 <__cxa_guard_release>
 8019612:	4a0f      	ldr	r2, [pc, #60]	@ (8019650 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 8019614:	490f      	ldr	r1, [pc, #60]	@ (8019654 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x60>)
 8019616:	4810      	ldr	r0, [pc, #64]	@ (8019658 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 8019618:	f008 fb80 	bl	8021d1c <__aeabi_atexit>
 801961c:	4c0f      	ldr	r4, [pc, #60]	@ (801965c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x68>)
 801961e:	7823      	ldrb	r3, [r4, #0]
 8019620:	f3bf 8f5b 	dmb	ish
 8019624:	07db      	lsls	r3, r3, #31
 8019626:	d40b      	bmi.n	8019640 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 8019628:	4620      	mov	r0, r4
 801962a:	f008 fb7e 	bl	8021d2a <__cxa_guard_acquire>
 801962e:	b138      	cbz	r0, 8019640 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 8019630:	4620      	mov	r0, r4
 8019632:	f008 fb86 	bl	8021d42 <__cxa_guard_release>
 8019636:	4a06      	ldr	r2, [pc, #24]	@ (8019650 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 8019638:	4909      	ldr	r1, [pc, #36]	@ (8019660 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x6c>)
 801963a:	480a      	ldr	r0, [pc, #40]	@ (8019664 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 801963c:	f008 fb6e 	bl	8021d1c <__aeabi_atexit>
 8019640:	4b05      	ldr	r3, [pc, #20]	@ (8019658 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 8019642:	61eb      	str	r3, [r5, #28]
 8019644:	4b07      	ldr	r3, [pc, #28]	@ (8019664 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 8019646:	622b      	str	r3, [r5, #32]
 8019648:	bd38      	pop	{r3, r4, r5, pc}
 801964a:	bf00      	nop
 801964c:	20013498 	.word	0x20013498
 8019650:	20000000 	.word	0x20000000
 8019654:	08015589 	.word	0x08015589
 8019658:	200001c0 	.word	0x200001c0
 801965c:	2001349c 	.word	0x2001349c
 8019660:	08015587 	.word	0x08015587
 8019664:	200001c4 	.word	0x200001c4

08019668 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>:
 8019668:	b510      	push	{r4, lr}
 801966a:	4604      	mov	r4, r0
 801966c:	f7ff ff88 	bl	8019580 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>
 8019670:	4620      	mov	r0, r4
 8019672:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8019676:	f7ff bfbd 	b.w	80195f4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>
	...

0801967c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>:
 801967c:	b538      	push	{r3, r4, r5, lr}
 801967e:	4c15      	ldr	r4, [pc, #84]	@ (80196d4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x58>)
 8019680:	7823      	ldrb	r3, [r4, #0]
 8019682:	f3bf 8f5b 	dmb	ish
 8019686:	07da      	lsls	r2, r3, #31
 8019688:	4605      	mov	r5, r0
 801968a:	d40b      	bmi.n	80196a4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 801968c:	4620      	mov	r0, r4
 801968e:	f008 fb4c 	bl	8021d2a <__cxa_guard_acquire>
 8019692:	b138      	cbz	r0, 80196a4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 8019694:	4620      	mov	r0, r4
 8019696:	f008 fb54 	bl	8021d42 <__cxa_guard_release>
 801969a:	4a0f      	ldr	r2, [pc, #60]	@ (80196d8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 801969c:	490f      	ldr	r1, [pc, #60]	@ (80196dc <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x60>)
 801969e:	4810      	ldr	r0, [pc, #64]	@ (80196e0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 80196a0:	f008 fb3c 	bl	8021d1c <__aeabi_atexit>
 80196a4:	4c0f      	ldr	r4, [pc, #60]	@ (80196e4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x68>)
 80196a6:	7823      	ldrb	r3, [r4, #0]
 80196a8:	f3bf 8f5b 	dmb	ish
 80196ac:	07db      	lsls	r3, r3, #31
 80196ae:	d40b      	bmi.n	80196c8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 80196b0:	4620      	mov	r0, r4
 80196b2:	f008 fb3a 	bl	8021d2a <__cxa_guard_acquire>
 80196b6:	b138      	cbz	r0, 80196c8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 80196b8:	4620      	mov	r0, r4
 80196ba:	f008 fb42 	bl	8021d42 <__cxa_guard_release>
 80196be:	4a06      	ldr	r2, [pc, #24]	@ (80196d8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 80196c0:	4909      	ldr	r1, [pc, #36]	@ (80196e8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x6c>)
 80196c2:	480a      	ldr	r0, [pc, #40]	@ (80196ec <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 80196c4:	f008 fb2a 	bl	8021d1c <__aeabi_atexit>
 80196c8:	4b05      	ldr	r3, [pc, #20]	@ (80196e0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 80196ca:	636b      	str	r3, [r5, #52]	@ 0x34
 80196cc:	4b07      	ldr	r3, [pc, #28]	@ (80196ec <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 80196ce:	63ab      	str	r3, [r5, #56]	@ 0x38
 80196d0:	bd38      	pop	{r3, r4, r5, pc}
 80196d2:	bf00      	nop
 80196d4:	200134d0 	.word	0x200134d0
 80196d8:	20000000 	.word	0x20000000
 80196dc:	0801557d 	.word	0x0801557d
 80196e0:	200001f8 	.word	0x200001f8
 80196e4:	200134d4 	.word	0x200134d4
 80196e8:	0801557b 	.word	0x0801557b
 80196ec:	200001fc 	.word	0x200001fc

080196f0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>:
 80196f0:	b538      	push	{r3, r4, r5, lr}
 80196f2:	4c15      	ldr	r4, [pc, #84]	@ (8019748 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x58>)
 80196f4:	7823      	ldrb	r3, [r4, #0]
 80196f6:	f3bf 8f5b 	dmb	ish
 80196fa:	07da      	lsls	r2, r3, #31
 80196fc:	4605      	mov	r5, r0
 80196fe:	d40b      	bmi.n	8019718 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 8019700:	4620      	mov	r0, r4
 8019702:	f008 fb12 	bl	8021d2a <__cxa_guard_acquire>
 8019706:	b138      	cbz	r0, 8019718 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 8019708:	4620      	mov	r0, r4
 801970a:	f008 fb1a 	bl	8021d42 <__cxa_guard_release>
 801970e:	4a0f      	ldr	r2, [pc, #60]	@ (801974c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 8019710:	490f      	ldr	r1, [pc, #60]	@ (8019750 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x60>)
 8019712:	4810      	ldr	r0, [pc, #64]	@ (8019754 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 8019714:	f008 fb02 	bl	8021d1c <__aeabi_atexit>
 8019718:	4c0f      	ldr	r4, [pc, #60]	@ (8019758 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x68>)
 801971a:	7823      	ldrb	r3, [r4, #0]
 801971c:	f3bf 8f5b 	dmb	ish
 8019720:	07db      	lsls	r3, r3, #31
 8019722:	d40b      	bmi.n	801973c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 8019724:	4620      	mov	r0, r4
 8019726:	f008 fb00 	bl	8021d2a <__cxa_guard_acquire>
 801972a:	b138      	cbz	r0, 801973c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 801972c:	4620      	mov	r0, r4
 801972e:	f008 fb08 	bl	8021d42 <__cxa_guard_release>
 8019732:	4a06      	ldr	r2, [pc, #24]	@ (801974c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 8019734:	4909      	ldr	r1, [pc, #36]	@ (801975c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x6c>)
 8019736:	480a      	ldr	r0, [pc, #40]	@ (8019760 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 8019738:	f008 faf0 	bl	8021d1c <__aeabi_atexit>
 801973c:	4b05      	ldr	r3, [pc, #20]	@ (8019754 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 801973e:	62eb      	str	r3, [r5, #44]	@ 0x2c
 8019740:	4b07      	ldr	r3, [pc, #28]	@ (8019760 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 8019742:	632b      	str	r3, [r5, #48]	@ 0x30
 8019744:	bd38      	pop	{r3, r4, r5, pc}
 8019746:	bf00      	nop
 8019748:	200134a0 	.word	0x200134a0
 801974c:	20000000 	.word	0x20000000
 8019750:	08015581 	.word	0x08015581
 8019754:	200001c8 	.word	0x200001c8
 8019758:	200134a4 	.word	0x200134a4
 801975c:	0801557f 	.word	0x0801557f
 8019760:	200001cc 	.word	0x200001cc

08019764 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>:
 8019764:	b510      	push	{r4, lr}
 8019766:	4604      	mov	r4, r0
 8019768:	f7ff ff88 	bl	801967c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>
 801976c:	4620      	mov	r0, r4
 801976e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8019772:	f7ff bfbd 	b.w	80196f0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>
	...

08019778 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>:
 8019778:	b538      	push	{r3, r4, r5, lr}
 801977a:	4c15      	ldr	r4, [pc, #84]	@ (80197d0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x58>)
 801977c:	7823      	ldrb	r3, [r4, #0]
 801977e:	f3bf 8f5b 	dmb	ish
 8019782:	07da      	lsls	r2, r3, #31
 8019784:	4605      	mov	r5, r0
 8019786:	d40b      	bmi.n	80197a0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 8019788:	4620      	mov	r0, r4
 801978a:	f008 face 	bl	8021d2a <__cxa_guard_acquire>
 801978e:	b138      	cbz	r0, 80197a0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 8019790:	4620      	mov	r0, r4
 8019792:	f008 fad6 	bl	8021d42 <__cxa_guard_release>
 8019796:	4a0f      	ldr	r2, [pc, #60]	@ (80197d4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 8019798:	490f      	ldr	r1, [pc, #60]	@ (80197d8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x60>)
 801979a:	4810      	ldr	r0, [pc, #64]	@ (80197dc <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 801979c:	f008 fabe 	bl	8021d1c <__aeabi_atexit>
 80197a0:	4c0f      	ldr	r4, [pc, #60]	@ (80197e0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x68>)
 80197a2:	7823      	ldrb	r3, [r4, #0]
 80197a4:	f3bf 8f5b 	dmb	ish
 80197a8:	07db      	lsls	r3, r3, #31
 80197aa:	d40b      	bmi.n	80197c4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 80197ac:	4620      	mov	r0, r4
 80197ae:	f008 fabc 	bl	8021d2a <__cxa_guard_acquire>
 80197b2:	b138      	cbz	r0, 80197c4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 80197b4:	4620      	mov	r0, r4
 80197b6:	f008 fac4 	bl	8021d42 <__cxa_guard_release>
 80197ba:	4a06      	ldr	r2, [pc, #24]	@ (80197d4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 80197bc:	4909      	ldr	r1, [pc, #36]	@ (80197e4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x6c>)
 80197be:	480a      	ldr	r0, [pc, #40]	@ (80197e8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 80197c0:	f008 faac 	bl	8021d1c <__aeabi_atexit>
 80197c4:	4b05      	ldr	r3, [pc, #20]	@ (80197dc <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 80197c6:	656b      	str	r3, [r5, #84]	@ 0x54
 80197c8:	4b07      	ldr	r3, [pc, #28]	@ (80197e8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 80197ca:	65ab      	str	r3, [r5, #88]	@ 0x58
 80197cc:	bd38      	pop	{r3, r4, r5, pc}
 80197ce:	bf00      	nop
 80197d0:	200134d8 	.word	0x200134d8
 80197d4:	20000000 	.word	0x20000000
 80197d8:	0801556d 	.word	0x0801556d
 80197dc:	20000200 	.word	0x20000200
 80197e0:	200134dc 	.word	0x200134dc
 80197e4:	0801556b 	.word	0x0801556b
 80197e8:	20000204 	.word	0x20000204

080197ec <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>:
 80197ec:	b538      	push	{r3, r4, r5, lr}
 80197ee:	4c15      	ldr	r4, [pc, #84]	@ (8019844 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x58>)
 80197f0:	7823      	ldrb	r3, [r4, #0]
 80197f2:	f3bf 8f5b 	dmb	ish
 80197f6:	07da      	lsls	r2, r3, #31
 80197f8:	4605      	mov	r5, r0
 80197fa:	d40b      	bmi.n	8019814 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 80197fc:	4620      	mov	r0, r4
 80197fe:	f008 fa94 	bl	8021d2a <__cxa_guard_acquire>
 8019802:	b138      	cbz	r0, 8019814 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 8019804:	4620      	mov	r0, r4
 8019806:	f008 fa9c 	bl	8021d42 <__cxa_guard_release>
 801980a:	4a0f      	ldr	r2, [pc, #60]	@ (8019848 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 801980c:	490f      	ldr	r1, [pc, #60]	@ (801984c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x60>)
 801980e:	4810      	ldr	r0, [pc, #64]	@ (8019850 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 8019810:	f008 fa84 	bl	8021d1c <__aeabi_atexit>
 8019814:	4c0f      	ldr	r4, [pc, #60]	@ (8019854 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x68>)
 8019816:	7823      	ldrb	r3, [r4, #0]
 8019818:	f3bf 8f5b 	dmb	ish
 801981c:	07db      	lsls	r3, r3, #31
 801981e:	d40b      	bmi.n	8019838 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 8019820:	4620      	mov	r0, r4
 8019822:	f008 fa82 	bl	8021d2a <__cxa_guard_acquire>
 8019826:	b138      	cbz	r0, 8019838 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 8019828:	4620      	mov	r0, r4
 801982a:	f008 fa8a 	bl	8021d42 <__cxa_guard_release>
 801982e:	4a06      	ldr	r2, [pc, #24]	@ (8019848 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 8019830:	4909      	ldr	r1, [pc, #36]	@ (8019858 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x6c>)
 8019832:	480a      	ldr	r0, [pc, #40]	@ (801985c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 8019834:	f008 fa72 	bl	8021d1c <__aeabi_atexit>
 8019838:	4b05      	ldr	r3, [pc, #20]	@ (8019850 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 801983a:	64eb      	str	r3, [r5, #76]	@ 0x4c
 801983c:	4b07      	ldr	r3, [pc, #28]	@ (801985c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 801983e:	652b      	str	r3, [r5, #80]	@ 0x50
 8019840:	bd38      	pop	{r3, r4, r5, pc}
 8019842:	bf00      	nop
 8019844:	200134e0 	.word	0x200134e0
 8019848:	20000000 	.word	0x20000000
 801984c:	08015571 	.word	0x08015571
 8019850:	20000208 	.word	0x20000208
 8019854:	200134e4 	.word	0x200134e4
 8019858:	0801556f 	.word	0x0801556f
 801985c:	2000020c 	.word	0x2000020c

08019860 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>:
 8019860:	b538      	push	{r3, r4, r5, lr}
 8019862:	4c15      	ldr	r4, [pc, #84]	@ (80198b8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x58>)
 8019864:	7823      	ldrb	r3, [r4, #0]
 8019866:	f3bf 8f5b 	dmb	ish
 801986a:	07da      	lsls	r2, r3, #31
 801986c:	4605      	mov	r5, r0
 801986e:	d40b      	bmi.n	8019888 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 8019870:	4620      	mov	r0, r4
 8019872:	f008 fa5a 	bl	8021d2a <__cxa_guard_acquire>
 8019876:	b138      	cbz	r0, 8019888 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 8019878:	4620      	mov	r0, r4
 801987a:	f008 fa62 	bl	8021d42 <__cxa_guard_release>
 801987e:	4a0f      	ldr	r2, [pc, #60]	@ (80198bc <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 8019880:	490f      	ldr	r1, [pc, #60]	@ (80198c0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x60>)
 8019882:	4810      	ldr	r0, [pc, #64]	@ (80198c4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 8019884:	f008 fa4a 	bl	8021d1c <__aeabi_atexit>
 8019888:	4c0f      	ldr	r4, [pc, #60]	@ (80198c8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x68>)
 801988a:	7823      	ldrb	r3, [r4, #0]
 801988c:	f3bf 8f5b 	dmb	ish
 8019890:	07db      	lsls	r3, r3, #31
 8019892:	d40b      	bmi.n	80198ac <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 8019894:	4620      	mov	r0, r4
 8019896:	f008 fa48 	bl	8021d2a <__cxa_guard_acquire>
 801989a:	b138      	cbz	r0, 80198ac <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 801989c:	4620      	mov	r0, r4
 801989e:	f008 fa50 	bl	8021d42 <__cxa_guard_release>
 80198a2:	4a06      	ldr	r2, [pc, #24]	@ (80198bc <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 80198a4:	4909      	ldr	r1, [pc, #36]	@ (80198cc <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x6c>)
 80198a6:	480a      	ldr	r0, [pc, #40]	@ (80198d0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 80198a8:	f008 fa38 	bl	8021d1c <__aeabi_atexit>
 80198ac:	4b05      	ldr	r3, [pc, #20]	@ (80198c4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 80198ae:	646b      	str	r3, [r5, #68]	@ 0x44
 80198b0:	4b07      	ldr	r3, [pc, #28]	@ (80198d0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 80198b2:	64ab      	str	r3, [r5, #72]	@ 0x48
 80198b4:	bd38      	pop	{r3, r4, r5, pc}
 80198b6:	bf00      	nop
 80198b8:	200134a8 	.word	0x200134a8
 80198bc:	20000000 	.word	0x20000000
 80198c0:	08015575 	.word	0x08015575
 80198c4:	200001d0 	.word	0x200001d0
 80198c8:	200134ac 	.word	0x200134ac
 80198cc:	08015573 	.word	0x08015573
 80198d0:	200001d4 	.word	0x200001d4

080198d4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>:
 80198d4:	b538      	push	{r3, r4, r5, lr}
 80198d6:	4c15      	ldr	r4, [pc, #84]	@ (801992c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x58>)
 80198d8:	7823      	ldrb	r3, [r4, #0]
 80198da:	f3bf 8f5b 	dmb	ish
 80198de:	07da      	lsls	r2, r3, #31
 80198e0:	4605      	mov	r5, r0
 80198e2:	d40b      	bmi.n	80198fc <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 80198e4:	4620      	mov	r0, r4
 80198e6:	f008 fa20 	bl	8021d2a <__cxa_guard_acquire>
 80198ea:	b138      	cbz	r0, 80198fc <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 80198ec:	4620      	mov	r0, r4
 80198ee:	f008 fa28 	bl	8021d42 <__cxa_guard_release>
 80198f2:	4a0f      	ldr	r2, [pc, #60]	@ (8019930 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 80198f4:	490f      	ldr	r1, [pc, #60]	@ (8019934 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x60>)
 80198f6:	4810      	ldr	r0, [pc, #64]	@ (8019938 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 80198f8:	f008 fa10 	bl	8021d1c <__aeabi_atexit>
 80198fc:	4c0f      	ldr	r4, [pc, #60]	@ (801993c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x68>)
 80198fe:	7823      	ldrb	r3, [r4, #0]
 8019900:	f3bf 8f5b 	dmb	ish
 8019904:	07db      	lsls	r3, r3, #31
 8019906:	d40b      	bmi.n	8019920 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 8019908:	4620      	mov	r0, r4
 801990a:	f008 fa0e 	bl	8021d2a <__cxa_guard_acquire>
 801990e:	b138      	cbz	r0, 8019920 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 8019910:	4620      	mov	r0, r4
 8019912:	f008 fa16 	bl	8021d42 <__cxa_guard_release>
 8019916:	4a06      	ldr	r2, [pc, #24]	@ (8019930 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 8019918:	4909      	ldr	r1, [pc, #36]	@ (8019940 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x6c>)
 801991a:	480a      	ldr	r0, [pc, #40]	@ (8019944 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 801991c:	f008 f9fe 	bl	8021d1c <__aeabi_atexit>
 8019920:	4b05      	ldr	r3, [pc, #20]	@ (8019938 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 8019922:	63eb      	str	r3, [r5, #60]	@ 0x3c
 8019924:	4b07      	ldr	r3, [pc, #28]	@ (8019944 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 8019926:	642b      	str	r3, [r5, #64]	@ 0x40
 8019928:	bd38      	pop	{r3, r4, r5, pc}
 801992a:	bf00      	nop
 801992c:	200134c8 	.word	0x200134c8
 8019930:	20000000 	.word	0x20000000
 8019934:	08015579 	.word	0x08015579
 8019938:	200001f0 	.word	0x200001f0
 801993c:	200134cc 	.word	0x200134cc
 8019940:	08015577 	.word	0x08015577
 8019944:	200001f4 	.word	0x200001f4

08019948 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>:
 8019948:	b510      	push	{r4, lr}
 801994a:	4604      	mov	r4, r0
 801994c:	f7ff ff14 	bl	8019778 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>
 8019950:	4620      	mov	r0, r4
 8019952:	f7ff ff85 	bl	8019860 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>
 8019956:	4620      	mov	r0, r4
 8019958:	f7ff ff48 	bl	80197ec <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>
 801995c:	4620      	mov	r0, r4
 801995e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8019962:	f7ff bfb7 	b.w	80198d4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>
	...

08019968 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>:
 8019968:	b538      	push	{r3, r4, r5, lr}
 801996a:	4c15      	ldr	r4, [pc, #84]	@ (80199c0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x58>)
 801996c:	7823      	ldrb	r3, [r4, #0]
 801996e:	f3bf 8f5b 	dmb	ish
 8019972:	07da      	lsls	r2, r3, #31
 8019974:	4605      	mov	r5, r0
 8019976:	d40b      	bmi.n	8019990 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 8019978:	4620      	mov	r0, r4
 801997a:	f008 f9d6 	bl	8021d2a <__cxa_guard_acquire>
 801997e:	b138      	cbz	r0, 8019990 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 8019980:	4620      	mov	r0, r4
 8019982:	f008 f9de 	bl	8021d42 <__cxa_guard_release>
 8019986:	4a0f      	ldr	r2, [pc, #60]	@ (80199c4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 8019988:	490f      	ldr	r1, [pc, #60]	@ (80199c8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x60>)
 801998a:	4810      	ldr	r0, [pc, #64]	@ (80199cc <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 801998c:	f008 f9c6 	bl	8021d1c <__aeabi_atexit>
 8019990:	4c0f      	ldr	r4, [pc, #60]	@ (80199d0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x68>)
 8019992:	7823      	ldrb	r3, [r4, #0]
 8019994:	f3bf 8f5b 	dmb	ish
 8019998:	07db      	lsls	r3, r3, #31
 801999a:	d40b      	bmi.n	80199b4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 801999c:	4620      	mov	r0, r4
 801999e:	f008 f9c4 	bl	8021d2a <__cxa_guard_acquire>
 80199a2:	b138      	cbz	r0, 80199b4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 80199a4:	4620      	mov	r0, r4
 80199a6:	f008 f9cc 	bl	8021d42 <__cxa_guard_release>
 80199aa:	4a06      	ldr	r2, [pc, #24]	@ (80199c4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 80199ac:	4909      	ldr	r1, [pc, #36]	@ (80199d4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x6c>)
 80199ae:	480a      	ldr	r0, [pc, #40]	@ (80199d8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 80199b0:	f008 f9b4 	bl	8021d1c <__aeabi_atexit>
 80199b4:	4b05      	ldr	r3, [pc, #20]	@ (80199cc <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 80199b6:	666b      	str	r3, [r5, #100]	@ 0x64
 80199b8:	4b07      	ldr	r3, [pc, #28]	@ (80199d8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 80199ba:	66ab      	str	r3, [r5, #104]	@ 0x68
 80199bc:	bd38      	pop	{r3, r4, r5, pc}
 80199be:	bf00      	nop
 80199c0:	200134b0 	.word	0x200134b0
 80199c4:	20000000 	.word	0x20000000
 80199c8:	08015565 	.word	0x08015565
 80199cc:	200001d8 	.word	0x200001d8
 80199d0:	200134b4 	.word	0x200134b4
 80199d4:	08015563 	.word	0x08015563
 80199d8:	200001dc 	.word	0x200001dc

080199dc <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>:
 80199dc:	b538      	push	{r3, r4, r5, lr}
 80199de:	4c15      	ldr	r4, [pc, #84]	@ (8019a34 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x58>)
 80199e0:	7823      	ldrb	r3, [r4, #0]
 80199e2:	f3bf 8f5b 	dmb	ish
 80199e6:	07da      	lsls	r2, r3, #31
 80199e8:	4605      	mov	r5, r0
 80199ea:	d40b      	bmi.n	8019a04 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 80199ec:	4620      	mov	r0, r4
 80199ee:	f008 f99c 	bl	8021d2a <__cxa_guard_acquire>
 80199f2:	b138      	cbz	r0, 8019a04 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 80199f4:	4620      	mov	r0, r4
 80199f6:	f008 f9a4 	bl	8021d42 <__cxa_guard_release>
 80199fa:	4a0f      	ldr	r2, [pc, #60]	@ (8019a38 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 80199fc:	490f      	ldr	r1, [pc, #60]	@ (8019a3c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x60>)
 80199fe:	4810      	ldr	r0, [pc, #64]	@ (8019a40 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 8019a00:	f008 f98c 	bl	8021d1c <__aeabi_atexit>
 8019a04:	4c0f      	ldr	r4, [pc, #60]	@ (8019a44 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x68>)
 8019a06:	7823      	ldrb	r3, [r4, #0]
 8019a08:	f3bf 8f5b 	dmb	ish
 8019a0c:	07db      	lsls	r3, r3, #31
 8019a0e:	d40b      	bmi.n	8019a28 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 8019a10:	4620      	mov	r0, r4
 8019a12:	f008 f98a 	bl	8021d2a <__cxa_guard_acquire>
 8019a16:	b138      	cbz	r0, 8019a28 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 8019a18:	4620      	mov	r0, r4
 8019a1a:	f008 f992 	bl	8021d42 <__cxa_guard_release>
 8019a1e:	4a06      	ldr	r2, [pc, #24]	@ (8019a38 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 8019a20:	4909      	ldr	r1, [pc, #36]	@ (8019a48 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x6c>)
 8019a22:	480a      	ldr	r0, [pc, #40]	@ (8019a4c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 8019a24:	f008 f97a 	bl	8021d1c <__aeabi_atexit>
 8019a28:	4b05      	ldr	r3, [pc, #20]	@ (8019a40 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 8019a2a:	65eb      	str	r3, [r5, #92]	@ 0x5c
 8019a2c:	4b07      	ldr	r3, [pc, #28]	@ (8019a4c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 8019a2e:	662b      	str	r3, [r5, #96]	@ 0x60
 8019a30:	bd38      	pop	{r3, r4, r5, pc}
 8019a32:	bf00      	nop
 8019a34:	20013488 	.word	0x20013488
 8019a38:	20000000 	.word	0x20000000
 8019a3c:	08015569 	.word	0x08015569
 8019a40:	200001b0 	.word	0x200001b0
 8019a44:	2001348c 	.word	0x2001348c
 8019a48:	08015567 	.word	0x08015567
 8019a4c:	200001b4 	.word	0x200001b4

08019a50 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>:
 8019a50:	b510      	push	{r4, lr}
 8019a52:	4604      	mov	r4, r0
 8019a54:	f7ff ff88 	bl	8019968 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>
 8019a58:	4620      	mov	r0, r4
 8019a5a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8019a5e:	f7ff bfbd 	b.w	80199dc <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>
	...

08019a64 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>:
 8019a64:	b538      	push	{r3, r4, r5, lr}
 8019a66:	4c15      	ldr	r4, [pc, #84]	@ (8019abc <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x58>)
 8019a68:	7823      	ldrb	r3, [r4, #0]
 8019a6a:	f3bf 8f5b 	dmb	ish
 8019a6e:	07da      	lsls	r2, r3, #31
 8019a70:	4605      	mov	r5, r0
 8019a72:	d40b      	bmi.n	8019a8c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 8019a74:	4620      	mov	r0, r4
 8019a76:	f008 f958 	bl	8021d2a <__cxa_guard_acquire>
 8019a7a:	b138      	cbz	r0, 8019a8c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 8019a7c:	4620      	mov	r0, r4
 8019a7e:	f008 f960 	bl	8021d42 <__cxa_guard_release>
 8019a82:	4a0f      	ldr	r2, [pc, #60]	@ (8019ac0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 8019a84:	490f      	ldr	r1, [pc, #60]	@ (8019ac4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x60>)
 8019a86:	4810      	ldr	r0, [pc, #64]	@ (8019ac8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 8019a88:	f008 f948 	bl	8021d1c <__aeabi_atexit>
 8019a8c:	4c0f      	ldr	r4, [pc, #60]	@ (8019acc <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x68>)
 8019a8e:	7823      	ldrb	r3, [r4, #0]
 8019a90:	f3bf 8f5b 	dmb	ish
 8019a94:	07db      	lsls	r3, r3, #31
 8019a96:	d40b      	bmi.n	8019ab0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 8019a98:	4620      	mov	r0, r4
 8019a9a:	f008 f946 	bl	8021d2a <__cxa_guard_acquire>
 8019a9e:	b138      	cbz	r0, 8019ab0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 8019aa0:	4620      	mov	r0, r4
 8019aa2:	f008 f94e 	bl	8021d42 <__cxa_guard_release>
 8019aa6:	4a06      	ldr	r2, [pc, #24]	@ (8019ac0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 8019aa8:	4909      	ldr	r1, [pc, #36]	@ (8019ad0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x6c>)
 8019aaa:	480a      	ldr	r0, [pc, #40]	@ (8019ad4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 8019aac:	f008 f936 	bl	8021d1c <__aeabi_atexit>
 8019ab0:	4b05      	ldr	r3, [pc, #20]	@ (8019ac8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 8019ab2:	676b      	str	r3, [r5, #116]	@ 0x74
 8019ab4:	4b07      	ldr	r3, [pc, #28]	@ (8019ad4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 8019ab6:	67ab      	str	r3, [r5, #120]	@ 0x78
 8019ab8:	bd38      	pop	{r3, r4, r5, pc}
 8019aba:	bf00      	nop
 8019abc:	20013480 	.word	0x20013480
 8019ac0:	20000000 	.word	0x20000000
 8019ac4:	0801555d 	.word	0x0801555d
 8019ac8:	200001a8 	.word	0x200001a8
 8019acc:	20013484 	.word	0x20013484
 8019ad0:	0801555b 	.word	0x0801555b
 8019ad4:	200001ac 	.word	0x200001ac

08019ad8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>:
 8019ad8:	b538      	push	{r3, r4, r5, lr}
 8019ada:	4c15      	ldr	r4, [pc, #84]	@ (8019b30 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x58>)
 8019adc:	7823      	ldrb	r3, [r4, #0]
 8019ade:	f3bf 8f5b 	dmb	ish
 8019ae2:	07da      	lsls	r2, r3, #31
 8019ae4:	4605      	mov	r5, r0
 8019ae6:	d40b      	bmi.n	8019b00 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 8019ae8:	4620      	mov	r0, r4
 8019aea:	f008 f91e 	bl	8021d2a <__cxa_guard_acquire>
 8019aee:	b138      	cbz	r0, 8019b00 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 8019af0:	4620      	mov	r0, r4
 8019af2:	f008 f926 	bl	8021d42 <__cxa_guard_release>
 8019af6:	4a0f      	ldr	r2, [pc, #60]	@ (8019b34 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 8019af8:	490f      	ldr	r1, [pc, #60]	@ (8019b38 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x60>)
 8019afa:	4810      	ldr	r0, [pc, #64]	@ (8019b3c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 8019afc:	f008 f90e 	bl	8021d1c <__aeabi_atexit>
 8019b00:	4c0f      	ldr	r4, [pc, #60]	@ (8019b40 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x68>)
 8019b02:	7823      	ldrb	r3, [r4, #0]
 8019b04:	f3bf 8f5b 	dmb	ish
 8019b08:	07db      	lsls	r3, r3, #31
 8019b0a:	d40b      	bmi.n	8019b24 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 8019b0c:	4620      	mov	r0, r4
 8019b0e:	f008 f90c 	bl	8021d2a <__cxa_guard_acquire>
 8019b12:	b138      	cbz	r0, 8019b24 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 8019b14:	4620      	mov	r0, r4
 8019b16:	f008 f914 	bl	8021d42 <__cxa_guard_release>
 8019b1a:	4a06      	ldr	r2, [pc, #24]	@ (8019b34 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 8019b1c:	4909      	ldr	r1, [pc, #36]	@ (8019b44 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x6c>)
 8019b1e:	480a      	ldr	r0, [pc, #40]	@ (8019b48 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 8019b20:	f008 f8fc 	bl	8021d1c <__aeabi_atexit>
 8019b24:	4b05      	ldr	r3, [pc, #20]	@ (8019b3c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 8019b26:	66eb      	str	r3, [r5, #108]	@ 0x6c
 8019b28:	4b07      	ldr	r3, [pc, #28]	@ (8019b48 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 8019b2a:	672b      	str	r3, [r5, #112]	@ 0x70
 8019b2c:	bd38      	pop	{r3, r4, r5, pc}
 8019b2e:	bf00      	nop
 8019b30:	20013478 	.word	0x20013478
 8019b34:	20000000 	.word	0x20000000
 8019b38:	08015561 	.word	0x08015561
 8019b3c:	200001a0 	.word	0x200001a0
 8019b40:	2001347c 	.word	0x2001347c
 8019b44:	0801555f 	.word	0x0801555f
 8019b48:	200001a4 	.word	0x200001a4

08019b4c <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>:
 8019b4c:	b510      	push	{r4, lr}
 8019b4e:	4604      	mov	r4, r0
 8019b50:	f7ff ff88 	bl	8019a64 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>
 8019b54:	4620      	mov	r0, r4
 8019b56:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8019b5a:	f7ff bfbd 	b.w	8019ad8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>

08019b5e <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>:
 8019b5e:	b510      	push	{r4, lr}
 8019b60:	4604      	mov	r4, r0
 8019b62:	f7ff fff3 	bl	8019b4c <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>
 8019b66:	4620      	mov	r0, r4
 8019b68:	f7ff ff72 	bl	8019a50 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>
 8019b6c:	4620      	mov	r0, r4
 8019b6e:	f7ff fdf9 	bl	8019764 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>
 8019b72:	4620      	mov	r0, r4
 8019b74:	f7ff fcfa 	bl	801956c <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>
 8019b78:	4620      	mov	r0, r4
 8019b7a:	f7ff fd75 	bl	8019668 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>
 8019b7e:	4620      	mov	r0, r4
 8019b80:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8019b84:	f7ff bee0 	b.w	8019948 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>

08019b88 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>:
 8019b88:	b538      	push	{r3, r4, r5, lr}
 8019b8a:	4c0b      	ldr	r4, [pc, #44]	@ (8019bb8 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x30>)
 8019b8c:	7823      	ldrb	r3, [r4, #0]
 8019b8e:	f3bf 8f5b 	dmb	ish
 8019b92:	07db      	lsls	r3, r3, #31
 8019b94:	4605      	mov	r5, r0
 8019b96:	d40b      	bmi.n	8019bb0 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
 8019b98:	4620      	mov	r0, r4
 8019b9a:	f008 f8c6 	bl	8021d2a <__cxa_guard_acquire>
 8019b9e:	b138      	cbz	r0, 8019bb0 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
 8019ba0:	4620      	mov	r0, r4
 8019ba2:	f008 f8ce 	bl	8021d42 <__cxa_guard_release>
 8019ba6:	4a05      	ldr	r2, [pc, #20]	@ (8019bbc <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x34>)
 8019ba8:	4905      	ldr	r1, [pc, #20]	@ (8019bc0 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x38>)
 8019baa:	4806      	ldr	r0, [pc, #24]	@ (8019bc4 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
 8019bac:	f008 f8b6 	bl	8021d1c <__aeabi_atexit>
 8019bb0:	4b04      	ldr	r3, [pc, #16]	@ (8019bc4 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
 8019bb2:	67eb      	str	r3, [r5, #124]	@ 0x7c
 8019bb4:	bd38      	pop	{r3, r4, r5, pc}
 8019bb6:	bf00      	nop
 8019bb8:	2001346c 	.word	0x2001346c
 8019bbc:	20000000 	.word	0x20000000
 8019bc0:	08015559 	.word	0x08015559
 8019bc4:	20000198 	.word	0x20000198

08019bc8 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>:
 8019bc8:	b538      	push	{r3, r4, r5, lr}
 8019bca:	4c0b      	ldr	r4, [pc, #44]	@ (8019bf8 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x30>)
 8019bcc:	7823      	ldrb	r3, [r4, #0]
 8019bce:	f3bf 8f5b 	dmb	ish
 8019bd2:	07db      	lsls	r3, r3, #31
 8019bd4:	4605      	mov	r5, r0
 8019bd6:	d40b      	bmi.n	8019bf0 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
 8019bd8:	4620      	mov	r0, r4
 8019bda:	f008 f8a6 	bl	8021d2a <__cxa_guard_acquire>
 8019bde:	b138      	cbz	r0, 8019bf0 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
 8019be0:	4620      	mov	r0, r4
 8019be2:	f008 f8ae 	bl	8021d42 <__cxa_guard_release>
 8019be6:	4a05      	ldr	r2, [pc, #20]	@ (8019bfc <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x34>)
 8019be8:	4905      	ldr	r1, [pc, #20]	@ (8019c00 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x38>)
 8019bea:	4806      	ldr	r0, [pc, #24]	@ (8019c04 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
 8019bec:	f008 f896 	bl	8021d1c <__aeabi_atexit>
 8019bf0:	4b04      	ldr	r3, [pc, #16]	@ (8019c04 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
 8019bf2:	f8c5 3080 	str.w	r3, [r5, #128]	@ 0x80
 8019bf6:	bd38      	pop	{r3, r4, r5, pc}
 8019bf8:	20013470 	.word	0x20013470
 8019bfc:	20000000 	.word	0x20000000
 8019c00:	08015557 	.word	0x08015557
 8019c04:	2000019c 	.word	0x2000019c

08019c08 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>:
 8019c08:	b570      	push	{r4, r5, r6, lr}
 8019c0a:	4d0d      	ldr	r5, [pc, #52]	@ (8019c40 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x38>)
 8019c0c:	4c0d      	ldr	r4, [pc, #52]	@ (8019c44 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x3c>)
 8019c0e:	782b      	ldrb	r3, [r5, #0]
 8019c10:	f3bf 8f5b 	dmb	ish
 8019c14:	f013 0f01 	tst.w	r3, #1
 8019c18:	4606      	mov	r6, r0
 8019c1a:	d10d      	bne.n	8019c38 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
 8019c1c:	4628      	mov	r0, r5
 8019c1e:	f008 f884 	bl	8021d2a <__cxa_guard_acquire>
 8019c22:	b148      	cbz	r0, 8019c38 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
 8019c24:	4b08      	ldr	r3, [pc, #32]	@ (8019c48 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x40>)
 8019c26:	6023      	str	r3, [r4, #0]
 8019c28:	4628      	mov	r0, r5
 8019c2a:	f008 f88a 	bl	8021d42 <__cxa_guard_release>
 8019c2e:	4a07      	ldr	r2, [pc, #28]	@ (8019c4c <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x44>)
 8019c30:	4907      	ldr	r1, [pc, #28]	@ (8019c50 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x48>)
 8019c32:	4620      	mov	r0, r4
 8019c34:	f008 f872 	bl	8021d1c <__aeabi_atexit>
 8019c38:	f8c6 4084 	str.w	r4, [r6, #132]	@ 0x84
 8019c3c:	bd70      	pop	{r4, r5, r6, pc}
 8019c3e:	bf00      	nop
 8019c40:	20013474 	.word	0x20013474
 8019c44:	200135ec 	.word	0x200135ec
 8019c48:	0802539c 	.word	0x0802539c
 8019c4c:	20000000 	.word	0x20000000
 8019c50:	08015555 	.word	0x08015555

08019c54 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>:
 8019c54:	b510      	push	{r4, lr}
 8019c56:	4604      	mov	r4, r0
 8019c58:	f7ff ff96 	bl	8019b88 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>
 8019c5c:	4620      	mov	r0, r4
 8019c5e:	f7ff ffb3 	bl	8019bc8 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>
 8019c62:	4620      	mov	r0, r4
 8019c64:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8019c68:	f7ff bfce 	b.w	8019c08 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>

08019c6c <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv>:
 8019c6c:	b570      	push	{r4, r5, r6, lr}
 8019c6e:	4d0d      	ldr	r5, [pc, #52]	@ (8019ca4 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x38>)
 8019c70:	4c0d      	ldr	r4, [pc, #52]	@ (8019ca8 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x3c>)
 8019c72:	782b      	ldrb	r3, [r5, #0]
 8019c74:	f3bf 8f5b 	dmb	ish
 8019c78:	f013 0f01 	tst.w	r3, #1
 8019c7c:	4606      	mov	r6, r0
 8019c7e:	d10d      	bne.n	8019c9c <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x30>
 8019c80:	4628      	mov	r0, r5
 8019c82:	f008 f852 	bl	8021d2a <__cxa_guard_acquire>
 8019c86:	b148      	cbz	r0, 8019c9c <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x30>
 8019c88:	4b08      	ldr	r3, [pc, #32]	@ (8019cac <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x40>)
 8019c8a:	6023      	str	r3, [r4, #0]
 8019c8c:	4628      	mov	r0, r5
 8019c8e:	f008 f858 	bl	8021d42 <__cxa_guard_release>
 8019c92:	4a07      	ldr	r2, [pc, #28]	@ (8019cb0 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x44>)
 8019c94:	4907      	ldr	r1, [pc, #28]	@ (8019cb4 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x48>)
 8019c96:	4620      	mov	r0, r4
 8019c98:	f008 f840 	bl	8021d1c <__aeabi_atexit>
 8019c9c:	f8c6 4088 	str.w	r4, [r6, #136]	@ 0x88
 8019ca0:	bd70      	pop	{r4, r5, r6, pc}
 8019ca2:	bf00      	nop
 8019ca4:	20013468 	.word	0x20013468
 8019ca8:	200134e8 	.word	0x200134e8
 8019cac:	080253b8 	.word	0x080253b8
 8019cb0:	20000000 	.word	0x20000000
 8019cb4:	08015553 	.word	0x08015553

08019cb8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>:
 8019cb8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019cbc:	e9dd 450b 	ldrd	r4, r5, [sp, #44]	@ 0x2c
 8019cc0:	f9bd e024 	ldrsh.w	lr, [sp, #36]	@ 0x24
 8019cc4:	f9bd b028 	ldrsh.w	fp, [sp, #40]	@ 0x28
 8019cc8:	f89d 9034 	ldrb.w	r9, [sp, #52]	@ 0x34
 8019ccc:	f89d 7038 	ldrb.w	r7, [sp, #56]	@ 0x38
 8019cd0:	f89d 603c 	ldrb.w	r6, [sp, #60]	@ 0x3c
 8019cd4:	8808      	ldrh	r0, [r1, #0]
 8019cd6:	fb05 4c0e 	mla	ip, r5, lr, r4
 8019cda:	2d00      	cmp	r5, #0
 8019cdc:	eb02 0a0c 	add.w	sl, r2, ip
 8019ce0:	f2c0 80b0 	blt.w	8019e44 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 8019ce4:	45ab      	cmp	fp, r5
 8019ce6:	f340 80ad 	ble.w	8019e44 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 8019cea:	2c00      	cmp	r4, #0
 8019cec:	f2c0 80a8 	blt.w	8019e40 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 8019cf0:	45a6      	cmp	lr, r4
 8019cf2:	f340 80a5 	ble.w	8019e40 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 8019cf6:	f812 200c 	ldrb.w	r2, [r2, ip]
 8019cfa:	f833 8012 	ldrh.w	r8, [r3, r2, lsl #1]
 8019cfe:	1c62      	adds	r2, r4, #1
 8019d00:	f100 80a3 	bmi.w	8019e4a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 8019d04:	4596      	cmp	lr, r2
 8019d06:	f340 80a0 	ble.w	8019e4a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 8019d0a:	f1b9 0f00 	cmp.w	r9, #0
 8019d0e:	f000 809c 	beq.w	8019e4a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 8019d12:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8019d16:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 8019d1a:	3501      	adds	r5, #1
 8019d1c:	f100 8099 	bmi.w	8019e52 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 8019d20:	45ab      	cmp	fp, r5
 8019d22:	f340 8096 	ble.w	8019e52 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 8019d26:	2f00      	cmp	r7, #0
 8019d28:	f000 8093 	beq.w	8019e52 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 8019d2c:	2c00      	cmp	r4, #0
 8019d2e:	f2c0 808e 	blt.w	8019e4e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 8019d32:	45a6      	cmp	lr, r4
 8019d34:	f340 808b 	ble.w	8019e4e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 8019d38:	f81a 200e 	ldrb.w	r2, [sl, lr]
 8019d3c:	f833 5012 	ldrh.w	r5, [r3, r2, lsl #1]
 8019d40:	3401      	adds	r4, #1
 8019d42:	f100 8089 	bmi.w	8019e58 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 8019d46:	45a6      	cmp	lr, r4
 8019d48:	f340 8086 	ble.w	8019e58 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 8019d4c:	f1b9 0f00 	cmp.w	r9, #0
 8019d50:	f000 8082 	beq.w	8019e58 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 8019d54:	44d6      	add	lr, sl
 8019d56:	f89e 2001 	ldrb.w	r2, [lr, #1]
 8019d5a:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 8019d5e:	ea4f 4408 	mov.w	r4, r8, lsl #16
 8019d62:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 8019d66:	f428 68fc 	bic.w	r8, r8, #2016	@ 0x7e0
 8019d6a:	fb19 fe07 	smulbb	lr, r9, r7
 8019d6e:	ea44 0808 	orr.w	r8, r4, r8
 8019d72:	ea4f 440c 	mov.w	r4, ip, lsl #16
 8019d76:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 8019d7a:	f1c7 0210 	rsb	r2, r7, #16
 8019d7e:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 8019d82:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 8019d86:	ea44 0c0c 	orr.w	ip, r4, ip
 8019d8a:	eba2 0209 	sub.w	r2, r2, r9
 8019d8e:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 8019d92:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 8019d96:	fb04 f40c 	mul.w	r4, r4, ip
 8019d9a:	fb02 4808 	mla	r8, r2, r8, r4
 8019d9e:	041a      	lsls	r2, r3, #16
 8019da0:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 8019da4:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 8019da8:	4313      	orrs	r3, r2
 8019daa:	042a      	lsls	r2, r5, #16
 8019dac:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 8019db0:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
 8019db4:	fb0e 8303 	mla	r3, lr, r3, r8
 8019db8:	432a      	orrs	r2, r5
 8019dba:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 8019dbe:	fb07 3202 	mla	r2, r7, r2, r3
 8019dc2:	0d53      	lsrs	r3, r2, #21
 8019dc4:	0952      	lsrs	r2, r2, #5
 8019dc6:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8019dca:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 8019dce:	431a      	orrs	r2, r3
 8019dd0:	b293      	uxth	r3, r2
 8019dd2:	b2b4      	uxth	r4, r6
 8019dd4:	1202      	asrs	r2, r0, #8
 8019dd6:	43f6      	mvns	r6, r6
 8019dd8:	b2f6      	uxtb	r6, r6
 8019dda:	121d      	asrs	r5, r3, #8
 8019ddc:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 8019de0:	fb12 f206 	smulbb	r2, r2, r6
 8019de4:	10c7      	asrs	r7, r0, #3
 8019de6:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 8019dea:	00c0      	lsls	r0, r0, #3
 8019dec:	fb05 2504 	mla	r5, r5, r4, r2
 8019df0:	b2c0      	uxtb	r0, r0
 8019df2:	10da      	asrs	r2, r3, #3
 8019df4:	00db      	lsls	r3, r3, #3
 8019df6:	b2db      	uxtb	r3, r3
 8019df8:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8019dfc:	fb10 f006 	smulbb	r0, r0, r6
 8019e00:	b2ad      	uxth	r5, r5
 8019e02:	fb03 0004 	mla	r0, r3, r4, r0
 8019e06:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 8019e0a:	fb17 f706 	smulbb	r7, r7, r6
 8019e0e:	b280      	uxth	r0, r0
 8019e10:	1c6b      	adds	r3, r5, #1
 8019e12:	fb02 7204 	mla	r2, r2, r4, r7
 8019e16:	b292      	uxth	r2, r2
 8019e18:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8019e1c:	1c43      	adds	r3, r0, #1
 8019e1e:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8019e22:	1c50      	adds	r0, r2, #1
 8019e24:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 8019e28:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 8019e2c:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8019e30:	0952      	lsrs	r2, r2, #5
 8019e32:	432b      	orrs	r3, r5
 8019e34:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8019e38:	4313      	orrs	r3, r2
 8019e3a:	800b      	strh	r3, [r1, #0]
 8019e3c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019e40:	4680      	mov	r8, r0
 8019e42:	e75c      	b.n	8019cfe <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x46>
 8019e44:	4684      	mov	ip, r0
 8019e46:	4680      	mov	r8, r0
 8019e48:	e767      	b.n	8019d1a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 8019e4a:	4684      	mov	ip, r0
 8019e4c:	e765      	b.n	8019d1a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 8019e4e:	4605      	mov	r5, r0
 8019e50:	e776      	b.n	8019d40 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x88>
 8019e52:	4603      	mov	r3, r0
 8019e54:	4605      	mov	r5, r0
 8019e56:	e782      	b.n	8019d5e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
 8019e58:	4603      	mov	r3, r0
 8019e5a:	e780      	b.n	8019d5e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>

08019e5c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019e5c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019e60:	b099      	sub	sp, #100	@ 0x64
 8019e62:	e9dd a523 	ldrd	sl, r5, [sp, #140]	@ 0x8c
 8019e66:	9215      	str	r2, [sp, #84]	@ 0x54
 8019e68:	9309      	str	r3, [sp, #36]	@ 0x24
 8019e6a:	9a27      	ldr	r2, [sp, #156]	@ 0x9c
 8019e6c:	f89d 30ac 	ldrb.w	r3, [sp, #172]	@ 0xac
 8019e70:	930d      	str	r3, [sp, #52]	@ 0x34
 8019e72:	910c      	str	r1, [sp, #48]	@ 0x30
 8019e74:	e9dd 1328 	ldrd	r1, r3, [sp, #160]	@ 0xa0
 8019e78:	9016      	str	r0, [sp, #88]	@ 0x58
 8019e7a:	6850      	ldr	r0, [r2, #4]
 8019e7c:	6812      	ldr	r2, [r2, #0]
 8019e7e:	fb00 1303 	mla	r3, r0, r3, r1
 8019e82:	eb02 0843 	add.w	r8, r2, r3, lsl #1
 8019e86:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 8019e88:	681b      	ldr	r3, [r3, #0]
 8019e8a:	930b      	str	r3, [sp, #44]	@ 0x2c
 8019e8c:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 8019e8e:	685e      	ldr	r6, [r3, #4]
 8019e90:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8019e92:	43db      	mvns	r3, r3
 8019e94:	b2db      	uxtb	r3, r3
 8019e96:	3604      	adds	r6, #4
 8019e98:	930a      	str	r3, [sp, #40]	@ 0x28
 8019e9a:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8019e9c:	2b00      	cmp	r3, #0
 8019e9e:	dc03      	bgt.n	8019ea8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 8019ea0:	9b15      	ldr	r3, [sp, #84]	@ 0x54
 8019ea2:	2b00      	cmp	r3, #0
 8019ea4:	f340 8225 	ble.w	801a2f2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 8019ea8:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 8019eaa:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8019eae:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8019eb2:	1e48      	subs	r0, r1, #1
 8019eb4:	1e57      	subs	r7, r2, #1
 8019eb6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8019eb8:	2b00      	cmp	r3, #0
 8019eba:	f340 80e3 	ble.w	801a084 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8019ebe:	ea5f 4c2a 	movs.w	ip, sl, asr #16
 8019ec2:	ea4f 4325 	mov.w	r3, r5, asr #16
 8019ec6:	d406      	bmi.n	8019ed6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8019ec8:	4584      	cmp	ip, r0
 8019eca:	da04      	bge.n	8019ed6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8019ecc:	2b00      	cmp	r3, #0
 8019ece:	db02      	blt.n	8019ed6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8019ed0:	42bb      	cmp	r3, r7
 8019ed2:	f2c0 80d8 	blt.w	801a086 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 8019ed6:	f11c 0c01 	adds.w	ip, ip, #1
 8019eda:	f100 80c9 	bmi.w	801a070 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8019ede:	4561      	cmp	r1, ip
 8019ee0:	f2c0 80c6 	blt.w	801a070 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8019ee4:	3301      	adds	r3, #1
 8019ee6:	f100 80c3 	bmi.w	801a070 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8019eea:	429a      	cmp	r2, r3
 8019eec:	f2c0 80c0 	blt.w	801a070 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8019ef0:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
 8019ef4:	4647      	mov	r7, r8
 8019ef6:	f1bb 0f00 	cmp.w	fp, #0
 8019efa:	f340 80e3 	ble.w	801a0c4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x268>
 8019efe:	9a2a      	ldr	r2, [sp, #168]	@ 0xa8
 8019f00:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 8019f02:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8019f06:	689b      	ldr	r3, [r3, #8]
 8019f08:	ea5f 422a 	movs.w	r2, sl, asr #16
 8019f0c:	ea4f 4c25 	mov.w	ip, r5, asr #16
 8019f10:	f3ca 3003 	ubfx	r0, sl, #12, #4
 8019f14:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8019f18:	f100 8121 	bmi.w	801a15e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 8019f1c:	f103 39ff 	add.w	r9, r3, #4294967295
 8019f20:	454a      	cmp	r2, r9
 8019f22:	f280 811c 	bge.w	801a15e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 8019f26:	f1bc 0f00 	cmp.w	ip, #0
 8019f2a:	f2c0 8118 	blt.w	801a15e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 8019f2e:	f10e 39ff 	add.w	r9, lr, #4294967295
 8019f32:	45cc      	cmp	ip, r9
 8019f34:	f280 8113 	bge.w	801a15e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 8019f38:	b21b      	sxth	r3, r3
 8019f3a:	fb0c 2203 	mla	r2, ip, r3, r2
 8019f3e:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8019f40:	eb04 0902 	add.w	r9, r4, r2
 8019f44:	5ca2      	ldrb	r2, [r4, r2]
 8019f46:	f836 e012 	ldrh.w	lr, [r6, r2, lsl #1]
 8019f4a:	2800      	cmp	r0, #0
 8019f4c:	f000 80fe 	beq.w	801a14c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 8019f50:	f899 2001 	ldrb.w	r2, [r9, #1]
 8019f54:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 8019f58:	9211      	str	r2, [sp, #68]	@ 0x44
 8019f5a:	b151      	cbz	r1, 8019f72 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8019f5c:	eb09 0203 	add.w	r2, r9, r3
 8019f60:	f819 3003 	ldrb.w	r3, [r9, r3]
 8019f64:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8019f68:	930f      	str	r3, [sp, #60]	@ 0x3c
 8019f6a:	7853      	ldrb	r3, [r2, #1]
 8019f6c:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8019f70:	9312      	str	r3, [sp, #72]	@ 0x48
 8019f72:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 8019f74:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 8019f76:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8019f7a:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 8019f7e:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 8019f82:	ea4c 0c03 	orr.w	ip, ip, r3
 8019f86:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 8019f88:	041b      	lsls	r3, r3, #16
 8019f8a:	fb10 f201 	smulbb	r2, r0, r1
 8019f8e:	f424 64fc 	bic.w	r4, r4, #2016	@ 0x7e0
 8019f92:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 8019f96:	10d2      	asrs	r2, r2, #3
 8019f98:	4323      	orrs	r3, r4
 8019f9a:	ebc2 0940 	rsb	r9, r2, r0, lsl #1
 8019f9e:	4353      	muls	r3, r2
 8019fa0:	fb09 330c 	mla	r3, r9, ip, r3
 8019fa4:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 8019fa8:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 8019fac:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 8019fb0:	ea4c 0e0e 	orr.w	lr, ip, lr
 8019fb4:	f1c1 0c10 	rsb	ip, r1, #16
 8019fb8:	ebac 0c00 	sub.w	ip, ip, r0
 8019fbc:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8019fc0:	fb0c 3c0e 	mla	ip, ip, lr, r3
 8019fc4:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8019fc6:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 8019fc8:	0418      	lsls	r0, r3, #16
 8019fca:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 8019fce:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 8019fd2:	4318      	orrs	r0, r3
 8019fd4:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 8019fd8:	fb02 c200 	mla	r2, r2, r0, ip
 8019fdc:	0d53      	lsrs	r3, r2, #21
 8019fde:	0952      	lsrs	r2, r2, #5
 8019fe0:	8838      	ldrh	r0, [r7, #0]
 8019fe2:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8019fe6:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 8019fea:	431a      	orrs	r2, r3
 8019fec:	b292      	uxth	r2, r2
 8019fee:	1201      	asrs	r1, r0, #8
 8019ff0:	f8bd 3034 	ldrh.w	r3, [sp, #52]	@ 0x34
 8019ff4:	ea4f 2c22 	mov.w	ip, r2, asr #8
 8019ff8:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 8019ffc:	fb11 f104 	smulbb	r1, r1, r4
 801a000:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 801a004:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801a008:	00c0      	lsls	r0, r0, #3
 801a00a:	fb0c 1c03 	mla	ip, ip, r3, r1
 801a00e:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
 801a012:	10d1      	asrs	r1, r2, #3
 801a014:	b2c0      	uxtb	r0, r0
 801a016:	00d2      	lsls	r2, r2, #3
 801a018:	b2d2      	uxtb	r2, r2
 801a01a:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 801a01e:	fb1e fe04 	smulbb	lr, lr, r4
 801a022:	fb10 f004 	smulbb	r0, r0, r4
 801a026:	fa1f fc8c 	uxth.w	ip, ip
 801a02a:	fb01 e103 	mla	r1, r1, r3, lr
 801a02e:	fb02 0303 	mla	r3, r2, r3, r0
 801a032:	b29a      	uxth	r2, r3
 801a034:	f10c 0301 	add.w	r3, ip, #1
 801a038:	b289      	uxth	r1, r1
 801a03a:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 801a03e:	1c53      	adds	r3, r2, #1
 801a040:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801a044:	1c4a      	adds	r2, r1, #1
 801a046:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801a04a:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 801a04e:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801a052:	0949      	lsrs	r1, r1, #5
 801a054:	ea43 030c 	orr.w	r3, r3, ip
 801a058:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801a05c:	430b      	orrs	r3, r1
 801a05e:	803b      	strh	r3, [r7, #0]
 801a060:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 801a062:	449a      	add	sl, r3
 801a064:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801a066:	3702      	adds	r7, #2
 801a068:	441d      	add	r5, r3
 801a06a:	f10b 3bff 	add.w	fp, fp, #4294967295
 801a06e:	e742      	b.n	8019ef6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801a070:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 801a072:	449a      	add	sl, r3
 801a074:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801a076:	441d      	add	r5, r3
 801a078:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801a07a:	3b01      	subs	r3, #1
 801a07c:	9309      	str	r3, [sp, #36]	@ 0x24
 801a07e:	f108 0802 	add.w	r8, r8, #2
 801a082:	e718      	b.n	8019eb6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 801a084:	d023      	beq.n	801a0ce <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
 801a086:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801a088:	9825      	ldr	r0, [sp, #148]	@ 0x94
 801a08a:	3b01      	subs	r3, #1
 801a08c:	fb00 a003 	mla	r0, r0, r3, sl
 801a090:	1400      	asrs	r0, r0, #16
 801a092:	f53f af2d 	bmi.w	8019ef0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801a096:	3901      	subs	r1, #1
 801a098:	4288      	cmp	r0, r1
 801a09a:	f6bf af29 	bge.w	8019ef0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801a09e:	9926      	ldr	r1, [sp, #152]	@ 0x98
 801a0a0:	fb01 5303 	mla	r3, r1, r3, r5
 801a0a4:	141b      	asrs	r3, r3, #16
 801a0a6:	f53f af23 	bmi.w	8019ef0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801a0aa:	3a01      	subs	r2, #1
 801a0ac:	4293      	cmp	r3, r2
 801a0ae:	f6bf af1f 	bge.w	8019ef0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801a0b2:	f8dd e024 	ldr.w	lr, [sp, #36]	@ 0x24
 801a0b6:	f8bd 9034 	ldrh.w	r9, [sp, #52]	@ 0x34
 801a0ba:	f8cd 8038 	str.w	r8, [sp, #56]	@ 0x38
 801a0be:	f1be 0f00 	cmp.w	lr, #0
 801a0c2:	dc6c      	bgt.n	801a19e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 801a0c4:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801a0c6:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801a0ca:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 801a0ce:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801a0d0:	2b00      	cmp	r3, #0
 801a0d2:	f340 810e 	ble.w	801a2f2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 801a0d6:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a0da:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801a0de:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801a0e2:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 801a0e4:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a0e8:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a0ec:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a0f0:	eef0 6a62 	vmov.f32	s13, s5
 801a0f4:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a0f8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a0fc:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a100:	ee16 aa90 	vmov	sl, s13
 801a104:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a108:	eef0 6a43 	vmov.f32	s13, s6
 801a10c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a110:	ee12 2a90 	vmov	r2, s5
 801a114:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a118:	fb92 f3f3 	sdiv	r3, r2, r3
 801a11c:	ee13 2a10 	vmov	r2, s6
 801a120:	9325      	str	r3, [sp, #148]	@ 0x94
 801a122:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 801a124:	fb92 f3f3 	sdiv	r3, r2, r3
 801a128:	9326      	str	r3, [sp, #152]	@ 0x98
 801a12a:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801a12c:	9a15      	ldr	r2, [sp, #84]	@ 0x54
 801a12e:	3b01      	subs	r3, #1
 801a130:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a134:	930c      	str	r3, [sp, #48]	@ 0x30
 801a136:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 801a138:	bf08      	it	eq
 801a13a:	4613      	moveq	r3, r2
 801a13c:	ee16 5a90 	vmov	r5, s13
 801a140:	9309      	str	r3, [sp, #36]	@ 0x24
 801a142:	eeb0 3a67 	vmov.f32	s6, s15
 801a146:	eef0 2a47 	vmov.f32	s5, s14
 801a14a:	e6a6      	b.n	8019e9a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801a14c:	2900      	cmp	r1, #0
 801a14e:	f43f af10 	beq.w	8019f72 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801a152:	f819 3003 	ldrb.w	r3, [r9, r3]
 801a156:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801a15a:	930f      	str	r3, [sp, #60]	@ 0x3c
 801a15c:	e709      	b.n	8019f72 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801a15e:	f112 0901 	adds.w	r9, r2, #1
 801a162:	f53f af7d 	bmi.w	801a060 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801a166:	454b      	cmp	r3, r9
 801a168:	f6ff af7a 	blt.w	801a060 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801a16c:	f11c 0901 	adds.w	r9, ip, #1
 801a170:	f53f af76 	bmi.w	801a060 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801a174:	45ce      	cmp	lr, r9
 801a176:	f6ff af73 	blt.w	801a060 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801a17a:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801a17c:	9202      	str	r2, [sp, #8]
 801a17e:	b21b      	sxth	r3, r3
 801a180:	fa0f f28e 	sxth.w	r2, lr
 801a184:	e9cd 1405 	strd	r1, r4, [sp, #20]
 801a188:	e9cd c003 	strd	ip, r0, [sp, #12]
 801a18c:	9201      	str	r2, [sp, #4]
 801a18e:	9300      	str	r3, [sp, #0]
 801a190:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 801a192:	9816      	ldr	r0, [sp, #88]	@ 0x58
 801a194:	4633      	mov	r3, r6
 801a196:	4639      	mov	r1, r7
 801a198:	f7ff fd8e 	bl	8019cb8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>
 801a19c:	e760      	b.n	801a060 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801a19e:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 801a1a0:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801a1a2:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 801a1a6:	ea4f 422a 	mov.w	r2, sl, asr #16
 801a1aa:	1429      	asrs	r1, r5, #16
 801a1ac:	fb03 2101 	mla	r1, r3, r1, r2
 801a1b0:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 801a1b2:	440a      	add	r2, r1
 801a1b4:	5c61      	ldrb	r1, [r4, r1]
 801a1b6:	f3ca 3c03 	ubfx	ip, sl, #12, #4
 801a1ba:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801a1be:	f836 1011 	ldrh.w	r1, [r6, r1, lsl #1]
 801a1c2:	f1bc 0f00 	cmp.w	ip, #0
 801a1c6:	f000 808c 	beq.w	801a2e2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x486>
 801a1ca:	7857      	ldrb	r7, [r2, #1]
 801a1cc:	f836 4017 	ldrh.w	r4, [r6, r7, lsl #1]
 801a1d0:	9413      	str	r4, [sp, #76]	@ 0x4c
 801a1d2:	b140      	cbz	r0, 801a1e6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801a1d4:	18d7      	adds	r7, r2, r3
 801a1d6:	5cd3      	ldrb	r3, [r2, r3]
 801a1d8:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801a1dc:	9310      	str	r3, [sp, #64]	@ 0x40
 801a1de:	787b      	ldrb	r3, [r7, #1]
 801a1e0:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801a1e4:	9314      	str	r3, [sp, #80]	@ 0x50
 801a1e6:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 801a1e8:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801a1ea:	fb1c f200 	smulbb	r2, ip, r0
 801a1ee:	041f      	lsls	r7, r3, #16
 801a1f0:	10d2      	asrs	r2, r2, #3
 801a1f2:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801a1f6:	f007 67fc 	and.w	r7, r7, #132120576	@ 0x7e00000
 801a1fa:	431f      	orrs	r7, r3
 801a1fc:	ebc2 034c 	rsb	r3, r2, ip, lsl #1
 801a200:	9317      	str	r3, [sp, #92]	@ 0x5c
 801a202:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 801a204:	041b      	lsls	r3, r3, #16
 801a206:	f424 6bfc 	bic.w	fp, r4, #2016	@ 0x7e0
 801a20a:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801a20e:	ea43 030b 	orr.w	r3, r3, fp
 801a212:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
 801a214:	4353      	muls	r3, r2
 801a216:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801a21a:	fb04 3707 	mla	r7, r4, r7, r3
 801a21e:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 801a222:	f00b 63fc 	and.w	r3, fp, #132120576	@ 0x7e00000
 801a226:	ea43 0b01 	orr.w	fp, r3, r1
 801a22a:	f1c0 0110 	rsb	r1, r0, #16
 801a22e:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801a230:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 801a232:	eba1 0c0c 	sub.w	ip, r1, ip
 801a236:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 801a23a:	fb0c 770b 	mla	r7, ip, fp, r7
 801a23e:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801a242:	f423 6bfc 	bic.w	fp, r3, #2016	@ 0x7e0
 801a246:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 801a24a:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 801a24e:	ea4c 0c0b 	orr.w	ip, ip, fp
 801a252:	fb02 770c 	mla	r7, r2, ip, r7
 801a256:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 801a258:	0d79      	lsrs	r1, r7, #21
 801a25a:	097f      	lsrs	r7, r7, #5
 801a25c:	8812      	ldrh	r2, [r2, #0]
 801a25e:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801a262:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
 801a266:	430f      	orrs	r7, r1
 801a268:	b2bb      	uxth	r3, r7
 801a26a:	1211      	asrs	r1, r2, #8
 801a26c:	1218      	asrs	r0, r3, #8
 801a26e:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 801a272:	fb11 f104 	smulbb	r1, r1, r4
 801a276:	10d7      	asrs	r7, r2, #3
 801a278:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801a27c:	00d2      	lsls	r2, r2, #3
 801a27e:	fb00 1009 	mla	r0, r0, r9, r1
 801a282:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801a286:	10d9      	asrs	r1, r3, #3
 801a288:	b2d2      	uxtb	r2, r2
 801a28a:	00db      	lsls	r3, r3, #3
 801a28c:	fb17 f704 	smulbb	r7, r7, r4
 801a290:	fb12 f204 	smulbb	r2, r2, r4
 801a294:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 801a298:	b2db      	uxtb	r3, r3
 801a29a:	b280      	uxth	r0, r0
 801a29c:	fb01 7109 	mla	r1, r1, r9, r7
 801a2a0:	fb03 2309 	mla	r3, r3, r9, r2
 801a2a4:	b29b      	uxth	r3, r3
 801a2a6:	b289      	uxth	r1, r1
 801a2a8:	1c42      	adds	r2, r0, #1
 801a2aa:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801a2ae:	1c4f      	adds	r7, r1, #1
 801a2b0:	1c5a      	adds	r2, r3, #1
 801a2b2:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801a2b6:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 801a2ba:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
 801a2be:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801a2c2:	0949      	lsrs	r1, r1, #5
 801a2c4:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801a2c6:	4310      	orrs	r0, r2
 801a2c8:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801a2cc:	4308      	orrs	r0, r1
 801a2ce:	f823 0b02 	strh.w	r0, [r3], #2
 801a2d2:	930e      	str	r3, [sp, #56]	@ 0x38
 801a2d4:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 801a2d6:	449a      	add	sl, r3
 801a2d8:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801a2da:	f10e 3eff 	add.w	lr, lr, #4294967295
 801a2de:	441d      	add	r5, r3
 801a2e0:	e6ed      	b.n	801a0be <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x262>
 801a2e2:	2800      	cmp	r0, #0
 801a2e4:	f43f af7f 	beq.w	801a1e6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801a2e8:	5cd3      	ldrb	r3, [r2, r3]
 801a2ea:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801a2ee:	9310      	str	r3, [sp, #64]	@ 0x40
 801a2f0:	e779      	b.n	801a1e6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801a2f2:	b019      	add	sp, #100	@ 0x64
 801a2f4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801a2f8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 801a2f8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801a2fc:	e9dd 480a 	ldrd	r4, r8, [sp, #40]	@ 0x28
 801a300:	f9bd e020 	ldrsh.w	lr, [sp, #32]
 801a304:	f9bd a024 	ldrsh.w	sl, [sp, #36]	@ 0x24
 801a308:	f89d 5030 	ldrb.w	r5, [sp, #48]	@ 0x30
 801a30c:	f89d 6034 	ldrb.w	r6, [sp, #52]	@ 0x34
 801a310:	8808      	ldrh	r0, [r1, #0]
 801a312:	fb08 470e 	mla	r7, r8, lr, r4
 801a316:	f1b8 0f00 	cmp.w	r8, #0
 801a31a:	eb02 0907 	add.w	r9, r2, r7
 801a31e:	db67      	blt.n	801a3f0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 801a320:	45c2      	cmp	sl, r8
 801a322:	dd65      	ble.n	801a3f0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 801a324:	2c00      	cmp	r4, #0
 801a326:	db61      	blt.n	801a3ec <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 801a328:	45a6      	cmp	lr, r4
 801a32a:	dd5f      	ble.n	801a3ec <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 801a32c:	5dd2      	ldrb	r2, [r2, r7]
 801a32e:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 801a332:	1c62      	adds	r2, r4, #1
 801a334:	d45f      	bmi.n	801a3f6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 801a336:	4596      	cmp	lr, r2
 801a338:	dd5d      	ble.n	801a3f6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 801a33a:	2d00      	cmp	r5, #0
 801a33c:	d05b      	beq.n	801a3f6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 801a33e:	f899 2001 	ldrb.w	r2, [r9, #1]
 801a342:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
 801a346:	f118 0801 	adds.w	r8, r8, #1
 801a34a:	d458      	bmi.n	801a3fe <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 801a34c:	45c2      	cmp	sl, r8
 801a34e:	dd56      	ble.n	801a3fe <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 801a350:	2e00      	cmp	r6, #0
 801a352:	d054      	beq.n	801a3fe <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 801a354:	2c00      	cmp	r4, #0
 801a356:	db50      	blt.n	801a3fa <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 801a358:	45a6      	cmp	lr, r4
 801a35a:	dd4e      	ble.n	801a3fa <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 801a35c:	f819 200e 	ldrb.w	r2, [r9, lr]
 801a360:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
 801a364:	3401      	adds	r4, #1
 801a366:	d407      	bmi.n	801a378 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 801a368:	45a6      	cmp	lr, r4
 801a36a:	dd05      	ble.n	801a378 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 801a36c:	b125      	cbz	r5, 801a378 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 801a36e:	44ce      	add	lr, r9
 801a370:	f89e 0001 	ldrb.w	r0, [lr, #1]
 801a374:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 801a378:	ea4f 430c 	mov.w	r3, ip, lsl #16
 801a37c:	fb15 f406 	smulbb	r4, r5, r6
 801a380:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801a384:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 801a388:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 801a38c:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 801a390:	ea43 0c0c 	orr.w	ip, r3, ip
 801a394:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
 801a398:	f1c6 0310 	rsb	r3, r6, #16
 801a39c:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
 801a3a0:	1b5b      	subs	r3, r3, r5
 801a3a2:	ea4e 0707 	orr.w	r7, lr, r7
 801a3a6:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 801a3aa:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801a3ae:	437d      	muls	r5, r7
 801a3b0:	fb03 5c0c 	mla	ip, r3, ip, r5
 801a3b4:	0403      	lsls	r3, r0, #16
 801a3b6:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801a3ba:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801a3be:	4318      	orrs	r0, r3
 801a3c0:	0413      	lsls	r3, r2, #16
 801a3c2:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801a3c6:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801a3ca:	4313      	orrs	r3, r2
 801a3cc:	fb04 c000 	mla	r0, r4, r0, ip
 801a3d0:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 801a3d4:	fb06 0003 	mla	r0, r6, r3, r0
 801a3d8:	0d43      	lsrs	r3, r0, #21
 801a3da:	0940      	lsrs	r0, r0, #5
 801a3dc:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801a3e0:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801a3e4:	4318      	orrs	r0, r3
 801a3e6:	8008      	strh	r0, [r1, #0]
 801a3e8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801a3ec:	4684      	mov	ip, r0
 801a3ee:	e7a0      	b.n	801a332 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x3a>
 801a3f0:	4607      	mov	r7, r0
 801a3f2:	4684      	mov	ip, r0
 801a3f4:	e7a7      	b.n	801a346 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 801a3f6:	4607      	mov	r7, r0
 801a3f8:	e7a5      	b.n	801a346 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 801a3fa:	4602      	mov	r2, r0
 801a3fc:	e7b2      	b.n	801a364 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x6c>
 801a3fe:	4602      	mov	r2, r0
 801a400:	e7ba      	b.n	801a378 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>

0801a402 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a402:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a406:	b093      	sub	sp, #76	@ 0x4c
 801a408:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	@ 0x74
 801a40c:	920f      	str	r2, [sp, #60]	@ 0x3c
 801a40e:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 801a410:	9108      	str	r1, [sp, #32]
 801a412:	9306      	str	r3, [sp, #24]
 801a414:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	@ 0x88
 801a418:	9010      	str	r0, [sp, #64]	@ 0x40
 801a41a:	6850      	ldr	r0, [r2, #4]
 801a41c:	6812      	ldr	r2, [r2, #0]
 801a41e:	fb00 1303 	mla	r3, r0, r3, r1
 801a422:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 801a426:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801a428:	681b      	ldr	r3, [r3, #0]
 801a42a:	9307      	str	r3, [sp, #28]
 801a42c:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801a42e:	685f      	ldr	r7, [r3, #4]
 801a430:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 801a434:	3704      	adds	r7, #4
 801a436:	9b08      	ldr	r3, [sp, #32]
 801a438:	2b00      	cmp	r3, #0
 801a43a:	dc03      	bgt.n	801a444 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 801a43c:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801a43e:	2b00      	cmp	r3, #0
 801a440:	f340 81b2 	ble.w	801a7a8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 801a444:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801a446:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801a44a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801a44e:	1e48      	subs	r0, r1, #1
 801a450:	f102 3cff 	add.w	ip, r2, #4294967295
 801a454:	9b06      	ldr	r3, [sp, #24]
 801a456:	2b00      	cmp	r3, #0
 801a458:	f340 80a9 	ble.w	801a5ae <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 801a45c:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801a460:	ea4f 4326 	mov.w	r3, r6, asr #16
 801a464:	d406      	bmi.n	801a474 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801a466:	4586      	cmp	lr, r0
 801a468:	da04      	bge.n	801a474 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801a46a:	2b00      	cmp	r3, #0
 801a46c:	db02      	blt.n	801a474 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801a46e:	4563      	cmp	r3, ip
 801a470:	f2c0 809e 	blt.w	801a5b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801a474:	f11e 0e01 	adds.w	lr, lr, #1
 801a478:	f100 808f 	bmi.w	801a59a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801a47c:	4571      	cmp	r1, lr
 801a47e:	f2c0 808c 	blt.w	801a59a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801a482:	3301      	adds	r3, #1
 801a484:	f100 8089 	bmi.w	801a59a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801a488:	429a      	cmp	r2, r3
 801a48a:	f2c0 8086 	blt.w	801a59a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801a48e:	f8dd b018 	ldr.w	fp, [sp, #24]
 801a492:	46c8      	mov	r8, r9
 801a494:	f1bb 0f00 	cmp.w	fp, #0
 801a498:	f340 80a6 	ble.w	801a5e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 801a49c:	9a24      	ldr	r2, [sp, #144]	@ 0x90
 801a49e:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801a4a0:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801a4a4:	689b      	ldr	r3, [r3, #8]
 801a4a6:	1422      	asrs	r2, r4, #16
 801a4a8:	ea4f 4c26 	mov.w	ip, r6, asr #16
 801a4ac:	f3c4 3003 	ubfx	r0, r4, #12, #4
 801a4b0:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801a4b4:	f100 80e3 	bmi.w	801a67e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801a4b8:	f103 3aff 	add.w	sl, r3, #4294967295
 801a4bc:	4552      	cmp	r2, sl
 801a4be:	f280 80de 	bge.w	801a67e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801a4c2:	f1bc 0f00 	cmp.w	ip, #0
 801a4c6:	f2c0 80da 	blt.w	801a67e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801a4ca:	f10e 3aff 	add.w	sl, lr, #4294967295
 801a4ce:	45d4      	cmp	ip, sl
 801a4d0:	f280 80d5 	bge.w	801a67e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801a4d4:	b21b      	sxth	r3, r3
 801a4d6:	fb0c 2203 	mla	r2, ip, r3, r2
 801a4da:	9d07      	ldr	r5, [sp, #28]
 801a4dc:	eb05 0a02 	add.w	sl, r5, r2
 801a4e0:	5caa      	ldrb	r2, [r5, r2]
 801a4e2:	f837 e012 	ldrh.w	lr, [r7, r2, lsl #1]
 801a4e6:	2800      	cmp	r0, #0
 801a4e8:	f000 80c0 	beq.w	801a66c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26a>
 801a4ec:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801a4f0:	f837 2012 	ldrh.w	r2, [r7, r2, lsl #1]
 801a4f4:	920b      	str	r2, [sp, #44]	@ 0x2c
 801a4f6:	b151      	cbz	r1, 801a50e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 801a4f8:	eb0a 0203 	add.w	r2, sl, r3
 801a4fc:	f81a 3003 	ldrb.w	r3, [sl, r3]
 801a500:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801a504:	9309      	str	r3, [sp, #36]	@ 0x24
 801a506:	7853      	ldrb	r3, [r2, #1]
 801a508:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801a50c:	930c      	str	r3, [sp, #48]	@ 0x30
 801a50e:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801a510:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 801a512:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801a516:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 801a51a:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801a51e:	ea4c 0c03 	orr.w	ip, ip, r3
 801a522:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801a524:	041b      	lsls	r3, r3, #16
 801a526:	fb10 f201 	smulbb	r2, r0, r1
 801a52a:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801a52e:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
 801a532:	10d2      	asrs	r2, r2, #3
 801a534:	432b      	orrs	r3, r5
 801a536:	ebc2 0a40 	rsb	sl, r2, r0, lsl #1
 801a53a:	4353      	muls	r3, r2
 801a53c:	fb0a 330c 	mla	r3, sl, ip, r3
 801a540:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 801a544:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 801a548:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 801a54c:	ea4c 0e0e 	orr.w	lr, ip, lr
 801a550:	f1c1 0c10 	rsb	ip, r1, #16
 801a554:	ebac 0c00 	sub.w	ip, ip, r0
 801a558:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 801a55c:	fb0c 3c0e 	mla	ip, ip, lr, r3
 801a560:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801a562:	0418      	lsls	r0, r3, #16
 801a564:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 801a568:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801a56c:	4318      	orrs	r0, r3
 801a56e:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 801a572:	fb02 c200 	mla	r2, r2, r0, ip
 801a576:	0d53      	lsrs	r3, r2, #21
 801a578:	0952      	lsrs	r2, r2, #5
 801a57a:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801a57e:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801a582:	431a      	orrs	r2, r3
 801a584:	f8a8 2000 	strh.w	r2, [r8]
 801a588:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801a58a:	441c      	add	r4, r3
 801a58c:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801a58e:	f108 0802 	add.w	r8, r8, #2
 801a592:	441e      	add	r6, r3
 801a594:	f10b 3bff 	add.w	fp, fp, #4294967295
 801a598:	e77c      	b.n	801a494 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801a59a:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801a59c:	441c      	add	r4, r3
 801a59e:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801a5a0:	441e      	add	r6, r3
 801a5a2:	9b06      	ldr	r3, [sp, #24]
 801a5a4:	3b01      	subs	r3, #1
 801a5a6:	9306      	str	r3, [sp, #24]
 801a5a8:	f109 0902 	add.w	r9, r9, #2
 801a5ac:	e752      	b.n	801a454 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801a5ae:	d020      	beq.n	801a5f2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801a5b0:	9b06      	ldr	r3, [sp, #24]
 801a5b2:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 801a5b4:	3b01      	subs	r3, #1
 801a5b6:	fb00 4003 	mla	r0, r0, r3, r4
 801a5ba:	1400      	asrs	r0, r0, #16
 801a5bc:	f53f af67 	bmi.w	801a48e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801a5c0:	3901      	subs	r1, #1
 801a5c2:	4288      	cmp	r0, r1
 801a5c4:	f6bf af63 	bge.w	801a48e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801a5c8:	9920      	ldr	r1, [sp, #128]	@ 0x80
 801a5ca:	fb01 6303 	mla	r3, r1, r3, r6
 801a5ce:	141b      	asrs	r3, r3, #16
 801a5d0:	f53f af5d 	bmi.w	801a48e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801a5d4:	3a01      	subs	r2, #1
 801a5d6:	4293      	cmp	r3, r2
 801a5d8:	f6bf af59 	bge.w	801a48e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801a5dc:	f8dd 8018 	ldr.w	r8, [sp, #24]
 801a5e0:	46ca      	mov	sl, r9
 801a5e2:	f1b8 0f00 	cmp.w	r8, #0
 801a5e6:	dc67      	bgt.n	801a6b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 801a5e8:	9b06      	ldr	r3, [sp, #24]
 801a5ea:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801a5ee:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 801a5f2:	9b08      	ldr	r3, [sp, #32]
 801a5f4:	2b00      	cmp	r3, #0
 801a5f6:	f340 80d7 	ble.w	801a7a8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 801a5fa:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a5fe:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a602:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801a606:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801a608:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a60c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a610:	eeb0 6a62 	vmov.f32	s12, s5
 801a614:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a618:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a61c:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a620:	ee16 4a10 	vmov	r4, s12
 801a624:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a628:	eeb0 6a43 	vmov.f32	s12, s6
 801a62c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a630:	ee12 2a90 	vmov	r2, s5
 801a634:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a638:	fb92 f3f3 	sdiv	r3, r2, r3
 801a63c:	ee13 2a10 	vmov	r2, s6
 801a640:	931f      	str	r3, [sp, #124]	@ 0x7c
 801a642:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801a644:	fb92 f3f3 	sdiv	r3, r2, r3
 801a648:	9320      	str	r3, [sp, #128]	@ 0x80
 801a64a:	9b08      	ldr	r3, [sp, #32]
 801a64c:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801a64e:	3b01      	subs	r3, #1
 801a650:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a654:	9308      	str	r3, [sp, #32]
 801a656:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801a658:	bf08      	it	eq
 801a65a:	4613      	moveq	r3, r2
 801a65c:	ee16 6a10 	vmov	r6, s12
 801a660:	9306      	str	r3, [sp, #24]
 801a662:	eeb0 3a67 	vmov.f32	s6, s15
 801a666:	eef0 2a47 	vmov.f32	s5, s14
 801a66a:	e6e4      	b.n	801a436 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 801a66c:	2900      	cmp	r1, #0
 801a66e:	f43f af4e 	beq.w	801a50e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 801a672:	f81a 3003 	ldrb.w	r3, [sl, r3]
 801a676:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801a67a:	9309      	str	r3, [sp, #36]	@ 0x24
 801a67c:	e747      	b.n	801a50e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 801a67e:	f112 0a01 	adds.w	sl, r2, #1
 801a682:	d481      	bmi.n	801a588 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801a684:	4553      	cmp	r3, sl
 801a686:	f6ff af7f 	blt.w	801a588 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801a68a:	f11c 0a01 	adds.w	sl, ip, #1
 801a68e:	f53f af7b 	bmi.w	801a588 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801a692:	45d6      	cmp	lr, sl
 801a694:	f6ff af78 	blt.w	801a588 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801a698:	e9cd 2c02 	strd	r2, ip, [sp, #8]
 801a69c:	b21b      	sxth	r3, r3
 801a69e:	fa0f f28e 	sxth.w	r2, lr
 801a6a2:	e9cd 0104 	strd	r0, r1, [sp, #16]
 801a6a6:	9201      	str	r2, [sp, #4]
 801a6a8:	9300      	str	r3, [sp, #0]
 801a6aa:	9a07      	ldr	r2, [sp, #28]
 801a6ac:	9810      	ldr	r0, [sp, #64]	@ 0x40
 801a6ae:	463b      	mov	r3, r7
 801a6b0:	4641      	mov	r1, r8
 801a6b2:	f7ff fe21 	bl	801a2f8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 801a6b6:	e767      	b.n	801a588 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801a6b8:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801a6ba:	9d07      	ldr	r5, [sp, #28]
 801a6bc:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 801a6c0:	1422      	asrs	r2, r4, #16
 801a6c2:	1431      	asrs	r1, r6, #16
 801a6c4:	fb03 2101 	mla	r1, r3, r1, r2
 801a6c8:	9a07      	ldr	r2, [sp, #28]
 801a6ca:	440a      	add	r2, r1
 801a6cc:	5c69      	ldrb	r1, [r5, r1]
 801a6ce:	f3c4 3e03 	ubfx	lr, r4, #12, #4
 801a6d2:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801a6d6:	f837 1011 	ldrh.w	r1, [r7, r1, lsl #1]
 801a6da:	f1be 0f00 	cmp.w	lr, #0
 801a6de:	d05c      	beq.n	801a79a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 801a6e0:	f892 c001 	ldrb.w	ip, [r2, #1]
 801a6e4:	f837 501c 	ldrh.w	r5, [r7, ip, lsl #1]
 801a6e8:	950d      	str	r5, [sp, #52]	@ 0x34
 801a6ea:	b150      	cbz	r0, 801a702 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 801a6ec:	eb02 0c03 	add.w	ip, r2, r3
 801a6f0:	5cd3      	ldrb	r3, [r2, r3]
 801a6f2:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801a6f6:	930a      	str	r3, [sp, #40]	@ 0x28
 801a6f8:	f89c 3001 	ldrb.w	r3, [ip, #1]
 801a6fc:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801a700:	930e      	str	r3, [sp, #56]	@ 0x38
 801a702:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801a704:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 801a706:	fb1e f200 	smulbb	r2, lr, r0
 801a70a:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801a70e:	10d2      	asrs	r2, r2, #3
 801a710:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801a714:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 801a718:	ea4c 0c03 	orr.w	ip, ip, r3
 801a71c:	ebc2 034e 	rsb	r3, r2, lr, lsl #1
 801a720:	9311      	str	r3, [sp, #68]	@ 0x44
 801a722:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801a724:	041b      	lsls	r3, r3, #16
 801a726:	f425 6bfc 	bic.w	fp, r5, #2016	@ 0x7e0
 801a72a:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801a72e:	ea43 030b 	orr.w	r3, r3, fp
 801a732:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801a734:	4353      	muls	r3, r2
 801a736:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801a73a:	fb05 3c0c 	mla	ip, r5, ip, r3
 801a73e:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 801a742:	f00b 63fc 	and.w	r3, fp, #132120576	@ 0x7e00000
 801a746:	ea43 0b01 	orr.w	fp, r3, r1
 801a74a:	f1c0 0110 	rsb	r1, r0, #16
 801a74e:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801a750:	eba1 0e0e 	sub.w	lr, r1, lr
 801a754:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
 801a758:	fb0e cc0b 	mla	ip, lr, fp, ip
 801a75c:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 801a760:	f423 6efc 	bic.w	lr, r3, #2016	@ 0x7e0
 801a764:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801a768:	ea4b 0e0e 	orr.w	lr, fp, lr
 801a76c:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 801a770:	fb02 cc0e 	mla	ip, r2, lr, ip
 801a774:	ea4f 535c 	mov.w	r3, ip, lsr #21
 801a778:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801a77c:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801a780:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 801a784:	ea43 0c0c 	orr.w	ip, r3, ip
 801a788:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801a78a:	f82a cb02 	strh.w	ip, [sl], #2
 801a78e:	441c      	add	r4, r3
 801a790:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801a792:	f108 38ff 	add.w	r8, r8, #4294967295
 801a796:	441e      	add	r6, r3
 801a798:	e723      	b.n	801a5e2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 801a79a:	2800      	cmp	r0, #0
 801a79c:	d0b1      	beq.n	801a702 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 801a79e:	5cd3      	ldrb	r3, [r2, r3]
 801a7a0:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801a7a4:	930a      	str	r3, [sp, #40]	@ 0x28
 801a7a6:	e7ac      	b.n	801a702 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 801a7a8:	b013      	add	sp, #76	@ 0x4c
 801a7aa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801a7ae <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>:
 801a7ae:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a7b2:	880d      	ldrh	r5, [r1, #0]
 801a7b4:	b087      	sub	sp, #28
 801a7b6:	10ef      	asrs	r7, r5, #3
 801a7b8:	ea4f 2a25 	mov.w	sl, r5, asr #8
 801a7bc:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801a7c0:	00ed      	lsls	r5, r5, #3
 801a7c2:	9701      	str	r7, [sp, #4]
 801a7c4:	b2ed      	uxtb	r5, r5
 801a7c6:	9502      	str	r5, [sp, #8]
 801a7c8:	9d01      	ldr	r5, [sp, #4]
 801a7ca:	9103      	str	r1, [sp, #12]
 801a7cc:	e9dd 0612 	ldrd	r0, r6, [sp, #72]	@ 0x48
 801a7d0:	f9bd 9040 	ldrsh.w	r9, [sp, #64]	@ 0x40
 801a7d4:	9902      	ldr	r1, [sp, #8]
 801a7d6:	f9bd b044 	ldrsh.w	fp, [sp, #68]	@ 0x44
 801a7da:	f89d 4050 	ldrb.w	r4, [sp, #80]	@ 0x50
 801a7de:	f89d e054 	ldrb.w	lr, [sp, #84]	@ 0x54
 801a7e2:	f89d 8058 	ldrb.w	r8, [sp, #88]	@ 0x58
 801a7e6:	f00a 0af8 	and.w	sl, sl, #248	@ 0xf8
 801a7ea:	022d      	lsls	r5, r5, #8
 801a7ec:	ea45 450a 	orr.w	r5, r5, sl, lsl #16
 801a7f0:	fb06 0709 	mla	r7, r6, r9, r0
 801a7f4:	430d      	orrs	r5, r1
 801a7f6:	2e00      	cmp	r6, #0
 801a7f8:	eb02 0c07 	add.w	ip, r2, r7
 801a7fc:	9505      	str	r5, [sp, #20]
 801a7fe:	f2c0 80b6 	blt.w	801a96e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 801a802:	45b3      	cmp	fp, r6
 801a804:	f340 80b3 	ble.w	801a96e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 801a808:	2800      	cmp	r0, #0
 801a80a:	f2c0 80ae 	blt.w	801a96a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 801a80e:	4581      	cmp	r9, r0
 801a810:	f340 80ab 	ble.w	801a96a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 801a814:	5dd7      	ldrb	r7, [r2, r7]
 801a816:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 801a81a:	441f      	add	r7, r3
 801a81c:	1c42      	adds	r2, r0, #1
 801a81e:	f100 80a9 	bmi.w	801a974 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 801a822:	4591      	cmp	r9, r2
 801a824:	f340 80a6 	ble.w	801a974 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 801a828:	2c00      	cmp	r4, #0
 801a82a:	f000 80a3 	beq.w	801a974 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 801a82e:	f89c 5001 	ldrb.w	r5, [ip, #1]
 801a832:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801a836:	441d      	add	r5, r3
 801a838:	3601      	adds	r6, #1
 801a83a:	f100 809f 	bmi.w	801a97c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 801a83e:	45b3      	cmp	fp, r6
 801a840:	f340 809c 	ble.w	801a97c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 801a844:	f1be 0f00 	cmp.w	lr, #0
 801a848:	f000 8098 	beq.w	801a97c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 801a84c:	2800      	cmp	r0, #0
 801a84e:	f2c0 8093 	blt.w	801a978 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 801a852:	4581      	cmp	r9, r0
 801a854:	f340 8090 	ble.w	801a978 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 801a858:	f81c 6009 	ldrb.w	r6, [ip, r9]
 801a85c:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801a860:	441e      	add	r6, r3
 801a862:	3001      	adds	r0, #1
 801a864:	f100 808d 	bmi.w	801a982 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 801a868:	4581      	cmp	r9, r0
 801a86a:	f340 808a 	ble.w	801a982 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 801a86e:	2c00      	cmp	r4, #0
 801a870:	f000 8087 	beq.w	801a982 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 801a874:	44e1      	add	r9, ip
 801a876:	f899 2001 	ldrb.w	r2, [r9, #1]
 801a87a:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801a87e:	4413      	add	r3, r2
 801a880:	b2a4      	uxth	r4, r4
 801a882:	fa1f fe8e 	uxth.w	lr, lr
 801a886:	fb04 fb0e 	mul.w	fp, r4, lr
 801a88a:	0124      	lsls	r4, r4, #4
 801a88c:	ebcb 1e0e 	rsb	lr, fp, lr, lsl #4
 801a890:	f5c4 7980 	rsb	r9, r4, #256	@ 0x100
 801a894:	eba4 040b 	sub.w	r4, r4, fp
 801a898:	fa1f f08e 	uxth.w	r0, lr
 801a89c:	b2a2      	uxth	r2, r4
 801a89e:	78ac      	ldrb	r4, [r5, #2]
 801a8a0:	f897 c002 	ldrb.w	ip, [r7, #2]
 801a8a4:	9901      	ldr	r1, [sp, #4]
 801a8a6:	eba9 0900 	sub.w	r9, r9, r0
 801a8aa:	fa1f f989 	uxth.w	r9, r9
 801a8ae:	4354      	muls	r4, r2
 801a8b0:	fb09 440c 	mla	r4, r9, ip, r4
 801a8b4:	f896 c002 	ldrb.w	ip, [r6, #2]
 801a8b8:	fb00 440c 	mla	r4, r0, ip, r4
 801a8bc:	f893 c002 	ldrb.w	ip, [r3, #2]
 801a8c0:	fa1f fe88 	uxth.w	lr, r8
 801a8c4:	ea6f 0808 	mvn.w	r8, r8
 801a8c8:	fa5f f888 	uxtb.w	r8, r8
 801a8cc:	fb0b 4c0c 	mla	ip, fp, ip, r4
 801a8d0:	fb1a fa08 	smulbb	sl, sl, r8
 801a8d4:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 801a8d8:	fb0c ac0e 	mla	ip, ip, lr, sl
 801a8dc:	f895 a001 	ldrb.w	sl, [r5, #1]
 801a8e0:	787c      	ldrb	r4, [r7, #1]
 801a8e2:	782d      	ldrb	r5, [r5, #0]
 801a8e4:	783f      	ldrb	r7, [r7, #0]
 801a8e6:	fb02 fa0a 	mul.w	sl, r2, sl
 801a8ea:	fb09 aa04 	mla	sl, r9, r4, sl
 801a8ee:	7874      	ldrb	r4, [r6, #1]
 801a8f0:	436a      	muls	r2, r5
 801a8f2:	7835      	ldrb	r5, [r6, #0]
 801a8f4:	fb00 aa04 	mla	sl, r0, r4, sl
 801a8f8:	fb09 2207 	mla	r2, r9, r7, r2
 801a8fc:	785c      	ldrb	r4, [r3, #1]
 801a8fe:	781b      	ldrb	r3, [r3, #0]
 801a900:	fb00 2005 	mla	r0, r0, r5, r2
 801a904:	fb0b a404 	mla	r4, fp, r4, sl
 801a908:	fb0b 0b03 	mla	fp, fp, r3, r0
 801a90c:	9b02      	ldr	r3, [sp, #8]
 801a90e:	fb11 fa08 	smulbb	sl, r1, r8
 801a912:	fa1f fc8c 	uxth.w	ip, ip
 801a916:	fb13 f808 	smulbb	r8, r3, r8
 801a91a:	f3cb 2b07 	ubfx	fp, fp, #8, #8
 801a91e:	f3c4 2407 	ubfx	r4, r4, #8, #8
 801a922:	fb04 a40e 	mla	r4, r4, lr, sl
 801a926:	f10c 0301 	add.w	r3, ip, #1
 801a92a:	fb0b 8e0e 	mla	lr, fp, lr, r8
 801a92e:	fa1f fe8e 	uxth.w	lr, lr
 801a932:	b2a4      	uxth	r4, r4
 801a934:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 801a938:	f40c 4378 	and.w	r3, ip, #63488	@ 0xf800
 801a93c:	f104 0a01 	add.w	sl, r4, #1
 801a940:	f10e 0c01 	add.w	ip, lr, #1
 801a944:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801a948:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 801a94c:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801a950:	0964      	lsrs	r4, r4, #5
 801a952:	ea4c 0c03 	orr.w	ip, ip, r3
 801a956:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 801a95a:	9b03      	ldr	r3, [sp, #12]
 801a95c:	ea4c 0c04 	orr.w	ip, ip, r4
 801a960:	f8a3 c000 	strh.w	ip, [r3]
 801a964:	b007      	add	sp, #28
 801a966:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a96a:	af05      	add	r7, sp, #20
 801a96c:	e756      	b.n	801a81c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x6e>
 801a96e:	ad05      	add	r5, sp, #20
 801a970:	462f      	mov	r7, r5
 801a972:	e761      	b.n	801a838 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 801a974:	ad05      	add	r5, sp, #20
 801a976:	e75f      	b.n	801a838 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 801a978:	ae05      	add	r6, sp, #20
 801a97a:	e772      	b.n	801a862 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb4>
 801a97c:	ab05      	add	r3, sp, #20
 801a97e:	461e      	mov	r6, r3
 801a980:	e77e      	b.n	801a880 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>
 801a982:	ab05      	add	r3, sp, #20
 801a984:	e77c      	b.n	801a880 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>

0801a986 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a986:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a98a:	b095      	sub	sp, #84	@ 0x54
 801a98c:	9212      	str	r2, [sp, #72]	@ 0x48
 801a98e:	9309      	str	r3, [sp, #36]	@ 0x24
 801a990:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
 801a992:	f89d 309c 	ldrb.w	r3, [sp, #156]	@ 0x9c
 801a996:	930f      	str	r3, [sp, #60]	@ 0x3c
 801a998:	910e      	str	r1, [sp, #56]	@ 0x38
 801a99a:	e9dd 1324 	ldrd	r1, r3, [sp, #144]	@ 0x90
 801a99e:	9013      	str	r0, [sp, #76]	@ 0x4c
 801a9a0:	6850      	ldr	r0, [r2, #4]
 801a9a2:	6812      	ldr	r2, [r2, #0]
 801a9a4:	fb00 1303 	mla	r3, r0, r3, r1
 801a9a8:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801a9ac:	930a      	str	r3, [sp, #40]	@ 0x28
 801a9ae:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801a9b0:	681b      	ldr	r3, [r3, #0]
 801a9b2:	930d      	str	r3, [sp, #52]	@ 0x34
 801a9b4:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801a9b6:	685c      	ldr	r4, [r3, #4]
 801a9b8:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801a9ba:	43db      	mvns	r3, r3
 801a9bc:	b2db      	uxtb	r3, r3
 801a9be:	3404      	adds	r4, #4
 801a9c0:	930b      	str	r3, [sp, #44]	@ 0x2c
 801a9c2:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801a9c4:	2b00      	cmp	r3, #0
 801a9c6:	dc03      	bgt.n	801a9d0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801a9c8:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 801a9ca:	2b00      	cmp	r3, #0
 801a9cc:	f340 8255 	ble.w	801ae7a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 801a9d0:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801a9d2:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801a9d6:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801a9da:	1e48      	subs	r0, r1, #1
 801a9dc:	1e55      	subs	r5, r2, #1
 801a9de:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801a9e0:	2b00      	cmp	r3, #0
 801a9e2:	f340 80f9 	ble.w	801abd8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 801a9e6:	9e1f      	ldr	r6, [sp, #124]	@ 0x7c
 801a9e8:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801a9ea:	1436      	asrs	r6, r6, #16
 801a9ec:	ea4f 4323 	mov.w	r3, r3, asr #16
 801a9f0:	d406      	bmi.n	801aa00 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801a9f2:	4286      	cmp	r6, r0
 801a9f4:	da04      	bge.n	801aa00 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801a9f6:	2b00      	cmp	r3, #0
 801a9f8:	db02      	blt.n	801aa00 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801a9fa:	42ab      	cmp	r3, r5
 801a9fc:	f2c0 80ed 	blt.w	801abda <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x254>
 801aa00:	3601      	adds	r6, #1
 801aa02:	f100 80da 	bmi.w	801abba <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801aa06:	42b1      	cmp	r1, r6
 801aa08:	f2c0 80d7 	blt.w	801abba <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801aa0c:	3301      	adds	r3, #1
 801aa0e:	f100 80d4 	bmi.w	801abba <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801aa12:	429a      	cmp	r2, r3
 801aa14:	f2c0 80d1 	blt.w	801abba <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801aa18:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801aa1a:	9311      	str	r3, [sp, #68]	@ 0x44
 801aa1c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801aa1e:	930c      	str	r3, [sp, #48]	@ 0x30
 801aa20:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801aa22:	2b00      	cmp	r3, #0
 801aa24:	f340 80fa 	ble.w	801ac1c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
 801aa28:	9826      	ldr	r0, [sp, #152]	@ 0x98
 801aa2a:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801aa2c:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 801aa2e:	68c6      	ldr	r6, [r0, #12]
 801aa30:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 801aa32:	141d      	asrs	r5, r3, #16
 801aa34:	f3c2 3103 	ubfx	r1, r2, #12, #4
 801aa38:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801aa3a:	9a26      	ldr	r2, [sp, #152]	@ 0x98
 801aa3c:	1400      	asrs	r0, r0, #16
 801aa3e:	f3c3 3303 	ubfx	r3, r3, #12, #4
 801aa42:	6892      	ldr	r2, [r2, #8]
 801aa44:	f100 813e 	bmi.w	801acc4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801aa48:	1e57      	subs	r7, r2, #1
 801aa4a:	42b8      	cmp	r0, r7
 801aa4c:	f280 813a 	bge.w	801acc4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801aa50:	2d00      	cmp	r5, #0
 801aa52:	f2c0 8137 	blt.w	801acc4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801aa56:	1e77      	subs	r7, r6, #1
 801aa58:	42bd      	cmp	r5, r7
 801aa5a:	f280 8133 	bge.w	801acc4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801aa5e:	b212      	sxth	r2, r2
 801aa60:	fb05 0002 	mla	r0, r5, r2, r0
 801aa64:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 801aa66:	f815 a000 	ldrb.w	sl, [r5, r0]
 801aa6a:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
 801aa6e:	182e      	adds	r6, r5, r0
 801aa70:	eb04 050a 	add.w	r5, r4, sl
 801aa74:	2b00      	cmp	r3, #0
 801aa76:	f000 8117 	beq.w	801aca8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x322>
 801aa7a:	f896 c001 	ldrb.w	ip, [r6, #1]
 801aa7e:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 801aa82:	44a4      	add	ip, r4
 801aa84:	2900      	cmp	r1, #0
 801aa86:	f000 8117 	beq.w	801acb8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x332>
 801aa8a:	18b0      	adds	r0, r6, r2
 801aa8c:	5cb2      	ldrb	r2, [r6, r2]
 801aa8e:	7840      	ldrb	r0, [r0, #1]
 801aa90:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801aa94:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801aa98:	4422      	add	r2, r4
 801aa9a:	4420      	add	r0, r4
 801aa9c:	b29b      	uxth	r3, r3
 801aa9e:	b289      	uxth	r1, r1
 801aaa0:	fb03 f901 	mul.w	r9, r3, r1
 801aaa4:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801aaa8:	011b      	lsls	r3, r3, #4
 801aaaa:	b289      	uxth	r1, r1
 801aaac:	f89c 7002 	ldrb.w	r7, [ip, #2]
 801aab0:	f895 b002 	ldrb.w	fp, [r5, #2]
 801aab4:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 801aab6:	f814 a00a 	ldrb.w	sl, [r4, sl]
 801aaba:	f8b6 e000 	ldrh.w	lr, [r6]
 801aabe:	f8bd 603c 	ldrh.w	r6, [sp, #60]	@ 0x3c
 801aac2:	f5c3 7880 	rsb	r8, r3, #256	@ 0x100
 801aac6:	eba3 0309 	sub.w	r3, r3, r9
 801aaca:	b29b      	uxth	r3, r3
 801aacc:	eba8 0801 	sub.w	r8, r8, r1
 801aad0:	fa1f f888 	uxth.w	r8, r8
 801aad4:	435f      	muls	r7, r3
 801aad6:	fb08 770b 	mla	r7, r8, fp, r7
 801aada:	f892 b002 	ldrb.w	fp, [r2, #2]
 801aade:	9310      	str	r3, [sp, #64]	@ 0x40
 801aae0:	fb01 770b 	mla	r7, r1, fp, r7
 801aae4:	f890 b002 	ldrb.w	fp, [r0, #2]
 801aae8:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801aaea:	fb09 770b 	mla	r7, r9, fp, r7
 801aaee:	ea4f 2b2e 	mov.w	fp, lr, asr #8
 801aaf2:	f00b 0bf8 	and.w	fp, fp, #248	@ 0xf8
 801aaf6:	fb1b fb03 	smulbb	fp, fp, r3
 801aafa:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801aafe:	fb07 b706 	mla	r7, r7, r6, fp
 801ab02:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801ab04:	f895 b001 	ldrb.w	fp, [r5, #1]
 801ab08:	f89c 5001 	ldrb.w	r5, [ip, #1]
 801ab0c:	f89c c000 	ldrb.w	ip, [ip]
 801ab10:	435d      	muls	r5, r3
 801ab12:	fb08 550b 	mla	r5, r8, fp, r5
 801ab16:	f892 b001 	ldrb.w	fp, [r2, #1]
 801ab1a:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801ab1c:	fb01 550b 	mla	r5, r1, fp, r5
 801ab20:	f890 b001 	ldrb.w	fp, [r0, #1]
 801ab24:	fb09 550b 	mla	r5, r9, fp, r5
 801ab28:	ea4f 0bee 	mov.w	fp, lr, asr #3
 801ab2c:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
 801ab30:	fb1b fb03 	smulbb	fp, fp, r3
 801ab34:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801ab36:	fb03 f30c 	mul.w	r3, r3, ip
 801ab3a:	f892 c000 	ldrb.w	ip, [r2]
 801ab3e:	fb08 330a 	mla	r3, r8, sl, r3
 801ab42:	fb01 330c 	mla	r3, r1, ip, r3
 801ab46:	f890 c000 	ldrb.w	ip, [r0]
 801ab4a:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801ab4e:	fb09 3c0c 	mla	ip, r9, ip, r3
 801ab52:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801ab54:	fa5f fe8e 	uxtb.w	lr, lr
 801ab58:	b2bf      	uxth	r7, r7
 801ab5a:	fb1e fe03 	smulbb	lr, lr, r3
 801ab5e:	f3c5 2507 	ubfx	r5, r5, #8, #8
 801ab62:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 801ab66:	fb05 b506 	mla	r5, r5, r6, fp
 801ab6a:	1c7b      	adds	r3, r7, #1
 801ab6c:	fb0c e606 	mla	r6, ip, r6, lr
 801ab70:	b2ad      	uxth	r5, r5
 801ab72:	b2b6      	uxth	r6, r6
 801ab74:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 801ab78:	f407 4378 	and.w	r3, r7, #63488	@ 0xf800
 801ab7c:	f105 0b01 	add.w	fp, r5, #1
 801ab80:	1c77      	adds	r7, r6, #1
 801ab82:	eb07 2716 	add.w	r7, r7, r6, lsr #8
 801ab86:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 801ab8a:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801ab8e:	096d      	lsrs	r5, r5, #5
 801ab90:	431f      	orrs	r7, r3
 801ab92:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801ab96:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801ab98:	433d      	orrs	r5, r7
 801ab9a:	801d      	strh	r5, [r3, #0]
 801ab9c:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801ab9e:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 801aba0:	3302      	adds	r3, #2
 801aba2:	930c      	str	r3, [sp, #48]	@ 0x30
 801aba4:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801aba6:	4413      	add	r3, r2
 801aba8:	931f      	str	r3, [sp, #124]	@ 0x7c
 801abaa:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 801abac:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801abae:	4413      	add	r3, r2
 801abb0:	9320      	str	r3, [sp, #128]	@ 0x80
 801abb2:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801abb4:	3b01      	subs	r3, #1
 801abb6:	9311      	str	r3, [sp, #68]	@ 0x44
 801abb8:	e732      	b.n	801aa20 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801abba:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801abbc:	9e21      	ldr	r6, [sp, #132]	@ 0x84
 801abbe:	4433      	add	r3, r6
 801abc0:	931f      	str	r3, [sp, #124]	@ 0x7c
 801abc2:	9e22      	ldr	r6, [sp, #136]	@ 0x88
 801abc4:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801abc6:	4433      	add	r3, r6
 801abc8:	9320      	str	r3, [sp, #128]	@ 0x80
 801abca:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801abcc:	3b01      	subs	r3, #1
 801abce:	9309      	str	r3, [sp, #36]	@ 0x24
 801abd0:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801abd2:	3302      	adds	r3, #2
 801abd4:	930a      	str	r3, [sp, #40]	@ 0x28
 801abd6:	e702      	b.n	801a9de <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801abd8:	d027      	beq.n	801ac2a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a4>
 801abda:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801abdc:	9821      	ldr	r0, [sp, #132]	@ 0x84
 801abde:	9d1f      	ldr	r5, [sp, #124]	@ 0x7c
 801abe0:	3b01      	subs	r3, #1
 801abe2:	fb00 5003 	mla	r0, r0, r3, r5
 801abe6:	1400      	asrs	r0, r0, #16
 801abe8:	f53f af16 	bmi.w	801aa18 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801abec:	3901      	subs	r1, #1
 801abee:	4288      	cmp	r0, r1
 801abf0:	f6bf af12 	bge.w	801aa18 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801abf4:	9922      	ldr	r1, [sp, #136]	@ 0x88
 801abf6:	9820      	ldr	r0, [sp, #128]	@ 0x80
 801abf8:	fb01 0303 	mla	r3, r1, r3, r0
 801abfc:	141b      	asrs	r3, r3, #16
 801abfe:	f53f af0b 	bmi.w	801aa18 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801ac02:	3a01      	subs	r2, #1
 801ac04:	4293      	cmp	r3, r2
 801ac06:	f6bf af07 	bge.w	801aa18 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801ac0a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801ac0c:	9311      	str	r3, [sp, #68]	@ 0x44
 801ac0e:	f8bd a03c 	ldrh.w	sl, [sp, #60]	@ 0x3c
 801ac12:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801ac14:	930c      	str	r3, [sp, #48]	@ 0x30
 801ac16:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801ac18:	2b00      	cmp	r3, #0
 801ac1a:	dc70      	bgt.n	801acfe <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 801ac1c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801ac1e:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 801ac20:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801ac24:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801ac28:	930a      	str	r3, [sp, #40]	@ 0x28
 801ac2a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801ac2c:	2b00      	cmp	r3, #0
 801ac2e:	f340 8124 	ble.w	801ae7a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 801ac32:	ee30 0a04 	vadd.f32	s0, s0, s8
 801ac36:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801ac3a:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801ac3e:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 801ac40:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801ac44:	ee31 1a05 	vadd.f32	s2, s2, s10
 801ac48:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801ac4c:	eef0 6a62 	vmov.f32	s13, s5
 801ac50:	ee61 7a27 	vmul.f32	s15, s2, s15
 801ac54:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801ac58:	ee77 2a62 	vsub.f32	s5, s14, s5
 801ac5c:	edcd 6a1f 	vstr	s13, [sp, #124]	@ 0x7c
 801ac60:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801ac64:	eef0 6a43 	vmov.f32	s13, s6
 801ac68:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801ac6c:	ee12 2a90 	vmov	r2, s5
 801ac70:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801ac74:	fb92 f3f3 	sdiv	r3, r2, r3
 801ac78:	ee13 2a10 	vmov	r2, s6
 801ac7c:	9321      	str	r3, [sp, #132]	@ 0x84
 801ac7e:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 801ac80:	fb92 f3f3 	sdiv	r3, r2, r3
 801ac84:	9322      	str	r3, [sp, #136]	@ 0x88
 801ac86:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801ac88:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 801ac8a:	3b01      	subs	r3, #1
 801ac8c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801ac90:	930e      	str	r3, [sp, #56]	@ 0x38
 801ac92:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 801ac94:	edcd 6a20 	vstr	s13, [sp, #128]	@ 0x80
 801ac98:	bf08      	it	eq
 801ac9a:	4613      	moveq	r3, r2
 801ac9c:	9309      	str	r3, [sp, #36]	@ 0x24
 801ac9e:	eeb0 3a67 	vmov.f32	s6, s15
 801aca2:	eef0 2a47 	vmov.f32	s5, s14
 801aca6:	e68c      	b.n	801a9c2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801aca8:	b149      	cbz	r1, 801acbe <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x338>
 801acaa:	5cb2      	ldrb	r2, [r6, r2]
 801acac:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801acb0:	4422      	add	r2, r4
 801acb2:	4628      	mov	r0, r5
 801acb4:	46ac      	mov	ip, r5
 801acb6:	e6f1      	b.n	801aa9c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801acb8:	4628      	mov	r0, r5
 801acba:	462a      	mov	r2, r5
 801acbc:	e6ee      	b.n	801aa9c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801acbe:	4628      	mov	r0, r5
 801acc0:	462a      	mov	r2, r5
 801acc2:	e7f7      	b.n	801acb4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32e>
 801acc4:	1c47      	adds	r7, r0, #1
 801acc6:	f53f af69 	bmi.w	801ab9c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801acca:	42ba      	cmp	r2, r7
 801accc:	f6ff af66 	blt.w	801ab9c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801acd0:	1c6f      	adds	r7, r5, #1
 801acd2:	f53f af63 	bmi.w	801ab9c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801acd6:	42be      	cmp	r6, r7
 801acd8:	f6ff af60 	blt.w	801ab9c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801acdc:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 801acde:	9002      	str	r0, [sp, #8]
 801ace0:	b236      	sxth	r6, r6
 801ace2:	b212      	sxth	r2, r2
 801ace4:	e9cd 1705 	strd	r1, r7, [sp, #20]
 801ace8:	e9cd 5303 	strd	r5, r3, [sp, #12]
 801acec:	9200      	str	r2, [sp, #0]
 801acee:	9601      	str	r6, [sp, #4]
 801acf0:	4623      	mov	r3, r4
 801acf2:	e9dd 120c 	ldrd	r1, r2, [sp, #48]	@ 0x30
 801acf6:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 801acf8:	f7ff fd59 	bl	801a7ae <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>
 801acfc:	e74e      	b.n	801ab9c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801acfe:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 801ad00:	9820      	ldr	r0, [sp, #128]	@ 0x80
 801ad02:	9d1f      	ldr	r5, [sp, #124]	@ 0x7c
 801ad04:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801ad06:	f3c2 3103 	ubfx	r1, r2, #12, #4
 801ad0a:	9a26      	ldr	r2, [sp, #152]	@ 0x98
 801ad0c:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 801ad10:	142d      	asrs	r5, r5, #16
 801ad12:	1400      	asrs	r0, r0, #16
 801ad14:	fb02 5000 	mla	r0, r2, r0, r5
 801ad18:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 801ad1a:	f815 9000 	ldrb.w	r9, [r5, r0]
 801ad1e:	f3c3 3303 	ubfx	r3, r3, #12, #4
 801ad22:	eb09 0949 	add.w	r9, r9, r9, lsl #1
 801ad26:	182e      	adds	r6, r5, r0
 801ad28:	eb04 0509 	add.w	r5, r4, r9
 801ad2c:	2b00      	cmp	r3, #0
 801ad2e:	f000 8096 	beq.w	801ae5e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 801ad32:	7877      	ldrb	r7, [r6, #1]
 801ad34:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 801ad38:	4427      	add	r7, r4
 801ad3a:	2900      	cmp	r1, #0
 801ad3c:	f000 8097 	beq.w	801ae6e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e8>
 801ad40:	18b0      	adds	r0, r6, r2
 801ad42:	5cb2      	ldrb	r2, [r6, r2]
 801ad44:	7840      	ldrb	r0, [r0, #1]
 801ad46:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801ad4a:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801ad4e:	4422      	add	r2, r4
 801ad50:	4420      	add	r0, r4
 801ad52:	b29b      	uxth	r3, r3
 801ad54:	b289      	uxth	r1, r1
 801ad56:	fb03 f801 	mul.w	r8, r3, r1
 801ad5a:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 801ad5c:	f895 b002 	ldrb.w	fp, [r5, #2]
 801ad60:	f8b6 c000 	ldrh.w	ip, [r6]
 801ad64:	78be      	ldrb	r6, [r7, #2]
 801ad66:	f814 9009 	ldrb.w	r9, [r4, r9]
 801ad6a:	011b      	lsls	r3, r3, #4
 801ad6c:	ebc8 1101 	rsb	r1, r8, r1, lsl #4
 801ad70:	b289      	uxth	r1, r1
 801ad72:	f5c3 7e80 	rsb	lr, r3, #256	@ 0x100
 801ad76:	eba3 0308 	sub.w	r3, r3, r8
 801ad7a:	b29b      	uxth	r3, r3
 801ad7c:	ebae 0e01 	sub.w	lr, lr, r1
 801ad80:	fa1f fe8e 	uxth.w	lr, lr
 801ad84:	435e      	muls	r6, r3
 801ad86:	fb0e 660b 	mla	r6, lr, fp, r6
 801ad8a:	f892 b002 	ldrb.w	fp, [r2, #2]
 801ad8e:	9310      	str	r3, [sp, #64]	@ 0x40
 801ad90:	fb01 660b 	mla	r6, r1, fp, r6
 801ad94:	f890 b002 	ldrb.w	fp, [r0, #2]
 801ad98:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801ad9a:	fb08 660b 	mla	r6, r8, fp, r6
 801ad9e:	ea4f 2b2c 	mov.w	fp, ip, asr #8
 801ada2:	f00b 0bf8 	and.w	fp, fp, #248	@ 0xf8
 801ada6:	fb1b fb03 	smulbb	fp, fp, r3
 801adaa:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801adae:	fb06 b60a 	mla	r6, r6, sl, fp
 801adb2:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801adb4:	f895 b001 	ldrb.w	fp, [r5, #1]
 801adb8:	787d      	ldrb	r5, [r7, #1]
 801adba:	783f      	ldrb	r7, [r7, #0]
 801adbc:	435d      	muls	r5, r3
 801adbe:	fb0e 550b 	mla	r5, lr, fp, r5
 801adc2:	f892 b001 	ldrb.w	fp, [r2, #1]
 801adc6:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801adc8:	fb01 550b 	mla	r5, r1, fp, r5
 801adcc:	f890 b001 	ldrb.w	fp, [r0, #1]
 801add0:	fb08 550b 	mla	r5, r8, fp, r5
 801add4:	ea4f 0bec 	mov.w	fp, ip, asr #3
 801add8:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
 801addc:	fb1b fb03 	smulbb	fp, fp, r3
 801ade0:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801ade2:	437b      	muls	r3, r7
 801ade4:	7817      	ldrb	r7, [r2, #0]
 801ade6:	fb0e 3309 	mla	r3, lr, r9, r3
 801adea:	fb01 3307 	mla	r3, r1, r7, r3
 801adee:	7807      	ldrb	r7, [r0, #0]
 801adf0:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801adf4:	fb08 3707 	mla	r7, r8, r7, r3
 801adf8:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801adfa:	fa5f fc8c 	uxtb.w	ip, ip
 801adfe:	fb1c fc03 	smulbb	ip, ip, r3
 801ae02:	f3c5 2507 	ubfx	r5, r5, #8, #8
 801ae06:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801ae0a:	fb05 b50a 	mla	r5, r5, sl, fp
 801ae0e:	fb07 c70a 	mla	r7, r7, sl, ip
 801ae12:	b2b6      	uxth	r6, r6
 801ae14:	b2ad      	uxth	r5, r5
 801ae16:	b2bf      	uxth	r7, r7
 801ae18:	1c73      	adds	r3, r6, #1
 801ae1a:	1c7a      	adds	r2, r7, #1
 801ae1c:	f105 0b01 	add.w	fp, r5, #1
 801ae20:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 801ae24:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 801ae28:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 801ae2c:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801ae30:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
 801ae34:	096d      	lsrs	r5, r5, #5
 801ae36:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801ae38:	4316      	orrs	r6, r2
 801ae3a:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801ae3e:	432e      	orrs	r6, r5
 801ae40:	f823 6b02 	strh.w	r6, [r3], #2
 801ae44:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 801ae46:	930c      	str	r3, [sp, #48]	@ 0x30
 801ae48:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801ae4a:	4413      	add	r3, r2
 801ae4c:	931f      	str	r3, [sp, #124]	@ 0x7c
 801ae4e:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 801ae50:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801ae52:	4413      	add	r3, r2
 801ae54:	9320      	str	r3, [sp, #128]	@ 0x80
 801ae56:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801ae58:	3b01      	subs	r3, #1
 801ae5a:	9311      	str	r3, [sp, #68]	@ 0x44
 801ae5c:	e6db      	b.n	801ac16 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x290>
 801ae5e:	b149      	cbz	r1, 801ae74 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 801ae60:	5cb2      	ldrb	r2, [r6, r2]
 801ae62:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801ae66:	4422      	add	r2, r4
 801ae68:	4628      	mov	r0, r5
 801ae6a:	462f      	mov	r7, r5
 801ae6c:	e771      	b.n	801ad52 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 801ae6e:	4628      	mov	r0, r5
 801ae70:	462a      	mov	r2, r5
 801ae72:	e76e      	b.n	801ad52 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 801ae74:	4628      	mov	r0, r5
 801ae76:	462a      	mov	r2, r5
 801ae78:	e7f7      	b.n	801ae6a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801ae7a:	b015      	add	sp, #84	@ 0x54
 801ae7c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801ae80 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>:
 801ae80:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ae84:	880f      	ldrh	r7, [r1, #0]
 801ae86:	f9bd e030 	ldrsh.w	lr, [sp, #48]	@ 0x30
 801ae8a:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	@ 0x34
 801ae8e:	f89d 0040 	ldrb.w	r0, [sp, #64]	@ 0x40
 801ae92:	f89d 6044 	ldrb.w	r6, [sp, #68]	@ 0x44
 801ae96:	023c      	lsls	r4, r7, #8
 801ae98:	e9dd c50e 	ldrd	ip, r5, [sp, #56]	@ 0x38
 801ae9c:	f404 0b78 	and.w	fp, r4, #16252928	@ 0xf80000
 801aea0:	017c      	lsls	r4, r7, #5
 801aea2:	f404 447c 	and.w	r4, r4, #64512	@ 0xfc00
 801aea6:	00ff      	lsls	r7, r7, #3
 801aea8:	ea4b 0404 	orr.w	r4, fp, r4
 801aeac:	b2ff      	uxtb	r7, r7
 801aeae:	fb05 ca0e 	mla	sl, r5, lr, ip
 801aeb2:	4327      	orrs	r7, r4
 801aeb4:	2d00      	cmp	r5, #0
 801aeb6:	eb02 080a 	add.w	r8, r2, sl
 801aeba:	9701      	str	r7, [sp, #4]
 801aebc:	db7e      	blt.n	801afbc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 801aebe:	45a9      	cmp	r9, r5
 801aec0:	dd7c      	ble.n	801afbc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 801aec2:	f1bc 0f00 	cmp.w	ip, #0
 801aec6:	db77      	blt.n	801afb8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 801aec8:	45e6      	cmp	lr, ip
 801aeca:	dd75      	ble.n	801afb8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 801aecc:	f812 700a 	ldrb.w	r7, [r2, sl]
 801aed0:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 801aed4:	441f      	add	r7, r3
 801aed6:	f11c 0201 	adds.w	r2, ip, #1
 801aeda:	d472      	bmi.n	801afc2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 801aedc:	4596      	cmp	lr, r2
 801aede:	dd70      	ble.n	801afc2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 801aee0:	2800      	cmp	r0, #0
 801aee2:	d06e      	beq.n	801afc2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 801aee4:	f898 4001 	ldrb.w	r4, [r8, #1]
 801aee8:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 801aeec:	441c      	add	r4, r3
 801aeee:	3501      	adds	r5, #1
 801aef0:	d46b      	bmi.n	801afca <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 801aef2:	45a9      	cmp	r9, r5
 801aef4:	dd69      	ble.n	801afca <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 801aef6:	2e00      	cmp	r6, #0
 801aef8:	d067      	beq.n	801afca <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 801aefa:	f1bc 0f00 	cmp.w	ip, #0
 801aefe:	db62      	blt.n	801afc6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 801af00:	45e6      	cmp	lr, ip
 801af02:	dd60      	ble.n	801afc6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 801af04:	f818 500e 	ldrb.w	r5, [r8, lr]
 801af08:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801af0c:	441d      	add	r5, r3
 801af0e:	f11c 0201 	adds.w	r2, ip, #1
 801af12:	d45d      	bmi.n	801afd0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 801af14:	4596      	cmp	lr, r2
 801af16:	dd5b      	ble.n	801afd0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 801af18:	2800      	cmp	r0, #0
 801af1a:	d059      	beq.n	801afd0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 801af1c:	44c6      	add	lr, r8
 801af1e:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801af22:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801af26:	4413      	add	r3, r2
 801af28:	b280      	uxth	r0, r0
 801af2a:	b2b2      	uxth	r2, r6
 801af2c:	fb00 f602 	mul.w	r6, r0, r2
 801af30:	0100      	lsls	r0, r0, #4
 801af32:	ebc6 1202 	rsb	r2, r6, r2, lsl #4
 801af36:	f5c0 7880 	rsb	r8, r0, #256	@ 0x100
 801af3a:	1b80      	subs	r0, r0, r6
 801af3c:	fa1f fc82 	uxth.w	ip, r2
 801af40:	b282      	uxth	r2, r0
 801af42:	78a0      	ldrb	r0, [r4, #2]
 801af44:	f897 e002 	ldrb.w	lr, [r7, #2]
 801af48:	f897 9000 	ldrb.w	r9, [r7]
 801af4c:	787f      	ldrb	r7, [r7, #1]
 801af4e:	eba8 080c 	sub.w	r8, r8, ip
 801af52:	fa1f f888 	uxth.w	r8, r8
 801af56:	4350      	muls	r0, r2
 801af58:	fb08 0e0e 	mla	lr, r8, lr, r0
 801af5c:	78a8      	ldrb	r0, [r5, #2]
 801af5e:	fb0c e000 	mla	r0, ip, r0, lr
 801af62:	f893 e002 	ldrb.w	lr, [r3, #2]
 801af66:	fb06 0e0e 	mla	lr, r6, lr, r0
 801af6a:	f40e 4078 	and.w	r0, lr, #63488	@ 0xf800
 801af6e:	f894 e000 	ldrb.w	lr, [r4]
 801af72:	fb02 fe0e 	mul.w	lr, r2, lr
 801af76:	fb08 e909 	mla	r9, r8, r9, lr
 801af7a:	f895 e000 	ldrb.w	lr, [r5]
 801af7e:	fb0c 990e 	mla	r9, ip, lr, r9
 801af82:	f893 e000 	ldrb.w	lr, [r3]
 801af86:	785b      	ldrb	r3, [r3, #1]
 801af88:	fb06 9e0e 	mla	lr, r6, lr, r9
 801af8c:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 801af90:	ea4e 0e00 	orr.w	lr, lr, r0
 801af94:	7860      	ldrb	r0, [r4, #1]
 801af96:	4350      	muls	r0, r2
 801af98:	786a      	ldrb	r2, [r5, #1]
 801af9a:	fb08 0007 	mla	r0, r8, r7, r0
 801af9e:	fb0c 0202 	mla	r2, ip, r2, r0
 801afa2:	fb06 2303 	mla	r3, r6, r3, r2
 801afa6:	095b      	lsrs	r3, r3, #5
 801afa8:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801afac:	ea4e 0303 	orr.w	r3, lr, r3
 801afb0:	800b      	strh	r3, [r1, #0]
 801afb2:	b003      	add	sp, #12
 801afb4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801afb8:	af01      	add	r7, sp, #4
 801afba:	e78c      	b.n	801aed6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x56>
 801afbc:	ac01      	add	r4, sp, #4
 801afbe:	4627      	mov	r7, r4
 801afc0:	e795      	b.n	801aeee <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 801afc2:	ac01      	add	r4, sp, #4
 801afc4:	e793      	b.n	801aeee <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 801afc6:	ad01      	add	r5, sp, #4
 801afc8:	e7a1      	b.n	801af0e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x8e>
 801afca:	ab01      	add	r3, sp, #4
 801afcc:	461d      	mov	r5, r3
 801afce:	e7ab      	b.n	801af28 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>
 801afd0:	ab01      	add	r3, sp, #4
 801afd2:	e7a9      	b.n	801af28 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>

0801afd4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801afd4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801afd8:	b08f      	sub	sp, #60	@ 0x3c
 801afda:	e9dd b519 	ldrd	fp, r5, [sp, #100]	@ 0x64
 801afde:	920c      	str	r2, [sp, #48]	@ 0x30
 801afe0:	9a1d      	ldr	r2, [sp, #116]	@ 0x74
 801afe2:	910a      	str	r1, [sp, #40]	@ 0x28
 801afe4:	9306      	str	r3, [sp, #24]
 801afe6:	e9dd 131e 	ldrd	r1, r3, [sp, #120]	@ 0x78
 801afea:	900d      	str	r0, [sp, #52]	@ 0x34
 801afec:	6850      	ldr	r0, [r2, #4]
 801afee:	6812      	ldr	r2, [r2, #0]
 801aff0:	fb00 1303 	mla	r3, r0, r3, r1
 801aff4:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801aff8:	9307      	str	r3, [sp, #28]
 801affa:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801affc:	681b      	ldr	r3, [r3, #0]
 801affe:	9308      	str	r3, [sp, #32]
 801b000:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801b002:	685c      	ldr	r4, [r3, #4]
 801b004:	3404      	adds	r4, #4
 801b006:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801b008:	2b00      	cmp	r3, #0
 801b00a:	dc03      	bgt.n	801b014 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 801b00c:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801b00e:	2b00      	cmp	r3, #0
 801b010:	f340 81d6 	ble.w	801b3c0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 801b014:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801b016:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801b01a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801b01e:	1e48      	subs	r0, r1, #1
 801b020:	1e56      	subs	r6, r2, #1
 801b022:	9b06      	ldr	r3, [sp, #24]
 801b024:	2b00      	cmp	r3, #0
 801b026:	f340 80b7 	ble.w	801b198 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c4>
 801b02a:	ea5f 472b 	movs.w	r7, fp, asr #16
 801b02e:	ea4f 4325 	mov.w	r3, r5, asr #16
 801b032:	d406      	bmi.n	801b042 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801b034:	4287      	cmp	r7, r0
 801b036:	da04      	bge.n	801b042 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801b038:	2b00      	cmp	r3, #0
 801b03a:	db02      	blt.n	801b042 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801b03c:	42b3      	cmp	r3, r6
 801b03e:	f2c0 80ac 	blt.w	801b19a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 801b042:	3701      	adds	r7, #1
 801b044:	f100 809d 	bmi.w	801b182 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801b048:	42b9      	cmp	r1, r7
 801b04a:	f2c0 809a 	blt.w	801b182 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801b04e:	3301      	adds	r3, #1
 801b050:	f100 8097 	bmi.w	801b182 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801b054:	429a      	cmp	r2, r3
 801b056:	f2c0 8094 	blt.w	801b182 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801b05a:	9b06      	ldr	r3, [sp, #24]
 801b05c:	930b      	str	r3, [sp, #44]	@ 0x2c
 801b05e:	9b07      	ldr	r3, [sp, #28]
 801b060:	9309      	str	r3, [sp, #36]	@ 0x24
 801b062:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801b064:	2b00      	cmp	r3, #0
 801b066:	f340 80b5 	ble.w	801b1d4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801b06a:	9820      	ldr	r0, [sp, #128]	@ 0x80
 801b06c:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 801b06e:	68c7      	ldr	r7, [r0, #12]
 801b070:	6892      	ldr	r2, [r2, #8]
 801b072:	ea5f 402b 	movs.w	r0, fp, asr #16
 801b076:	ea4f 4625 	mov.w	r6, r5, asr #16
 801b07a:	f3cb 3303 	ubfx	r3, fp, #12, #4
 801b07e:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801b082:	f100 80fb 	bmi.w	801b27c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801b086:	f102 3cff 	add.w	ip, r2, #4294967295
 801b08a:	4560      	cmp	r0, ip
 801b08c:	f280 80f6 	bge.w	801b27c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801b090:	2e00      	cmp	r6, #0
 801b092:	f2c0 80f3 	blt.w	801b27c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801b096:	f107 3cff 	add.w	ip, r7, #4294967295
 801b09a:	4566      	cmp	r6, ip
 801b09c:	f280 80ee 	bge.w	801b27c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801b0a0:	b212      	sxth	r2, r2
 801b0a2:	fb06 0002 	mla	r0, r6, r2, r0
 801b0a6:	9e08      	ldr	r6, [sp, #32]
 801b0a8:	1837      	adds	r7, r6, r0
 801b0aa:	5c30      	ldrb	r0, [r6, r0]
 801b0ac:	eb00 0840 	add.w	r8, r0, r0, lsl #1
 801b0b0:	eb04 0c08 	add.w	ip, r4, r8
 801b0b4:	2b00      	cmp	r3, #0
 801b0b6:	f000 80d3 	beq.w	801b260 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801b0ba:	787e      	ldrb	r6, [r7, #1]
 801b0bc:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801b0c0:	4426      	add	r6, r4
 801b0c2:	2900      	cmp	r1, #0
 801b0c4:	f000 80d4 	beq.w	801b270 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29c>
 801b0c8:	18b8      	adds	r0, r7, r2
 801b0ca:	5cba      	ldrb	r2, [r7, r2]
 801b0cc:	7840      	ldrb	r0, [r0, #1]
 801b0ce:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801b0d2:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801b0d6:	4422      	add	r2, r4
 801b0d8:	4420      	add	r0, r4
 801b0da:	b29b      	uxth	r3, r3
 801b0dc:	b289      	uxth	r1, r1
 801b0de:	fb03 f901 	mul.w	r9, r3, r1
 801b0e2:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801b0e6:	011b      	lsls	r3, r3, #4
 801b0e8:	b289      	uxth	r1, r1
 801b0ea:	78b7      	ldrb	r7, [r6, #2]
 801b0ec:	f89c a002 	ldrb.w	sl, [ip, #2]
 801b0f0:	f89c c001 	ldrb.w	ip, [ip, #1]
 801b0f4:	f5c3 7e80 	rsb	lr, r3, #256	@ 0x100
 801b0f8:	eba3 0309 	sub.w	r3, r3, r9
 801b0fc:	b29b      	uxth	r3, r3
 801b0fe:	ebae 0e01 	sub.w	lr, lr, r1
 801b102:	fa1f fe8e 	uxth.w	lr, lr
 801b106:	435f      	muls	r7, r3
 801b108:	fb0e 770a 	mla	r7, lr, sl, r7
 801b10c:	f892 a002 	ldrb.w	sl, [r2, #2]
 801b110:	fb01 770a 	mla	r7, r1, sl, r7
 801b114:	f890 a002 	ldrb.w	sl, [r0, #2]
 801b118:	fb09 7a0a 	mla	sl, r9, sl, r7
 801b11c:	f814 7008 	ldrb.w	r7, [r4, r8]
 801b120:	f896 8000 	ldrb.w	r8, [r6]
 801b124:	7876      	ldrb	r6, [r6, #1]
 801b126:	fb03 f808 	mul.w	r8, r3, r8
 801b12a:	fb0e 8807 	mla	r8, lr, r7, r8
 801b12e:	7817      	ldrb	r7, [r2, #0]
 801b130:	fb01 8807 	mla	r8, r1, r7, r8
 801b134:	7807      	ldrb	r7, [r0, #0]
 801b136:	fb09 8707 	mla	r7, r9, r7, r8
 801b13a:	f40a 4a78 	and.w	sl, sl, #63488	@ 0xf800
 801b13e:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801b142:	ea47 070a 	orr.w	r7, r7, sl
 801b146:	4373      	muls	r3, r6
 801b148:	f892 a001 	ldrb.w	sl, [r2, #1]
 801b14c:	fb0e 330c 	mla	r3, lr, ip, r3
 801b150:	fb01 310a 	mla	r1, r1, sl, r3
 801b154:	f890 a001 	ldrb.w	sl, [r0, #1]
 801b158:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801b15a:	fb09 1a0a 	mla	sl, r9, sl, r1
 801b15e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801b162:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 801b166:	ea47 070a 	orr.w	r7, r7, sl
 801b16a:	801f      	strh	r7, [r3, #0]
 801b16c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801b16e:	3302      	adds	r3, #2
 801b170:	9309      	str	r3, [sp, #36]	@ 0x24
 801b172:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 801b174:	449b      	add	fp, r3
 801b176:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801b178:	441d      	add	r5, r3
 801b17a:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801b17c:	3b01      	subs	r3, #1
 801b17e:	930b      	str	r3, [sp, #44]	@ 0x2c
 801b180:	e76f      	b.n	801b062 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801b182:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 801b184:	449b      	add	fp, r3
 801b186:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801b188:	441d      	add	r5, r3
 801b18a:	9b06      	ldr	r3, [sp, #24]
 801b18c:	3b01      	subs	r3, #1
 801b18e:	9306      	str	r3, [sp, #24]
 801b190:	9b07      	ldr	r3, [sp, #28]
 801b192:	3302      	adds	r3, #2
 801b194:	9307      	str	r3, [sp, #28]
 801b196:	e744      	b.n	801b022 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e>
 801b198:	d023      	beq.n	801b1e2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 801b19a:	9b06      	ldr	r3, [sp, #24]
 801b19c:	981b      	ldr	r0, [sp, #108]	@ 0x6c
 801b19e:	3b01      	subs	r3, #1
 801b1a0:	fb00 b003 	mla	r0, r0, r3, fp
 801b1a4:	1400      	asrs	r0, r0, #16
 801b1a6:	f53f af58 	bmi.w	801b05a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801b1aa:	3901      	subs	r1, #1
 801b1ac:	4288      	cmp	r0, r1
 801b1ae:	f6bf af54 	bge.w	801b05a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801b1b2:	991c      	ldr	r1, [sp, #112]	@ 0x70
 801b1b4:	fb01 5303 	mla	r3, r1, r3, r5
 801b1b8:	141b      	asrs	r3, r3, #16
 801b1ba:	f53f af4e 	bmi.w	801b05a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801b1be:	3a01      	subs	r2, #1
 801b1c0:	4293      	cmp	r3, r2
 801b1c2:	f6bf af4a 	bge.w	801b05a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801b1c6:	9b06      	ldr	r3, [sp, #24]
 801b1c8:	9309      	str	r3, [sp, #36]	@ 0x24
 801b1ca:	9b07      	ldr	r3, [sp, #28]
 801b1cc:	930b      	str	r3, [sp, #44]	@ 0x2c
 801b1ce:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801b1d0:	2b00      	cmp	r3, #0
 801b1d2:	dc70      	bgt.n	801b2b6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e2>
 801b1d4:	9b06      	ldr	r3, [sp, #24]
 801b1d6:	9a07      	ldr	r2, [sp, #28]
 801b1d8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801b1dc:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801b1e0:	9307      	str	r3, [sp, #28]
 801b1e2:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801b1e4:	2b00      	cmp	r3, #0
 801b1e6:	f340 80eb 	ble.w	801b3c0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 801b1ea:	ee30 0a04 	vadd.f32	s0, s0, s8
 801b1ee:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801b1f2:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801b1f6:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801b1f8:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801b1fc:	ee31 1a05 	vadd.f32	s2, s2, s10
 801b200:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801b204:	eef0 6a62 	vmov.f32	s13, s5
 801b208:	ee61 7a27 	vmul.f32	s15, s2, s15
 801b20c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801b210:	ee77 2a62 	vsub.f32	s5, s14, s5
 801b214:	ee16 ba90 	vmov	fp, s13
 801b218:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801b21c:	eef0 6a43 	vmov.f32	s13, s6
 801b220:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801b224:	ee12 2a90 	vmov	r2, s5
 801b228:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801b22c:	fb92 f3f3 	sdiv	r3, r2, r3
 801b230:	ee13 2a10 	vmov	r2, s6
 801b234:	931b      	str	r3, [sp, #108]	@ 0x6c
 801b236:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801b238:	fb92 f3f3 	sdiv	r3, r2, r3
 801b23c:	931c      	str	r3, [sp, #112]	@ 0x70
 801b23e:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801b240:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 801b242:	3b01      	subs	r3, #1
 801b244:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801b248:	930a      	str	r3, [sp, #40]	@ 0x28
 801b24a:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801b24c:	bf08      	it	eq
 801b24e:	4613      	moveq	r3, r2
 801b250:	ee16 5a90 	vmov	r5, s13
 801b254:	9306      	str	r3, [sp, #24]
 801b256:	eeb0 3a67 	vmov.f32	s6, s15
 801b25a:	eef0 2a47 	vmov.f32	s5, s14
 801b25e:	e6d2      	b.n	801b006 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 801b260:	b149      	cbz	r1, 801b276 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 801b262:	5cba      	ldrb	r2, [r7, r2]
 801b264:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801b268:	4422      	add	r2, r4
 801b26a:	4660      	mov	r0, ip
 801b26c:	4666      	mov	r6, ip
 801b26e:	e734      	b.n	801b0da <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 801b270:	4660      	mov	r0, ip
 801b272:	4662      	mov	r2, ip
 801b274:	e731      	b.n	801b0da <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 801b276:	4660      	mov	r0, ip
 801b278:	4662      	mov	r2, ip
 801b27a:	e7f7      	b.n	801b26c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x298>
 801b27c:	f110 0c01 	adds.w	ip, r0, #1
 801b280:	f53f af74 	bmi.w	801b16c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801b284:	4562      	cmp	r2, ip
 801b286:	f6ff af71 	blt.w	801b16c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801b28a:	f116 0c01 	adds.w	ip, r6, #1
 801b28e:	f53f af6d 	bmi.w	801b16c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801b292:	4567      	cmp	r7, ip
 801b294:	f6ff af6a 	blt.w	801b16c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801b298:	b23f      	sxth	r7, r7
 801b29a:	b212      	sxth	r2, r2
 801b29c:	e9cd 3104 	strd	r3, r1, [sp, #16]
 801b2a0:	e9cd 0602 	strd	r0, r6, [sp, #8]
 801b2a4:	9200      	str	r2, [sp, #0]
 801b2a6:	9701      	str	r7, [sp, #4]
 801b2a8:	4623      	mov	r3, r4
 801b2aa:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 801b2ae:	980d      	ldr	r0, [sp, #52]	@ 0x34
 801b2b0:	f7ff fde6 	bl	801ae80 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>
 801b2b4:	e75a      	b.n	801b16c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801b2b6:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 801b2b8:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 801b2bc:	ea4f 462b 	mov.w	r6, fp, asr #16
 801b2c0:	1428      	asrs	r0, r5, #16
 801b2c2:	fb02 6000 	mla	r0, r2, r0, r6
 801b2c6:	9e08      	ldr	r6, [sp, #32]
 801b2c8:	f816 8000 	ldrb.w	r8, [r6, r0]
 801b2cc:	f3cb 3303 	ubfx	r3, fp, #12, #4
 801b2d0:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 801b2d4:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801b2d8:	1837      	adds	r7, r6, r0
 801b2da:	eb04 0c08 	add.w	ip, r4, r8
 801b2de:	2b00      	cmp	r3, #0
 801b2e0:	d060      	beq.n	801b3a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d0>
 801b2e2:	787e      	ldrb	r6, [r7, #1]
 801b2e4:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801b2e8:	4426      	add	r6, r4
 801b2ea:	2900      	cmp	r1, #0
 801b2ec:	d062      	beq.n	801b3b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e0>
 801b2ee:	18b8      	adds	r0, r7, r2
 801b2f0:	5cba      	ldrb	r2, [r7, r2]
 801b2f2:	7840      	ldrb	r0, [r0, #1]
 801b2f4:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801b2f8:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801b2fc:	4422      	add	r2, r4
 801b2fe:	4420      	add	r0, r4
 801b300:	b29b      	uxth	r3, r3
 801b302:	b289      	uxth	r1, r1
 801b304:	fb03 f901 	mul.w	r9, r3, r1
 801b308:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801b30c:	011b      	lsls	r3, r3, #4
 801b30e:	b289      	uxth	r1, r1
 801b310:	78b7      	ldrb	r7, [r6, #2]
 801b312:	f89c a002 	ldrb.w	sl, [ip, #2]
 801b316:	f89c c001 	ldrb.w	ip, [ip, #1]
 801b31a:	f5c3 7e80 	rsb	lr, r3, #256	@ 0x100
 801b31e:	eba3 0309 	sub.w	r3, r3, r9
 801b322:	b29b      	uxth	r3, r3
 801b324:	ebae 0e01 	sub.w	lr, lr, r1
 801b328:	fa1f fe8e 	uxth.w	lr, lr
 801b32c:	435f      	muls	r7, r3
 801b32e:	fb0e 770a 	mla	r7, lr, sl, r7
 801b332:	f892 a002 	ldrb.w	sl, [r2, #2]
 801b336:	fb01 770a 	mla	r7, r1, sl, r7
 801b33a:	f890 a002 	ldrb.w	sl, [r0, #2]
 801b33e:	fb09 7a0a 	mla	sl, r9, sl, r7
 801b342:	f814 7008 	ldrb.w	r7, [r4, r8]
 801b346:	f896 8000 	ldrb.w	r8, [r6]
 801b34a:	7876      	ldrb	r6, [r6, #1]
 801b34c:	fb03 f808 	mul.w	r8, r3, r8
 801b350:	fb0e 8807 	mla	r8, lr, r7, r8
 801b354:	7817      	ldrb	r7, [r2, #0]
 801b356:	fb01 8807 	mla	r8, r1, r7, r8
 801b35a:	7807      	ldrb	r7, [r0, #0]
 801b35c:	fb09 8707 	mla	r7, r9, r7, r8
 801b360:	f40a 4a78 	and.w	sl, sl, #63488	@ 0xf800
 801b364:	4373      	muls	r3, r6
 801b366:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801b36a:	7856      	ldrb	r6, [r2, #1]
 801b36c:	ea47 070a 	orr.w	r7, r7, sl
 801b370:	fb0e 330c 	mla	r3, lr, ip, r3
 801b374:	f890 a001 	ldrb.w	sl, [r0, #1]
 801b378:	fb01 3306 	mla	r3, r1, r6, r3
 801b37c:	fb09 3a0a 	mla	sl, r9, sl, r3
 801b380:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801b384:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801b386:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 801b38a:	ea47 070a 	orr.w	r7, r7, sl
 801b38e:	f823 7b02 	strh.w	r7, [r3], #2
 801b392:	930b      	str	r3, [sp, #44]	@ 0x2c
 801b394:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 801b396:	449b      	add	fp, r3
 801b398:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801b39a:	441d      	add	r5, r3
 801b39c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801b39e:	3b01      	subs	r3, #1
 801b3a0:	9309      	str	r3, [sp, #36]	@ 0x24
 801b3a2:	e714      	b.n	801b1ce <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 801b3a4:	b149      	cbz	r1, 801b3ba <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 801b3a6:	5cba      	ldrb	r2, [r7, r2]
 801b3a8:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801b3ac:	4422      	add	r2, r4
 801b3ae:	4660      	mov	r0, ip
 801b3b0:	4666      	mov	r6, ip
 801b3b2:	e7a5      	b.n	801b300 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 801b3b4:	4660      	mov	r0, ip
 801b3b6:	4662      	mov	r2, ip
 801b3b8:	e7a2      	b.n	801b300 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 801b3ba:	4660      	mov	r0, ip
 801b3bc:	4662      	mov	r2, ip
 801b3be:	e7f7      	b.n	801b3b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3dc>
 801b3c0:	b00f      	add	sp, #60	@ 0x3c
 801b3c2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801b3c6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>:
 801b3c6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b3ca:	b085      	sub	sp, #20
 801b3cc:	e9dd 7410 	ldrd	r7, r4, [sp, #64]	@ 0x40
 801b3d0:	f9bd c038 	ldrsh.w	ip, [sp, #56]	@ 0x38
 801b3d4:	9102      	str	r1, [sp, #8]
 801b3d6:	2c00      	cmp	r4, #0
 801b3d8:	fb04 710c 	mla	r1, r4, ip, r7
 801b3dc:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	@ 0x3c
 801b3e0:	f89d 6048 	ldrb.w	r6, [sp, #72]	@ 0x48
 801b3e4:	f89d 004c 	ldrb.w	r0, [sp, #76]	@ 0x4c
 801b3e8:	eb02 0e01 	add.w	lr, r2, r1
 801b3ec:	f2c0 8122 	blt.w	801b634 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 801b3f0:	45a0      	cmp	r8, r4
 801b3f2:	f340 811f 	ble.w	801b634 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 801b3f6:	2f00      	cmp	r7, #0
 801b3f8:	f2c0 811a 	blt.w	801b630 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 801b3fc:	45bc      	cmp	ip, r7
 801b3fe:	f340 8117 	ble.w	801b630 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 801b402:	5c52      	ldrb	r2, [r2, r1]
 801b404:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 801b408:	1c7a      	adds	r2, r7, #1
 801b40a:	f100 8116 	bmi.w	801b63a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 801b40e:	4594      	cmp	ip, r2
 801b410:	f340 8113 	ble.w	801b63a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 801b414:	2e00      	cmp	r6, #0
 801b416:	f000 8112 	beq.w	801b63e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x278>
 801b41a:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801b41e:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 801b422:	3401      	adds	r4, #1
 801b424:	f100 810f 	bmi.w	801b646 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 801b428:	45a0      	cmp	r8, r4
 801b42a:	f340 810c 	ble.w	801b646 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 801b42e:	2800      	cmp	r0, #0
 801b430:	f000 810c 	beq.w	801b64c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x286>
 801b434:	2f00      	cmp	r7, #0
 801b436:	f2c0 8104 	blt.w	801b642 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 801b43a:	45bc      	cmp	ip, r7
 801b43c:	f340 8101 	ble.w	801b642 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 801b440:	f81e 200c 	ldrb.w	r2, [lr, ip]
 801b444:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
 801b448:	3701      	adds	r7, #1
 801b44a:	f100 8102 	bmi.w	801b652 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 801b44e:	45bc      	cmp	ip, r7
 801b450:	f340 80ff 	ble.w	801b652 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 801b454:	2e00      	cmp	r6, #0
 801b456:	f000 80fe 	beq.w	801b656 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x290>
 801b45a:	44f4      	add	ip, lr
 801b45c:	f89c 2001 	ldrb.w	r2, [ip, #1]
 801b460:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 801b464:	b2b6      	uxth	r6, r6
 801b466:	b280      	uxth	r0, r0
 801b468:	fb00 fe06 	mul.w	lr, r0, r6
 801b46c:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 801b470:	0136      	lsls	r6, r6, #4
 801b472:	eba6 070e 	sub.w	r7, r6, lr
 801b476:	b280      	uxth	r0, r0
 801b478:	f5c6 7380 	rsb	r3, r6, #256	@ 0x100
 801b47c:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 801b480:	b2bf      	uxth	r7, r7
 801b482:	1a1b      	subs	r3, r3, r0
 801b484:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 801b488:	b29b      	uxth	r3, r3
 801b48a:	fb0a f607 	mul.w	r6, sl, r7
 801b48e:	ea4f 6914 	mov.w	r9, r4, lsr #24
 801b492:	fb0b 6603 	mla	r6, fp, r3, r6
 801b496:	ea4f 6812 	mov.w	r8, r2, lsr #24
 801b49a:	fb00 6609 	mla	r6, r0, r9, r6
 801b49e:	fb0e 6608 	mla	r6, lr, r8, r6
 801b4a2:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801b4a6:	9600      	str	r6, [sp, #0]
 801b4a8:	2e00      	cmp	r6, #0
 801b4aa:	f000 80be 	beq.w	801b62a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x264>
 801b4ae:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 801b4b2:	fb0b fc0c 	mul.w	ip, fp, ip
 801b4b6:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
 801b4ba:	fb0b f505 	mul.w	r5, fp, r5
 801b4be:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 801b4c2:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
 801b4c6:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801b4ca:	44dc      	add	ip, fp
 801b4cc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b4d0:	9501      	str	r5, [sp, #4]
 801b4d2:	f00c 15ff 	and.w	r5, ip, #16711935	@ 0xff00ff
 801b4d6:	9503      	str	r5, [sp, #12]
 801b4d8:	9d01      	ldr	r5, [sp, #4]
 801b4da:	9e02      	ldr	r6, [sp, #8]
 801b4dc:	f505 7c80 	add.w	ip, r5, #256	@ 0x100
 801b4e0:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801b4e4:	f001 1cff 	and.w	ip, r1, #16711935	@ 0xff00ff
 801b4e8:	fb0a fc0c 	mul.w	ip, sl, ip
 801b4ec:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 801b4f0:	ea4f 251c 	mov.w	r5, ip, lsr #8
 801b4f4:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 801b4f8:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801b4fc:	4465      	add	r5, ip
 801b4fe:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 801b502:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
 801b506:	fb09 fc0c 	mul.w	ip, r9, ip
 801b50a:	fb09 f904 	mul.w	r9, r9, r4
 801b50e:	f509 7480 	add.w	r4, r9, #256	@ 0x100
 801b512:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 801b516:	f002 14ff 	and.w	r4, r2, #16711935	@ 0xff00ff
 801b51a:	fb08 f404 	mul.w	r4, r8, r4
 801b51e:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 801b522:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 801b526:	fb08 f802 	mul.w	r8, r8, r2
 801b52a:	fb0a fa01 	mul.w	sl, sl, r1
 801b52e:	0a22      	lsrs	r2, r4, #8
 801b530:	f50a 7180 	add.w	r1, sl, #256	@ 0x100
 801b534:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 801b538:	f104 1401 	add.w	r4, r4, #65537	@ 0x10001
 801b53c:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 801b540:	4414      	add	r4, r2
 801b542:	ea4f 211c 	mov.w	r1, ip, lsr #8
 801b546:	f508 7280 	add.w	r2, r8, #256	@ 0x100
 801b54a:	0a2d      	lsrs	r5, r5, #8
 801b54c:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 801b550:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 801b554:	9a03      	ldr	r2, [sp, #12]
 801b556:	8836      	ldrh	r6, [r6, #0]
 801b558:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 801b55c:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801b560:	437d      	muls	r5, r7
 801b562:	4461      	add	r1, ip
 801b564:	0a24      	lsrs	r4, r4, #8
 801b566:	fb02 5503 	mla	r5, r2, r3, r5
 801b56a:	0a09      	lsrs	r1, r1, #8
 801b56c:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
 801b570:	fb04 540e 	mla	r4, r4, lr, r5
 801b574:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 801b578:	fb01 4100 	mla	r1, r1, r0, r4
 801b57c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b580:	0a09      	lsrs	r1, r1, #8
 801b582:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801b586:	f001 14ff 	and.w	r4, r1, #16711935	@ 0xff00ff
 801b58a:	fb07 f70a 	mul.w	r7, r7, sl
 801b58e:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801b592:	f40b 417f 	and.w	r1, fp, #65280	@ 0xff00
 801b596:	fb03 7101 	mla	r1, r3, r1, r7
 801b59a:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801b59e:	f408 487f 	and.w	r8, r8, #65280	@ 0xff00
 801b5a2:	fb0e 1e08 	mla	lr, lr, r8, r1
 801b5a6:	f409 417f 	and.w	r1, r9, #65280	@ 0xff00
 801b5aa:	fb00 e101 	mla	r1, r0, r1, lr
 801b5ae:	f89d 0050 	ldrb.w	r0, [sp, #80]	@ 0x50
 801b5b2:	9a00      	ldr	r2, [sp, #0]
 801b5b4:	b287      	uxth	r7, r0
 801b5b6:	437a      	muls	r2, r7
 801b5b8:	0a09      	lsrs	r1, r1, #8
 801b5ba:	1c53      	adds	r3, r2, #1
 801b5bc:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 801b5c0:	4321      	orrs	r1, r4
 801b5c2:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801b5c6:	1235      	asrs	r5, r6, #8
 801b5c8:	0c0a      	lsrs	r2, r1, #16
 801b5ca:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 801b5ce:	b2db      	uxtb	r3, r3
 801b5d0:	fb12 f207 	smulbb	r2, r2, r7
 801b5d4:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 801b5d8:	fb05 2503 	mla	r5, r5, r3, r2
 801b5dc:	f3c1 2407 	ubfx	r4, r1, #8, #8
 801b5e0:	10f2      	asrs	r2, r6, #3
 801b5e2:	b2c8      	uxtb	r0, r1
 801b5e4:	00f6      	lsls	r6, r6, #3
 801b5e6:	fb14 f407 	smulbb	r4, r4, r7
 801b5ea:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 801b5ee:	b2f6      	uxtb	r6, r6
 801b5f0:	fb10 f007 	smulbb	r0, r0, r7
 801b5f4:	fb02 4203 	mla	r2, r2, r3, r4
 801b5f8:	b2ad      	uxth	r5, r5
 801b5fa:	fb06 0303 	mla	r3, r6, r3, r0
 801b5fe:	b299      	uxth	r1, r3
 801b600:	b294      	uxth	r4, r2
 801b602:	1c6b      	adds	r3, r5, #1
 801b604:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801b608:	1c62      	adds	r2, r4, #1
 801b60a:	1c4b      	adds	r3, r1, #1
 801b60c:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801b610:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 801b614:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 801b618:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801b61c:	0952      	lsrs	r2, r2, #5
 801b61e:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801b622:	432b      	orrs	r3, r5
 801b624:	4313      	orrs	r3, r2
 801b626:	9a02      	ldr	r2, [sp, #8]
 801b628:	8013      	strh	r3, [r2, #0]
 801b62a:	b005      	add	sp, #20
 801b62c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b630:	2500      	movs	r5, #0
 801b632:	e6e9      	b.n	801b408 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x42>
 801b634:	2100      	movs	r1, #0
 801b636:	460d      	mov	r5, r1
 801b638:	e6f3      	b.n	801b422 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 801b63a:	2100      	movs	r1, #0
 801b63c:	e6f1      	b.n	801b422 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 801b63e:	4631      	mov	r1, r6
 801b640:	e6ef      	b.n	801b422 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 801b642:	2400      	movs	r4, #0
 801b644:	e700      	b.n	801b448 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x82>
 801b646:	2200      	movs	r2, #0
 801b648:	4614      	mov	r4, r2
 801b64a:	e70b      	b.n	801b464 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 801b64c:	4602      	mov	r2, r0
 801b64e:	4604      	mov	r4, r0
 801b650:	e708      	b.n	801b464 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 801b652:	2200      	movs	r2, #0
 801b654:	e706      	b.n	801b464 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 801b656:	4632      	mov	r2, r6
 801b658:	e704      	b.n	801b464 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>

0801b65a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801b65a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b65e:	b09f      	sub	sp, #124	@ 0x7c
 801b660:	921b      	str	r2, [sp, #108]	@ 0x6c
 801b662:	9309      	str	r3, [sp, #36]	@ 0x24
 801b664:	9a2d      	ldr	r2, [sp, #180]	@ 0xb4
 801b666:	f89d 30c4 	ldrb.w	r3, [sp, #196]	@ 0xc4
 801b66a:	931c      	str	r3, [sp, #112]	@ 0x70
 801b66c:	9119      	str	r1, [sp, #100]	@ 0x64
 801b66e:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	@ 0xb8
 801b672:	901d      	str	r0, [sp, #116]	@ 0x74
 801b674:	6850      	ldr	r0, [r2, #4]
 801b676:	6812      	ldr	r2, [r2, #0]
 801b678:	9d2a      	ldr	r5, [sp, #168]	@ 0xa8
 801b67a:	fb00 1303 	mla	r3, r0, r3, r1
 801b67e:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801b682:	930c      	str	r3, [sp, #48]	@ 0x30
 801b684:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 801b686:	681b      	ldr	r3, [r3, #0]
 801b688:	9312      	str	r3, [sp, #72]	@ 0x48
 801b68a:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 801b68c:	685e      	ldr	r6, [r3, #4]
 801b68e:	f8bd 3070 	ldrh.w	r3, [sp, #112]	@ 0x70
 801b692:	930d      	str	r3, [sp, #52]	@ 0x34
 801b694:	3604      	adds	r6, #4
 801b696:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 801b698:	2b00      	cmp	r3, #0
 801b69a:	dc03      	bgt.n	801b6a4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801b69c:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 801b69e:	2b00      	cmp	r3, #0
 801b6a0:	f340 8388 	ble.w	801bdb4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 801b6a4:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 801b6a6:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801b6aa:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801b6ae:	1e48      	subs	r0, r1, #1
 801b6b0:	1e57      	subs	r7, r2, #1
 801b6b2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801b6b4:	2b00      	cmp	r3, #0
 801b6b6:	f340 8195 	ble.w	801b9e4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801b6ba:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
 801b6bc:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801b6c0:	ea4f 4325 	mov.w	r3, r5, asr #16
 801b6c4:	d406      	bmi.n	801b6d4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801b6c6:	4584      	cmp	ip, r0
 801b6c8:	da04      	bge.n	801b6d4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801b6ca:	2b00      	cmp	r3, #0
 801b6cc:	db02      	blt.n	801b6d4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801b6ce:	42bb      	cmp	r3, r7
 801b6d0:	f2c0 8189 	blt.w	801b9e6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38c>
 801b6d4:	f11c 0c01 	adds.w	ip, ip, #1
 801b6d8:	f100 8177 	bmi.w	801b9ca <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801b6dc:	4561      	cmp	r1, ip
 801b6de:	f2c0 8174 	blt.w	801b9ca <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801b6e2:	3301      	adds	r3, #1
 801b6e4:	f100 8171 	bmi.w	801b9ca <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801b6e8:	429a      	cmp	r2, r3
 801b6ea:	f2c0 816e 	blt.w	801b9ca <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801b6ee:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801b6f0:	9f0c      	ldr	r7, [sp, #48]	@ 0x30
 801b6f2:	931a      	str	r3, [sp, #104]	@ 0x68
 801b6f4:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
 801b6f6:	2b00      	cmp	r3, #0
 801b6f8:	f340 8193 	ble.w	801ba22 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c8>
 801b6fc:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 801b6fe:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801b702:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 801b704:	e9d3 0e02 	ldrd	r0, lr, [r3, #8]
 801b708:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 801b70a:	141b      	asrs	r3, r3, #16
 801b70c:	ea4f 4c25 	mov.w	ip, r5, asr #16
 801b710:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801b714:	f100 81d6 	bmi.w	801bac4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 801b718:	f100 38ff 	add.w	r8, r0, #4294967295
 801b71c:	4543      	cmp	r3, r8
 801b71e:	f280 81d1 	bge.w	801bac4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 801b722:	f1bc 0f00 	cmp.w	ip, #0
 801b726:	f2c0 81cd 	blt.w	801bac4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 801b72a:	f10e 38ff 	add.w	r8, lr, #4294967295
 801b72e:	45c4      	cmp	ip, r8
 801b730:	f280 81c8 	bge.w	801bac4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 801b734:	b200      	sxth	r0, r0
 801b736:	fb0c 3300 	mla	r3, ip, r0, r3
 801b73a:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 801b73c:	eb04 0803 	add.w	r8, r4, r3
 801b740:	5ce3      	ldrb	r3, [r4, r3]
 801b742:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801b746:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 801b74a:	2a00      	cmp	r2, #0
 801b74c:	f000 81af 	beq.w	801baae <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 801b750:	f898 c001 	ldrb.w	ip, [r8, #1]
 801b754:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 801b758:	940e      	str	r4, [sp, #56]	@ 0x38
 801b75a:	0e24      	lsrs	r4, r4, #24
 801b75c:	9415      	str	r4, [sp, #84]	@ 0x54
 801b75e:	b179      	cbz	r1, 801b780 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 801b760:	eb08 0c00 	add.w	ip, r8, r0
 801b764:	f818 0000 	ldrb.w	r0, [r8, r0]
 801b768:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 801b76c:	900a      	str	r0, [sp, #40]	@ 0x28
 801b76e:	0e00      	lsrs	r0, r0, #24
 801b770:	9013      	str	r0, [sp, #76]	@ 0x4c
 801b772:	f89c 0001 	ldrb.w	r0, [ip, #1]
 801b776:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 801b77a:	900f      	str	r0, [sp, #60]	@ 0x3c
 801b77c:	0e00      	lsrs	r0, r0, #24
 801b77e:	9016      	str	r0, [sp, #88]	@ 0x58
 801b780:	b292      	uxth	r2, r2
 801b782:	b289      	uxth	r1, r1
 801b784:	fb02 f901 	mul.w	r9, r2, r1
 801b788:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801b78c:	0112      	lsls	r2, r2, #4
 801b78e:	eba2 0809 	sub.w	r8, r2, r9
 801b792:	b289      	uxth	r1, r1
 801b794:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
 801b798:	9815      	ldr	r0, [sp, #84]	@ 0x54
 801b79a:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801b79c:	fa1f f888 	uxth.w	r8, r8
 801b7a0:	1a52      	subs	r2, r2, r1
 801b7a2:	b292      	uxth	r2, r2
 801b7a4:	fb08 f000 	mul.w	r0, r8, r0
 801b7a8:	fb02 000e 	mla	r0, r2, lr, r0
 801b7ac:	fb01 0004 	mla	r0, r1, r4, r0
 801b7b0:	9c16      	ldr	r4, [sp, #88]	@ 0x58
 801b7b2:	fb09 0004 	mla	r0, r9, r4, r0
 801b7b6:	f3c0 2007 	ubfx	r0, r0, #8, #8
 801b7ba:	2800      	cmp	r0, #0
 801b7bc:	f000 80fa 	beq.w	801b9b4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801b7c0:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
 801b7c4:	d01b      	beq.n	801b7fe <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801b7c6:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 801b7ca:	fb0e fa0a 	mul.w	sl, lr, sl
 801b7ce:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801b7d2:	fb0e fe03 	mul.w	lr, lr, r3
 801b7d6:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801b7da:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801b7de:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 801b7e2:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
 801b7e6:	4453      	add	r3, sl
 801b7e8:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801b7ec:	0a1b      	lsrs	r3, r3, #8
 801b7ee:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b7f2:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801b7f6:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 801b7fa:	ea43 030c 	orr.w	r3, r3, ip
 801b7fe:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 801b800:	2cff      	cmp	r4, #255	@ 0xff
 801b802:	d021      	beq.n	801b848 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801b804:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801b806:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 801b80a:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 801b80c:	fb04 fb0b 	mul.w	fp, r4, fp
 801b810:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801b812:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801b816:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 801b818:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801b81c:	fb04 fa0a 	mul.w	sl, r4, sl
 801b820:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801b824:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801b828:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801b82c:	44de      	add	lr, fp
 801b82e:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801b832:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801b836:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b83a:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801b83e:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801b842:	ea4e 040a 	orr.w	r4, lr, sl
 801b846:	940e      	str	r4, [sp, #56]	@ 0x38
 801b848:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801b84a:	2cff      	cmp	r4, #255	@ 0xff
 801b84c:	d021      	beq.n	801b892 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 801b84e:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 801b850:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 801b854:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801b856:	fb04 fb0b 	mul.w	fp, r4, fp
 801b85a:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 801b85c:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801b860:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801b862:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801b866:	fb04 fa0a 	mul.w	sl, r4, sl
 801b86a:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801b86e:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801b872:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801b876:	44de      	add	lr, fp
 801b878:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801b87c:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801b880:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b884:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801b888:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801b88c:	ea4e 040a 	orr.w	r4, lr, sl
 801b890:	940a      	str	r4, [sp, #40]	@ 0x28
 801b892:	9c16      	ldr	r4, [sp, #88]	@ 0x58
 801b894:	2cff      	cmp	r4, #255	@ 0xff
 801b896:	d021      	beq.n	801b8dc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 801b898:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 801b89a:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 801b89e:	9c16      	ldr	r4, [sp, #88]	@ 0x58
 801b8a0:	fb04 fb0b 	mul.w	fp, r4, fp
 801b8a4:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 801b8a6:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801b8aa:	9c16      	ldr	r4, [sp, #88]	@ 0x58
 801b8ac:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801b8b0:	fb04 fa0a 	mul.w	sl, r4, sl
 801b8b4:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801b8b8:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801b8bc:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801b8c0:	44de      	add	lr, fp
 801b8c2:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801b8c6:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801b8ca:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b8ce:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801b8d2:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801b8d6:	ea4e 040a 	orr.w	r4, lr, sl
 801b8da:	940f      	str	r4, [sp, #60]	@ 0x3c
 801b8dc:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801b8de:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 801b8e2:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 801b8e4:	f003 1eff 	and.w	lr, r3, #16711935	@ 0xff00ff
 801b8e8:	fb08 fc0c 	mul.w	ip, r8, ip
 801b8ec:	fb02 cc0e 	mla	ip, r2, lr, ip
 801b8f0:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
 801b8f4:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 801b8f6:	fb01 cc0e 	mla	ip, r1, lr, ip
 801b8fa:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
 801b8fe:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801b900:	fb09 cc0e 	mla	ip, r9, lr, ip
 801b904:	f404 4e7f 	and.w	lr, r4, #65280	@ 0xff00
 801b908:	fb08 f80e 	mul.w	r8, r8, lr
 801b90c:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801b910:	fb02 8303 	mla	r3, r2, r3, r8
 801b914:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 801b916:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801b918:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
 801b91c:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801b91e:	fb01 330a 	mla	r3, r1, sl, r3
 801b922:	f402 417f 	and.w	r1, r2, #65280	@ 0xff00
 801b926:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 801b928:	fb09 3901 	mla	r9, r9, r1, r3
 801b92c:	4342      	muls	r2, r0
 801b92e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b932:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801b936:	883b      	ldrh	r3, [r7, #0]
 801b938:	1c50      	adds	r0, r2, #1
 801b93a:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801b93e:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
 801b942:	ea4c 0c09 	orr.w	ip, ip, r9
 801b946:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 801b94a:	1219      	asrs	r1, r3, #8
 801b94c:	ea4f 421c 	mov.w	r2, ip, lsr #16
 801b950:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 801b954:	b2c0      	uxtb	r0, r0
 801b956:	fb12 f204 	smulbb	r2, r2, r4
 801b95a:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 801b95e:	fb01 2100 	mla	r1, r1, r0, r2
 801b962:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 801b966:	10da      	asrs	r2, r3, #3
 801b968:	fa5f fc8c 	uxtb.w	ip, ip
 801b96c:	00db      	lsls	r3, r3, #3
 801b96e:	fb1c fc04 	smulbb	ip, ip, r4
 801b972:	b2db      	uxtb	r3, r3
 801b974:	b289      	uxth	r1, r1
 801b976:	fb03 c300 	mla	r3, r3, r0, ip
 801b97a:	fa1f fc83 	uxth.w	ip, r3
 801b97e:	1c4b      	adds	r3, r1, #1
 801b980:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801b984:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 801b988:	fb1e fe04 	smulbb	lr, lr, r4
 801b98c:	f10c 0301 	add.w	r3, ip, #1
 801b990:	fb02 e200 	mla	r2, r2, r0, lr
 801b994:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 801b998:	b292      	uxth	r2, r2
 801b99a:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
 801b99e:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801b9a2:	430b      	orrs	r3, r1
 801b9a4:	1c51      	adds	r1, r2, #1
 801b9a6:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801b9aa:	0952      	lsrs	r2, r2, #5
 801b9ac:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801b9b0:	4313      	orrs	r3, r2
 801b9b2:	803b      	strh	r3, [r7, #0]
 801b9b4:	9b2b      	ldr	r3, [sp, #172]	@ 0xac
 801b9b6:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 801b9b8:	441a      	add	r2, r3
 801b9ba:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801b9bc:	9229      	str	r2, [sp, #164]	@ 0xa4
 801b9be:	441d      	add	r5, r3
 801b9c0:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
 801b9c2:	3b01      	subs	r3, #1
 801b9c4:	3702      	adds	r7, #2
 801b9c6:	931a      	str	r3, [sp, #104]	@ 0x68
 801b9c8:	e694      	b.n	801b6f4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801b9ca:	9b2b      	ldr	r3, [sp, #172]	@ 0xac
 801b9cc:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
 801b9ce:	441c      	add	r4, r3
 801b9d0:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801b9d2:	9429      	str	r4, [sp, #164]	@ 0xa4
 801b9d4:	441d      	add	r5, r3
 801b9d6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801b9d8:	3b01      	subs	r3, #1
 801b9da:	9309      	str	r3, [sp, #36]	@ 0x24
 801b9dc:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801b9de:	3302      	adds	r3, #2
 801b9e0:	930c      	str	r3, [sp, #48]	@ 0x30
 801b9e2:	e666      	b.n	801b6b2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801b9e4:	d024      	beq.n	801ba30 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d6>
 801b9e6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801b9e8:	982b      	ldr	r0, [sp, #172]	@ 0xac
 801b9ea:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
 801b9ec:	3b01      	subs	r3, #1
 801b9ee:	fb00 4003 	mla	r0, r0, r3, r4
 801b9f2:	1400      	asrs	r0, r0, #16
 801b9f4:	f53f ae7b 	bmi.w	801b6ee <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801b9f8:	3901      	subs	r1, #1
 801b9fa:	4288      	cmp	r0, r1
 801b9fc:	f6bf ae77 	bge.w	801b6ee <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801ba00:	992c      	ldr	r1, [sp, #176]	@ 0xb0
 801ba02:	fb01 5303 	mla	r3, r1, r3, r5
 801ba06:	141b      	asrs	r3, r3, #16
 801ba08:	f53f ae71 	bmi.w	801b6ee <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801ba0c:	3a01      	subs	r2, #1
 801ba0e:	4293      	cmp	r3, r2
 801ba10:	f6bf ae6d 	bge.w	801b6ee <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801ba14:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
 801ba18:	f8dd 9030 	ldr.w	r9, [sp, #48]	@ 0x30
 801ba1c:	f1bb 0f00 	cmp.w	fp, #0
 801ba20:	dc70      	bgt.n	801bb04 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4aa>
 801ba22:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801ba24:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801ba28:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801ba2a:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801ba2e:	930c      	str	r3, [sp, #48]	@ 0x30
 801ba30:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 801ba32:	2b00      	cmp	r3, #0
 801ba34:	f340 81be 	ble.w	801bdb4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 801ba38:	ee30 0a04 	vadd.f32	s0, s0, s8
 801ba3c:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801ba40:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801ba44:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801ba46:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801ba4a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801ba4e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801ba52:	eef0 6a62 	vmov.f32	s13, s5
 801ba56:	ee61 7a27 	vmul.f32	s15, s2, s15
 801ba5a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801ba5e:	ee77 2a62 	vsub.f32	s5, s14, s5
 801ba62:	edcd 6a29 	vstr	s13, [sp, #164]	@ 0xa4
 801ba66:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801ba6a:	eef0 6a43 	vmov.f32	s13, s6
 801ba6e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801ba72:	ee12 2a90 	vmov	r2, s5
 801ba76:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801ba7a:	fb92 f3f3 	sdiv	r3, r2, r3
 801ba7e:	ee13 2a10 	vmov	r2, s6
 801ba82:	932b      	str	r3, [sp, #172]	@ 0xac
 801ba84:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801ba86:	fb92 f3f3 	sdiv	r3, r2, r3
 801ba8a:	932c      	str	r3, [sp, #176]	@ 0xb0
 801ba8c:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 801ba8e:	9a1b      	ldr	r2, [sp, #108]	@ 0x6c
 801ba90:	3b01      	subs	r3, #1
 801ba92:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801ba96:	9319      	str	r3, [sp, #100]	@ 0x64
 801ba98:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801ba9a:	bf08      	it	eq
 801ba9c:	4613      	moveq	r3, r2
 801ba9e:	ee16 5a90 	vmov	r5, s13
 801baa2:	9309      	str	r3, [sp, #36]	@ 0x24
 801baa4:	eeb0 3a67 	vmov.f32	s6, s15
 801baa8:	eef0 2a47 	vmov.f32	s5, s14
 801baac:	e5f3      	b.n	801b696 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801baae:	2900      	cmp	r1, #0
 801bab0:	f43f ae66 	beq.w	801b780 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 801bab4:	f818 0000 	ldrb.w	r0, [r8, r0]
 801bab8:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 801babc:	900a      	str	r0, [sp, #40]	@ 0x28
 801babe:	0e00      	lsrs	r0, r0, #24
 801bac0:	9013      	str	r0, [sp, #76]	@ 0x4c
 801bac2:	e65d      	b.n	801b780 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 801bac4:	f113 0801 	adds.w	r8, r3, #1
 801bac8:	f53f af74 	bmi.w	801b9b4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801bacc:	4540      	cmp	r0, r8
 801bace:	f6ff af71 	blt.w	801b9b4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801bad2:	f11c 0801 	adds.w	r8, ip, #1
 801bad6:	f53f af6d 	bmi.w	801b9b4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801bada:	45c6      	cmp	lr, r8
 801badc:	f6ff af6a 	blt.w	801b9b4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801bae0:	9c1c      	ldr	r4, [sp, #112]	@ 0x70
 801bae2:	9302      	str	r3, [sp, #8]
 801bae4:	b200      	sxth	r0, r0
 801bae6:	fa0f f38e 	sxth.w	r3, lr
 801baea:	e9cd 1405 	strd	r1, r4, [sp, #20]
 801baee:	e9cd c203 	strd	ip, r2, [sp, #12]
 801baf2:	9301      	str	r3, [sp, #4]
 801baf4:	9000      	str	r0, [sp, #0]
 801baf6:	4633      	mov	r3, r6
 801baf8:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 801bafa:	981d      	ldr	r0, [sp, #116]	@ 0x74
 801bafc:	4639      	mov	r1, r7
 801bafe:	f7ff fc62 	bl	801b3c6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>
 801bb02:	e757      	b.n	801b9b4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801bb04:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 801bb06:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
 801bb08:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801bb0c:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 801bb0e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801bb12:	1427      	asrs	r7, r4, #16
 801bb14:	142b      	asrs	r3, r5, #16
 801bb16:	fb01 7303 	mla	r3, r1, r3, r7
 801bb1a:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 801bb1c:	18e7      	adds	r7, r4, r3
 801bb1e:	5ce3      	ldrb	r3, [r4, r3]
 801bb20:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801bb24:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801bb28:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801bb2c:	2a00      	cmp	r2, #0
 801bb2e:	f000 8137 	beq.w	801bda0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 801bb32:	f897 e001 	ldrb.w	lr, [r7, #1]
 801bb36:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 801bb3a:	9410      	str	r4, [sp, #64]	@ 0x40
 801bb3c:	0e24      	lsrs	r4, r4, #24
 801bb3e:	9417      	str	r4, [sp, #92]	@ 0x5c
 801bb40:	b170      	cbz	r0, 801bb60 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 801bb42:	eb07 0e01 	add.w	lr, r7, r1
 801bb46:	5c79      	ldrb	r1, [r7, r1]
 801bb48:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801bb4c:	910b      	str	r1, [sp, #44]	@ 0x2c
 801bb4e:	0e09      	lsrs	r1, r1, #24
 801bb50:	9114      	str	r1, [sp, #80]	@ 0x50
 801bb52:	f89e 1001 	ldrb.w	r1, [lr, #1]
 801bb56:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801bb5a:	9111      	str	r1, [sp, #68]	@ 0x44
 801bb5c:	0e09      	lsrs	r1, r1, #24
 801bb5e:	9118      	str	r1, [sp, #96]	@ 0x60
 801bb60:	b292      	uxth	r2, r2
 801bb62:	b280      	uxth	r0, r0
 801bb64:	fb02 f800 	mul.w	r8, r2, r0
 801bb68:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 801bb6c:	0112      	lsls	r2, r2, #4
 801bb6e:	eba2 0e08 	sub.w	lr, r2, r8
 801bb72:	b280      	uxth	r0, r0
 801bb74:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
 801bb78:	9917      	ldr	r1, [sp, #92]	@ 0x5c
 801bb7a:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801bb7c:	fa1f fe8e 	uxth.w	lr, lr
 801bb80:	1a12      	subs	r2, r2, r0
 801bb82:	b292      	uxth	r2, r2
 801bb84:	fb0e f101 	mul.w	r1, lr, r1
 801bb88:	fb02 110c 	mla	r1, r2, ip, r1
 801bb8c:	fb00 1104 	mla	r1, r0, r4, r1
 801bb90:	9c18      	ldr	r4, [sp, #96]	@ 0x60
 801bb92:	fb08 1104 	mla	r1, r8, r4, r1
 801bb96:	f3c1 2107 	ubfx	r1, r1, #8, #8
 801bb9a:	2900      	cmp	r1, #0
 801bb9c:	f000 80f5 	beq.w	801bd8a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 801bba0:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
 801bba4:	d019      	beq.n	801bbda <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x580>
 801bba6:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 801bbaa:	fb0c fa0a 	mul.w	sl, ip, sl
 801bbae:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801bbb2:	fb0c fc03 	mul.w	ip, ip, r3
 801bbb6:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801bbba:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801bbbe:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 801bbc2:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
 801bbc6:	4453      	add	r3, sl
 801bbc8:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801bbcc:	0a1b      	lsrs	r3, r3, #8
 801bbce:	0a3f      	lsrs	r7, r7, #8
 801bbd0:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801bbd4:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 801bbd8:	433b      	orrs	r3, r7
 801bbda:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
 801bbdc:	2cff      	cmp	r4, #255	@ 0xff
 801bbde:	d020      	beq.n	801bc22 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c8>
 801bbe0:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801bbe2:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 801bbe6:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
 801bbe8:	4367      	muls	r7, r4
 801bbea:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801bbec:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801bbf0:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
 801bbf2:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801bbf6:	fb04 fa0a 	mul.w	sl, r4, sl
 801bbfa:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801bbfe:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801bc02:	44bc      	add	ip, r7
 801bc04:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801bc08:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801bc0c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801bc10:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801bc14:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801bc18:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801bc1c:	ea4c 040a 	orr.w	r4, ip, sl
 801bc20:	9410      	str	r4, [sp, #64]	@ 0x40
 801bc22:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801bc24:	2cff      	cmp	r4, #255	@ 0xff
 801bc26:	d020      	beq.n	801bc6a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x610>
 801bc28:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801bc2a:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 801bc2e:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801bc30:	4367      	muls	r7, r4
 801bc32:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801bc34:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801bc38:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801bc3a:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801bc3e:	fb04 fa0a 	mul.w	sl, r4, sl
 801bc42:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801bc46:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801bc4a:	44bc      	add	ip, r7
 801bc4c:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801bc50:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801bc54:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801bc58:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801bc5c:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801bc60:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801bc64:	ea4c 040a 	orr.w	r4, ip, sl
 801bc68:	940b      	str	r4, [sp, #44]	@ 0x2c
 801bc6a:	9c18      	ldr	r4, [sp, #96]	@ 0x60
 801bc6c:	2cff      	cmp	r4, #255	@ 0xff
 801bc6e:	d020      	beq.n	801bcb2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x658>
 801bc70:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 801bc72:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 801bc76:	9c18      	ldr	r4, [sp, #96]	@ 0x60
 801bc78:	4367      	muls	r7, r4
 801bc7a:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 801bc7c:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801bc80:	9c18      	ldr	r4, [sp, #96]	@ 0x60
 801bc82:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801bc86:	fb04 fa0a 	mul.w	sl, r4, sl
 801bc8a:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801bc8e:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801bc92:	44bc      	add	ip, r7
 801bc94:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801bc98:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801bc9c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801bca0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801bca4:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801bca8:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801bcac:	ea4c 040a 	orr.w	r4, ip, sl
 801bcb0:	9411      	str	r4, [sp, #68]	@ 0x44
 801bcb2:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801bcb4:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 801bcb8:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801bcba:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
 801bcbe:	fb0e f707 	mul.w	r7, lr, r7
 801bcc2:	fb02 770c 	mla	r7, r2, ip, r7
 801bcc6:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 801bcca:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 801bccc:	fb00 770c 	mla	r7, r0, ip, r7
 801bcd0:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 801bcd4:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801bcd6:	fb08 770c 	mla	r7, r8, ip, r7
 801bcda:	f404 4c7f 	and.w	ip, r4, #65280	@ 0xff00
 801bcde:	fb0e fe0c 	mul.w	lr, lr, ip
 801bce2:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801bce6:	fb02 e303 	mla	r3, r2, r3, lr
 801bcea:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 801bcec:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801bcee:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
 801bcf2:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 801bcf4:	fb00 330a 	mla	r3, r0, sl, r3
 801bcf8:	f402 4c7f 	and.w	ip, r2, #65280	@ 0xff00
 801bcfc:	fb08 3c0c 	mla	ip, r8, ip, r3
 801bd00:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801bd02:	f8b9 0000 	ldrh.w	r0, [r9]
 801bd06:	434b      	muls	r3, r1
 801bd08:	0a3f      	lsrs	r7, r7, #8
 801bd0a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801bd0e:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 801bd12:	1c59      	adds	r1, r3, #1
 801bd14:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
 801bd18:	ea47 070c 	orr.w	r7, r7, ip
 801bd1c:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 801bd20:	1202      	asrs	r2, r0, #8
 801bd22:	0c3b      	lsrs	r3, r7, #16
 801bd24:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 801bd28:	b2c9      	uxtb	r1, r1
 801bd2a:	fb13 f304 	smulbb	r3, r3, r4
 801bd2e:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 801bd32:	fb02 3201 	mla	r2, r2, r1, r3
 801bd36:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 801bd3a:	10c3      	asrs	r3, r0, #3
 801bd3c:	b2ff      	uxtb	r7, r7
 801bd3e:	00c0      	lsls	r0, r0, #3
 801bd40:	b292      	uxth	r2, r2
 801bd42:	fb1c fc04 	smulbb	ip, ip, r4
 801bd46:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 801bd4a:	b2c0      	uxtb	r0, r0
 801bd4c:	fb17 f704 	smulbb	r7, r7, r4
 801bd50:	fb03 c301 	mla	r3, r3, r1, ip
 801bd54:	fb00 7001 	mla	r0, r0, r1, r7
 801bd58:	f102 0c01 	add.w	ip, r2, #1
 801bd5c:	b280      	uxth	r0, r0
 801bd5e:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 801bd62:	f402 4c78 	and.w	ip, r2, #63488	@ 0xf800
 801bd66:	1c42      	adds	r2, r0, #1
 801bd68:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 801bd6c:	b29b      	uxth	r3, r3
 801bd6e:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801bd72:	ea42 020c 	orr.w	r2, r2, ip
 801bd76:	f103 0c01 	add.w	ip, r3, #1
 801bd7a:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 801bd7e:	095b      	lsrs	r3, r3, #5
 801bd80:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801bd84:	431a      	orrs	r2, r3
 801bd86:	f8a9 2000 	strh.w	r2, [r9]
 801bd8a:	9b2b      	ldr	r3, [sp, #172]	@ 0xac
 801bd8c:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 801bd8e:	441a      	add	r2, r3
 801bd90:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801bd92:	9229      	str	r2, [sp, #164]	@ 0xa4
 801bd94:	f109 0902 	add.w	r9, r9, #2
 801bd98:	441d      	add	r5, r3
 801bd9a:	f10b 3bff 	add.w	fp, fp, #4294967295
 801bd9e:	e63d      	b.n	801ba1c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 801bda0:	2800      	cmp	r0, #0
 801bda2:	f43f aedd 	beq.w	801bb60 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 801bda6:	5c79      	ldrb	r1, [r7, r1]
 801bda8:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801bdac:	910b      	str	r1, [sp, #44]	@ 0x2c
 801bdae:	0e09      	lsrs	r1, r1, #24
 801bdb0:	9114      	str	r1, [sp, #80]	@ 0x50
 801bdb2:	e6d5      	b.n	801bb60 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 801bdb4:	b01f      	add	sp, #124	@ 0x7c
 801bdb6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801bdba <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>:
 801bdba:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801bdbe:	b089      	sub	sp, #36	@ 0x24
 801bdc0:	9101      	str	r1, [sp, #4]
 801bdc2:	9801      	ldr	r0, [sp, #4]
 801bdc4:	f9bd c048 	ldrsh.w	ip, [sp, #72]	@ 0x48
 801bdc8:	8800      	ldrh	r0, [r0, #0]
 801bdca:	f9bd 804c 	ldrsh.w	r8, [sp, #76]	@ 0x4c
 801bdce:	f89d 5058 	ldrb.w	r5, [sp, #88]	@ 0x58
 801bdd2:	f89d 405c 	ldrb.w	r4, [sp, #92]	@ 0x5c
 801bdd6:	1206      	asrs	r6, r0, #8
 801bdd8:	e9dd 1714 	ldrd	r1, r7, [sp, #80]	@ 0x50
 801bddc:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 801bde0:	9602      	str	r6, [sp, #8]
 801bde2:	10c6      	asrs	r6, r0, #3
 801bde4:	00c0      	lsls	r0, r0, #3
 801bde6:	b2c0      	uxtb	r0, r0
 801bde8:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 801bdec:	9004      	str	r0, [sp, #16]
 801bdee:	2f00      	cmp	r7, #0
 801bdf0:	fb07 100c 	mla	r0, r7, ip, r1
 801bdf4:	9603      	str	r6, [sp, #12]
 801bdf6:	eb02 0e00 	add.w	lr, r2, r0
 801bdfa:	f2c0 810a 	blt.w	801c012 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 801bdfe:	45b8      	cmp	r8, r7
 801be00:	f340 8107 	ble.w	801c012 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 801be04:	2900      	cmp	r1, #0
 801be06:	f2c0 8102 	blt.w	801c00e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 801be0a:	458c      	cmp	ip, r1
 801be0c:	f340 80ff 	ble.w	801c00e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 801be10:	5c12      	ldrb	r2, [r2, r0]
 801be12:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 801be16:	1c4a      	adds	r2, r1, #1
 801be18:	f100 80fe 	bmi.w	801c018 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 801be1c:	4594      	cmp	ip, r2
 801be1e:	f340 80fb 	ble.w	801c018 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 801be22:	2d00      	cmp	r5, #0
 801be24:	f000 80fa 	beq.w	801c01c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x262>
 801be28:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801be2c:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 801be30:	3701      	adds	r7, #1
 801be32:	f100 80f7 	bmi.w	801c024 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 801be36:	45b8      	cmp	r8, r7
 801be38:	f340 80f4 	ble.w	801c024 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 801be3c:	2c00      	cmp	r4, #0
 801be3e:	f000 80f4 	beq.w	801c02a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x270>
 801be42:	2900      	cmp	r1, #0
 801be44:	eb0e 020c 	add.w	r2, lr, ip
 801be48:	f2c0 80ea 	blt.w	801c020 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 801be4c:	458c      	cmp	ip, r1
 801be4e:	f340 80e7 	ble.w	801c020 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 801be52:	f81e 700c 	ldrb.w	r7, [lr, ip]
 801be56:	f853 7027 	ldr.w	r7, [r3, r7, lsl #2]
 801be5a:	3101      	adds	r1, #1
 801be5c:	f100 80e8 	bmi.w	801c030 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 801be60:	458c      	cmp	ip, r1
 801be62:	f340 80e5 	ble.w	801c030 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 801be66:	2d00      	cmp	r5, #0
 801be68:	f000 80e4 	beq.w	801c034 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x27a>
 801be6c:	7852      	ldrb	r2, [r2, #1]
 801be6e:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 801be72:	0e0b      	lsrs	r3, r1, #24
 801be74:	ea4f 6a10 	mov.w	sl, r0, lsr #24
 801be78:	9300      	str	r3, [sp, #0]
 801be7a:	b2a4      	uxth	r4, r4
 801be7c:	b2ab      	uxth	r3, r5
 801be7e:	f000 15ff 	and.w	r5, r0, #16711935	@ 0xff00ff
 801be82:	fb03 f904 	mul.w	r9, r3, r4
 801be86:	fb0a f505 	mul.w	r5, sl, r5
 801be8a:	011b      	lsls	r3, r3, #4
 801be8c:	eba3 0e09 	sub.w	lr, r3, r9
 801be90:	f5c3 7280 	rsb	r2, r3, #256	@ 0x100
 801be94:	f400 437f 	and.w	r3, r0, #65280	@ 0xff00
 801be98:	0a28      	lsrs	r0, r5, #8
 801be9a:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 801be9e:	f105 1501 	add.w	r5, r5, #65537	@ 0x10001
 801bea2:	4405      	add	r5, r0
 801bea4:	0a2d      	lsrs	r5, r5, #8
 801bea6:	fb0a f303 	mul.w	r3, sl, r3
 801beaa:	f005 10ff 	and.w	r0, r5, #16711935	@ 0xff00ff
 801beae:	9005      	str	r0, [sp, #20]
 801beb0:	f503 7080 	add.w	r0, r3, #256	@ 0x100
 801beb4:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 801beb8:	0a1b      	lsrs	r3, r3, #8
 801beba:	ea4f 6b16 	mov.w	fp, r6, lsr #24
 801bebe:	9306      	str	r3, [sp, #24]
 801bec0:	f006 13ff 	and.w	r3, r6, #16711935	@ 0xff00ff
 801bec4:	fb0b f303 	mul.w	r3, fp, r3
 801bec8:	0a1d      	lsrs	r5, r3, #8
 801beca:	f406 467f 	and.w	r6, r6, #65280	@ 0xff00
 801bece:	ea4f 6817 	mov.w	r8, r7, lsr #24
 801bed2:	fb0b f606 	mul.w	r6, fp, r6
 801bed6:	f103 1301 	add.w	r3, r3, #65537	@ 0x10001
 801beda:	f007 1cff 	and.w	ip, r7, #16711935	@ 0xff00ff
 801bede:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 801bee2:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 801bee6:	fb08 f707 	mul.w	r7, r8, r7
 801beea:	441d      	add	r5, r3
 801beec:	f506 7380 	add.w	r3, r6, #256	@ 0x100
 801bef0:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 801bef4:	f507 7380 	add.w	r3, r7, #256	@ 0x100
 801bef8:	eb03 2317 	add.w	r3, r3, r7, lsr #8
 801befc:	fb08 fc0c 	mul.w	ip, r8, ip
 801bf00:	0a1b      	lsrs	r3, r3, #8
 801bf02:	9307      	str	r3, [sp, #28]
 801bf04:	ea4f 201c 	mov.w	r0, ip, lsr #8
 801bf08:	0e0b      	lsrs	r3, r1, #24
 801bf0a:	f001 17ff 	and.w	r7, r1, #16711935	@ 0xff00ff
 801bf0e:	435f      	muls	r7, r3
 801bf10:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801bf14:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 801bf18:	ebc9 1404 	rsb	r4, r9, r4, lsl #4
 801bf1c:	4460      	add	r0, ip
 801bf1e:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801bf22:	b2a4      	uxth	r4, r4
 801bf24:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801bf28:	0a2d      	lsrs	r5, r5, #8
 801bf2a:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 801bf2e:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801bf32:	fa1f fe8e 	uxth.w	lr, lr
 801bf36:	4359      	muls	r1, r3
 801bf38:	1b12      	subs	r2, r2, r4
 801bf3a:	9b05      	ldr	r3, [sp, #20]
 801bf3c:	44bc      	add	ip, r7
 801bf3e:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 801bf42:	b292      	uxth	r2, r2
 801bf44:	fb05 f50e 	mul.w	r5, r5, lr
 801bf48:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801bf4c:	fb03 5502 	mla	r5, r3, r2, r5
 801bf50:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801bf54:	9b06      	ldr	r3, [sp, #24]
 801bf56:	f501 7780 	add.w	r7, r1, #256	@ 0x100
 801bf5a:	0a36      	lsrs	r6, r6, #8
 801bf5c:	0a00      	lsrs	r0, r0, #8
 801bf5e:	fb0c 5509 	mla	r5, ip, r9, r5
 801bf62:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 801bf66:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 801bf6a:	f406 467f 	and.w	r6, r6, #65280	@ 0xff00
 801bf6e:	fb00 5504 	mla	r5, r0, r4, r5
 801bf72:	fb0e f606 	mul.w	r6, lr, r6
 801bf76:	f403 407f 	and.w	r0, r3, #65280	@ 0xff00
 801bf7a:	0a09      	lsrs	r1, r1, #8
 801bf7c:	9b07      	ldr	r3, [sp, #28]
 801bf7e:	fb02 6000 	mla	r0, r2, r0, r6
 801bf82:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 801bf86:	fb09 0001 	mla	r0, r9, r1, r0
 801bf8a:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801bf8e:	fb0e fe0b 	mul.w	lr, lr, fp
 801bf92:	fb04 0003 	mla	r0, r4, r3, r0
 801bf96:	fb02 e20a 	mla	r2, r2, sl, lr
 801bf9a:	9b00      	ldr	r3, [sp, #0]
 801bf9c:	fb04 2408 	mla	r4, r4, r8, r2
 801bfa0:	fb09 4903 	mla	r9, r9, r3, r4
 801bfa4:	ea6f 2929 	mvn.w	r9, r9, asr #8
 801bfa8:	9b02      	ldr	r3, [sp, #8]
 801bfaa:	9a04      	ldr	r2, [sp, #16]
 801bfac:	fa5f f989 	uxtb.w	r9, r9
 801bfb0:	fb03 f109 	mul.w	r1, r3, r9
 801bfb4:	9b03      	ldr	r3, [sp, #12]
 801bfb6:	0a2d      	lsrs	r5, r5, #8
 801bfb8:	0a00      	lsrs	r0, r0, #8
 801bfba:	fb03 f309 	mul.w	r3, r3, r9
 801bfbe:	f400 407f 	and.w	r0, r0, #65280	@ 0xff00
 801bfc2:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 801bfc6:	4305      	orrs	r5, r0
 801bfc8:	fb02 f909 	mul.w	r9, r2, r9
 801bfcc:	1c58      	adds	r0, r3, #1
 801bfce:	1c4a      	adds	r2, r1, #1
 801bfd0:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 801bfd4:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801bfd8:	0a2b      	lsrs	r3, r5, #8
 801bfda:	0c2a      	lsrs	r2, r5, #16
 801bfdc:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801bfe0:	eb02 2211 	add.w	r2, r2, r1, lsr #8
 801bfe4:	00db      	lsls	r3, r3, #3
 801bfe6:	0212      	lsls	r2, r2, #8
 801bfe8:	f402 4278 	and.w	r2, r2, #63488	@ 0xf800
 801bfec:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801bff0:	4313      	orrs	r3, r2
 801bff2:	f109 0201 	add.w	r2, r9, #1
 801bff6:	eb02 2919 	add.w	r9, r2, r9, lsr #8
 801bffa:	eb05 2519 	add.w	r5, r5, r9, lsr #8
 801bffe:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801c002:	431d      	orrs	r5, r3
 801c004:	9b01      	ldr	r3, [sp, #4]
 801c006:	801d      	strh	r5, [r3, #0]
 801c008:	b009      	add	sp, #36	@ 0x24
 801c00a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c00e:	2000      	movs	r0, #0
 801c010:	e701      	b.n	801be16 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x5c>
 801c012:	2600      	movs	r6, #0
 801c014:	4630      	mov	r0, r6
 801c016:	e70b      	b.n	801be30 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 801c018:	2600      	movs	r6, #0
 801c01a:	e709      	b.n	801be30 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 801c01c:	462e      	mov	r6, r5
 801c01e:	e707      	b.n	801be30 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 801c020:	2700      	movs	r7, #0
 801c022:	e71a      	b.n	801be5a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa0>
 801c024:	2100      	movs	r1, #0
 801c026:	460f      	mov	r7, r1
 801c028:	e723      	b.n	801be72 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 801c02a:	4621      	mov	r1, r4
 801c02c:	4627      	mov	r7, r4
 801c02e:	e720      	b.n	801be72 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 801c030:	2100      	movs	r1, #0
 801c032:	e71e      	b.n	801be72 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 801c034:	4629      	mov	r1, r5
 801c036:	e71c      	b.n	801be72 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>

0801c038 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801c038:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c03c:	b09b      	sub	sp, #108	@ 0x6c
 801c03e:	9218      	str	r2, [sp, #96]	@ 0x60
 801c040:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 801c042:	9116      	str	r1, [sp, #88]	@ 0x58
 801c044:	9307      	str	r3, [sp, #28]
 801c046:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	@ 0xa8
 801c04a:	9019      	str	r0, [sp, #100]	@ 0x64
 801c04c:	6850      	ldr	r0, [r2, #4]
 801c04e:	6812      	ldr	r2, [r2, #0]
 801c050:	9d26      	ldr	r5, [sp, #152]	@ 0x98
 801c052:	fb00 1303 	mla	r3, r0, r3, r1
 801c056:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801c05a:	930a      	str	r3, [sp, #40]	@ 0x28
 801c05c:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801c05e:	681b      	ldr	r3, [r3, #0]
 801c060:	930f      	str	r3, [sp, #60]	@ 0x3c
 801c062:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801c064:	685e      	ldr	r6, [r3, #4]
 801c066:	3604      	adds	r6, #4
 801c068:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 801c06a:	2b00      	cmp	r3, #0
 801c06c:	dc03      	bgt.n	801c076 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801c06e:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801c070:	2b00      	cmp	r3, #0
 801c072:	f340 8373 	ble.w	801c75c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 801c076:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801c078:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801c07c:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801c080:	1e48      	subs	r0, r1, #1
 801c082:	1e57      	subs	r7, r2, #1
 801c084:	9b07      	ldr	r3, [sp, #28]
 801c086:	2b00      	cmp	r3, #0
 801c088:	f340 8190 	ble.w	801c3ac <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 801c08c:	9c25      	ldr	r4, [sp, #148]	@ 0x94
 801c08e:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801c092:	ea4f 4325 	mov.w	r3, r5, asr #16
 801c096:	d406      	bmi.n	801c0a6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801c098:	4584      	cmp	ip, r0
 801c09a:	da04      	bge.n	801c0a6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801c09c:	2b00      	cmp	r3, #0
 801c09e:	db02      	blt.n	801c0a6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801c0a0:	42bb      	cmp	r3, r7
 801c0a2:	f2c0 8184 	blt.w	801c3ae <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x376>
 801c0a6:	f11c 0c01 	adds.w	ip, ip, #1
 801c0aa:	f100 8172 	bmi.w	801c392 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801c0ae:	4561      	cmp	r1, ip
 801c0b0:	f2c0 816f 	blt.w	801c392 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801c0b4:	3301      	adds	r3, #1
 801c0b6:	f100 816c 	bmi.w	801c392 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801c0ba:	429a      	cmp	r2, r3
 801c0bc:	f2c0 8169 	blt.w	801c392 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801c0c0:	9b07      	ldr	r3, [sp, #28]
 801c0c2:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
 801c0c4:	9317      	str	r3, [sp, #92]	@ 0x5c
 801c0c6:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 801c0c8:	2b00      	cmp	r3, #0
 801c0ca:	f340 818e 	ble.w	801c3ea <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b2>
 801c0ce:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 801c0d0:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801c0d4:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801c0d6:	e9d3 1e02 	ldrd	r1, lr, [r3, #8]
 801c0da:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 801c0dc:	141b      	asrs	r3, r3, #16
 801c0de:	ea4f 4c25 	mov.w	ip, r5, asr #16
 801c0e2:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801c0e6:	f100 81d1 	bmi.w	801c48c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 801c0ea:	f101 38ff 	add.w	r8, r1, #4294967295
 801c0ee:	4543      	cmp	r3, r8
 801c0f0:	f280 81cc 	bge.w	801c48c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 801c0f4:	f1bc 0f00 	cmp.w	ip, #0
 801c0f8:	f2c0 81c8 	blt.w	801c48c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 801c0fc:	f10e 38ff 	add.w	r8, lr, #4294967295
 801c100:	45c4      	cmp	ip, r8
 801c102:	f280 81c3 	bge.w	801c48c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 801c106:	b209      	sxth	r1, r1
 801c108:	fb0c 3301 	mla	r3, ip, r1, r3
 801c10c:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 801c10e:	eb04 0803 	add.w	r8, r4, r3
 801c112:	5ce3      	ldrb	r3, [r4, r3]
 801c114:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801c118:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 801c11c:	2a00      	cmp	r2, #0
 801c11e:	f000 81aa 	beq.w	801c476 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x43e>
 801c122:	f898 c001 	ldrb.w	ip, [r8, #1]
 801c126:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 801c12a:	940b      	str	r4, [sp, #44]	@ 0x2c
 801c12c:	0e24      	lsrs	r4, r4, #24
 801c12e:	9412      	str	r4, [sp, #72]	@ 0x48
 801c130:	b178      	cbz	r0, 801c152 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 801c132:	eb08 0c01 	add.w	ip, r8, r1
 801c136:	f818 1001 	ldrb.w	r1, [r8, r1]
 801c13a:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801c13e:	9108      	str	r1, [sp, #32]
 801c140:	0e09      	lsrs	r1, r1, #24
 801c142:	9110      	str	r1, [sp, #64]	@ 0x40
 801c144:	f89c 1001 	ldrb.w	r1, [ip, #1]
 801c148:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801c14c:	910c      	str	r1, [sp, #48]	@ 0x30
 801c14e:	0e09      	lsrs	r1, r1, #24
 801c150:	9113      	str	r1, [sp, #76]	@ 0x4c
 801c152:	b292      	uxth	r2, r2
 801c154:	b280      	uxth	r0, r0
 801c156:	fb02 f900 	mul.w	r9, r2, r0
 801c15a:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 801c15e:	0112      	lsls	r2, r2, #4
 801c160:	eba2 0809 	sub.w	r8, r2, r9
 801c164:	b280      	uxth	r0, r0
 801c166:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
 801c16a:	9912      	ldr	r1, [sp, #72]	@ 0x48
 801c16c:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801c16e:	fa1f f888 	uxth.w	r8, r8
 801c172:	1a12      	subs	r2, r2, r0
 801c174:	b292      	uxth	r2, r2
 801c176:	fb08 f101 	mul.w	r1, r8, r1
 801c17a:	fb02 110e 	mla	r1, r2, lr, r1
 801c17e:	fb00 1104 	mla	r1, r0, r4, r1
 801c182:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801c184:	fb09 1104 	mla	r1, r9, r4, r1
 801c188:	f3c1 2107 	ubfx	r1, r1, #8, #8
 801c18c:	2900      	cmp	r1, #0
 801c18e:	f000 80f5 	beq.w	801c37c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801c192:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
 801c196:	d01b      	beq.n	801c1d0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801c198:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 801c19c:	fb0e fa0a 	mul.w	sl, lr, sl
 801c1a0:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801c1a4:	fb0e fe03 	mul.w	lr, lr, r3
 801c1a8:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801c1ac:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801c1b0:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 801c1b4:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
 801c1b8:	4453      	add	r3, sl
 801c1ba:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801c1be:	0a1b      	lsrs	r3, r3, #8
 801c1c0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801c1c4:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801c1c8:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 801c1cc:	ea43 030c 	orr.w	r3, r3, ip
 801c1d0:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 801c1d2:	2cff      	cmp	r4, #255	@ 0xff
 801c1d4:	d021      	beq.n	801c21a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e2>
 801c1d6:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801c1d8:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 801c1dc:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 801c1de:	fb04 fb0b 	mul.w	fp, r4, fp
 801c1e2:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801c1e4:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801c1e8:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 801c1ea:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801c1ee:	fb04 fa0a 	mul.w	sl, r4, sl
 801c1f2:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801c1f6:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801c1fa:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801c1fe:	44de      	add	lr, fp
 801c200:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801c204:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801c208:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801c20c:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801c210:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801c214:	ea4e 040a 	orr.w	r4, lr, sl
 801c218:	940b      	str	r4, [sp, #44]	@ 0x2c
 801c21a:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801c21c:	2cff      	cmp	r4, #255	@ 0xff
 801c21e:	d021      	beq.n	801c264 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22c>
 801c220:	9c08      	ldr	r4, [sp, #32]
 801c222:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 801c226:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801c228:	fb04 fb0b 	mul.w	fp, r4, fp
 801c22c:	9c08      	ldr	r4, [sp, #32]
 801c22e:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801c232:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801c234:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801c238:	fb04 fa0a 	mul.w	sl, r4, sl
 801c23c:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801c240:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801c244:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801c248:	44de      	add	lr, fp
 801c24a:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801c24e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801c252:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801c256:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801c25a:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801c25e:	ea4e 040a 	orr.w	r4, lr, sl
 801c262:	9408      	str	r4, [sp, #32]
 801c264:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801c266:	2cff      	cmp	r4, #255	@ 0xff
 801c268:	d021      	beq.n	801c2ae <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 801c26a:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 801c26c:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 801c270:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801c272:	fb04 fb0b 	mul.w	fp, r4, fp
 801c276:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 801c278:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801c27c:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801c27e:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801c282:	fb04 fa0a 	mul.w	sl, r4, sl
 801c286:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801c28a:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801c28e:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801c292:	44de      	add	lr, fp
 801c294:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801c298:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801c29c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801c2a0:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801c2a4:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801c2a8:	ea4e 040a 	orr.w	r4, lr, sl
 801c2ac:	940c      	str	r4, [sp, #48]	@ 0x30
 801c2ae:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801c2b0:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 801c2b4:	9c08      	ldr	r4, [sp, #32]
 801c2b6:	f003 1eff 	and.w	lr, r3, #16711935	@ 0xff00ff
 801c2ba:	fb08 fc0c 	mul.w	ip, r8, ip
 801c2be:	fb02 cc0e 	mla	ip, r2, lr, ip
 801c2c2:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
 801c2c6:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 801c2c8:	fb00 cc0e 	mla	ip, r0, lr, ip
 801c2cc:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
 801c2d0:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801c2d2:	fb09 cc0e 	mla	ip, r9, lr, ip
 801c2d6:	f404 4e7f 	and.w	lr, r4, #65280	@ 0xff00
 801c2da:	fb08 f80e 	mul.w	r8, r8, lr
 801c2de:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801c2e2:	fb02 8303 	mla	r3, r2, r3, r8
 801c2e6:	9a08      	ldr	r2, [sp, #32]
 801c2e8:	f8b7 8000 	ldrh.w	r8, [r7]
 801c2ec:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
 801c2f0:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 801c2f2:	fb00 330a 	mla	r3, r0, sl, r3
 801c2f6:	f402 407f 	and.w	r0, r2, #65280	@ 0xff00
 801c2fa:	fb09 3900 	mla	r9, r9, r0, r3
 801c2fe:	43c9      	mvns	r1, r1
 801c300:	ea4f 2228 	mov.w	r2, r8, asr #8
 801c304:	fa5f fe81 	uxtb.w	lr, r1
 801c308:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801c30c:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801c310:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 801c314:	fb02 f20e 	mul.w	r2, r2, lr
 801c318:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801c31c:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
 801c320:	ea4c 0c09 	orr.w	ip, ip, r9
 801c324:	1c53      	adds	r3, r2, #1
 801c326:	eb03 2212 	add.w	r2, r3, r2, lsr #8
 801c32a:	ea4f 00e8 	mov.w	r0, r8, asr #3
 801c32e:	ea4f 431c 	mov.w	r3, ip, lsr #16
 801c332:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801c336:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 801c33a:	4a63      	ldr	r2, [pc, #396]	@ (801c4c8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>)
 801c33c:	fb00 f00e 	mul.w	r0, r0, lr
 801c340:	b2db      	uxtb	r3, r3
 801c342:	ea02 2203 	and.w	r2, r2, r3, lsl #8
 801c346:	1c43      	adds	r3, r0, #1
 801c348:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801c34c:	ea4f 231c 	mov.w	r3, ip, lsr #8
 801c350:	ea4f 01c8 	mov.w	r1, r8, lsl #3
 801c354:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801c358:	b2c9      	uxtb	r1, r1
 801c35a:	00db      	lsls	r3, r3, #3
 801c35c:	fb01 f10e 	mul.w	r1, r1, lr
 801c360:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801c364:	4313      	orrs	r3, r2
 801c366:	1c4a      	adds	r2, r1, #1
 801c368:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801c36c:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 801c370:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 801c374:	ea4c 0c03 	orr.w	ip, ip, r3
 801c378:	f8a7 c000 	strh.w	ip, [r7]
 801c37c:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 801c37e:	9a25      	ldr	r2, [sp, #148]	@ 0x94
 801c380:	441a      	add	r2, r3
 801c382:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801c384:	9225      	str	r2, [sp, #148]	@ 0x94
 801c386:	441d      	add	r5, r3
 801c388:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 801c38a:	3b01      	subs	r3, #1
 801c38c:	3702      	adds	r7, #2
 801c38e:	9317      	str	r3, [sp, #92]	@ 0x5c
 801c390:	e699      	b.n	801c0c6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801c392:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 801c394:	9c25      	ldr	r4, [sp, #148]	@ 0x94
 801c396:	441c      	add	r4, r3
 801c398:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801c39a:	9425      	str	r4, [sp, #148]	@ 0x94
 801c39c:	441d      	add	r5, r3
 801c39e:	9b07      	ldr	r3, [sp, #28]
 801c3a0:	3b01      	subs	r3, #1
 801c3a2:	9307      	str	r3, [sp, #28]
 801c3a4:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801c3a6:	3302      	adds	r3, #2
 801c3a8:	930a      	str	r3, [sp, #40]	@ 0x28
 801c3aa:	e66b      	b.n	801c084 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801c3ac:	d024      	beq.n	801c3f8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c0>
 801c3ae:	9b07      	ldr	r3, [sp, #28]
 801c3b0:	9827      	ldr	r0, [sp, #156]	@ 0x9c
 801c3b2:	9c25      	ldr	r4, [sp, #148]	@ 0x94
 801c3b4:	3b01      	subs	r3, #1
 801c3b6:	fb00 4003 	mla	r0, r0, r3, r4
 801c3ba:	1400      	asrs	r0, r0, #16
 801c3bc:	f53f ae80 	bmi.w	801c0c0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801c3c0:	3901      	subs	r1, #1
 801c3c2:	4288      	cmp	r0, r1
 801c3c4:	f6bf ae7c 	bge.w	801c0c0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801c3c8:	9928      	ldr	r1, [sp, #160]	@ 0xa0
 801c3ca:	fb01 5303 	mla	r3, r1, r3, r5
 801c3ce:	141b      	asrs	r3, r3, #16
 801c3d0:	f53f ae76 	bmi.w	801c0c0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801c3d4:	3a01      	subs	r2, #1
 801c3d6:	4293      	cmp	r3, r2
 801c3d8:	f6bf ae72 	bge.w	801c0c0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801c3dc:	f8dd b01c 	ldr.w	fp, [sp, #28]
 801c3e0:	f8dd 9028 	ldr.w	r9, [sp, #40]	@ 0x28
 801c3e4:	f1bb 0f00 	cmp.w	fp, #0
 801c3e8:	dc70      	bgt.n	801c4cc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
 801c3ea:	9b07      	ldr	r3, [sp, #28]
 801c3ec:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801c3f0:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801c3f2:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801c3f6:	930a      	str	r3, [sp, #40]	@ 0x28
 801c3f8:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 801c3fa:	2b00      	cmp	r3, #0
 801c3fc:	f340 81ae 	ble.w	801c75c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 801c400:	ee30 0a04 	vadd.f32	s0, s0, s8
 801c404:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801c408:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801c40c:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801c40e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801c412:	ee31 1a05 	vadd.f32	s2, s2, s10
 801c416:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801c41a:	eef0 6a62 	vmov.f32	s13, s5
 801c41e:	ee61 7a27 	vmul.f32	s15, s2, s15
 801c422:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801c426:	ee77 2a62 	vsub.f32	s5, s14, s5
 801c42a:	edcd 6a25 	vstr	s13, [sp, #148]	@ 0x94
 801c42e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801c432:	eef0 6a43 	vmov.f32	s13, s6
 801c436:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801c43a:	ee12 2a90 	vmov	r2, s5
 801c43e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801c442:	fb92 f3f3 	sdiv	r3, r2, r3
 801c446:	ee13 2a10 	vmov	r2, s6
 801c44a:	9327      	str	r3, [sp, #156]	@ 0x9c
 801c44c:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801c44e:	fb92 f3f3 	sdiv	r3, r2, r3
 801c452:	9328      	str	r3, [sp, #160]	@ 0xa0
 801c454:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 801c456:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 801c458:	3b01      	subs	r3, #1
 801c45a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801c45e:	9316      	str	r3, [sp, #88]	@ 0x58
 801c460:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801c462:	bf08      	it	eq
 801c464:	4613      	moveq	r3, r2
 801c466:	ee16 5a90 	vmov	r5, s13
 801c46a:	9307      	str	r3, [sp, #28]
 801c46c:	eeb0 3a67 	vmov.f32	s6, s15
 801c470:	eef0 2a47 	vmov.f32	s5, s14
 801c474:	e5f8      	b.n	801c068 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801c476:	2800      	cmp	r0, #0
 801c478:	f43f ae6b 	beq.w	801c152 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 801c47c:	f818 1001 	ldrb.w	r1, [r8, r1]
 801c480:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801c484:	9108      	str	r1, [sp, #32]
 801c486:	0e09      	lsrs	r1, r1, #24
 801c488:	9110      	str	r1, [sp, #64]	@ 0x40
 801c48a:	e662      	b.n	801c152 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 801c48c:	f113 0801 	adds.w	r8, r3, #1
 801c490:	f53f af74 	bmi.w	801c37c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801c494:	4541      	cmp	r1, r8
 801c496:	f6ff af71 	blt.w	801c37c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801c49a:	f11c 0801 	adds.w	r8, ip, #1
 801c49e:	f53f af6d 	bmi.w	801c37c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801c4a2:	45c6      	cmp	lr, r8
 801c4a4:	f6ff af6a 	blt.w	801c37c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801c4a8:	e9cd 3c02 	strd	r3, ip, [sp, #8]
 801c4ac:	b209      	sxth	r1, r1
 801c4ae:	fa0f f38e 	sxth.w	r3, lr
 801c4b2:	e9cd 2004 	strd	r2, r0, [sp, #16]
 801c4b6:	9301      	str	r3, [sp, #4]
 801c4b8:	9100      	str	r1, [sp, #0]
 801c4ba:	4633      	mov	r3, r6
 801c4bc:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801c4be:	9819      	ldr	r0, [sp, #100]	@ 0x64
 801c4c0:	4639      	mov	r1, r7
 801c4c2:	f7ff fc7a 	bl	801bdba <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>
 801c4c6:	e759      	b.n	801c37c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801c4c8:	fffff800 	.word	0xfffff800
 801c4cc:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 801c4ce:	9c25      	ldr	r4, [sp, #148]	@ 0x94
 801c4d0:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801c4d4:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801c4d6:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801c4da:	1427      	asrs	r7, r4, #16
 801c4dc:	142b      	asrs	r3, r5, #16
 801c4de:	fb01 7303 	mla	r3, r1, r3, r7
 801c4e2:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 801c4e4:	18e7      	adds	r7, r4, r3
 801c4e6:	5ce3      	ldrb	r3, [r4, r3]
 801c4e8:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801c4ec:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801c4f0:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801c4f4:	2a00      	cmp	r2, #0
 801c4f6:	f000 8127 	beq.w	801c748 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 801c4fa:	f897 e001 	ldrb.w	lr, [r7, #1]
 801c4fe:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 801c502:	940d      	str	r4, [sp, #52]	@ 0x34
 801c504:	0e24      	lsrs	r4, r4, #24
 801c506:	9414      	str	r4, [sp, #80]	@ 0x50
 801c508:	b170      	cbz	r0, 801c528 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 801c50a:	eb07 0e01 	add.w	lr, r7, r1
 801c50e:	5c79      	ldrb	r1, [r7, r1]
 801c510:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801c514:	9109      	str	r1, [sp, #36]	@ 0x24
 801c516:	0e09      	lsrs	r1, r1, #24
 801c518:	9111      	str	r1, [sp, #68]	@ 0x44
 801c51a:	f89e 1001 	ldrb.w	r1, [lr, #1]
 801c51e:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801c522:	910e      	str	r1, [sp, #56]	@ 0x38
 801c524:	0e09      	lsrs	r1, r1, #24
 801c526:	9115      	str	r1, [sp, #84]	@ 0x54
 801c528:	b292      	uxth	r2, r2
 801c52a:	b280      	uxth	r0, r0
 801c52c:	fb02 f800 	mul.w	r8, r2, r0
 801c530:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 801c534:	0112      	lsls	r2, r2, #4
 801c536:	eba2 0e08 	sub.w	lr, r2, r8
 801c53a:	b280      	uxth	r0, r0
 801c53c:	f5c2 7180 	rsb	r1, r2, #256	@ 0x100
 801c540:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801c542:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 801c544:	fa1f fe8e 	uxth.w	lr, lr
 801c548:	1a09      	subs	r1, r1, r0
 801c54a:	b289      	uxth	r1, r1
 801c54c:	fb0e f202 	mul.w	r2, lr, r2
 801c550:	fb01 220c 	mla	r2, r1, ip, r2
 801c554:	fb00 2204 	mla	r2, r0, r4, r2
 801c558:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 801c55a:	fb08 2204 	mla	r2, r8, r4, r2
 801c55e:	f3c2 2207 	ubfx	r2, r2, #8, #8
 801c562:	2a00      	cmp	r2, #0
 801c564:	f000 80e5 	beq.w	801c732 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6fa>
 801c568:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
 801c56c:	d019      	beq.n	801c5a2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56a>
 801c56e:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 801c572:	fb0c fa0a 	mul.w	sl, ip, sl
 801c576:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801c57a:	fb0c fc03 	mul.w	ip, ip, r3
 801c57e:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801c582:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801c586:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 801c58a:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
 801c58e:	4453      	add	r3, sl
 801c590:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801c594:	0a1b      	lsrs	r3, r3, #8
 801c596:	0a3f      	lsrs	r7, r7, #8
 801c598:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801c59c:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 801c5a0:	433b      	orrs	r3, r7
 801c5a2:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801c5a4:	2cff      	cmp	r4, #255	@ 0xff
 801c5a6:	d020      	beq.n	801c5ea <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5b2>
 801c5a8:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801c5aa:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 801c5ae:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801c5b0:	4367      	muls	r7, r4
 801c5b2:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801c5b4:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801c5b8:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801c5ba:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801c5be:	fb04 fa0a 	mul.w	sl, r4, sl
 801c5c2:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801c5c6:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801c5ca:	44bc      	add	ip, r7
 801c5cc:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801c5d0:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801c5d4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801c5d8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801c5dc:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801c5e0:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801c5e4:	ea4c 040a 	orr.w	r4, ip, sl
 801c5e8:	940d      	str	r4, [sp, #52]	@ 0x34
 801c5ea:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 801c5ec:	2cff      	cmp	r4, #255	@ 0xff
 801c5ee:	d020      	beq.n	801c632 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fa>
 801c5f0:	9c09      	ldr	r4, [sp, #36]	@ 0x24
 801c5f2:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 801c5f6:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 801c5f8:	4367      	muls	r7, r4
 801c5fa:	9c09      	ldr	r4, [sp, #36]	@ 0x24
 801c5fc:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801c600:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 801c602:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801c606:	fb04 fa0a 	mul.w	sl, r4, sl
 801c60a:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801c60e:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801c612:	44bc      	add	ip, r7
 801c614:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801c618:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801c61c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801c620:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801c624:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801c628:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801c62c:	ea4c 040a 	orr.w	r4, ip, sl
 801c630:	9409      	str	r4, [sp, #36]	@ 0x24
 801c632:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 801c634:	2cff      	cmp	r4, #255	@ 0xff
 801c636:	d020      	beq.n	801c67a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x642>
 801c638:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801c63a:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 801c63e:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 801c640:	4367      	muls	r7, r4
 801c642:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801c644:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801c648:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 801c64a:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801c64e:	fb04 fa0a 	mul.w	sl, r4, sl
 801c652:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801c656:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801c65a:	44bc      	add	ip, r7
 801c65c:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801c660:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801c664:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801c668:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801c66c:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801c670:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801c674:	ea4c 040a 	orr.w	r4, ip, sl
 801c678:	940e      	str	r4, [sp, #56]	@ 0x38
 801c67a:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801c67c:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 801c680:	9c09      	ldr	r4, [sp, #36]	@ 0x24
 801c682:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
 801c686:	fb0e f707 	mul.w	r7, lr, r7
 801c68a:	fb01 770c 	mla	r7, r1, ip, r7
 801c68e:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 801c692:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801c694:	fb00 770c 	mla	r7, r0, ip, r7
 801c698:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 801c69c:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801c69e:	fb08 770c 	mla	r7, r8, ip, r7
 801c6a2:	f404 4c7f 	and.w	ip, r4, #65280	@ 0xff00
 801c6a6:	fb0e fe0c 	mul.w	lr, lr, ip
 801c6aa:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801c6ae:	fb01 e303 	mla	r3, r1, r3, lr
 801c6b2:	9909      	ldr	r1, [sp, #36]	@ 0x24
 801c6b4:	f401 4a7f 	and.w	sl, r1, #65280	@ 0xff00
 801c6b8:	990e      	ldr	r1, [sp, #56]	@ 0x38
 801c6ba:	fb00 330a 	mla	r3, r0, sl, r3
 801c6be:	f401 4c7f 	and.w	ip, r1, #65280	@ 0xff00
 801c6c2:	fb08 3c0c 	mla	ip, r8, ip, r3
 801c6c6:	f8b9 3000 	ldrh.w	r3, [r9]
 801c6ca:	43d2      	mvns	r2, r2
 801c6cc:	1218      	asrs	r0, r3, #8
 801c6ce:	b2d2      	uxtb	r2, r2
 801c6d0:	10d9      	asrs	r1, r3, #3
 801c6d2:	0a3f      	lsrs	r7, r7, #8
 801c6d4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801c6d8:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801c6dc:	00db      	lsls	r3, r3, #3
 801c6de:	4350      	muls	r0, r2
 801c6e0:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
 801c6e4:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 801c6e8:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 801c6ec:	b2db      	uxtb	r3, r3
 801c6ee:	ea47 070c 	orr.w	r7, r7, ip
 801c6f2:	4351      	muls	r1, r2
 801c6f4:	4353      	muls	r3, r2
 801c6f6:	1c42      	adds	r2, r0, #1
 801c6f8:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801c6fc:	0c3a      	lsrs	r2, r7, #16
 801c6fe:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801c702:	4a18      	ldr	r2, [pc, #96]	@ (801c764 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72c>)
 801c704:	b2c0      	uxtb	r0, r0
 801c706:	ea02 2000 	and.w	r0, r2, r0, lsl #8
 801c70a:	1c4a      	adds	r2, r1, #1
 801c70c:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801c710:	0a3a      	lsrs	r2, r7, #8
 801c712:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801c716:	00c9      	lsls	r1, r1, #3
 801c718:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801c71c:	4301      	orrs	r1, r0
 801c71e:	1c58      	adds	r0, r3, #1
 801c720:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 801c724:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 801c728:	f3c7 00c4 	ubfx	r0, r7, #3, #5
 801c72c:	4308      	orrs	r0, r1
 801c72e:	f8a9 0000 	strh.w	r0, [r9]
 801c732:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 801c734:	9a25      	ldr	r2, [sp, #148]	@ 0x94
 801c736:	441a      	add	r2, r3
 801c738:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801c73a:	9225      	str	r2, [sp, #148]	@ 0x94
 801c73c:	f109 0902 	add.w	r9, r9, #2
 801c740:	441d      	add	r5, r3
 801c742:	f10b 3bff 	add.w	fp, fp, #4294967295
 801c746:	e64d      	b.n	801c3e4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ac>
 801c748:	2800      	cmp	r0, #0
 801c74a:	f43f aeed 	beq.w	801c528 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 801c74e:	5c79      	ldrb	r1, [r7, r1]
 801c750:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801c754:	9109      	str	r1, [sp, #36]	@ 0x24
 801c756:	0e09      	lsrs	r1, r1, #24
 801c758:	9111      	str	r1, [sp, #68]	@ 0x44
 801c75a:	e6e5      	b.n	801c528 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 801c75c:	b01b      	add	sp, #108	@ 0x6c
 801c75e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c762:	bf00      	nop
 801c764:	fffff800 	.word	0xfffff800

0801c768 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>:
 801c768:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c76c:	b085      	sub	sp, #20
 801c76e:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	@ 0x40
 801c772:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	@ 0x38
 801c776:	9103      	str	r1, [sp, #12]
 801c778:	fb00 7406 	mla	r4, r0, r6, r7
 801c77c:	eb02 0544 	add.w	r5, r2, r4, lsl #1
 801c780:	2800      	cmp	r0, #0
 801c782:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	@ 0x3c
 801c786:	f89d 1048 	ldrb.w	r1, [sp, #72]	@ 0x48
 801c78a:	f89d e04c 	ldrb.w	lr, [sp, #76]	@ 0x4c
 801c78e:	9501      	str	r5, [sp, #4]
 801c790:	eb03 0904 	add.w	r9, r3, r4
 801c794:	f2c0 8150 	blt.w	801ca38 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 801c798:	4583      	cmp	fp, r0
 801c79a:	f340 814d 	ble.w	801ca38 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 801c79e:	2f00      	cmp	r7, #0
 801c7a0:	f2c0 8146 	blt.w	801ca30 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 801c7a4:	42be      	cmp	r6, r7
 801c7a6:	f340 8143 	ble.w	801ca30 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 801c7aa:	f813 c004 	ldrb.w	ip, [r3, r4]
 801c7ae:	f832 3014 	ldrh.w	r3, [r2, r4, lsl #1]
 801c7b2:	ea4f 02ec 	mov.w	r2, ip, asr #3
 801c7b6:	f423 65fc 	bic.w	r5, r3, #2016	@ 0x7e0
 801c7ba:	4355      	muls	r5, r2
 801c7bc:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801c7c0:	f64f 041f 	movw	r4, #63519	@ 0xf81f
 801c7c4:	fb0c f203 	mul.w	r2, ip, r3
 801c7c8:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 801c7cc:	f605 0501 	addw	r5, r5, #2049	@ 0x801
 801c7d0:	441d      	add	r5, r3
 801c7d2:	f102 0320 	add.w	r3, r2, #32
 801c7d6:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801c7da:	0a1b      	lsrs	r3, r3, #8
 801c7dc:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 801c7e0:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801c7e4:	431c      	orrs	r4, r3
 801c7e6:	1c7b      	adds	r3, r7, #1
 801c7e8:	f100 812b 	bmi.w	801ca42 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 801c7ec:	429e      	cmp	r6, r3
 801c7ee:	f340 8128 	ble.w	801ca42 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 801c7f2:	2900      	cmp	r1, #0
 801c7f4:	f000 8128 	beq.w	801ca48 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e0>
 801c7f8:	9a01      	ldr	r2, [sp, #4]
 801c7fa:	f899 3001 	ldrb.w	r3, [r9, #1]
 801c7fe:	8855      	ldrh	r5, [r2, #2]
 801c800:	ea4f 08e3 	mov.w	r8, r3, asr #3
 801c804:	f425 62fc 	bic.w	r2, r5, #2016	@ 0x7e0
 801c808:	fb08 f802 	mul.w	r8, r8, r2
 801c80c:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801c810:	f64f 021f 	movw	r2, #63519	@ 0xf81f
 801c814:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 801c818:	435d      	muls	r5, r3
 801c81a:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801c81e:	44d0      	add	r8, sl
 801c820:	f105 0a20 	add.w	sl, r5, #32
 801c824:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 801c828:	0a2d      	lsrs	r5, r5, #8
 801c82a:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 801c82e:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801c832:	432a      	orrs	r2, r5
 801c834:	3001      	adds	r0, #1
 801c836:	f100 810d 	bmi.w	801ca54 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 801c83a:	4583      	cmp	fp, r0
 801c83c:	f340 810a 	ble.w	801ca54 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 801c840:	f1be 0f00 	cmp.w	lr, #0
 801c844:	f000 810b 	beq.w	801ca5e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2f6>
 801c848:	2f00      	cmp	r7, #0
 801c84a:	f2c0 8100 	blt.w	801ca4e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 801c84e:	42be      	cmp	r6, r7
 801c850:	f340 80fd 	ble.w	801ca4e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 801c854:	9801      	ldr	r0, [sp, #4]
 801c856:	f819 5006 	ldrb.w	r5, [r9, r6]
 801c85a:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 801c85e:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801c862:	f428 60fc 	bic.w	r0, r8, #2016	@ 0x7e0
 801c866:	fb0a fa00 	mul.w	sl, sl, r0
 801c86a:	f64f 0b1f 	movw	fp, #63519	@ 0xf81f
 801c86e:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 801c872:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 801c876:	fb05 f808 	mul.w	r8, r5, r8
 801c87a:	f60a 0a01 	addw	sl, sl, #2049	@ 0x801
 801c87e:	4482      	add	sl, r0
 801c880:	f108 0020 	add.w	r0, r8, #32
 801c884:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801c888:	0a00      	lsrs	r0, r0, #8
 801c88a:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 801c88e:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801c892:	ea4b 0b00 	orr.w	fp, fp, r0
 801c896:	3701      	adds	r7, #1
 801c898:	f100 80e6 	bmi.w	801ca68 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 801c89c:	42be      	cmp	r6, r7
 801c89e:	f340 80e3 	ble.w	801ca68 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 801c8a2:	2900      	cmp	r1, #0
 801c8a4:	f000 80e3 	beq.w	801ca6e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x306>
 801c8a8:	3601      	adds	r6, #1
 801c8aa:	9801      	ldr	r0, [sp, #4]
 801c8ac:	f819 7006 	ldrb.w	r7, [r9, r6]
 801c8b0:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 801c8b4:	ea4f 09e7 	mov.w	r9, r7, asr #3
 801c8b8:	f420 66fc 	bic.w	r6, r0, #2016	@ 0x7e0
 801c8bc:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801c8c0:	fb09 f906 	mul.w	r9, r9, r6
 801c8c4:	fb07 f800 	mul.w	r8, r7, r0
 801c8c8:	f64f 001f 	movw	r0, #63519	@ 0xf81f
 801c8cc:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 801c8d0:	f609 0901 	addw	r9, r9, #2049	@ 0x801
 801c8d4:	44d1      	add	r9, sl
 801c8d6:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 801c8da:	f108 0020 	add.w	r0, r8, #32
 801c8de:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801c8e2:	0a00      	lsrs	r0, r0, #8
 801c8e4:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801c8e8:	4330      	orrs	r0, r6
 801c8ea:	b28e      	uxth	r6, r1
 801c8ec:	fa1f f98e 	uxth.w	r9, lr
 801c8f0:	fb06 f809 	mul.w	r8, r6, r9
 801c8f4:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 801c8f8:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 801c8fc:	0136      	lsls	r6, r6, #4
 801c8fe:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801c902:	f424 64fc 	bic.w	r4, r4, #2016	@ 0x7e0
 801c906:	9601      	str	r6, [sp, #4]
 801c908:	ea4a 0404 	orr.w	r4, sl, r4
 801c90c:	fa1f f689 	uxth.w	r6, r9
 801c910:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801c914:	fb11 f90e 	smulbb	r9, r1, lr
 801c918:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 801c91c:	9602      	str	r6, [sp, #8]
 801c91e:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801c922:	4626      	mov	r6, r4
 801c924:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801c928:	f1ce 0410 	rsb	r4, lr, #16
 801c92c:	1a64      	subs	r4, r4, r1
 801c92e:	ea4a 0202 	orr.w	r2, sl, r2
 801c932:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 801c936:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 801c93a:	434a      	muls	r2, r1
 801c93c:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 801c940:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801c944:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801c948:	fb04 2406 	mla	r4, r4, r6, r2
 801c94c:	ea4a 0000 	orr.w	r0, sl, r0
 801c950:	fb09 4200 	mla	r2, r9, r0, r4
 801c954:	ea4f 440b 	mov.w	r4, fp, lsl #16
 801c958:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 801c95c:	f42b 6bfc 	bic.w	fp, fp, #2016	@ 0x7e0
 801c960:	ea44 0b0b 	orr.w	fp, r4, fp
 801c964:	9c01      	ldr	r4, [sp, #4]
 801c966:	9e02      	ldr	r6, [sp, #8]
 801c968:	9903      	ldr	r1, [sp, #12]
 801c96a:	f5c4 7480 	rsb	r4, r4, #256	@ 0x100
 801c96e:	1ba4      	subs	r4, r4, r6
 801c970:	9e01      	ldr	r6, [sp, #4]
 801c972:	8808      	ldrh	r0, [r1, #0]
 801c974:	f89d 1050 	ldrb.w	r1, [sp, #80]	@ 0x50
 801c978:	eba6 0608 	sub.w	r6, r6, r8
 801c97c:	b2b6      	uxth	r6, r6
 801c97e:	b2a4      	uxth	r4, r4
 801c980:	4373      	muls	r3, r6
 801c982:	fb0c 3304 	mla	r3, ip, r4, r3
 801c986:	9c02      	ldr	r4, [sp, #8]
 801c988:	fb04 3505 	mla	r5, r4, r5, r3
 801c98c:	fb08 5707 	mla	r7, r8, r7, r5
 801c990:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 801c994:	b289      	uxth	r1, r1
 801c996:	fb0e 2e0b 	mla	lr, lr, fp, r2
 801c99a:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801c99e:	434f      	muls	r7, r1
 801c9a0:	ea4f 525e 	mov.w	r2, lr, lsr #21
 801c9a4:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801c9a8:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801c9ac:	1c7b      	adds	r3, r7, #1
 801c9ae:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 801c9b2:	ea42 0e0e 	orr.w	lr, r2, lr
 801c9b6:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 801c9ba:	fa1f f28e 	uxth.w	r2, lr
 801c9be:	1203      	asrs	r3, r0, #8
 801c9c0:	ea6f 2717 	mvn.w	r7, r7, lsr #8
 801c9c4:	b2ff      	uxtb	r7, r7
 801c9c6:	1215      	asrs	r5, r2, #8
 801c9c8:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 801c9cc:	fb13 f307 	smulbb	r3, r3, r7
 801c9d0:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 801c9d4:	fb05 3501 	mla	r5, r5, r1, r3
 801c9d8:	10c3      	asrs	r3, r0, #3
 801c9da:	10d4      	asrs	r4, r2, #3
 801c9dc:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 801c9e0:	fb13 f307 	smulbb	r3, r3, r7
 801c9e4:	f004 04fc 	and.w	r4, r4, #252	@ 0xfc
 801c9e8:	fb04 3401 	mla	r4, r4, r1, r3
 801c9ec:	00c3      	lsls	r3, r0, #3
 801c9ee:	00d2      	lsls	r2, r2, #3
 801c9f0:	b2db      	uxtb	r3, r3
 801c9f2:	fb13 f307 	smulbb	r3, r3, r7
 801c9f6:	b2d2      	uxtb	r2, r2
 801c9f8:	fb02 3101 	mla	r1, r2, r1, r3
 801c9fc:	b2ad      	uxth	r5, r5
 801c9fe:	b289      	uxth	r1, r1
 801ca00:	b2a4      	uxth	r4, r4
 801ca02:	1c6b      	adds	r3, r5, #1
 801ca04:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801ca08:	1c62      	adds	r2, r4, #1
 801ca0a:	1c4b      	adds	r3, r1, #1
 801ca0c:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801ca10:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 801ca14:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 801ca18:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801ca1c:	0964      	lsrs	r4, r4, #5
 801ca1e:	432b      	orrs	r3, r5
 801ca20:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 801ca24:	9a03      	ldr	r2, [sp, #12]
 801ca26:	4323      	orrs	r3, r4
 801ca28:	8013      	strh	r3, [r2, #0]
 801ca2a:	b005      	add	sp, #20
 801ca2c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ca30:	f04f 0c00 	mov.w	ip, #0
 801ca34:	4664      	mov	r4, ip
 801ca36:	e6d6      	b.n	801c7e6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x7e>
 801ca38:	2300      	movs	r3, #0
 801ca3a:	469c      	mov	ip, r3
 801ca3c:	461a      	mov	r2, r3
 801ca3e:	461c      	mov	r4, r3
 801ca40:	e6f8      	b.n	801c834 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 801ca42:	2300      	movs	r3, #0
 801ca44:	461a      	mov	r2, r3
 801ca46:	e6f5      	b.n	801c834 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 801ca48:	460b      	mov	r3, r1
 801ca4a:	460a      	mov	r2, r1
 801ca4c:	e6f2      	b.n	801c834 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 801ca4e:	2500      	movs	r5, #0
 801ca50:	46ab      	mov	fp, r5
 801ca52:	e720      	b.n	801c896 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x12e>
 801ca54:	2700      	movs	r7, #0
 801ca56:	463d      	mov	r5, r7
 801ca58:	4638      	mov	r0, r7
 801ca5a:	46bb      	mov	fp, r7
 801ca5c:	e745      	b.n	801c8ea <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 801ca5e:	4677      	mov	r7, lr
 801ca60:	4675      	mov	r5, lr
 801ca62:	4670      	mov	r0, lr
 801ca64:	46f3      	mov	fp, lr
 801ca66:	e740      	b.n	801c8ea <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 801ca68:	2700      	movs	r7, #0
 801ca6a:	4638      	mov	r0, r7
 801ca6c:	e73d      	b.n	801c8ea <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 801ca6e:	460f      	mov	r7, r1
 801ca70:	4608      	mov	r0, r1
 801ca72:	e73a      	b.n	801c8ea <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>

0801ca74 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801ca74:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ca78:	b097      	sub	sp, #92	@ 0x5c
 801ca7a:	9214      	str	r2, [sp, #80]	@ 0x50
 801ca7c:	9308      	str	r3, [sp, #32]
 801ca7e:	9a25      	ldr	r2, [sp, #148]	@ 0x94
 801ca80:	f89d 30a4 	ldrb.w	r3, [sp, #164]	@ 0xa4
 801ca84:	9312      	str	r3, [sp, #72]	@ 0x48
 801ca86:	9111      	str	r1, [sp, #68]	@ 0x44
 801ca88:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	@ 0x98
 801ca8c:	9015      	str	r0, [sp, #84]	@ 0x54
 801ca8e:	6850      	ldr	r0, [r2, #4]
 801ca90:	6812      	ldr	r2, [r2, #0]
 801ca92:	fb00 1303 	mla	r3, r0, r3, r1
 801ca96:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801ca9a:	9309      	str	r3, [sp, #36]	@ 0x24
 801ca9c:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801ca9e:	681b      	ldr	r3, [r3, #0]
 801caa0:	930b      	str	r3, [sp, #44]	@ 0x2c
 801caa2:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801caa4:	685b      	ldr	r3, [r3, #4]
 801caa6:	930c      	str	r3, [sp, #48]	@ 0x30
 801caa8:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 801caac:	930a      	str	r3, [sp, #40]	@ 0x28
 801caae:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801cab0:	2b00      	cmp	r3, #0
 801cab2:	dc03      	bgt.n	801cabc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801cab4:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 801cab6:	2b00      	cmp	r3, #0
 801cab8:	f340 83cb 	ble.w	801d252 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7de>
 801cabc:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801cabe:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801cac2:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801cac6:	1e48      	subs	r0, r1, #1
 801cac8:	1e55      	subs	r5, r2, #1
 801caca:	9b08      	ldr	r3, [sp, #32]
 801cacc:	2b00      	cmp	r3, #0
 801cace:	f340 81a3 	ble.w	801ce18 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a4>
 801cad2:	9e21      	ldr	r6, [sp, #132]	@ 0x84
 801cad4:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 801cad6:	1436      	asrs	r6, r6, #16
 801cad8:	ea4f 4323 	mov.w	r3, r3, asr #16
 801cadc:	d406      	bmi.n	801caec <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801cade:	4286      	cmp	r6, r0
 801cae0:	da04      	bge.n	801caec <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801cae2:	2b00      	cmp	r3, #0
 801cae4:	db02      	blt.n	801caec <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801cae6:	42ab      	cmp	r3, r5
 801cae8:	f2c0 8197 	blt.w	801ce1a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 801caec:	3601      	adds	r6, #1
 801caee:	f100 8184 	bmi.w	801cdfa <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 801caf2:	42b1      	cmp	r1, r6
 801caf4:	f2c0 8181 	blt.w	801cdfa <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 801caf8:	3301      	adds	r3, #1
 801cafa:	f100 817e 	bmi.w	801cdfa <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 801cafe:	429a      	cmp	r2, r3
 801cb00:	f2c0 817b 	blt.w	801cdfa <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 801cb04:	9b08      	ldr	r3, [sp, #32]
 801cb06:	9f09      	ldr	r7, [sp, #36]	@ 0x24
 801cb08:	9313      	str	r3, [sp, #76]	@ 0x4c
 801cb0a:	f64f 061f 	movw	r6, #63519	@ 0xf81f
 801cb0e:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 801cb10:	2b00      	cmp	r3, #0
 801cb12:	f340 81a4 	ble.w	801ce5e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 801cb16:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 801cb18:	9d21      	ldr	r5, [sp, #132]	@ 0x84
 801cb1a:	1418      	asrs	r0, r3, #16
 801cb1c:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 801cb1e:	f3c3 3103 	ubfx	r1, r3, #12, #4
 801cb22:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 801cb24:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 801cb28:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801cb2a:	142d      	asrs	r5, r5, #16
 801cb2c:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 801cb30:	f100 81f8 	bmi.w	801cf24 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 801cb34:	f102 3eff 	add.w	lr, r2, #4294967295
 801cb38:	4575      	cmp	r5, lr
 801cb3a:	f280 81f3 	bge.w	801cf24 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 801cb3e:	2800      	cmp	r0, #0
 801cb40:	f2c0 81f0 	blt.w	801cf24 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 801cb44:	f103 3eff 	add.w	lr, r3, #4294967295
 801cb48:	4570      	cmp	r0, lr
 801cb4a:	f280 81eb 	bge.w	801cf24 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 801cb4e:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801cb50:	b212      	sxth	r2, r2
 801cb52:	fb00 5002 	mla	r0, r0, r2, r5
 801cb56:	fa1f fe81 	uxth.w	lr, r1
 801cb5a:	eb03 0a00 	add.w	sl, r3, r0
 801cb5e:	ea4f 150e 	mov.w	r5, lr, lsl #4
 801cb62:	f813 9000 	ldrb.w	r9, [r3, r0]
 801cb66:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801cb6a:	f5c5 7380 	rsb	r3, r5, #256	@ 0x100
 801cb6e:	b29b      	uxth	r3, r3
 801cb70:	f1bc 0f00 	cmp.w	ip, #0
 801cb74:	f000 81b9 	beq.w	801ceea <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x476>
 801cb78:	f81a 4002 	ldrb.w	r4, [sl, r2]
 801cb7c:	940d      	str	r4, [sp, #52]	@ 0x34
 801cb7e:	eb0a 0b02 	add.w	fp, sl, r2
 801cb82:	fa1f fa8c 	uxth.w	sl, ip
 801cb86:	fb0a fe0e 	mul.w	lr, sl, lr
 801cb8a:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 801cb8e:	fa1f fa8a 	uxth.w	sl, sl
 801cb92:	eba5 050e 	sub.w	r5, r5, lr
 801cb96:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801cb9a:	940e      	str	r4, [sp, #56]	@ 0x38
 801cb9c:	eba3 030a 	sub.w	r3, r3, sl
 801cba0:	b2ad      	uxth	r5, r5
 801cba2:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801cba4:	b29b      	uxth	r3, r3
 801cba6:	fb08 f505 	mul.w	r5, r8, r5
 801cbaa:	fb09 5303 	mla	r3, r9, r3, r5
 801cbae:	fb0a 3304 	mla	r3, sl, r4, r3
 801cbb2:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801cbb4:	fb0e 3304 	mla	r3, lr, r4, r3
 801cbb8:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801cbbc:	2b00      	cmp	r3, #0
 801cbbe:	f000 810f 	beq.w	801cde0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801cbc2:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801cbc4:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 801cbc8:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 801cbcc:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 801cbd0:	f000 8190 	beq.w	801cef4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x480>
 801cbd4:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
 801cbd8:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801cbdc:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801cbe0:	fb09 f000 	mul.w	r0, r9, r0
 801cbe4:	fb0a fe0e 	mul.w	lr, sl, lr
 801cbe8:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 801cbec:	f100 0b20 	add.w	fp, r0, #32
 801cbf0:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
 801cbf4:	44ce      	add	lr, r9
 801cbf6:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 801cbfa:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801cbfe:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801cc02:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 801cc06:	ea4e 0909 	orr.w	r9, lr, r9
 801cc0a:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
 801cc0e:	8868      	ldrh	r0, [r5, #2]
 801cc10:	d019      	beq.n	801cc46 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 801cc12:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
 801cc16:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801cc1a:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801cc1e:	fb08 f800 	mul.w	r8, r8, r0
 801cc22:	fb0a fe0e 	mul.w	lr, sl, lr
 801cc26:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 801cc2a:	f108 0b20 	add.w	fp, r8, #32
 801cc2e:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
 801cc32:	4486      	add	lr, r0
 801cc34:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 801cc38:	0a00      	lsrs	r0, r0, #8
 801cc3a:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801cc3e:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801cc42:	ea4e 0000 	orr.w	r0, lr, r0
 801cc46:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 801cc4a:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 801cc4e:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
 801cc52:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 801cc56:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801cc5a:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801cc5e:	ea4e 0909 	orr.w	r9, lr, r9
 801cc62:	ea4a 0000 	orr.w	r0, sl, r0
 801cc66:	f1bc 0f00 	cmp.w	ip, #0
 801cc6a:	f000 8145 	beq.w	801cef8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>
 801cc6e:	f102 4200 	add.w	r2, r2, #2147483648	@ 0x80000000
 801cc72:	3a01      	subs	r2, #1
 801cc74:	0052      	lsls	r2, r2, #1
 801cc76:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801cc78:	3202      	adds	r2, #2
 801cc7a:	2cff      	cmp	r4, #255	@ 0xff
 801cc7c:	eb05 0e02 	add.w	lr, r5, r2
 801cc80:	5aaa      	ldrh	r2, [r5, r2]
 801cc82:	d018      	beq.n	801ccb6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801cc84:	f422 65fc 	bic.w	r5, r2, #2016	@ 0x7e0
 801cc88:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801cc8c:	fb04 fa02 	mul.w	sl, r4, r2
 801cc90:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801cc94:	fb08 f805 	mul.w	r8, r8, r5
 801cc98:	f10a 0520 	add.w	r5, sl, #32
 801cc9c:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 801cca0:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 801cca4:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801cca8:	4442      	add	r2, r8
 801ccaa:	0a2d      	lsrs	r5, r5, #8
 801ccac:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 801ccb0:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801ccb4:	432a      	orrs	r2, r5
 801ccb6:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801ccb8:	f8be 5002 	ldrh.w	r5, [lr, #2]
 801ccbc:	2cff      	cmp	r4, #255	@ 0xff
 801ccbe:	d01a      	beq.n	801ccf6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 801ccc0:	f425 6efc 	bic.w	lr, r5, #2016	@ 0x7e0
 801ccc4:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801ccc8:	fb04 fa05 	mul.w	sl, r4, r5
 801cccc:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801ccd0:	fb08 f80e 	mul.w	r8, r8, lr
 801ccd4:	f10a 0e20 	add.w	lr, sl, #32
 801ccd8:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 801ccdc:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 801cce0:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801cce4:	4445      	add	r5, r8
 801cce6:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801ccea:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 801ccee:	f40e 6efc 	and.w	lr, lr, #2016	@ 0x7e0
 801ccf2:	ea45 050e 	orr.w	r5, r5, lr
 801ccf6:	fb1c fe01 	smulbb	lr, ip, r1
 801ccfa:	ea4f 0eee 	mov.w	lr, lr, asr #3
 801ccfe:	f1cc 0810 	rsb	r8, ip, #16
 801cd02:	eba8 0801 	sub.w	r8, r8, r1
 801cd06:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801cd0a:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 801cd0e:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 801cd12:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 801cd16:	4341      	muls	r1, r0
 801cd18:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801cd1c:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801cd20:	ea4a 0202 	orr.w	r2, sl, r2
 801cd24:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 801cd28:	fb09 1108 	mla	r1, r9, r8, r1
 801cd2c:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801cd30:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
 801cd34:	fb0c 1102 	mla	r1, ip, r2, r1
 801cd38:	ea4b 0505 	orr.w	r5, fp, r5
 801cd3c:	fb0e 1e05 	mla	lr, lr, r5, r1
 801cd40:	ea4f 525e 	mov.w	r2, lr, lsr #21
 801cd44:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801cd48:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801cd4c:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 801cd50:	ea42 0e0e 	orr.w	lr, r2, lr
 801cd54:	fa1f f28e 	uxth.w	r2, lr
 801cd58:	2bff      	cmp	r3, #255	@ 0xff
 801cd5a:	d103      	bne.n	801cd64 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801cd5c:	9912      	ldr	r1, [sp, #72]	@ 0x48
 801cd5e:	29ff      	cmp	r1, #255	@ 0xff
 801cd60:	f000 80de 	beq.w	801cf20 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>
 801cd64:	990a      	ldr	r1, [sp, #40]	@ 0x28
 801cd66:	8838      	ldrh	r0, [r7, #0]
 801cd68:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 801cd6a:	434b      	muls	r3, r1
 801cd6c:	f103 0c01 	add.w	ip, r3, #1
 801cd70:	eb0c 2323 	add.w	r3, ip, r3, asr #8
 801cd74:	ea6f 2323 	mvn.w	r3, r3, asr #8
 801cd78:	fa5f fc83 	uxtb.w	ip, r3
 801cd7c:	1203      	asrs	r3, r0, #8
 801cd7e:	1215      	asrs	r5, r2, #8
 801cd80:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 801cd84:	fb13 f30c 	smulbb	r3, r3, ip
 801cd88:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 801cd8c:	fb05 3501 	mla	r5, r5, r1, r3
 801cd90:	10c3      	asrs	r3, r0, #3
 801cd92:	10d1      	asrs	r1, r2, #3
 801cd94:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 801cd98:	fb13 f30c 	smulbb	r3, r3, ip
 801cd9c:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 801cda0:	fb01 3104 	mla	r1, r1, r4, r3
 801cda4:	00c3      	lsls	r3, r0, #3
 801cda6:	00d2      	lsls	r2, r2, #3
 801cda8:	b2db      	uxtb	r3, r3
 801cdaa:	b2d2      	uxtb	r2, r2
 801cdac:	fb13 f30c 	smulbb	r3, r3, ip
 801cdb0:	b2ad      	uxth	r5, r5
 801cdb2:	fb02 3304 	mla	r3, r2, r4, r3
 801cdb6:	b29a      	uxth	r2, r3
 801cdb8:	1c6b      	adds	r3, r5, #1
 801cdba:	b289      	uxth	r1, r1
 801cdbc:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801cdc0:	1c53      	adds	r3, r2, #1
 801cdc2:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801cdc6:	1c4a      	adds	r2, r1, #1
 801cdc8:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801cdcc:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 801cdd0:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801cdd4:	0949      	lsrs	r1, r1, #5
 801cdd6:	432b      	orrs	r3, r5
 801cdd8:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801cddc:	430b      	orrs	r3, r1
 801cdde:	803b      	strh	r3, [r7, #0]
 801cde0:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 801cde2:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
 801cde4:	4413      	add	r3, r2
 801cde6:	9321      	str	r3, [sp, #132]	@ 0x84
 801cde8:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 801cdea:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801cdec:	441a      	add	r2, r3
 801cdee:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 801cdf0:	9222      	str	r2, [sp, #136]	@ 0x88
 801cdf2:	3b01      	subs	r3, #1
 801cdf4:	3702      	adds	r7, #2
 801cdf6:	9313      	str	r3, [sp, #76]	@ 0x4c
 801cdf8:	e689      	b.n	801cb0e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801cdfa:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 801cdfc:	9e23      	ldr	r6, [sp, #140]	@ 0x8c
 801cdfe:	9c22      	ldr	r4, [sp, #136]	@ 0x88
 801ce00:	4433      	add	r3, r6
 801ce02:	9321      	str	r3, [sp, #132]	@ 0x84
 801ce04:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801ce06:	441c      	add	r4, r3
 801ce08:	9b08      	ldr	r3, [sp, #32]
 801ce0a:	9422      	str	r4, [sp, #136]	@ 0x88
 801ce0c:	3b01      	subs	r3, #1
 801ce0e:	9308      	str	r3, [sp, #32]
 801ce10:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801ce12:	3302      	adds	r3, #2
 801ce14:	9309      	str	r3, [sp, #36]	@ 0x24
 801ce16:	e658      	b.n	801caca <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56>
 801ce18:	d028      	beq.n	801ce6c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 801ce1a:	9b08      	ldr	r3, [sp, #32]
 801ce1c:	9823      	ldr	r0, [sp, #140]	@ 0x8c
 801ce1e:	9d21      	ldr	r5, [sp, #132]	@ 0x84
 801ce20:	3b01      	subs	r3, #1
 801ce22:	fb00 5003 	mla	r0, r0, r3, r5
 801ce26:	1400      	asrs	r0, r0, #16
 801ce28:	f53f ae6c 	bmi.w	801cb04 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801ce2c:	3901      	subs	r1, #1
 801ce2e:	4288      	cmp	r0, r1
 801ce30:	f6bf ae68 	bge.w	801cb04 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801ce34:	9924      	ldr	r1, [sp, #144]	@ 0x90
 801ce36:	9822      	ldr	r0, [sp, #136]	@ 0x88
 801ce38:	fb01 0303 	mla	r3, r1, r3, r0
 801ce3c:	141b      	asrs	r3, r3, #16
 801ce3e:	f53f ae61 	bmi.w	801cb04 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801ce42:	3a01      	subs	r2, #1
 801ce44:	4293      	cmp	r3, r2
 801ce46:	f6bf ae5d 	bge.w	801cb04 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801ce4a:	9b08      	ldr	r3, [sp, #32]
 801ce4c:	f8dd e024 	ldr.w	lr, [sp, #36]	@ 0x24
 801ce50:	9313      	str	r3, [sp, #76]	@ 0x4c
 801ce52:	f64f 061f 	movw	r6, #63519	@ 0xf81f
 801ce56:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 801ce58:	2b00      	cmp	r3, #0
 801ce5a:	f300 8082 	bgt.w	801cf62 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 801ce5e:	9b08      	ldr	r3, [sp, #32]
 801ce60:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801ce64:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801ce66:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801ce6a:	9309      	str	r3, [sp, #36]	@ 0x24
 801ce6c:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801ce6e:	2b00      	cmp	r3, #0
 801ce70:	f340 81ef 	ble.w	801d252 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7de>
 801ce74:	ee30 0a04 	vadd.f32	s0, s0, s8
 801ce78:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801ce7c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801ce80:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801ce82:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801ce86:	ee31 1a05 	vadd.f32	s2, s2, s10
 801ce8a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801ce8e:	eef0 6a62 	vmov.f32	s13, s5
 801ce92:	ee61 7a27 	vmul.f32	s15, s2, s15
 801ce96:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801ce9a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801ce9e:	edcd 6a21 	vstr	s13, [sp, #132]	@ 0x84
 801cea2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801cea6:	eef0 6a43 	vmov.f32	s13, s6
 801ceaa:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801ceae:	ee12 2a90 	vmov	r2, s5
 801ceb2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801ceb6:	fb92 f3f3 	sdiv	r3, r2, r3
 801ceba:	ee13 2a10 	vmov	r2, s6
 801cebe:	9323      	str	r3, [sp, #140]	@ 0x8c
 801cec0:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801cec2:	fb92 f3f3 	sdiv	r3, r2, r3
 801cec6:	9324      	str	r3, [sp, #144]	@ 0x90
 801cec8:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801ceca:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801cecc:	3b01      	subs	r3, #1
 801cece:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801ced2:	9311      	str	r3, [sp, #68]	@ 0x44
 801ced4:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801ced6:	edcd 6a22 	vstr	s13, [sp, #136]	@ 0x88
 801ceda:	bf08      	it	eq
 801cedc:	4613      	moveq	r3, r2
 801cede:	9308      	str	r3, [sp, #32]
 801cee0:	eeb0 3a67 	vmov.f32	s6, s15
 801cee4:	eef0 2a47 	vmov.f32	s5, s14
 801cee8:	e5e1      	b.n	801caae <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801ceea:	fb08 f505 	mul.w	r5, r8, r5
 801ceee:	fb09 5303 	mla	r3, r9, r3, r5
 801cef2:	e661      	b.n	801cbb8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x144>
 801cef4:	4681      	mov	r9, r0
 801cef6:	e688      	b.n	801cc0a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 801cef8:	f1c1 0210 	rsb	r2, r1, #16
 801cefc:	4341      	muls	r1, r0
 801cefe:	fb09 1902 	mla	r9, r9, r2, r1
 801cf02:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801cf06:	ea4f 5259 	mov.w	r2, r9, lsr #21
 801cf0a:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801cf0e:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801cf12:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 801cf16:	ea42 0909 	orr.w	r9, r2, r9
 801cf1a:	fa1f f289 	uxth.w	r2, r9
 801cf1e:	e71b      	b.n	801cd58 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 801cf20:	803a      	strh	r2, [r7, #0]
 801cf22:	e75d      	b.n	801cde0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801cf24:	f115 0e01 	adds.w	lr, r5, #1
 801cf28:	f53f af5a 	bmi.w	801cde0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801cf2c:	4572      	cmp	r2, lr
 801cf2e:	f6ff af57 	blt.w	801cde0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801cf32:	f110 0e01 	adds.w	lr, r0, #1
 801cf36:	f53f af53 	bmi.w	801cde0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801cf3a:	4573      	cmp	r3, lr
 801cf3c:	f6ff af50 	blt.w	801cde0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801cf40:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 801cf42:	9502      	str	r5, [sp, #8]
 801cf44:	b21b      	sxth	r3, r3
 801cf46:	b212      	sxth	r2, r2
 801cf48:	e9cd 0103 	strd	r0, r1, [sp, #12]
 801cf4c:	9301      	str	r3, [sp, #4]
 801cf4e:	9200      	str	r2, [sp, #0]
 801cf50:	e9cd c405 	strd	ip, r4, [sp, #20]
 801cf54:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	@ 0x2c
 801cf58:	4639      	mov	r1, r7
 801cf5a:	9815      	ldr	r0, [sp, #84]	@ 0x54
 801cf5c:	f7ff fc04 	bl	801c768 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>
 801cf60:	e73e      	b.n	801cde0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801cf62:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 801cf64:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801cf68:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 801cf6a:	f3c3 3503 	ubfx	r5, r3, #12, #4
 801cf6e:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801cf70:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801cf74:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 801cf76:	141f      	asrs	r7, r3, #16
 801cf78:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 801cf7a:	141b      	asrs	r3, r3, #16
 801cf7c:	fb01 3707 	mla	r7, r1, r7, r3
 801cf80:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801cf82:	fa1f fc82 	uxth.w	ip, r2
 801cf86:	eb03 0a07 	add.w	sl, r3, r7
 801cf8a:	ea4f 100c 	mov.w	r0, ip, lsl #4
 801cf8e:	f813 9007 	ldrb.w	r9, [r3, r7]
 801cf92:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801cf96:	f5c0 7380 	rsb	r3, r0, #256	@ 0x100
 801cf9a:	b29b      	uxth	r3, r3
 801cf9c:	2d00      	cmp	r5, #0
 801cf9e:	f000 813d 	beq.w	801d21c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a8>
 801cfa2:	f81a 4001 	ldrb.w	r4, [sl, r1]
 801cfa6:	940f      	str	r4, [sp, #60]	@ 0x3c
 801cfa8:	eb0a 0b01 	add.w	fp, sl, r1
 801cfac:	fa1f fa85 	uxth.w	sl, r5
 801cfb0:	fb0a fc0c 	mul.w	ip, sl, ip
 801cfb4:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 801cfb8:	fa1f fa8a 	uxth.w	sl, sl
 801cfbc:	eba0 000c 	sub.w	r0, r0, ip
 801cfc0:	eba3 030a 	sub.w	r3, r3, sl
 801cfc4:	b280      	uxth	r0, r0
 801cfc6:	fb08 f000 	mul.w	r0, r8, r0
 801cfca:	b29b      	uxth	r3, r3
 801cfcc:	fb09 0303 	mla	r3, r9, r3, r0
 801cfd0:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 801cfd2:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801cfd6:	9410      	str	r4, [sp, #64]	@ 0x40
 801cfd8:	fb0a 3300 	mla	r3, sl, r0, r3
 801cfdc:	fb0c 3304 	mla	r3, ip, r4, r3
 801cfe0:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801cfe4:	2b00      	cmp	r3, #0
 801cfe6:	f000 810b 	beq.w	801d200 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78c>
 801cfea:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 801cfec:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801cfee:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 801cff2:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 801cff6:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 801cffa:	f000 8114 	beq.w	801d226 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b2>
 801cffe:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
 801d002:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801d006:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801d00a:	fb09 f707 	mul.w	r7, r9, r7
 801d00e:	fb0a fc0c 	mul.w	ip, sl, ip
 801d012:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 801d016:	f107 0b20 	add.w	fp, r7, #32
 801d01a:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
 801d01e:	44cc      	add	ip, r9
 801d020:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 801d024:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801d028:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801d02c:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 801d030:	ea4c 0909 	orr.w	r9, ip, r9
 801d034:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
 801d038:	8847      	ldrh	r7, [r0, #2]
 801d03a:	d019      	beq.n	801d070 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fc>
 801d03c:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
 801d040:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801d044:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801d048:	fb08 f807 	mul.w	r8, r8, r7
 801d04c:	fb0a fc0c 	mul.w	ip, sl, ip
 801d050:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 801d054:	f108 0b20 	add.w	fp, r8, #32
 801d058:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
 801d05c:	44bc      	add	ip, r7
 801d05e:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 801d062:	0a3f      	lsrs	r7, r7, #8
 801d064:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801d068:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801d06c:	ea4c 0707 	orr.w	r7, ip, r7
 801d070:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 801d074:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 801d078:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 801d07c:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 801d080:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801d084:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
 801d088:	ea4c 0909 	orr.w	r9, ip, r9
 801d08c:	ea4a 0707 	orr.w	r7, sl, r7
 801d090:	2d00      	cmp	r5, #0
 801d092:	f000 80ca 	beq.w	801d22a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b6>
 801d096:	f101 4100 	add.w	r1, r1, #2147483648	@ 0x80000000
 801d09a:	3901      	subs	r1, #1
 801d09c:	0049      	lsls	r1, r1, #1
 801d09e:	3102      	adds	r1, #2
 801d0a0:	eb00 0c01 	add.w	ip, r0, r1
 801d0a4:	5a41      	ldrh	r1, [r0, r1]
 801d0a6:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 801d0a8:	28ff      	cmp	r0, #255	@ 0xff
 801d0aa:	d019      	beq.n	801d0e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66c>
 801d0ac:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 801d0ae:	f421 60fc 	bic.w	r0, r1, #2016	@ 0x7e0
 801d0b2:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801d0b6:	fb04 fa01 	mul.w	sl, r4, r1
 801d0ba:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801d0be:	fb08 f800 	mul.w	r8, r8, r0
 801d0c2:	f10a 0020 	add.w	r0, sl, #32
 801d0c6:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 801d0ca:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 801d0ce:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801d0d2:	4441      	add	r1, r8
 801d0d4:	0a00      	lsrs	r0, r0, #8
 801d0d6:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 801d0da:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801d0de:	4301      	orrs	r1, r0
 801d0e0:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801d0e2:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 801d0e6:	2cff      	cmp	r4, #255	@ 0xff
 801d0e8:	d01a      	beq.n	801d120 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ac>
 801d0ea:	f420 6cfc 	bic.w	ip, r0, #2016	@ 0x7e0
 801d0ee:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801d0f2:	fb04 fa00 	mul.w	sl, r4, r0
 801d0f6:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801d0fa:	fb08 f80c 	mul.w	r8, r8, ip
 801d0fe:	f10a 0c20 	add.w	ip, sl, #32
 801d102:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 801d106:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 801d10a:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801d10e:	4440      	add	r0, r8
 801d110:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801d114:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 801d118:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 801d11c:	ea40 000c 	orr.w	r0, r0, ip
 801d120:	fb15 fc02 	smulbb	ip, r5, r2
 801d124:	ea4f 0cec 	mov.w	ip, ip, asr #3
 801d128:	f1c5 0810 	rsb	r8, r5, #16
 801d12c:	eba8 0802 	sub.w	r8, r8, r2
 801d130:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 801d134:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 801d138:	437a      	muls	r2, r7
 801d13a:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 801d13e:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 801d142:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801d146:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 801d14a:	fb09 2208 	mla	r2, r9, r8, r2
 801d14e:	ea4a 0101 	orr.w	r1, sl, r1
 801d152:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 801d156:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801d15a:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801d15e:	fb05 2201 	mla	r2, r5, r1, r2
 801d162:	ea4b 0000 	orr.w	r0, fp, r0
 801d166:	fb0c 2200 	mla	r2, ip, r0, r2
 801d16a:	0d57      	lsrs	r7, r2, #21
 801d16c:	0952      	lsrs	r2, r2, #5
 801d16e:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801d172:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801d176:	433a      	orrs	r2, r7
 801d178:	2bff      	cmp	r3, #255	@ 0xff
 801d17a:	b292      	uxth	r2, r2
 801d17c:	d102      	bne.n	801d184 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 801d17e:	9912      	ldr	r1, [sp, #72]	@ 0x48
 801d180:	29ff      	cmp	r1, #255	@ 0xff
 801d182:	d063      	beq.n	801d24c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7d8>
 801d184:	980a      	ldr	r0, [sp, #40]	@ 0x28
 801d186:	f8be 1000 	ldrh.w	r1, [lr]
 801d18a:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 801d18c:	4343      	muls	r3, r0
 801d18e:	1c58      	adds	r0, r3, #1
 801d190:	eb00 2323 	add.w	r3, r0, r3, asr #8
 801d194:	ea6f 2323 	mvn.w	r3, r3, asr #8
 801d198:	1208      	asrs	r0, r1, #8
 801d19a:	b2db      	uxtb	r3, r3
 801d19c:	1215      	asrs	r5, r2, #8
 801d19e:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801d1a2:	fb10 f003 	smulbb	r0, r0, r3
 801d1a6:	10cf      	asrs	r7, r1, #3
 801d1a8:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 801d1ac:	00c9      	lsls	r1, r1, #3
 801d1ae:	fb05 0504 	mla	r5, r5, r4, r0
 801d1b2:	b2c9      	uxtb	r1, r1
 801d1b4:	10d0      	asrs	r0, r2, #3
 801d1b6:	00d2      	lsls	r2, r2, #3
 801d1b8:	fb11 f103 	smulbb	r1, r1, r3
 801d1bc:	b2d2      	uxtb	r2, r2
 801d1be:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801d1c2:	fb02 1204 	mla	r2, r2, r4, r1
 801d1c6:	fb17 f703 	smulbb	r7, r7, r3
 801d1ca:	b2ad      	uxth	r5, r5
 801d1cc:	b292      	uxth	r2, r2
 801d1ce:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 801d1d2:	fb00 7004 	mla	r0, r0, r4, r7
 801d1d6:	1c6b      	adds	r3, r5, #1
 801d1d8:	1c57      	adds	r7, r2, #1
 801d1da:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801d1de:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 801d1e2:	b280      	uxth	r0, r0
 801d1e4:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801d1e8:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 801d1ec:	433d      	orrs	r5, r7
 801d1ee:	1c47      	adds	r7, r0, #1
 801d1f0:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 801d1f4:	097f      	lsrs	r7, r7, #5
 801d1f6:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801d1fa:	433d      	orrs	r5, r7
 801d1fc:	f8ae 5000 	strh.w	r5, [lr]
 801d200:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 801d202:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
 801d204:	4413      	add	r3, r2
 801d206:	9321      	str	r3, [sp, #132]	@ 0x84
 801d208:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 801d20a:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801d20c:	441a      	add	r2, r3
 801d20e:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 801d210:	9222      	str	r2, [sp, #136]	@ 0x88
 801d212:	3b01      	subs	r3, #1
 801d214:	f10e 0e02 	add.w	lr, lr, #2
 801d218:	9313      	str	r3, [sp, #76]	@ 0x4c
 801d21a:	e61c      	b.n	801ce56 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e2>
 801d21c:	fb08 f000 	mul.w	r0, r8, r0
 801d220:	fb09 0303 	mla	r3, r9, r3, r0
 801d224:	e6dc      	b.n	801cfe0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56c>
 801d226:	46b9      	mov	r9, r7
 801d228:	e704      	b.n	801d034 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c0>
 801d22a:	f1c2 0110 	rsb	r1, r2, #16
 801d22e:	437a      	muls	r2, r7
 801d230:	fb09 2901 	mla	r9, r9, r1, r2
 801d234:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801d238:	ea4f 5059 	mov.w	r0, r9, lsr #21
 801d23c:	ea4f 1259 	mov.w	r2, r9, lsr #5
 801d240:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801d244:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801d248:	4302      	orrs	r2, r0
 801d24a:	e795      	b.n	801d178 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x704>
 801d24c:	f8ae 2000 	strh.w	r2, [lr]
 801d250:	e7d6      	b.n	801d200 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78c>
 801d252:	b017      	add	sp, #92	@ 0x5c
 801d254:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801d258 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 801d258:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d25c:	b085      	sub	sp, #20
 801d25e:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	@ 0x40
 801d262:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	@ 0x38
 801d266:	9103      	str	r1, [sp, #12]
 801d268:	fb00 7406 	mla	r4, r0, r6, r7
 801d26c:	eb03 0544 	add.w	r5, r3, r4, lsl #1
 801d270:	2800      	cmp	r0, #0
 801d272:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	@ 0x3c
 801d276:	f89d 1048 	ldrb.w	r1, [sp, #72]	@ 0x48
 801d27a:	f89d e04c 	ldrb.w	lr, [sp, #76]	@ 0x4c
 801d27e:	9501      	str	r5, [sp, #4]
 801d280:	eb02 0904 	add.w	r9, r2, r4
 801d284:	f2c0 8141 	blt.w	801d50a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 801d288:	4583      	cmp	fp, r0
 801d28a:	f340 813e 	ble.w	801d50a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 801d28e:	2f00      	cmp	r7, #0
 801d290:	f2c0 8137 	blt.w	801d502 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 801d294:	42be      	cmp	r6, r7
 801d296:	f340 8134 	ble.w	801d502 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 801d29a:	f812 c004 	ldrb.w	ip, [r2, r4]
 801d29e:	f833 3014 	ldrh.w	r3, [r3, r4, lsl #1]
 801d2a2:	ea4f 02ec 	mov.w	r2, ip, asr #3
 801d2a6:	f423 65fc 	bic.w	r5, r3, #2016	@ 0x7e0
 801d2aa:	4355      	muls	r5, r2
 801d2ac:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801d2b0:	f64f 041f 	movw	r4, #63519	@ 0xf81f
 801d2b4:	fb0c f203 	mul.w	r2, ip, r3
 801d2b8:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 801d2bc:	f605 0501 	addw	r5, r5, #2049	@ 0x801
 801d2c0:	441d      	add	r5, r3
 801d2c2:	f102 0320 	add.w	r3, r2, #32
 801d2c6:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801d2ca:	0a1b      	lsrs	r3, r3, #8
 801d2cc:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 801d2d0:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801d2d4:	431c      	orrs	r4, r3
 801d2d6:	1c7b      	adds	r3, r7, #1
 801d2d8:	f100 811c 	bmi.w	801d514 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 801d2dc:	429e      	cmp	r6, r3
 801d2de:	f340 8119 	ble.w	801d514 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 801d2e2:	2900      	cmp	r1, #0
 801d2e4:	f000 8119 	beq.w	801d51a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c2>
 801d2e8:	9a01      	ldr	r2, [sp, #4]
 801d2ea:	f899 3001 	ldrb.w	r3, [r9, #1]
 801d2ee:	8855      	ldrh	r5, [r2, #2]
 801d2f0:	ea4f 08e3 	mov.w	r8, r3, asr #3
 801d2f4:	f425 62fc 	bic.w	r2, r5, #2016	@ 0x7e0
 801d2f8:	fb08 f802 	mul.w	r8, r8, r2
 801d2fc:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801d300:	f64f 021f 	movw	r2, #63519	@ 0xf81f
 801d304:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 801d308:	435d      	muls	r5, r3
 801d30a:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801d30e:	44d0      	add	r8, sl
 801d310:	f105 0a20 	add.w	sl, r5, #32
 801d314:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 801d318:	0a2d      	lsrs	r5, r5, #8
 801d31a:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 801d31e:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801d322:	432a      	orrs	r2, r5
 801d324:	3001      	adds	r0, #1
 801d326:	f100 80fe 	bmi.w	801d526 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 801d32a:	4583      	cmp	fp, r0
 801d32c:	f340 80fb 	ble.w	801d526 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 801d330:	f1be 0f00 	cmp.w	lr, #0
 801d334:	f000 80fc 	beq.w	801d530 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2d8>
 801d338:	2f00      	cmp	r7, #0
 801d33a:	f2c0 80f1 	blt.w	801d520 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 801d33e:	42be      	cmp	r6, r7
 801d340:	f340 80ee 	ble.w	801d520 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 801d344:	9801      	ldr	r0, [sp, #4]
 801d346:	f819 5006 	ldrb.w	r5, [r9, r6]
 801d34a:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 801d34e:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801d352:	f428 60fc 	bic.w	r0, r8, #2016	@ 0x7e0
 801d356:	fb0a fa00 	mul.w	sl, sl, r0
 801d35a:	f64f 0b1f 	movw	fp, #63519	@ 0xf81f
 801d35e:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 801d362:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 801d366:	fb05 f808 	mul.w	r8, r5, r8
 801d36a:	f60a 0a01 	addw	sl, sl, #2049	@ 0x801
 801d36e:	4482      	add	sl, r0
 801d370:	f108 0020 	add.w	r0, r8, #32
 801d374:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801d378:	0a00      	lsrs	r0, r0, #8
 801d37a:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 801d37e:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801d382:	ea4b 0b00 	orr.w	fp, fp, r0
 801d386:	3701      	adds	r7, #1
 801d388:	f100 80d7 	bmi.w	801d53a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 801d38c:	42be      	cmp	r6, r7
 801d38e:	f340 80d4 	ble.w	801d53a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 801d392:	2900      	cmp	r1, #0
 801d394:	f000 80d4 	beq.w	801d540 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e8>
 801d398:	3601      	adds	r6, #1
 801d39a:	9801      	ldr	r0, [sp, #4]
 801d39c:	f819 7006 	ldrb.w	r7, [r9, r6]
 801d3a0:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 801d3a4:	ea4f 09e7 	mov.w	r9, r7, asr #3
 801d3a8:	f420 66fc 	bic.w	r6, r0, #2016	@ 0x7e0
 801d3ac:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801d3b0:	fb09 f906 	mul.w	r9, r9, r6
 801d3b4:	fb07 f800 	mul.w	r8, r7, r0
 801d3b8:	f64f 001f 	movw	r0, #63519	@ 0xf81f
 801d3bc:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 801d3c0:	f609 0901 	addw	r9, r9, #2049	@ 0x801
 801d3c4:	44d1      	add	r9, sl
 801d3c6:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 801d3ca:	f108 0020 	add.w	r0, r8, #32
 801d3ce:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801d3d2:	0a00      	lsrs	r0, r0, #8
 801d3d4:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801d3d8:	4330      	orrs	r0, r6
 801d3da:	b28e      	uxth	r6, r1
 801d3dc:	fa1f f98e 	uxth.w	r9, lr
 801d3e0:	fb06 f809 	mul.w	r8, r6, r9
 801d3e4:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 801d3e8:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 801d3ec:	0136      	lsls	r6, r6, #4
 801d3ee:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801d3f2:	f424 64fc 	bic.w	r4, r4, #2016	@ 0x7e0
 801d3f6:	9601      	str	r6, [sp, #4]
 801d3f8:	ea4a 0404 	orr.w	r4, sl, r4
 801d3fc:	fa1f f689 	uxth.w	r6, r9
 801d400:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801d404:	fb11 f90e 	smulbb	r9, r1, lr
 801d408:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 801d40c:	9602      	str	r6, [sp, #8]
 801d40e:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801d412:	4626      	mov	r6, r4
 801d414:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801d418:	f1ce 0410 	rsb	r4, lr, #16
 801d41c:	1a64      	subs	r4, r4, r1
 801d41e:	ea4a 0202 	orr.w	r2, sl, r2
 801d422:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 801d426:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 801d42a:	434a      	muls	r2, r1
 801d42c:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 801d430:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801d434:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801d438:	fb04 2406 	mla	r4, r4, r6, r2
 801d43c:	ea4a 0000 	orr.w	r0, sl, r0
 801d440:	fb09 4200 	mla	r2, r9, r0, r4
 801d444:	ea4f 440b 	mov.w	r4, fp, lsl #16
 801d448:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 801d44c:	9801      	ldr	r0, [sp, #4]
 801d44e:	9903      	ldr	r1, [sp, #12]
 801d450:	f42b 6bfc 	bic.w	fp, fp, #2016	@ 0x7e0
 801d454:	ea44 0b0b 	orr.w	fp, r4, fp
 801d458:	9c02      	ldr	r4, [sp, #8]
 801d45a:	8809      	ldrh	r1, [r1, #0]
 801d45c:	f5c0 7080 	rsb	r0, r0, #256	@ 0x100
 801d460:	1b00      	subs	r0, r0, r4
 801d462:	9c01      	ldr	r4, [sp, #4]
 801d464:	eba4 0608 	sub.w	r6, r4, r8
 801d468:	b2b6      	uxth	r6, r6
 801d46a:	b280      	uxth	r0, r0
 801d46c:	4373      	muls	r3, r6
 801d46e:	fb0c 3300 	mla	r3, ip, r0, r3
 801d472:	9802      	ldr	r0, [sp, #8]
 801d474:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 801d478:	fb00 3505 	mla	r5, r0, r5, r3
 801d47c:	fb0e 2e0b 	mla	lr, lr, fp, r2
 801d480:	fb08 5707 	mla	r7, r8, r7, r5
 801d484:	ea4f 525e 	mov.w	r2, lr, lsr #21
 801d488:	120b      	asrs	r3, r1, #8
 801d48a:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801d48e:	ea6f 2727 	mvn.w	r7, r7, asr #8
 801d492:	b2ff      	uxtb	r7, r7
 801d494:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801d498:	10c8      	asrs	r0, r1, #3
 801d49a:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 801d49e:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 801d4a2:	00c9      	lsls	r1, r1, #3
 801d4a4:	437b      	muls	r3, r7
 801d4a6:	ea42 0e0e 	orr.w	lr, r2, lr
 801d4aa:	b2c9      	uxtb	r1, r1
 801d4ac:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 801d4b0:	fa1f f28e 	uxth.w	r2, lr
 801d4b4:	4378      	muls	r0, r7
 801d4b6:	434f      	muls	r7, r1
 801d4b8:	1c59      	adds	r1, r3, #1
 801d4ba:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 801d4be:	1213      	asrs	r3, r2, #8
 801d4c0:	f023 0307 	bic.w	r3, r3, #7
 801d4c4:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801d4c8:	1c41      	adds	r1, r0, #1
 801d4ca:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 801d4ce:	10d1      	asrs	r1, r2, #3
 801d4d0:	f021 0103 	bic.w	r1, r1, #3
 801d4d4:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 801d4d8:	021b      	lsls	r3, r3, #8
 801d4da:	00c9      	lsls	r1, r1, #3
 801d4dc:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801d4e0:	f403 4378 	and.w	r3, r3, #63488	@ 0xf800
 801d4e4:	430b      	orrs	r3, r1
 801d4e6:	1c79      	adds	r1, r7, #1
 801d4e8:	eb01 2717 	add.w	r7, r1, r7, lsr #8
 801d4ec:	00d2      	lsls	r2, r2, #3
 801d4ee:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 801d4f2:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801d4f6:	431a      	orrs	r2, r3
 801d4f8:	9b03      	ldr	r3, [sp, #12]
 801d4fa:	801a      	strh	r2, [r3, #0]
 801d4fc:	b005      	add	sp, #20
 801d4fe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d502:	f04f 0c00 	mov.w	ip, #0
 801d506:	4664      	mov	r4, ip
 801d508:	e6e5      	b.n	801d2d6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7e>
 801d50a:	2300      	movs	r3, #0
 801d50c:	469c      	mov	ip, r3
 801d50e:	461a      	mov	r2, r3
 801d510:	461c      	mov	r4, r3
 801d512:	e707      	b.n	801d324 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 801d514:	2300      	movs	r3, #0
 801d516:	461a      	mov	r2, r3
 801d518:	e704      	b.n	801d324 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 801d51a:	460b      	mov	r3, r1
 801d51c:	460a      	mov	r2, r1
 801d51e:	e701      	b.n	801d324 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 801d520:	2500      	movs	r5, #0
 801d522:	46ab      	mov	fp, r5
 801d524:	e72f      	b.n	801d386 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x12e>
 801d526:	2700      	movs	r7, #0
 801d528:	463d      	mov	r5, r7
 801d52a:	4638      	mov	r0, r7
 801d52c:	46bb      	mov	fp, r7
 801d52e:	e754      	b.n	801d3da <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 801d530:	4677      	mov	r7, lr
 801d532:	4675      	mov	r5, lr
 801d534:	4670      	mov	r0, lr
 801d536:	46f3      	mov	fp, lr
 801d538:	e74f      	b.n	801d3da <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 801d53a:	2700      	movs	r7, #0
 801d53c:	4638      	mov	r0, r7
 801d53e:	e74c      	b.n	801d3da <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 801d540:	460f      	mov	r7, r1
 801d542:	4608      	mov	r0, r1
 801d544:	e749      	b.n	801d3da <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
	...

0801d548 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801d548:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d54c:	b093      	sub	sp, #76	@ 0x4c
 801d54e:	9210      	str	r2, [sp, #64]	@ 0x40
 801d550:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 801d552:	910e      	str	r1, [sp, #56]	@ 0x38
 801d554:	9306      	str	r3, [sp, #24]
 801d556:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	@ 0x88
 801d55a:	9011      	str	r0, [sp, #68]	@ 0x44
 801d55c:	6850      	ldr	r0, [r2, #4]
 801d55e:	6812      	ldr	r2, [r2, #0]
 801d560:	fb00 1303 	mla	r3, r0, r3, r1
 801d564:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801d568:	9307      	str	r3, [sp, #28]
 801d56a:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801d56c:	681b      	ldr	r3, [r3, #0]
 801d56e:	9308      	str	r3, [sp, #32]
 801d570:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801d572:	685b      	ldr	r3, [r3, #4]
 801d574:	9309      	str	r3, [sp, #36]	@ 0x24
 801d576:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801d578:	2b00      	cmp	r3, #0
 801d57a:	dc03      	bgt.n	801d584 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801d57c:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801d57e:	2b00      	cmp	r3, #0
 801d580:	f340 83b4 	ble.w	801dcec <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 801d584:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801d586:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801d58a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801d58e:	1e48      	subs	r0, r1, #1
 801d590:	1e55      	subs	r5, r2, #1
 801d592:	9b06      	ldr	r3, [sp, #24]
 801d594:	2b00      	cmp	r3, #0
 801d596:	f340 8163 	ble.w	801d860 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x318>
 801d59a:	9e1d      	ldr	r6, [sp, #116]	@ 0x74
 801d59c:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 801d59e:	1436      	asrs	r6, r6, #16
 801d5a0:	ea4f 4323 	mov.w	r3, r3, asr #16
 801d5a4:	d406      	bmi.n	801d5b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801d5a6:	4286      	cmp	r6, r0
 801d5a8:	da04      	bge.n	801d5b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801d5aa:	2b00      	cmp	r3, #0
 801d5ac:	db02      	blt.n	801d5b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801d5ae:	42ab      	cmp	r3, r5
 801d5b0:	f2c0 8157 	blt.w	801d862 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31a>
 801d5b4:	3601      	adds	r6, #1
 801d5b6:	f100 8144 	bmi.w	801d842 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 801d5ba:	42b1      	cmp	r1, r6
 801d5bc:	f2c0 8141 	blt.w	801d842 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 801d5c0:	3301      	adds	r3, #1
 801d5c2:	f100 813e 	bmi.w	801d842 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 801d5c6:	429a      	cmp	r2, r3
 801d5c8:	f2c0 813b 	blt.w	801d842 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 801d5cc:	9b06      	ldr	r3, [sp, #24]
 801d5ce:	9f07      	ldr	r7, [sp, #28]
 801d5d0:	930f      	str	r3, [sp, #60]	@ 0x3c
 801d5d2:	f64f 061f 	movw	r6, #63519	@ 0xf81f
 801d5d6:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801d5d8:	2b00      	cmp	r3, #0
 801d5da:	f340 8164 	ble.w	801d8a6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35e>
 801d5de:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 801d5e0:	9d1d      	ldr	r5, [sp, #116]	@ 0x74
 801d5e2:	1418      	asrs	r0, r3, #16
 801d5e4:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 801d5e6:	f3c3 3103 	ubfx	r1, r3, #12, #4
 801d5ea:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 801d5ec:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 801d5f0:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801d5f2:	142d      	asrs	r5, r5, #16
 801d5f4:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 801d5f8:	f100 81ee 	bmi.w	801d9d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 801d5fc:	f102 3eff 	add.w	lr, r2, #4294967295
 801d600:	4575      	cmp	r5, lr
 801d602:	f280 81e9 	bge.w	801d9d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 801d606:	2800      	cmp	r0, #0
 801d608:	f2c0 81e6 	blt.w	801d9d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 801d60c:	f103 3eff 	add.w	lr, r3, #4294967295
 801d610:	4570      	cmp	r0, lr
 801d612:	f280 81e1 	bge.w	801d9d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 801d616:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801d618:	b212      	sxth	r2, r2
 801d61a:	fb00 5002 	mla	r0, r0, r2, r5
 801d61e:	fa1f fe81 	uxth.w	lr, r1
 801d622:	eb03 0a00 	add.w	sl, r3, r0
 801d626:	ea4f 150e 	mov.w	r5, lr, lsl #4
 801d62a:	f813 9000 	ldrb.w	r9, [r3, r0]
 801d62e:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801d632:	f5c5 7380 	rsb	r3, r5, #256	@ 0x100
 801d636:	b29b      	uxth	r3, r3
 801d638:	f1bc 0f00 	cmp.w	ip, #0
 801d63c:	f000 8179 	beq.w	801d932 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 801d640:	f81a 4002 	ldrb.w	r4, [sl, r2]
 801d644:	940a      	str	r4, [sp, #40]	@ 0x28
 801d646:	eb0a 0b02 	add.w	fp, sl, r2
 801d64a:	fa1f fa8c 	uxth.w	sl, ip
 801d64e:	fb0a fe0e 	mul.w	lr, sl, lr
 801d652:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 801d656:	fa1f fa8a 	uxth.w	sl, sl
 801d65a:	eba5 050e 	sub.w	r5, r5, lr
 801d65e:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801d662:	940b      	str	r4, [sp, #44]	@ 0x2c
 801d664:	eba3 030a 	sub.w	r3, r3, sl
 801d668:	b2ad      	uxth	r5, r5
 801d66a:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 801d66c:	b29b      	uxth	r3, r3
 801d66e:	fb08 f505 	mul.w	r5, r8, r5
 801d672:	fb09 5303 	mla	r3, r9, r3, r5
 801d676:	fb0a 3304 	mla	r3, sl, r4, r3
 801d67a:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801d67c:	fb0e 3304 	mla	r3, lr, r4, r3
 801d680:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801d684:	2b00      	cmp	r3, #0
 801d686:	f000 80cf 	beq.w	801d828 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801d68a:	9c08      	ldr	r4, [sp, #32]
 801d68c:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 801d690:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 801d694:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 801d698:	f000 8150 	beq.w	801d93c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
 801d69c:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
 801d6a0:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801d6a4:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801d6a8:	fb09 f000 	mul.w	r0, r9, r0
 801d6ac:	fb0a fe0e 	mul.w	lr, sl, lr
 801d6b0:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 801d6b4:	f100 0b20 	add.w	fp, r0, #32
 801d6b8:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
 801d6bc:	44ce      	add	lr, r9
 801d6be:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 801d6c2:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801d6c6:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801d6ca:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 801d6ce:	ea4e 0909 	orr.w	r9, lr, r9
 801d6d2:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
 801d6d6:	8868      	ldrh	r0, [r5, #2]
 801d6d8:	d019      	beq.n	801d70e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 801d6da:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
 801d6de:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801d6e2:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801d6e6:	fb08 f800 	mul.w	r8, r8, r0
 801d6ea:	fb0a fe0e 	mul.w	lr, sl, lr
 801d6ee:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 801d6f2:	f108 0b20 	add.w	fp, r8, #32
 801d6f6:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
 801d6fa:	4486      	add	lr, r0
 801d6fc:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 801d700:	0a00      	lsrs	r0, r0, #8
 801d702:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801d706:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801d70a:	ea4e 0000 	orr.w	r0, lr, r0
 801d70e:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 801d712:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 801d716:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
 801d71a:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 801d71e:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801d722:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801d726:	ea4e 0909 	orr.w	r9, lr, r9
 801d72a:	ea4a 0000 	orr.w	r0, sl, r0
 801d72e:	f1bc 0f00 	cmp.w	ip, #0
 801d732:	f000 8105 	beq.w	801d940 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 801d736:	f102 4200 	add.w	r2, r2, #2147483648	@ 0x80000000
 801d73a:	3a01      	subs	r2, #1
 801d73c:	0052      	lsls	r2, r2, #1
 801d73e:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 801d740:	3202      	adds	r2, #2
 801d742:	2cff      	cmp	r4, #255	@ 0xff
 801d744:	eb05 0e02 	add.w	lr, r5, r2
 801d748:	5aaa      	ldrh	r2, [r5, r2]
 801d74a:	d018      	beq.n	801d77e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 801d74c:	f422 65fc 	bic.w	r5, r2, #2016	@ 0x7e0
 801d750:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801d754:	fb04 fa02 	mul.w	sl, r4, r2
 801d758:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801d75c:	fb08 f805 	mul.w	r8, r8, r5
 801d760:	f10a 0520 	add.w	r5, sl, #32
 801d764:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 801d768:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 801d76c:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801d770:	4442      	add	r2, r8
 801d772:	0a2d      	lsrs	r5, r5, #8
 801d774:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 801d778:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801d77c:	432a      	orrs	r2, r5
 801d77e:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801d780:	f8be 5002 	ldrh.w	r5, [lr, #2]
 801d784:	2cff      	cmp	r4, #255	@ 0xff
 801d786:	d01a      	beq.n	801d7be <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 801d788:	f425 6efc 	bic.w	lr, r5, #2016	@ 0x7e0
 801d78c:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801d790:	fb04 fa05 	mul.w	sl, r4, r5
 801d794:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801d798:	fb08 f80e 	mul.w	r8, r8, lr
 801d79c:	f10a 0e20 	add.w	lr, sl, #32
 801d7a0:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 801d7a4:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 801d7a8:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801d7ac:	4445      	add	r5, r8
 801d7ae:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801d7b2:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 801d7b6:	f40e 6efc 	and.w	lr, lr, #2016	@ 0x7e0
 801d7ba:	ea45 050e 	orr.w	r5, r5, lr
 801d7be:	fb1c fe01 	smulbb	lr, ip, r1
 801d7c2:	ea4f 0eee 	mov.w	lr, lr, asr #3
 801d7c6:	f1cc 0810 	rsb	r8, ip, #16
 801d7ca:	eba8 0801 	sub.w	r8, r8, r1
 801d7ce:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801d7d2:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 801d7d6:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 801d7da:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 801d7de:	4341      	muls	r1, r0
 801d7e0:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801d7e4:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801d7e8:	ea4a 0202 	orr.w	r2, sl, r2
 801d7ec:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 801d7f0:	fb09 1108 	mla	r1, r9, r8, r1
 801d7f4:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801d7f8:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
 801d7fc:	fb0c 1102 	mla	r1, ip, r2, r1
 801d800:	ea4b 0505 	orr.w	r5, fp, r5
 801d804:	fb0e 1e05 	mla	lr, lr, r5, r1
 801d808:	ea4f 525e 	mov.w	r2, lr, lsr #21
 801d80c:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801d810:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801d814:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 801d818:	ea42 0e0e 	orr.w	lr, r2, lr
 801d81c:	fa1f f28e 	uxth.w	r2, lr
 801d820:	2bff      	cmp	r3, #255	@ 0xff
 801d822:	f040 80a1 	bne.w	801d968 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x420>
 801d826:	803a      	strh	r2, [r7, #0]
 801d828:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 801d82a:	9a1f      	ldr	r2, [sp, #124]	@ 0x7c
 801d82c:	4413      	add	r3, r2
 801d82e:	931d      	str	r3, [sp, #116]	@ 0x74
 801d830:	9a1e      	ldr	r2, [sp, #120]	@ 0x78
 801d832:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801d834:	441a      	add	r2, r3
 801d836:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801d838:	921e      	str	r2, [sp, #120]	@ 0x78
 801d83a:	3b01      	subs	r3, #1
 801d83c:	3702      	adds	r7, #2
 801d83e:	930f      	str	r3, [sp, #60]	@ 0x3c
 801d840:	e6c9      	b.n	801d5d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801d842:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 801d844:	9e1f      	ldr	r6, [sp, #124]	@ 0x7c
 801d846:	9c1e      	ldr	r4, [sp, #120]	@ 0x78
 801d848:	4433      	add	r3, r6
 801d84a:	931d      	str	r3, [sp, #116]	@ 0x74
 801d84c:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801d84e:	441c      	add	r4, r3
 801d850:	9b06      	ldr	r3, [sp, #24]
 801d852:	941e      	str	r4, [sp, #120]	@ 0x78
 801d854:	3b01      	subs	r3, #1
 801d856:	9306      	str	r3, [sp, #24]
 801d858:	9b07      	ldr	r3, [sp, #28]
 801d85a:	3302      	adds	r3, #2
 801d85c:	9307      	str	r3, [sp, #28]
 801d85e:	e698      	b.n	801d592 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801d860:	d028      	beq.n	801d8b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801d862:	9b06      	ldr	r3, [sp, #24]
 801d864:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 801d866:	9d1d      	ldr	r5, [sp, #116]	@ 0x74
 801d868:	3b01      	subs	r3, #1
 801d86a:	fb00 5003 	mla	r0, r0, r3, r5
 801d86e:	1400      	asrs	r0, r0, #16
 801d870:	f53f aeac 	bmi.w	801d5cc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801d874:	3901      	subs	r1, #1
 801d876:	4288      	cmp	r0, r1
 801d878:	f6bf aea8 	bge.w	801d5cc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801d87c:	9920      	ldr	r1, [sp, #128]	@ 0x80
 801d87e:	981e      	ldr	r0, [sp, #120]	@ 0x78
 801d880:	fb01 0303 	mla	r3, r1, r3, r0
 801d884:	141b      	asrs	r3, r3, #16
 801d886:	f53f aea1 	bmi.w	801d5cc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801d88a:	3a01      	subs	r2, #1
 801d88c:	4293      	cmp	r3, r2
 801d88e:	f6bf ae9d 	bge.w	801d5cc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801d892:	9b06      	ldr	r3, [sp, #24]
 801d894:	f8dd e01c 	ldr.w	lr, [sp, #28]
 801d898:	930f      	str	r3, [sp, #60]	@ 0x3c
 801d89a:	f64f 061f 	movw	r6, #63519	@ 0xf81f
 801d89e:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801d8a0:	2b00      	cmp	r3, #0
 801d8a2:	f300 80b6 	bgt.w	801da12 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ca>
 801d8a6:	9b06      	ldr	r3, [sp, #24]
 801d8a8:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801d8ac:	9b07      	ldr	r3, [sp, #28]
 801d8ae:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801d8b2:	9307      	str	r3, [sp, #28]
 801d8b4:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801d8b6:	2b00      	cmp	r3, #0
 801d8b8:	f340 8218 	ble.w	801dcec <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 801d8bc:	ee30 0a04 	vadd.f32	s0, s0, s8
 801d8c0:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801d8c4:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801d8c8:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801d8ca:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801d8ce:	ee31 1a05 	vadd.f32	s2, s2, s10
 801d8d2:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801d8d6:	eef0 6a62 	vmov.f32	s13, s5
 801d8da:	ee61 7a27 	vmul.f32	s15, s2, s15
 801d8de:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801d8e2:	ee77 2a62 	vsub.f32	s5, s14, s5
 801d8e6:	edcd 6a1d 	vstr	s13, [sp, #116]	@ 0x74
 801d8ea:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801d8ee:	eef0 6a43 	vmov.f32	s13, s6
 801d8f2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801d8f6:	ee12 2a90 	vmov	r2, s5
 801d8fa:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801d8fe:	fb92 f3f3 	sdiv	r3, r2, r3
 801d902:	ee13 2a10 	vmov	r2, s6
 801d906:	931f      	str	r3, [sp, #124]	@ 0x7c
 801d908:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801d90a:	fb92 f3f3 	sdiv	r3, r2, r3
 801d90e:	9320      	str	r3, [sp, #128]	@ 0x80
 801d910:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801d912:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 801d914:	3b01      	subs	r3, #1
 801d916:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801d91a:	930e      	str	r3, [sp, #56]	@ 0x38
 801d91c:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801d91e:	edcd 6a1e 	vstr	s13, [sp, #120]	@ 0x78
 801d922:	bf08      	it	eq
 801d924:	4613      	moveq	r3, r2
 801d926:	9306      	str	r3, [sp, #24]
 801d928:	eeb0 3a67 	vmov.f32	s6, s15
 801d92c:	eef0 2a47 	vmov.f32	s5, s14
 801d930:	e621      	b.n	801d576 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 801d932:	fb08 f505 	mul.w	r5, r8, r5
 801d936:	fb09 5303 	mla	r3, r9, r3, r5
 801d93a:	e6a1      	b.n	801d680 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x138>
 801d93c:	4681      	mov	r9, r0
 801d93e:	e6c8      	b.n	801d6d2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18a>
 801d940:	f1c1 0210 	rsb	r2, r1, #16
 801d944:	4341      	muls	r1, r0
 801d946:	fb09 1902 	mla	r9, r9, r2, r1
 801d94a:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801d94e:	ea4f 5259 	mov.w	r2, r9, lsr #21
 801d952:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801d956:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801d95a:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 801d95e:	ea42 0909 	orr.w	r9, r2, r9
 801d962:	fa1f f289 	uxth.w	r2, r9
 801d966:	e75b      	b.n	801d820 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 801d968:	f8b7 c000 	ldrh.w	ip, [r7]
 801d96c:	43db      	mvns	r3, r3
 801d96e:	ea4f 202c 	mov.w	r0, ip, asr #8
 801d972:	fa5f fe83 	uxtb.w	lr, r3
 801d976:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801d97a:	fb00 f00e 	mul.w	r0, r0, lr
 801d97e:	1c41      	adds	r1, r0, #1
 801d980:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 801d984:	1211      	asrs	r1, r2, #8
 801d986:	ea4f 05ec 	mov.w	r5, ip, asr #3
 801d98a:	f021 0107 	bic.w	r1, r1, #7
 801d98e:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 801d992:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 801d996:	48d7      	ldr	r0, [pc, #860]	@ (801dcf4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>)
 801d998:	fb05 f50e 	mul.w	r5, r5, lr
 801d99c:	b2c9      	uxtb	r1, r1
 801d99e:	ea00 2001 	and.w	r0, r0, r1, lsl #8
 801d9a2:	1c69      	adds	r1, r5, #1
 801d9a4:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 801d9a8:	10d1      	asrs	r1, r2, #3
 801d9aa:	f021 0103 	bic.w	r1, r1, #3
 801d9ae:	ea4f 03cc 	mov.w	r3, ip, lsl #3
 801d9b2:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 801d9b6:	b2db      	uxtb	r3, r3
 801d9b8:	00c9      	lsls	r1, r1, #3
 801d9ba:	fb03 f30e 	mul.w	r3, r3, lr
 801d9be:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801d9c2:	4301      	orrs	r1, r0
 801d9c4:	1c58      	adds	r0, r3, #1
 801d9c6:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 801d9ca:	00d2      	lsls	r2, r2, #3
 801d9cc:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801d9d0:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801d9d4:	430a      	orrs	r2, r1
 801d9d6:	e726      	b.n	801d826 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2de>
 801d9d8:	f115 0e01 	adds.w	lr, r5, #1
 801d9dc:	f53f af24 	bmi.w	801d828 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801d9e0:	4572      	cmp	r2, lr
 801d9e2:	f6ff af21 	blt.w	801d828 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801d9e6:	f110 0e01 	adds.w	lr, r0, #1
 801d9ea:	f53f af1d 	bmi.w	801d828 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801d9ee:	4573      	cmp	r3, lr
 801d9f0:	f6ff af1a 	blt.w	801d828 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801d9f4:	b21b      	sxth	r3, r3
 801d9f6:	b212      	sxth	r2, r2
 801d9f8:	e9cd 1c04 	strd	r1, ip, [sp, #16]
 801d9fc:	e9cd 5002 	strd	r5, r0, [sp, #8]
 801da00:	9301      	str	r3, [sp, #4]
 801da02:	9200      	str	r2, [sp, #0]
 801da04:	4639      	mov	r1, r7
 801da06:	e9dd 3208 	ldrd	r3, r2, [sp, #32]
 801da0a:	9811      	ldr	r0, [sp, #68]	@ 0x44
 801da0c:	f7ff fc24 	bl	801d258 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 801da10:	e70a      	b.n	801d828 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801da12:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 801da14:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801da18:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 801da1a:	f3c3 3503 	ubfx	r5, r3, #12, #4
 801da1e:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801da20:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801da24:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 801da26:	141f      	asrs	r7, r3, #16
 801da28:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 801da2a:	141b      	asrs	r3, r3, #16
 801da2c:	fb01 3707 	mla	r7, r1, r7, r3
 801da30:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801da32:	fa1f fc82 	uxth.w	ip, r2
 801da36:	eb03 0a07 	add.w	sl, r3, r7
 801da3a:	ea4f 100c 	mov.w	r0, ip, lsl #4
 801da3e:	f813 9007 	ldrb.w	r9, [r3, r7]
 801da42:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801da46:	f5c0 7380 	rsb	r3, r0, #256	@ 0x100
 801da4a:	b29b      	uxth	r3, r3
 801da4c:	2d00      	cmp	r5, #0
 801da4e:	f000 80fe 	beq.w	801dc4e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x706>
 801da52:	f81a 4001 	ldrb.w	r4, [sl, r1]
 801da56:	940c      	str	r4, [sp, #48]	@ 0x30
 801da58:	eb0a 0b01 	add.w	fp, sl, r1
 801da5c:	fa1f fa85 	uxth.w	sl, r5
 801da60:	fb0a fc0c 	mul.w	ip, sl, ip
 801da64:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 801da68:	fa1f fa8a 	uxth.w	sl, sl
 801da6c:	eba0 000c 	sub.w	r0, r0, ip
 801da70:	eba3 030a 	sub.w	r3, r3, sl
 801da74:	b280      	uxth	r0, r0
 801da76:	fb08 f000 	mul.w	r0, r8, r0
 801da7a:	b29b      	uxth	r3, r3
 801da7c:	fb09 0303 	mla	r3, r9, r3, r0
 801da80:	980c      	ldr	r0, [sp, #48]	@ 0x30
 801da82:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801da86:	940d      	str	r4, [sp, #52]	@ 0x34
 801da88:	fb0a 3300 	mla	r3, sl, r0, r3
 801da8c:	fb0c 3304 	mla	r3, ip, r4, r3
 801da90:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801da94:	2b00      	cmp	r3, #0
 801da96:	f000 80cc 	beq.w	801dc32 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ea>
 801da9a:	9808      	ldr	r0, [sp, #32]
 801da9c:	9c08      	ldr	r4, [sp, #32]
 801da9e:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 801daa2:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 801daa6:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 801daaa:	f000 80d5 	beq.w	801dc58 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 801daae:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
 801dab2:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801dab6:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801daba:	fb09 f707 	mul.w	r7, r9, r7
 801dabe:	fb0a fc0c 	mul.w	ip, sl, ip
 801dac2:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 801dac6:	f107 0b20 	add.w	fp, r7, #32
 801daca:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
 801dace:	44cc      	add	ip, r9
 801dad0:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 801dad4:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801dad8:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801dadc:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 801dae0:	ea4c 0909 	orr.w	r9, ip, r9
 801dae4:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
 801dae8:	8847      	ldrh	r7, [r0, #2]
 801daea:	d019      	beq.n	801db20 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5d8>
 801daec:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
 801daf0:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801daf4:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801daf8:	fb08 f807 	mul.w	r8, r8, r7
 801dafc:	fb0a fc0c 	mul.w	ip, sl, ip
 801db00:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 801db04:	f108 0b20 	add.w	fp, r8, #32
 801db08:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
 801db0c:	44bc      	add	ip, r7
 801db0e:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 801db12:	0a3f      	lsrs	r7, r7, #8
 801db14:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801db18:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801db1c:	ea4c 0707 	orr.w	r7, ip, r7
 801db20:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 801db24:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 801db28:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 801db2c:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 801db30:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801db34:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
 801db38:	ea4c 0909 	orr.w	r9, ip, r9
 801db3c:	ea4a 0707 	orr.w	r7, sl, r7
 801db40:	2d00      	cmp	r5, #0
 801db42:	f000 808b 	beq.w	801dc5c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x714>
 801db46:	f101 4100 	add.w	r1, r1, #2147483648	@ 0x80000000
 801db4a:	3901      	subs	r1, #1
 801db4c:	0049      	lsls	r1, r1, #1
 801db4e:	3102      	adds	r1, #2
 801db50:	eb00 0c01 	add.w	ip, r0, r1
 801db54:	5a41      	ldrh	r1, [r0, r1]
 801db56:	980c      	ldr	r0, [sp, #48]	@ 0x30
 801db58:	28ff      	cmp	r0, #255	@ 0xff
 801db5a:	d019      	beq.n	801db90 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x648>
 801db5c:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 801db5e:	f421 60fc 	bic.w	r0, r1, #2016	@ 0x7e0
 801db62:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801db66:	fb04 fa01 	mul.w	sl, r4, r1
 801db6a:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801db6e:	fb08 f800 	mul.w	r8, r8, r0
 801db72:	f10a 0020 	add.w	r0, sl, #32
 801db76:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 801db7a:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 801db7e:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801db82:	4441      	add	r1, r8
 801db84:	0a00      	lsrs	r0, r0, #8
 801db86:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 801db8a:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801db8e:	4301      	orrs	r1, r0
 801db90:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801db92:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 801db96:	2cff      	cmp	r4, #255	@ 0xff
 801db98:	d01a      	beq.n	801dbd0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x688>
 801db9a:	f420 6cfc 	bic.w	ip, r0, #2016	@ 0x7e0
 801db9e:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801dba2:	fb04 fa00 	mul.w	sl, r4, r0
 801dba6:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801dbaa:	fb08 f80c 	mul.w	r8, r8, ip
 801dbae:	f10a 0c20 	add.w	ip, sl, #32
 801dbb2:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 801dbb6:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 801dbba:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801dbbe:	4440      	add	r0, r8
 801dbc0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801dbc4:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 801dbc8:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 801dbcc:	ea40 000c 	orr.w	r0, r0, ip
 801dbd0:	fb15 fc02 	smulbb	ip, r5, r2
 801dbd4:	ea4f 0cec 	mov.w	ip, ip, asr #3
 801dbd8:	f1c5 0810 	rsb	r8, r5, #16
 801dbdc:	eba8 0802 	sub.w	r8, r8, r2
 801dbe0:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 801dbe4:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 801dbe8:	437a      	muls	r2, r7
 801dbea:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 801dbee:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 801dbf2:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801dbf6:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 801dbfa:	fb09 2208 	mla	r2, r9, r8, r2
 801dbfe:	ea4a 0101 	orr.w	r1, sl, r1
 801dc02:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 801dc06:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801dc0a:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801dc0e:	fb05 2201 	mla	r2, r5, r1, r2
 801dc12:	ea4b 0000 	orr.w	r0, fp, r0
 801dc16:	fb0c 2200 	mla	r2, ip, r0, r2
 801dc1a:	0d57      	lsrs	r7, r2, #21
 801dc1c:	0952      	lsrs	r2, r2, #5
 801dc1e:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801dc22:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801dc26:	433a      	orrs	r2, r7
 801dc28:	2bff      	cmp	r3, #255	@ 0xff
 801dc2a:	b292      	uxth	r2, r2
 801dc2c:	d127      	bne.n	801dc7e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x736>
 801dc2e:	f8ae 2000 	strh.w	r2, [lr]
 801dc32:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 801dc34:	9a1f      	ldr	r2, [sp, #124]	@ 0x7c
 801dc36:	4413      	add	r3, r2
 801dc38:	931d      	str	r3, [sp, #116]	@ 0x74
 801dc3a:	9a1e      	ldr	r2, [sp, #120]	@ 0x78
 801dc3c:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801dc3e:	441a      	add	r2, r3
 801dc40:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801dc42:	921e      	str	r2, [sp, #120]	@ 0x78
 801dc44:	3b01      	subs	r3, #1
 801dc46:	f10e 0e02 	add.w	lr, lr, #2
 801dc4a:	930f      	str	r3, [sp, #60]	@ 0x3c
 801dc4c:	e627      	b.n	801d89e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 801dc4e:	fb08 f000 	mul.w	r0, r8, r0
 801dc52:	fb09 0303 	mla	r3, r9, r3, r0
 801dc56:	e71b      	b.n	801da90 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x548>
 801dc58:	46b9      	mov	r9, r7
 801dc5a:	e743      	b.n	801dae4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x59c>
 801dc5c:	f1c2 0110 	rsb	r1, r2, #16
 801dc60:	437a      	muls	r2, r7
 801dc62:	fb09 2901 	mla	r9, r9, r1, r2
 801dc66:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801dc6a:	ea4f 5059 	mov.w	r0, r9, lsr #21
 801dc6e:	ea4f 1259 	mov.w	r2, r9, lsr #5
 801dc72:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801dc76:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801dc7a:	4302      	orrs	r2, r0
 801dc7c:	e7d4      	b.n	801dc28 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e0>
 801dc7e:	f8be 7000 	ldrh.w	r7, [lr]
 801dc82:	4c1c      	ldr	r4, [pc, #112]	@ (801dcf4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>)
 801dc84:	43db      	mvns	r3, r3
 801dc86:	1238      	asrs	r0, r7, #8
 801dc88:	fa5f fc83 	uxtb.w	ip, r3
 801dc8c:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801dc90:	10fd      	asrs	r5, r7, #3
 801dc92:	fb00 f00c 	mul.w	r0, r0, ip
 801dc96:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 801dc9a:	fb05 f10c 	mul.w	r1, r5, ip
 801dc9e:	1c45      	adds	r5, r0, #1
 801dca0:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 801dca4:	1215      	asrs	r5, r2, #8
 801dca6:	f025 0507 	bic.w	r5, r5, #7
 801dcaa:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 801dcae:	1c4d      	adds	r5, r1, #1
 801dcb0:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 801dcb4:	10d1      	asrs	r1, r2, #3
 801dcb6:	f021 0103 	bic.w	r1, r1, #3
 801dcba:	00fb      	lsls	r3, r7, #3
 801dcbc:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 801dcc0:	b2db      	uxtb	r3, r3
 801dcc2:	b2c0      	uxtb	r0, r0
 801dcc4:	00c9      	lsls	r1, r1, #3
 801dcc6:	fb03 f30c 	mul.w	r3, r3, ip
 801dcca:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801dcce:	ea04 2000 	and.w	r0, r4, r0, lsl #8
 801dcd2:	4308      	orrs	r0, r1
 801dcd4:	1c59      	adds	r1, r3, #1
 801dcd6:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801dcda:	00d2      	lsls	r2, r2, #3
 801dcdc:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 801dce0:	f3c3 03c4 	ubfx	r3, r3, #3, #5
 801dce4:	4318      	orrs	r0, r3
 801dce6:	f8ae 0000 	strh.w	r0, [lr]
 801dcea:	e7a2      	b.n	801dc32 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ea>
 801dcec:	b013      	add	sp, #76	@ 0x4c
 801dcee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801dcf2:	bf00      	nop
 801dcf4:	fffff800 	.word	0xfffff800

0801dcf8 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>:
 801dcf8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801dcfc:	e9dd 4509 	ldrd	r4, r5, [sp, #36]	@ 0x24
 801dd00:	fb05 4c03 	mla	ip, r5, r3, r4
 801dd04:	2d00      	cmp	r5, #0
 801dd06:	f9bd a020 	ldrsh.w	sl, [sp, #32]
 801dd0a:	f89d 902c 	ldrb.w	r9, [sp, #44]	@ 0x2c
 801dd0e:	f89d 7030 	ldrb.w	r7, [sp, #48]	@ 0x30
 801dd12:	f89d 6034 	ldrb.w	r6, [sp, #52]	@ 0x34
 801dd16:	8808      	ldrh	r0, [r1, #0]
 801dd18:	eb02 0e4c 	add.w	lr, r2, ip, lsl #1
 801dd1c:	f2c0 80a7 	blt.w	801de6e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 801dd20:	45aa      	cmp	sl, r5
 801dd22:	f340 80a4 	ble.w	801de6e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 801dd26:	2c00      	cmp	r4, #0
 801dd28:	f2c0 809f 	blt.w	801de6a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 801dd2c:	42a3      	cmp	r3, r4
 801dd2e:	f340 809c 	ble.w	801de6a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 801dd32:	f832 801c 	ldrh.w	r8, [r2, ip, lsl #1]
 801dd36:	1c62      	adds	r2, r4, #1
 801dd38:	f100 809c 	bmi.w	801de74 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 801dd3c:	4293      	cmp	r3, r2
 801dd3e:	f340 8099 	ble.w	801de74 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 801dd42:	f1b9 0f00 	cmp.w	r9, #0
 801dd46:	f000 8095 	beq.w	801de74 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 801dd4a:	f8be c002 	ldrh.w	ip, [lr, #2]
 801dd4e:	3501      	adds	r5, #1
 801dd50:	f100 8094 	bmi.w	801de7c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 801dd54:	45aa      	cmp	sl, r5
 801dd56:	f340 8091 	ble.w	801de7c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 801dd5a:	2f00      	cmp	r7, #0
 801dd5c:	f000 808e 	beq.w	801de7c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 801dd60:	2c00      	cmp	r4, #0
 801dd62:	f2c0 8089 	blt.w	801de78 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 801dd66:	42a3      	cmp	r3, r4
 801dd68:	f340 8086 	ble.w	801de78 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 801dd6c:	f83e 5013 	ldrh.w	r5, [lr, r3, lsl #1]
 801dd70:	3401      	adds	r4, #1
 801dd72:	f100 8086 	bmi.w	801de82 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 801dd76:	42a3      	cmp	r3, r4
 801dd78:	f340 8083 	ble.w	801de82 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 801dd7c:	f1b9 0f00 	cmp.w	r9, #0
 801dd80:	d07f      	beq.n	801de82 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 801dd82:	3301      	adds	r3, #1
 801dd84:	f83e 3013 	ldrh.w	r3, [lr, r3, lsl #1]
 801dd88:	ea4f 4408 	mov.w	r4, r8, lsl #16
 801dd8c:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 801dd90:	f428 68fc 	bic.w	r8, r8, #2016	@ 0x7e0
 801dd94:	fb19 fe07 	smulbb	lr, r9, r7
 801dd98:	ea44 0808 	orr.w	r8, r4, r8
 801dd9c:	ea4f 440c 	mov.w	r4, ip, lsl #16
 801dda0:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 801dda4:	f1c7 0210 	rsb	r2, r7, #16
 801dda8:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 801ddac:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 801ddb0:	ea44 0c0c 	orr.w	ip, r4, ip
 801ddb4:	eba2 0209 	sub.w	r2, r2, r9
 801ddb8:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 801ddbc:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 801ddc0:	fb04 f40c 	mul.w	r4, r4, ip
 801ddc4:	fb02 4808 	mla	r8, r2, r8, r4
 801ddc8:	041a      	lsls	r2, r3, #16
 801ddca:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 801ddce:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801ddd2:	4313      	orrs	r3, r2
 801ddd4:	042a      	lsls	r2, r5, #16
 801ddd6:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 801ddda:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
 801ddde:	fb0e 8303 	mla	r3, lr, r3, r8
 801dde2:	432a      	orrs	r2, r5
 801dde4:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 801dde8:	fb07 3202 	mla	r2, r7, r2, r3
 801ddec:	0d53      	lsrs	r3, r2, #21
 801ddee:	0952      	lsrs	r2, r2, #5
 801ddf0:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801ddf4:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801ddf8:	431a      	orrs	r2, r3
 801ddfa:	b293      	uxth	r3, r2
 801ddfc:	b2b4      	uxth	r4, r6
 801ddfe:	1202      	asrs	r2, r0, #8
 801de00:	43f6      	mvns	r6, r6
 801de02:	b2f6      	uxtb	r6, r6
 801de04:	121d      	asrs	r5, r3, #8
 801de06:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 801de0a:	fb12 f206 	smulbb	r2, r2, r6
 801de0e:	10c7      	asrs	r7, r0, #3
 801de10:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 801de14:	00c0      	lsls	r0, r0, #3
 801de16:	fb05 2504 	mla	r5, r5, r4, r2
 801de1a:	b2c0      	uxtb	r0, r0
 801de1c:	10da      	asrs	r2, r3, #3
 801de1e:	00db      	lsls	r3, r3, #3
 801de20:	b2db      	uxtb	r3, r3
 801de22:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801de26:	fb10 f006 	smulbb	r0, r0, r6
 801de2a:	b2ad      	uxth	r5, r5
 801de2c:	fb03 0004 	mla	r0, r3, r4, r0
 801de30:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 801de34:	fb17 f706 	smulbb	r7, r7, r6
 801de38:	b280      	uxth	r0, r0
 801de3a:	1c6b      	adds	r3, r5, #1
 801de3c:	fb02 7204 	mla	r2, r2, r4, r7
 801de40:	b292      	uxth	r2, r2
 801de42:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801de46:	1c43      	adds	r3, r0, #1
 801de48:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801de4c:	1c50      	adds	r0, r2, #1
 801de4e:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 801de52:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 801de56:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801de5a:	0952      	lsrs	r2, r2, #5
 801de5c:	432b      	orrs	r3, r5
 801de5e:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801de62:	4313      	orrs	r3, r2
 801de64:	800b      	strh	r3, [r1, #0]
 801de66:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801de6a:	4680      	mov	r8, r0
 801de6c:	e763      	b.n	801dd36 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x3e>
 801de6e:	4684      	mov	ip, r0
 801de70:	4680      	mov	r8, r0
 801de72:	e76c      	b.n	801dd4e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 801de74:	4684      	mov	ip, r0
 801de76:	e76a      	b.n	801dd4e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 801de78:	4605      	mov	r5, r0
 801de7a:	e779      	b.n	801dd70 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x78>
 801de7c:	4603      	mov	r3, r0
 801de7e:	4605      	mov	r5, r0
 801de80:	e782      	b.n	801dd88 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>
 801de82:	4603      	mov	r3, r0
 801de84:	e780      	b.n	801dd88 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>

0801de86 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801de86:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801de8a:	b093      	sub	sp, #76	@ 0x4c
 801de8c:	461d      	mov	r5, r3
 801de8e:	9210      	str	r2, [sp, #64]	@ 0x40
 801de90:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 801de92:	f89d 2094 	ldrb.w	r2, [sp, #148]	@ 0x94
 801de96:	920b      	str	r2, [sp, #44]	@ 0x2c
 801de98:	e9dd 2722 	ldrd	r2, r7, [sp, #136]	@ 0x88
 801de9c:	910a      	str	r1, [sp, #40]	@ 0x28
 801de9e:	6859      	ldr	r1, [r3, #4]
 801dea0:	681b      	ldr	r3, [r3, #0]
 801dea2:	9011      	str	r0, [sp, #68]	@ 0x44
 801dea4:	fb01 2707 	mla	r7, r1, r7, r2
 801dea8:	eb03 0347 	add.w	r3, r3, r7, lsl #1
 801deac:	9307      	str	r3, [sp, #28]
 801deae:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801deb0:	681b      	ldr	r3, [r3, #0]
 801deb2:	9309      	str	r3, [sp, #36]	@ 0x24
 801deb4:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801deb6:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	@ 0x74
 801deba:	43db      	mvns	r3, r3
 801debc:	b2db      	uxtb	r3, r3
 801debe:	9308      	str	r3, [sp, #32]
 801dec0:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801dec2:	2b00      	cmp	r3, #0
 801dec4:	dc03      	bgt.n	801dece <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801dec6:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801dec8:	2b00      	cmp	r3, #0
 801deca:	f340 8203 	ble.w	801e2d4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 801dece:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801ded0:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801ded4:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801ded8:	1e48      	subs	r0, r1, #1
 801deda:	f102 3cff 	add.w	ip, r2, #4294967295
 801dede:	2d00      	cmp	r5, #0
 801dee0:	f340 80da 	ble.w	801e098 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 801dee4:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801dee8:	ea4f 4326 	mov.w	r3, r6, asr #16
 801deec:	d406      	bmi.n	801defc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801deee:	4586      	cmp	lr, r0
 801def0:	da04      	bge.n	801defc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801def2:	2b00      	cmp	r3, #0
 801def4:	db02      	blt.n	801defc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801def6:	4563      	cmp	r3, ip
 801def8:	f2c0 80cf 	blt.w	801e09a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801defc:	f11e 0e01 	adds.w	lr, lr, #1
 801df00:	f100 80c1 	bmi.w	801e086 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801df04:	4571      	cmp	r1, lr
 801df06:	f2c0 80be 	blt.w	801e086 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801df0a:	3301      	adds	r3, #1
 801df0c:	f100 80bb 	bmi.w	801e086 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801df10:	429a      	cmp	r2, r3
 801df12:	f2c0 80b8 	blt.w	801e086 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801df16:	f8dd 801c 	ldr.w	r8, [sp, #28]
 801df1a:	46a9      	mov	r9, r5
 801df1c:	f1b9 0f00 	cmp.w	r9, #0
 801df20:	f340 80d8 	ble.w	801e0d4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24e>
 801df24:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801df26:	1421      	asrs	r1, r4, #16
 801df28:	ea4f 4026 	mov.w	r0, r6, asr #16
 801df2c:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801df30:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 801df34:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 801df38:	f100 8111 	bmi.w	801e15e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 801df3c:	f10e 3aff 	add.w	sl, lr, #4294967295
 801df40:	4551      	cmp	r1, sl
 801df42:	f280 810c 	bge.w	801e15e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 801df46:	2800      	cmp	r0, #0
 801df48:	f2c0 8109 	blt.w	801e15e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 801df4c:	f103 3aff 	add.w	sl, r3, #4294967295
 801df50:	4550      	cmp	r0, sl
 801df52:	f280 8104 	bge.w	801e15e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 801df56:	fa0f f38e 	sxth.w	r3, lr
 801df5a:	fb00 1103 	mla	r1, r0, r3, r1
 801df5e:	9809      	ldr	r0, [sp, #36]	@ 0x24
 801df60:	eb00 0a41 	add.w	sl, r0, r1, lsl #1
 801df64:	f830 e011 	ldrh.w	lr, [r0, r1, lsl #1]
 801df68:	f8ba 1002 	ldrh.w	r1, [sl, #2]
 801df6c:	f1bc 0f00 	cmp.w	ip, #0
 801df70:	d007      	beq.n	801df82 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfc>
 801df72:	005b      	lsls	r3, r3, #1
 801df74:	eb0a 0003 	add.w	r0, sl, r3
 801df78:	f83a 3003 	ldrh.w	r3, [sl, r3]
 801df7c:	930c      	str	r3, [sp, #48]	@ 0x30
 801df7e:	8843      	ldrh	r3, [r0, #2]
 801df80:	930d      	str	r3, [sp, #52]	@ 0x34
 801df82:	ea4f 400e 	mov.w	r0, lr, lsl #16
 801df86:	fb12 f30c 	smulbb	r3, r2, ip
 801df8a:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 801df8e:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 801df92:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 801df96:	10db      	asrs	r3, r3, #3
 801df98:	ea40 000e 	orr.w	r0, r0, lr
 801df9c:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801dfa0:	f1cc 0e10 	rsb	lr, ip, #16
 801dfa4:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 801dfa8:	ebae 0e02 	sub.w	lr, lr, r2
 801dfac:	ea4a 0101 	orr.w	r1, sl, r1
 801dfb0:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801dfb4:	4351      	muls	r1, r2
 801dfb6:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 801dfb8:	9f08      	ldr	r7, [sp, #32]
 801dfba:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 801dfbe:	fb0e 1e00 	mla	lr, lr, r0, r1
 801dfc2:	0410      	lsls	r0, r2, #16
 801dfc4:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 801dfc8:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801dfcc:	4310      	orrs	r0, r2
 801dfce:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 801dfd0:	990c      	ldr	r1, [sp, #48]	@ 0x30
 801dfd2:	0412      	lsls	r2, r2, #16
 801dfd4:	fb03 e000 	mla	r0, r3, r0, lr
 801dfd8:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 801dfdc:	f421 6efc 	bic.w	lr, r1, #2016	@ 0x7e0
 801dfe0:	ea42 020e 	orr.w	r2, r2, lr
 801dfe4:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 801dfe8:	fb03 0302 	mla	r3, r3, r2, r0
 801dfec:	0d5a      	lsrs	r2, r3, #21
 801dfee:	095b      	lsrs	r3, r3, #5
 801dff0:	f8b8 0000 	ldrh.w	r0, [r8]
 801dff4:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801dff8:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801dffc:	4313      	orrs	r3, r2
 801dffe:	b29b      	uxth	r3, r3
 801e000:	1201      	asrs	r1, r0, #8
 801e002:	f8bd 202c 	ldrh.w	r2, [sp, #44]	@ 0x2c
 801e006:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801e00a:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 801e00e:	fb11 f107 	smulbb	r1, r1, r7
 801e012:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 801e016:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801e01a:	00c0      	lsls	r0, r0, #3
 801e01c:	fb0c 1c02 	mla	ip, ip, r2, r1
 801e020:	b2c0      	uxtb	r0, r0
 801e022:	10d9      	asrs	r1, r3, #3
 801e024:	00db      	lsls	r3, r3, #3
 801e026:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
 801e02a:	b2db      	uxtb	r3, r3
 801e02c:	fb10 f007 	smulbb	r0, r0, r7
 801e030:	fa1f fc8c 	uxth.w	ip, ip
 801e034:	fb03 0302 	mla	r3, r3, r2, r0
 801e038:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 801e03c:	fb1e fe07 	smulbb	lr, lr, r7
 801e040:	fb01 e102 	mla	r1, r1, r2, lr
 801e044:	b29a      	uxth	r2, r3
 801e046:	f10c 0301 	add.w	r3, ip, #1
 801e04a:	b289      	uxth	r1, r1
 801e04c:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 801e050:	1c53      	adds	r3, r2, #1
 801e052:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801e056:	1c4a      	adds	r2, r1, #1
 801e058:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801e05c:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 801e060:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801e064:	0949      	lsrs	r1, r1, #5
 801e066:	ea43 030c 	orr.w	r3, r3, ip
 801e06a:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801e06e:	430b      	orrs	r3, r1
 801e070:	f8a8 3000 	strh.w	r3, [r8]
 801e074:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801e076:	441c      	add	r4, r3
 801e078:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801e07a:	f108 0802 	add.w	r8, r8, #2
 801e07e:	441e      	add	r6, r3
 801e080:	f109 39ff 	add.w	r9, r9, #4294967295
 801e084:	e74a      	b.n	801df1c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801e086:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801e088:	441c      	add	r4, r3
 801e08a:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801e08c:	441e      	add	r6, r3
 801e08e:	9b07      	ldr	r3, [sp, #28]
 801e090:	3302      	adds	r3, #2
 801e092:	3d01      	subs	r5, #1
 801e094:	9307      	str	r3, [sp, #28]
 801e096:	e722      	b.n	801dede <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801e098:	d022      	beq.n	801e0e0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25a>
 801e09a:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 801e09c:	1e6b      	subs	r3, r5, #1
 801e09e:	fb00 4003 	mla	r0, r0, r3, r4
 801e0a2:	1400      	asrs	r0, r0, #16
 801e0a4:	f53f af37 	bmi.w	801df16 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801e0a8:	3901      	subs	r1, #1
 801e0aa:	4288      	cmp	r0, r1
 801e0ac:	f6bf af33 	bge.w	801df16 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801e0b0:	9920      	ldr	r1, [sp, #128]	@ 0x80
 801e0b2:	fb01 6303 	mla	r3, r1, r3, r6
 801e0b6:	141b      	asrs	r3, r3, #16
 801e0b8:	f53f af2d 	bmi.w	801df16 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801e0bc:	3a01      	subs	r2, #1
 801e0be:	4293      	cmp	r3, r2
 801e0c0:	f6bf af29 	bge.w	801df16 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801e0c4:	f8dd 901c 	ldr.w	r9, [sp, #28]
 801e0c8:	f8bd a02c 	ldrh.w	sl, [sp, #44]	@ 0x2c
 801e0cc:	46a8      	mov	r8, r5
 801e0ce:	f1b8 0f00 	cmp.w	r8, #0
 801e0d2:	dc5e      	bgt.n	801e192 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 801e0d4:	9b07      	ldr	r3, [sp, #28]
 801e0d6:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 801e0da:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 801e0de:	9307      	str	r3, [sp, #28]
 801e0e0:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801e0e2:	2b00      	cmp	r3, #0
 801e0e4:	f340 80f6 	ble.w	801e2d4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 801e0e8:	ee30 0a04 	vadd.f32	s0, s0, s8
 801e0ec:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801e0f0:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801e0f4:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801e0f6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801e0fa:	ee31 1a05 	vadd.f32	s2, s2, s10
 801e0fe:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801e102:	eef0 6a62 	vmov.f32	s13, s5
 801e106:	ee61 7a27 	vmul.f32	s15, s2, s15
 801e10a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801e10e:	ee77 2a62 	vsub.f32	s5, s14, s5
 801e112:	ee16 4a90 	vmov	r4, s13
 801e116:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801e11a:	eef0 6a43 	vmov.f32	s13, s6
 801e11e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801e122:	ee12 2a90 	vmov	r2, s5
 801e126:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801e12a:	fb92 f3f3 	sdiv	r3, r2, r3
 801e12e:	ee13 2a10 	vmov	r2, s6
 801e132:	931f      	str	r3, [sp, #124]	@ 0x7c
 801e134:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801e136:	fb92 f3f3 	sdiv	r3, r2, r3
 801e13a:	9320      	str	r3, [sp, #128]	@ 0x80
 801e13c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801e13e:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 801e140:	3b01      	subs	r3, #1
 801e142:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801e146:	930a      	str	r3, [sp, #40]	@ 0x28
 801e148:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801e14a:	ee16 6a90 	vmov	r6, s13
 801e14e:	bf14      	ite	ne
 801e150:	461d      	movne	r5, r3
 801e152:	4615      	moveq	r5, r2
 801e154:	eeb0 3a67 	vmov.f32	s6, s15
 801e158:	eef0 2a47 	vmov.f32	s5, s14
 801e15c:	e6b0      	b.n	801dec0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801e15e:	f111 0a01 	adds.w	sl, r1, #1
 801e162:	d487      	bmi.n	801e074 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801e164:	45d6      	cmp	lr, sl
 801e166:	db85      	blt.n	801e074 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801e168:	f110 0a01 	adds.w	sl, r0, #1
 801e16c:	d482      	bmi.n	801e074 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801e16e:	4553      	cmp	r3, sl
 801e170:	db80      	blt.n	801e074 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801e172:	9f0b      	ldr	r7, [sp, #44]	@ 0x2c
 801e174:	9101      	str	r1, [sp, #4]
 801e176:	b21b      	sxth	r3, r3
 801e178:	e9cd 0202 	strd	r0, r2, [sp, #8]
 801e17c:	9300      	str	r3, [sp, #0]
 801e17e:	e9cd c704 	strd	ip, r7, [sp, #16]
 801e182:	fa0f f38e 	sxth.w	r3, lr
 801e186:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 801e188:	9811      	ldr	r0, [sp, #68]	@ 0x44
 801e18a:	4641      	mov	r1, r8
 801e18c:	f7ff fdb4 	bl	801dcf8 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>
 801e190:	e770      	b.n	801e074 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801e192:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801e194:	9f09      	ldr	r7, [sp, #36]	@ 0x24
 801e196:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801e19a:	1430      	asrs	r0, r6, #16
 801e19c:	1423      	asrs	r3, r4, #16
 801e19e:	fb01 3000 	mla	r0, r1, r0, r3
 801e1a2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801e1a4:	f837 c010 	ldrh.w	ip, [r7, r0, lsl #1]
 801e1a8:	eb03 0340 	add.w	r3, r3, r0, lsl #1
 801e1ac:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 801e1b0:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801e1b4:	8858      	ldrh	r0, [r3, #2]
 801e1b6:	f1be 0f00 	cmp.w	lr, #0
 801e1ba:	d00b      	beq.n	801e1d4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34e>
 801e1bc:	f101 4100 	add.w	r1, r1, #2147483648	@ 0x80000000
 801e1c0:	3901      	subs	r1, #1
 801e1c2:	0049      	lsls	r1, r1, #1
 801e1c4:	3102      	adds	r1, #2
 801e1c6:	eb03 0b01 	add.w	fp, r3, r1
 801e1ca:	5a5b      	ldrh	r3, [r3, r1]
 801e1cc:	930e      	str	r3, [sp, #56]	@ 0x38
 801e1ce:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 801e1d2:	930f      	str	r3, [sp, #60]	@ 0x3c
 801e1d4:	ea4f 410c 	mov.w	r1, ip, lsl #16
 801e1d8:	fb12 f30e 	smulbb	r3, r2, lr
 801e1dc:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 801e1e0:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 801e1e4:	f001 61fc 	and.w	r1, r1, #132120576	@ 0x7e00000
 801e1e8:	10db      	asrs	r3, r3, #3
 801e1ea:	ea41 010c 	orr.w	r1, r1, ip
 801e1ee:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801e1f2:	f1ce 0c10 	rsb	ip, lr, #16
 801e1f6:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801e1fa:	ebac 0c02 	sub.w	ip, ip, r2
 801e1fe:	ea4b 0000 	orr.w	r0, fp, r0
 801e202:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801e206:	4350      	muls	r0, r2
 801e208:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801e20a:	9f08      	ldr	r7, [sp, #32]
 801e20c:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 801e210:	fb0c 0c01 	mla	ip, ip, r1, r0
 801e214:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 801e218:	f422 61fc 	bic.w	r1, r2, #2016	@ 0x7e0
 801e21c:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 801e21e:	980e      	ldr	r0, [sp, #56]	@ 0x38
 801e220:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801e224:	0412      	lsls	r2, r2, #16
 801e226:	ea4b 0101 	orr.w	r1, fp, r1
 801e22a:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801e22e:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 801e232:	fb03 c101 	mla	r1, r3, r1, ip
 801e236:	4302      	orrs	r2, r0
 801e238:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 801e23c:	fb03 1202 	mla	r2, r3, r2, r1
 801e240:	ea4f 5b52 	mov.w	fp, r2, lsr #21
 801e244:	0952      	lsrs	r2, r2, #5
 801e246:	f422 63fc 	bic.w	r3, r2, #2016	@ 0x7e0
 801e24a:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
 801e24e:	f8b9 2000 	ldrh.w	r2, [r9]
 801e252:	ea4b 0303 	orr.w	r3, fp, r3
 801e256:	b29b      	uxth	r3, r3
 801e258:	1211      	asrs	r1, r2, #8
 801e25a:	1218      	asrs	r0, r3, #8
 801e25c:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 801e260:	fb11 f107 	smulbb	r1, r1, r7
 801e264:	ea4f 0ce2 	mov.w	ip, r2, asr #3
 801e268:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801e26c:	00d2      	lsls	r2, r2, #3
 801e26e:	fb00 100a 	mla	r0, r0, sl, r1
 801e272:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
 801e276:	10d9      	asrs	r1, r3, #3
 801e278:	b2d2      	uxtb	r2, r2
 801e27a:	00db      	lsls	r3, r3, #3
 801e27c:	fb1c fc07 	smulbb	ip, ip, r7
 801e280:	fb12 f207 	smulbb	r2, r2, r7
 801e284:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 801e288:	b2db      	uxtb	r3, r3
 801e28a:	b280      	uxth	r0, r0
 801e28c:	fb01 c10a 	mla	r1, r1, sl, ip
 801e290:	fb03 230a 	mla	r3, r3, sl, r2
 801e294:	b29b      	uxth	r3, r3
 801e296:	b289      	uxth	r1, r1
 801e298:	1c42      	adds	r2, r0, #1
 801e29a:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801e29e:	f101 0c01 	add.w	ip, r1, #1
 801e2a2:	1c5a      	adds	r2, r3, #1
 801e2a4:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801e2a8:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 801e2ac:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801e2ae:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
 801e2b2:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801e2b6:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801e2ba:	4310      	orrs	r0, r2
 801e2bc:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 801e2c0:	441c      	add	r4, r3
 801e2c2:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801e2c4:	ea40 000c 	orr.w	r0, r0, ip
 801e2c8:	f829 0b02 	strh.w	r0, [r9], #2
 801e2cc:	441e      	add	r6, r3
 801e2ce:	f108 38ff 	add.w	r8, r8, #4294967295
 801e2d2:	e6fc      	b.n	801e0ce <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x248>
 801e2d4:	b013      	add	sp, #76	@ 0x4c
 801e2d6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801e2da <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>:
 801e2da:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801e2de:	e9dd 4e08 	ldrd	r4, lr, [sp, #32]
 801e2e2:	fb0e 4703 	mla	r7, lr, r3, r4
 801e2e6:	f1be 0f00 	cmp.w	lr, #0
 801e2ea:	f9bd 901c 	ldrsh.w	r9, [sp, #28]
 801e2ee:	f89d 5028 	ldrb.w	r5, [sp, #40]	@ 0x28
 801e2f2:	f89d 602c 	ldrb.w	r6, [sp, #44]	@ 0x2c
 801e2f6:	8808      	ldrh	r0, [r1, #0]
 801e2f8:	eb02 0847 	add.w	r8, r2, r7, lsl #1
 801e2fc:	db60      	blt.n	801e3c0 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 801e2fe:	45f1      	cmp	r9, lr
 801e300:	dd5e      	ble.n	801e3c0 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 801e302:	2c00      	cmp	r4, #0
 801e304:	db5a      	blt.n	801e3bc <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 801e306:	42a3      	cmp	r3, r4
 801e308:	dd58      	ble.n	801e3bc <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 801e30a:	f832 c017 	ldrh.w	ip, [r2, r7, lsl #1]
 801e30e:	1c62      	adds	r2, r4, #1
 801e310:	d459      	bmi.n	801e3c6 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 801e312:	4293      	cmp	r3, r2
 801e314:	dd57      	ble.n	801e3c6 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 801e316:	2d00      	cmp	r5, #0
 801e318:	d055      	beq.n	801e3c6 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 801e31a:	f8b8 7002 	ldrh.w	r7, [r8, #2]
 801e31e:	f11e 0e01 	adds.w	lr, lr, #1
 801e322:	d454      	bmi.n	801e3ce <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 801e324:	45f1      	cmp	r9, lr
 801e326:	dd52      	ble.n	801e3ce <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 801e328:	2e00      	cmp	r6, #0
 801e32a:	d050      	beq.n	801e3ce <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 801e32c:	2c00      	cmp	r4, #0
 801e32e:	db4c      	blt.n	801e3ca <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 801e330:	42a3      	cmp	r3, r4
 801e332:	dd4a      	ble.n	801e3ca <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 801e334:	f838 2013 	ldrh.w	r2, [r8, r3, lsl #1]
 801e338:	3401      	adds	r4, #1
 801e33a:	d405      	bmi.n	801e348 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 801e33c:	42a3      	cmp	r3, r4
 801e33e:	dd03      	ble.n	801e348 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 801e340:	b115      	cbz	r5, 801e348 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 801e342:	3301      	adds	r3, #1
 801e344:	f838 0013 	ldrh.w	r0, [r8, r3, lsl #1]
 801e348:	ea4f 430c 	mov.w	r3, ip, lsl #16
 801e34c:	fb15 f406 	smulbb	r4, r5, r6
 801e350:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801e354:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 801e358:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 801e35c:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 801e360:	ea43 0c0c 	orr.w	ip, r3, ip
 801e364:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
 801e368:	f1c6 0310 	rsb	r3, r6, #16
 801e36c:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
 801e370:	1b5b      	subs	r3, r3, r5
 801e372:	ea4e 0707 	orr.w	r7, lr, r7
 801e376:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 801e37a:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801e37e:	437d      	muls	r5, r7
 801e380:	fb03 5c0c 	mla	ip, r3, ip, r5
 801e384:	0403      	lsls	r3, r0, #16
 801e386:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801e38a:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801e38e:	4318      	orrs	r0, r3
 801e390:	0413      	lsls	r3, r2, #16
 801e392:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801e396:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801e39a:	4313      	orrs	r3, r2
 801e39c:	fb04 c000 	mla	r0, r4, r0, ip
 801e3a0:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 801e3a4:	fb06 0003 	mla	r0, r6, r3, r0
 801e3a8:	0d43      	lsrs	r3, r0, #21
 801e3aa:	0940      	lsrs	r0, r0, #5
 801e3ac:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801e3b0:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801e3b4:	4318      	orrs	r0, r3
 801e3b6:	8008      	strh	r0, [r1, #0]
 801e3b8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801e3bc:	4684      	mov	ip, r0
 801e3be:	e7a6      	b.n	801e30e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x34>
 801e3c0:	4607      	mov	r7, r0
 801e3c2:	4684      	mov	ip, r0
 801e3c4:	e7ab      	b.n	801e31e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 801e3c6:	4607      	mov	r7, r0
 801e3c8:	e7a9      	b.n	801e31e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 801e3ca:	4602      	mov	r2, r0
 801e3cc:	e7b4      	b.n	801e338 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x5e>
 801e3ce:	4602      	mov	r2, r0
 801e3d0:	e7ba      	b.n	801e348 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>

0801e3d2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801e3d2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e3d6:	b08f      	sub	sp, #60	@ 0x3c
 801e3d8:	461d      	mov	r5, r3
 801e3da:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 801e3dc:	920c      	str	r2, [sp, #48]	@ 0x30
 801e3de:	e9dd 271e 	ldrd	r2, r7, [sp, #120]	@ 0x78
 801e3e2:	9107      	str	r1, [sp, #28]
 801e3e4:	6859      	ldr	r1, [r3, #4]
 801e3e6:	681b      	ldr	r3, [r3, #0]
 801e3e8:	900d      	str	r0, [sp, #52]	@ 0x34
 801e3ea:	fb01 2707 	mla	r7, r1, r7, r2
 801e3ee:	eb03 0747 	add.w	r7, r3, r7, lsl #1
 801e3f2:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801e3f4:	e9dd 4619 	ldrd	r4, r6, [sp, #100]	@ 0x64
 801e3f8:	f8d3 8000 	ldr.w	r8, [r3]
 801e3fc:	9b07      	ldr	r3, [sp, #28]
 801e3fe:	2b00      	cmp	r3, #0
 801e400:	dc03      	bgt.n	801e40a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801e402:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801e404:	2b00      	cmp	r3, #0
 801e406:	f340 8181 	ble.w	801e70c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 801e40a:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801e40c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801e410:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801e414:	1e48      	subs	r0, r1, #1
 801e416:	f102 3cff 	add.w	ip, r2, #4294967295
 801e41a:	2d00      	cmp	r5, #0
 801e41c:	f340 809b 	ble.w	801e556 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x184>
 801e420:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801e424:	ea4f 4326 	mov.w	r3, r6, asr #16
 801e428:	d406      	bmi.n	801e438 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801e42a:	4586      	cmp	lr, r0
 801e42c:	da04      	bge.n	801e438 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801e42e:	2b00      	cmp	r3, #0
 801e430:	db02      	blt.n	801e438 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801e432:	4563      	cmp	r3, ip
 801e434:	f2c0 8090 	blt.w	801e558 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801e438:	f11e 0e01 	adds.w	lr, lr, #1
 801e43c:	f100 8084 	bmi.w	801e548 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801e440:	4571      	cmp	r1, lr
 801e442:	f2c0 8081 	blt.w	801e548 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801e446:	3301      	adds	r3, #1
 801e448:	d47e      	bmi.n	801e548 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801e44a:	429a      	cmp	r2, r3
 801e44c:	db7c      	blt.n	801e548 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801e44e:	46aa      	mov	sl, r5
 801e450:	46b9      	mov	r9, r7
 801e452:	f1ba 0f00 	cmp.w	sl, #0
 801e456:	f340 8099 	ble.w	801e58c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
 801e45a:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801e45c:	1421      	asrs	r1, r4, #16
 801e45e:	ea4f 4026 	mov.w	r0, r6, asr #16
 801e462:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801e466:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 801e46a:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 801e46e:	f100 80d0 	bmi.w	801e612 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 801e472:	f10e 3bff 	add.w	fp, lr, #4294967295
 801e476:	4559      	cmp	r1, fp
 801e478:	f280 80cb 	bge.w	801e612 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 801e47c:	2800      	cmp	r0, #0
 801e47e:	f2c0 80c8 	blt.w	801e612 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 801e482:	f103 3bff 	add.w	fp, r3, #4294967295
 801e486:	4558      	cmp	r0, fp
 801e488:	f280 80c3 	bge.w	801e612 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 801e48c:	fa0f fe8e 	sxth.w	lr, lr
 801e490:	fb00 110e 	mla	r1, r0, lr, r1
 801e494:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 801e498:	f838 b011 	ldrh.w	fp, [r8, r1, lsl #1]
 801e49c:	8841      	ldrh	r1, [r0, #2]
 801e49e:	f1bc 0f00 	cmp.w	ip, #0
 801e4a2:	d00b      	beq.n	801e4bc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xea>
 801e4a4:	f10e 4300 	add.w	r3, lr, #2147483648	@ 0x80000000
 801e4a8:	3b01      	subs	r3, #1
 801e4aa:	005b      	lsls	r3, r3, #1
 801e4ac:	3302      	adds	r3, #2
 801e4ae:	eb00 0e03 	add.w	lr, r0, r3
 801e4b2:	5ac3      	ldrh	r3, [r0, r3]
 801e4b4:	9308      	str	r3, [sp, #32]
 801e4b6:	f8be 3002 	ldrh.w	r3, [lr, #2]
 801e4ba:	9309      	str	r3, [sp, #36]	@ 0x24
 801e4bc:	ea4f 400b 	mov.w	r0, fp, lsl #16
 801e4c0:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 801e4c4:	f42b 6bfc 	bic.w	fp, fp, #2016	@ 0x7e0
 801e4c8:	ea40 000b 	orr.w	r0, r0, fp
 801e4cc:	fb12 f30c 	smulbb	r3, r2, ip
 801e4d0:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801e4d4:	10db      	asrs	r3, r3, #3
 801e4d6:	f1cc 0e10 	rsb	lr, ip, #16
 801e4da:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801e4de:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 801e4e2:	ebae 0e02 	sub.w	lr, lr, r2
 801e4e6:	ea4b 0101 	orr.w	r1, fp, r1
 801e4ea:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801e4ee:	4351      	muls	r1, r2
 801e4f0:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 801e4f2:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 801e4f6:	fb0e 1e00 	mla	lr, lr, r0, r1
 801e4fa:	0410      	lsls	r0, r2, #16
 801e4fc:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 801e500:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801e504:	4310      	orrs	r0, r2
 801e506:	9a08      	ldr	r2, [sp, #32]
 801e508:	9908      	ldr	r1, [sp, #32]
 801e50a:	0412      	lsls	r2, r2, #16
 801e50c:	fb03 e000 	mla	r0, r3, r0, lr
 801e510:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 801e514:	f421 6efc 	bic.w	lr, r1, #2016	@ 0x7e0
 801e518:	ea42 020e 	orr.w	r2, r2, lr
 801e51c:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 801e520:	fb03 0302 	mla	r3, r3, r2, r0
 801e524:	0d5a      	lsrs	r2, r3, #21
 801e526:	095b      	lsrs	r3, r3, #5
 801e528:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801e52c:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801e530:	4313      	orrs	r3, r2
 801e532:	f8a9 3000 	strh.w	r3, [r9]
 801e536:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 801e538:	441c      	add	r4, r3
 801e53a:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801e53c:	f109 0902 	add.w	r9, r9, #2
 801e540:	441e      	add	r6, r3
 801e542:	f10a 3aff 	add.w	sl, sl, #4294967295
 801e546:	e784      	b.n	801e452 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801e548:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 801e54a:	441c      	add	r4, r3
 801e54c:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801e54e:	3d01      	subs	r5, #1
 801e550:	441e      	add	r6, r3
 801e552:	3702      	adds	r7, #2
 801e554:	e761      	b.n	801e41a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801e556:	d01d      	beq.n	801e594 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 801e558:	981b      	ldr	r0, [sp, #108]	@ 0x6c
 801e55a:	1e6b      	subs	r3, r5, #1
 801e55c:	fb00 4003 	mla	r0, r0, r3, r4
 801e560:	1400      	asrs	r0, r0, #16
 801e562:	f53f af74 	bmi.w	801e44e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801e566:	3901      	subs	r1, #1
 801e568:	4288      	cmp	r0, r1
 801e56a:	f6bf af70 	bge.w	801e44e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801e56e:	991c      	ldr	r1, [sp, #112]	@ 0x70
 801e570:	fb01 6303 	mla	r3, r1, r3, r6
 801e574:	141b      	asrs	r3, r3, #16
 801e576:	f53f af6a 	bmi.w	801e44e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801e57a:	3a01      	subs	r2, #1
 801e57c:	4293      	cmp	r3, r2
 801e57e:	f6bf af66 	bge.w	801e44e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801e582:	46a9      	mov	r9, r5
 801e584:	46ba      	mov	sl, r7
 801e586:	f1b9 0f00 	cmp.w	r9, #0
 801e58a:	dc5a      	bgt.n	801e642 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x270>
 801e58c:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 801e590:	eb07 0745 	add.w	r7, r7, r5, lsl #1
 801e594:	9b07      	ldr	r3, [sp, #28]
 801e596:	2b00      	cmp	r3, #0
 801e598:	f340 80b8 	ble.w	801e70c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 801e59c:	ee30 0a04 	vadd.f32	s0, s0, s8
 801e5a0:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801e5a4:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801e5a8:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801e5aa:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801e5ae:	ee31 1a05 	vadd.f32	s2, s2, s10
 801e5b2:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801e5b6:	eef0 6a62 	vmov.f32	s13, s5
 801e5ba:	ee61 7a27 	vmul.f32	s15, s2, s15
 801e5be:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801e5c2:	ee77 2a62 	vsub.f32	s5, s14, s5
 801e5c6:	ee16 4a90 	vmov	r4, s13
 801e5ca:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801e5ce:	eef0 6a43 	vmov.f32	s13, s6
 801e5d2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801e5d6:	ee12 2a90 	vmov	r2, s5
 801e5da:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801e5de:	fb92 f3f3 	sdiv	r3, r2, r3
 801e5e2:	ee13 2a10 	vmov	r2, s6
 801e5e6:	931b      	str	r3, [sp, #108]	@ 0x6c
 801e5e8:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801e5ea:	fb92 f3f3 	sdiv	r3, r2, r3
 801e5ee:	931c      	str	r3, [sp, #112]	@ 0x70
 801e5f0:	9b07      	ldr	r3, [sp, #28]
 801e5f2:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 801e5f4:	3b01      	subs	r3, #1
 801e5f6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801e5fa:	9307      	str	r3, [sp, #28]
 801e5fc:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801e5fe:	ee16 6a90 	vmov	r6, s13
 801e602:	bf14      	ite	ne
 801e604:	461d      	movne	r5, r3
 801e606:	4615      	moveq	r5, r2
 801e608:	eeb0 3a67 	vmov.f32	s6, s15
 801e60c:	eef0 2a47 	vmov.f32	s5, s14
 801e610:	e6f4      	b.n	801e3fc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 801e612:	f111 0b01 	adds.w	fp, r1, #1
 801e616:	d48e      	bmi.n	801e536 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801e618:	45de      	cmp	lr, fp
 801e61a:	db8c      	blt.n	801e536 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801e61c:	f110 0b01 	adds.w	fp, r0, #1
 801e620:	d489      	bmi.n	801e536 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801e622:	455b      	cmp	r3, fp
 801e624:	db87      	blt.n	801e536 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801e626:	b21b      	sxth	r3, r3
 801e628:	e9cd 1001 	strd	r1, r0, [sp, #4]
 801e62c:	e9cd 2c03 	strd	r2, ip, [sp, #12]
 801e630:	9300      	str	r3, [sp, #0]
 801e632:	4642      	mov	r2, r8
 801e634:	fa0f f38e 	sxth.w	r3, lr
 801e638:	4649      	mov	r1, r9
 801e63a:	980d      	ldr	r0, [sp, #52]	@ 0x34
 801e63c:	f7ff fe4d 	bl	801e2da <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>
 801e640:	e779      	b.n	801e536 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801e642:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801e644:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 801e648:	1420      	asrs	r0, r4, #16
 801e64a:	1431      	asrs	r1, r6, #16
 801e64c:	fb03 0101 	mla	r1, r3, r1, r0
 801e650:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 801e654:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 801e658:	f838 c011 	ldrh.w	ip, [r8, r1, lsl #1]
 801e65c:	8841      	ldrh	r1, [r0, #2]
 801e65e:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801e662:	f1be 0f00 	cmp.w	lr, #0
 801e666:	d00b      	beq.n	801e680 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 801e668:	f103 4300 	add.w	r3, r3, #2147483648	@ 0x80000000
 801e66c:	3b01      	subs	r3, #1
 801e66e:	005b      	lsls	r3, r3, #1
 801e670:	3302      	adds	r3, #2
 801e672:	eb00 0b03 	add.w	fp, r0, r3
 801e676:	5ac3      	ldrh	r3, [r0, r3]
 801e678:	930a      	str	r3, [sp, #40]	@ 0x28
 801e67a:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 801e67e:	930b      	str	r3, [sp, #44]	@ 0x2c
 801e680:	ea4f 400c 	mov.w	r0, ip, lsl #16
 801e684:	fb12 f30e 	smulbb	r3, r2, lr
 801e688:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 801e68c:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801e690:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 801e694:	10db      	asrs	r3, r3, #3
 801e696:	ea40 000c 	orr.w	r0, r0, ip
 801e69a:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801e69e:	f1ce 0c10 	rsb	ip, lr, #16
 801e6a2:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 801e6a6:	ebac 0c02 	sub.w	ip, ip, r2
 801e6aa:	ea4b 0101 	orr.w	r1, fp, r1
 801e6ae:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801e6b2:	4351      	muls	r1, r2
 801e6b4:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 801e6b6:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 801e6ba:	fb0c 1c00 	mla	ip, ip, r0, r1
 801e6be:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 801e6c2:	f422 60fc 	bic.w	r0, r2, #2016	@ 0x7e0
 801e6c6:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 801e6c8:	990a      	ldr	r1, [sp, #40]	@ 0x28
 801e6ca:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801e6ce:	0412      	lsls	r2, r2, #16
 801e6d0:	ea4b 0000 	orr.w	r0, fp, r0
 801e6d4:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 801e6d8:	f421 6bfc 	bic.w	fp, r1, #2016	@ 0x7e0
 801e6dc:	fb03 c000 	mla	r0, r3, r0, ip
 801e6e0:	ea42 0b0b 	orr.w	fp, r2, fp
 801e6e4:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 801e6e8:	fb03 000b 	mla	r0, r3, fp, r0
 801e6ec:	0d43      	lsrs	r3, r0, #21
 801e6ee:	0940      	lsrs	r0, r0, #5
 801e6f0:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801e6f4:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801e6f8:	4318      	orrs	r0, r3
 801e6fa:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 801e6fc:	f82a 0b02 	strh.w	r0, [sl], #2
 801e700:	441c      	add	r4, r3
 801e702:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801e704:	f109 39ff 	add.w	r9, r9, #4294967295
 801e708:	441e      	add	r6, r3
 801e70a:	e73c      	b.n	801e586 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
 801e70c:	b00f      	add	sp, #60	@ 0x3c
 801e70e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801e712 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>:
 801e712:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e716:	b085      	sub	sp, #20
 801e718:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	@ 0x3c
 801e71c:	9102      	str	r1, [sp, #8]
 801e71e:	2c00      	cmp	r4, #0
 801e720:	fb04 7103 	mla	r1, r4, r3, r7
 801e724:	f9bd e038 	ldrsh.w	lr, [sp, #56]	@ 0x38
 801e728:	f89d 6044 	ldrb.w	r6, [sp, #68]	@ 0x44
 801e72c:	f89d 0048 	ldrb.w	r0, [sp, #72]	@ 0x48
 801e730:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 801e734:	f2c0 811b 	blt.w	801e96e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 801e738:	45a6      	cmp	lr, r4
 801e73a:	f340 8118 	ble.w	801e96e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 801e73e:	2f00      	cmp	r7, #0
 801e740:	f2c0 8113 	blt.w	801e96a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 801e744:	42bb      	cmp	r3, r7
 801e746:	f340 8110 	ble.w	801e96a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 801e74a:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 801e74e:	1c7a      	adds	r2, r7, #1
 801e750:	f100 8110 	bmi.w	801e974 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 801e754:	4293      	cmp	r3, r2
 801e756:	f340 810d 	ble.w	801e974 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 801e75a:	2e00      	cmp	r6, #0
 801e75c:	f000 810c 	beq.w	801e978 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x266>
 801e760:	f8dc 1004 	ldr.w	r1, [ip, #4]
 801e764:	3401      	adds	r4, #1
 801e766:	f100 810b 	bmi.w	801e980 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 801e76a:	45a6      	cmp	lr, r4
 801e76c:	f340 8108 	ble.w	801e980 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 801e770:	2800      	cmp	r0, #0
 801e772:	f000 8108 	beq.w	801e986 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x274>
 801e776:	2f00      	cmp	r7, #0
 801e778:	f2c0 8100 	blt.w	801e97c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 801e77c:	42bb      	cmp	r3, r7
 801e77e:	f340 80fd 	ble.w	801e97c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 801e782:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 801e786:	3701      	adds	r7, #1
 801e788:	f100 8100 	bmi.w	801e98c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 801e78c:	42bb      	cmp	r3, r7
 801e78e:	f340 80fd 	ble.w	801e98c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 801e792:	2e00      	cmp	r6, #0
 801e794:	f000 80fc 	beq.w	801e990 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27e>
 801e798:	3301      	adds	r3, #1
 801e79a:	f85c 2023 	ldr.w	r2, [ip, r3, lsl #2]
 801e79e:	b2b6      	uxth	r6, r6
 801e7a0:	b280      	uxth	r0, r0
 801e7a2:	fb00 fe06 	mul.w	lr, r0, r6
 801e7a6:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 801e7aa:	0136      	lsls	r6, r6, #4
 801e7ac:	eba6 070e 	sub.w	r7, r6, lr
 801e7b0:	b280      	uxth	r0, r0
 801e7b2:	f5c6 7380 	rsb	r3, r6, #256	@ 0x100
 801e7b6:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 801e7ba:	b2bf      	uxth	r7, r7
 801e7bc:	1a1b      	subs	r3, r3, r0
 801e7be:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 801e7c2:	b29b      	uxth	r3, r3
 801e7c4:	fb0a f607 	mul.w	r6, sl, r7
 801e7c8:	ea4f 6914 	mov.w	r9, r4, lsr #24
 801e7cc:	fb0b 6603 	mla	r6, fp, r3, r6
 801e7d0:	ea4f 6812 	mov.w	r8, r2, lsr #24
 801e7d4:	fb00 6609 	mla	r6, r0, r9, r6
 801e7d8:	fb0e 6608 	mla	r6, lr, r8, r6
 801e7dc:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801e7e0:	9600      	str	r6, [sp, #0]
 801e7e2:	2e00      	cmp	r6, #0
 801e7e4:	f000 80be 	beq.w	801e964 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x252>
 801e7e8:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 801e7ec:	fb0b fc0c 	mul.w	ip, fp, ip
 801e7f0:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
 801e7f4:	fb0b f505 	mul.w	r5, fp, r5
 801e7f8:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 801e7fc:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
 801e800:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801e804:	44dc      	add	ip, fp
 801e806:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e80a:	9501      	str	r5, [sp, #4]
 801e80c:	f00c 15ff 	and.w	r5, ip, #16711935	@ 0xff00ff
 801e810:	9503      	str	r5, [sp, #12]
 801e812:	9d01      	ldr	r5, [sp, #4]
 801e814:	9e02      	ldr	r6, [sp, #8]
 801e816:	f505 7c80 	add.w	ip, r5, #256	@ 0x100
 801e81a:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801e81e:	f001 1cff 	and.w	ip, r1, #16711935	@ 0xff00ff
 801e822:	fb0a fc0c 	mul.w	ip, sl, ip
 801e826:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 801e82a:	ea4f 251c 	mov.w	r5, ip, lsr #8
 801e82e:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 801e832:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801e836:	4465      	add	r5, ip
 801e838:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 801e83c:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
 801e840:	fb09 fc0c 	mul.w	ip, r9, ip
 801e844:	fb09 f904 	mul.w	r9, r9, r4
 801e848:	f509 7480 	add.w	r4, r9, #256	@ 0x100
 801e84c:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 801e850:	f002 14ff 	and.w	r4, r2, #16711935	@ 0xff00ff
 801e854:	fb08 f404 	mul.w	r4, r8, r4
 801e858:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 801e85c:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 801e860:	fb08 f802 	mul.w	r8, r8, r2
 801e864:	fb0a fa01 	mul.w	sl, sl, r1
 801e868:	0a22      	lsrs	r2, r4, #8
 801e86a:	f50a 7180 	add.w	r1, sl, #256	@ 0x100
 801e86e:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 801e872:	f104 1401 	add.w	r4, r4, #65537	@ 0x10001
 801e876:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 801e87a:	4414      	add	r4, r2
 801e87c:	ea4f 211c 	mov.w	r1, ip, lsr #8
 801e880:	f508 7280 	add.w	r2, r8, #256	@ 0x100
 801e884:	0a2d      	lsrs	r5, r5, #8
 801e886:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 801e88a:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 801e88e:	9a03      	ldr	r2, [sp, #12]
 801e890:	8836      	ldrh	r6, [r6, #0]
 801e892:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 801e896:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801e89a:	437d      	muls	r5, r7
 801e89c:	4461      	add	r1, ip
 801e89e:	0a24      	lsrs	r4, r4, #8
 801e8a0:	fb02 5503 	mla	r5, r2, r3, r5
 801e8a4:	0a09      	lsrs	r1, r1, #8
 801e8a6:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
 801e8aa:	fb04 540e 	mla	r4, r4, lr, r5
 801e8ae:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 801e8b2:	fb01 4100 	mla	r1, r1, r0, r4
 801e8b6:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801e8ba:	0a09      	lsrs	r1, r1, #8
 801e8bc:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801e8c0:	f001 14ff 	and.w	r4, r1, #16711935	@ 0xff00ff
 801e8c4:	fb07 f70a 	mul.w	r7, r7, sl
 801e8c8:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801e8cc:	f40b 417f 	and.w	r1, fp, #65280	@ 0xff00
 801e8d0:	fb03 7101 	mla	r1, r3, r1, r7
 801e8d4:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801e8d8:	f408 487f 	and.w	r8, r8, #65280	@ 0xff00
 801e8dc:	fb0e 1e08 	mla	lr, lr, r8, r1
 801e8e0:	f409 417f 	and.w	r1, r9, #65280	@ 0xff00
 801e8e4:	fb00 e101 	mla	r1, r0, r1, lr
 801e8e8:	f89d 004c 	ldrb.w	r0, [sp, #76]	@ 0x4c
 801e8ec:	9a00      	ldr	r2, [sp, #0]
 801e8ee:	b287      	uxth	r7, r0
 801e8f0:	437a      	muls	r2, r7
 801e8f2:	0a09      	lsrs	r1, r1, #8
 801e8f4:	1c53      	adds	r3, r2, #1
 801e8f6:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 801e8fa:	4321      	orrs	r1, r4
 801e8fc:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801e900:	1235      	asrs	r5, r6, #8
 801e902:	0c0a      	lsrs	r2, r1, #16
 801e904:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 801e908:	b2db      	uxtb	r3, r3
 801e90a:	fb12 f207 	smulbb	r2, r2, r7
 801e90e:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 801e912:	fb05 2503 	mla	r5, r5, r3, r2
 801e916:	f3c1 2407 	ubfx	r4, r1, #8, #8
 801e91a:	10f2      	asrs	r2, r6, #3
 801e91c:	b2c8      	uxtb	r0, r1
 801e91e:	00f6      	lsls	r6, r6, #3
 801e920:	fb14 f407 	smulbb	r4, r4, r7
 801e924:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 801e928:	b2f6      	uxtb	r6, r6
 801e92a:	fb10 f007 	smulbb	r0, r0, r7
 801e92e:	fb02 4203 	mla	r2, r2, r3, r4
 801e932:	b2ad      	uxth	r5, r5
 801e934:	fb06 0303 	mla	r3, r6, r3, r0
 801e938:	b299      	uxth	r1, r3
 801e93a:	b294      	uxth	r4, r2
 801e93c:	1c6b      	adds	r3, r5, #1
 801e93e:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801e942:	1c62      	adds	r2, r4, #1
 801e944:	1c4b      	adds	r3, r1, #1
 801e946:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801e94a:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 801e94e:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 801e952:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801e956:	0952      	lsrs	r2, r2, #5
 801e958:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801e95c:	432b      	orrs	r3, r5
 801e95e:	4313      	orrs	r3, r2
 801e960:	9a02      	ldr	r2, [sp, #8]
 801e962:	8013      	strh	r3, [r2, #0]
 801e964:	b005      	add	sp, #20
 801e966:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e96a:	2500      	movs	r5, #0
 801e96c:	e6ef      	b.n	801e74e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x3c>
 801e96e:	2100      	movs	r1, #0
 801e970:	460d      	mov	r5, r1
 801e972:	e6f7      	b.n	801e764 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 801e974:	2100      	movs	r1, #0
 801e976:	e6f5      	b.n	801e764 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 801e978:	4631      	mov	r1, r6
 801e97a:	e6f3      	b.n	801e764 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 801e97c:	2400      	movs	r4, #0
 801e97e:	e702      	b.n	801e786 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x74>
 801e980:	2200      	movs	r2, #0
 801e982:	4614      	mov	r4, r2
 801e984:	e70b      	b.n	801e79e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 801e986:	4602      	mov	r2, r0
 801e988:	4604      	mov	r4, r0
 801e98a:	e708      	b.n	801e79e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 801e98c:	2200      	movs	r2, #0
 801e98e:	e706      	b.n	801e79e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 801e990:	4632      	mov	r2, r6
 801e992:	e704      	b.n	801e79e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>

0801e994 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801e994:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e998:	b09d      	sub	sp, #116	@ 0x74
 801e99a:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	@ 0x9c
 801e99e:	9219      	str	r2, [sp, #100]	@ 0x64
 801e9a0:	9307      	str	r3, [sp, #28]
 801e9a2:	9a2b      	ldr	r2, [sp, #172]	@ 0xac
 801e9a4:	f89d 30bc 	ldrb.w	r3, [sp, #188]	@ 0xbc
 801e9a8:	931a      	str	r3, [sp, #104]	@ 0x68
 801e9aa:	9117      	str	r1, [sp, #92]	@ 0x5c
 801e9ac:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	@ 0xb0
 801e9b0:	901b      	str	r0, [sp, #108]	@ 0x6c
 801e9b2:	6850      	ldr	r0, [r2, #4]
 801e9b4:	6812      	ldr	r2, [r2, #0]
 801e9b6:	fb00 1303 	mla	r3, r0, r3, r1
 801e9ba:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801e9be:	930a      	str	r3, [sp, #40]	@ 0x28
 801e9c0:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 801e9c2:	681b      	ldr	r3, [r3, #0]
 801e9c4:	9310      	str	r3, [sp, #64]	@ 0x40
 801e9c6:	f8bd 3068 	ldrh.w	r3, [sp, #104]	@ 0x68
 801e9ca:	930b      	str	r3, [sp, #44]	@ 0x2c
 801e9cc:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 801e9ce:	2b00      	cmp	r3, #0
 801e9d0:	dc03      	bgt.n	801e9da <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 801e9d2:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 801e9d4:	2b00      	cmp	r3, #0
 801e9d6:	f340 8375 	ble.w	801f0c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 801e9da:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 801e9dc:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801e9e0:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801e9e4:	1e48      	subs	r0, r1, #1
 801e9e6:	1e57      	subs	r7, r2, #1
 801e9e8:	9b07      	ldr	r3, [sp, #28]
 801e9ea:	2b00      	cmp	r3, #0
 801e9ec:	f340 818e 	ble.w	801ed0c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 801e9f0:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801e9f4:	ea4f 4326 	mov.w	r3, r6, asr #16
 801e9f8:	d406      	bmi.n	801ea08 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801e9fa:	4584      	cmp	ip, r0
 801e9fc:	da04      	bge.n	801ea08 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801e9fe:	2b00      	cmp	r3, #0
 801ea00:	db02      	blt.n	801ea08 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801ea02:	42bb      	cmp	r3, r7
 801ea04:	f2c0 8183 	blt.w	801ed0e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 801ea08:	f11c 0c01 	adds.w	ip, ip, #1
 801ea0c:	f100 8173 	bmi.w	801ecf6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801ea10:	4561      	cmp	r1, ip
 801ea12:	f2c0 8170 	blt.w	801ecf6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801ea16:	3301      	adds	r3, #1
 801ea18:	f100 816d 	bmi.w	801ecf6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801ea1c:	429a      	cmp	r2, r3
 801ea1e:	f2c0 816a 	blt.w	801ecf6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801ea22:	9b07      	ldr	r3, [sp, #28]
 801ea24:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
 801ea26:	9318      	str	r3, [sp, #96]	@ 0x60
 801ea28:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801ea2a:	2b00      	cmp	r3, #0
 801ea2c:	f340 818c 	ble.w	801ed48 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b4>
 801ea30:	9a2e      	ldr	r2, [sp, #184]	@ 0xb8
 801ea32:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 801ea34:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801ea38:	689b      	ldr	r3, [r3, #8]
 801ea3a:	1422      	asrs	r2, r4, #16
 801ea3c:	ea4f 4c26 	mov.w	ip, r6, asr #16
 801ea40:	f3c4 3003 	ubfx	r0, r4, #12, #4
 801ea44:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801ea48:	f100 81cd 	bmi.w	801ede6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801ea4c:	f103 38ff 	add.w	r8, r3, #4294967295
 801ea50:	4542      	cmp	r2, r8
 801ea52:	f280 81c8 	bge.w	801ede6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801ea56:	f1bc 0f00 	cmp.w	ip, #0
 801ea5a:	f2c0 81c4 	blt.w	801ede6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801ea5e:	f10e 38ff 	add.w	r8, lr, #4294967295
 801ea62:	45c4      	cmp	ip, r8
 801ea64:	f280 81bf 	bge.w	801ede6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801ea68:	b21b      	sxth	r3, r3
 801ea6a:	fb0c 2203 	mla	r2, ip, r3, r2
 801ea6e:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 801ea70:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 801ea74:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 801ea78:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 801ea7c:	2800      	cmp	r0, #0
 801ea7e:	f000 81a9 	beq.w	801edd4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x440>
 801ea82:	f8d8 5004 	ldr.w	r5, [r8, #4]
 801ea86:	950c      	str	r5, [sp, #48]	@ 0x30
 801ea88:	0e2d      	lsrs	r5, r5, #24
 801ea8a:	9513      	str	r5, [sp, #76]	@ 0x4c
 801ea8c:	b181      	cbz	r1, 801eab0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801ea8e:	f103 4380 	add.w	r3, r3, #1073741824	@ 0x40000000
 801ea92:	3b01      	subs	r3, #1
 801ea94:	009b      	lsls	r3, r3, #2
 801ea96:	3304      	adds	r3, #4
 801ea98:	eb08 0c03 	add.w	ip, r8, r3
 801ea9c:	f858 3003 	ldr.w	r3, [r8, r3]
 801eaa0:	9308      	str	r3, [sp, #32]
 801eaa2:	0e1b      	lsrs	r3, r3, #24
 801eaa4:	9311      	str	r3, [sp, #68]	@ 0x44
 801eaa6:	f8dc 3004 	ldr.w	r3, [ip, #4]
 801eaaa:	930d      	str	r3, [sp, #52]	@ 0x34
 801eaac:	0e1b      	lsrs	r3, r3, #24
 801eaae:	9314      	str	r3, [sp, #80]	@ 0x50
 801eab0:	b280      	uxth	r0, r0
 801eab2:	b289      	uxth	r1, r1
 801eab4:	fb00 f901 	mul.w	r9, r0, r1
 801eab8:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801eabc:	0100      	lsls	r0, r0, #4
 801eabe:	eba0 0809 	sub.w	r8, r0, r9
 801eac2:	b289      	uxth	r1, r1
 801eac4:	f5c0 7380 	rsb	r3, r0, #256	@ 0x100
 801eac8:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 801eaca:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801eacc:	fa1f f888 	uxth.w	r8, r8
 801ead0:	1a5b      	subs	r3, r3, r1
 801ead2:	b29b      	uxth	r3, r3
 801ead4:	fb08 f000 	mul.w	r0, r8, r0
 801ead8:	fb03 000e 	mla	r0, r3, lr, r0
 801eadc:	fb01 0005 	mla	r0, r1, r5, r0
 801eae0:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 801eae2:	fb09 0005 	mla	r0, r9, r5, r0
 801eae6:	f3c0 2007 	ubfx	r0, r0, #8, #8
 801eaea:	2800      	cmp	r0, #0
 801eaec:	f000 80fa 	beq.w	801ece4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801eaf0:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
 801eaf4:	d01b      	beq.n	801eb2e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 801eaf6:	f002 1aff 	and.w	sl, r2, #16711935	@ 0xff00ff
 801eafa:	fb0e fa0a 	mul.w	sl, lr, sl
 801eafe:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 801eb02:	fb0e fe02 	mul.w	lr, lr, r2
 801eb06:	ea4f 221a 	mov.w	r2, sl, lsr #8
 801eb0a:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 801eb0e:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 801eb12:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
 801eb16:	4452      	add	r2, sl
 801eb18:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801eb1c:	0a12      	lsrs	r2, r2, #8
 801eb1e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801eb22:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 801eb26:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 801eb2a:	ea42 020c 	orr.w	r2, r2, ip
 801eb2e:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 801eb30:	2dff      	cmp	r5, #255	@ 0xff
 801eb32:	d021      	beq.n	801eb78 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 801eb34:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 801eb36:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 801eb3a:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 801eb3c:	fb05 fb0b 	mul.w	fp, r5, fp
 801eb40:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 801eb42:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 801eb46:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 801eb48:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801eb4c:	fb05 fa0a 	mul.w	sl, r5, sl
 801eb50:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801eb54:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801eb58:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801eb5c:	44de      	add	lr, fp
 801eb5e:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801eb62:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801eb66:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801eb6a:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801eb6e:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801eb72:	ea4e 050a 	orr.w	r5, lr, sl
 801eb76:	950c      	str	r5, [sp, #48]	@ 0x30
 801eb78:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801eb7a:	2dff      	cmp	r5, #255	@ 0xff
 801eb7c:	d021      	beq.n	801ebc2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22e>
 801eb7e:	9d08      	ldr	r5, [sp, #32]
 801eb80:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 801eb84:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801eb86:	fb05 fb0b 	mul.w	fp, r5, fp
 801eb8a:	9d08      	ldr	r5, [sp, #32]
 801eb8c:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 801eb90:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801eb92:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801eb96:	fb05 fa0a 	mul.w	sl, r5, sl
 801eb9a:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801eb9e:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801eba2:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801eba6:	44de      	add	lr, fp
 801eba8:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801ebac:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801ebb0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801ebb4:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801ebb8:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801ebbc:	ea4e 050a 	orr.w	r5, lr, sl
 801ebc0:	9508      	str	r5, [sp, #32]
 801ebc2:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 801ebc4:	2dff      	cmp	r5, #255	@ 0xff
 801ebc6:	d021      	beq.n	801ec0c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x278>
 801ebc8:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 801ebca:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 801ebce:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 801ebd0:	fb05 fb0b 	mul.w	fp, r5, fp
 801ebd4:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 801ebd6:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 801ebda:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 801ebdc:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801ebe0:	fb05 fa0a 	mul.w	sl, r5, sl
 801ebe4:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801ebe8:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801ebec:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801ebf0:	44de      	add	lr, fp
 801ebf2:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801ebf6:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801ebfa:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801ebfe:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801ec02:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801ec06:	ea4e 050a 	orr.w	r5, lr, sl
 801ec0a:	950d      	str	r5, [sp, #52]	@ 0x34
 801ec0c:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 801ec0e:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 801ec12:	9d08      	ldr	r5, [sp, #32]
 801ec14:	f002 1eff 	and.w	lr, r2, #16711935	@ 0xff00ff
 801ec18:	fb08 fc0c 	mul.w	ip, r8, ip
 801ec1c:	fb03 cc0e 	mla	ip, r3, lr, ip
 801ec20:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
 801ec24:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 801ec26:	fb01 cc0e 	mla	ip, r1, lr, ip
 801ec2a:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
 801ec2e:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 801ec30:	fb09 cc0e 	mla	ip, r9, lr, ip
 801ec34:	f405 4e7f 	and.w	lr, r5, #65280	@ 0xff00
 801ec38:	fb08 f80e 	mul.w	r8, r8, lr
 801ec3c:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 801ec40:	fb03 8202 	mla	r2, r3, r2, r8
 801ec44:	9b08      	ldr	r3, [sp, #32]
 801ec46:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 801ec48:	f403 4a7f 	and.w	sl, r3, #65280	@ 0xff00
 801ec4c:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801ec4e:	fb01 220a 	mla	r2, r1, sl, r2
 801ec52:	f403 417f 	and.w	r1, r3, #65280	@ 0xff00
 801ec56:	fb09 2901 	mla	r9, r9, r1, r2
 801ec5a:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 801ec5c:	883b      	ldrh	r3, [r7, #0]
 801ec5e:	4342      	muls	r2, r0
 801ec60:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801ec64:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801ec68:	1c50      	adds	r0, r2, #1
 801ec6a:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801ec6e:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
 801ec72:	ea4c 0c09 	orr.w	ip, ip, r9
 801ec76:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 801ec7a:	1219      	asrs	r1, r3, #8
 801ec7c:	ea4f 421c 	mov.w	r2, ip, lsr #16
 801ec80:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 801ec84:	b2c0      	uxtb	r0, r0
 801ec86:	fb12 f205 	smulbb	r2, r2, r5
 801ec8a:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 801ec8e:	fb01 2100 	mla	r1, r1, r0, r2
 801ec92:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 801ec96:	10da      	asrs	r2, r3, #3
 801ec98:	fa5f fc8c 	uxtb.w	ip, ip
 801ec9c:	00db      	lsls	r3, r3, #3
 801ec9e:	fb1c fc05 	smulbb	ip, ip, r5
 801eca2:	b2db      	uxtb	r3, r3
 801eca4:	b289      	uxth	r1, r1
 801eca6:	fb03 c300 	mla	r3, r3, r0, ip
 801ecaa:	fa1f fc83 	uxth.w	ip, r3
 801ecae:	1c4b      	adds	r3, r1, #1
 801ecb0:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801ecb4:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 801ecb8:	fb1e fe05 	smulbb	lr, lr, r5
 801ecbc:	f10c 0301 	add.w	r3, ip, #1
 801ecc0:	fb02 e200 	mla	r2, r2, r0, lr
 801ecc4:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 801ecc8:	b292      	uxth	r2, r2
 801ecca:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
 801ecce:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801ecd2:	430b      	orrs	r3, r1
 801ecd4:	1c51      	adds	r1, r2, #1
 801ecd6:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801ecda:	0952      	lsrs	r2, r2, #5
 801ecdc:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801ece0:	4313      	orrs	r3, r2
 801ece2:	803b      	strh	r3, [r7, #0]
 801ece4:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 801ece6:	441c      	add	r4, r3
 801ece8:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 801ecea:	441e      	add	r6, r3
 801ecec:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801ecee:	3b01      	subs	r3, #1
 801ecf0:	3702      	adds	r7, #2
 801ecf2:	9318      	str	r3, [sp, #96]	@ 0x60
 801ecf4:	e698      	b.n	801ea28 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801ecf6:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 801ecf8:	441c      	add	r4, r3
 801ecfa:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 801ecfc:	441e      	add	r6, r3
 801ecfe:	9b07      	ldr	r3, [sp, #28]
 801ed00:	3b01      	subs	r3, #1
 801ed02:	9307      	str	r3, [sp, #28]
 801ed04:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801ed06:	3302      	adds	r3, #2
 801ed08:	930a      	str	r3, [sp, #40]	@ 0x28
 801ed0a:	e66d      	b.n	801e9e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 801ed0c:	d023      	beq.n	801ed56 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 801ed0e:	9b07      	ldr	r3, [sp, #28]
 801ed10:	9829      	ldr	r0, [sp, #164]	@ 0xa4
 801ed12:	3b01      	subs	r3, #1
 801ed14:	fb00 4003 	mla	r0, r0, r3, r4
 801ed18:	1400      	asrs	r0, r0, #16
 801ed1a:	f53f ae82 	bmi.w	801ea22 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801ed1e:	3901      	subs	r1, #1
 801ed20:	4288      	cmp	r0, r1
 801ed22:	f6bf ae7e 	bge.w	801ea22 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801ed26:	992a      	ldr	r1, [sp, #168]	@ 0xa8
 801ed28:	fb01 6303 	mla	r3, r1, r3, r6
 801ed2c:	141b      	asrs	r3, r3, #16
 801ed2e:	f53f ae78 	bmi.w	801ea22 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801ed32:	3a01      	subs	r2, #1
 801ed34:	4293      	cmp	r3, r2
 801ed36:	f6bf ae74 	bge.w	801ea22 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801ed3a:	f8dd b01c 	ldr.w	fp, [sp, #28]
 801ed3e:	f8dd 9028 	ldr.w	r9, [sp, #40]	@ 0x28
 801ed42:	f1bb 0f00 	cmp.w	fp, #0
 801ed46:	dc6c      	bgt.n	801ee22 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 801ed48:	9b07      	ldr	r3, [sp, #28]
 801ed4a:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801ed4e:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801ed50:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 801ed54:	930a      	str	r3, [sp, #40]	@ 0x28
 801ed56:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 801ed58:	2b00      	cmp	r3, #0
 801ed5a:	f340 81b3 	ble.w	801f0c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 801ed5e:	ee30 0a04 	vadd.f32	s0, s0, s8
 801ed62:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801ed66:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801ed6a:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801ed6c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801ed70:	ee31 1a05 	vadd.f32	s2, s2, s10
 801ed74:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801ed78:	eef0 6a62 	vmov.f32	s13, s5
 801ed7c:	ee61 7a27 	vmul.f32	s15, s2, s15
 801ed80:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801ed84:	ee77 2a62 	vsub.f32	s5, s14, s5
 801ed88:	ee16 4a90 	vmov	r4, s13
 801ed8c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801ed90:	eef0 6a43 	vmov.f32	s13, s6
 801ed94:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801ed98:	ee12 2a90 	vmov	r2, s5
 801ed9c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801eda0:	fb92 f3f3 	sdiv	r3, r2, r3
 801eda4:	ee13 2a10 	vmov	r2, s6
 801eda8:	9329      	str	r3, [sp, #164]	@ 0xa4
 801edaa:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801edac:	fb92 f3f3 	sdiv	r3, r2, r3
 801edb0:	932a      	str	r3, [sp, #168]	@ 0xa8
 801edb2:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 801edb4:	9a19      	ldr	r2, [sp, #100]	@ 0x64
 801edb6:	3b01      	subs	r3, #1
 801edb8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801edbc:	9317      	str	r3, [sp, #92]	@ 0x5c
 801edbe:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801edc0:	bf08      	it	eq
 801edc2:	4613      	moveq	r3, r2
 801edc4:	ee16 6a90 	vmov	r6, s13
 801edc8:	9307      	str	r3, [sp, #28]
 801edca:	eeb0 3a67 	vmov.f32	s6, s15
 801edce:	eef0 2a47 	vmov.f32	s5, s14
 801edd2:	e5fb      	b.n	801e9cc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801edd4:	2900      	cmp	r1, #0
 801edd6:	f43f ae6b 	beq.w	801eab0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801edda:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 801edde:	9308      	str	r3, [sp, #32]
 801ede0:	0e1b      	lsrs	r3, r3, #24
 801ede2:	9311      	str	r3, [sp, #68]	@ 0x44
 801ede4:	e664      	b.n	801eab0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801ede6:	f112 0801 	adds.w	r8, r2, #1
 801edea:	f53f af7b 	bmi.w	801ece4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801edee:	4543      	cmp	r3, r8
 801edf0:	f6ff af78 	blt.w	801ece4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801edf4:	f11c 0801 	adds.w	r8, ip, #1
 801edf8:	f53f af74 	bmi.w	801ece4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801edfc:	45c6      	cmp	lr, r8
 801edfe:	f6ff af71 	blt.w	801ece4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801ee02:	9d1a      	ldr	r5, [sp, #104]	@ 0x68
 801ee04:	9201      	str	r2, [sp, #4]
 801ee06:	fa0f f28e 	sxth.w	r2, lr
 801ee0a:	e9cd 1504 	strd	r1, r5, [sp, #16]
 801ee0e:	e9cd c002 	strd	ip, r0, [sp, #8]
 801ee12:	9200      	str	r2, [sp, #0]
 801ee14:	b21b      	sxth	r3, r3
 801ee16:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 801ee18:	981b      	ldr	r0, [sp, #108]	@ 0x6c
 801ee1a:	4639      	mov	r1, r7
 801ee1c:	f7ff fc79 	bl	801e712 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>
 801ee20:	e760      	b.n	801ece4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801ee22:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 801ee24:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 801ee26:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801ee2a:	1427      	asrs	r7, r4, #16
 801ee2c:	1433      	asrs	r3, r6, #16
 801ee2e:	fb01 7303 	mla	r3, r1, r3, r7
 801ee32:	eb05 0783 	add.w	r7, r5, r3, lsl #2
 801ee36:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 801ee3a:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801ee3e:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801ee42:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801ee46:	2a00      	cmp	r2, #0
 801ee48:	f000 8133 	beq.w	801f0b2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x71e>
 801ee4c:	687d      	ldr	r5, [r7, #4]
 801ee4e:	950e      	str	r5, [sp, #56]	@ 0x38
 801ee50:	0e2d      	lsrs	r5, r5, #24
 801ee52:	9515      	str	r5, [sp, #84]	@ 0x54
 801ee54:	b178      	cbz	r0, 801ee76 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 801ee56:	f101 4180 	add.w	r1, r1, #1073741824	@ 0x40000000
 801ee5a:	3901      	subs	r1, #1
 801ee5c:	0089      	lsls	r1, r1, #2
 801ee5e:	3104      	adds	r1, #4
 801ee60:	eb07 0e01 	add.w	lr, r7, r1
 801ee64:	5879      	ldr	r1, [r7, r1]
 801ee66:	9109      	str	r1, [sp, #36]	@ 0x24
 801ee68:	0e09      	lsrs	r1, r1, #24
 801ee6a:	9112      	str	r1, [sp, #72]	@ 0x48
 801ee6c:	f8de 1004 	ldr.w	r1, [lr, #4]
 801ee70:	910f      	str	r1, [sp, #60]	@ 0x3c
 801ee72:	0e09      	lsrs	r1, r1, #24
 801ee74:	9116      	str	r1, [sp, #88]	@ 0x58
 801ee76:	b292      	uxth	r2, r2
 801ee78:	b280      	uxth	r0, r0
 801ee7a:	fb02 f800 	mul.w	r8, r2, r0
 801ee7e:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 801ee82:	0112      	lsls	r2, r2, #4
 801ee84:	eba2 0e08 	sub.w	lr, r2, r8
 801ee88:	b280      	uxth	r0, r0
 801ee8a:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
 801ee8e:	9915      	ldr	r1, [sp, #84]	@ 0x54
 801ee90:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 801ee92:	fa1f fe8e 	uxth.w	lr, lr
 801ee96:	1a12      	subs	r2, r2, r0
 801ee98:	b292      	uxth	r2, r2
 801ee9a:	fb0e f101 	mul.w	r1, lr, r1
 801ee9e:	fb02 110c 	mla	r1, r2, ip, r1
 801eea2:	fb00 1105 	mla	r1, r0, r5, r1
 801eea6:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 801eea8:	fb08 1105 	mla	r1, r8, r5, r1
 801eeac:	f3c1 2107 	ubfx	r1, r1, #8, #8
 801eeb0:	2900      	cmp	r1, #0
 801eeb2:	f000 80f5 	beq.w	801f0a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70c>
 801eeb6:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
 801eeba:	d019      	beq.n	801eef0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55c>
 801eebc:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 801eec0:	fb0c fa0a 	mul.w	sl, ip, sl
 801eec4:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801eec8:	fb0c fc03 	mul.w	ip, ip, r3
 801eecc:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801eed0:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801eed4:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 801eed8:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
 801eedc:	4453      	add	r3, sl
 801eede:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801eee2:	0a1b      	lsrs	r3, r3, #8
 801eee4:	0a3f      	lsrs	r7, r7, #8
 801eee6:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801eeea:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 801eeee:	433b      	orrs	r3, r7
 801eef0:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 801eef2:	2dff      	cmp	r5, #255	@ 0xff
 801eef4:	d020      	beq.n	801ef38 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a4>
 801eef6:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 801eef8:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 801eefc:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 801eefe:	436f      	muls	r7, r5
 801ef00:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 801ef02:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 801ef06:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 801ef08:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801ef0c:	fb05 fa0a 	mul.w	sl, r5, sl
 801ef10:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801ef14:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801ef18:	44bc      	add	ip, r7
 801ef1a:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801ef1e:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801ef22:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801ef26:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801ef2a:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801ef2e:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801ef32:	ea4c 050a 	orr.w	r5, ip, sl
 801ef36:	950e      	str	r5, [sp, #56]	@ 0x38
 801ef38:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 801ef3a:	2dff      	cmp	r5, #255	@ 0xff
 801ef3c:	d020      	beq.n	801ef80 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ec>
 801ef3e:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 801ef40:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 801ef44:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 801ef46:	436f      	muls	r7, r5
 801ef48:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 801ef4a:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 801ef4e:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 801ef50:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801ef54:	fb05 fa0a 	mul.w	sl, r5, sl
 801ef58:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801ef5c:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801ef60:	44bc      	add	ip, r7
 801ef62:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801ef66:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801ef6a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801ef6e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801ef72:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801ef76:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801ef7a:	ea4c 050a 	orr.w	r5, ip, sl
 801ef7e:	9509      	str	r5, [sp, #36]	@ 0x24
 801ef80:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 801ef82:	2dff      	cmp	r5, #255	@ 0xff
 801ef84:	d020      	beq.n	801efc8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x634>
 801ef86:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 801ef88:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 801ef8c:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 801ef8e:	436f      	muls	r7, r5
 801ef90:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 801ef92:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 801ef96:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 801ef98:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801ef9c:	fb05 fa0a 	mul.w	sl, r5, sl
 801efa0:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801efa4:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801efa8:	44bc      	add	ip, r7
 801efaa:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801efae:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801efb2:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801efb6:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801efba:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801efbe:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801efc2:	ea4c 050a 	orr.w	r5, ip, sl
 801efc6:	950f      	str	r5, [sp, #60]	@ 0x3c
 801efc8:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 801efca:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 801efce:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 801efd0:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
 801efd4:	fb0e f707 	mul.w	r7, lr, r7
 801efd8:	fb02 770c 	mla	r7, r2, ip, r7
 801efdc:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 801efe0:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 801efe2:	fb00 770c 	mla	r7, r0, ip, r7
 801efe6:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 801efea:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 801efec:	fb08 770c 	mla	r7, r8, ip, r7
 801eff0:	f405 4c7f 	and.w	ip, r5, #65280	@ 0xff00
 801eff4:	fb0e fe0c 	mul.w	lr, lr, ip
 801eff8:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801effc:	fb02 e303 	mla	r3, r2, r3, lr
 801f000:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 801f002:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 801f004:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
 801f008:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801f00a:	fb00 330a 	mla	r3, r0, sl, r3
 801f00e:	f402 4c7f 	and.w	ip, r2, #65280	@ 0xff00
 801f012:	fb08 3c0c 	mla	ip, r8, ip, r3
 801f016:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801f018:	f8b9 0000 	ldrh.w	r0, [r9]
 801f01c:	4359      	muls	r1, r3
 801f01e:	0a3f      	lsrs	r7, r7, #8
 801f020:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801f024:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 801f028:	1c4b      	adds	r3, r1, #1
 801f02a:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
 801f02e:	ea47 070c 	orr.w	r7, r7, ip
 801f032:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801f036:	1202      	asrs	r2, r0, #8
 801f038:	0c3b      	lsrs	r3, r7, #16
 801f03a:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 801f03e:	b2c9      	uxtb	r1, r1
 801f040:	fb13 f305 	smulbb	r3, r3, r5
 801f044:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 801f048:	fb02 3201 	mla	r2, r2, r1, r3
 801f04c:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 801f050:	10c3      	asrs	r3, r0, #3
 801f052:	b2ff      	uxtb	r7, r7
 801f054:	00c0      	lsls	r0, r0, #3
 801f056:	b2c0      	uxtb	r0, r0
 801f058:	fb17 f705 	smulbb	r7, r7, r5
 801f05c:	fb00 7001 	mla	r0, r0, r1, r7
 801f060:	b292      	uxth	r2, r2
 801f062:	fb1c fc05 	smulbb	ip, ip, r5
 801f066:	b280      	uxth	r0, r0
 801f068:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 801f06c:	fb03 c301 	mla	r3, r3, r1, ip
 801f070:	1c51      	adds	r1, r2, #1
 801f072:	f100 0c01 	add.w	ip, r0, #1
 801f076:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801f07a:	eb0c 2c10 	add.w	ip, ip, r0, lsr #8
 801f07e:	b29b      	uxth	r3, r3
 801f080:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801f084:	f402 4278 	and.w	r2, r2, #63488	@ 0xf800
 801f088:	ea4c 0202 	orr.w	r2, ip, r2
 801f08c:	f103 0c01 	add.w	ip, r3, #1
 801f090:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 801f094:	095b      	lsrs	r3, r3, #5
 801f096:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801f09a:	431a      	orrs	r2, r3
 801f09c:	f8a9 2000 	strh.w	r2, [r9]
 801f0a0:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 801f0a2:	441c      	add	r4, r3
 801f0a4:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 801f0a6:	f109 0902 	add.w	r9, r9, #2
 801f0aa:	441e      	add	r6, r3
 801f0ac:	f10b 3bff 	add.w	fp, fp, #4294967295
 801f0b0:	e647      	b.n	801ed42 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 801f0b2:	2800      	cmp	r0, #0
 801f0b4:	f43f aedf 	beq.w	801ee76 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 801f0b8:	f857 1021 	ldr.w	r1, [r7, r1, lsl #2]
 801f0bc:	9109      	str	r1, [sp, #36]	@ 0x24
 801f0be:	0e09      	lsrs	r1, r1, #24
 801f0c0:	9112      	str	r1, [sp, #72]	@ 0x48
 801f0c2:	e6d8      	b.n	801ee76 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 801f0c4:	b01d      	add	sp, #116	@ 0x74
 801f0c6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801f0ca <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>:
 801f0ca:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f0ce:	b085      	sub	sp, #20
 801f0d0:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	@ 0x3c
 801f0d4:	9102      	str	r1, [sp, #8]
 801f0d6:	2c00      	cmp	r4, #0
 801f0d8:	fb04 7103 	mla	r1, r4, r3, r7
 801f0dc:	f9bd e038 	ldrsh.w	lr, [sp, #56]	@ 0x38
 801f0e0:	f89d 6044 	ldrb.w	r6, [sp, #68]	@ 0x44
 801f0e4:	f89d 0048 	ldrb.w	r0, [sp, #72]	@ 0x48
 801f0e8:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 801f0ec:	f2c0 810c 	blt.w	801f308 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 801f0f0:	45a6      	cmp	lr, r4
 801f0f2:	f340 8109 	ble.w	801f308 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 801f0f6:	2f00      	cmp	r7, #0
 801f0f8:	f2c0 8104 	blt.w	801f304 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 801f0fc:	42bb      	cmp	r3, r7
 801f0fe:	f340 8101 	ble.w	801f304 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 801f102:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 801f106:	1c7a      	adds	r2, r7, #1
 801f108:	f100 8101 	bmi.w	801f30e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 801f10c:	4293      	cmp	r3, r2
 801f10e:	f340 80fe 	ble.w	801f30e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 801f112:	2e00      	cmp	r6, #0
 801f114:	f000 80fd 	beq.w	801f312 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x248>
 801f118:	f8dc 1004 	ldr.w	r1, [ip, #4]
 801f11c:	3401      	adds	r4, #1
 801f11e:	f100 80fc 	bmi.w	801f31a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 801f122:	45a6      	cmp	lr, r4
 801f124:	f340 80f9 	ble.w	801f31a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 801f128:	2800      	cmp	r0, #0
 801f12a:	f000 80f9 	beq.w	801f320 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x256>
 801f12e:	2f00      	cmp	r7, #0
 801f130:	eb0c 0283 	add.w	r2, ip, r3, lsl #2
 801f134:	f2c0 80ef 	blt.w	801f316 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 801f138:	42bb      	cmp	r3, r7
 801f13a:	f340 80ec 	ble.w	801f316 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 801f13e:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 801f142:	3701      	adds	r7, #1
 801f144:	f100 80ef 	bmi.w	801f326 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 801f148:	42bb      	cmp	r3, r7
 801f14a:	f340 80ec 	ble.w	801f326 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 801f14e:	2e00      	cmp	r6, #0
 801f150:	f000 80eb 	beq.w	801f32a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x260>
 801f154:	6852      	ldr	r2, [r2, #4]
 801f156:	b2b6      	uxth	r6, r6
 801f158:	b280      	uxth	r0, r0
 801f15a:	fb00 fe06 	mul.w	lr, r0, r6
 801f15e:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 801f162:	0136      	lsls	r6, r6, #4
 801f164:	eba6 070e 	sub.w	r7, r6, lr
 801f168:	b280      	uxth	r0, r0
 801f16a:	f5c6 7380 	rsb	r3, r6, #256	@ 0x100
 801f16e:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 801f172:	b2bf      	uxth	r7, r7
 801f174:	1a1b      	subs	r3, r3, r0
 801f176:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 801f17a:	b29b      	uxth	r3, r3
 801f17c:	fb07 f60a 	mul.w	r6, r7, sl
 801f180:	ea4f 6914 	mov.w	r9, r4, lsr #24
 801f184:	fb0b 6603 	mla	r6, fp, r3, r6
 801f188:	ea4f 6812 	mov.w	r8, r2, lsr #24
 801f18c:	fb00 6609 	mla	r6, r0, r9, r6
 801f190:	fb0e 6608 	mla	r6, lr, r8, r6
 801f194:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801f198:	9600      	str	r6, [sp, #0]
 801f19a:	2e00      	cmp	r6, #0
 801f19c:	f000 80af 	beq.w	801f2fe <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x234>
 801f1a0:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 801f1a4:	fb0b fc0c 	mul.w	ip, fp, ip
 801f1a8:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
 801f1ac:	fb0b f505 	mul.w	r5, fp, r5
 801f1b0:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 801f1b4:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
 801f1b8:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801f1bc:	44dc      	add	ip, fp
 801f1be:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801f1c2:	9501      	str	r5, [sp, #4]
 801f1c4:	f00c 15ff 	and.w	r5, ip, #16711935	@ 0xff00ff
 801f1c8:	9503      	str	r5, [sp, #12]
 801f1ca:	9d01      	ldr	r5, [sp, #4]
 801f1cc:	9e02      	ldr	r6, [sp, #8]
 801f1ce:	f505 7c80 	add.w	ip, r5, #256	@ 0x100
 801f1d2:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801f1d6:	f001 1cff 	and.w	ip, r1, #16711935	@ 0xff00ff
 801f1da:	fb0a fc0c 	mul.w	ip, sl, ip
 801f1de:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 801f1e2:	ea4f 251c 	mov.w	r5, ip, lsr #8
 801f1e6:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 801f1ea:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801f1ee:	4465      	add	r5, ip
 801f1f0:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 801f1f4:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
 801f1f8:	fb09 fc0c 	mul.w	ip, r9, ip
 801f1fc:	fb09 f904 	mul.w	r9, r9, r4
 801f200:	f509 7480 	add.w	r4, r9, #256	@ 0x100
 801f204:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 801f208:	f002 14ff 	and.w	r4, r2, #16711935	@ 0xff00ff
 801f20c:	fb08 f404 	mul.w	r4, r8, r4
 801f210:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 801f214:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 801f218:	fb08 f802 	mul.w	r8, r8, r2
 801f21c:	fb0a fa01 	mul.w	sl, sl, r1
 801f220:	0a22      	lsrs	r2, r4, #8
 801f222:	f50a 7180 	add.w	r1, sl, #256	@ 0x100
 801f226:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 801f22a:	f104 1401 	add.w	r4, r4, #65537	@ 0x10001
 801f22e:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 801f232:	4414      	add	r4, r2
 801f234:	ea4f 211c 	mov.w	r1, ip, lsr #8
 801f238:	f508 7280 	add.w	r2, r8, #256	@ 0x100
 801f23c:	0a2d      	lsrs	r5, r5, #8
 801f23e:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 801f242:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 801f246:	9a03      	ldr	r2, [sp, #12]
 801f248:	8836      	ldrh	r6, [r6, #0]
 801f24a:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 801f24e:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801f252:	437d      	muls	r5, r7
 801f254:	4461      	add	r1, ip
 801f256:	0a24      	lsrs	r4, r4, #8
 801f258:	fb02 5503 	mla	r5, r2, r3, r5
 801f25c:	0a09      	lsrs	r1, r1, #8
 801f25e:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
 801f262:	fb04 540e 	mla	r4, r4, lr, r5
 801f266:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 801f26a:	fb01 4100 	mla	r1, r1, r0, r4
 801f26e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801f272:	0a09      	lsrs	r1, r1, #8
 801f274:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801f278:	f001 14ff 	and.w	r4, r1, #16711935	@ 0xff00ff
 801f27c:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801f280:	f40b 417f 	and.w	r1, fp, #65280	@ 0xff00
 801f284:	fb07 f70a 	mul.w	r7, r7, sl
 801f288:	fb03 7101 	mla	r1, r3, r1, r7
 801f28c:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801f290:	9b00      	ldr	r3, [sp, #0]
 801f292:	f408 487f 	and.w	r8, r8, #65280	@ 0xff00
 801f296:	fb0e 1e08 	mla	lr, lr, r8, r1
 801f29a:	f409 417f 	and.w	r1, r9, #65280	@ 0xff00
 801f29e:	fb00 e101 	mla	r1, r0, r1, lr
 801f2a2:	43da      	mvns	r2, r3
 801f2a4:	1233      	asrs	r3, r6, #8
 801f2a6:	b2d2      	uxtb	r2, r2
 801f2a8:	10f0      	asrs	r0, r6, #3
 801f2aa:	0a09      	lsrs	r1, r1, #8
 801f2ac:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 801f2b0:	00f6      	lsls	r6, r6, #3
 801f2b2:	4353      	muls	r3, r2
 801f2b4:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 801f2b8:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 801f2bc:	b2f6      	uxtb	r6, r6
 801f2be:	4321      	orrs	r1, r4
 801f2c0:	4350      	muls	r0, r2
 801f2c2:	4356      	muls	r6, r2
 801f2c4:	1c5a      	adds	r2, r3, #1
 801f2c6:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801f2ca:	0c0b      	lsrs	r3, r1, #16
 801f2cc:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801f2d0:	1c42      	adds	r2, r0, #1
 801f2d2:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801f2d6:	0a0a      	lsrs	r2, r1, #8
 801f2d8:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 801f2dc:	021b      	lsls	r3, r3, #8
 801f2de:	00d2      	lsls	r2, r2, #3
 801f2e0:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801f2e4:	f403 4378 	and.w	r3, r3, #63488	@ 0xf800
 801f2e8:	4313      	orrs	r3, r2
 801f2ea:	1c72      	adds	r2, r6, #1
 801f2ec:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 801f2f0:	eb01 2116 	add.w	r1, r1, r6, lsr #8
 801f2f4:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 801f2f8:	4319      	orrs	r1, r3
 801f2fa:	9b02      	ldr	r3, [sp, #8]
 801f2fc:	8019      	strh	r1, [r3, #0]
 801f2fe:	b005      	add	sp, #20
 801f300:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f304:	2500      	movs	r5, #0
 801f306:	e6fe      	b.n	801f106 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x3c>
 801f308:	2100      	movs	r1, #0
 801f30a:	460d      	mov	r5, r1
 801f30c:	e706      	b.n	801f11c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 801f30e:	2100      	movs	r1, #0
 801f310:	e704      	b.n	801f11c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 801f312:	4631      	mov	r1, r6
 801f314:	e702      	b.n	801f11c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 801f316:	2400      	movs	r4, #0
 801f318:	e713      	b.n	801f142 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x78>
 801f31a:	2200      	movs	r2, #0
 801f31c:	4614      	mov	r4, r2
 801f31e:	e71a      	b.n	801f156 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 801f320:	4602      	mov	r2, r0
 801f322:	4604      	mov	r4, r0
 801f324:	e717      	b.n	801f156 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 801f326:	2200      	movs	r2, #0
 801f328:	e715      	b.n	801f156 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 801f32a:	4632      	mov	r2, r6
 801f32c:	e713      	b.n	801f156 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
	...

0801f330 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801f330:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f334:	b09b      	sub	sp, #108	@ 0x6c
 801f336:	e9dd 4625 	ldrd	r4, r6, [sp, #148]	@ 0x94
 801f33a:	9218      	str	r2, [sp, #96]	@ 0x60
 801f33c:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 801f33e:	9116      	str	r1, [sp, #88]	@ 0x58
 801f340:	9307      	str	r3, [sp, #28]
 801f342:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	@ 0xa8
 801f346:	9019      	str	r0, [sp, #100]	@ 0x64
 801f348:	6850      	ldr	r0, [r2, #4]
 801f34a:	6812      	ldr	r2, [r2, #0]
 801f34c:	fb00 1303 	mla	r3, r0, r3, r1
 801f350:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801f354:	930a      	str	r3, [sp, #40]	@ 0x28
 801f356:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801f358:	681b      	ldr	r3, [r3, #0]
 801f35a:	930f      	str	r3, [sp, #60]	@ 0x3c
 801f35c:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 801f35e:	2b00      	cmp	r3, #0
 801f360:	dc03      	bgt.n	801f36a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801f362:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801f364:	2b00      	cmp	r3, #0
 801f366:	f340 8386 	ble.w	801fa76 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 801f36a:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801f36c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801f370:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801f374:	1e48      	subs	r0, r1, #1
 801f376:	1e57      	subs	r7, r2, #1
 801f378:	9b07      	ldr	r3, [sp, #28]
 801f37a:	2b00      	cmp	r3, #0
 801f37c:	f340 8166 	ble.w	801f64c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 801f380:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801f384:	ea4f 4326 	mov.w	r3, r6, asr #16
 801f388:	d406      	bmi.n	801f398 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801f38a:	4584      	cmp	ip, r0
 801f38c:	da04      	bge.n	801f398 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801f38e:	2b00      	cmp	r3, #0
 801f390:	db02      	blt.n	801f398 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801f392:	42bb      	cmp	r3, r7
 801f394:	f2c0 815b 	blt.w	801f64e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 801f398:	f11c 0c01 	adds.w	ip, ip, #1
 801f39c:	f100 814b 	bmi.w	801f636 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 801f3a0:	4561      	cmp	r1, ip
 801f3a2:	f2c0 8148 	blt.w	801f636 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 801f3a6:	3301      	adds	r3, #1
 801f3a8:	f100 8145 	bmi.w	801f636 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 801f3ac:	429a      	cmp	r2, r3
 801f3ae:	f2c0 8142 	blt.w	801f636 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 801f3b2:	9b07      	ldr	r3, [sp, #28]
 801f3b4:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
 801f3b6:	9317      	str	r3, [sp, #92]	@ 0x5c
 801f3b8:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 801f3ba:	2b00      	cmp	r3, #0
 801f3bc:	f340 8165 	ble.w	801f68a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801f3c0:	9a2c      	ldr	r2, [sp, #176]	@ 0xb0
 801f3c2:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801f3c4:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801f3c8:	689b      	ldr	r3, [r3, #8]
 801f3ca:	1422      	asrs	r2, r4, #16
 801f3cc:	ea4f 4c26 	mov.w	ip, r6, asr #16
 801f3d0:	f3c4 3103 	ubfx	r1, r4, #12, #4
 801f3d4:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801f3d8:	f100 81d5 	bmi.w	801f786 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 801f3dc:	f103 38ff 	add.w	r8, r3, #4294967295
 801f3e0:	4542      	cmp	r2, r8
 801f3e2:	f280 81d0 	bge.w	801f786 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 801f3e6:	f1bc 0f00 	cmp.w	ip, #0
 801f3ea:	f2c0 81cc 	blt.w	801f786 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 801f3ee:	f10e 38ff 	add.w	r8, lr, #4294967295
 801f3f2:	45c4      	cmp	ip, r8
 801f3f4:	f280 81c7 	bge.w	801f786 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 801f3f8:	b21b      	sxth	r3, r3
 801f3fa:	fb0c 2203 	mla	r2, ip, r3, r2
 801f3fe:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 801f400:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 801f404:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 801f408:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 801f40c:	2900      	cmp	r1, #0
 801f40e:	f000 8182 	beq.w	801f716 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 801f412:	f8d8 5004 	ldr.w	r5, [r8, #4]
 801f416:	950b      	str	r5, [sp, #44]	@ 0x2c
 801f418:	0e2d      	lsrs	r5, r5, #24
 801f41a:	9512      	str	r5, [sp, #72]	@ 0x48
 801f41c:	b180      	cbz	r0, 801f440 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 801f41e:	f103 4380 	add.w	r3, r3, #1073741824	@ 0x40000000
 801f422:	3b01      	subs	r3, #1
 801f424:	009b      	lsls	r3, r3, #2
 801f426:	3304      	adds	r3, #4
 801f428:	eb08 0c03 	add.w	ip, r8, r3
 801f42c:	f858 3003 	ldr.w	r3, [r8, r3]
 801f430:	9308      	str	r3, [sp, #32]
 801f432:	0e1b      	lsrs	r3, r3, #24
 801f434:	9310      	str	r3, [sp, #64]	@ 0x40
 801f436:	f8dc 3004 	ldr.w	r3, [ip, #4]
 801f43a:	930c      	str	r3, [sp, #48]	@ 0x30
 801f43c:	0e1b      	lsrs	r3, r3, #24
 801f43e:	9313      	str	r3, [sp, #76]	@ 0x4c
 801f440:	b289      	uxth	r1, r1
 801f442:	b280      	uxth	r0, r0
 801f444:	fb01 f900 	mul.w	r9, r1, r0
 801f448:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 801f44c:	0109      	lsls	r1, r1, #4
 801f44e:	eba1 0809 	sub.w	r8, r1, r9
 801f452:	b280      	uxth	r0, r0
 801f454:	f5c1 7180 	rsb	r1, r1, #256	@ 0x100
 801f458:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 801f45a:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 801f45c:	fa1f f888 	uxth.w	r8, r8
 801f460:	1a09      	subs	r1, r1, r0
 801f462:	b289      	uxth	r1, r1
 801f464:	fb08 f303 	mul.w	r3, r8, r3
 801f468:	fb01 330e 	mla	r3, r1, lr, r3
 801f46c:	fb00 3305 	mla	r3, r0, r5, r3
 801f470:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 801f472:	fb09 3305 	mla	r3, r9, r5, r3
 801f476:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801f47a:	2b00      	cmp	r3, #0
 801f47c:	f000 80d2 	beq.w	801f624 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801f480:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
 801f484:	d01b      	beq.n	801f4be <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18e>
 801f486:	f002 1aff 	and.w	sl, r2, #16711935	@ 0xff00ff
 801f48a:	fb0e fa0a 	mul.w	sl, lr, sl
 801f48e:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 801f492:	fb0e fe02 	mul.w	lr, lr, r2
 801f496:	ea4f 221a 	mov.w	r2, sl, lsr #8
 801f49a:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 801f49e:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 801f4a2:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
 801f4a6:	4452      	add	r2, sl
 801f4a8:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801f4ac:	0a12      	lsrs	r2, r2, #8
 801f4ae:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801f4b2:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 801f4b6:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 801f4ba:	ea42 020c 	orr.w	r2, r2, ip
 801f4be:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 801f4c0:	2dff      	cmp	r5, #255	@ 0xff
 801f4c2:	d021      	beq.n	801f508 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d8>
 801f4c4:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 801f4c6:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 801f4ca:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 801f4cc:	fb05 fb0b 	mul.w	fp, r5, fp
 801f4d0:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 801f4d2:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 801f4d6:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 801f4d8:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801f4dc:	fb05 fa0a 	mul.w	sl, r5, sl
 801f4e0:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801f4e4:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801f4e8:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801f4ec:	44de      	add	lr, fp
 801f4ee:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801f4f2:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801f4f6:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801f4fa:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801f4fe:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801f502:	ea4e 050a 	orr.w	r5, lr, sl
 801f506:	950b      	str	r5, [sp, #44]	@ 0x2c
 801f508:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 801f50a:	2dff      	cmp	r5, #255	@ 0xff
 801f50c:	d021      	beq.n	801f552 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 801f50e:	9d08      	ldr	r5, [sp, #32]
 801f510:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 801f514:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 801f516:	fb05 fb0b 	mul.w	fp, r5, fp
 801f51a:	9d08      	ldr	r5, [sp, #32]
 801f51c:	f405 4e7f 	and.w	lr, r5, #65280	@ 0xff00
 801f520:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 801f522:	fb05 fa0e 	mul.w	sl, r5, lr
 801f526:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801f52a:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801f52e:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801f532:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801f536:	44de      	add	lr, fp
 801f538:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801f53c:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801f540:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801f544:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801f548:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801f54c:	ea4e 050a 	orr.w	r5, lr, sl
 801f550:	9508      	str	r5, [sp, #32]
 801f552:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 801f554:	2dff      	cmp	r5, #255	@ 0xff
 801f556:	d021      	beq.n	801f59c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26c>
 801f558:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 801f55a:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 801f55e:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 801f560:	fb05 fb0b 	mul.w	fp, r5, fp
 801f564:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 801f566:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 801f56a:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 801f56c:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801f570:	fb05 fa0a 	mul.w	sl, r5, sl
 801f574:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801f578:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801f57c:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801f580:	44de      	add	lr, fp
 801f582:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801f586:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801f58a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801f58e:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801f592:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801f596:	ea4e 050a 	orr.w	r5, lr, sl
 801f59a:	950c      	str	r5, [sp, #48]	@ 0x30
 801f59c:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 801f59e:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 801f5a2:	9d08      	ldr	r5, [sp, #32]
 801f5a4:	f002 1eff 	and.w	lr, r2, #16711935	@ 0xff00ff
 801f5a8:	fb08 fc0c 	mul.w	ip, r8, ip
 801f5ac:	fb01 cc0e 	mla	ip, r1, lr, ip
 801f5b0:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
 801f5b4:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 801f5b6:	fb00 cc0e 	mla	ip, r0, lr, ip
 801f5ba:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
 801f5be:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 801f5c0:	fb09 cc0e 	mla	ip, r9, lr, ip
 801f5c4:	f405 4e7f 	and.w	lr, r5, #65280	@ 0xff00
 801f5c8:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 801f5cc:	fb08 f80e 	mul.w	r8, r8, lr
 801f5d0:	fb01 8202 	mla	r2, r1, r2, r8
 801f5d4:	9908      	ldr	r1, [sp, #32]
 801f5d6:	f401 4a7f 	and.w	sl, r1, #65280	@ 0xff00
 801f5da:	990c      	ldr	r1, [sp, #48]	@ 0x30
 801f5dc:	fb00 220a 	mla	r2, r0, sl, r2
 801f5e0:	f401 407f 	and.w	r0, r1, #65280	@ 0xff00
 801f5e4:	fb09 2900 	mla	r9, r9, r0, r2
 801f5e8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801f5ec:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801f5f0:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801f5f4:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
 801f5f8:	ea4c 0c09 	orr.w	ip, ip, r9
 801f5fc:	2bff      	cmp	r3, #255	@ 0xff
 801f5fe:	ea4f 221c 	mov.w	r2, ip, lsr #8
 801f602:	f040 8091 	bne.w	801f728 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 801f606:	ea4f 135c 	mov.w	r3, ip, lsr #5
 801f60a:	f422 62ff 	bic.w	r2, r2, #2040	@ 0x7f8
 801f60e:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801f612:	f022 0207 	bic.w	r2, r2, #7
 801f616:	431a      	orrs	r2, r3
 801f618:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 801f61c:	ea4c 0c02 	orr.w	ip, ip, r2
 801f620:	f8a7 c000 	strh.w	ip, [r7]
 801f624:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 801f626:	441c      	add	r4, r3
 801f628:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801f62a:	441e      	add	r6, r3
 801f62c:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 801f62e:	3b01      	subs	r3, #1
 801f630:	3702      	adds	r7, #2
 801f632:	9317      	str	r3, [sp, #92]	@ 0x5c
 801f634:	e6c0      	b.n	801f3b8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801f636:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 801f638:	441c      	add	r4, r3
 801f63a:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801f63c:	441e      	add	r6, r3
 801f63e:	9b07      	ldr	r3, [sp, #28]
 801f640:	3b01      	subs	r3, #1
 801f642:	9307      	str	r3, [sp, #28]
 801f644:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801f646:	3302      	adds	r3, #2
 801f648:	930a      	str	r3, [sp, #40]	@ 0x28
 801f64a:	e695      	b.n	801f378 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801f64c:	d024      	beq.n	801f698 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 801f64e:	9b07      	ldr	r3, [sp, #28]
 801f650:	9827      	ldr	r0, [sp, #156]	@ 0x9c
 801f652:	3b01      	subs	r3, #1
 801f654:	fb00 4003 	mla	r0, r0, r3, r4
 801f658:	1400      	asrs	r0, r0, #16
 801f65a:	f53f aeaa 	bmi.w	801f3b2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801f65e:	3901      	subs	r1, #1
 801f660:	4288      	cmp	r0, r1
 801f662:	f6bf aea6 	bge.w	801f3b2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801f666:	9928      	ldr	r1, [sp, #160]	@ 0xa0
 801f668:	fb01 6303 	mla	r3, r1, r3, r6
 801f66c:	141b      	asrs	r3, r3, #16
 801f66e:	f53f aea0 	bmi.w	801f3b2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801f672:	3a01      	subs	r2, #1
 801f674:	4293      	cmp	r3, r2
 801f676:	f6bf ae9c 	bge.w	801f3b2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801f67a:	f8dd b01c 	ldr.w	fp, [sp, #28]
 801f67e:	f8dd 8028 	ldr.w	r8, [sp, #40]	@ 0x28
 801f682:	f1bb 0f00 	cmp.w	fp, #0
 801f686:	f300 809a 	bgt.w	801f7be <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 801f68a:	9b07      	ldr	r3, [sp, #28]
 801f68c:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801f690:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801f692:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 801f696:	930a      	str	r3, [sp, #40]	@ 0x28
 801f698:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 801f69a:	2b00      	cmp	r3, #0
 801f69c:	f340 81eb 	ble.w	801fa76 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 801f6a0:	ee30 0a04 	vadd.f32	s0, s0, s8
 801f6a4:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801f6a8:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801f6ac:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801f6ae:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801f6b2:	ee31 1a05 	vadd.f32	s2, s2, s10
 801f6b6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801f6ba:	eef0 6a62 	vmov.f32	s13, s5
 801f6be:	ee61 7a27 	vmul.f32	s15, s2, s15
 801f6c2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801f6c6:	ee77 2a62 	vsub.f32	s5, s14, s5
 801f6ca:	ee16 4a90 	vmov	r4, s13
 801f6ce:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801f6d2:	eef0 6a43 	vmov.f32	s13, s6
 801f6d6:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801f6da:	ee12 2a90 	vmov	r2, s5
 801f6de:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801f6e2:	fb92 f3f3 	sdiv	r3, r2, r3
 801f6e6:	ee13 2a10 	vmov	r2, s6
 801f6ea:	9327      	str	r3, [sp, #156]	@ 0x9c
 801f6ec:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801f6ee:	fb92 f3f3 	sdiv	r3, r2, r3
 801f6f2:	9328      	str	r3, [sp, #160]	@ 0xa0
 801f6f4:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 801f6f6:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 801f6f8:	3b01      	subs	r3, #1
 801f6fa:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801f6fe:	9316      	str	r3, [sp, #88]	@ 0x58
 801f700:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801f702:	bf08      	it	eq
 801f704:	4613      	moveq	r3, r2
 801f706:	ee16 6a90 	vmov	r6, s13
 801f70a:	9307      	str	r3, [sp, #28]
 801f70c:	eeb0 3a67 	vmov.f32	s6, s15
 801f710:	eef0 2a47 	vmov.f32	s5, s14
 801f714:	e622      	b.n	801f35c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c>
 801f716:	2800      	cmp	r0, #0
 801f718:	f43f ae92 	beq.w	801f440 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 801f71c:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 801f720:	9308      	str	r3, [sp, #32]
 801f722:	0e1b      	lsrs	r3, r3, #24
 801f724:	9310      	str	r3, [sp, #64]	@ 0x40
 801f726:	e68b      	b.n	801f440 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 801f728:	8839      	ldrh	r1, [r7, #0]
 801f72a:	4dd4      	ldr	r5, [pc, #848]	@ (801fa7c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74c>)
 801f72c:	43db      	mvns	r3, r3
 801f72e:	ea4f 2e21 	mov.w	lr, r1, asr #8
 801f732:	fa5f f883 	uxtb.w	r8, r3
 801f736:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
 801f73a:	fb0e fe08 	mul.w	lr, lr, r8
 801f73e:	10c8      	asrs	r0, r1, #3
 801f740:	00cb      	lsls	r3, r1, #3
 801f742:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 801f746:	f10e 0101 	add.w	r1, lr, #1
 801f74a:	eb01 2e1e 	add.w	lr, r1, lr, lsr #8
 801f74e:	fb00 f008 	mul.w	r0, r0, r8
 801f752:	ea4f 411c 	mov.w	r1, ip, lsr #16
 801f756:	eb01 211e 	add.w	r1, r1, lr, lsr #8
 801f75a:	f100 0e01 	add.w	lr, r0, #1
 801f75e:	eb0e 2010 	add.w	r0, lr, r0, lsr #8
 801f762:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 801f766:	b2db      	uxtb	r3, r3
 801f768:	b2c9      	uxtb	r1, r1
 801f76a:	00d2      	lsls	r2, r2, #3
 801f76c:	fb03 f308 	mul.w	r3, r3, r8
 801f770:	ea05 2101 	and.w	r1, r5, r1, lsl #8
 801f774:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801f778:	430a      	orrs	r2, r1
 801f77a:	1c59      	adds	r1, r3, #1
 801f77c:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801f780:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801f784:	e748      	b.n	801f618 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>
 801f786:	f112 0801 	adds.w	r8, r2, #1
 801f78a:	f53f af4b 	bmi.w	801f624 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801f78e:	4543      	cmp	r3, r8
 801f790:	f6ff af48 	blt.w	801f624 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801f794:	f11c 0801 	adds.w	r8, ip, #1
 801f798:	f53f af44 	bmi.w	801f624 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801f79c:	45c6      	cmp	lr, r8
 801f79e:	f6ff af41 	blt.w	801f624 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801f7a2:	e9cd 2c01 	strd	r2, ip, [sp, #4]
 801f7a6:	fa0f f28e 	sxth.w	r2, lr
 801f7aa:	e9cd 1003 	strd	r1, r0, [sp, #12]
 801f7ae:	9200      	str	r2, [sp, #0]
 801f7b0:	b21b      	sxth	r3, r3
 801f7b2:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801f7b4:	9819      	ldr	r0, [sp, #100]	@ 0x64
 801f7b6:	4639      	mov	r1, r7
 801f7b8:	f7ff fc87 	bl	801f0ca <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>
 801f7bc:	e732      	b.n	801f624 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801f7be:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801f7c0:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 801f7c2:	f9b3 7008 	ldrsh.w	r7, [r3, #8]
 801f7c6:	1421      	asrs	r1, r4, #16
 801f7c8:	1433      	asrs	r3, r6, #16
 801f7ca:	fb07 1303 	mla	r3, r7, r3, r1
 801f7ce:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 801f7d0:	eb01 0183 	add.w	r1, r1, r3, lsl #2
 801f7d4:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 801f7d8:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801f7dc:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801f7e0:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801f7e4:	2a00      	cmp	r2, #0
 801f7e6:	f000 8107 	beq.w	801f9f8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c8>
 801f7ea:	684d      	ldr	r5, [r1, #4]
 801f7ec:	950d      	str	r5, [sp, #52]	@ 0x34
 801f7ee:	0e2d      	lsrs	r5, r5, #24
 801f7f0:	9514      	str	r5, [sp, #80]	@ 0x50
 801f7f2:	b178      	cbz	r0, 801f814 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801f7f4:	f107 4780 	add.w	r7, r7, #1073741824	@ 0x40000000
 801f7f8:	3f01      	subs	r7, #1
 801f7fa:	00bf      	lsls	r7, r7, #2
 801f7fc:	3704      	adds	r7, #4
 801f7fe:	eb01 0e07 	add.w	lr, r1, r7
 801f802:	59c9      	ldr	r1, [r1, r7]
 801f804:	9109      	str	r1, [sp, #36]	@ 0x24
 801f806:	0e09      	lsrs	r1, r1, #24
 801f808:	9111      	str	r1, [sp, #68]	@ 0x44
 801f80a:	f8de 1004 	ldr.w	r1, [lr, #4]
 801f80e:	910e      	str	r1, [sp, #56]	@ 0x38
 801f810:	0e09      	lsrs	r1, r1, #24
 801f812:	9115      	str	r1, [sp, #84]	@ 0x54
 801f814:	b292      	uxth	r2, r2
 801f816:	b280      	uxth	r0, r0
 801f818:	fb02 f900 	mul.w	r9, r2, r0
 801f81c:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 801f820:	0112      	lsls	r2, r2, #4
 801f822:	eba2 0e09 	sub.w	lr, r2, r9
 801f826:	b280      	uxth	r0, r0
 801f828:	f5c2 7180 	rsb	r1, r2, #256	@ 0x100
 801f82c:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801f82e:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801f830:	fa1f fe8e 	uxth.w	lr, lr
 801f834:	1a09      	subs	r1, r1, r0
 801f836:	b289      	uxth	r1, r1
 801f838:	fb0e f202 	mul.w	r2, lr, r2
 801f83c:	fb01 220c 	mla	r2, r1, ip, r2
 801f840:	fb00 2205 	mla	r2, r0, r5, r2
 801f844:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 801f846:	fb09 2205 	mla	r2, r9, r5, r2
 801f84a:	f3c2 2207 	ubfx	r2, r2, #8, #8
 801f84e:	2a00      	cmp	r2, #0
 801f850:	f000 80c9 	beq.w	801f9e6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b6>
 801f854:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
 801f858:	d019      	beq.n	801f88e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55e>
 801f85a:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 801f85e:	fb0c fa0a 	mul.w	sl, ip, sl
 801f862:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801f866:	fb0c fc03 	mul.w	ip, ip, r3
 801f86a:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801f86e:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801f872:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 801f876:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
 801f87a:	4453      	add	r3, sl
 801f87c:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801f880:	0a1b      	lsrs	r3, r3, #8
 801f882:	0a3f      	lsrs	r7, r7, #8
 801f884:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801f888:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 801f88c:	433b      	orrs	r3, r7
 801f88e:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 801f890:	2dff      	cmp	r5, #255	@ 0xff
 801f892:	d020      	beq.n	801f8d6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a6>
 801f894:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 801f896:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 801f89a:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 801f89c:	436f      	muls	r7, r5
 801f89e:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 801f8a0:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 801f8a4:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 801f8a6:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801f8aa:	fb05 fa0a 	mul.w	sl, r5, sl
 801f8ae:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801f8b2:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801f8b6:	44bc      	add	ip, r7
 801f8b8:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801f8bc:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801f8c0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801f8c4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801f8c8:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801f8cc:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801f8d0:	ea4c 050a 	orr.w	r5, ip, sl
 801f8d4:	950d      	str	r5, [sp, #52]	@ 0x34
 801f8d6:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801f8d8:	2dff      	cmp	r5, #255	@ 0xff
 801f8da:	d020      	beq.n	801f91e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ee>
 801f8dc:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 801f8de:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 801f8e2:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801f8e4:	436f      	muls	r7, r5
 801f8e6:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 801f8e8:	f405 4c7f 	and.w	ip, r5, #65280	@ 0xff00
 801f8ec:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801f8ee:	fb05 fa0c 	mul.w	sl, r5, ip
 801f8f2:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801f8f6:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801f8fa:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801f8fe:	44bc      	add	ip, r7
 801f900:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801f904:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801f908:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801f90c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801f910:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801f914:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801f918:	ea4c 050a 	orr.w	r5, ip, sl
 801f91c:	9509      	str	r5, [sp, #36]	@ 0x24
 801f91e:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 801f920:	2dff      	cmp	r5, #255	@ 0xff
 801f922:	d020      	beq.n	801f966 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x636>
 801f924:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 801f926:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 801f92a:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 801f92c:	436f      	muls	r7, r5
 801f92e:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 801f930:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 801f934:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 801f936:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801f93a:	fb05 fa0a 	mul.w	sl, r5, sl
 801f93e:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801f942:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801f946:	44bc      	add	ip, r7
 801f948:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801f94c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801f950:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801f954:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801f958:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801f95c:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801f960:	ea4c 050a 	orr.w	r5, ip, sl
 801f964:	950e      	str	r5, [sp, #56]	@ 0x38
 801f966:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 801f968:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 801f96c:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 801f96e:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
 801f972:	fb0e f707 	mul.w	r7, lr, r7
 801f976:	fb01 770c 	mla	r7, r1, ip, r7
 801f97a:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 801f97e:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 801f980:	fb00 770c 	mla	r7, r0, ip, r7
 801f984:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 801f988:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 801f98a:	fb09 770c 	mla	r7, r9, ip, r7
 801f98e:	f405 4c7f 	and.w	ip, r5, #65280	@ 0xff00
 801f992:	fb0e fe0c 	mul.w	lr, lr, ip
 801f996:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801f99a:	fb01 e303 	mla	r3, r1, r3, lr
 801f99e:	9909      	ldr	r1, [sp, #36]	@ 0x24
 801f9a0:	f401 4a7f 	and.w	sl, r1, #65280	@ 0xff00
 801f9a4:	990e      	ldr	r1, [sp, #56]	@ 0x38
 801f9a6:	fb00 330a 	mla	r3, r0, sl, r3
 801f9aa:	f401 4c7f 	and.w	ip, r1, #65280	@ 0xff00
 801f9ae:	fb09 3c0c 	mla	ip, r9, ip, r3
 801f9b2:	0a3f      	lsrs	r7, r7, #8
 801f9b4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801f9b8:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
 801f9bc:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 801f9c0:	ea47 070c 	orr.w	r7, r7, ip
 801f9c4:	2aff      	cmp	r2, #255	@ 0xff
 801f9c6:	ea4f 2317 	mov.w	r3, r7, lsr #8
 801f9ca:	d11e      	bne.n	801fa0a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6da>
 801f9cc:	097a      	lsrs	r2, r7, #5
 801f9ce:	f423 63ff 	bic.w	r3, r3, #2040	@ 0x7f8
 801f9d2:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801f9d6:	f023 0307 	bic.w	r3, r3, #7
 801f9da:	4313      	orrs	r3, r2
 801f9dc:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 801f9e0:	431f      	orrs	r7, r3
 801f9e2:	f8a8 7000 	strh.w	r7, [r8]
 801f9e6:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 801f9e8:	441c      	add	r4, r3
 801f9ea:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801f9ec:	f108 0802 	add.w	r8, r8, #2
 801f9f0:	441e      	add	r6, r3
 801f9f2:	f10b 3bff 	add.w	fp, fp, #4294967295
 801f9f6:	e644      	b.n	801f682 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
 801f9f8:	2800      	cmp	r0, #0
 801f9fa:	f43f af0b 	beq.w	801f814 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801f9fe:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
 801fa02:	9109      	str	r1, [sp, #36]	@ 0x24
 801fa04:	0e09      	lsrs	r1, r1, #24
 801fa06:	9111      	str	r1, [sp, #68]	@ 0x44
 801fa08:	e704      	b.n	801f814 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801fa0a:	f8b8 1000 	ldrh.w	r1, [r8]
 801fa0e:	43d2      	mvns	r2, r2
 801fa10:	ea4f 2c21 	mov.w	ip, r1, asr #8
 801fa14:	fa5f fe82 	uxtb.w	lr, r2
 801fa18:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801fa1c:	fb0c fc0e 	mul.w	ip, ip, lr
 801fa20:	10c8      	asrs	r0, r1, #3
 801fa22:	00ca      	lsls	r2, r1, #3
 801fa24:	f10c 0101 	add.w	r1, ip, #1
 801fa28:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 801fa2c:	0c39      	lsrs	r1, r7, #16
 801fa2e:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 801fa32:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 801fa36:	4911      	ldr	r1, [pc, #68]	@ (801fa7c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74c>)
 801fa38:	fb00 f00e 	mul.w	r0, r0, lr
 801fa3c:	fa5f fc8c 	uxtb.w	ip, ip
 801fa40:	ea01 2c0c 	and.w	ip, r1, ip, lsl #8
 801fa44:	b2d2      	uxtb	r2, r2
 801fa46:	1c41      	adds	r1, r0, #1
 801fa48:	fb02 f20e 	mul.w	r2, r2, lr
 801fa4c:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 801fa50:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801fa54:	1c51      	adds	r1, r2, #1
 801fa56:	00c0      	lsls	r0, r0, #3
 801fa58:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801fa5c:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801fa60:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 801fa64:	ea4c 0c00 	orr.w	ip, ip, r0
 801fa68:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 801fa6c:	ea47 0c0c 	orr.w	ip, r7, ip
 801fa70:	f8a8 c000 	strh.w	ip, [r8]
 801fa74:	e7b7      	b.n	801f9e6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b6>
 801fa76:	b01b      	add	sp, #108	@ 0x6c
 801fa78:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801fa7c:	fffff800 	.word	0xfffff800

0801fa80 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>:
 801fa80:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801fa84:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	@ 0x28
 801fa88:	2d00      	cmp	r5, #0
 801fa8a:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 801fa8e:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	@ 0x24
 801fa92:	f89d 7030 	ldrb.w	r7, [sp, #48]	@ 0x30
 801fa96:	f89d c034 	ldrb.w	ip, [sp, #52]	@ 0x34
 801fa9a:	fb05 0e03 	mla	lr, r5, r3, r0
 801fa9e:	f2c0 808c 	blt.w	801fbba <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 801faa2:	45a9      	cmp	r9, r5
 801faa4:	f340 8089 	ble.w	801fbba <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 801faa8:	2800      	cmp	r0, #0
 801faaa:	f2c0 8084 	blt.w	801fbb6 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 801faae:	4580      	cmp	r8, r0
 801fab0:	f340 8081 	ble.w	801fbb6 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 801fab4:	ea4f 045e 	mov.w	r4, lr, lsr #1
 801fab8:	f01e 0f01 	tst.w	lr, #1
 801fabc:	5d16      	ldrb	r6, [r2, r4]
 801fabe:	bf0c      	ite	eq
 801fac0:	f006 060f 	andeq.w	r6, r6, #15
 801fac4:	1136      	asrne	r6, r6, #4
 801fac6:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 801faca:	b2f6      	uxtb	r6, r6
 801facc:	1c44      	adds	r4, r0, #1
 801face:	d477      	bmi.n	801fbc0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 801fad0:	45a0      	cmp	r8, r4
 801fad2:	dd75      	ble.n	801fbc0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 801fad4:	2f00      	cmp	r7, #0
 801fad6:	d075      	beq.n	801fbc4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x144>
 801fad8:	f10e 0a01 	add.w	sl, lr, #1
 801fadc:	ea4f 045a 	mov.w	r4, sl, lsr #1
 801fae0:	f01a 0f01 	tst.w	sl, #1
 801fae4:	5d14      	ldrb	r4, [r2, r4]
 801fae6:	bf0c      	ite	eq
 801fae8:	f004 040f 	andeq.w	r4, r4, #15
 801faec:	1124      	asrne	r4, r4, #4
 801faee:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 801faf2:	b2e4      	uxtb	r4, r4
 801faf4:	3501      	adds	r5, #1
 801faf6:	d469      	bmi.n	801fbcc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 801faf8:	45a9      	cmp	r9, r5
 801fafa:	dd67      	ble.n	801fbcc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 801fafc:	f1bc 0f00 	cmp.w	ip, #0
 801fb00:	d067      	beq.n	801fbd2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x152>
 801fb02:	2800      	cmp	r0, #0
 801fb04:	db60      	blt.n	801fbc8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 801fb06:	4580      	cmp	r8, r0
 801fb08:	dd5e      	ble.n	801fbc8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 801fb0a:	eb03 090e 	add.w	r9, r3, lr
 801fb0e:	ea4f 0559 	mov.w	r5, r9, lsr #1
 801fb12:	f019 0f01 	tst.w	r9, #1
 801fb16:	5d55      	ldrb	r5, [r2, r5]
 801fb18:	bf0c      	ite	eq
 801fb1a:	f005 050f 	andeq.w	r5, r5, #15
 801fb1e:	112d      	asrne	r5, r5, #4
 801fb20:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 801fb24:	b2ed      	uxtb	r5, r5
 801fb26:	3001      	adds	r0, #1
 801fb28:	d456      	bmi.n	801fbd8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 801fb2a:	4580      	cmp	r8, r0
 801fb2c:	dd54      	ble.n	801fbd8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 801fb2e:	2f00      	cmp	r7, #0
 801fb30:	d054      	beq.n	801fbdc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x15c>
 801fb32:	3301      	adds	r3, #1
 801fb34:	449e      	add	lr, r3
 801fb36:	ea4f 035e 	mov.w	r3, lr, lsr #1
 801fb3a:	f01e 0f01 	tst.w	lr, #1
 801fb3e:	5cd0      	ldrb	r0, [r2, r3]
 801fb40:	bf0c      	ite	eq
 801fb42:	f000 000f 	andeq.w	r0, r0, #15
 801fb46:	1100      	asrne	r0, r0, #4
 801fb48:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801fb4c:	b2c3      	uxtb	r3, r0
 801fb4e:	b2ba      	uxth	r2, r7
 801fb50:	fa1f fc8c 	uxth.w	ip, ip
 801fb54:	fb02 f00c 	mul.w	r0, r2, ip
 801fb58:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 801fb5c:	0112      	lsls	r2, r2, #4
 801fb5e:	fa1f fc8c 	uxth.w	ip, ip
 801fb62:	f5c2 7780 	rsb	r7, r2, #256	@ 0x100
 801fb66:	1a12      	subs	r2, r2, r0
 801fb68:	eba7 070c 	sub.w	r7, r7, ip
 801fb6c:	b292      	uxth	r2, r2
 801fb6e:	b2bf      	uxth	r7, r7
 801fb70:	4362      	muls	r2, r4
 801fb72:	fb06 2207 	mla	r2, r6, r7, r2
 801fb76:	fb0c 2505 	mla	r5, ip, r5, r2
 801fb7a:	fb00 5303 	mla	r3, r0, r3, r5
 801fb7e:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801fb82:	b1b3      	cbz	r3, 801fbb2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 801fb84:	f89d 2038 	ldrb.w	r2, [sp, #56]	@ 0x38
 801fb88:	435a      	muls	r2, r3
 801fb8a:	1c53      	adds	r3, r2, #1
 801fb8c:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801fb90:	4a2d      	ldr	r2, [pc, #180]	@ (801fc48 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1c8>)
 801fb92:	121b      	asrs	r3, r3, #8
 801fb94:	6812      	ldr	r2, [r2, #0]
 801fb96:	2bff      	cmp	r3, #255	@ 0xff
 801fb98:	ea4f 2612 	mov.w	r6, r2, lsr #8
 801fb9c:	d120      	bne.n	801fbe0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x160>
 801fb9e:	4b2b      	ldr	r3, [pc, #172]	@ (801fc4c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1cc>)
 801fba0:	0950      	lsrs	r0, r2, #5
 801fba2:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801fba6:	4033      	ands	r3, r6
 801fba8:	4318      	orrs	r0, r3
 801fbaa:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801fbae:	4302      	orrs	r2, r0
 801fbb0:	800a      	strh	r2, [r1, #0]
 801fbb2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801fbb6:	2600      	movs	r6, #0
 801fbb8:	e788      	b.n	801facc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x4c>
 801fbba:	2400      	movs	r4, #0
 801fbbc:	4626      	mov	r6, r4
 801fbbe:	e799      	b.n	801faf4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 801fbc0:	2400      	movs	r4, #0
 801fbc2:	e797      	b.n	801faf4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 801fbc4:	463c      	mov	r4, r7
 801fbc6:	e795      	b.n	801faf4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 801fbc8:	2500      	movs	r5, #0
 801fbca:	e7ac      	b.n	801fb26 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xa6>
 801fbcc:	2300      	movs	r3, #0
 801fbce:	461d      	mov	r5, r3
 801fbd0:	e7bd      	b.n	801fb4e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 801fbd2:	4663      	mov	r3, ip
 801fbd4:	4665      	mov	r5, ip
 801fbd6:	e7ba      	b.n	801fb4e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 801fbd8:	2300      	movs	r3, #0
 801fbda:	e7b8      	b.n	801fb4e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 801fbdc:	463b      	mov	r3, r7
 801fbde:	e7b6      	b.n	801fb4e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 801fbe0:	880d      	ldrh	r5, [r1, #0]
 801fbe2:	b29f      	uxth	r7, r3
 801fbe4:	122c      	asrs	r4, r5, #8
 801fbe6:	f3c2 4007 	ubfx	r0, r2, #16, #8
 801fbea:	43db      	mvns	r3, r3
 801fbec:	b2db      	uxtb	r3, r3
 801fbee:	fb10 f007 	smulbb	r0, r0, r7
 801fbf2:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 801fbf6:	fb04 0403 	mla	r4, r4, r3, r0
 801fbfa:	b2f6      	uxtb	r6, r6
 801fbfc:	10e8      	asrs	r0, r5, #3
 801fbfe:	b2d2      	uxtb	r2, r2
 801fc00:	00ed      	lsls	r5, r5, #3
 801fc02:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 801fc06:	fb12 f207 	smulbb	r2, r2, r7
 801fc0a:	fb16 f607 	smulbb	r6, r6, r7
 801fc0e:	b2ed      	uxtb	r5, r5
 801fc10:	b2a4      	uxth	r4, r4
 801fc12:	fb00 6603 	mla	r6, r0, r3, r6
 801fc16:	fb05 2303 	mla	r3, r5, r3, r2
 801fc1a:	b29a      	uxth	r2, r3
 801fc1c:	1c63      	adds	r3, r4, #1
 801fc1e:	b2b0      	uxth	r0, r6
 801fc20:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 801fc24:	1c53      	adds	r3, r2, #1
 801fc26:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801fc2a:	1c42      	adds	r2, r0, #1
 801fc2c:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801fc30:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
 801fc34:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801fc38:	0940      	lsrs	r0, r0, #5
 801fc3a:	4323      	orrs	r3, r4
 801fc3c:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801fc40:	4303      	orrs	r3, r0
 801fc42:	800b      	strh	r3, [r1, #0]
 801fc44:	e7b5      	b.n	801fbb2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 801fc46:	bf00      	nop
 801fc48:	200133e4 	.word	0x200133e4
 801fc4c:	00fff800 	.word	0x00fff800

0801fc50 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801fc50:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801fc54:	b097      	sub	sp, #92	@ 0x5c
 801fc56:	e9dd 4621 	ldrd	r4, r6, [sp, #132]	@ 0x84
 801fc5a:	9214      	str	r2, [sp, #80]	@ 0x50
 801fc5c:	9309      	str	r3, [sp, #36]	@ 0x24
 801fc5e:	9a25      	ldr	r2, [sp, #148]	@ 0x94
 801fc60:	f89d 30a4 	ldrb.w	r3, [sp, #164]	@ 0xa4
 801fc64:	910d      	str	r1, [sp, #52]	@ 0x34
 801fc66:	930f      	str	r3, [sp, #60]	@ 0x3c
 801fc68:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	@ 0x98
 801fc6c:	9015      	str	r0, [sp, #84]	@ 0x54
 801fc6e:	6850      	ldr	r0, [r2, #4]
 801fc70:	6812      	ldr	r2, [r2, #0]
 801fc72:	fb00 1303 	mla	r3, r0, r3, r1
 801fc76:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 801fc7a:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801fc7c:	689b      	ldr	r3, [r3, #8]
 801fc7e:	3301      	adds	r3, #1
 801fc80:	f023 0301 	bic.w	r3, r3, #1
 801fc84:	930a      	str	r3, [sp, #40]	@ 0x28
 801fc86:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801fc88:	681f      	ldr	r7, [r3, #0]
 801fc8a:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801fc8c:	2b00      	cmp	r3, #0
 801fc8e:	dc03      	bgt.n	801fc98 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801fc90:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 801fc92:	2b00      	cmp	r3, #0
 801fc94:	f340 8287 	ble.w	80201a6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x556>
 801fc98:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801fc9a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801fc9e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801fca2:	1e48      	subs	r0, r1, #1
 801fca4:	f102 3cff 	add.w	ip, r2, #4294967295
 801fca8:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801fcaa:	2b00      	cmp	r3, #0
 801fcac:	f340 80c4 	ble.w	801fe38 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801fcb0:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801fcb4:	ea4f 4326 	mov.w	r3, r6, asr #16
 801fcb8:	d406      	bmi.n	801fcc8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801fcba:	4586      	cmp	lr, r0
 801fcbc:	da04      	bge.n	801fcc8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801fcbe:	2b00      	cmp	r3, #0
 801fcc0:	db02      	blt.n	801fcc8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801fcc2:	4563      	cmp	r3, ip
 801fcc4:	f2c0 80b9 	blt.w	801fe3a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 801fcc8:	f11e 0e01 	adds.w	lr, lr, #1
 801fccc:	f100 80aa 	bmi.w	801fe24 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801fcd0:	4571      	cmp	r1, lr
 801fcd2:	f2c0 80a7 	blt.w	801fe24 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801fcd6:	3301      	adds	r3, #1
 801fcd8:	f100 80a4 	bmi.w	801fe24 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801fcdc:	429a      	cmp	r2, r3
 801fcde:	f2c0 80a1 	blt.w	801fe24 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801fce2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801fce4:	f9bd a028 	ldrsh.w	sl, [sp, #40]	@ 0x28
 801fce8:	930e      	str	r3, [sp, #56]	@ 0x38
 801fcea:	46c8      	mov	r8, r9
 801fcec:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801fcee:	2b00      	cmp	r3, #0
 801fcf0:	f340 80c3 	ble.w	801fe7a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 801fcf4:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801fcf6:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 801fcfa:	1423      	asrs	r3, r4, #16
 801fcfc:	ea4f 4026 	mov.w	r0, r6, asr #16
 801fd00:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801fd04:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801fd08:	f100 814d 	bmi.w	801ffa6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 801fd0c:	f10c 3bff 	add.w	fp, ip, #4294967295
 801fd10:	455b      	cmp	r3, fp
 801fd12:	f280 8148 	bge.w	801ffa6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 801fd16:	2800      	cmp	r0, #0
 801fd18:	f2c0 8145 	blt.w	801ffa6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 801fd1c:	f10e 3bff 	add.w	fp, lr, #4294967295
 801fd20:	4558      	cmp	r0, fp
 801fd22:	f280 8140 	bge.w	801ffa6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 801fd26:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
 801fd28:	fb00 3305 	mla	r3, r0, r5, r3
 801fd2c:	0858      	lsrs	r0, r3, #1
 801fd2e:	07dd      	lsls	r5, r3, #31
 801fd30:	f817 c000 	ldrb.w	ip, [r7, r0]
 801fd34:	bf54      	ite	pl
 801fd36:	f00c 0c0f 	andpl.w	ip, ip, #15
 801fd3a:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801fd3e:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801fd42:	fa5f fc8c 	uxtb.w	ip, ip
 801fd46:	2a00      	cmp	r2, #0
 801fd48:	f000 80db 	beq.w	801ff02 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b2>
 801fd4c:	1c58      	adds	r0, r3, #1
 801fd4e:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 801fd52:	07c0      	lsls	r0, r0, #31
 801fd54:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801fd58:	bf54      	ite	pl
 801fd5a:	f00e 0e0f 	andpl.w	lr, lr, #15
 801fd5e:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 801fd62:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 801fd66:	fa5f f08e 	uxtb.w	r0, lr
 801fd6a:	9010      	str	r0, [sp, #64]	@ 0x40
 801fd6c:	b1c9      	cbz	r1, 801fda2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801fd6e:	4453      	add	r3, sl
 801fd70:	0858      	lsrs	r0, r3, #1
 801fd72:	07dd      	lsls	r5, r3, #31
 801fd74:	5c38      	ldrb	r0, [r7, r0]
 801fd76:	bf54      	ite	pl
 801fd78:	f000 000f 	andpl.w	r0, r0, #15
 801fd7c:	1100      	asrmi	r0, r0, #4
 801fd7e:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801fd82:	3301      	adds	r3, #1
 801fd84:	b2c0      	uxtb	r0, r0
 801fd86:	900b      	str	r0, [sp, #44]	@ 0x2c
 801fd88:	0858      	lsrs	r0, r3, #1
 801fd8a:	07dd      	lsls	r5, r3, #31
 801fd8c:	f817 e000 	ldrb.w	lr, [r7, r0]
 801fd90:	bf54      	ite	pl
 801fd92:	f00e 030f 	andpl.w	r3, lr, #15
 801fd96:	ea4f 132e 	movmi.w	r3, lr, asr #4
 801fd9a:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801fd9e:	b2db      	uxtb	r3, r3
 801fda0:	9311      	str	r3, [sp, #68]	@ 0x44
 801fda2:	b292      	uxth	r2, r2
 801fda4:	b289      	uxth	r1, r1
 801fda6:	fb02 f301 	mul.w	r3, r2, r1
 801fdaa:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 801fdae:	0112      	lsls	r2, r2, #4
 801fdb0:	b289      	uxth	r1, r1
 801fdb2:	f5c2 7080 	rsb	r0, r2, #256	@ 0x100
 801fdb6:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 801fdb8:	1ad2      	subs	r2, r2, r3
 801fdba:	1a40      	subs	r0, r0, r1
 801fdbc:	b292      	uxth	r2, r2
 801fdbe:	436a      	muls	r2, r5
 801fdc0:	b280      	uxth	r0, r0
 801fdc2:	fb0c 2c00 	mla	ip, ip, r0, r2
 801fdc6:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 801fdc8:	fb01 c102 	mla	r1, r1, r2, ip
 801fdcc:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 801fdce:	fb03 1302 	mla	r3, r3, r2, r1
 801fdd2:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801fdd6:	b1db      	cbz	r3, 801fe10 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801fdd8:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801fdda:	4353      	muls	r3, r2
 801fddc:	1c5a      	adds	r2, r3, #1
 801fdde:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 801fde2:	4ac6      	ldr	r2, [pc, #792]	@ (80200fc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 801fde4:	121b      	asrs	r3, r3, #8
 801fde6:	6812      	ldr	r2, [r2, #0]
 801fde8:	2bff      	cmp	r3, #255	@ 0xff
 801fdea:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 801fdee:	f040 8099 	bne.w	801ff24 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d4>
 801fdf2:	0953      	lsrs	r3, r2, #5
 801fdf4:	f42c 6cff 	bic.w	ip, ip, #2040	@ 0x7f8
 801fdf8:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801fdfc:	f02c 0c07 	bic.w	ip, ip, #7
 801fe00:	ea43 0c0c 	orr.w	ip, r3, ip
 801fe04:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801fe08:	ea4c 0202 	orr.w	r2, ip, r2
 801fe0c:	f8a8 2000 	strh.w	r2, [r8]
 801fe10:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 801fe12:	441c      	add	r4, r3
 801fe14:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801fe16:	441e      	add	r6, r3
 801fe18:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801fe1a:	3b01      	subs	r3, #1
 801fe1c:	f108 0802 	add.w	r8, r8, #2
 801fe20:	930e      	str	r3, [sp, #56]	@ 0x38
 801fe22:	e763      	b.n	801fcec <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801fe24:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 801fe26:	441c      	add	r4, r3
 801fe28:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801fe2a:	441e      	add	r6, r3
 801fe2c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801fe2e:	3b01      	subs	r3, #1
 801fe30:	9309      	str	r3, [sp, #36]	@ 0x24
 801fe32:	f109 0902 	add.w	r9, r9, #2
 801fe36:	e737      	b.n	801fca8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801fe38:	d024      	beq.n	801fe84 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801fe3a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801fe3c:	9823      	ldr	r0, [sp, #140]	@ 0x8c
 801fe3e:	3b01      	subs	r3, #1
 801fe40:	fb00 4003 	mla	r0, r0, r3, r4
 801fe44:	1400      	asrs	r0, r0, #16
 801fe46:	f53f af4c 	bmi.w	801fce2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801fe4a:	3901      	subs	r1, #1
 801fe4c:	4288      	cmp	r0, r1
 801fe4e:	f6bf af48 	bge.w	801fce2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801fe52:	9924      	ldr	r1, [sp, #144]	@ 0x90
 801fe54:	fb01 6303 	mla	r3, r1, r3, r6
 801fe58:	141b      	asrs	r3, r3, #16
 801fe5a:	f53f af42 	bmi.w	801fce2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801fe5e:	3a01      	subs	r2, #1
 801fe60:	4293      	cmp	r3, r2
 801fe62:	f6bf af3e 	bge.w	801fce2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801fe66:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	@ 0x28
 801fe6a:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
 801fe6e:	930e      	str	r3, [sp, #56]	@ 0x38
 801fe70:	46c8      	mov	r8, r9
 801fe72:	f1bb 0f00 	cmp.w	fp, #0
 801fe76:	f300 80b7 	bgt.w	801ffe8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 801fe7a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801fe7c:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801fe80:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 801fe84:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801fe86:	2b00      	cmp	r3, #0
 801fe88:	f340 818d 	ble.w	80201a6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x556>
 801fe8c:	ee30 0a04 	vadd.f32	s0, s0, s8
 801fe90:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801fe94:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801fe98:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801fe9a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801fe9e:	ee31 1a05 	vadd.f32	s2, s2, s10
 801fea2:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801fea6:	eef0 6a62 	vmov.f32	s13, s5
 801feaa:	ee61 7a27 	vmul.f32	s15, s2, s15
 801feae:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801feb2:	ee77 2a62 	vsub.f32	s5, s14, s5
 801feb6:	ee16 4a90 	vmov	r4, s13
 801feba:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801febe:	eef0 6a43 	vmov.f32	s13, s6
 801fec2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801fec6:	ee12 2a90 	vmov	r2, s5
 801feca:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801fece:	fb92 f3f3 	sdiv	r3, r2, r3
 801fed2:	ee13 2a10 	vmov	r2, s6
 801fed6:	9323      	str	r3, [sp, #140]	@ 0x8c
 801fed8:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801feda:	fb92 f3f3 	sdiv	r3, r2, r3
 801fede:	9324      	str	r3, [sp, #144]	@ 0x90
 801fee0:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801fee2:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801fee4:	3b01      	subs	r3, #1
 801fee6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801feea:	930d      	str	r3, [sp, #52]	@ 0x34
 801feec:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801feee:	bf08      	it	eq
 801fef0:	4613      	moveq	r3, r2
 801fef2:	ee16 6a90 	vmov	r6, s13
 801fef6:	9309      	str	r3, [sp, #36]	@ 0x24
 801fef8:	eeb0 3a67 	vmov.f32	s6, s15
 801fefc:	eef0 2a47 	vmov.f32	s5, s14
 801ff00:	e6c3      	b.n	801fc8a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801ff02:	2900      	cmp	r1, #0
 801ff04:	f43f af4d 	beq.w	801fda2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801ff08:	eb0a 0003 	add.w	r0, sl, r3
 801ff0c:	0843      	lsrs	r3, r0, #1
 801ff0e:	07c0      	lsls	r0, r0, #31
 801ff10:	5cfb      	ldrb	r3, [r7, r3]
 801ff12:	bf54      	ite	pl
 801ff14:	f003 030f 	andpl.w	r3, r3, #15
 801ff18:	111b      	asrmi	r3, r3, #4
 801ff1a:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801ff1e:	b2db      	uxtb	r3, r3
 801ff20:	930b      	str	r3, [sp, #44]	@ 0x2c
 801ff22:	e73e      	b.n	801fda2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801ff24:	f8b8 e000 	ldrh.w	lr, [r8]
 801ff28:	fa1f fb83 	uxth.w	fp, r3
 801ff2c:	ea4f 202e 	mov.w	r0, lr, asr #8
 801ff30:	f3c2 4107 	ubfx	r1, r2, #16, #8
 801ff34:	43db      	mvns	r3, r3
 801ff36:	b2db      	uxtb	r3, r3
 801ff38:	fb11 f10b 	smulbb	r1, r1, fp
 801ff3c:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801ff40:	fb00 1003 	mla	r0, r0, r3, r1
 801ff44:	fa5f fc8c 	uxtb.w	ip, ip
 801ff48:	ea4f 01ee 	mov.w	r1, lr, asr #3
 801ff4c:	b2d2      	uxtb	r2, r2
 801ff4e:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801ff52:	b280      	uxth	r0, r0
 801ff54:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 801ff58:	fb1c fc0b 	smulbb	ip, ip, fp
 801ff5c:	fa5f fe8e 	uxtb.w	lr, lr
 801ff60:	fb12 fb0b 	smulbb	fp, r2, fp
 801ff64:	fb01 cc03 	mla	ip, r1, r3, ip
 801ff68:	fb0e bb03 	mla	fp, lr, r3, fp
 801ff6c:	1c43      	adds	r3, r0, #1
 801ff6e:	fa1f fc8c 	uxth.w	ip, ip
 801ff72:	fa1f fb8b 	uxth.w	fp, fp
 801ff76:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801ff7a:	f400 4378 	and.w	r3, r0, #63488	@ 0xf800
 801ff7e:	f10c 0101 	add.w	r1, ip, #1
 801ff82:	f10b 0001 	add.w	r0, fp, #1
 801ff86:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 801ff8a:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 801ff8e:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 801ff92:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801ff96:	4318      	orrs	r0, r3
 801ff98:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 801ff9c:	ea40 000c 	orr.w	r0, r0, ip
 801ffa0:	f8a8 0000 	strh.w	r0, [r8]
 801ffa4:	e734      	b.n	801fe10 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801ffa6:	f113 0b01 	adds.w	fp, r3, #1
 801ffaa:	f53f af31 	bmi.w	801fe10 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801ffae:	45dc      	cmp	ip, fp
 801ffb0:	f6ff af2e 	blt.w	801fe10 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801ffb4:	f110 0b01 	adds.w	fp, r0, #1
 801ffb8:	f53f af2a 	bmi.w	801fe10 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801ffbc:	45de      	cmp	lr, fp
 801ffbe:	f6ff af27 	blt.w	801fe10 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801ffc2:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 801ffc4:	9302      	str	r3, [sp, #8]
 801ffc6:	fa0f f38e 	sxth.w	r3, lr
 801ffca:	9301      	str	r3, [sp, #4]
 801ffcc:	fa0f f38c 	sxth.w	r3, ip
 801ffd0:	e9cd 0203 	strd	r0, r2, [sp, #12]
 801ffd4:	e9cd 1505 	strd	r1, r5, [sp, #20]
 801ffd8:	9300      	str	r3, [sp, #0]
 801ffda:	463a      	mov	r2, r7
 801ffdc:	4653      	mov	r3, sl
 801ffde:	4641      	mov	r1, r8
 801ffe0:	9815      	ldr	r0, [sp, #84]	@ 0x54
 801ffe2:	f7ff fd4d 	bl	801fa80 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>
 801ffe6:	e713      	b.n	801fe10 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801ffe8:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
 801ffea:	1422      	asrs	r2, r4, #16
 801ffec:	1433      	asrs	r3, r6, #16
 801ffee:	fb05 2303 	mla	r3, r5, r3, r2
 801fff2:	085a      	lsrs	r2, r3, #1
 801fff4:	07dd      	lsls	r5, r3, #31
 801fff6:	5cba      	ldrb	r2, [r7, r2]
 801fff8:	bf54      	ite	pl
 801fffa:	f002 020f 	andpl.w	r2, r2, #15
 801fffe:	1112      	asrmi	r2, r2, #4
 8020000:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8020004:	f3c4 3103 	ubfx	r1, r4, #12, #4
 8020008:	f3c6 3003 	ubfx	r0, r6, #12, #4
 802000c:	b2d2      	uxtb	r2, r2
 802000e:	2900      	cmp	r1, #0
 8020010:	d076      	beq.n	8020100 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 8020012:	f103 0e01 	add.w	lr, r3, #1
 8020016:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 802001a:	f01e 0f01 	tst.w	lr, #1
 802001e:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8020022:	bf0c      	ite	eq
 8020024:	f00c 0c0f 	andeq.w	ip, ip, #15
 8020028:	ea4f 1c2c 	movne.w	ip, ip, asr #4
 802002c:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8020030:	fa5f f58c 	uxtb.w	r5, ip
 8020034:	9512      	str	r5, [sp, #72]	@ 0x48
 8020036:	b300      	cbz	r0, 802007a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 8020038:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 802003a:	442b      	add	r3, r5
 802003c:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8020040:	07dd      	lsls	r5, r3, #31
 8020042:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8020046:	bf54      	ite	pl
 8020048:	f00c 0c0f 	andpl.w	ip, ip, #15
 802004c:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8020050:	3301      	adds	r3, #1
 8020052:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8020056:	fa5f f58c 	uxtb.w	r5, ip
 802005a:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 802005e:	950c      	str	r5, [sp, #48]	@ 0x30
 8020060:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8020064:	07dd      	lsls	r5, r3, #31
 8020066:	bf54      	ite	pl
 8020068:	f00c 0c0f 	andpl.w	ip, ip, #15
 802006c:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8020070:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8020074:	fa5f f38c 	uxtb.w	r3, ip
 8020078:	9313      	str	r3, [sp, #76]	@ 0x4c
 802007a:	b289      	uxth	r1, r1
 802007c:	b280      	uxth	r0, r0
 802007e:	fb01 f300 	mul.w	r3, r1, r0
 8020082:	ebc3 1000 	rsb	r0, r3, r0, lsl #4
 8020086:	0109      	lsls	r1, r1, #4
 8020088:	b280      	uxth	r0, r0
 802008a:	f5c1 7c80 	rsb	ip, r1, #256	@ 0x100
 802008e:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 8020090:	1ac9      	subs	r1, r1, r3
 8020092:	ebac 0c00 	sub.w	ip, ip, r0
 8020096:	b289      	uxth	r1, r1
 8020098:	4369      	muls	r1, r5
 802009a:	fa1f fc8c 	uxth.w	ip, ip
 802009e:	fb02 120c 	mla	r2, r2, ip, r1
 80200a2:	990c      	ldr	r1, [sp, #48]	@ 0x30
 80200a4:	fb00 2001 	mla	r0, r0, r1, r2
 80200a8:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 80200aa:	fb03 0302 	mla	r3, r3, r2, r0
 80200ae:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80200b2:	b1d3      	cbz	r3, 80200ea <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 80200b4:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 80200b6:	4353      	muls	r3, r2
 80200b8:	1c5a      	adds	r2, r3, #1
 80200ba:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 80200be:	4a0f      	ldr	r2, [pc, #60]	@ (80200fc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 80200c0:	121b      	asrs	r3, r3, #8
 80200c2:	6812      	ldr	r2, [r2, #0]
 80200c4:	2bff      	cmp	r3, #255	@ 0xff
 80200c6:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 80200ca:	d12d      	bne.n	8020128 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 80200cc:	0953      	lsrs	r3, r2, #5
 80200ce:	f42c 6cff 	bic.w	ip, ip, #2040	@ 0x7f8
 80200d2:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 80200d6:	f02c 0c07 	bic.w	ip, ip, #7
 80200da:	ea43 0c0c 	orr.w	ip, r3, ip
 80200de:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80200e2:	ea4c 0202 	orr.w	r2, ip, r2
 80200e6:	f8a8 2000 	strh.w	r2, [r8]
 80200ea:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 80200ec:	441c      	add	r4, r3
 80200ee:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 80200f0:	f108 0802 	add.w	r8, r8, #2
 80200f4:	441e      	add	r6, r3
 80200f6:	f10b 3bff 	add.w	fp, fp, #4294967295
 80200fa:	e6ba      	b.n	801fe72 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 80200fc:	200133e4 	.word	0x200133e4
 8020100:	2800      	cmp	r0, #0
 8020102:	d0ba      	beq.n	802007a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 8020104:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 8020106:	442b      	add	r3, r5
 8020108:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 802010c:	07db      	lsls	r3, r3, #31
 802010e:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8020112:	bf54      	ite	pl
 8020114:	f00c 0c0f 	andpl.w	ip, ip, #15
 8020118:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 802011c:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8020120:	fa5f f38c 	uxtb.w	r3, ip
 8020124:	930c      	str	r3, [sp, #48]	@ 0x30
 8020126:	e7a8      	b.n	802007a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 8020128:	f8b8 e000 	ldrh.w	lr, [r8]
 802012c:	fa1f fa83 	uxth.w	sl, r3
 8020130:	ea4f 202e 	mov.w	r0, lr, asr #8
 8020134:	f3c2 4107 	ubfx	r1, r2, #16, #8
 8020138:	43db      	mvns	r3, r3
 802013a:	b2db      	uxtb	r3, r3
 802013c:	fb11 f10a 	smulbb	r1, r1, sl
 8020140:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 8020144:	fb00 1003 	mla	r0, r0, r3, r1
 8020148:	b2d2      	uxtb	r2, r2
 802014a:	ea4f 01ee 	mov.w	r1, lr, asr #3
 802014e:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8020152:	fa5f fe8e 	uxtb.w	lr, lr
 8020156:	fb12 f20a 	smulbb	r2, r2, sl
 802015a:	fb0e 2203 	mla	r2, lr, r3, r2
 802015e:	fa5f fc8c 	uxtb.w	ip, ip
 8020162:	b280      	uxth	r0, r0
 8020164:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 8020168:	b292      	uxth	r2, r2
 802016a:	fb1c fc0a 	smulbb	ip, ip, sl
 802016e:	fb01 cc03 	mla	ip, r1, r3, ip
 8020172:	1c43      	adds	r3, r0, #1
 8020174:	1c51      	adds	r1, r2, #1
 8020176:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 802017a:	eb01 2112 	add.w	r1, r1, r2, lsr #8
 802017e:	fa1f fc8c 	uxth.w	ip, ip
 8020182:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 8020186:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
 802018a:	4308      	orrs	r0, r1
 802018c:	f10c 0101 	add.w	r1, ip, #1
 8020190:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8020194:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8020198:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 802019c:	ea40 000c 	orr.w	r0, r0, ip
 80201a0:	f8a8 0000 	strh.w	r0, [r8]
 80201a4:	e7a1      	b.n	80200ea <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 80201a6:	b017      	add	sp, #92	@ 0x5c
 80201a8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080201ac <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>:
 80201ac:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80201b0:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	@ 0x28
 80201b4:	2d00      	cmp	r5, #0
 80201b6:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 80201ba:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	@ 0x24
 80201be:	f89d 7030 	ldrb.w	r7, [sp, #48]	@ 0x30
 80201c2:	f89d c034 	ldrb.w	ip, [sp, #52]	@ 0x34
 80201c6:	fb05 0e03 	mla	lr, r5, r3, r0
 80201ca:	f2c0 80b0 	blt.w	802032e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 80201ce:	45a9      	cmp	r9, r5
 80201d0:	f340 80ad 	ble.w	802032e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 80201d4:	2800      	cmp	r0, #0
 80201d6:	f2c0 80a8 	blt.w	802032a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 80201da:	4580      	cmp	r8, r0
 80201dc:	f340 80a5 	ble.w	802032a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 80201e0:	ea4f 045e 	mov.w	r4, lr, lsr #1
 80201e4:	f01e 0f01 	tst.w	lr, #1
 80201e8:	5d16      	ldrb	r6, [r2, r4]
 80201ea:	bf0c      	ite	eq
 80201ec:	f006 060f 	andeq.w	r6, r6, #15
 80201f0:	1136      	asrne	r6, r6, #4
 80201f2:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 80201f6:	b2f6      	uxtb	r6, r6
 80201f8:	1c44      	adds	r4, r0, #1
 80201fa:	f100 809b 	bmi.w	8020334 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 80201fe:	45a0      	cmp	r8, r4
 8020200:	f340 8098 	ble.w	8020334 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 8020204:	2f00      	cmp	r7, #0
 8020206:	f000 8097 	beq.w	8020338 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x18c>
 802020a:	f10e 0a01 	add.w	sl, lr, #1
 802020e:	ea4f 045a 	mov.w	r4, sl, lsr #1
 8020212:	f01a 0f01 	tst.w	sl, #1
 8020216:	5d14      	ldrb	r4, [r2, r4]
 8020218:	bf0c      	ite	eq
 802021a:	f004 040f 	andeq.w	r4, r4, #15
 802021e:	1124      	asrne	r4, r4, #4
 8020220:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 8020224:	b2e4      	uxtb	r4, r4
 8020226:	3501      	adds	r5, #1
 8020228:	f100 808a 	bmi.w	8020340 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 802022c:	45a9      	cmp	r9, r5
 802022e:	f340 8087 	ble.w	8020340 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 8020232:	f1bc 0f00 	cmp.w	ip, #0
 8020236:	f000 8086 	beq.w	8020346 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x19a>
 802023a:	2800      	cmp	r0, #0
 802023c:	db7e      	blt.n	802033c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 802023e:	4580      	cmp	r8, r0
 8020240:	dd7c      	ble.n	802033c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 8020242:	eb03 090e 	add.w	r9, r3, lr
 8020246:	ea4f 0559 	mov.w	r5, r9, lsr #1
 802024a:	f019 0f01 	tst.w	r9, #1
 802024e:	5d55      	ldrb	r5, [r2, r5]
 8020250:	bf0c      	ite	eq
 8020252:	f005 050f 	andeq.w	r5, r5, #15
 8020256:	112d      	asrne	r5, r5, #4
 8020258:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 802025c:	b2ed      	uxtb	r5, r5
 802025e:	3001      	adds	r0, #1
 8020260:	d474      	bmi.n	802034c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 8020262:	4580      	cmp	r8, r0
 8020264:	dd72      	ble.n	802034c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 8020266:	2f00      	cmp	r7, #0
 8020268:	d072      	beq.n	8020350 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a4>
 802026a:	3301      	adds	r3, #1
 802026c:	449e      	add	lr, r3
 802026e:	ea4f 035e 	mov.w	r3, lr, lsr #1
 8020272:	f01e 0f01 	tst.w	lr, #1
 8020276:	5cd0      	ldrb	r0, [r2, r3]
 8020278:	bf0c      	ite	eq
 802027a:	f000 000f 	andeq.w	r0, r0, #15
 802027e:	1100      	asrne	r0, r0, #4
 8020280:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8020284:	b2c3      	uxtb	r3, r0
 8020286:	b2ba      	uxth	r2, r7
 8020288:	fa1f fc8c 	uxth.w	ip, ip
 802028c:	fb02 f00c 	mul.w	r0, r2, ip
 8020290:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 8020294:	0112      	lsls	r2, r2, #4
 8020296:	fa1f fc8c 	uxth.w	ip, ip
 802029a:	f5c2 7780 	rsb	r7, r2, #256	@ 0x100
 802029e:	1a12      	subs	r2, r2, r0
 80202a0:	eba7 070c 	sub.w	r7, r7, ip
 80202a4:	b292      	uxth	r2, r2
 80202a6:	b2bf      	uxth	r7, r7
 80202a8:	4362      	muls	r2, r4
 80202aa:	fb06 2207 	mla	r2, r6, r7, r2
 80202ae:	fb0c 2505 	mla	r5, ip, r5, r2
 80202b2:	fb00 5303 	mla	r3, r0, r3, r5
 80202b6:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80202ba:	b3a3      	cbz	r3, 8020326 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17a>
 80202bc:	4a25      	ldr	r2, [pc, #148]	@ (8020354 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a8>)
 80202be:	880e      	ldrh	r6, [r1, #0]
 80202c0:	6815      	ldr	r5, [r2, #0]
 80202c2:	1234      	asrs	r4, r6, #8
 80202c4:	b29a      	uxth	r2, r3
 80202c6:	f3c5 4007 	ubfx	r0, r5, #16, #8
 80202ca:	43db      	mvns	r3, r3
 80202cc:	b2db      	uxtb	r3, r3
 80202ce:	fb10 f002 	smulbb	r0, r0, r2
 80202d2:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 80202d6:	fb04 0403 	mla	r4, r4, r3, r0
 80202da:	f3c5 2707 	ubfx	r7, r5, #8, #8
 80202de:	10f0      	asrs	r0, r6, #3
 80202e0:	b2ed      	uxtb	r5, r5
 80202e2:	00f6      	lsls	r6, r6, #3
 80202e4:	fb17 f702 	smulbb	r7, r7, r2
 80202e8:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 80202ec:	fb15 f202 	smulbb	r2, r5, r2
 80202f0:	b2f6      	uxtb	r6, r6
 80202f2:	b2a4      	uxth	r4, r4
 80202f4:	fb00 7003 	mla	r0, r0, r3, r7
 80202f8:	fb06 2303 	mla	r3, r6, r3, r2
 80202fc:	b29a      	uxth	r2, r3
 80202fe:	1c63      	adds	r3, r4, #1
 8020300:	b280      	uxth	r0, r0
 8020302:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 8020306:	1c53      	adds	r3, r2, #1
 8020308:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 802030c:	1c42      	adds	r2, r0, #1
 802030e:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8020312:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
 8020316:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 802031a:	0940      	lsrs	r0, r0, #5
 802031c:	4323      	orrs	r3, r4
 802031e:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8020322:	4303      	orrs	r3, r0
 8020324:	800b      	strh	r3, [r1, #0]
 8020326:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802032a:	2600      	movs	r6, #0
 802032c:	e764      	b.n	80201f8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x4c>
 802032e:	2400      	movs	r4, #0
 8020330:	4626      	mov	r6, r4
 8020332:	e778      	b.n	8020226 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 8020334:	2400      	movs	r4, #0
 8020336:	e776      	b.n	8020226 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 8020338:	463c      	mov	r4, r7
 802033a:	e774      	b.n	8020226 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 802033c:	2500      	movs	r5, #0
 802033e:	e78e      	b.n	802025e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xb2>
 8020340:	2300      	movs	r3, #0
 8020342:	461d      	mov	r5, r3
 8020344:	e79f      	b.n	8020286 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8020346:	4663      	mov	r3, ip
 8020348:	4665      	mov	r5, ip
 802034a:	e79c      	b.n	8020286 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 802034c:	2300      	movs	r3, #0
 802034e:	e79a      	b.n	8020286 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8020350:	463b      	mov	r3, r7
 8020352:	e798      	b.n	8020286 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8020354:	200133e4 	.word	0x200133e4

08020358 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8020358:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802035c:	b093      	sub	sp, #76	@ 0x4c
 802035e:	461d      	mov	r5, r3
 8020360:	920c      	str	r2, [sp, #48]	@ 0x30
 8020362:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 8020364:	9107      	str	r1, [sp, #28]
 8020366:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	@ 0x88
 802036a:	9011      	str	r0, [sp, #68]	@ 0x44
 802036c:	6850      	ldr	r0, [r2, #4]
 802036e:	6812      	ldr	r2, [r2, #0]
 8020370:	fb00 1303 	mla	r3, r0, r3, r1
 8020374:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 8020378:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 802037a:	689b      	ldr	r3, [r3, #8]
 802037c:	3301      	adds	r3, #1
 802037e:	f023 0301 	bic.w	r3, r3, #1
 8020382:	9306      	str	r3, [sp, #24]
 8020384:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8020386:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	@ 0x74
 802038a:	681f      	ldr	r7, [r3, #0]
 802038c:	9b07      	ldr	r3, [sp, #28]
 802038e:	2b00      	cmp	r3, #0
 8020390:	dc03      	bgt.n	802039a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 8020392:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8020394:	2b00      	cmp	r3, #0
 8020396:	f340 8267 	ble.w	8020868 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 802039a:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 802039c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80203a0:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80203a4:	1e48      	subs	r0, r1, #1
 80203a6:	f102 3cff 	add.w	ip, r2, #4294967295
 80203aa:	2d00      	cmp	r5, #0
 80203ac:	f340 80b8 	ble.w	8020520 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 80203b0:	ea5f 4e24 	movs.w	lr, r4, asr #16
 80203b4:	ea4f 4326 	mov.w	r3, r6, asr #16
 80203b8:	d406      	bmi.n	80203c8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80203ba:	4586      	cmp	lr, r0
 80203bc:	da04      	bge.n	80203c8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80203be:	2b00      	cmp	r3, #0
 80203c0:	db02      	blt.n	80203c8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80203c2:	4563      	cmp	r3, ip
 80203c4:	f2c0 80ad 	blt.w	8020522 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ca>
 80203c8:	f11e 0e01 	adds.w	lr, lr, #1
 80203cc:	f100 80a0 	bmi.w	8020510 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 80203d0:	4571      	cmp	r1, lr
 80203d2:	f2c0 809d 	blt.w	8020510 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 80203d6:	3301      	adds	r3, #1
 80203d8:	f100 809a 	bmi.w	8020510 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 80203dc:	429a      	cmp	r2, r3
 80203de:	f2c0 8097 	blt.w	8020510 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 80203e2:	f9bd a018 	ldrsh.w	sl, [sp, #24]
 80203e6:	9509      	str	r5, [sp, #36]	@ 0x24
 80203e8:	46c8      	mov	r8, r9
 80203ea:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80203ec:	2b00      	cmp	r3, #0
 80203ee:	f340 80b6 	ble.w	802055e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x206>
 80203f2:	f3c4 3303 	ubfx	r3, r4, #12, #4
 80203f6:	9308      	str	r3, [sp, #32]
 80203f8:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 80203fa:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 80203fe:	1423      	asrs	r3, r4, #16
 8020400:	ea4f 4026 	mov.w	r0, r6, asr #16
 8020404:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8020408:	f100 813e 	bmi.w	8020688 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 802040c:	f10c 3bff 	add.w	fp, ip, #4294967295
 8020410:	455b      	cmp	r3, fp
 8020412:	f280 8139 	bge.w	8020688 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8020416:	2800      	cmp	r0, #0
 8020418:	f2c0 8136 	blt.w	8020688 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 802041c:	f10e 3bff 	add.w	fp, lr, #4294967295
 8020420:	4558      	cmp	r0, fp
 8020422:	f280 8131 	bge.w	8020688 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8020426:	9a06      	ldr	r2, [sp, #24]
 8020428:	fb00 3302 	mla	r3, r0, r2, r3
 802042c:	0858      	lsrs	r0, r3, #1
 802042e:	07da      	lsls	r2, r3, #31
 8020430:	f817 c000 	ldrb.w	ip, [r7, r0]
 8020434:	9a08      	ldr	r2, [sp, #32]
 8020436:	bf54      	ite	pl
 8020438:	f00c 0c0f 	andpl.w	ip, ip, #15
 802043c:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8020440:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8020444:	fa5f fc8c 	uxtb.w	ip, ip
 8020448:	2a00      	cmp	r2, #0
 802044a:	f000 80cb 	beq.w	80205e4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 802044e:	1c58      	adds	r0, r3, #1
 8020450:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 8020454:	07c0      	lsls	r0, r0, #31
 8020456:	f817 e00e 	ldrb.w	lr, [r7, lr]
 802045a:	bf54      	ite	pl
 802045c:	f00e 0e0f 	andpl.w	lr, lr, #15
 8020460:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 8020464:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 8020468:	fa5f fe8e 	uxtb.w	lr, lr
 802046c:	f8cd e034 	str.w	lr, [sp, #52]	@ 0x34
 8020470:	b1b9      	cbz	r1, 80204a2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 8020472:	4453      	add	r3, sl
 8020474:	0858      	lsrs	r0, r3, #1
 8020476:	07da      	lsls	r2, r3, #31
 8020478:	5c38      	ldrb	r0, [r7, r0]
 802047a:	bf54      	ite	pl
 802047c:	f000 000f 	andpl.w	r0, r0, #15
 8020480:	1100      	asrmi	r0, r0, #4
 8020482:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8020486:	b2c0      	uxtb	r0, r0
 8020488:	900a      	str	r0, [sp, #40]	@ 0x28
 802048a:	1c58      	adds	r0, r3, #1
 802048c:	0843      	lsrs	r3, r0, #1
 802048e:	07c2      	lsls	r2, r0, #31
 8020490:	5cfb      	ldrb	r3, [r7, r3]
 8020492:	bf54      	ite	pl
 8020494:	f003 030f 	andpl.w	r3, r3, #15
 8020498:	111b      	asrmi	r3, r3, #4
 802049a:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 802049e:	b2db      	uxtb	r3, r3
 80204a0:	930e      	str	r3, [sp, #56]	@ 0x38
 80204a2:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 80204a6:	b289      	uxth	r1, r1
 80204a8:	fb02 f301 	mul.w	r3, r2, r1
 80204ac:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 80204b0:	0112      	lsls	r2, r2, #4
 80204b2:	b289      	uxth	r1, r1
 80204b4:	f5c2 7080 	rsb	r0, r2, #256	@ 0x100
 80204b8:	1a40      	subs	r0, r0, r1
 80204ba:	fa1f fe80 	uxth.w	lr, r0
 80204be:	1ad2      	subs	r2, r2, r3
 80204c0:	980d      	ldr	r0, [sp, #52]	@ 0x34
 80204c2:	b292      	uxth	r2, r2
 80204c4:	4342      	muls	r2, r0
 80204c6:	fb0c 2c0e 	mla	ip, ip, lr, r2
 80204ca:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 80204cc:	fb01 c102 	mla	r1, r1, r2, ip
 80204d0:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 80204d2:	fb03 1302 	mla	r3, r3, r2, r1
 80204d6:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80204da:	2bff      	cmp	r3, #255	@ 0xff
 80204dc:	f040 8093 	bne.w	8020606 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 80204e0:	4bbe      	ldr	r3, [pc, #760]	@ (80207dc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 80204e2:	681a      	ldr	r2, [r3, #0]
 80204e4:	4bbe      	ldr	r3, [pc, #760]	@ (80207e0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 80204e6:	0951      	lsrs	r1, r2, #5
 80204e8:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 80204ec:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 80204f0:	430b      	orrs	r3, r1
 80204f2:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80204f6:	4313      	orrs	r3, r2
 80204f8:	f8a8 3000 	strh.w	r3, [r8]
 80204fc:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 80204fe:	441c      	add	r4, r3
 8020500:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8020502:	441e      	add	r6, r3
 8020504:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8020506:	3b01      	subs	r3, #1
 8020508:	f108 0802 	add.w	r8, r8, #2
 802050c:	9309      	str	r3, [sp, #36]	@ 0x24
 802050e:	e76c      	b.n	80203ea <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8020510:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 8020512:	441c      	add	r4, r3
 8020514:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8020516:	3d01      	subs	r5, #1
 8020518:	441e      	add	r6, r3
 802051a:	f109 0902 	add.w	r9, r9, #2
 802051e:	e744      	b.n	80203aa <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8020520:	d021      	beq.n	8020566 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 8020522:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 8020524:	1e6b      	subs	r3, r5, #1
 8020526:	fb00 4003 	mla	r0, r0, r3, r4
 802052a:	1400      	asrs	r0, r0, #16
 802052c:	f53f af59 	bmi.w	80203e2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8020530:	3901      	subs	r1, #1
 8020532:	4288      	cmp	r0, r1
 8020534:	f6bf af55 	bge.w	80203e2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8020538:	9920      	ldr	r1, [sp, #128]	@ 0x80
 802053a:	fb01 6303 	mla	r3, r1, r3, r6
 802053e:	141b      	asrs	r3, r3, #16
 8020540:	f53f af4f 	bmi.w	80203e2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8020544:	3a01      	subs	r2, #1
 8020546:	4293      	cmp	r3, r2
 8020548:	f6bf af4b 	bge.w	80203e2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 802054c:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8020550:	9308      	str	r3, [sp, #32]
 8020552:	46a8      	mov	r8, r5
 8020554:	46ce      	mov	lr, r9
 8020556:	f1b8 0f00 	cmp.w	r8, #0
 802055a:	f300 80b5 	bgt.w	80206c8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 802055e:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8020562:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 8020566:	9b07      	ldr	r3, [sp, #28]
 8020568:	2b00      	cmp	r3, #0
 802056a:	f340 817d 	ble.w	8020868 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 802056e:	ee30 0a04 	vadd.f32	s0, s0, s8
 8020572:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8020576:	eec7 7a00 	vdiv.f32	s15, s14, s0
 802057a:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 802057c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8020580:	ee31 1a05 	vadd.f32	s2, s2, s10
 8020584:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8020588:	eef0 6a62 	vmov.f32	s13, s5
 802058c:	ee61 7a27 	vmul.f32	s15, s2, s15
 8020590:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8020594:	ee77 2a62 	vsub.f32	s5, s14, s5
 8020598:	ee16 4a90 	vmov	r4, s13
 802059c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80205a0:	eef0 6a43 	vmov.f32	s13, s6
 80205a4:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80205a8:	ee12 2a90 	vmov	r2, s5
 80205ac:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80205b0:	fb92 f3f3 	sdiv	r3, r2, r3
 80205b4:	ee13 2a10 	vmov	r2, s6
 80205b8:	931f      	str	r3, [sp, #124]	@ 0x7c
 80205ba:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 80205bc:	fb92 f3f3 	sdiv	r3, r2, r3
 80205c0:	9320      	str	r3, [sp, #128]	@ 0x80
 80205c2:	9b07      	ldr	r3, [sp, #28]
 80205c4:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 80205c6:	3b01      	subs	r3, #1
 80205c8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80205cc:	9307      	str	r3, [sp, #28]
 80205ce:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 80205d0:	ee16 6a90 	vmov	r6, s13
 80205d4:	bf14      	ite	ne
 80205d6:	461d      	movne	r5, r3
 80205d8:	4615      	moveq	r5, r2
 80205da:	eeb0 3a67 	vmov.f32	s6, s15
 80205de:	eef0 2a47 	vmov.f32	s5, s14
 80205e2:	e6d3      	b.n	802038c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 80205e4:	2900      	cmp	r1, #0
 80205e6:	f43f af5c 	beq.w	80204a2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 80205ea:	eb0a 0003 	add.w	r0, sl, r3
 80205ee:	0843      	lsrs	r3, r0, #1
 80205f0:	07c0      	lsls	r0, r0, #31
 80205f2:	5cfb      	ldrb	r3, [r7, r3]
 80205f4:	bf54      	ite	pl
 80205f6:	f003 030f 	andpl.w	r3, r3, #15
 80205fa:	111b      	asrmi	r3, r3, #4
 80205fc:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8020600:	b2db      	uxtb	r3, r3
 8020602:	930a      	str	r3, [sp, #40]	@ 0x28
 8020604:	e74d      	b.n	80204a2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 8020606:	2b00      	cmp	r3, #0
 8020608:	f43f af78 	beq.w	80204fc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 802060c:	4a73      	ldr	r2, [pc, #460]	@ (80207dc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 802060e:	f8b8 c000 	ldrh.w	ip, [r8]
 8020612:	6810      	ldr	r0, [r2, #0]
 8020614:	fa1f fe83 	uxth.w	lr, r3
 8020618:	ea4f 212c 	mov.w	r1, ip, asr #8
 802061c:	f3c0 4207 	ubfx	r2, r0, #16, #8
 8020620:	43db      	mvns	r3, r3
 8020622:	b2db      	uxtb	r3, r3
 8020624:	fb12 f20e 	smulbb	r2, r2, lr
 8020628:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 802062c:	fb01 2103 	mla	r1, r1, r3, r2
 8020630:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 8020634:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8020638:	b2c0      	uxtb	r0, r0
 802063a:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 802063e:	fb1b fb0e 	smulbb	fp, fp, lr
 8020642:	b289      	uxth	r1, r1
 8020644:	fb10 fe0e 	smulbb	lr, r0, lr
 8020648:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 802064c:	fa5f fc8c 	uxtb.w	ip, ip
 8020650:	fb02 b203 	mla	r2, r2, r3, fp
 8020654:	1c48      	adds	r0, r1, #1
 8020656:	fb0c e303 	mla	r3, ip, r3, lr
 802065a:	b292      	uxth	r2, r2
 802065c:	b29b      	uxth	r3, r3
 802065e:	eb00 2111 	add.w	r1, r0, r1, lsr #8
 8020662:	f401 4078 	and.w	r0, r1, #63488	@ 0xf800
 8020666:	f102 0b01 	add.w	fp, r2, #1
 802066a:	1c59      	adds	r1, r3, #1
 802066c:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 8020670:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 8020674:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 8020678:	0952      	lsrs	r2, r2, #5
 802067a:	4301      	orrs	r1, r0
 802067c:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8020680:	4311      	orrs	r1, r2
 8020682:	f8a8 1000 	strh.w	r1, [r8]
 8020686:	e739      	b.n	80204fc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8020688:	f113 0b01 	adds.w	fp, r3, #1
 802068c:	f53f af36 	bmi.w	80204fc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8020690:	45dc      	cmp	ip, fp
 8020692:	f6ff af33 	blt.w	80204fc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8020696:	f110 0b01 	adds.w	fp, r0, #1
 802069a:	f53f af2f 	bmi.w	80204fc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 802069e:	45de      	cmp	lr, fp
 80206a0:	f6ff af2c 	blt.w	80204fc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 80206a4:	9a08      	ldr	r2, [sp, #32]
 80206a6:	9302      	str	r3, [sp, #8]
 80206a8:	fa0f f38e 	sxth.w	r3, lr
 80206ac:	9301      	str	r3, [sp, #4]
 80206ae:	fa0f f38c 	sxth.w	r3, ip
 80206b2:	e9cd 0203 	strd	r0, r2, [sp, #12]
 80206b6:	9105      	str	r1, [sp, #20]
 80206b8:	9300      	str	r3, [sp, #0]
 80206ba:	463a      	mov	r2, r7
 80206bc:	4653      	mov	r3, sl
 80206be:	4641      	mov	r1, r8
 80206c0:	9811      	ldr	r0, [sp, #68]	@ 0x44
 80206c2:	f7ff fd73 	bl	80201ac <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>
 80206c6:	e719      	b.n	80204fc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 80206c8:	9906      	ldr	r1, [sp, #24]
 80206ca:	1422      	asrs	r2, r4, #16
 80206cc:	1433      	asrs	r3, r6, #16
 80206ce:	fb01 2303 	mla	r3, r1, r3, r2
 80206d2:	085a      	lsrs	r2, r3, #1
 80206d4:	07d9      	lsls	r1, r3, #31
 80206d6:	5cba      	ldrb	r2, [r7, r2]
 80206d8:	bf54      	ite	pl
 80206da:	f002 020f 	andpl.w	r2, r2, #15
 80206de:	1112      	asrmi	r2, r2, #4
 80206e0:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 80206e4:	f3c4 3003 	ubfx	r0, r4, #12, #4
 80206e8:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 80206ec:	b2d2      	uxtb	r2, r2
 80206ee:	2800      	cmp	r0, #0
 80206f0:	d062      	beq.n	80207b8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x460>
 80206f2:	f103 0a01 	add.w	sl, r3, #1
 80206f6:	ea4f 015a 	mov.w	r1, sl, lsr #1
 80206fa:	f01a 0f01 	tst.w	sl, #1
 80206fe:	5c79      	ldrb	r1, [r7, r1]
 8020700:	bf0c      	ite	eq
 8020702:	f001 010f 	andeq.w	r1, r1, #15
 8020706:	1109      	asrne	r1, r1, #4
 8020708:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 802070c:	b2c9      	uxtb	r1, r1
 802070e:	910f      	str	r1, [sp, #60]	@ 0x3c
 8020710:	f1bc 0f00 	cmp.w	ip, #0
 8020714:	d019      	beq.n	802074a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 8020716:	9908      	ldr	r1, [sp, #32]
 8020718:	440b      	add	r3, r1
 802071a:	0859      	lsrs	r1, r3, #1
 802071c:	f013 0f01 	tst.w	r3, #1
 8020720:	5c79      	ldrb	r1, [r7, r1]
 8020722:	bf0c      	ite	eq
 8020724:	f001 010f 	andeq.w	r1, r1, #15
 8020728:	1109      	asrne	r1, r1, #4
 802072a:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 802072e:	b2c9      	uxtb	r1, r1
 8020730:	3301      	adds	r3, #1
 8020732:	910b      	str	r1, [sp, #44]	@ 0x2c
 8020734:	0859      	lsrs	r1, r3, #1
 8020736:	07db      	lsls	r3, r3, #31
 8020738:	5c79      	ldrb	r1, [r7, r1]
 802073a:	bf54      	ite	pl
 802073c:	f001 010f 	andpl.w	r1, r1, #15
 8020740:	1109      	asrmi	r1, r1, #4
 8020742:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8020746:	b2c9      	uxtb	r1, r1
 8020748:	9110      	str	r1, [sp, #64]	@ 0x40
 802074a:	b280      	uxth	r0, r0
 802074c:	fa1f fc8c 	uxth.w	ip, ip
 8020750:	fb00 f30c 	mul.w	r3, r0, ip
 8020754:	ebc3 1c0c 	rsb	ip, r3, ip, lsl #4
 8020758:	0100      	lsls	r0, r0, #4
 802075a:	fa1f fc8c 	uxth.w	ip, ip
 802075e:	f5c0 7180 	rsb	r1, r0, #256	@ 0x100
 8020762:	eba1 010c 	sub.w	r1, r1, ip
 8020766:	fa1f fa81 	uxth.w	sl, r1
 802076a:	1ac0      	subs	r0, r0, r3
 802076c:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 802076e:	b280      	uxth	r0, r0
 8020770:	4348      	muls	r0, r1
 8020772:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8020774:	fb02 020a 	mla	r2, r2, sl, r0
 8020778:	fb0c 2c01 	mla	ip, ip, r1, r2
 802077c:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 802077e:	fb03 c302 	mla	r3, r3, r2, ip
 8020782:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8020786:	2bff      	cmp	r3, #255	@ 0xff
 8020788:	d12c      	bne.n	80207e4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48c>
 802078a:	4b14      	ldr	r3, [pc, #80]	@ (80207dc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 802078c:	681a      	ldr	r2, [r3, #0]
 802078e:	4b14      	ldr	r3, [pc, #80]	@ (80207e0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 8020790:	0951      	lsrs	r1, r2, #5
 8020792:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 8020796:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 802079a:	430b      	orrs	r3, r1
 802079c:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80207a0:	4313      	orrs	r3, r2
 80207a2:	f8ae 3000 	strh.w	r3, [lr]
 80207a6:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 80207a8:	441c      	add	r4, r3
 80207aa:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 80207ac:	f10e 0e02 	add.w	lr, lr, #2
 80207b0:	441e      	add	r6, r3
 80207b2:	f108 38ff 	add.w	r8, r8, #4294967295
 80207b6:	e6ce      	b.n	8020556 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 80207b8:	f1bc 0f00 	cmp.w	ip, #0
 80207bc:	d0c5      	beq.n	802074a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 80207be:	9908      	ldr	r1, [sp, #32]
 80207c0:	440b      	add	r3, r1
 80207c2:	0859      	lsrs	r1, r3, #1
 80207c4:	07db      	lsls	r3, r3, #31
 80207c6:	5c79      	ldrb	r1, [r7, r1]
 80207c8:	bf54      	ite	pl
 80207ca:	f001 010f 	andpl.w	r1, r1, #15
 80207ce:	1109      	asrmi	r1, r1, #4
 80207d0:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 80207d4:	b2c9      	uxtb	r1, r1
 80207d6:	910b      	str	r1, [sp, #44]	@ 0x2c
 80207d8:	e7b7      	b.n	802074a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 80207da:	bf00      	nop
 80207dc:	200133e4 	.word	0x200133e4
 80207e0:	fffff800 	.word	0xfffff800
 80207e4:	2b00      	cmp	r3, #0
 80207e6:	d0de      	beq.n	80207a6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 80207e8:	4a21      	ldr	r2, [pc, #132]	@ (8020870 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>)
 80207ea:	f8be c000 	ldrh.w	ip, [lr]
 80207ee:	6810      	ldr	r0, [r2, #0]
 80207f0:	fa1f fa83 	uxth.w	sl, r3
 80207f4:	ea4f 212c 	mov.w	r1, ip, asr #8
 80207f8:	f3c0 4207 	ubfx	r2, r0, #16, #8
 80207fc:	43db      	mvns	r3, r3
 80207fe:	b2db      	uxtb	r3, r3
 8020800:	fb12 f20a 	smulbb	r2, r2, sl
 8020804:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 8020808:	fb01 2103 	mla	r1, r1, r3, r2
 802080c:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 8020810:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8020814:	b2c0      	uxtb	r0, r0
 8020816:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 802081a:	fa5f fc8c 	uxtb.w	ip, ip
 802081e:	fb10 f00a 	smulbb	r0, r0, sl
 8020822:	fb0c 0003 	mla	r0, ip, r3, r0
 8020826:	b289      	uxth	r1, r1
 8020828:	fb1b fb0a 	smulbb	fp, fp, sl
 802082c:	b280      	uxth	r0, r0
 802082e:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 8020832:	fb02 b203 	mla	r2, r2, r3, fp
 8020836:	1c4b      	adds	r3, r1, #1
 8020838:	f100 0b01 	add.w	fp, r0, #1
 802083c:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8020840:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
 8020844:	b292      	uxth	r2, r2
 8020846:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
 802084a:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
 802084e:	ea4b 0101 	orr.w	r1, fp, r1
 8020852:	f102 0b01 	add.w	fp, r2, #1
 8020856:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 802085a:	0952      	lsrs	r2, r2, #5
 802085c:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8020860:	4311      	orrs	r1, r2
 8020862:	f8ae 1000 	strh.w	r1, [lr]
 8020866:	e79e      	b.n	80207a6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 8020868:	b013      	add	sp, #76	@ 0x4c
 802086a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802086e:	bf00      	nop
 8020870:	200133e4 	.word	0x200133e4

08020874 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>:
 8020874:	b570      	push	{r4, r5, r6, lr}
 8020876:	1208      	asrs	r0, r1, #8
 8020878:	b29e      	uxth	r6, r3
 802087a:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 802087e:	1213      	asrs	r3, r2, #8
 8020880:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 8020884:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 8020888:	fb13 f305 	smulbb	r3, r3, r5
 802088c:	fb10 f006 	smulbb	r0, r0, r6
 8020890:	4418      	add	r0, r3
 8020892:	10cc      	asrs	r4, r1, #3
 8020894:	10d3      	asrs	r3, r2, #3
 8020896:	f004 04fc 	and.w	r4, r4, #252	@ 0xfc
 802089a:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 802089e:	fb13 f305 	smulbb	r3, r3, r5
 80208a2:	fb14 f406 	smulbb	r4, r4, r6
 80208a6:	00c9      	lsls	r1, r1, #3
 80208a8:	00d2      	lsls	r2, r2, #3
 80208aa:	441c      	add	r4, r3
 80208ac:	b2d2      	uxtb	r2, r2
 80208ae:	b2cb      	uxtb	r3, r1
 80208b0:	fb12 f205 	smulbb	r2, r2, r5
 80208b4:	b280      	uxth	r0, r0
 80208b6:	fb13 f306 	smulbb	r3, r3, r6
 80208ba:	4413      	add	r3, r2
 80208bc:	1c42      	adds	r2, r0, #1
 80208be:	b29b      	uxth	r3, r3
 80208c0:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 80208c4:	f400 4278 	and.w	r2, r0, #63488	@ 0xf800
 80208c8:	1c58      	adds	r0, r3, #1
 80208ca:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 80208ce:	b2a4      	uxth	r4, r4
 80208d0:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 80208d4:	4310      	orrs	r0, r2
 80208d6:	1c62      	adds	r2, r4, #1
 80208d8:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 80208dc:	0964      	lsrs	r4, r4, #5
 80208de:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 80208e2:	4320      	orrs	r0, r4
 80208e4:	bd70      	pop	{r4, r5, r6, pc}
	...

080208e8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 80208e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80208ec:	b08f      	sub	sp, #60	@ 0x3c
 80208ee:	461c      	mov	r4, r3
 80208f0:	f89d 7064 	ldrb.w	r7, [sp, #100]	@ 0x64
 80208f4:	9004      	str	r0, [sp, #16]
 80208f6:	460d      	mov	r5, r1
 80208f8:	4616      	mov	r6, r2
 80208fa:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 80208fc:	2f00      	cmp	r7, #0
 80208fe:	f000 80f6 	beq.w	8020aee <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x206>
 8020902:	6820      	ldr	r0, [r4, #0]
 8020904:	6861      	ldr	r1, [r4, #4]
 8020906:	aa0a      	add	r2, sp, #40	@ 0x28
 8020908:	c203      	stmia	r2!, {r0, r1}
 802090a:	6818      	ldr	r0, [r3, #0]
 802090c:	6859      	ldr	r1, [r3, #4]
 802090e:	aa0c      	add	r2, sp, #48	@ 0x30
 8020910:	c203      	stmia	r2!, {r0, r1}
 8020912:	a80a      	add	r0, sp, #40	@ 0x28
 8020914:	f7ee fe66 	bl	800f5e4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8020918:	4621      	mov	r1, r4
 802091a:	a80c      	add	r0, sp, #48	@ 0x30
 802091c:	f7ee fe8a 	bl	800f634 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8020920:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	@ 0x30
 8020924:	f9bd b036 	ldrsh.w	fp, [sp, #54]	@ 0x36
 8020928:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	@ 0x34
 802092c:	f002 0301 	and.w	r3, r2, #1
 8020930:	9306      	str	r3, [sp, #24]
 8020932:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 8020936:	f003 0101 	and.w	r1, r3, #1
 802093a:	9105      	str	r1, [sp, #20]
 802093c:	9805      	ldr	r0, [sp, #20]
 802093e:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	@ 0x32
 8020942:	4403      	add	r3, r0
 8020944:	fb01 2303 	mla	r3, r1, r3, r2
 8020948:	f04f 0802 	mov.w	r8, #2
 802094c:	fb93 f3f8 	sdiv	r3, r3, r8
 8020950:	441d      	add	r5, r3
 8020952:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 8020956:	441a      	add	r2, r3
 8020958:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 802095c:	f8ad 2030 	strh.w	r2, [sp, #48]	@ 0x30
 8020960:	4419      	add	r1, r3
 8020962:	4b64      	ldr	r3, [pc, #400]	@ (8020af4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
 8020964:	f8ad 1032 	strh.w	r1, [sp, #50]	@ 0x32
 8020968:	6818      	ldr	r0, [r3, #0]
 802096a:	6803      	ldr	r3, [r0, #0]
 802096c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 802096e:	4798      	blx	r3
 8020970:	4a61      	ldr	r2, [pc, #388]	@ (8020af8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x210>)
 8020972:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	@ 0x32
 8020976:	8813      	ldrh	r3, [r2, #0]
 8020978:	f9bd a030 	ldrsh.w	sl, [sp, #48]	@ 0x30
 802097c:	2fff      	cmp	r7, #255	@ 0xff
 802097e:	fb03 a404 	mla	r4, r3, r4, sl
 8020982:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8020986:	f106 0604 	add.w	r6, r6, #4
 802098a:	4611      	mov	r1, r2
 802098c:	fb03 fb0b 	mul.w	fp, r3, fp
 8020990:	d06b      	beq.n	8020a6a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x182>
 8020992:	f1c7 03ff 	rsb	r3, r7, #255	@ 0xff
 8020996:	9303      	str	r3, [sp, #12]
 8020998:	eb04 034b 	add.w	r3, r4, fp, lsl #1
 802099c:	e9cd 3207 	strd	r3, r2, [sp, #28]
 80209a0:	f8cd 8024 	str.w	r8, [sp, #36]	@ 0x24
 80209a4:	9b07      	ldr	r3, [sp, #28]
 80209a6:	42a3      	cmp	r3, r4
 80209a8:	f240 809c 	bls.w	8020ae4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
 80209ac:	9b06      	ldr	r3, [sp, #24]
 80209ae:	2b00      	cmp	r3, #0
 80209b0:	d039      	beq.n	8020a26 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13e>
 80209b2:	782b      	ldrb	r3, [r5, #0]
 80209b4:	8822      	ldrh	r2, [r4, #0]
 80209b6:	9804      	ldr	r0, [sp, #16]
 80209b8:	f003 030f 	and.w	r3, r3, #15
 80209bc:	f105 0801 	add.w	r8, r5, #1
 80209c0:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 80209c4:	9b03      	ldr	r3, [sp, #12]
 80209c6:	9300      	str	r3, [sp, #0]
 80209c8:	463b      	mov	r3, r7
 80209ca:	f7ff ff53 	bl	8020874 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 80209ce:	f824 0b02 	strh.w	r0, [r4], #2
 80209d2:	f109 3bff 	add.w	fp, r9, #4294967295
 80209d6:	f1bb 0f01 	cmp.w	fp, #1
 80209da:	46a2      	mov	sl, r4
 80209dc:	f104 0404 	add.w	r4, r4, #4
 80209e0:	dd24      	ble.n	8020a2c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x144>
 80209e2:	f898 3000 	ldrb.w	r3, [r8]
 80209e6:	f834 2c04 	ldrh.w	r2, [r4, #-4]
 80209ea:	9804      	ldr	r0, [sp, #16]
 80209ec:	091b      	lsrs	r3, r3, #4
 80209ee:	f1ab 0b02 	sub.w	fp, fp, #2
 80209f2:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 80209f6:	9b03      	ldr	r3, [sp, #12]
 80209f8:	9300      	str	r3, [sp, #0]
 80209fa:	463b      	mov	r3, r7
 80209fc:	f7ff ff3a 	bl	8020874 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 8020a00:	f824 0c04 	strh.w	r0, [r4, #-4]
 8020a04:	f818 3b01 	ldrb.w	r3, [r8], #1
 8020a08:	f834 2c02 	ldrh.w	r2, [r4, #-2]
 8020a0c:	9804      	ldr	r0, [sp, #16]
 8020a0e:	f003 030f 	and.w	r3, r3, #15
 8020a12:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 8020a16:	9b03      	ldr	r3, [sp, #12]
 8020a18:	9300      	str	r3, [sp, #0]
 8020a1a:	463b      	mov	r3, r7
 8020a1c:	f7ff ff2a 	bl	8020874 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 8020a20:	f824 0c02 	strh.w	r0, [r4, #-2]
 8020a24:	e7d7      	b.n	80209d6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xee>
 8020a26:	46a8      	mov	r8, r5
 8020a28:	46cb      	mov	fp, r9
 8020a2a:	e7d4      	b.n	80209d6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xee>
 8020a2c:	d10e      	bne.n	8020a4c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x164>
 8020a2e:	f898 3000 	ldrb.w	r3, [r8]
 8020a32:	f8ba 2000 	ldrh.w	r2, [sl]
 8020a36:	9804      	ldr	r0, [sp, #16]
 8020a38:	091b      	lsrs	r3, r3, #4
 8020a3a:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 8020a3e:	9b03      	ldr	r3, [sp, #12]
 8020a40:	9300      	str	r3, [sp, #0]
 8020a42:	463b      	mov	r3, r7
 8020a44:	f7ff ff16 	bl	8020874 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 8020a48:	f82a 0b02 	strh.w	r0, [sl], #2
 8020a4c:	9b08      	ldr	r3, [sp, #32]
 8020a4e:	9a05      	ldr	r2, [sp, #20]
 8020a50:	881c      	ldrh	r4, [r3, #0]
 8020a52:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 8020a56:	eba4 0409 	sub.w	r4, r4, r9
 8020a5a:	4413      	add	r3, r2
 8020a5c:	eb0a 0444 	add.w	r4, sl, r4, lsl #1
 8020a60:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8020a62:	fb93 f3f2 	sdiv	r3, r3, r2
 8020a66:	441d      	add	r5, r3
 8020a68:	e79c      	b.n	80209a4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xbc>
 8020a6a:	eb04 0b4b 	add.w	fp, r4, fp, lsl #1
 8020a6e:	45a3      	cmp	fp, r4
 8020a70:	d938      	bls.n	8020ae4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
 8020a72:	9b06      	ldr	r3, [sp, #24]
 8020a74:	b1f3      	cbz	r3, 8020ab4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1cc>
 8020a76:	782b      	ldrb	r3, [r5, #0]
 8020a78:	f003 030f 	and.w	r3, r3, #15
 8020a7c:	1c6a      	adds	r2, r5, #1
 8020a7e:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8020a82:	8023      	strh	r3, [r4, #0]
 8020a84:	f109 30ff 	add.w	r0, r9, #4294967295
 8020a88:	3402      	adds	r4, #2
 8020a8a:	2801      	cmp	r0, #1
 8020a8c:	4623      	mov	r3, r4
 8020a8e:	f104 0404 	add.w	r4, r4, #4
 8020a92:	dd12      	ble.n	8020aba <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1d2>
 8020a94:	7813      	ldrb	r3, [r2, #0]
 8020a96:	091b      	lsrs	r3, r3, #4
 8020a98:	3802      	subs	r0, #2
 8020a9a:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8020a9e:	f824 3c04 	strh.w	r3, [r4, #-4]
 8020aa2:	f812 3b01 	ldrb.w	r3, [r2], #1
 8020aa6:	f003 030f 	and.w	r3, r3, #15
 8020aaa:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8020aae:	f824 3c02 	strh.w	r3, [r4, #-2]
 8020ab2:	e7ea      	b.n	8020a8a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
 8020ab4:	462a      	mov	r2, r5
 8020ab6:	4648      	mov	r0, r9
 8020ab8:	e7e7      	b.n	8020a8a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
 8020aba:	d106      	bne.n	8020aca <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e2>
 8020abc:	7812      	ldrb	r2, [r2, #0]
 8020abe:	0912      	lsrs	r2, r2, #4
 8020ac0:	3302      	adds	r3, #2
 8020ac2:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 8020ac6:	f823 2c02 	strh.w	r2, [r3, #-2]
 8020aca:	880c      	ldrh	r4, [r1, #0]
 8020acc:	9a05      	ldr	r2, [sp, #20]
 8020ace:	eba4 0409 	sub.w	r4, r4, r9
 8020ad2:	eb03 0444 	add.w	r4, r3, r4, lsl #1
 8020ad6:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 8020ada:	4413      	add	r3, r2
 8020adc:	fb93 f3f8 	sdiv	r3, r3, r8
 8020ae0:	441d      	add	r5, r3
 8020ae2:	e7c4      	b.n	8020a6e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x186>
 8020ae4:	4b03      	ldr	r3, [pc, #12]	@ (8020af4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
 8020ae6:	6818      	ldr	r0, [r3, #0]
 8020ae8:	6803      	ldr	r3, [r0, #0]
 8020aea:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8020aec:	4798      	blx	r3
 8020aee:	b00f      	add	sp, #60	@ 0x3c
 8020af0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8020af4:	200133d4 	.word	0x200133d4
 8020af8:	200133cc 	.word	0x200133cc

08020afc <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>:
 8020afc:	b5f0      	push	{r4, r5, r6, r7, lr}
 8020afe:	f89d 5014 	ldrb.w	r5, [sp, #20]
 8020b02:	2dff      	cmp	r5, #255	@ 0xff
 8020b04:	ea4f 2711 	mov.w	r7, r1, lsr #8
 8020b08:	d10c      	bne.n	8020b24 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x28>
 8020b0a:	2bff      	cmp	r3, #255	@ 0xff
 8020b0c:	d10a      	bne.n	8020b24 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x28>
 8020b0e:	4b25      	ldr	r3, [pc, #148]	@ (8020ba4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0xa8>)
 8020b10:	0948      	lsrs	r0, r1, #5
 8020b12:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8020b16:	403b      	ands	r3, r7
 8020b18:	4318      	orrs	r0, r3
 8020b1a:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8020b1e:	4308      	orrs	r0, r1
 8020b20:	b280      	uxth	r0, r0
 8020b22:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8020b24:	fb15 f503 	smulbb	r5, r5, r3
 8020b28:	b2ab      	uxth	r3, r5
 8020b2a:	1c5d      	adds	r5, r3, #1
 8020b2c:	eb05 2513 	add.w	r5, r5, r3, lsr #8
 8020b30:	1214      	asrs	r4, r2, #8
 8020b32:	f3c5 2507 	ubfx	r5, r5, #8, #8
 8020b36:	fa1f fc85 	uxth.w	ip, r5
 8020b3a:	10d6      	asrs	r6, r2, #3
 8020b3c:	00d0      	lsls	r0, r2, #3
 8020b3e:	43ed      	mvns	r5, r5
 8020b40:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 8020b44:	f3c1 4207 	ubfx	r2, r1, #16, #8
 8020b48:	b2eb      	uxtb	r3, r5
 8020b4a:	b2c0      	uxtb	r0, r0
 8020b4c:	fb12 f20c 	smulbb	r2, r2, ip
 8020b50:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8020b54:	fb04 2403 	mla	r4, r4, r3, r2
 8020b58:	ea40 1250 	orr.w	r2, r0, r0, lsr #5
 8020b5c:	b2c8      	uxtb	r0, r1
 8020b5e:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8020b62:	b2fd      	uxtb	r5, r7
 8020b64:	fb10 f00c 	smulbb	r0, r0, ip
 8020b68:	b2a4      	uxth	r4, r4
 8020b6a:	fb02 0003 	mla	r0, r2, r3, r0
 8020b6e:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 8020b72:	fb15 f50c 	smulbb	r5, r5, ip
 8020b76:	fb06 5503 	mla	r5, r6, r3, r5
 8020b7a:	b283      	uxth	r3, r0
 8020b7c:	1c60      	adds	r0, r4, #1
 8020b7e:	b2ad      	uxth	r5, r5
 8020b80:	eb00 2414 	add.w	r4, r0, r4, lsr #8
 8020b84:	1c58      	adds	r0, r3, #1
 8020b86:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8020b8a:	1c6b      	adds	r3, r5, #1
 8020b8c:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8020b90:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
 8020b94:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8020b98:	096d      	lsrs	r5, r5, #5
 8020b9a:	4320      	orrs	r0, r4
 8020b9c:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8020ba0:	4328      	orrs	r0, r5
 8020ba2:	e7be      	b.n	8020b22 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x26>
 8020ba4:	00fff800 	.word	0x00fff800

08020ba8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 8020ba8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020bac:	461c      	mov	r4, r3
 8020bae:	b08d      	sub	sp, #52	@ 0x34
 8020bb0:	460d      	mov	r5, r1
 8020bb2:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 8020bb4:	6861      	ldr	r1, [r4, #4]
 8020bb6:	f89d 905c 	ldrb.w	r9, [sp, #92]	@ 0x5c
 8020bba:	4680      	mov	r8, r0
 8020bbc:	6820      	ldr	r0, [r4, #0]
 8020bbe:	4616      	mov	r6, r2
 8020bc0:	aa08      	add	r2, sp, #32
 8020bc2:	c203      	stmia	r2!, {r0, r1}
 8020bc4:	6818      	ldr	r0, [r3, #0]
 8020bc6:	6859      	ldr	r1, [r3, #4]
 8020bc8:	aa0a      	add	r2, sp, #40	@ 0x28
 8020bca:	c203      	stmia	r2!, {r0, r1}
 8020bcc:	a808      	add	r0, sp, #32
 8020bce:	f7ee fd09 	bl	800f5e4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8020bd2:	4621      	mov	r1, r4
 8020bd4:	a80a      	add	r0, sp, #40	@ 0x28
 8020bd6:	f7ee fd2d 	bl	800f634 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8020bda:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	@ 0x28
 8020bde:	f9bd 702e 	ldrsh.w	r7, [sp, #46]	@ 0x2e
 8020be2:	f9bd b02c 	ldrsh.w	fp, [sp, #44]	@ 0x2c
 8020be6:	f002 0301 	and.w	r3, r2, #1
 8020bea:	9303      	str	r3, [sp, #12]
 8020bec:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	@ 0x24
 8020bf0:	f003 0101 	and.w	r1, r3, #1
 8020bf4:	9102      	str	r1, [sp, #8]
 8020bf6:	9802      	ldr	r0, [sp, #8]
 8020bf8:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	@ 0x2a
 8020bfc:	4403      	add	r3, r0
 8020bfe:	fb01 2303 	mla	r3, r1, r3, r2
 8020c02:	f04f 0a02 	mov.w	sl, #2
 8020c06:	fb93 f3fa 	sdiv	r3, r3, sl
 8020c0a:	441d      	add	r5, r3
 8020c0c:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 8020c10:	441a      	add	r2, r3
 8020c12:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
 8020c16:	f8bd 3022 	ldrh.w	r3, [sp, #34]	@ 0x22
 8020c1a:	4a3f      	ldr	r2, [pc, #252]	@ (8020d18 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x170>)
 8020c1c:	9205      	str	r2, [sp, #20]
 8020c1e:	4419      	add	r1, r3
 8020c20:	6810      	ldr	r0, [r2, #0]
 8020c22:	f8ad 102a 	strh.w	r1, [sp, #42]	@ 0x2a
 8020c26:	6803      	ldr	r3, [r0, #0]
 8020c28:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8020c2a:	4798      	blx	r3
 8020c2c:	4b3b      	ldr	r3, [pc, #236]	@ (8020d1c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x174>)
 8020c2e:	f9bd 402a 	ldrsh.w	r4, [sp, #42]	@ 0x2a
 8020c32:	8819      	ldrh	r1, [r3, #0]
 8020c34:	f9bd c028 	ldrsh.w	ip, [sp, #40]	@ 0x28
 8020c38:	fb01 c404 	mla	r4, r1, r4, ip
 8020c3c:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8020c40:	434f      	muls	r7, r1
 8020c42:	e9cd 3a06 	strd	r3, sl, [sp, #24]
 8020c46:	eb04 0247 	add.w	r2, r4, r7, lsl #1
 8020c4a:	3604      	adds	r6, #4
 8020c4c:	9204      	str	r2, [sp, #16]
 8020c4e:	9b04      	ldr	r3, [sp, #16]
 8020c50:	429c      	cmp	r4, r3
 8020c52:	d258      	bcs.n	8020d06 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x15e>
 8020c54:	9b03      	ldr	r3, [sp, #12]
 8020c56:	2b00      	cmp	r3, #0
 8020c58:	d034      	beq.n	8020cc4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x11c>
 8020c5a:	782b      	ldrb	r3, [r5, #0]
 8020c5c:	f003 030f 	and.w	r3, r3, #15
 8020c60:	1c6f      	adds	r7, r5, #1
 8020c62:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 8020c66:	0e0b      	lsrs	r3, r1, #24
 8020c68:	d006      	beq.n	8020c78 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd0>
 8020c6a:	8822      	ldrh	r2, [r4, #0]
 8020c6c:	9300      	str	r3, [sp, #0]
 8020c6e:	4640      	mov	r0, r8
 8020c70:	464b      	mov	r3, r9
 8020c72:	f7ff ff43 	bl	8020afc <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 8020c76:	8020      	strh	r0, [r4, #0]
 8020c78:	3402      	adds	r4, #2
 8020c7a:	f10b 3aff 	add.w	sl, fp, #4294967295
 8020c7e:	f1ba 0f01 	cmp.w	sl, #1
 8020c82:	dd22      	ble.n	8020cca <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x122>
 8020c84:	783b      	ldrb	r3, [r7, #0]
 8020c86:	091b      	lsrs	r3, r3, #4
 8020c88:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 8020c8c:	0e0b      	lsrs	r3, r1, #24
 8020c8e:	d006      	beq.n	8020c9e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xf6>
 8020c90:	8822      	ldrh	r2, [r4, #0]
 8020c92:	9300      	str	r3, [sp, #0]
 8020c94:	4640      	mov	r0, r8
 8020c96:	464b      	mov	r3, r9
 8020c98:	f7ff ff30 	bl	8020afc <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 8020c9c:	8020      	strh	r0, [r4, #0]
 8020c9e:	f817 3b01 	ldrb.w	r3, [r7], #1
 8020ca2:	f003 030f 	and.w	r3, r3, #15
 8020ca6:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 8020caa:	0e0b      	lsrs	r3, r1, #24
 8020cac:	d006      	beq.n	8020cbc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x114>
 8020cae:	8862      	ldrh	r2, [r4, #2]
 8020cb0:	9300      	str	r3, [sp, #0]
 8020cb2:	4640      	mov	r0, r8
 8020cb4:	464b      	mov	r3, r9
 8020cb6:	f7ff ff21 	bl	8020afc <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 8020cba:	8060      	strh	r0, [r4, #2]
 8020cbc:	3404      	adds	r4, #4
 8020cbe:	f1aa 0a02 	sub.w	sl, sl, #2
 8020cc2:	e7dc      	b.n	8020c7e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
 8020cc4:	462f      	mov	r7, r5
 8020cc6:	46da      	mov	sl, fp
 8020cc8:	e7d9      	b.n	8020c7e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
 8020cca:	d10d      	bne.n	8020ce8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x140>
 8020ccc:	783b      	ldrb	r3, [r7, #0]
 8020cce:	091b      	lsrs	r3, r3, #4
 8020cd0:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 8020cd4:	0e0b      	lsrs	r3, r1, #24
 8020cd6:	d006      	beq.n	8020ce6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x13e>
 8020cd8:	8822      	ldrh	r2, [r4, #0]
 8020cda:	9300      	str	r3, [sp, #0]
 8020cdc:	4640      	mov	r0, r8
 8020cde:	464b      	mov	r3, r9
 8020ce0:	f7ff ff0c 	bl	8020afc <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 8020ce4:	8020      	strh	r0, [r4, #0]
 8020ce6:	3402      	adds	r4, #2
 8020ce8:	9b06      	ldr	r3, [sp, #24]
 8020cea:	9a02      	ldr	r2, [sp, #8]
 8020cec:	881b      	ldrh	r3, [r3, #0]
 8020cee:	eba3 030b 	sub.w	r3, r3, fp
 8020cf2:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8020cf6:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	@ 0x24
 8020cfa:	4413      	add	r3, r2
 8020cfc:	9a07      	ldr	r2, [sp, #28]
 8020cfe:	fb93 f3f2 	sdiv	r3, r3, r2
 8020d02:	441d      	add	r5, r3
 8020d04:	e7a3      	b.n	8020c4e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xa6>
 8020d06:	9b05      	ldr	r3, [sp, #20]
 8020d08:	6818      	ldr	r0, [r3, #0]
 8020d0a:	6803      	ldr	r3, [r0, #0]
 8020d0c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8020d0e:	4798      	blx	r3
 8020d10:	b00d      	add	sp, #52	@ 0x34
 8020d12:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8020d16:	bf00      	nop
 8020d18:	200133d4 	.word	0x200133d4
 8020d1c:	200133cc 	.word	0x200133cc

08020d20 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>:
 8020d20:	b570      	push	{r4, r5, r6, lr}
 8020d22:	1214      	asrs	r4, r2, #8
 8020d24:	788d      	ldrb	r5, [r1, #2]
 8020d26:	f89d 6010 	ldrb.w	r6, [sp, #16]
 8020d2a:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 8020d2e:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8020d32:	fb15 f503 	smulbb	r5, r5, r3
 8020d36:	fb04 5506 	mla	r5, r4, r6, r5
 8020d3a:	10d0      	asrs	r0, r2, #3
 8020d3c:	784c      	ldrb	r4, [r1, #1]
 8020d3e:	7809      	ldrb	r1, [r1, #0]
 8020d40:	00d2      	lsls	r2, r2, #3
 8020d42:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 8020d46:	b2d2      	uxtb	r2, r2
 8020d48:	ea40 1090 	orr.w	r0, r0, r0, lsr #6
 8020d4c:	fb14 f403 	smulbb	r4, r4, r3
 8020d50:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8020d54:	fb11 f303 	smulbb	r3, r1, r3
 8020d58:	fb00 4406 	mla	r4, r0, r6, r4
 8020d5c:	fb02 3306 	mla	r3, r2, r6, r3
 8020d60:	b2ad      	uxth	r5, r5
 8020d62:	b29b      	uxth	r3, r3
 8020d64:	b2a4      	uxth	r4, r4
 8020d66:	1c68      	adds	r0, r5, #1
 8020d68:	eb00 2515 	add.w	r5, r0, r5, lsr #8
 8020d6c:	1c62      	adds	r2, r4, #1
 8020d6e:	1c58      	adds	r0, r3, #1
 8020d70:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8020d74:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 8020d78:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 8020d7c:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8020d80:	0964      	lsrs	r4, r4, #5
 8020d82:	4328      	orrs	r0, r5
 8020d84:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 8020d88:	4320      	orrs	r0, r4
 8020d8a:	bd70      	pop	{r4, r5, r6, pc}

08020d8c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 8020d8c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020d90:	b08f      	sub	sp, #60	@ 0x3c
 8020d92:	461c      	mov	r4, r3
 8020d94:	f89d 7064 	ldrb.w	r7, [sp, #100]	@ 0x64
 8020d98:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 8020d9a:	4682      	mov	sl, r0
 8020d9c:	460e      	mov	r6, r1
 8020d9e:	4615      	mov	r5, r2
 8020da0:	2f00      	cmp	r7, #0
 8020da2:	f000 8142 	beq.w	802102a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x29e>
 8020da6:	6820      	ldr	r0, [r4, #0]
 8020da8:	6861      	ldr	r1, [r4, #4]
 8020daa:	aa0a      	add	r2, sp, #40	@ 0x28
 8020dac:	c203      	stmia	r2!, {r0, r1}
 8020dae:	6818      	ldr	r0, [r3, #0]
 8020db0:	6859      	ldr	r1, [r3, #4]
 8020db2:	aa0c      	add	r2, sp, #48	@ 0x30
 8020db4:	c203      	stmia	r2!, {r0, r1}
 8020db6:	a80a      	add	r0, sp, #40	@ 0x28
 8020db8:	f7ee fc14 	bl	800f5e4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8020dbc:	4621      	mov	r1, r4
 8020dbe:	a80c      	add	r0, sp, #48	@ 0x30
 8020dc0:	f7ee fc38 	bl	800f634 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8020dc4:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	@ 0x30
 8020dc8:	f9bd b036 	ldrsh.w	fp, [sp, #54]	@ 0x36
 8020dcc:	f002 0301 	and.w	r3, r2, #1
 8020dd0:	9306      	str	r3, [sp, #24]
 8020dd2:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 8020dd6:	f003 0101 	and.w	r1, r3, #1
 8020dda:	9105      	str	r1, [sp, #20]
 8020ddc:	9805      	ldr	r0, [sp, #20]
 8020dde:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	@ 0x32
 8020de2:	4403      	add	r3, r0
 8020de4:	fb01 2303 	mla	r3, r1, r3, r2
 8020de8:	f04f 0802 	mov.w	r8, #2
 8020dec:	fb93 f3f8 	sdiv	r3, r3, r8
 8020df0:	441e      	add	r6, r3
 8020df2:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 8020df6:	441a      	add	r2, r3
 8020df8:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 8020dfc:	f8ad 2030 	strh.w	r2, [sp, #48]	@ 0x30
 8020e00:	4419      	add	r1, r3
 8020e02:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
 8020e06:	9303      	str	r3, [sp, #12]
 8020e08:	4b89      	ldr	r3, [pc, #548]	@ (8021030 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
 8020e0a:	f8ad 1032 	strh.w	r1, [sp, #50]	@ 0x32
 8020e0e:	6818      	ldr	r0, [r3, #0]
 8020e10:	6803      	ldr	r3, [r0, #0]
 8020e12:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8020e14:	4798      	blx	r3
 8020e16:	4a87      	ldr	r2, [pc, #540]	@ (8021034 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a8>)
 8020e18:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	@ 0x32
 8020e1c:	8813      	ldrh	r3, [r2, #0]
 8020e1e:	f9bd 9030 	ldrsh.w	r9, [sp, #48]	@ 0x30
 8020e22:	2fff      	cmp	r7, #255	@ 0xff
 8020e24:	fb03 9404 	mla	r4, r3, r4, r9
 8020e28:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8020e2c:	f105 0504 	add.w	r5, r5, #4
 8020e30:	4694      	mov	ip, r2
 8020e32:	fb03 f30b 	mul.w	r3, r3, fp
 8020e36:	d071      	beq.n	8020f1c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x190>
 8020e38:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8020e3c:	43f9      	mvns	r1, r7
 8020e3e:	e9cd 3207 	strd	r3, r2, [sp, #28]
 8020e42:	b2c9      	uxtb	r1, r1
 8020e44:	9104      	str	r1, [sp, #16]
 8020e46:	f8cd 8024 	str.w	r8, [sp, #36]	@ 0x24
 8020e4a:	9b07      	ldr	r3, [sp, #28]
 8020e4c:	42a3      	cmp	r3, r4
 8020e4e:	f240 80e7 	bls.w	8021020 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x294>
 8020e52:	9b06      	ldr	r3, [sp, #24]
 8020e54:	2b00      	cmp	r3, #0
 8020e56:	d03d      	beq.n	8020ed4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x148>
 8020e58:	7831      	ldrb	r1, [r6, #0]
 8020e5a:	9b04      	ldr	r3, [sp, #16]
 8020e5c:	8822      	ldrh	r2, [r4, #0]
 8020e5e:	9300      	str	r3, [sp, #0]
 8020e60:	f001 010f 	and.w	r1, r1, #15
 8020e64:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8020e68:	463b      	mov	r3, r7
 8020e6a:	4429      	add	r1, r5
 8020e6c:	4650      	mov	r0, sl
 8020e6e:	f7ff ff57 	bl	8020d20 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 8020e72:	9b03      	ldr	r3, [sp, #12]
 8020e74:	f824 0b02 	strh.w	r0, [r4], #2
 8020e78:	f106 0801 	add.w	r8, r6, #1
 8020e7c:	f103 3bff 	add.w	fp, r3, #4294967295
 8020e80:	f1bb 0f01 	cmp.w	fp, #1
 8020e84:	46a1      	mov	r9, r4
 8020e86:	f104 0404 	add.w	r4, r4, #4
 8020e8a:	dd27      	ble.n	8020edc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x150>
 8020e8c:	f898 1000 	ldrb.w	r1, [r8]
 8020e90:	9b04      	ldr	r3, [sp, #16]
 8020e92:	f834 2c04 	ldrh.w	r2, [r4, #-4]
 8020e96:	9300      	str	r3, [sp, #0]
 8020e98:	0909      	lsrs	r1, r1, #4
 8020e9a:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8020e9e:	463b      	mov	r3, r7
 8020ea0:	4429      	add	r1, r5
 8020ea2:	4650      	mov	r0, sl
 8020ea4:	f7ff ff3c 	bl	8020d20 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 8020ea8:	f824 0c04 	strh.w	r0, [r4, #-4]
 8020eac:	f818 1b01 	ldrb.w	r1, [r8], #1
 8020eb0:	9b04      	ldr	r3, [sp, #16]
 8020eb2:	f834 2c02 	ldrh.w	r2, [r4, #-2]
 8020eb6:	9300      	str	r3, [sp, #0]
 8020eb8:	f001 010f 	and.w	r1, r1, #15
 8020ebc:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8020ec0:	463b      	mov	r3, r7
 8020ec2:	4429      	add	r1, r5
 8020ec4:	4650      	mov	r0, sl
 8020ec6:	f7ff ff2b 	bl	8020d20 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 8020eca:	f1ab 0b02 	sub.w	fp, fp, #2
 8020ece:	f824 0c02 	strh.w	r0, [r4, #-2]
 8020ed2:	e7d5      	b.n	8020e80 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 8020ed4:	46b0      	mov	r8, r6
 8020ed6:	f8dd b00c 	ldr.w	fp, [sp, #12]
 8020eda:	e7d1      	b.n	8020e80 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 8020edc:	d10f      	bne.n	8020efe <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x172>
 8020ede:	f898 1000 	ldrb.w	r1, [r8]
 8020ee2:	9b04      	ldr	r3, [sp, #16]
 8020ee4:	f8b9 2000 	ldrh.w	r2, [r9]
 8020ee8:	9300      	str	r3, [sp, #0]
 8020eea:	0909      	lsrs	r1, r1, #4
 8020eec:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8020ef0:	463b      	mov	r3, r7
 8020ef2:	4429      	add	r1, r5
 8020ef4:	4650      	mov	r0, sl
 8020ef6:	f7ff ff13 	bl	8020d20 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 8020efa:	f829 0b02 	strh.w	r0, [r9], #2
 8020efe:	9b08      	ldr	r3, [sp, #32]
 8020f00:	9a05      	ldr	r2, [sp, #20]
 8020f02:	881c      	ldrh	r4, [r3, #0]
 8020f04:	9b03      	ldr	r3, [sp, #12]
 8020f06:	1ae4      	subs	r4, r4, r3
 8020f08:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 8020f0c:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 8020f10:	4413      	add	r3, r2
 8020f12:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8020f14:	fb93 f3f2 	sdiv	r3, r3, r2
 8020f18:	441e      	add	r6, r3
 8020f1a:	e796      	b.n	8020e4a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xbe>
 8020f1c:	4f46      	ldr	r7, [pc, #280]	@ (8021038 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2ac>)
 8020f1e:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8020f22:	42a3      	cmp	r3, r4
 8020f24:	d97c      	bls.n	8021020 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x294>
 8020f26:	9a06      	ldr	r2, [sp, #24]
 8020f28:	2a00      	cmp	r2, #0
 8020f2a:	d054      	beq.n	8020fd6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24a>
 8020f2c:	7830      	ldrb	r0, [r6, #0]
 8020f2e:	f000 000f 	and.w	r0, r0, #15
 8020f32:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8020f36:	eb05 0e00 	add.w	lr, r5, r0
 8020f3a:	5c28      	ldrb	r0, [r5, r0]
 8020f3c:	f89e 2002 	ldrb.w	r2, [lr, #2]
 8020f40:	f89e e001 	ldrb.w	lr, [lr, #1]
 8020f44:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8020f48:	f40e 6efc 	and.w	lr, lr, #2016	@ 0x7e0
 8020f4c:	ea07 2202 	and.w	r2, r7, r2, lsl #8
 8020f50:	ea42 020e 	orr.w	r2, r2, lr
 8020f54:	ea42 02d0 	orr.w	r2, r2, r0, lsr #3
 8020f58:	f824 2b02 	strh.w	r2, [r4], #2
 8020f5c:	9a03      	ldr	r2, [sp, #12]
 8020f5e:	1c71      	adds	r1, r6, #1
 8020f60:	f102 3eff 	add.w	lr, r2, #4294967295
 8020f64:	f1be 0f01 	cmp.w	lr, #1
 8020f68:	4620      	mov	r0, r4
 8020f6a:	f104 0404 	add.w	r4, r4, #4
 8020f6e:	dd36      	ble.n	8020fde <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x252>
 8020f70:	7808      	ldrb	r0, [r1, #0]
 8020f72:	0900      	lsrs	r0, r0, #4
 8020f74:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8020f78:	eb05 0a00 	add.w	sl, r5, r0
 8020f7c:	f1ae 0e02 	sub.w	lr, lr, #2
 8020f80:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8020f84:	f89a 9002 	ldrb.w	r9, [sl, #2]
 8020f88:	00d2      	lsls	r2, r2, #3
 8020f8a:	ea07 2909 	and.w	r9, r7, r9, lsl #8
 8020f8e:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8020f92:	ea49 0202 	orr.w	r2, r9, r2
 8020f96:	f815 9000 	ldrb.w	r9, [r5, r0]
 8020f9a:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 8020f9e:	f824 2c04 	strh.w	r2, [r4, #-4]
 8020fa2:	f811 0b01 	ldrb.w	r0, [r1], #1
 8020fa6:	f000 000f 	and.w	r0, r0, #15
 8020faa:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8020fae:	eb05 0a00 	add.w	sl, r5, r0
 8020fb2:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8020fb6:	f89a 9002 	ldrb.w	r9, [sl, #2]
 8020fba:	00d2      	lsls	r2, r2, #3
 8020fbc:	ea07 2909 	and.w	r9, r7, r9, lsl #8
 8020fc0:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8020fc4:	ea49 0202 	orr.w	r2, r9, r2
 8020fc8:	f815 9000 	ldrb.w	r9, [r5, r0]
 8020fcc:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 8020fd0:	f824 2c02 	strh.w	r2, [r4, #-2]
 8020fd4:	e7c6      	b.n	8020f64 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d8>
 8020fd6:	4631      	mov	r1, r6
 8020fd8:	f8dd e00c 	ldr.w	lr, [sp, #12]
 8020fdc:	e7c2      	b.n	8020f64 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d8>
 8020fde:	d111      	bne.n	8021004 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>
 8020fe0:	7809      	ldrb	r1, [r1, #0]
 8020fe2:	0909      	lsrs	r1, r1, #4
 8020fe4:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8020fe8:	186c      	adds	r4, r5, r1
 8020fea:	5c69      	ldrb	r1, [r5, r1]
 8020fec:	78a2      	ldrb	r2, [r4, #2]
 8020fee:	7864      	ldrb	r4, [r4, #1]
 8020ff0:	00e4      	lsls	r4, r4, #3
 8020ff2:	ea07 2202 	and.w	r2, r7, r2, lsl #8
 8020ff6:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 8020ffa:	4322      	orrs	r2, r4
 8020ffc:	ea42 02d1 	orr.w	r2, r2, r1, lsr #3
 8021000:	f820 2b02 	strh.w	r2, [r0], #2
 8021004:	9a03      	ldr	r2, [sp, #12]
 8021006:	f8bc 4000 	ldrh.w	r4, [ip]
 802100a:	9905      	ldr	r1, [sp, #20]
 802100c:	1aa4      	subs	r4, r4, r2
 802100e:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
 8021012:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8021016:	440a      	add	r2, r1
 8021018:	fb92 f2f8 	sdiv	r2, r2, r8
 802101c:	4416      	add	r6, r2
 802101e:	e780      	b.n	8020f22 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x196>
 8021020:	4b03      	ldr	r3, [pc, #12]	@ (8021030 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
 8021022:	6818      	ldr	r0, [r3, #0]
 8021024:	6803      	ldr	r3, [r0, #0]
 8021026:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8021028:	4798      	blx	r3
 802102a:	b00f      	add	sp, #60	@ 0x3c
 802102c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8021030:	200133d4 	.word	0x200133d4
 8021034:	200133cc 	.word	0x200133cc
 8021038:	fffff800 	.word	0xfffff800

0802103c <CRC_Lock>:
 802103c:	b530      	push	{r4, r5, lr}
 802103e:	4a2d      	ldr	r2, [pc, #180]	@ (80210f4 <CRC_Lock+0xb8>)
 8021040:	6813      	ldr	r3, [r2, #0]
 8021042:	f023 0301 	bic.w	r3, r3, #1
 8021046:	6013      	str	r3, [r2, #0]
 8021048:	4b2b      	ldr	r3, [pc, #172]	@ (80210f8 <CRC_Lock+0xbc>)
 802104a:	681c      	ldr	r4, [r3, #0]
 802104c:	f64f 72f0 	movw	r2, #65520	@ 0xfff0
 8021050:	4014      	ands	r4, r2
 8021052:	f24c 2540 	movw	r5, #49728	@ 0xc240
 8021056:	42ac      	cmp	r4, r5
 8021058:	d005      	beq.n	8021066 <CRC_Lock+0x2a>
 802105a:	681c      	ldr	r4, [r3, #0]
 802105c:	f24c 2570 	movw	r5, #49776	@ 0xc270
 8021060:	4014      	ands	r4, r2
 8021062:	42ac      	cmp	r4, r5
 8021064:	d125      	bne.n	80210b2 <CRC_Lock+0x76>
 8021066:	4b25      	ldr	r3, [pc, #148]	@ (80210fc <CRC_Lock+0xc0>)
 8021068:	681b      	ldr	r3, [r3, #0]
 802106a:	2b00      	cmp	r3, #0
 802106c:	d139      	bne.n	80210e2 <CRC_Lock+0xa6>
 802106e:	4b24      	ldr	r3, [pc, #144]	@ (8021100 <CRC_Lock+0xc4>)
 8021070:	681a      	ldr	r2, [r3, #0]
 8021072:	f3c2 020b 	ubfx	r2, r2, #0, #12
 8021076:	f5b2 6f8a 	cmp.w	r2, #1104	@ 0x450
 802107a:	d00d      	beq.n	8021098 <CRC_Lock+0x5c>
 802107c:	681a      	ldr	r2, [r3, #0]
 802107e:	f240 4483 	movw	r4, #1155	@ 0x483
 8021082:	f3c2 020b 	ubfx	r2, r2, #0, #12
 8021086:	42a2      	cmp	r2, r4
 8021088:	d006      	beq.n	8021098 <CRC_Lock+0x5c>
 802108a:	681b      	ldr	r3, [r3, #0]
 802108c:	f240 4285 	movw	r2, #1157	@ 0x485
 8021090:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8021094:	4293      	cmp	r3, r2
 8021096:	d124      	bne.n	80210e2 <CRC_Lock+0xa6>
 8021098:	4b1a      	ldr	r3, [pc, #104]	@ (8021104 <CRC_Lock+0xc8>)
 802109a:	2201      	movs	r2, #1
 802109c:	601a      	str	r2, [r3, #0]
 802109e:	681a      	ldr	r2, [r3, #0]
 80210a0:	2a00      	cmp	r2, #0
 80210a2:	d1fc      	bne.n	802109e <CRC_Lock+0x62>
 80210a4:	4b18      	ldr	r3, [pc, #96]	@ (8021108 <CRC_Lock+0xcc>)
 80210a6:	6018      	str	r0, [r3, #0]
 80210a8:	6818      	ldr	r0, [r3, #0]
 80210aa:	1a43      	subs	r3, r0, r1
 80210ac:	4258      	negs	r0, r3
 80210ae:	4158      	adcs	r0, r3
 80210b0:	e00e      	b.n	80210d0 <CRC_Lock+0x94>
 80210b2:	681b      	ldr	r3, [r3, #0]
 80210b4:	4013      	ands	r3, r2
 80210b6:	f24d 2220 	movw	r2, #53792	@ 0xd220
 80210ba:	4293      	cmp	r3, r2
 80210bc:	d111      	bne.n	80210e2 <CRC_Lock+0xa6>
 80210be:	4b13      	ldr	r3, [pc, #76]	@ (802110c <CRC_Lock+0xd0>)
 80210c0:	681b      	ldr	r3, [r3, #0]
 80210c2:	f240 4286 	movw	r2, #1158	@ 0x486
 80210c6:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80210ca:	4293      	cmp	r3, r2
 80210cc:	d001      	beq.n	80210d2 <CRC_Lock+0x96>
 80210ce:	2000      	movs	r0, #0
 80210d0:	bd30      	pop	{r4, r5, pc}
 80210d2:	4b0f      	ldr	r3, [pc, #60]	@ (8021110 <CRC_Lock+0xd4>)
 80210d4:	2201      	movs	r2, #1
 80210d6:	601a      	str	r2, [r3, #0]
 80210d8:	681a      	ldr	r2, [r3, #0]
 80210da:	2a00      	cmp	r2, #0
 80210dc:	d1fc      	bne.n	80210d8 <CRC_Lock+0x9c>
 80210de:	4b0d      	ldr	r3, [pc, #52]	@ (8021114 <CRC_Lock+0xd8>)
 80210e0:	e7e1      	b.n	80210a6 <CRC_Lock+0x6a>
 80210e2:	4b0d      	ldr	r3, [pc, #52]	@ (8021118 <CRC_Lock+0xdc>)
 80210e4:	2201      	movs	r2, #1
 80210e6:	601a      	str	r2, [r3, #0]
 80210e8:	681a      	ldr	r2, [r3, #0]
 80210ea:	2a00      	cmp	r2, #0
 80210ec:	d1fc      	bne.n	80210e8 <CRC_Lock+0xac>
 80210ee:	4b0b      	ldr	r3, [pc, #44]	@ (802111c <CRC_Lock+0xe0>)
 80210f0:	e7d9      	b.n	80210a6 <CRC_Lock+0x6a>
 80210f2:	bf00      	nop
 80210f4:	e0002000 	.word	0xe0002000
 80210f8:	e000ed00 	.word	0xe000ed00
 80210fc:	e0042000 	.word	0xe0042000
 8021100:	5c001000 	.word	0x5c001000
 8021104:	58024c08 	.word	0x58024c08
 8021108:	58024c00 	.word	0x58024c00
 802110c:	46008ff0 	.word	0x46008ff0
 8021110:	46024c08 	.word	0x46024c08
 8021114:	46024c00 	.word	0x46024c00
 8021118:	40023008 	.word	0x40023008
 802111c:	40023000 	.word	0x40023000

08021120 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>:
 8021120:	6101      	str	r1, [r0, #16]
 8021122:	4770      	bx	lr

08021124 <_ZN8touchgfx8Gestures4tickEv>:
 8021124:	7b83      	ldrb	r3, [r0, #14]
 8021126:	b14b      	cbz	r3, 802113c <_ZN8touchgfx8Gestures4tickEv+0x18>
 8021128:	8903      	ldrh	r3, [r0, #8]
 802112a:	3301      	adds	r3, #1
 802112c:	b29b      	uxth	r3, r3
 802112e:	2b07      	cmp	r3, #7
 8021130:	8103      	strh	r3, [r0, #8]
 8021132:	bf81      	itttt	hi
 8021134:	2300      	movhi	r3, #0
 8021136:	8143      	strhhi	r3, [r0, #10]
 8021138:	8183      	strhhi	r3, [r0, #12]
 802113a:	7383      	strbhi	r3, [r0, #14]
 802113c:	4770      	bx	lr
	...

08021140 <_ZN8touchgfx8Gestures17registerDragEventEtttt>:
 8021140:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8021144:	4698      	mov	r8, r3
 8021146:	8883      	ldrh	r3, [r0, #4]
 8021148:	f8ad 3006 	strh.w	r3, [sp, #6]
 802114c:	eba8 0303 	sub.w	r3, r8, r3
 8021150:	b21b      	sxth	r3, r3
 8021152:	4604      	mov	r4, r0
 8021154:	2b00      	cmp	r3, #0
 8021156:	4617      	mov	r7, r2
 8021158:	4a18      	ldr	r2, [pc, #96]	@ (80211bc <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x7c>)
 802115a:	9200      	str	r2, [sp, #0]
 802115c:	bfb8      	it	lt
 802115e:	425b      	neglt	r3, r3
 8021160:	8aa2      	ldrh	r2, [r4, #20]
 8021162:	f8bd 5028 	ldrh.w	r5, [sp, #40]	@ 0x28
 8021166:	f8ad 800a 	strh.w	r8, [sp, #10]
 802116a:	b21b      	sxth	r3, r3
 802116c:	460e      	mov	r6, r1
 802116e:	4293      	cmp	r3, r2
 8021170:	88c1      	ldrh	r1, [r0, #6]
 8021172:	f8ad 1008 	strh.w	r1, [sp, #8]
 8021176:	f04f 0000 	mov.w	r0, #0
 802117a:	f88d 0004 	strb.w	r0, [sp, #4]
 802117e:	f8ad 500c 	strh.w	r5, [sp, #12]
 8021182:	dc07      	bgt.n	8021194 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x54>
 8021184:	1a69      	subs	r1, r5, r1
 8021186:	b209      	sxth	r1, r1
 8021188:	2900      	cmp	r1, #0
 802118a:	bfb8      	it	lt
 802118c:	4249      	neglt	r1, r1
 802118e:	b209      	sxth	r1, r1
 8021190:	428a      	cmp	r2, r1
 8021192:	da10      	bge.n	80211b6 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x76>
 8021194:	6920      	ldr	r0, [r4, #16]
 8021196:	6803      	ldr	r3, [r0, #0]
 8021198:	4669      	mov	r1, sp
 802119a:	685b      	ldr	r3, [r3, #4]
 802119c:	4798      	blx	r3
 802119e:	eba8 0606 	sub.w	r6, r8, r6
 80211a2:	2300      	movs	r3, #0
 80211a4:	1bef      	subs	r7, r5, r7
 80211a6:	2001      	movs	r0, #1
 80211a8:	8123      	strh	r3, [r4, #8]
 80211aa:	8166      	strh	r6, [r4, #10]
 80211ac:	81a7      	strh	r7, [r4, #12]
 80211ae:	f8a4 8004 	strh.w	r8, [r4, #4]
 80211b2:	80e5      	strh	r5, [r4, #6]
 80211b4:	73a0      	strb	r0, [r4, #14]
 80211b6:	b004      	add	sp, #16
 80211b8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80211bc:	08025308 	.word	0x08025308

080211c0 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>:
 80211c0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80211c2:	461e      	mov	r6, r3
 80211c4:	1e4b      	subs	r3, r1, #1
 80211c6:	2b01      	cmp	r3, #1
 80211c8:	b085      	sub	sp, #20
 80211ca:	4604      	mov	r4, r0
 80211cc:	460d      	mov	r5, r1
 80211ce:	4617      	mov	r7, r2
 80211d0:	d84b      	bhi.n	802126a <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xaa>
 80211d2:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 80211d6:	1cd3      	adds	r3, r2, #3
 80211d8:	b29b      	uxth	r3, r3
 80211da:	2b06      	cmp	r3, #6
 80211dc:	d916      	bls.n	802120c <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x4c>
 80211de:	f8df c0a0 	ldr.w	ip, [pc, #160]	@ 8021280 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 80211e2:	f8cd c004 	str.w	ip, [sp, #4]
 80211e6:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 80211ea:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 80211ee:	6900      	ldr	r0, [r0, #16]
 80211f0:	f8ad 100c 	strh.w	r1, [sp, #12]
 80211f4:	f04f 0c00 	mov.w	ip, #0
 80211f8:	f88d c008 	strb.w	ip, [sp, #8]
 80211fc:	f8ad 200a 	strh.w	r2, [sp, #10]
 8021200:	f8ad 300e 	strh.w	r3, [sp, #14]
 8021204:	6803      	ldr	r3, [r0, #0]
 8021206:	a901      	add	r1, sp, #4
 8021208:	689b      	ldr	r3, [r3, #8]
 802120a:	4798      	blx	r3
 802120c:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8021210:	1cd3      	adds	r3, r2, #3
 8021212:	b29b      	uxth	r3, r3
 8021214:	2b06      	cmp	r3, #6
 8021216:	d916      	bls.n	8021246 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 8021218:	f8df c064 	ldr.w	ip, [pc, #100]	@ 8021280 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 802121c:	f8cd c004 	str.w	ip, [sp, #4]
 8021220:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8021224:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8021228:	6920      	ldr	r0, [r4, #16]
 802122a:	f8ad 100c 	strh.w	r1, [sp, #12]
 802122e:	f04f 0c01 	mov.w	ip, #1
 8021232:	f88d c008 	strb.w	ip, [sp, #8]
 8021236:	f8ad 200a 	strh.w	r2, [sp, #10]
 802123a:	f8ad 300e 	strh.w	r3, [sp, #14]
 802123e:	6803      	ldr	r3, [r0, #0]
 8021240:	a901      	add	r1, sp, #4
 8021242:	689b      	ldr	r3, [r3, #8]
 8021244:	4798      	blx	r3
 8021246:	4b0d      	ldr	r3, [pc, #52]	@ (802127c <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xbc>)
 8021248:	9301      	str	r3, [sp, #4]
 802124a:	6920      	ldr	r0, [r4, #16]
 802124c:	f88d 5008 	strb.w	r5, [sp, #8]
 8021250:	2300      	movs	r3, #0
 8021252:	f8ad 700a 	strh.w	r7, [sp, #10]
 8021256:	f8ad 600c 	strh.w	r6, [sp, #12]
 802125a:	f8ad 300e 	strh.w	r3, [sp, #14]
 802125e:	6803      	ldr	r3, [r0, #0]
 8021260:	a901      	add	r1, sp, #4
 8021262:	681b      	ldr	r3, [r3, #0]
 8021264:	4798      	blx	r3
 8021266:	b005      	add	sp, #20
 8021268:	bdf0      	pop	{r4, r5, r6, r7, pc}
 802126a:	2900      	cmp	r1, #0
 802126c:	d1eb      	bne.n	8021246 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 802126e:	80a2      	strh	r2, [r4, #4]
 8021270:	80c6      	strh	r6, [r0, #6]
 8021272:	60a1      	str	r1, [r4, #8]
 8021274:	81a1      	strh	r1, [r4, #12]
 8021276:	73a1      	strb	r1, [r4, #14]
 8021278:	e7e5      	b.n	8021246 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 802127a:	bf00      	nop
 802127c:	080252f4 	.word	0x080252f4
 8021280:	0802531c 	.word	0x0802531c

08021284 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1>:
 8021284:	10c9      	asrs	r1, r1, #3
 8021286:	2900      	cmp	r1, #0
 8021288:	bfb8      	it	lt
 802128a:	4249      	neglt	r1, r1
 802128c:	2801      	cmp	r0, #1
 802128e:	d108      	bne.n	80212a2 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1+0x1e>
 8021290:	f3c1 0008 	ubfx	r0, r1, #0, #9
 8021294:	f5b0 7f80 	cmp.w	r0, #256	@ 0x100
 8021298:	4601      	mov	r1, r0
 802129a:	dd02      	ble.n	80212a2 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1+0x1e>
 802129c:	f5c0 7000 	rsb	r0, r0, #512	@ 0x200
 80212a0:	4770      	bx	lr
 80212a2:	29ff      	cmp	r1, #255	@ 0xff
 80212a4:	bfa8      	it	ge
 80212a6:	21ff      	movge	r1, #255	@ 0xff
 80212a8:	4608      	mov	r0, r1
 80212aa:	4770      	bx	lr

080212ac <_ZN8touchgfx10Rasterizer6lineToEii>:
 80212ac:	b410      	push	{r4}
 80212ae:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 80212b2:	429c      	cmp	r4, r3
 80212b4:	d803      	bhi.n	80212be <_ZN8touchgfx10Rasterizer6lineToEii+0x12>
 80212b6:	f85d 4b04 	ldr.w	r4, [sp], #4
 80212ba:	f7ed b943 	b.w	800e544 <_ZN8touchgfx7Outline6lineToEii>
 80212be:	f85d 4b04 	ldr.w	r4, [sp], #4
 80212c2:	4770      	bx	lr

080212c4 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>:
 80212c4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80212c8:	b08b      	sub	sp, #44	@ 0x2c
 80212ca:	e9cd 2306 	strd	r2, r3, [sp, #24]
 80212ce:	f89d 3050 	ldrb.w	r3, [sp, #80]	@ 0x50
 80212d2:	9308      	str	r3, [sp, #32]
 80212d4:	4606      	mov	r6, r0
 80212d6:	f89d 3054 	ldrb.w	r3, [sp, #84]	@ 0x54
 80212da:	9309      	str	r3, [sp, #36]	@ 0x24
 80212dc:	468a      	mov	sl, r1
 80212de:	f7ed fa9e 	bl	800e81e <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>
 80212e2:	68b5      	ldr	r5, [r6, #8]
 80212e4:	4604      	mov	r4, r0
 80212e6:	2d00      	cmp	r5, #0
 80212e8:	d044      	beq.n	8021374 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 80212ea:	6873      	ldr	r3, [r6, #4]
 80212ec:	42ab      	cmp	r3, r5
 80212ee:	d33d      	bcc.n	802136c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa8>
 80212f0:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 80212f4:	f9b6 2034 	ldrsh.w	r2, [r6, #52]	@ 0x34
 80212f8:	eb02 0b03 	add.w	fp, r2, r3
 80212fc:	e9dd 1206 	ldrd	r1, r2, [sp, #24]
 8021300:	fb02 1203 	mla	r2, r2, r3, r1
 8021304:	9205      	str	r2, [sp, #20]
 8021306:	1e6a      	subs	r2, r5, #1
 8021308:	9204      	str	r2, [sp, #16]
 802130a:	f04f 0800 	mov.w	r8, #0
 802130e:	f9b4 9002 	ldrsh.w	r9, [r4, #2]
 8021312:	f9b4 7000 	ldrsh.w	r7, [r4]
 8021316:	454b      	cmp	r3, r9
 8021318:	463a      	mov	r2, r7
 802131a:	d008      	beq.n	802132e <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x6a>
 802131c:	f9b6 3034 	ldrsh.w	r3, [r6, #52]	@ 0x34
 8021320:	eb03 0b09 	add.w	fp, r3, r9
 8021324:	e9dd 1306 	ldrd	r1, r3, [sp, #24]
 8021328:	fb03 1309 	mla	r3, r3, r9, r1
 802132c:	9305      	str	r3, [sp, #20]
 802132e:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 8021332:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 8021336:	4498      	add	r8, r3
 8021338:	9b04      	ldr	r3, [sp, #16]
 802133a:	3b01      	subs	r3, #1
 802133c:	9304      	str	r3, [sp, #16]
 802133e:	9b04      	ldr	r3, [sp, #16]
 8021340:	3301      	adds	r3, #1
 8021342:	d015      	beq.n	8021370 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xac>
 8021344:	f934 3f08 	ldrsh.w	r3, [r4, #8]!
 8021348:	42bb      	cmp	r3, r7
 802134a:	d117      	bne.n	802137c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb8>
 802134c:	f9b4 0002 	ldrsh.w	r0, [r4, #2]
 8021350:	9b04      	ldr	r3, [sp, #16]
 8021352:	4548      	cmp	r0, r9
 8021354:	f103 33ff 	add.w	r3, r3, #4294967295
 8021358:	d17f      	bne.n	802145a <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x196>
 802135a:	f9b4 0006 	ldrsh.w	r0, [r4, #6]
 802135e:	4401      	add	r1, r0
 8021360:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8021364:	4480      	add	r8, r0
 8021366:	e7e9      	b.n	802133c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x78>
 8021368:	461f      	mov	r7, r3
 802136a:	e044      	b.n	80213f6 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x132>
 802136c:	2000      	movs	r0, #0
 802136e:	e002      	b.n	8021376 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb2>
 8021370:	2900      	cmp	r1, #0
 8021372:	d16f      	bne.n	8021454 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x190>
 8021374:	2001      	movs	r0, #1
 8021376:	b00b      	add	sp, #44	@ 0x2c
 8021378:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802137c:	2900      	cmp	r1, #0
 802137e:	d030      	beq.n	80213e2 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x11e>
 8021380:	2f00      	cmp	r7, #0
 8021382:	db29      	blt.n	80213d8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 8021384:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	@ 0x36
 8021388:	42bb      	cmp	r3, r7
 802138a:	dd25      	ble.n	80213d8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 802138c:	ebc1 1188 	rsb	r1, r1, r8, lsl #6
 8021390:	f896 0030 	ldrb.w	r0, [r6, #48]	@ 0x30
 8021394:	f7ff ff76 	bl	8021284 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1>
 8021398:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 802139a:	fb10 f003 	smulbb	r0, r0, r3
 802139e:	b280      	uxth	r0, r0
 80213a0:	1c41      	adds	r1, r0, #1
 80213a2:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 80213a6:	1209      	asrs	r1, r1, #8
 80213a8:	f011 0fff 	tst.w	r1, #255	@ 0xff
 80213ac:	d014      	beq.n	80213d8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 80213ae:	9808      	ldr	r0, [sp, #32]
 80213b0:	8e73      	ldrh	r3, [r6, #50]	@ 0x32
 80213b2:	b2c9      	uxtb	r1, r1
 80213b4:	b2ba      	uxth	r2, r7
 80213b6:	9102      	str	r1, [sp, #8]
 80213b8:	2101      	movs	r1, #1
 80213ba:	4413      	add	r3, r2
 80213bc:	9101      	str	r1, [sp, #4]
 80213be:	4402      	add	r2, r0
 80213c0:	fa0f f18b 	sxth.w	r1, fp
 80213c4:	f8da 0000 	ldr.w	r0, [sl]
 80213c8:	9100      	str	r1, [sp, #0]
 80213ca:	6941      	ldr	r1, [r0, #20]
 80213cc:	b21b      	sxth	r3, r3
 80213ce:	460d      	mov	r5, r1
 80213d0:	b212      	sxth	r2, r2
 80213d2:	9905      	ldr	r1, [sp, #20]
 80213d4:	4650      	mov	r0, sl
 80213d6:	47a8      	blx	r5
 80213d8:	9b04      	ldr	r3, [sp, #16]
 80213da:	3301      	adds	r3, #1
 80213dc:	f107 0201 	add.w	r2, r7, #1
 80213e0:	d0c8      	beq.n	8021374 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 80213e2:	f9b4 7000 	ldrsh.w	r7, [r4]
 80213e6:	1abb      	subs	r3, r7, r2
 80213e8:	2b00      	cmp	r3, #0
 80213ea:	dd31      	ble.n	8021450 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 80213ec:	2a00      	cmp	r2, #0
 80213ee:	dabb      	bge.n	8021368 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa4>
 80213f0:	2f00      	cmp	r7, #0
 80213f2:	dd2d      	ble.n	8021450 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 80213f4:	2200      	movs	r2, #0
 80213f6:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	@ 0x36
 80213fa:	19d1      	adds	r1, r2, r7
 80213fc:	4299      	cmp	r1, r3
 80213fe:	db02      	blt.n	8021406 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x142>
 8021400:	1a9f      	subs	r7, r3, r2
 8021402:	2f00      	cmp	r7, #0
 8021404:	dd24      	ble.n	8021450 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8021406:	ea4f 1188 	mov.w	r1, r8, lsl #6
 802140a:	f896 0030 	ldrb.w	r0, [r6, #48]	@ 0x30
 802140e:	f7ff ff39 	bl	8021284 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1>
 8021412:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8021414:	fb10 f003 	smulbb	r0, r0, r3
 8021418:	b280      	uxth	r0, r0
 802141a:	1c41      	adds	r1, r0, #1
 802141c:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8021420:	1209      	asrs	r1, r1, #8
 8021422:	f011 0fff 	tst.w	r1, #255	@ 0xff
 8021426:	d013      	beq.n	8021450 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8021428:	9808      	ldr	r0, [sp, #32]
 802142a:	8e73      	ldrh	r3, [r6, #50]	@ 0x32
 802142c:	b292      	uxth	r2, r2
 802142e:	b2c9      	uxtb	r1, r1
 8021430:	4413      	add	r3, r2
 8021432:	9102      	str	r1, [sp, #8]
 8021434:	4402      	add	r2, r0
 8021436:	b23f      	sxth	r7, r7
 8021438:	f8da 0000 	ldr.w	r0, [sl]
 802143c:	9701      	str	r7, [sp, #4]
 802143e:	fa0f f18b 	sxth.w	r1, fp
 8021442:	9100      	str	r1, [sp, #0]
 8021444:	6947      	ldr	r7, [r0, #20]
 8021446:	9905      	ldr	r1, [sp, #20]
 8021448:	b21b      	sxth	r3, r3
 802144a:	b212      	sxth	r2, r2
 802144c:	4650      	mov	r0, sl
 802144e:	47b8      	blx	r7
 8021450:	464b      	mov	r3, r9
 8021452:	e75c      	b.n	802130e <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x4a>
 8021454:	2f00      	cmp	r7, #0
 8021456:	da95      	bge.n	8021384 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xc0>
 8021458:	e78c      	b.n	8021374 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 802145a:	2900      	cmp	r1, #0
 802145c:	d0f8      	beq.n	8021450 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 802145e:	e78f      	b.n	8021380 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xbc>

08021460 <_ZN8touchgfx6CanvasC1EPKNS_15AbstractPainterERKNS_4RectES6_h>:
 8021460:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8021464:	461e      	mov	r6, r3
 8021466:	4b36      	ldr	r3, [pc, #216]	@ (8021540 <_ZN8touchgfx6CanvasC1EPKNS_15AbstractPainterERKNS_4RectES6_h+0xe0>)
 8021468:	e9c0 3100 	strd	r3, r1, [r0]
 802146c:	f9b2 3004 	ldrsh.w	r3, [r2, #4]
 8021470:	8103      	strh	r3, [r0, #8]
 8021472:	2500      	movs	r5, #0
 8021474:	f89d 3020 	ldrb.w	r3, [sp, #32]
 8021478:	7283      	strb	r3, [r0, #10]
 802147a:	f100 0814 	add.w	r8, r0, #20
 802147e:	4604      	mov	r4, r0
 8021480:	8185      	strh	r5, [r0, #12]
 8021482:	81c5      	strh	r5, [r0, #14]
 8021484:	8205      	strh	r5, [r0, #16]
 8021486:	8245      	strh	r5, [r0, #18]
 8021488:	4640      	mov	r0, r8
 802148a:	4617      	mov	r7, r2
 802148c:	f7ec fb92 	bl	800dbb4 <_ZN8touchgfx7OutlineC1Ev>
 8021490:	e9c4 5513 	strd	r5, r5, [r4, #76]	@ 0x4c
 8021494:	e9c4 5515 	strd	r5, r5, [r4, #84]	@ 0x54
 8021498:	e9c4 5518 	strd	r5, r5, [r4, #96]	@ 0x60
 802149c:	e9c4 551b 	strd	r5, r5, [r4, #108]	@ 0x6c
 80214a0:	f884 5044 	strb.w	r5, [r4, #68]	@ 0x44
 80214a4:	f8a4 5046 	strh.w	r5, [r4, #70]	@ 0x46
 80214a8:	f8a4 5048 	strh.w	r5, [r4, #72]	@ 0x48
 80214ac:	f8a4 504a 	strh.w	r5, [r4, #74]	@ 0x4a
 80214b0:	f884 505c 	strb.w	r5, [r4, #92]	@ 0x5c
 80214b4:	f884 505d 	strb.w	r5, [r4, #93]	@ 0x5d
 80214b8:	f8a4 5068 	strh.w	r5, [r4, #104]	@ 0x68
 80214bc:	6830      	ldr	r0, [r6, #0]
 80214be:	6871      	ldr	r1, [r6, #4]
 80214c0:	8872      	ldrh	r2, [r6, #2]
 80214c2:	8835      	ldrh	r5, [r6, #0]
 80214c4:	466b      	mov	r3, sp
 80214c6:	c303      	stmia	r3!, {r0, r1}
 80214c8:	887b      	ldrh	r3, [r7, #2]
 80214ca:	f9b6 0004 	ldrsh.w	r0, [r6, #4]
 80214ce:	f9b6 1006 	ldrsh.w	r1, [r6, #6]
 80214d2:	4413      	add	r3, r2
 80214d4:	883a      	ldrh	r2, [r7, #0]
 80214d6:	81e3      	strh	r3, [r4, #14]
 80214d8:	442a      	add	r2, r5
 80214da:	81a2      	strh	r2, [r4, #12]
 80214dc:	8220      	strh	r0, [r4, #16]
 80214de:	8261      	strh	r1, [r4, #18]
 80214e0:	4668      	mov	r0, sp
 80214e2:	4639      	mov	r1, r7
 80214e4:	f7ee f8a6 	bl	800f634 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80214e8:	f104 000c 	add.w	r0, r4, #12
 80214ec:	f7ee f87a 	bl	800f5e4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80214f0:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 80214f4:	f8bd 2000 	ldrh.w	r2, [sp]
 80214f8:	f8a4 2046 	strh.w	r2, [r4, #70]	@ 0x46
 80214fc:	f8a4 3048 	strh.w	r3, [r4, #72]	@ 0x48
 8021500:	4640      	mov	r0, r8
 8021502:	f7ec fb3c 	bl	800db7e <_ZN8touchgfx7Outline5resetEv>
 8021506:	f9bd 3000 	ldrsh.w	r3, [sp]
 802150a:	f9b4 2012 	ldrsh.w	r2, [r4, #18]
 802150e:	015b      	lsls	r3, r3, #5
 8021510:	64e3      	str	r3, [r4, #76]	@ 0x4c
 8021512:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 8021516:	015b      	lsls	r3, r3, #5
 8021518:	6523      	str	r3, [r4, #80]	@ 0x50
 802151a:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 802151e:	015b      	lsls	r3, r3, #5
 8021520:	6563      	str	r3, [r4, #84]	@ 0x54
 8021522:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 8021526:	015b      	lsls	r3, r3, #5
 8021528:	65a3      	str	r3, [r4, #88]	@ 0x58
 802152a:	f9b4 3010 	ldrsh.w	r3, [r4, #16]
 802152e:	f8a4 304a 	strh.w	r3, [r4, #74]	@ 0x4a
 8021532:	4620      	mov	r0, r4
 8021534:	e9c4 320f 	strd	r3, r2, [r4, #60]	@ 0x3c
 8021538:	b002      	add	sp, #8
 802153a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802153e:	bf00      	nop
 8021540:	08025658 	.word	0x08025658

08021544 <_ZN8touchgfx6Canvas5closeEv>:
 8021544:	b538      	push	{r3, r4, r5, lr}
 8021546:	f890 305c 	ldrb.w	r3, [r0, #92]	@ 0x5c
 802154a:	4604      	mov	r4, r0
 802154c:	b193      	cbz	r3, 8021574 <_ZN8touchgfx6Canvas5closeEv+0x30>
 802154e:	f890 3068 	ldrb.w	r3, [r0, #104]	@ 0x68
 8021552:	f890 2069 	ldrb.w	r2, [r0, #105]	@ 0x69
 8021556:	4213      	tst	r3, r2
 8021558:	d10c      	bne.n	8021574 <_ZN8touchgfx6Canvas5closeEv+0x30>
 802155a:	f100 0514 	add.w	r5, r0, #20
 802155e:	b123      	cbz	r3, 802156a <_ZN8touchgfx6Canvas5closeEv+0x26>
 8021560:	e9d0 1218 	ldrd	r1, r2, [r0, #96]	@ 0x60
 8021564:	4628      	mov	r0, r5
 8021566:	f7ff fea1 	bl	80212ac <_ZN8touchgfx10Rasterizer6lineToEii>
 802156a:	e9d4 121b 	ldrd	r1, r2, [r4, #108]	@ 0x6c
 802156e:	4628      	mov	r0, r5
 8021570:	f7ff fe9c 	bl	80212ac <_ZN8touchgfx10Rasterizer6lineToEii>
 8021574:	2300      	movs	r3, #0
 8021576:	f884 305c 	strb.w	r3, [r4, #92]	@ 0x5c
 802157a:	e9d4 0306 	ldrd	r0, r3, [r4, #24]
 802157e:	4298      	cmp	r0, r3
 8021580:	bf34      	ite	cc
 8021582:	2000      	movcc	r0, #0
 8021584:	2001      	movcs	r0, #1
 8021586:	bd38      	pop	{r3, r4, r5, pc}

08021588 <_ZN8touchgfx6Canvas6renderEh>:
 8021588:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 802158c:	7a85      	ldrb	r5, [r0, #10]
 802158e:	4369      	muls	r1, r5
 8021590:	1c4d      	adds	r5, r1, #1
 8021592:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 8021596:	122d      	asrs	r5, r5, #8
 8021598:	4604      	mov	r4, r0
 802159a:	f000 8099 	beq.w	80216d0 <_ZN8touchgfx6Canvas6renderEh+0x148>
 802159e:	f890 305d 	ldrb.w	r3, [r0, #93]	@ 0x5d
 80215a2:	2b00      	cmp	r3, #0
 80215a4:	f000 8094 	beq.w	80216d0 <_ZN8touchgfx6Canvas6renderEh+0x148>
 80215a8:	f7ff ffcc 	bl	8021544 <_ZN8touchgfx6Canvas5closeEv>
 80215ac:	4607      	mov	r7, r0
 80215ae:	2800      	cmp	r0, #0
 80215b0:	d045      	beq.n	802163e <_ZN8touchgfx6Canvas6renderEh+0xb6>
 80215b2:	6860      	ldr	r0, [r4, #4]
 80215b4:	4e47      	ldr	r6, [pc, #284]	@ (80216d4 <_ZN8touchgfx6Canvas6renderEh+0x14c>)
 80215b6:	6803      	ldr	r3, [r0, #0]
 80215b8:	6837      	ldr	r7, [r6, #0]
 80215ba:	689b      	ldr	r3, [r3, #8]
 80215bc:	4798      	blx	r3
 80215be:	4601      	mov	r1, r0
 80215c0:	4638      	mov	r0, r7
 80215c2:	f7ea fc23 	bl	800be0c <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>
 80215c6:	4607      	mov	r7, r0
 80215c8:	f7e1 fefe 	bl	80033c8 <_ZN8touchgfx3HAL3lcdEv>
 80215cc:	6803      	ldr	r3, [r0, #0]
 80215ce:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80215d0:	4798      	blx	r3
 80215d2:	4680      	mov	r8, r0
 80215d4:	f7e1 fef8 	bl	80033c8 <_ZN8touchgfx3HAL3lcdEv>
 80215d8:	6803      	ldr	r3, [r0, #0]
 80215da:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80215dc:	4798      	blx	r3
 80215de:	280b      	cmp	r0, #11
 80215e0:	d85b      	bhi.n	802169a <_ZN8touchgfx6Canvas6renderEh+0x112>
 80215e2:	e8df f000 	tbb	[pc, r0]
 80215e6:	5c51      	.short	0x5c51
 80215e8:	305a066c 	.word	0x305a066c
 80215ec:	65656540 	.word	0x65656540
 80215f0:	6565      	.short	0x6565
 80215f2:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
 80215f6:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
 80215fa:	2208      	movs	r2, #8
 80215fc:	fb91 f2f2 	sdiv	r2, r1, r2
 8021600:	fb08 2303 	mla	r3, r8, r3, r2
 8021604:	441f      	add	r7, r3
 8021606:	424b      	negs	r3, r1
 8021608:	f003 0307 	and.w	r3, r3, #7
 802160c:	f001 0107 	and.w	r1, r1, #7
 8021610:	bf58      	it	pl
 8021612:	4259      	negpl	r1, r3
 8021614:	b2c9      	uxtb	r1, r1
 8021616:	b2ed      	uxtb	r5, r5
 8021618:	463a      	mov	r2, r7
 802161a:	e9cd 1500 	strd	r1, r5, [sp]
 802161e:	fa0f f388 	sxth.w	r3, r8
 8021622:	6861      	ldr	r1, [r4, #4]
 8021624:	f104 0014 	add.w	r0, r4, #20
 8021628:	f7ff fe4c 	bl	80212c4 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>
 802162c:	4607      	mov	r7, r0
 802162e:	6860      	ldr	r0, [r4, #4]
 8021630:	6803      	ldr	r3, [r0, #0]
 8021632:	691b      	ldr	r3, [r3, #16]
 8021634:	4798      	blx	r3
 8021636:	6830      	ldr	r0, [r6, #0]
 8021638:	6803      	ldr	r3, [r0, #0]
 802163a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 802163c:	4798      	blx	r3
 802163e:	4638      	mov	r0, r7
 8021640:	b002      	add	sp, #8
 8021642:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8021646:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
 802164a:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
 802164e:	2204      	movs	r2, #4
 8021650:	fb91 f2f2 	sdiv	r2, r1, r2
 8021654:	fb08 2303 	mla	r3, r8, r3, r2
 8021658:	441f      	add	r7, r3
 802165a:	424b      	negs	r3, r1
 802165c:	f003 0303 	and.w	r3, r3, #3
 8021660:	f001 0103 	and.w	r1, r1, #3
 8021664:	e7d4      	b.n	8021610 <_ZN8touchgfx6Canvas6renderEh+0x88>
 8021666:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
 802166a:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
 802166e:	2900      	cmp	r1, #0
 8021670:	f04f 0202 	mov.w	r2, #2
 8021674:	fb91 f2f2 	sdiv	r2, r1, r2
 8021678:	f001 0101 	and.w	r1, r1, #1
 802167c:	fb08 2303 	mla	r3, r8, r3, r2
 8021680:	441f      	add	r7, r3
 8021682:	bfb8      	it	lt
 8021684:	4249      	neglt	r1, r1
 8021686:	e7c5      	b.n	8021614 <_ZN8touchgfx6Canvas6renderEh+0x8c>
 8021688:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
 802168c:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8021690:	fb08 f303 	mul.w	r3, r8, r3
 8021694:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 8021698:	441f      	add	r7, r3
 802169a:	2100      	movs	r1, #0
 802169c:	e7bb      	b.n	8021616 <_ZN8touchgfx6Canvas6renderEh+0x8e>
 802169e:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
 80216a2:	fb08 f203 	mul.w	r2, r8, r3
 80216a6:	89a3      	ldrh	r3, [r4, #12]
 80216a8:	2103      	movs	r1, #3
 80216aa:	fb13 2301 	smlabb	r3, r3, r1, r2
 80216ae:	e7f3      	b.n	8021698 <_ZN8touchgfx6Canvas6renderEh+0x110>
 80216b0:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
 80216b4:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 80216b8:	fb08 2303 	mla	r3, r8, r3, r2
 80216bc:	e7ec      	b.n	8021698 <_ZN8touchgfx6Canvas6renderEh+0x110>
 80216be:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
 80216c2:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 80216c6:	fb08 f303 	mul.w	r3, r8, r3
 80216ca:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 80216ce:	e7e3      	b.n	8021698 <_ZN8touchgfx6Canvas6renderEh+0x110>
 80216d0:	2701      	movs	r7, #1
 80216d2:	e7b4      	b.n	802163e <_ZN8touchgfx6Canvas6renderEh+0xb6>
 80216d4:	200133d4 	.word	0x200133d4

080216d8 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>:
 80216d8:	b510      	push	{r4, lr}
 80216da:	4b06      	ldr	r3, [pc, #24]	@ (80216f4 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x1c>)
 80216dc:	781b      	ldrb	r3, [r3, #0]
 80216de:	2b01      	cmp	r3, #1
 80216e0:	d107      	bne.n	80216f2 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x1a>
 80216e2:	f9b0 0008 	ldrsh.w	r0, [r0, #8]
 80216e6:	680b      	ldr	r3, [r1, #0]
 80216e8:	6814      	ldr	r4, [r2, #0]
 80216ea:	ebc3 1340 	rsb	r3, r3, r0, lsl #5
 80216ee:	6013      	str	r3, [r2, #0]
 80216f0:	600c      	str	r4, [r1, #0]
 80216f2:	bd10      	pop	{r4, pc}
 80216f4:	200133ca 	.word	0x200133ca

080216f8 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>:
 80216f8:	b513      	push	{r0, r1, r4, lr}
 80216fa:	f890 305c 	ldrb.w	r3, [r0, #92]	@ 0x5c
 80216fe:	4604      	mov	r4, r0
 8021700:	e9cd 2100 	strd	r2, r1, [sp]
 8021704:	b9a3      	cbnz	r3, 8021730 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x38>
 8021706:	466a      	mov	r2, sp
 8021708:	a901      	add	r1, sp, #4
 802170a:	4620      	mov	r0, r4
 802170c:	f7ff ffe4 	bl	80216d8 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
 8021710:	6ce3      	ldr	r3, [r4, #76]	@ 0x4c
 8021712:	9901      	ldr	r1, [sp, #4]
 8021714:	9a00      	ldr	r2, [sp, #0]
 8021716:	1ac9      	subs	r1, r1, r3
 8021718:	6d23      	ldr	r3, [r4, #80]	@ 0x50
 802171a:	9101      	str	r1, [sp, #4]
 802171c:	1ad2      	subs	r2, r2, r3
 802171e:	2a00      	cmp	r2, #0
 8021720:	9200      	str	r2, [sp, #0]
 8021722:	da0b      	bge.n	802173c <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x44>
 8021724:	2301      	movs	r3, #1
 8021726:	2900      	cmp	r1, #0
 8021728:	da0e      	bge.n	8021748 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x50>
 802172a:	f043 0304 	orr.w	r3, r3, #4
 802172e:	e013      	b.n	8021758 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x60>
 8021730:	f7ff ff08 	bl	8021544 <_ZN8touchgfx6Canvas5closeEv>
 8021734:	2800      	cmp	r0, #0
 8021736:	d1e6      	bne.n	8021706 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0xe>
 8021738:	b002      	add	sp, #8
 802173a:	bd10      	pop	{r4, pc}
 802173c:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 802173e:	429a      	cmp	r2, r3
 8021740:	bfac      	ite	ge
 8021742:	2302      	movge	r3, #2
 8021744:	2300      	movlt	r3, #0
 8021746:	e7ee      	b.n	8021726 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x2e>
 8021748:	6d60      	ldr	r0, [r4, #84]	@ 0x54
 802174a:	4281      	cmp	r1, r0
 802174c:	bfac      	ite	ge
 802174e:	2008      	movge	r0, #8
 8021750:	2000      	movlt	r0, #0
 8021752:	4318      	orrs	r0, r3
 8021754:	b2c3      	uxtb	r3, r0
 8021756:	b158      	cbz	r0, 8021770 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x78>
 8021758:	2200      	movs	r2, #0
 802175a:	f884 205c 	strb.w	r2, [r4, #92]	@ 0x5c
 802175e:	9901      	ldr	r1, [sp, #4]
 8021760:	9a00      	ldr	r2, [sp, #0]
 8021762:	66e1      	str	r1, [r4, #108]	@ 0x6c
 8021764:	6722      	str	r2, [r4, #112]	@ 0x70
 8021766:	e9c4 1218 	strd	r1, r2, [r4, #96]	@ 0x60
 802176a:	f884 3068 	strb.w	r3, [r4, #104]	@ 0x68
 802176e:	e7e3      	b.n	8021738 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x40>
 8021770:	f884 0069 	strb.w	r0, [r4, #105]	@ 0x69
 8021774:	e9d4 3006 	ldrd	r3, r0, [r4, #24]
 8021778:	4298      	cmp	r0, r3
 802177a:	d803      	bhi.n	8021784 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x8c>
 802177c:	f104 0014 	add.w	r0, r4, #20
 8021780:	f7ec fefa 	bl	800e578 <_ZN8touchgfx7Outline6moveToEii>
 8021784:	2301      	movs	r3, #1
 8021786:	f884 305c 	strb.w	r3, [r4, #92]	@ 0x5c
 802178a:	f884 305d 	strb.w	r3, [r4, #93]	@ 0x5d
 802178e:	2300      	movs	r3, #0
 8021790:	e7e5      	b.n	802175e <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x66>

08021792 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>:
 8021792:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8021794:	ab02      	add	r3, sp, #8
 8021796:	4604      	mov	r4, r0
 8021798:	f843 2d08 	str.w	r2, [r3, #-8]!
 802179c:	9101      	str	r1, [sp, #4]
 802179e:	461a      	mov	r2, r3
 80217a0:	a901      	add	r1, sp, #4
 80217a2:	f7ff ff99 	bl	80216d8 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
 80217a6:	6ce3      	ldr	r3, [r4, #76]	@ 0x4c
 80217a8:	9901      	ldr	r1, [sp, #4]
 80217aa:	9a00      	ldr	r2, [sp, #0]
 80217ac:	1ac9      	subs	r1, r1, r3
 80217ae:	6d23      	ldr	r3, [r4, #80]	@ 0x50
 80217b0:	9101      	str	r1, [sp, #4]
 80217b2:	1ad2      	subs	r2, r2, r3
 80217b4:	2a00      	cmp	r2, #0
 80217b6:	9200      	str	r2, [sp, #0]
 80217b8:	db1c      	blt.n	80217f4 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x62>
 80217ba:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 80217bc:	429a      	cmp	r2, r3
 80217be:	bfac      	ite	ge
 80217c0:	2002      	movge	r0, #2
 80217c2:	2000      	movlt	r0, #0
 80217c4:	2900      	cmp	r1, #0
 80217c6:	db17      	blt.n	80217f8 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x66>
 80217c8:	6d63      	ldr	r3, [r4, #84]	@ 0x54
 80217ca:	4299      	cmp	r1, r3
 80217cc:	bfac      	ite	ge
 80217ce:	2308      	movge	r3, #8
 80217d0:	2300      	movlt	r3, #0
 80217d2:	4303      	orrs	r3, r0
 80217d4:	f894 0068 	ldrb.w	r0, [r4, #104]	@ 0x68
 80217d8:	b2dd      	uxtb	r5, r3
 80217da:	b978      	cbnz	r0, 80217fc <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x6a>
 80217dc:	f104 0014 	add.w	r0, r4, #20
 80217e0:	f7ff fd64 	bl	80212ac <_ZN8touchgfx10Rasterizer6lineToEii>
 80217e4:	9b01      	ldr	r3, [sp, #4]
 80217e6:	6623      	str	r3, [r4, #96]	@ 0x60
 80217e8:	9b00      	ldr	r3, [sp, #0]
 80217ea:	6663      	str	r3, [r4, #100]	@ 0x64
 80217ec:	f884 5068 	strb.w	r5, [r4, #104]	@ 0x68
 80217f0:	b002      	add	sp, #8
 80217f2:	bd70      	pop	{r4, r5, r6, pc}
 80217f4:	2001      	movs	r0, #1
 80217f6:	e7e5      	b.n	80217c4 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x32>
 80217f8:	2304      	movs	r3, #4
 80217fa:	e7ea      	b.n	80217d2 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x40>
 80217fc:	b113      	cbz	r3, 8021804 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x72>
 80217fe:	ea10 0305 	ands.w	r3, r0, r5
 8021802:	d11c      	bne.n	802183e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xac>
 8021804:	f894 305c 	ldrb.w	r3, [r4, #92]	@ 0x5c
 8021808:	f104 0614 	add.w	r6, r4, #20
 802180c:	e9d4 1218 	ldrd	r1, r2, [r4, #96]	@ 0x60
 8021810:	b98b      	cbnz	r3, 8021836 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xa4>
 8021812:	f884 0069 	strb.w	r0, [r4, #105]	@ 0x69
 8021816:	e9d4 3006 	ldrd	r3, r0, [r4, #24]
 802181a:	4298      	cmp	r0, r3
 802181c:	d802      	bhi.n	8021824 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x92>
 802181e:	4630      	mov	r0, r6
 8021820:	f7ec feaa 	bl	800e578 <_ZN8touchgfx7Outline6moveToEii>
 8021824:	2301      	movs	r3, #1
 8021826:	f884 305c 	strb.w	r3, [r4, #92]	@ 0x5c
 802182a:	f884 305d 	strb.w	r3, [r4, #93]	@ 0x5d
 802182e:	e9dd 2100 	ldrd	r2, r1, [sp]
 8021832:	4630      	mov	r0, r6
 8021834:	e7d4      	b.n	80217e0 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x4e>
 8021836:	4630      	mov	r0, r6
 8021838:	f7ff fd38 	bl	80212ac <_ZN8touchgfx10Rasterizer6lineToEii>
 802183c:	e7f7      	b.n	802182e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x9c>
 802183e:	461d      	mov	r5, r3
 8021840:	e7d0      	b.n	80217e4 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x52>
	...

08021844 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj>:
 8021844:	b538      	push	{r3, r4, r5, lr}
 8021846:	ed2d 8b10 	vpush	{d8-d15}
 802184a:	eef6 ba00 	vmov.f32	s23, #96	@ 0x3f000000  0.5
 802184e:	ed9f ba5a 	vldr	s22, [pc, #360]	@ 80219b8 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x174>
 8021852:	4605      	mov	r5, r0
 8021854:	eeb0 ca40 	vmov.f32	s24, s0
 8021858:	eef0 ca60 	vmov.f32	s25, s1
 802185c:	eeb0 da41 	vmov.f32	s26, s2
 8021860:	eef0 da61 	vmov.f32	s27, s3
 8021864:	eeb0 ea42 	vmov.f32	s28, s4
 8021868:	eef0 ea62 	vmov.f32	s29, s5
 802186c:	460c      	mov	r4, r1
 802186e:	eef0 aa6b 	vmov.f32	s21, s23
 8021872:	2c08      	cmp	r4, #8
 8021874:	d86e      	bhi.n	8021954 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x110>
 8021876:	ee7e 6a4c 	vsub.f32	s13, s28, s24
 802187a:	ee7d 7aee 	vsub.f32	s15, s27, s29
 802187e:	ee3d 6a4e 	vsub.f32	s12, s26, s28
 8021882:	ee3e 7aec 	vsub.f32	s14, s29, s25
 8021886:	ee66 7ae7 	vnmul.f32	s15, s13, s15
 802188a:	ee3c fa0d 	vadd.f32	s30, s24, s26
 802188e:	eee6 7a07 	vfma.f32	s15, s12, s14
 8021892:	ee7c faad 	vadd.f32	s31, s25, s27
 8021896:	ee7d 9a0e 	vadd.f32	s19, s26, s28
 802189a:	ee3d aaae 	vadd.f32	s20, s27, s29
 802189e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80218a2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80218a6:	ee2f fa2b 	vmul.f32	s30, s30, s23
 80218aa:	ee6f faab 	vmul.f32	s31, s31, s23
 80218ae:	ee69 9aab 	vmul.f32	s19, s19, s23
 80218b2:	ee2a aa2b 	vmul.f32	s20, s20, s23
 80218b6:	bf48      	it	mi
 80218b8:	eef1 7a67 	vnegmi.f32	s15, s15
 80218bc:	ee7f 8a29 	vadd.f32	s17, s30, s19
 80218c0:	ee3f 9a8a 	vadd.f32	s18, s31, s20
 80218c4:	eef4 7acb 	vcmpe.f32	s15, s22
 80218c8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80218cc:	ee68 8aab 	vmul.f32	s17, s17, s23
 80218d0:	ee29 9a2b 	vmul.f32	s18, s18, s23
 80218d4:	eeb5 6a00 	vmov.f32	s12, #80	@ 0x3e800000  0.250
 80218d8:	dd3f      	ble.n	802195a <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x116>
 80218da:	ee27 7a07 	vmul.f32	s14, s14, s14
 80218de:	ee67 7aa7 	vmul.f32	s15, s15, s15
 80218e2:	eea6 7aa6 	vfma.f32	s14, s13, s13
 80218e6:	ee27 7a06 	vmul.f32	s14, s14, s12
 80218ea:	eef4 7ac7 	vcmpe.f32	s15, s14
 80218ee:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80218f2:	d847      	bhi.n	8021984 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x140>
 80218f4:	ee7e 0a4d 	vsub.f32	s1, s28, s26
 80218f8:	ee3e 0aed 	vsub.f32	s0, s29, s27
 80218fc:	f000 fa67 	bl	8021dce <atan2f>
 8021900:	ee7d 0a4c 	vsub.f32	s1, s26, s24
 8021904:	eeb0 8a40 	vmov.f32	s16, s0
 8021908:	ee3d 0aec 	vsub.f32	s0, s27, s25
 802190c:	f000 fa5f 	bl	8021dce <atan2f>
 8021910:	ee38 0a40 	vsub.f32	s0, s16, s0
 8021914:	eddf 7a29 	vldr	s15, [pc, #164]	@ 80219bc <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x178>
 8021918:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 802191c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8021920:	bf48      	it	mi
 8021922:	eeb1 0a40 	vnegmi.f32	s0, s0
 8021926:	eeb4 0ae7 	vcmpe.f32	s0, s15
 802192a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802192e:	bfa4      	itt	ge
 8021930:	eddf 7a23 	vldrge	s15, [pc, #140]	@ 80219c0 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x17c>
 8021934:	ee37 0ac0 	vsubge.f32	s0, s15, s0
 8021938:	eddf 7a22 	vldr	s15, [pc, #136]	@ 80219c4 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x180>
 802193c:	eeb4 0ae7 	vcmpe.f32	s0, s15
 8021940:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8021944:	d51e      	bpl.n	8021984 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x140>
 8021946:	eef0 0a49 	vmov.f32	s1, s18
 802194a:	eeb0 0a68 	vmov.f32	s0, s17
 802194e:	4628      	mov	r0, r5
 8021950:	f7eb fc62 	bl	800d218 <_ZN8touchgfx6Canvas6lineToIfEEvT_S2_>
 8021954:	ecbd 8b10 	vpop	{d8-d15}
 8021958:	bd38      	pop	{r3, r4, r5, pc}
 802195a:	ee7c 7a0e 	vadd.f32	s15, s24, s28
 802195e:	eeb0 7a68 	vmov.f32	s14, s17
 8021962:	eea7 7aea 	vfms.f32	s14, s15, s21
 8021966:	ee7c 7aae 	vadd.f32	s15, s25, s29
 802196a:	eef0 6a49 	vmov.f32	s13, s18
 802196e:	eee7 6aea 	vfms.f32	s13, s15, s21
 8021972:	ee66 7aa6 	vmul.f32	s15, s13, s13
 8021976:	eee7 7a07 	vfma.f32	s15, s14, s14
 802197a:	eef4 7ac6 	vcmpe.f32	s15, s12
 802197e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8021982:	d9e0      	bls.n	8021946 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x102>
 8021984:	3401      	adds	r4, #1
 8021986:	eef0 0a6c 	vmov.f32	s1, s25
 802198a:	eeb0 0a4c 	vmov.f32	s0, s24
 802198e:	4621      	mov	r1, r4
 8021990:	eef0 2a49 	vmov.f32	s5, s18
 8021994:	eeb0 2a68 	vmov.f32	s4, s17
 8021998:	eef0 1a6f 	vmov.f32	s3, s31
 802199c:	eeb0 1a4f 	vmov.f32	s2, s30
 80219a0:	4628      	mov	r0, r5
 80219a2:	f7ff ff4f 	bl	8021844 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj>
 80219a6:	eef0 da4a 	vmov.f32	s27, s20
 80219aa:	eeb0 da69 	vmov.f32	s26, s19
 80219ae:	eef0 ca49 	vmov.f32	s25, s18
 80219b2:	eeb0 ca68 	vmov.f32	s24, s17
 80219b6:	e75c      	b.n	8021872 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x2e>
 80219b8:	2edbe6ff 	.word	0x2edbe6ff
 80219bc:	40490fdb 	.word	0x40490fdb
 80219c0:	40c90fdb 	.word	0x40c90fdb
 80219c4:	3dcccccd 	.word	0x3dcccccd

080219c8 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj>:
 80219c8:	b530      	push	{r4, r5, lr}
 80219ca:	ed2d 8b10 	vpush	{d8-d15}
 80219ce:	4604      	mov	r4, r0
 80219d0:	b085      	sub	sp, #20
 80219d2:	eef0 8a40 	vmov.f32	s17, s0
 80219d6:	eef0 9a60 	vmov.f32	s19, s1
 80219da:	eef0 fa41 	vmov.f32	s31, s2
 80219de:	eeb0 fa61 	vmov.f32	s30, s3
 80219e2:	eef0 ba42 	vmov.f32	s23, s4
 80219e6:	eeb0 ca62 	vmov.f32	s24, s5
 80219ea:	eef0 aa43 	vmov.f32	s21, s6
 80219ee:	eeb0 ba63 	vmov.f32	s22, s7
 80219f2:	460d      	mov	r5, r1
 80219f4:	2d08      	cmp	r5, #8
 80219f6:	f200 8115 	bhi.w	8021c24 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x25c>
 80219fa:	ee3b 6aaa 	vadd.f32	s12, s23, s21
 80219fe:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 8021a02:	ee7f 6aab 	vadd.f32	s13, s31, s23
 8021a06:	ee26 6a27 	vmul.f32	s12, s12, s15
 8021a0a:	ee38 daaf 	vadd.f32	s26, s17, s31
 8021a0e:	ed8d 6a01 	vstr	s12, [sp, #4]
 8021a12:	eea6 6aa7 	vfma.f32	s12, s13, s15
 8021a16:	ee2d da27 	vmul.f32	s26, s26, s15
 8021a1a:	ee7c ca0b 	vadd.f32	s25, s24, s22
 8021a1e:	eeb0 ea4d 	vmov.f32	s28, s26
 8021a22:	eea6 eaa7 	vfma.f32	s28, s13, s15
 8021a26:	ee6c caa7 	vmul.f32	s25, s25, s15
 8021a2a:	ee66 6a27 	vmul.f32	s13, s12, s15
 8021a2e:	ee3f 7a0c 	vadd.f32	s14, s30, s24
 8021a32:	edcd 6a03 	vstr	s13, [sp, #12]
 8021a36:	ee79 da8f 	vadd.f32	s27, s19, s30
 8021a3a:	eef0 6a6c 	vmov.f32	s13, s25
 8021a3e:	eee7 6a27 	vfma.f32	s13, s14, s15
 8021a42:	ee6d daa7 	vmul.f32	s27, s27, s15
 8021a46:	ee2e ea27 	vmul.f32	s28, s28, s15
 8021a4a:	eef0 ea6d 	vmov.f32	s29, s27
 8021a4e:	eee7 ea27 	vfma.f32	s29, s14, s15
 8021a52:	ee26 7aa7 	vmul.f32	s14, s13, s15
 8021a56:	ee6e eaa7 	vmul.f32	s29, s29, s15
 8021a5a:	ed8d 7a02 	vstr	s14, [sp, #8]
 8021a5e:	ed9d 7a03 	vldr	s14, [sp, #12]
 8021a62:	ee3e 9a07 	vadd.f32	s18, s28, s14
 8021a66:	ed9d 7a02 	vldr	s14, [sp, #8]
 8021a6a:	ee3e aa87 	vadd.f32	s20, s29, s14
 8021a6e:	ee29 9a27 	vmul.f32	s18, s18, s15
 8021a72:	ee2a aa27 	vmul.f32	s20, s20, s15
 8021a76:	eef0 6a67 	vmov.f32	s13, s15
 8021a7a:	2d00      	cmp	r5, #0
 8021a7c:	f000 810d 	beq.w	8021c9a <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2d2>
 8021a80:	ee7a 5ae8 	vsub.f32	s11, s21, s17
 8021a84:	ee3f 7a4b 	vsub.f32	s14, s30, s22
 8021a88:	ee7b 7a69 	vsub.f32	s15, s22, s19
 8021a8c:	ee3f 6aea 	vsub.f32	s12, s31, s21
 8021a90:	ee25 7ac7 	vnmul.f32	s14, s11, s14
 8021a94:	ee3b 5aea 	vsub.f32	s10, s23, s21
 8021a98:	eea6 7a27 	vfma.f32	s14, s12, s15
 8021a9c:	ee3c 6a4b 	vsub.f32	s12, s24, s22
 8021aa0:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 8021aa4:	ee25 6ac6 	vnmul.f32	s12, s11, s12
 8021aa8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8021aac:	eea5 6a27 	vfma.f32	s12, s10, s15
 8021ab0:	eddf 4a8b 	vldr	s9, [pc, #556]	@ 8021ce0 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x318>
 8021ab4:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
 8021ab8:	bf48      	it	mi
 8021aba:	eeb1 7a47 	vnegmi.f32	s14, s14
 8021abe:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8021ac2:	eeb4 7ae4 	vcmpe.f32	s14, s9
 8021ac6:	bf48      	it	mi
 8021ac8:	eeb1 6a46 	vnegmi.f32	s12, s12
 8021acc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8021ad0:	eeb5 5a00 	vmov.f32	s10, #80	@ 0x3e800000  0.250
 8021ad4:	f340 80aa 	ble.w	8021c2c <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x264>
 8021ad8:	eeb4 6ae4 	vcmpe.f32	s12, s9
 8021adc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8021ae0:	dd5c      	ble.n	8021b9c <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x1d4>
 8021ae2:	ee65 5aa5 	vmul.f32	s11, s11, s11
 8021ae6:	ee37 7a06 	vadd.f32	s14, s14, s12
 8021aea:	eee7 5aa7 	vfma.f32	s11, s15, s15
 8021aee:	ee27 7a07 	vmul.f32	s14, s14, s14
 8021af2:	ee65 7a85 	vmul.f32	s15, s11, s10
 8021af6:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8021afa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8021afe:	f200 80cc 	bhi.w	8021c9a <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2d2>
 8021b02:	ee7b 0aef 	vsub.f32	s1, s23, s31
 8021b06:	ee3c 0a4f 	vsub.f32	s0, s24, s30
 8021b0a:	f000 f960 	bl	8021dce <atan2f>
 8021b0e:	ee7f 0ae8 	vsub.f32	s1, s31, s17
 8021b12:	eeb0 8a40 	vmov.f32	s16, s0
 8021b16:	ee3f 0a69 	vsub.f32	s0, s30, s19
 8021b1a:	f000 f958 	bl	8021dce <atan2f>
 8021b1e:	ee38 fa40 	vsub.f32	s30, s16, s0
 8021b22:	ee7a 0aeb 	vsub.f32	s1, s21, s23
 8021b26:	eeb5 fac0 	vcmpe.f32	s30, #0.0
 8021b2a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8021b2e:	ee3b 0a4c 	vsub.f32	s0, s22, s24
 8021b32:	bf48      	it	mi
 8021b34:	eeb1 fa4f 	vnegmi.f32	s30, s30
 8021b38:	f000 f949 	bl	8021dce <atan2f>
 8021b3c:	ee30 0a48 	vsub.f32	s0, s0, s16
 8021b40:	eddf 7a68 	vldr	s15, [pc, #416]	@ 8021ce4 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x31c>
 8021b44:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8021b48:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8021b4c:	eeb4 fae7 	vcmpe.f32	s30, s15
 8021b50:	bf48      	it	mi
 8021b52:	eeb1 0a40 	vnegmi.f32	s0, s0
 8021b56:	eddf 7a63 	vldr	s15, [pc, #396]	@ 8021ce4 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x31c>
 8021b5a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8021b5e:	bfa8      	it	ge
 8021b60:	ed9f 7a61 	vldrge	s14, [pc, #388]	@ 8021ce8 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x320>
 8021b64:	eeb4 0ae7 	vcmpe.f32	s0, s15
 8021b68:	bfa8      	it	ge
 8021b6a:	ee37 fa4f 	vsubge.f32	s30, s14, s30
 8021b6e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8021b72:	bfa8      	it	ge
 8021b74:	ed9f 7a5c 	vldrge	s14, [pc, #368]	@ 8021ce8 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x320>
 8021b78:	eddf 7a5c 	vldr	s15, [pc, #368]	@ 8021cec <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x324>
 8021b7c:	bfa8      	it	ge
 8021b7e:	ee37 0a40 	vsubge.f32	s0, s14, s0
 8021b82:	ee3f 0a00 	vadd.f32	s0, s30, s0
 8021b86:	eeb4 0ae7 	vcmpe.f32	s0, s15
 8021b8a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8021b8e:	f140 8084 	bpl.w	8021c9a <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2d2>
 8021b92:	eef0 0a4a 	vmov.f32	s1, s20
 8021b96:	eeb0 0a49 	vmov.f32	s0, s18
 8021b9a:	e040      	b.n	8021c1e <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x256>
 8021b9c:	ee67 7aa7 	vmul.f32	s15, s15, s15
 8021ba0:	ee27 7a07 	vmul.f32	s14, s14, s14
 8021ba4:	eee5 7aa5 	vfma.f32	s15, s11, s11
 8021ba8:	ee67 7a85 	vmul.f32	s15, s15, s10
 8021bac:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8021bb0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8021bb4:	d871      	bhi.n	8021c9a <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2d2>
 8021bb6:	ee7b 0aef 	vsub.f32	s1, s23, s31
 8021bba:	ee3c 0a4f 	vsub.f32	s0, s24, s30
 8021bbe:	f000 f906 	bl	8021dce <atan2f>
 8021bc2:	ee7f 0ae8 	vsub.f32	s1, s31, s17
 8021bc6:	eeb0 8a40 	vmov.f32	s16, s0
 8021bca:	ee3f 0a69 	vsub.f32	s0, s30, s19
 8021bce:	f000 f8fe 	bl	8021dce <atan2f>
 8021bd2:	ee38 0a40 	vsub.f32	s0, s16, s0
 8021bd6:	eddf 7a43 	vldr	s15, [pc, #268]	@ 8021ce4 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x31c>
 8021bda:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8021bde:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8021be2:	bf48      	it	mi
 8021be4:	eeb1 0a40 	vnegmi.f32	s0, s0
 8021be8:	eeb4 0ae7 	vcmpe.f32	s0, s15
 8021bec:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8021bf0:	bfa4      	itt	ge
 8021bf2:	eddf 7a3d 	vldrge	s15, [pc, #244]	@ 8021ce8 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x320>
 8021bf6:	ee37 0ac0 	vsubge.f32	s0, s15, s0
 8021bfa:	eddf 7a3c 	vldr	s15, [pc, #240]	@ 8021cec <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x324>
 8021bfe:	eeb4 0ae7 	vcmpe.f32	s0, s15
 8021c02:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8021c06:	d548      	bpl.n	8021c9a <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2d2>
 8021c08:	eef0 0a4f 	vmov.f32	s1, s30
 8021c0c:	eeb0 0a6f 	vmov.f32	s0, s31
 8021c10:	4620      	mov	r0, r4
 8021c12:	f7eb fb01 	bl	800d218 <_ZN8touchgfx6Canvas6lineToIfEEvT_S2_>
 8021c16:	eef0 0a4c 	vmov.f32	s1, s24
 8021c1a:	eeb0 0a6b 	vmov.f32	s0, s23
 8021c1e:	4620      	mov	r0, r4
 8021c20:	f7eb fafa 	bl	800d218 <_ZN8touchgfx6Canvas6lineToIfEEvT_S2_>
 8021c24:	b005      	add	sp, #20
 8021c26:	ecbd 8b10 	vpop	{d8-d15}
 8021c2a:	bd30      	pop	{r4, r5, pc}
 8021c2c:	ed9f 7a2c 	vldr	s14, [pc, #176]	@ 8021ce0 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x318>
 8021c30:	eeb4 6ac7 	vcmpe.f32	s12, s14
 8021c34:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8021c38:	dd19      	ble.n	8021c6e <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2a6>
 8021c3a:	ee67 7aa7 	vmul.f32	s15, s15, s15
 8021c3e:	ee26 7a06 	vmul.f32	s14, s12, s12
 8021c42:	eee5 7aa5 	vfma.f32	s15, s11, s11
 8021c46:	ee67 7a85 	vmul.f32	s15, s15, s10
 8021c4a:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8021c4e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8021c52:	d822      	bhi.n	8021c9a <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2d2>
 8021c54:	ee7a 0aeb 	vsub.f32	s1, s21, s23
 8021c58:	ee3b 0a4c 	vsub.f32	s0, s22, s24
 8021c5c:	f000 f8b7 	bl	8021dce <atan2f>
 8021c60:	ee7b 0aef 	vsub.f32	s1, s23, s31
 8021c64:	eeb0 8a40 	vmov.f32	s16, s0
 8021c68:	ee3c 0a4f 	vsub.f32	s0, s24, s30
 8021c6c:	e7af      	b.n	8021bce <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x206>
 8021c6e:	ee78 7aaa 	vadd.f32	s15, s17, s21
 8021c72:	eeb0 7a49 	vmov.f32	s14, s18
 8021c76:	eea7 7ae6 	vfms.f32	s14, s15, s13
 8021c7a:	ee79 7a8b 	vadd.f32	s15, s19, s22
 8021c7e:	eeb0 6a4a 	vmov.f32	s12, s20
 8021c82:	eea7 6ae6 	vfms.f32	s12, s15, s13
 8021c86:	ee66 7a06 	vmul.f32	s15, s12, s12
 8021c8a:	eee7 7a07 	vfma.f32	s15, s14, s14
 8021c8e:	eef4 7ac5 	vcmpe.f32	s15, s10
 8021c92:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8021c96:	f67f af7c 	bls.w	8021b92 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x1ca>
 8021c9a:	3501      	adds	r5, #1
 8021c9c:	eef0 0a69 	vmov.f32	s1, s19
 8021ca0:	eeb0 0a68 	vmov.f32	s0, s17
 8021ca4:	4629      	mov	r1, r5
 8021ca6:	eef0 3a4a 	vmov.f32	s7, s20
 8021caa:	eeb0 3a49 	vmov.f32	s6, s18
 8021cae:	eef0 2a6e 	vmov.f32	s5, s29
 8021cb2:	eeb0 2a4e 	vmov.f32	s4, s28
 8021cb6:	eef0 1a6d 	vmov.f32	s3, s27
 8021cba:	eeb0 1a4d 	vmov.f32	s2, s26
 8021cbe:	4620      	mov	r0, r4
 8021cc0:	f7ff fe82 	bl	80219c8 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj>
 8021cc4:	eeb0 ca6c 	vmov.f32	s24, s25
 8021cc8:	eddd ba01 	vldr	s23, [sp, #4]
 8021ccc:	ed9d fa02 	vldr	s30, [sp, #8]
 8021cd0:	eddd fa03 	vldr	s31, [sp, #12]
 8021cd4:	eef0 9a4a 	vmov.f32	s19, s20
 8021cd8:	eef0 8a49 	vmov.f32	s17, s18
 8021cdc:	e68a      	b.n	80219f4 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2c>
 8021cde:	bf00      	nop
 8021ce0:	2edbe6ff 	.word	0x2edbe6ff
 8021ce4:	40490fdb 	.word	0x40490fdb
 8021ce8:	40c90fdb 	.word	0x40c90fdb
 8021cec:	3dcccccd 	.word	0x3dcccccd

08021cf0 <_ZN8touchgfx6CanvasD1Ev>:
 8021cf0:	b510      	push	{r4, lr}
 8021cf2:	4b04      	ldr	r3, [pc, #16]	@ (8021d04 <_ZN8touchgfx6CanvasD1Ev+0x14>)
 8021cf4:	4604      	mov	r4, r0
 8021cf6:	f840 3b14 	str.w	r3, [r0], #20
 8021cfa:	f7eb ff38 	bl	800db6e <_ZN8touchgfx7OutlineD1Ev>
 8021cfe:	4620      	mov	r0, r4
 8021d00:	bd10      	pop	{r4, pc}
 8021d02:	bf00      	nop
 8021d04:	08025658 	.word	0x08025658

08021d08 <_ZN8touchgfx6CanvasD0Ev>:
 8021d08:	b510      	push	{r4, lr}
 8021d0a:	4604      	mov	r4, r0
 8021d0c:	f7ff fff0 	bl	8021cf0 <_ZN8touchgfx6CanvasD1Ev>
 8021d10:	4620      	mov	r0, r4
 8021d12:	2174      	movs	r1, #116	@ 0x74
 8021d14:	f000 f807 	bl	8021d26 <_ZdlPvj>
 8021d18:	4620      	mov	r0, r4
 8021d1a:	bd10      	pop	{r4, pc}

08021d1c <__aeabi_atexit>:
 8021d1c:	460b      	mov	r3, r1
 8021d1e:	4601      	mov	r1, r0
 8021d20:	4618      	mov	r0, r3
 8021d22:	f001 b921 	b.w	8022f68 <__cxa_atexit>

08021d26 <_ZdlPvj>:
 8021d26:	f000 b812 	b.w	8021d4e <_ZdlPv>

08021d2a <__cxa_guard_acquire>:
 8021d2a:	6802      	ldr	r2, [r0, #0]
 8021d2c:	07d2      	lsls	r2, r2, #31
 8021d2e:	4603      	mov	r3, r0
 8021d30:	d405      	bmi.n	8021d3e <__cxa_guard_acquire+0x14>
 8021d32:	7842      	ldrb	r2, [r0, #1]
 8021d34:	b102      	cbz	r2, 8021d38 <__cxa_guard_acquire+0xe>
 8021d36:	deff      	udf	#255	@ 0xff
 8021d38:	2001      	movs	r0, #1
 8021d3a:	7058      	strb	r0, [r3, #1]
 8021d3c:	4770      	bx	lr
 8021d3e:	2000      	movs	r0, #0
 8021d40:	4770      	bx	lr

08021d42 <__cxa_guard_release>:
 8021d42:	2301      	movs	r3, #1
 8021d44:	6003      	str	r3, [r0, #0]
 8021d46:	4770      	bx	lr

08021d48 <__cxa_pure_virtual>:
 8021d48:	b508      	push	{r3, lr}
 8021d4a:	f000 f80f 	bl	8021d6c <_ZSt9terminatev>

08021d4e <_ZdlPv>:
 8021d4e:	f001 b855 	b.w	8022dfc <free>

08021d52 <_ZN10__cxxabiv111__terminateEPFvvE>:
 8021d52:	b508      	push	{r3, lr}
 8021d54:	4780      	blx	r0
 8021d56:	f001 f81d 	bl	8022d94 <abort>
	...

08021d5c <_ZSt13get_terminatev>:
 8021d5c:	4b02      	ldr	r3, [pc, #8]	@ (8021d68 <_ZSt13get_terminatev+0xc>)
 8021d5e:	6818      	ldr	r0, [r3, #0]
 8021d60:	f3bf 8f5b 	dmb	ish
 8021d64:	4770      	bx	lr
 8021d66:	bf00      	nop
 8021d68:	20000210 	.word	0x20000210

08021d6c <_ZSt9terminatev>:
 8021d6c:	b508      	push	{r3, lr}
 8021d6e:	f7ff fff5 	bl	8021d5c <_ZSt13get_terminatev>
 8021d72:	f7ff ffee 	bl	8021d52 <_ZN10__cxxabiv111__terminateEPFvvE>

08021d76 <sqrt>:
 8021d76:	b538      	push	{r3, r4, r5, lr}
 8021d78:	ed2d 8b02 	vpush	{d8}
 8021d7c:	ec55 4b10 	vmov	r4, r5, d0
 8021d80:	f000 f8d0 	bl	8021f24 <__ieee754_sqrt>
 8021d84:	4622      	mov	r2, r4
 8021d86:	462b      	mov	r3, r5
 8021d88:	4620      	mov	r0, r4
 8021d8a:	4629      	mov	r1, r5
 8021d8c:	eeb0 8a40 	vmov.f32	s16, s0
 8021d90:	eef0 8a60 	vmov.f32	s17, s1
 8021d94:	f7de feda 	bl	8000b4c <__aeabi_dcmpun>
 8021d98:	b990      	cbnz	r0, 8021dc0 <sqrt+0x4a>
 8021d9a:	2200      	movs	r2, #0
 8021d9c:	2300      	movs	r3, #0
 8021d9e:	4620      	mov	r0, r4
 8021da0:	4629      	mov	r1, r5
 8021da2:	f7de feab 	bl	8000afc <__aeabi_dcmplt>
 8021da6:	b158      	cbz	r0, 8021dc0 <sqrt+0x4a>
 8021da8:	f001 faa6 	bl	80232f8 <__errno>
 8021dac:	2321      	movs	r3, #33	@ 0x21
 8021dae:	6003      	str	r3, [r0, #0]
 8021db0:	2200      	movs	r2, #0
 8021db2:	2300      	movs	r3, #0
 8021db4:	4610      	mov	r0, r2
 8021db6:	4619      	mov	r1, r3
 8021db8:	f7de fd58 	bl	800086c <__aeabi_ddiv>
 8021dbc:	ec41 0b18 	vmov	d8, r0, r1
 8021dc0:	eeb0 0a48 	vmov.f32	s0, s16
 8021dc4:	eef0 0a68 	vmov.f32	s1, s17
 8021dc8:	ecbd 8b02 	vpop	{d8}
 8021dcc:	bd38      	pop	{r3, r4, r5, pc}

08021dce <atan2f>:
 8021dce:	f000 ba23 	b.w	8022218 <__ieee754_atan2f>
	...

08021dd4 <sqrtf>:
 8021dd4:	b508      	push	{r3, lr}
 8021dd6:	ed2d 8b02 	vpush	{d8}
 8021dda:	eeb0 8a40 	vmov.f32	s16, s0
 8021dde:	f000 f977 	bl	80220d0 <__ieee754_sqrtf>
 8021de2:	eeb4 8a48 	vcmp.f32	s16, s16
 8021de6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8021dea:	d60c      	bvs.n	8021e06 <sqrtf+0x32>
 8021dec:	eddf 8a07 	vldr	s17, [pc, #28]	@ 8021e0c <sqrtf+0x38>
 8021df0:	eeb4 8ae8 	vcmpe.f32	s16, s17
 8021df4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8021df8:	d505      	bpl.n	8021e06 <sqrtf+0x32>
 8021dfa:	f001 fa7d 	bl	80232f8 <__errno>
 8021dfe:	ee88 0aa8 	vdiv.f32	s0, s17, s17
 8021e02:	2321      	movs	r3, #33	@ 0x21
 8021e04:	6003      	str	r3, [r0, #0]
 8021e06:	ecbd 8b02 	vpop	{d8}
 8021e0a:	bd08      	pop	{r3, pc}
 8021e0c:	00000000 	.word	0x00000000

08021e10 <cosf>:
 8021e10:	ee10 3a10 	vmov	r3, s0
 8021e14:	b507      	push	{r0, r1, r2, lr}
 8021e16:	4a1e      	ldr	r2, [pc, #120]	@ (8021e90 <cosf+0x80>)
 8021e18:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 8021e1c:	4293      	cmp	r3, r2
 8021e1e:	d806      	bhi.n	8021e2e <cosf+0x1e>
 8021e20:	eddf 0a1c 	vldr	s1, [pc, #112]	@ 8021e94 <cosf+0x84>
 8021e24:	b003      	add	sp, #12
 8021e26:	f85d eb04 	ldr.w	lr, [sp], #4
 8021e2a:	f000 b955 	b.w	80220d8 <__kernel_cosf>
 8021e2e:	f1b3 4fff 	cmp.w	r3, #2139095040	@ 0x7f800000
 8021e32:	d304      	bcc.n	8021e3e <cosf+0x2e>
 8021e34:	ee30 0a40 	vsub.f32	s0, s0, s0
 8021e38:	b003      	add	sp, #12
 8021e3a:	f85d fb04 	ldr.w	pc, [sp], #4
 8021e3e:	4668      	mov	r0, sp
 8021e40:	f000 fa8a 	bl	8022358 <__ieee754_rem_pio2f>
 8021e44:	f000 0003 	and.w	r0, r0, #3
 8021e48:	2801      	cmp	r0, #1
 8021e4a:	d009      	beq.n	8021e60 <cosf+0x50>
 8021e4c:	2802      	cmp	r0, #2
 8021e4e:	d010      	beq.n	8021e72 <cosf+0x62>
 8021e50:	b9b0      	cbnz	r0, 8021e80 <cosf+0x70>
 8021e52:	eddd 0a01 	vldr	s1, [sp, #4]
 8021e56:	ed9d 0a00 	vldr	s0, [sp]
 8021e5a:	f000 f93d 	bl	80220d8 <__kernel_cosf>
 8021e5e:	e7eb      	b.n	8021e38 <cosf+0x28>
 8021e60:	eddd 0a01 	vldr	s1, [sp, #4]
 8021e64:	ed9d 0a00 	vldr	s0, [sp]
 8021e68:	f000 f98e 	bl	8022188 <__kernel_sinf>
 8021e6c:	eeb1 0a40 	vneg.f32	s0, s0
 8021e70:	e7e2      	b.n	8021e38 <cosf+0x28>
 8021e72:	eddd 0a01 	vldr	s1, [sp, #4]
 8021e76:	ed9d 0a00 	vldr	s0, [sp]
 8021e7a:	f000 f92d 	bl	80220d8 <__kernel_cosf>
 8021e7e:	e7f5      	b.n	8021e6c <cosf+0x5c>
 8021e80:	eddd 0a01 	vldr	s1, [sp, #4]
 8021e84:	ed9d 0a00 	vldr	s0, [sp]
 8021e88:	2001      	movs	r0, #1
 8021e8a:	f000 f97d 	bl	8022188 <__kernel_sinf>
 8021e8e:	e7d3      	b.n	8021e38 <cosf+0x28>
 8021e90:	3f490fd8 	.word	0x3f490fd8
 8021e94:	00000000 	.word	0x00000000

08021e98 <sinf>:
 8021e98:	ee10 3a10 	vmov	r3, s0
 8021e9c:	b507      	push	{r0, r1, r2, lr}
 8021e9e:	4a1f      	ldr	r2, [pc, #124]	@ (8021f1c <sinf+0x84>)
 8021ea0:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 8021ea4:	4293      	cmp	r3, r2
 8021ea6:	d807      	bhi.n	8021eb8 <sinf+0x20>
 8021ea8:	eddf 0a1d 	vldr	s1, [pc, #116]	@ 8021f20 <sinf+0x88>
 8021eac:	2000      	movs	r0, #0
 8021eae:	b003      	add	sp, #12
 8021eb0:	f85d eb04 	ldr.w	lr, [sp], #4
 8021eb4:	f000 b968 	b.w	8022188 <__kernel_sinf>
 8021eb8:	f1b3 4fff 	cmp.w	r3, #2139095040	@ 0x7f800000
 8021ebc:	d304      	bcc.n	8021ec8 <sinf+0x30>
 8021ebe:	ee30 0a40 	vsub.f32	s0, s0, s0
 8021ec2:	b003      	add	sp, #12
 8021ec4:	f85d fb04 	ldr.w	pc, [sp], #4
 8021ec8:	4668      	mov	r0, sp
 8021eca:	f000 fa45 	bl	8022358 <__ieee754_rem_pio2f>
 8021ece:	f000 0003 	and.w	r0, r0, #3
 8021ed2:	2801      	cmp	r0, #1
 8021ed4:	d00a      	beq.n	8021eec <sinf+0x54>
 8021ed6:	2802      	cmp	r0, #2
 8021ed8:	d00f      	beq.n	8021efa <sinf+0x62>
 8021eda:	b9c0      	cbnz	r0, 8021f0e <sinf+0x76>
 8021edc:	eddd 0a01 	vldr	s1, [sp, #4]
 8021ee0:	ed9d 0a00 	vldr	s0, [sp]
 8021ee4:	2001      	movs	r0, #1
 8021ee6:	f000 f94f 	bl	8022188 <__kernel_sinf>
 8021eea:	e7ea      	b.n	8021ec2 <sinf+0x2a>
 8021eec:	eddd 0a01 	vldr	s1, [sp, #4]
 8021ef0:	ed9d 0a00 	vldr	s0, [sp]
 8021ef4:	f000 f8f0 	bl	80220d8 <__kernel_cosf>
 8021ef8:	e7e3      	b.n	8021ec2 <sinf+0x2a>
 8021efa:	eddd 0a01 	vldr	s1, [sp, #4]
 8021efe:	ed9d 0a00 	vldr	s0, [sp]
 8021f02:	2001      	movs	r0, #1
 8021f04:	f000 f940 	bl	8022188 <__kernel_sinf>
 8021f08:	eeb1 0a40 	vneg.f32	s0, s0
 8021f0c:	e7d9      	b.n	8021ec2 <sinf+0x2a>
 8021f0e:	eddd 0a01 	vldr	s1, [sp, #4]
 8021f12:	ed9d 0a00 	vldr	s0, [sp]
 8021f16:	f000 f8df 	bl	80220d8 <__kernel_cosf>
 8021f1a:	e7f5      	b.n	8021f08 <sinf+0x70>
 8021f1c:	3f490fd8 	.word	0x3f490fd8
 8021f20:	00000000 	.word	0x00000000

08021f24 <__ieee754_sqrt>:
 8021f24:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021f28:	4a66      	ldr	r2, [pc, #408]	@ (80220c4 <__ieee754_sqrt+0x1a0>)
 8021f2a:	ec55 4b10 	vmov	r4, r5, d0
 8021f2e:	43aa      	bics	r2, r5
 8021f30:	462b      	mov	r3, r5
 8021f32:	4621      	mov	r1, r4
 8021f34:	d110      	bne.n	8021f58 <__ieee754_sqrt+0x34>
 8021f36:	4622      	mov	r2, r4
 8021f38:	4620      	mov	r0, r4
 8021f3a:	4629      	mov	r1, r5
 8021f3c:	f7de fb6c 	bl	8000618 <__aeabi_dmul>
 8021f40:	4602      	mov	r2, r0
 8021f42:	460b      	mov	r3, r1
 8021f44:	4620      	mov	r0, r4
 8021f46:	4629      	mov	r1, r5
 8021f48:	f7de f9b0 	bl	80002ac <__adddf3>
 8021f4c:	4604      	mov	r4, r0
 8021f4e:	460d      	mov	r5, r1
 8021f50:	ec45 4b10 	vmov	d0, r4, r5
 8021f54:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8021f58:	2d00      	cmp	r5, #0
 8021f5a:	dc0e      	bgt.n	8021f7a <__ieee754_sqrt+0x56>
 8021f5c:	f025 4200 	bic.w	r2, r5, #2147483648	@ 0x80000000
 8021f60:	4322      	orrs	r2, r4
 8021f62:	d0f5      	beq.n	8021f50 <__ieee754_sqrt+0x2c>
 8021f64:	b19d      	cbz	r5, 8021f8e <__ieee754_sqrt+0x6a>
 8021f66:	4622      	mov	r2, r4
 8021f68:	4620      	mov	r0, r4
 8021f6a:	4629      	mov	r1, r5
 8021f6c:	f7de f99c 	bl	80002a8 <__aeabi_dsub>
 8021f70:	4602      	mov	r2, r0
 8021f72:	460b      	mov	r3, r1
 8021f74:	f7de fc7a 	bl	800086c <__aeabi_ddiv>
 8021f78:	e7e8      	b.n	8021f4c <__ieee754_sqrt+0x28>
 8021f7a:	152a      	asrs	r2, r5, #20
 8021f7c:	d115      	bne.n	8021faa <__ieee754_sqrt+0x86>
 8021f7e:	2000      	movs	r0, #0
 8021f80:	e009      	b.n	8021f96 <__ieee754_sqrt+0x72>
 8021f82:	0acb      	lsrs	r3, r1, #11
 8021f84:	3a15      	subs	r2, #21
 8021f86:	0549      	lsls	r1, r1, #21
 8021f88:	2b00      	cmp	r3, #0
 8021f8a:	d0fa      	beq.n	8021f82 <__ieee754_sqrt+0x5e>
 8021f8c:	e7f7      	b.n	8021f7e <__ieee754_sqrt+0x5a>
 8021f8e:	462a      	mov	r2, r5
 8021f90:	e7fa      	b.n	8021f88 <__ieee754_sqrt+0x64>
 8021f92:	005b      	lsls	r3, r3, #1
 8021f94:	3001      	adds	r0, #1
 8021f96:	02dc      	lsls	r4, r3, #11
 8021f98:	d5fb      	bpl.n	8021f92 <__ieee754_sqrt+0x6e>
 8021f9a:	1e44      	subs	r4, r0, #1
 8021f9c:	1b12      	subs	r2, r2, r4
 8021f9e:	f1c0 0420 	rsb	r4, r0, #32
 8021fa2:	fa21 f404 	lsr.w	r4, r1, r4
 8021fa6:	4323      	orrs	r3, r4
 8021fa8:	4081      	lsls	r1, r0
 8021faa:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8021fae:	f2a2 37ff 	subw	r7, r2, #1023	@ 0x3ff
 8021fb2:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 8021fb6:	07d2      	lsls	r2, r2, #31
 8021fb8:	bf5c      	itt	pl
 8021fba:	005b      	lslpl	r3, r3, #1
 8021fbc:	eb03 73d1 	addpl.w	r3, r3, r1, lsr #31
 8021fc0:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8021fc4:	bf58      	it	pl
 8021fc6:	0049      	lslpl	r1, r1, #1
 8021fc8:	2600      	movs	r6, #0
 8021fca:	eb03 73d1 	add.w	r3, r3, r1, lsr #31
 8021fce:	107f      	asrs	r7, r7, #1
 8021fd0:	0049      	lsls	r1, r1, #1
 8021fd2:	2016      	movs	r0, #22
 8021fd4:	4632      	mov	r2, r6
 8021fd6:	f44f 1400 	mov.w	r4, #2097152	@ 0x200000
 8021fda:	1915      	adds	r5, r2, r4
 8021fdc:	429d      	cmp	r5, r3
 8021fde:	bfde      	ittt	le
 8021fe0:	192a      	addle	r2, r5, r4
 8021fe2:	1b5b      	suble	r3, r3, r5
 8021fe4:	1936      	addle	r6, r6, r4
 8021fe6:	0fcd      	lsrs	r5, r1, #31
 8021fe8:	3801      	subs	r0, #1
 8021fea:	eb05 0343 	add.w	r3, r5, r3, lsl #1
 8021fee:	ea4f 0141 	mov.w	r1, r1, lsl #1
 8021ff2:	ea4f 0454 	mov.w	r4, r4, lsr #1
 8021ff6:	d1f0      	bne.n	8021fda <__ieee754_sqrt+0xb6>
 8021ff8:	4605      	mov	r5, r0
 8021ffa:	2420      	movs	r4, #32
 8021ffc:	f04f 4c00 	mov.w	ip, #2147483648	@ 0x80000000
 8022000:	4293      	cmp	r3, r2
 8022002:	eb0c 0e00 	add.w	lr, ip, r0
 8022006:	dc02      	bgt.n	802200e <__ieee754_sqrt+0xea>
 8022008:	d113      	bne.n	8022032 <__ieee754_sqrt+0x10e>
 802200a:	458e      	cmp	lr, r1
 802200c:	d811      	bhi.n	8022032 <__ieee754_sqrt+0x10e>
 802200e:	f1be 0f00 	cmp.w	lr, #0
 8022012:	eb0e 000c 	add.w	r0, lr, ip
 8022016:	da3f      	bge.n	8022098 <__ieee754_sqrt+0x174>
 8022018:	2800      	cmp	r0, #0
 802201a:	db3d      	blt.n	8022098 <__ieee754_sqrt+0x174>
 802201c:	f102 0801 	add.w	r8, r2, #1
 8022020:	1a9b      	subs	r3, r3, r2
 8022022:	458e      	cmp	lr, r1
 8022024:	bf88      	it	hi
 8022026:	f103 33ff 	addhi.w	r3, r3, #4294967295
 802202a:	eba1 010e 	sub.w	r1, r1, lr
 802202e:	4465      	add	r5, ip
 8022030:	4642      	mov	r2, r8
 8022032:	ea4f 7ed1 	mov.w	lr, r1, lsr #31
 8022036:	3c01      	subs	r4, #1
 8022038:	eb0e 0343 	add.w	r3, lr, r3, lsl #1
 802203c:	ea4f 0141 	mov.w	r1, r1, lsl #1
 8022040:	ea4f 0c5c 	mov.w	ip, ip, lsr #1
 8022044:	d1dc      	bne.n	8022000 <__ieee754_sqrt+0xdc>
 8022046:	4319      	orrs	r1, r3
 8022048:	d01b      	beq.n	8022082 <__ieee754_sqrt+0x15e>
 802204a:	f8df a07c 	ldr.w	sl, [pc, #124]	@ 80220c8 <__ieee754_sqrt+0x1a4>
 802204e:	f8df b07c 	ldr.w	fp, [pc, #124]	@ 80220cc <__ieee754_sqrt+0x1a8>
 8022052:	e9da 0100 	ldrd	r0, r1, [sl]
 8022056:	e9db 2300 	ldrd	r2, r3, [fp]
 802205a:	f7de f925 	bl	80002a8 <__aeabi_dsub>
 802205e:	e9da 8900 	ldrd	r8, r9, [sl]
 8022062:	4602      	mov	r2, r0
 8022064:	460b      	mov	r3, r1
 8022066:	4640      	mov	r0, r8
 8022068:	4649      	mov	r1, r9
 802206a:	f7de fd51 	bl	8000b10 <__aeabi_dcmple>
 802206e:	b140      	cbz	r0, 8022082 <__ieee754_sqrt+0x15e>
 8022070:	f1b5 3fff 	cmp.w	r5, #4294967295
 8022074:	e9da 0100 	ldrd	r0, r1, [sl]
 8022078:	e9db 2300 	ldrd	r2, r3, [fp]
 802207c:	d10e      	bne.n	802209c <__ieee754_sqrt+0x178>
 802207e:	3601      	adds	r6, #1
 8022080:	4625      	mov	r5, r4
 8022082:	1073      	asrs	r3, r6, #1
 8022084:	f103 537f 	add.w	r3, r3, #1069547520	@ 0x3fc00000
 8022088:	f503 1300 	add.w	r3, r3, #2097152	@ 0x200000
 802208c:	eb03 5107 	add.w	r1, r3, r7, lsl #20
 8022090:	086b      	lsrs	r3, r5, #1
 8022092:	ea43 70c6 	orr.w	r0, r3, r6, lsl #31
 8022096:	e759      	b.n	8021f4c <__ieee754_sqrt+0x28>
 8022098:	4690      	mov	r8, r2
 802209a:	e7c1      	b.n	8022020 <__ieee754_sqrt+0xfc>
 802209c:	f7de f906 	bl	80002ac <__adddf3>
 80220a0:	e9da 8900 	ldrd	r8, r9, [sl]
 80220a4:	4602      	mov	r2, r0
 80220a6:	460b      	mov	r3, r1
 80220a8:	4640      	mov	r0, r8
 80220aa:	4649      	mov	r1, r9
 80220ac:	f7de fd26 	bl	8000afc <__aeabi_dcmplt>
 80220b0:	b120      	cbz	r0, 80220bc <__ieee754_sqrt+0x198>
 80220b2:	1cab      	adds	r3, r5, #2
 80220b4:	bf08      	it	eq
 80220b6:	3601      	addeq	r6, #1
 80220b8:	3502      	adds	r5, #2
 80220ba:	e7e2      	b.n	8022082 <__ieee754_sqrt+0x15e>
 80220bc:	1c6b      	adds	r3, r5, #1
 80220be:	f023 0501 	bic.w	r5, r3, #1
 80220c2:	e7de      	b.n	8022082 <__ieee754_sqrt+0x15e>
 80220c4:	7ff00000 	.word	0x7ff00000
 80220c8:	08025670 	.word	0x08025670
 80220cc:	08025668 	.word	0x08025668

080220d0 <__ieee754_sqrtf>:
 80220d0:	eeb1 0ac0 	vsqrt.f32	s0, s0
 80220d4:	4770      	bx	lr
	...

080220d8 <__kernel_cosf>:
 80220d8:	ee10 3a10 	vmov	r3, s0
 80220dc:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 80220e0:	f1b3 5f48 	cmp.w	r3, #838860800	@ 0x32000000
 80220e4:	eef0 6a40 	vmov.f32	s13, s0
 80220e8:	eeb7 0a00 	vmov.f32	s0, #112	@ 0x3f800000  1.0
 80220ec:	d204      	bcs.n	80220f8 <__kernel_cosf+0x20>
 80220ee:	eefd 7ae6 	vcvt.s32.f32	s15, s13
 80220f2:	ee17 2a90 	vmov	r2, s15
 80220f6:	b342      	cbz	r2, 802214a <__kernel_cosf+0x72>
 80220f8:	ee26 7aa6 	vmul.f32	s14, s13, s13
 80220fc:	eddf 7a1a 	vldr	s15, [pc, #104]	@ 8022168 <__kernel_cosf+0x90>
 8022100:	ed9f 6a1a 	vldr	s12, [pc, #104]	@ 802216c <__kernel_cosf+0x94>
 8022104:	4a1a      	ldr	r2, [pc, #104]	@ (8022170 <__kernel_cosf+0x98>)
 8022106:	eea7 6a27 	vfma.f32	s12, s14, s15
 802210a:	4293      	cmp	r3, r2
 802210c:	eddf 7a19 	vldr	s15, [pc, #100]	@ 8022174 <__kernel_cosf+0x9c>
 8022110:	eee6 7a07 	vfma.f32	s15, s12, s14
 8022114:	ed9f 6a18 	vldr	s12, [pc, #96]	@ 8022178 <__kernel_cosf+0xa0>
 8022118:	eea7 6a87 	vfma.f32	s12, s15, s14
 802211c:	eddf 7a17 	vldr	s15, [pc, #92]	@ 802217c <__kernel_cosf+0xa4>
 8022120:	eee6 7a07 	vfma.f32	s15, s12, s14
 8022124:	ed9f 6a16 	vldr	s12, [pc, #88]	@ 8022180 <__kernel_cosf+0xa8>
 8022128:	eea7 6a87 	vfma.f32	s12, s15, s14
 802212c:	ee60 0ae6 	vnmul.f32	s1, s1, s13
 8022130:	ee26 6a07 	vmul.f32	s12, s12, s14
 8022134:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 8022138:	eee7 0a06 	vfma.f32	s1, s14, s12
 802213c:	ee67 7a27 	vmul.f32	s15, s14, s15
 8022140:	d804      	bhi.n	802214c <__kernel_cosf+0x74>
 8022142:	ee77 7ae0 	vsub.f32	s15, s15, s1
 8022146:	ee30 0a67 	vsub.f32	s0, s0, s15
 802214a:	4770      	bx	lr
 802214c:	4a0d      	ldr	r2, [pc, #52]	@ (8022184 <__kernel_cosf+0xac>)
 802214e:	4293      	cmp	r3, r2
 8022150:	bf9a      	itte	ls
 8022152:	f103 437f 	addls.w	r3, r3, #4278190080	@ 0xff000000
 8022156:	ee07 3a10 	vmovls	s14, r3
 802215a:	eeb5 7a02 	vmovhi.f32	s14, #82	@ 0x3e900000  0.2812500
 802215e:	ee30 0a47 	vsub.f32	s0, s0, s14
 8022162:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8022166:	e7ec      	b.n	8022142 <__kernel_cosf+0x6a>
 8022168:	ad47d74e 	.word	0xad47d74e
 802216c:	310f74f6 	.word	0x310f74f6
 8022170:	3e999999 	.word	0x3e999999
 8022174:	b493f27c 	.word	0xb493f27c
 8022178:	37d00d01 	.word	0x37d00d01
 802217c:	bab60b61 	.word	0xbab60b61
 8022180:	3d2aaaab 	.word	0x3d2aaaab
 8022184:	3f480000 	.word	0x3f480000

08022188 <__kernel_sinf>:
 8022188:	ee10 3a10 	vmov	r3, s0
 802218c:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 8022190:	f1b3 5f48 	cmp.w	r3, #838860800	@ 0x32000000
 8022194:	d204      	bcs.n	80221a0 <__kernel_sinf+0x18>
 8022196:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 802219a:	ee17 3a90 	vmov	r3, s15
 802219e:	b35b      	cbz	r3, 80221f8 <__kernel_sinf+0x70>
 80221a0:	ee20 7a00 	vmul.f32	s14, s0, s0
 80221a4:	eddf 7a15 	vldr	s15, [pc, #84]	@ 80221fc <__kernel_sinf+0x74>
 80221a8:	ed9f 6a15 	vldr	s12, [pc, #84]	@ 8022200 <__kernel_sinf+0x78>
 80221ac:	eea7 6a27 	vfma.f32	s12, s14, s15
 80221b0:	eddf 7a14 	vldr	s15, [pc, #80]	@ 8022204 <__kernel_sinf+0x7c>
 80221b4:	eee6 7a07 	vfma.f32	s15, s12, s14
 80221b8:	ed9f 6a13 	vldr	s12, [pc, #76]	@ 8022208 <__kernel_sinf+0x80>
 80221bc:	eea7 6a87 	vfma.f32	s12, s15, s14
 80221c0:	eddf 7a12 	vldr	s15, [pc, #72]	@ 802220c <__kernel_sinf+0x84>
 80221c4:	ee60 6a07 	vmul.f32	s13, s0, s14
 80221c8:	eee6 7a07 	vfma.f32	s15, s12, s14
 80221cc:	b930      	cbnz	r0, 80221dc <__kernel_sinf+0x54>
 80221ce:	ed9f 6a10 	vldr	s12, [pc, #64]	@ 8022210 <__kernel_sinf+0x88>
 80221d2:	eea7 6a27 	vfma.f32	s12, s14, s15
 80221d6:	eea6 0a26 	vfma.f32	s0, s12, s13
 80221da:	4770      	bx	lr
 80221dc:	ee67 7ae6 	vnmul.f32	s15, s15, s13
 80221e0:	eeb6 6a00 	vmov.f32	s12, #96	@ 0x3f000000  0.5
 80221e4:	eee0 7a86 	vfma.f32	s15, s1, s12
 80221e8:	eed7 0a87 	vfnms.f32	s1, s15, s14
 80221ec:	eddf 7a09 	vldr	s15, [pc, #36]	@ 8022214 <__kernel_sinf+0x8c>
 80221f0:	eee6 0aa7 	vfma.f32	s1, s13, s15
 80221f4:	ee30 0a60 	vsub.f32	s0, s0, s1
 80221f8:	4770      	bx	lr
 80221fa:	bf00      	nop
 80221fc:	2f2ec9d3 	.word	0x2f2ec9d3
 8022200:	b2d72f34 	.word	0xb2d72f34
 8022204:	3638ef1b 	.word	0x3638ef1b
 8022208:	b9500d01 	.word	0xb9500d01
 802220c:	3c088889 	.word	0x3c088889
 8022210:	be2aaaab 	.word	0xbe2aaaab
 8022214:	3e2aaaab 	.word	0x3e2aaaab

08022218 <__ieee754_atan2f>:
 8022218:	ee10 2a90 	vmov	r2, s1
 802221c:	f022 4100 	bic.w	r1, r2, #2147483648	@ 0x80000000
 8022220:	f1b1 4fff 	cmp.w	r1, #2139095040	@ 0x7f800000
 8022224:	b510      	push	{r4, lr}
 8022226:	eef0 7a40 	vmov.f32	s15, s0
 802222a:	d806      	bhi.n	802223a <__ieee754_atan2f+0x22>
 802222c:	ee10 0a10 	vmov	r0, s0
 8022230:	f020 4300 	bic.w	r3, r0, #2147483648	@ 0x80000000
 8022234:	f1b3 4fff 	cmp.w	r3, #2139095040	@ 0x7f800000
 8022238:	d904      	bls.n	8022244 <__ieee754_atan2f+0x2c>
 802223a:	ee77 7aa0 	vadd.f32	s15, s15, s1
 802223e:	eeb0 0a67 	vmov.f32	s0, s15
 8022242:	bd10      	pop	{r4, pc}
 8022244:	f1b2 5f7e 	cmp.w	r2, #1065353216	@ 0x3f800000
 8022248:	d103      	bne.n	8022252 <__ieee754_atan2f+0x3a>
 802224a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802224e:	f000 b9b3 	b.w	80225b8 <atanf>
 8022252:	1794      	asrs	r4, r2, #30
 8022254:	f004 0402 	and.w	r4, r4, #2
 8022258:	ea44 74d0 	orr.w	r4, r4, r0, lsr #31
 802225c:	b943      	cbnz	r3, 8022270 <__ieee754_atan2f+0x58>
 802225e:	2c02      	cmp	r4, #2
 8022260:	d05e      	beq.n	8022320 <__ieee754_atan2f+0x108>
 8022262:	ed9f 7a34 	vldr	s14, [pc, #208]	@ 8022334 <__ieee754_atan2f+0x11c>
 8022266:	2c03      	cmp	r4, #3
 8022268:	bf08      	it	eq
 802226a:	eef0 7a47 	vmoveq.f32	s15, s14
 802226e:	e7e6      	b.n	802223e <__ieee754_atan2f+0x26>
 8022270:	b941      	cbnz	r1, 8022284 <__ieee754_atan2f+0x6c>
 8022272:	eddf 7a31 	vldr	s15, [pc, #196]	@ 8022338 <__ieee754_atan2f+0x120>
 8022276:	ed9f 7a31 	vldr	s14, [pc, #196]	@ 802233c <__ieee754_atan2f+0x124>
 802227a:	2800      	cmp	r0, #0
 802227c:	bfa8      	it	ge
 802227e:	eef0 7a47 	vmovge.f32	s15, s14
 8022282:	e7dc      	b.n	802223e <__ieee754_atan2f+0x26>
 8022284:	f1b1 4fff 	cmp.w	r1, #2139095040	@ 0x7f800000
 8022288:	d110      	bne.n	80222ac <__ieee754_atan2f+0x94>
 802228a:	f1b3 4fff 	cmp.w	r3, #2139095040	@ 0x7f800000
 802228e:	f104 34ff 	add.w	r4, r4, #4294967295
 8022292:	d107      	bne.n	80222a4 <__ieee754_atan2f+0x8c>
 8022294:	2c02      	cmp	r4, #2
 8022296:	d846      	bhi.n	8022326 <__ieee754_atan2f+0x10e>
 8022298:	4b29      	ldr	r3, [pc, #164]	@ (8022340 <__ieee754_atan2f+0x128>)
 802229a:	eb03 0384 	add.w	r3, r3, r4, lsl #2
 802229e:	edd3 7a00 	vldr	s15, [r3]
 80222a2:	e7cc      	b.n	802223e <__ieee754_atan2f+0x26>
 80222a4:	2c02      	cmp	r4, #2
 80222a6:	d841      	bhi.n	802232c <__ieee754_atan2f+0x114>
 80222a8:	4b26      	ldr	r3, [pc, #152]	@ (8022344 <__ieee754_atan2f+0x12c>)
 80222aa:	e7f6      	b.n	802229a <__ieee754_atan2f+0x82>
 80222ac:	f1b3 4fff 	cmp.w	r3, #2139095040	@ 0x7f800000
 80222b0:	d0df      	beq.n	8022272 <__ieee754_atan2f+0x5a>
 80222b2:	1a5b      	subs	r3, r3, r1
 80222b4:	f1b3 5ff4 	cmp.w	r3, #511705088	@ 0x1e800000
 80222b8:	ea4f 51e3 	mov.w	r1, r3, asr #23
 80222bc:	da1a      	bge.n	80222f4 <__ieee754_atan2f+0xdc>
 80222be:	2a00      	cmp	r2, #0
 80222c0:	da01      	bge.n	80222c6 <__ieee754_atan2f+0xae>
 80222c2:	313c      	adds	r1, #60	@ 0x3c
 80222c4:	db19      	blt.n	80222fa <__ieee754_atan2f+0xe2>
 80222c6:	ee87 0aa0 	vdiv.f32	s0, s15, s1
 80222ca:	f000 fa49 	bl	8022760 <fabsf>
 80222ce:	f000 f973 	bl	80225b8 <atanf>
 80222d2:	eef0 7a40 	vmov.f32	s15, s0
 80222d6:	2c01      	cmp	r4, #1
 80222d8:	d012      	beq.n	8022300 <__ieee754_atan2f+0xe8>
 80222da:	2c02      	cmp	r4, #2
 80222dc:	d017      	beq.n	802230e <__ieee754_atan2f+0xf6>
 80222de:	2c00      	cmp	r4, #0
 80222e0:	d0ad      	beq.n	802223e <__ieee754_atan2f+0x26>
 80222e2:	ed9f 7a19 	vldr	s14, [pc, #100]	@ 8022348 <__ieee754_atan2f+0x130>
 80222e6:	ee77 7a87 	vadd.f32	s15, s15, s14
 80222ea:	ed9f 7a18 	vldr	s14, [pc, #96]	@ 802234c <__ieee754_atan2f+0x134>
 80222ee:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80222f2:	e7a4      	b.n	802223e <__ieee754_atan2f+0x26>
 80222f4:	eddf 7a11 	vldr	s15, [pc, #68]	@ 802233c <__ieee754_atan2f+0x124>
 80222f8:	e7ed      	b.n	80222d6 <__ieee754_atan2f+0xbe>
 80222fa:	eddf 7a15 	vldr	s15, [pc, #84]	@ 8022350 <__ieee754_atan2f+0x138>
 80222fe:	e7ea      	b.n	80222d6 <__ieee754_atan2f+0xbe>
 8022300:	ee17 3a90 	vmov	r3, s15
 8022304:	f103 4300 	add.w	r3, r3, #2147483648	@ 0x80000000
 8022308:	ee07 3a90 	vmov	s15, r3
 802230c:	e797      	b.n	802223e <__ieee754_atan2f+0x26>
 802230e:	ed9f 7a0e 	vldr	s14, [pc, #56]	@ 8022348 <__ieee754_atan2f+0x130>
 8022312:	ee77 7a87 	vadd.f32	s15, s15, s14
 8022316:	ed9f 7a0d 	vldr	s14, [pc, #52]	@ 802234c <__ieee754_atan2f+0x134>
 802231a:	ee77 7a67 	vsub.f32	s15, s14, s15
 802231e:	e78e      	b.n	802223e <__ieee754_atan2f+0x26>
 8022320:	eddf 7a0a 	vldr	s15, [pc, #40]	@ 802234c <__ieee754_atan2f+0x134>
 8022324:	e78b      	b.n	802223e <__ieee754_atan2f+0x26>
 8022326:	eddf 7a0b 	vldr	s15, [pc, #44]	@ 8022354 <__ieee754_atan2f+0x13c>
 802232a:	e788      	b.n	802223e <__ieee754_atan2f+0x26>
 802232c:	eddf 7a08 	vldr	s15, [pc, #32]	@ 8022350 <__ieee754_atan2f+0x138>
 8022330:	e785      	b.n	802223e <__ieee754_atan2f+0x26>
 8022332:	bf00      	nop
 8022334:	c0490fdb 	.word	0xc0490fdb
 8022338:	bfc90fdb 	.word	0xbfc90fdb
 802233c:	3fc90fdb 	.word	0x3fc90fdb
 8022340:	08025684 	.word	0x08025684
 8022344:	08025678 	.word	0x08025678
 8022348:	33bbbd2e 	.word	0x33bbbd2e
 802234c:	40490fdb 	.word	0x40490fdb
 8022350:	00000000 	.word	0x00000000
 8022354:	3f490fdb 	.word	0x3f490fdb

08022358 <__ieee754_rem_pio2f>:
 8022358:	b5f0      	push	{r4, r5, r6, r7, lr}
 802235a:	ee10 6a10 	vmov	r6, s0
 802235e:	4b88      	ldr	r3, [pc, #544]	@ (8022580 <__ieee754_rem_pio2f+0x228>)
 8022360:	f026 4500 	bic.w	r5, r6, #2147483648	@ 0x80000000
 8022364:	429d      	cmp	r5, r3
 8022366:	b087      	sub	sp, #28
 8022368:	4604      	mov	r4, r0
 802236a:	d805      	bhi.n	8022378 <__ieee754_rem_pio2f+0x20>
 802236c:	2300      	movs	r3, #0
 802236e:	ed80 0a00 	vstr	s0, [r0]
 8022372:	6043      	str	r3, [r0, #4]
 8022374:	2000      	movs	r0, #0
 8022376:	e022      	b.n	80223be <__ieee754_rem_pio2f+0x66>
 8022378:	4b82      	ldr	r3, [pc, #520]	@ (8022584 <__ieee754_rem_pio2f+0x22c>)
 802237a:	429d      	cmp	r5, r3
 802237c:	d83a      	bhi.n	80223f4 <__ieee754_rem_pio2f+0x9c>
 802237e:	f026 4300 	bic.w	r3, r6, #2147483648	@ 0x80000000
 8022382:	2e00      	cmp	r6, #0
 8022384:	ed9f 7a80 	vldr	s14, [pc, #512]	@ 8022588 <__ieee754_rem_pio2f+0x230>
 8022388:	4a80      	ldr	r2, [pc, #512]	@ (802258c <__ieee754_rem_pio2f+0x234>)
 802238a:	f023 030f 	bic.w	r3, r3, #15
 802238e:	dd18      	ble.n	80223c2 <__ieee754_rem_pio2f+0x6a>
 8022390:	4293      	cmp	r3, r2
 8022392:	ee70 7a47 	vsub.f32	s15, s0, s14
 8022396:	bf09      	itett	eq
 8022398:	ed9f 7a7d 	vldreq	s14, [pc, #500]	@ 8022590 <__ieee754_rem_pio2f+0x238>
 802239c:	eddf 6a7d 	vldrne	s13, [pc, #500]	@ 8022594 <__ieee754_rem_pio2f+0x23c>
 80223a0:	eddf 6a7d 	vldreq	s13, [pc, #500]	@ 8022598 <__ieee754_rem_pio2f+0x240>
 80223a4:	ee77 7ac7 	vsubeq.f32	s15, s15, s14
 80223a8:	ee37 7ae6 	vsub.f32	s14, s15, s13
 80223ac:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80223b0:	ed80 7a00 	vstr	s14, [r0]
 80223b4:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80223b8:	edc0 7a01 	vstr	s15, [r0, #4]
 80223bc:	2001      	movs	r0, #1
 80223be:	b007      	add	sp, #28
 80223c0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80223c2:	4293      	cmp	r3, r2
 80223c4:	ee70 7a07 	vadd.f32	s15, s0, s14
 80223c8:	bf09      	itett	eq
 80223ca:	ed9f 7a71 	vldreq	s14, [pc, #452]	@ 8022590 <__ieee754_rem_pio2f+0x238>
 80223ce:	eddf 6a71 	vldrne	s13, [pc, #452]	@ 8022594 <__ieee754_rem_pio2f+0x23c>
 80223d2:	eddf 6a71 	vldreq	s13, [pc, #452]	@ 8022598 <__ieee754_rem_pio2f+0x240>
 80223d6:	ee77 7a87 	vaddeq.f32	s15, s15, s14
 80223da:	ee37 7aa6 	vadd.f32	s14, s15, s13
 80223de:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80223e2:	ed80 7a00 	vstr	s14, [r0]
 80223e6:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80223ea:	edc0 7a01 	vstr	s15, [r0, #4]
 80223ee:	f04f 30ff 	mov.w	r0, #4294967295
 80223f2:	e7e4      	b.n	80223be <__ieee754_rem_pio2f+0x66>
 80223f4:	4b69      	ldr	r3, [pc, #420]	@ (802259c <__ieee754_rem_pio2f+0x244>)
 80223f6:	429d      	cmp	r5, r3
 80223f8:	d873      	bhi.n	80224e2 <__ieee754_rem_pio2f+0x18a>
 80223fa:	f000 f9b1 	bl	8022760 <fabsf>
 80223fe:	ed9f 7a68 	vldr	s14, [pc, #416]	@ 80225a0 <__ieee754_rem_pio2f+0x248>
 8022402:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 8022406:	eee0 7a07 	vfma.f32	s15, s0, s14
 802240a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 802240e:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8022412:	ee17 0a90 	vmov	r0, s15
 8022416:	eddf 7a5c 	vldr	s15, [pc, #368]	@ 8022588 <__ieee754_rem_pio2f+0x230>
 802241a:	eea7 0a67 	vfms.f32	s0, s14, s15
 802241e:	281f      	cmp	r0, #31
 8022420:	eddf 7a5c 	vldr	s15, [pc, #368]	@ 8022594 <__ieee754_rem_pio2f+0x23c>
 8022424:	ee67 7a27 	vmul.f32	s15, s14, s15
 8022428:	eeb1 6a47 	vneg.f32	s12, s14
 802242c:	ee70 6a67 	vsub.f32	s13, s0, s15
 8022430:	ee16 1a90 	vmov	r1, s13
 8022434:	dc09      	bgt.n	802244a <__ieee754_rem_pio2f+0xf2>
 8022436:	4a5b      	ldr	r2, [pc, #364]	@ (80225a4 <__ieee754_rem_pio2f+0x24c>)
 8022438:	1e47      	subs	r7, r0, #1
 802243a:	f026 4300 	bic.w	r3, r6, #2147483648	@ 0x80000000
 802243e:	f852 2027 	ldr.w	r2, [r2, r7, lsl #2]
 8022442:	f023 03ff 	bic.w	r3, r3, #255	@ 0xff
 8022446:	4293      	cmp	r3, r2
 8022448:	d107      	bne.n	802245a <__ieee754_rem_pio2f+0x102>
 802244a:	f3c1 52c7 	ubfx	r2, r1, #23, #8
 802244e:	ebc2 52d5 	rsb	r2, r2, r5, lsr #23
 8022452:	2a08      	cmp	r2, #8
 8022454:	ea4f 53e5 	mov.w	r3, r5, asr #23
 8022458:	dc14      	bgt.n	8022484 <__ieee754_rem_pio2f+0x12c>
 802245a:	6021      	str	r1, [r4, #0]
 802245c:	ed94 7a00 	vldr	s14, [r4]
 8022460:	ee30 0a47 	vsub.f32	s0, s0, s14
 8022464:	2e00      	cmp	r6, #0
 8022466:	ee30 0a67 	vsub.f32	s0, s0, s15
 802246a:	ed84 0a01 	vstr	s0, [r4, #4]
 802246e:	daa6      	bge.n	80223be <__ieee754_rem_pio2f+0x66>
 8022470:	eeb1 7a47 	vneg.f32	s14, s14
 8022474:	eeb1 0a40 	vneg.f32	s0, s0
 8022478:	ed84 7a00 	vstr	s14, [r4]
 802247c:	ed84 0a01 	vstr	s0, [r4, #4]
 8022480:	4240      	negs	r0, r0
 8022482:	e79c      	b.n	80223be <__ieee754_rem_pio2f+0x66>
 8022484:	eddf 5a42 	vldr	s11, [pc, #264]	@ 8022590 <__ieee754_rem_pio2f+0x238>
 8022488:	eef0 6a40 	vmov.f32	s13, s0
 802248c:	eee6 6a25 	vfma.f32	s13, s12, s11
 8022490:	ee70 7a66 	vsub.f32	s15, s0, s13
 8022494:	eee6 7a25 	vfma.f32	s15, s12, s11
 8022498:	eddf 5a3f 	vldr	s11, [pc, #252]	@ 8022598 <__ieee754_rem_pio2f+0x240>
 802249c:	eed7 7a25 	vfnms.f32	s15, s14, s11
 80224a0:	ee76 5ae7 	vsub.f32	s11, s13, s15
 80224a4:	ee15 2a90 	vmov	r2, s11
 80224a8:	f3c2 51c7 	ubfx	r1, r2, #23, #8
 80224ac:	1a5b      	subs	r3, r3, r1
 80224ae:	2b19      	cmp	r3, #25
 80224b0:	dc04      	bgt.n	80224bc <__ieee754_rem_pio2f+0x164>
 80224b2:	edc4 5a00 	vstr	s11, [r4]
 80224b6:	eeb0 0a66 	vmov.f32	s0, s13
 80224ba:	e7cf      	b.n	802245c <__ieee754_rem_pio2f+0x104>
 80224bc:	eddf 5a3a 	vldr	s11, [pc, #232]	@ 80225a8 <__ieee754_rem_pio2f+0x250>
 80224c0:	eeb0 0a66 	vmov.f32	s0, s13
 80224c4:	eea6 0a25 	vfma.f32	s0, s12, s11
 80224c8:	ee76 7ac0 	vsub.f32	s15, s13, s0
 80224cc:	eddf 6a37 	vldr	s13, [pc, #220]	@ 80225ac <__ieee754_rem_pio2f+0x254>
 80224d0:	eee6 7a25 	vfma.f32	s15, s12, s11
 80224d4:	eed7 7a26 	vfnms.f32	s15, s14, s13
 80224d8:	ee30 7a67 	vsub.f32	s14, s0, s15
 80224dc:	ed84 7a00 	vstr	s14, [r4]
 80224e0:	e7bc      	b.n	802245c <__ieee754_rem_pio2f+0x104>
 80224e2:	f1b5 4fff 	cmp.w	r5, #2139095040	@ 0x7f800000
 80224e6:	d306      	bcc.n	80224f6 <__ieee754_rem_pio2f+0x19e>
 80224e8:	ee70 7a40 	vsub.f32	s15, s0, s0
 80224ec:	edc0 7a01 	vstr	s15, [r0, #4]
 80224f0:	edc0 7a00 	vstr	s15, [r0]
 80224f4:	e73e      	b.n	8022374 <__ieee754_rem_pio2f+0x1c>
 80224f6:	15ea      	asrs	r2, r5, #23
 80224f8:	3a86      	subs	r2, #134	@ 0x86
 80224fa:	eba5 53c2 	sub.w	r3, r5, r2, lsl #23
 80224fe:	ee07 3a90 	vmov	s15, r3
 8022502:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8022506:	eddf 6a2a 	vldr	s13, [pc, #168]	@ 80225b0 <__ieee754_rem_pio2f+0x258>
 802250a:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 802250e:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8022512:	ed8d 7a03 	vstr	s14, [sp, #12]
 8022516:	ee67 7aa6 	vmul.f32	s15, s15, s13
 802251a:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 802251e:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8022522:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8022526:	ed8d 7a04 	vstr	s14, [sp, #16]
 802252a:	ee67 7aa6 	vmul.f32	s15, s15, s13
 802252e:	eef5 7a40 	vcmp.f32	s15, #0.0
 8022532:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8022536:	edcd 7a05 	vstr	s15, [sp, #20]
 802253a:	d11e      	bne.n	802257a <__ieee754_rem_pio2f+0x222>
 802253c:	eeb5 7a40 	vcmp.f32	s14, #0.0
 8022540:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8022544:	bf0c      	ite	eq
 8022546:	2301      	moveq	r3, #1
 8022548:	2302      	movne	r3, #2
 802254a:	491a      	ldr	r1, [pc, #104]	@ (80225b4 <__ieee754_rem_pio2f+0x25c>)
 802254c:	9101      	str	r1, [sp, #4]
 802254e:	2102      	movs	r1, #2
 8022550:	9100      	str	r1, [sp, #0]
 8022552:	a803      	add	r0, sp, #12
 8022554:	4621      	mov	r1, r4
 8022556:	f000 f90b 	bl	8022770 <__kernel_rem_pio2f>
 802255a:	2e00      	cmp	r6, #0
 802255c:	f6bf af2f 	bge.w	80223be <__ieee754_rem_pio2f+0x66>
 8022560:	edd4 7a00 	vldr	s15, [r4]
 8022564:	eef1 7a67 	vneg.f32	s15, s15
 8022568:	edc4 7a00 	vstr	s15, [r4]
 802256c:	edd4 7a01 	vldr	s15, [r4, #4]
 8022570:	eef1 7a67 	vneg.f32	s15, s15
 8022574:	edc4 7a01 	vstr	s15, [r4, #4]
 8022578:	e782      	b.n	8022480 <__ieee754_rem_pio2f+0x128>
 802257a:	2303      	movs	r3, #3
 802257c:	e7e5      	b.n	802254a <__ieee754_rem_pio2f+0x1f2>
 802257e:	bf00      	nop
 8022580:	3f490fd8 	.word	0x3f490fd8
 8022584:	4016cbe3 	.word	0x4016cbe3
 8022588:	3fc90f80 	.word	0x3fc90f80
 802258c:	3fc90fd0 	.word	0x3fc90fd0
 8022590:	37354400 	.word	0x37354400
 8022594:	37354443 	.word	0x37354443
 8022598:	2e85a308 	.word	0x2e85a308
 802259c:	43490f80 	.word	0x43490f80
 80225a0:	3f22f984 	.word	0x3f22f984
 80225a4:	08025690 	.word	0x08025690
 80225a8:	2e85a300 	.word	0x2e85a300
 80225ac:	248d3132 	.word	0x248d3132
 80225b0:	43800000 	.word	0x43800000
 80225b4:	08025710 	.word	0x08025710

080225b8 <atanf>:
 80225b8:	b538      	push	{r3, r4, r5, lr}
 80225ba:	ee10 5a10 	vmov	r5, s0
 80225be:	f025 4400 	bic.w	r4, r5, #2147483648	@ 0x80000000
 80225c2:	f1b4 4fa1 	cmp.w	r4, #1350565888	@ 0x50800000
 80225c6:	eef0 7a40 	vmov.f32	s15, s0
 80225ca:	d310      	bcc.n	80225ee <atanf+0x36>
 80225cc:	f1b4 4fff 	cmp.w	r4, #2139095040	@ 0x7f800000
 80225d0:	d904      	bls.n	80225dc <atanf+0x24>
 80225d2:	ee70 7a00 	vadd.f32	s15, s0, s0
 80225d6:	eeb0 0a67 	vmov.f32	s0, s15
 80225da:	bd38      	pop	{r3, r4, r5, pc}
 80225dc:	eddf 7a4d 	vldr	s15, [pc, #308]	@ 8022714 <atanf+0x15c>
 80225e0:	ed9f 7a4d 	vldr	s14, [pc, #308]	@ 8022718 <atanf+0x160>
 80225e4:	2d00      	cmp	r5, #0
 80225e6:	bfc8      	it	gt
 80225e8:	eef0 7a47 	vmovgt.f32	s15, s14
 80225ec:	e7f3      	b.n	80225d6 <atanf+0x1e>
 80225ee:	4b4b      	ldr	r3, [pc, #300]	@ (802271c <atanf+0x164>)
 80225f0:	429c      	cmp	r4, r3
 80225f2:	d810      	bhi.n	8022616 <atanf+0x5e>
 80225f4:	f1b4 5f44 	cmp.w	r4, #822083584	@ 0x31000000
 80225f8:	d20a      	bcs.n	8022610 <atanf+0x58>
 80225fa:	ed9f 7a49 	vldr	s14, [pc, #292]	@ 8022720 <atanf+0x168>
 80225fe:	ee30 7a07 	vadd.f32	s14, s0, s14
 8022602:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8022606:	eeb4 7ae6 	vcmpe.f32	s14, s13
 802260a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802260e:	dce2      	bgt.n	80225d6 <atanf+0x1e>
 8022610:	f04f 33ff 	mov.w	r3, #4294967295
 8022614:	e013      	b.n	802263e <atanf+0x86>
 8022616:	f000 f8a3 	bl	8022760 <fabsf>
 802261a:	4b42      	ldr	r3, [pc, #264]	@ (8022724 <atanf+0x16c>)
 802261c:	429c      	cmp	r4, r3
 802261e:	d84f      	bhi.n	80226c0 <atanf+0x108>
 8022620:	f5a3 03d0 	sub.w	r3, r3, #6815744	@ 0x680000
 8022624:	429c      	cmp	r4, r3
 8022626:	d841      	bhi.n	80226ac <atanf+0xf4>
 8022628:	eef0 7a00 	vmov.f32	s15, #0	@ 0x40000000  2.0
 802262c:	eebf 7a00 	vmov.f32	s14, #240	@ 0xbf800000 -1.0
 8022630:	eea0 7a27 	vfma.f32	s14, s0, s15
 8022634:	2300      	movs	r3, #0
 8022636:	ee30 0a27 	vadd.f32	s0, s0, s15
 802263a:	eec7 7a00 	vdiv.f32	s15, s14, s0
 802263e:	1c5a      	adds	r2, r3, #1
 8022640:	ee27 6aa7 	vmul.f32	s12, s15, s15
 8022644:	ed9f 7a38 	vldr	s14, [pc, #224]	@ 8022728 <atanf+0x170>
 8022648:	eddf 5a38 	vldr	s11, [pc, #224]	@ 802272c <atanf+0x174>
 802264c:	ed9f 5a38 	vldr	s10, [pc, #224]	@ 8022730 <atanf+0x178>
 8022650:	ee66 6a06 	vmul.f32	s13, s12, s12
 8022654:	eee6 5a87 	vfma.f32	s11, s13, s14
 8022658:	ed9f 7a36 	vldr	s14, [pc, #216]	@ 8022734 <atanf+0x17c>
 802265c:	eea5 7aa6 	vfma.f32	s14, s11, s13
 8022660:	eddf 5a35 	vldr	s11, [pc, #212]	@ 8022738 <atanf+0x180>
 8022664:	eee7 5a26 	vfma.f32	s11, s14, s13
 8022668:	ed9f 7a34 	vldr	s14, [pc, #208]	@ 802273c <atanf+0x184>
 802266c:	eea5 7aa6 	vfma.f32	s14, s11, s13
 8022670:	eddf 5a33 	vldr	s11, [pc, #204]	@ 8022740 <atanf+0x188>
 8022674:	eee7 5a26 	vfma.f32	s11, s14, s13
 8022678:	ed9f 7a32 	vldr	s14, [pc, #200]	@ 8022744 <atanf+0x18c>
 802267c:	eea6 5a87 	vfma.f32	s10, s13, s14
 8022680:	ed9f 7a31 	vldr	s14, [pc, #196]	@ 8022748 <atanf+0x190>
 8022684:	eea5 7a26 	vfma.f32	s14, s10, s13
 8022688:	ed9f 5a30 	vldr	s10, [pc, #192]	@ 802274c <atanf+0x194>
 802268c:	eea7 5a26 	vfma.f32	s10, s14, s13
 8022690:	ed9f 7a2f 	vldr	s14, [pc, #188]	@ 8022750 <atanf+0x198>
 8022694:	eea5 7a26 	vfma.f32	s14, s10, s13
 8022698:	ee27 7a26 	vmul.f32	s14, s14, s13
 802269c:	eea5 7a86 	vfma.f32	s14, s11, s12
 80226a0:	ee27 7a87 	vmul.f32	s14, s15, s14
 80226a4:	d121      	bne.n	80226ea <atanf+0x132>
 80226a6:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80226aa:	e794      	b.n	80225d6 <atanf+0x1e>
 80226ac:	eef7 7a00 	vmov.f32	s15, #112	@ 0x3f800000  1.0
 80226b0:	ee30 7a67 	vsub.f32	s14, s0, s15
 80226b4:	ee30 0a27 	vadd.f32	s0, s0, s15
 80226b8:	2301      	movs	r3, #1
 80226ba:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80226be:	e7be      	b.n	802263e <atanf+0x86>
 80226c0:	4b24      	ldr	r3, [pc, #144]	@ (8022754 <atanf+0x19c>)
 80226c2:	429c      	cmp	r4, r3
 80226c4:	d80b      	bhi.n	80226de <atanf+0x126>
 80226c6:	eef7 7a08 	vmov.f32	s15, #120	@ 0x3fc00000  1.5
 80226ca:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 80226ce:	eea0 7a27 	vfma.f32	s14, s0, s15
 80226d2:	2302      	movs	r3, #2
 80226d4:	ee70 6a67 	vsub.f32	s13, s0, s15
 80226d8:	eec6 7a87 	vdiv.f32	s15, s13, s14
 80226dc:	e7af      	b.n	802263e <atanf+0x86>
 80226de:	eebf 7a00 	vmov.f32	s14, #240	@ 0xbf800000 -1.0
 80226e2:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80226e6:	2303      	movs	r3, #3
 80226e8:	e7a9      	b.n	802263e <atanf+0x86>
 80226ea:	4a1b      	ldr	r2, [pc, #108]	@ (8022758 <atanf+0x1a0>)
 80226ec:	491b      	ldr	r1, [pc, #108]	@ (802275c <atanf+0x1a4>)
 80226ee:	eb02 0283 	add.w	r2, r2, r3, lsl #2
 80226f2:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 80226f6:	edd3 6a00 	vldr	s13, [r3]
 80226fa:	ee37 7a66 	vsub.f32	s14, s14, s13
 80226fe:	2d00      	cmp	r5, #0
 8022700:	ee37 7a67 	vsub.f32	s14, s14, s15
 8022704:	edd2 7a00 	vldr	s15, [r2]
 8022708:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802270c:	bfb8      	it	lt
 802270e:	eef1 7a67 	vneglt.f32	s15, s15
 8022712:	e760      	b.n	80225d6 <atanf+0x1e>
 8022714:	bfc90fdb 	.word	0xbfc90fdb
 8022718:	3fc90fdb 	.word	0x3fc90fdb
 802271c:	3edfffff 	.word	0x3edfffff
 8022720:	7149f2ca 	.word	0x7149f2ca
 8022724:	3f97ffff 	.word	0x3f97ffff
 8022728:	3c8569d7 	.word	0x3c8569d7
 802272c:	3d4bda59 	.word	0x3d4bda59
 8022730:	bd6ef16b 	.word	0xbd6ef16b
 8022734:	3d886b35 	.word	0x3d886b35
 8022738:	3dba2e6e 	.word	0x3dba2e6e
 802273c:	3e124925 	.word	0x3e124925
 8022740:	3eaaaaab 	.word	0x3eaaaaab
 8022744:	bd15a221 	.word	0xbd15a221
 8022748:	bd9d8795 	.word	0xbd9d8795
 802274c:	bde38e38 	.word	0xbde38e38
 8022750:	be4ccccd 	.word	0xbe4ccccd
 8022754:	401bffff 	.word	0x401bffff
 8022758:	08025a38 	.word	0x08025a38
 802275c:	08025a28 	.word	0x08025a28

08022760 <fabsf>:
 8022760:	ee10 3a10 	vmov	r3, s0
 8022764:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 8022768:	ee00 3a10 	vmov	s0, r3
 802276c:	4770      	bx	lr
	...

08022770 <__kernel_rem_pio2f>:
 8022770:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022774:	ed2d 8b04 	vpush	{d8-d9}
 8022778:	b0d9      	sub	sp, #356	@ 0x164
 802277a:	4690      	mov	r8, r2
 802277c:	9001      	str	r0, [sp, #4]
 802277e:	4ab6      	ldr	r2, [pc, #728]	@ (8022a58 <__kernel_rem_pio2f+0x2e8>)
 8022780:	9866      	ldr	r0, [sp, #408]	@ 0x198
 8022782:	f118 0f04 	cmn.w	r8, #4
 8022786:	f852 a020 	ldr.w	sl, [r2, r0, lsl #2]
 802278a:	460f      	mov	r7, r1
 802278c:	f103 3bff 	add.w	fp, r3, #4294967295
 8022790:	db26      	blt.n	80227e0 <__kernel_rem_pio2f+0x70>
 8022792:	f1b8 0203 	subs.w	r2, r8, #3
 8022796:	bf48      	it	mi
 8022798:	f108 0204 	addmi.w	r2, r8, #4
 802279c:	10d2      	asrs	r2, r2, #3
 802279e:	1c55      	adds	r5, r2, #1
 80227a0:	9967      	ldr	r1, [sp, #412]	@ 0x19c
 80227a2:	ed9f 7ab1 	vldr	s14, [pc, #708]	@ 8022a68 <__kernel_rem_pio2f+0x2f8>
 80227a6:	00e8      	lsls	r0, r5, #3
 80227a8:	eba2 060b 	sub.w	r6, r2, fp
 80227ac:	9002      	str	r0, [sp, #8]
 80227ae:	eba8 05c5 	sub.w	r5, r8, r5, lsl #3
 80227b2:	eb0a 0c0b 	add.w	ip, sl, fp
 80227b6:	ac1c      	add	r4, sp, #112	@ 0x70
 80227b8:	eb01 0e86 	add.w	lr, r1, r6, lsl #2
 80227bc:	2000      	movs	r0, #0
 80227be:	4560      	cmp	r0, ip
 80227c0:	dd10      	ble.n	80227e4 <__kernel_rem_pio2f+0x74>
 80227c2:	a91c      	add	r1, sp, #112	@ 0x70
 80227c4:	eb01 0083 	add.w	r0, r1, r3, lsl #2
 80227c8:	f50d 7988 	add.w	r9, sp, #272	@ 0x110
 80227cc:	2600      	movs	r6, #0
 80227ce:	4556      	cmp	r6, sl
 80227d0:	dc24      	bgt.n	802281c <__kernel_rem_pio2f+0xac>
 80227d2:	f8dd e004 	ldr.w	lr, [sp, #4]
 80227d6:	eddf 7aa4 	vldr	s15, [pc, #656]	@ 8022a68 <__kernel_rem_pio2f+0x2f8>
 80227da:	4684      	mov	ip, r0
 80227dc:	2400      	movs	r4, #0
 80227de:	e016      	b.n	802280e <__kernel_rem_pio2f+0x9e>
 80227e0:	2200      	movs	r2, #0
 80227e2:	e7dc      	b.n	802279e <__kernel_rem_pio2f+0x2e>
 80227e4:	42c6      	cmn	r6, r0
 80227e6:	bf5d      	ittte	pl
 80227e8:	f85e 1020 	ldrpl.w	r1, [lr, r0, lsl #2]
 80227ec:	ee07 1a90 	vmovpl	s15, r1
 80227f0:	eef8 7ae7 	vcvtpl.f32.s32	s15, s15
 80227f4:	eef0 7a47 	vmovmi.f32	s15, s14
 80227f8:	ece4 7a01 	vstmia	r4!, {s15}
 80227fc:	3001      	adds	r0, #1
 80227fe:	e7de      	b.n	80227be <__kernel_rem_pio2f+0x4e>
 8022800:	ecfe 6a01 	vldmia	lr!, {s13}
 8022804:	ed3c 7a01 	vldmdb	ip!, {s14}
 8022808:	eee6 7a87 	vfma.f32	s15, s13, s14
 802280c:	3401      	adds	r4, #1
 802280e:	455c      	cmp	r4, fp
 8022810:	ddf6      	ble.n	8022800 <__kernel_rem_pio2f+0x90>
 8022812:	ece9 7a01 	vstmia	r9!, {s15}
 8022816:	3601      	adds	r6, #1
 8022818:	3004      	adds	r0, #4
 802281a:	e7d8      	b.n	80227ce <__kernel_rem_pio2f+0x5e>
 802281c:	a908      	add	r1, sp, #32
 802281e:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 8022822:	9104      	str	r1, [sp, #16]
 8022824:	9967      	ldr	r1, [sp, #412]	@ 0x19c
 8022826:	eddf 8a8f 	vldr	s17, [pc, #572]	@ 8022a64 <__kernel_rem_pio2f+0x2f4>
 802282a:	ed9f 9a8d 	vldr	s18, [pc, #564]	@ 8022a60 <__kernel_rem_pio2f+0x2f0>
 802282e:	eb01 0282 	add.w	r2, r1, r2, lsl #2
 8022832:	9203      	str	r2, [sp, #12]
 8022834:	4654      	mov	r4, sl
 8022836:	00a2      	lsls	r2, r4, #2
 8022838:	9205      	str	r2, [sp, #20]
 802283a:	aa58      	add	r2, sp, #352	@ 0x160
 802283c:	eb02 0284 	add.w	r2, r2, r4, lsl #2
 8022840:	ed12 0a14 	vldr	s0, [r2, #-80]	@ 0xffffffb0
 8022844:	a944      	add	r1, sp, #272	@ 0x110
 8022846:	aa08      	add	r2, sp, #32
 8022848:	eb01 0084 	add.w	r0, r1, r4, lsl #2
 802284c:	4694      	mov	ip, r2
 802284e:	4626      	mov	r6, r4
 8022850:	2e00      	cmp	r6, #0
 8022852:	dc4c      	bgt.n	80228ee <__kernel_rem_pio2f+0x17e>
 8022854:	4628      	mov	r0, r5
 8022856:	e9cd 2306 	strd	r2, r3, [sp, #24]
 802285a:	f000 f9f1 	bl	8022c40 <scalbnf>
 802285e:	eeb0 8a40 	vmov.f32	s16, s0
 8022862:	eeb4 0a00 	vmov.f32	s0, #64	@ 0x3e000000  0.125
 8022866:	ee28 0a00 	vmul.f32	s0, s16, s0
 802286a:	f000 fa4f 	bl	8022d0c <floorf>
 802286e:	eef2 7a00 	vmov.f32	s15, #32	@ 0x41000000  8.0
 8022872:	eea0 8a67 	vfms.f32	s16, s0, s15
 8022876:	2d00      	cmp	r5, #0
 8022878:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 802287c:	eefd 7ac8 	vcvt.s32.f32	s15, s16
 8022880:	ee17 9a90 	vmov	r9, s15
 8022884:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8022888:	ee38 8a67 	vsub.f32	s16, s16, s15
 802288c:	dd41      	ble.n	8022912 <__kernel_rem_pio2f+0x1a2>
 802288e:	f104 3cff 	add.w	ip, r4, #4294967295
 8022892:	a908      	add	r1, sp, #32
 8022894:	f1c5 0e08 	rsb	lr, r5, #8
 8022898:	f851 602c 	ldr.w	r6, [r1, ip, lsl #2]
 802289c:	fa46 f00e 	asr.w	r0, r6, lr
 80228a0:	4481      	add	r9, r0
 80228a2:	fa00 f00e 	lsl.w	r0, r0, lr
 80228a6:	1a36      	subs	r6, r6, r0
 80228a8:	f1c5 0007 	rsb	r0, r5, #7
 80228ac:	f841 602c 	str.w	r6, [r1, ip, lsl #2]
 80228b0:	4106      	asrs	r6, r0
 80228b2:	2e00      	cmp	r6, #0
 80228b4:	dd3c      	ble.n	8022930 <__kernel_rem_pio2f+0x1c0>
 80228b6:	f04f 0e00 	mov.w	lr, #0
 80228ba:	f109 0901 	add.w	r9, r9, #1
 80228be:	4670      	mov	r0, lr
 80228c0:	4574      	cmp	r4, lr
 80228c2:	dc68      	bgt.n	8022996 <__kernel_rem_pio2f+0x226>
 80228c4:	2d00      	cmp	r5, #0
 80228c6:	dd03      	ble.n	80228d0 <__kernel_rem_pio2f+0x160>
 80228c8:	2d01      	cmp	r5, #1
 80228ca:	d074      	beq.n	80229b6 <__kernel_rem_pio2f+0x246>
 80228cc:	2d02      	cmp	r5, #2
 80228ce:	d07d      	beq.n	80229cc <__kernel_rem_pio2f+0x25c>
 80228d0:	2e02      	cmp	r6, #2
 80228d2:	d12d      	bne.n	8022930 <__kernel_rem_pio2f+0x1c0>
 80228d4:	eeb7 0a00 	vmov.f32	s0, #112	@ 0x3f800000  1.0
 80228d8:	ee30 8a48 	vsub.f32	s16, s0, s16
 80228dc:	b340      	cbz	r0, 8022930 <__kernel_rem_pio2f+0x1c0>
 80228de:	4628      	mov	r0, r5
 80228e0:	9306      	str	r3, [sp, #24]
 80228e2:	f000 f9ad 	bl	8022c40 <scalbnf>
 80228e6:	9b06      	ldr	r3, [sp, #24]
 80228e8:	ee38 8a40 	vsub.f32	s16, s16, s0
 80228ec:	e020      	b.n	8022930 <__kernel_rem_pio2f+0x1c0>
 80228ee:	ee60 7a28 	vmul.f32	s15, s0, s17
 80228f2:	3e01      	subs	r6, #1
 80228f4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80228f8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80228fc:	eea7 0ac9 	vfms.f32	s0, s15, s18
 8022900:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 8022904:	ecac 0a01 	vstmia	ip!, {s0}
 8022908:	ed30 0a01 	vldmdb	r0!, {s0}
 802290c:	ee37 0a80 	vadd.f32	s0, s15, s0
 8022910:	e79e      	b.n	8022850 <__kernel_rem_pio2f+0xe0>
 8022912:	d105      	bne.n	8022920 <__kernel_rem_pio2f+0x1b0>
 8022914:	1e60      	subs	r0, r4, #1
 8022916:	a908      	add	r1, sp, #32
 8022918:	f851 6020 	ldr.w	r6, [r1, r0, lsl #2]
 802291c:	11f6      	asrs	r6, r6, #7
 802291e:	e7c8      	b.n	80228b2 <__kernel_rem_pio2f+0x142>
 8022920:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 8022924:	eeb4 8ae7 	vcmpe.f32	s16, s15
 8022928:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802292c:	da31      	bge.n	8022992 <__kernel_rem_pio2f+0x222>
 802292e:	2600      	movs	r6, #0
 8022930:	eeb5 8a40 	vcmp.f32	s16, #0.0
 8022934:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8022938:	f040 8098 	bne.w	8022a6c <__kernel_rem_pio2f+0x2fc>
 802293c:	1e60      	subs	r0, r4, #1
 802293e:	2200      	movs	r2, #0
 8022940:	4550      	cmp	r0, sl
 8022942:	da4b      	bge.n	80229dc <__kernel_rem_pio2f+0x26c>
 8022944:	2a00      	cmp	r2, #0
 8022946:	d065      	beq.n	8022a14 <__kernel_rem_pio2f+0x2a4>
 8022948:	3c01      	subs	r4, #1
 802294a:	ab08      	add	r3, sp, #32
 802294c:	3d08      	subs	r5, #8
 802294e:	f853 3024 	ldr.w	r3, [r3, r4, lsl #2]
 8022952:	2b00      	cmp	r3, #0
 8022954:	d0f8      	beq.n	8022948 <__kernel_rem_pio2f+0x1d8>
 8022956:	4628      	mov	r0, r5
 8022958:	eeb7 0a00 	vmov.f32	s0, #112	@ 0x3f800000  1.0
 802295c:	f000 f970 	bl	8022c40 <scalbnf>
 8022960:	1c63      	adds	r3, r4, #1
 8022962:	aa44      	add	r2, sp, #272	@ 0x110
 8022964:	ed9f 7a3f 	vldr	s14, [pc, #252]	@ 8022a64 <__kernel_rem_pio2f+0x2f4>
 8022968:	0099      	lsls	r1, r3, #2
 802296a:	eb02 0283 	add.w	r2, r2, r3, lsl #2
 802296e:	4623      	mov	r3, r4
 8022970:	2b00      	cmp	r3, #0
 8022972:	f280 80a9 	bge.w	8022ac8 <__kernel_rem_pio2f+0x358>
 8022976:	4623      	mov	r3, r4
 8022978:	2b00      	cmp	r3, #0
 802297a:	f2c0 80c7 	blt.w	8022b0c <__kernel_rem_pio2f+0x39c>
 802297e:	aa44      	add	r2, sp, #272	@ 0x110
 8022980:	eb02 0583 	add.w	r5, r2, r3, lsl #2
 8022984:	f8df c0d4 	ldr.w	ip, [pc, #212]	@ 8022a5c <__kernel_rem_pio2f+0x2ec>
 8022988:	eddf 7a37 	vldr	s15, [pc, #220]	@ 8022a68 <__kernel_rem_pio2f+0x2f8>
 802298c:	2000      	movs	r0, #0
 802298e:	1ae2      	subs	r2, r4, r3
 8022990:	e0b1      	b.n	8022af6 <__kernel_rem_pio2f+0x386>
 8022992:	2602      	movs	r6, #2
 8022994:	e78f      	b.n	80228b6 <__kernel_rem_pio2f+0x146>
 8022996:	f852 1b04 	ldr.w	r1, [r2], #4
 802299a:	b948      	cbnz	r0, 80229b0 <__kernel_rem_pio2f+0x240>
 802299c:	b121      	cbz	r1, 80229a8 <__kernel_rem_pio2f+0x238>
 802299e:	f5c1 7180 	rsb	r1, r1, #256	@ 0x100
 80229a2:	f842 1c04 	str.w	r1, [r2, #-4]
 80229a6:	2101      	movs	r1, #1
 80229a8:	f10e 0e01 	add.w	lr, lr, #1
 80229ac:	4608      	mov	r0, r1
 80229ae:	e787      	b.n	80228c0 <__kernel_rem_pio2f+0x150>
 80229b0:	f1c1 01ff 	rsb	r1, r1, #255	@ 0xff
 80229b4:	e7f5      	b.n	80229a2 <__kernel_rem_pio2f+0x232>
 80229b6:	f104 3cff 	add.w	ip, r4, #4294967295
 80229ba:	aa08      	add	r2, sp, #32
 80229bc:	f852 202c 	ldr.w	r2, [r2, ip, lsl #2]
 80229c0:	f002 027f 	and.w	r2, r2, #127	@ 0x7f
 80229c4:	a908      	add	r1, sp, #32
 80229c6:	f841 202c 	str.w	r2, [r1, ip, lsl #2]
 80229ca:	e781      	b.n	80228d0 <__kernel_rem_pio2f+0x160>
 80229cc:	f104 3cff 	add.w	ip, r4, #4294967295
 80229d0:	aa08      	add	r2, sp, #32
 80229d2:	f852 202c 	ldr.w	r2, [r2, ip, lsl #2]
 80229d6:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 80229da:	e7f3      	b.n	80229c4 <__kernel_rem_pio2f+0x254>
 80229dc:	a908      	add	r1, sp, #32
 80229de:	f851 1020 	ldr.w	r1, [r1, r0, lsl #2]
 80229e2:	3801      	subs	r0, #1
 80229e4:	430a      	orrs	r2, r1
 80229e6:	e7ab      	b.n	8022940 <__kernel_rem_pio2f+0x1d0>
 80229e8:	3201      	adds	r2, #1
 80229ea:	f850 6d04 	ldr.w	r6, [r0, #-4]!
 80229ee:	2e00      	cmp	r6, #0
 80229f0:	d0fa      	beq.n	80229e8 <__kernel_rem_pio2f+0x278>
 80229f2:	9905      	ldr	r1, [sp, #20]
 80229f4:	f501 71b0 	add.w	r1, r1, #352	@ 0x160
 80229f8:	eb0d 0001 	add.w	r0, sp, r1
 80229fc:	18e6      	adds	r6, r4, r3
 80229fe:	a91c      	add	r1, sp, #112	@ 0x70
 8022a00:	f104 0c01 	add.w	ip, r4, #1
 8022a04:	384c      	subs	r0, #76	@ 0x4c
 8022a06:	eb01 0686 	add.w	r6, r1, r6, lsl #2
 8022a0a:	4422      	add	r2, r4
 8022a0c:	4562      	cmp	r2, ip
 8022a0e:	da04      	bge.n	8022a1a <__kernel_rem_pio2f+0x2aa>
 8022a10:	4614      	mov	r4, r2
 8022a12:	e710      	b.n	8022836 <__kernel_rem_pio2f+0xc6>
 8022a14:	9804      	ldr	r0, [sp, #16]
 8022a16:	2201      	movs	r2, #1
 8022a18:	e7e7      	b.n	80229ea <__kernel_rem_pio2f+0x27a>
 8022a1a:	9903      	ldr	r1, [sp, #12]
 8022a1c:	f8dd e004 	ldr.w	lr, [sp, #4]
 8022a20:	f851 102c 	ldr.w	r1, [r1, ip, lsl #2]
 8022a24:	9105      	str	r1, [sp, #20]
 8022a26:	ee07 1a90 	vmov	s15, r1
 8022a2a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8022a2e:	2400      	movs	r4, #0
 8022a30:	ece6 7a01 	vstmia	r6!, {s15}
 8022a34:	eddf 7a0c 	vldr	s15, [pc, #48]	@ 8022a68 <__kernel_rem_pio2f+0x2f8>
 8022a38:	46b1      	mov	r9, r6
 8022a3a:	455c      	cmp	r4, fp
 8022a3c:	dd04      	ble.n	8022a48 <__kernel_rem_pio2f+0x2d8>
 8022a3e:	ece0 7a01 	vstmia	r0!, {s15}
 8022a42:	f10c 0c01 	add.w	ip, ip, #1
 8022a46:	e7e1      	b.n	8022a0c <__kernel_rem_pio2f+0x29c>
 8022a48:	ecfe 6a01 	vldmia	lr!, {s13}
 8022a4c:	ed39 7a01 	vldmdb	r9!, {s14}
 8022a50:	3401      	adds	r4, #1
 8022a52:	eee6 7a87 	vfma.f32	s15, s13, s14
 8022a56:	e7f0      	b.n	8022a3a <__kernel_rem_pio2f+0x2ca>
 8022a58:	08025a74 	.word	0x08025a74
 8022a5c:	08025a48 	.word	0x08025a48
 8022a60:	43800000 	.word	0x43800000
 8022a64:	3b800000 	.word	0x3b800000
 8022a68:	00000000 	.word	0x00000000
 8022a6c:	9b02      	ldr	r3, [sp, #8]
 8022a6e:	eeb0 0a48 	vmov.f32	s0, s16
 8022a72:	eba3 0008 	sub.w	r0, r3, r8
 8022a76:	f000 f8e3 	bl	8022c40 <scalbnf>
 8022a7a:	ed1f 7a07 	vldr	s14, [pc, #-28]	@ 8022a60 <__kernel_rem_pio2f+0x2f0>
 8022a7e:	eeb4 0ac7 	vcmpe.f32	s0, s14
 8022a82:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8022a86:	db19      	blt.n	8022abc <__kernel_rem_pio2f+0x34c>
 8022a88:	ed5f 7a0a 	vldr	s15, [pc, #-40]	@ 8022a64 <__kernel_rem_pio2f+0x2f4>
 8022a8c:	ee60 7a27 	vmul.f32	s15, s0, s15
 8022a90:	aa08      	add	r2, sp, #32
 8022a92:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8022a96:	3508      	adds	r5, #8
 8022a98:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8022a9c:	eea7 0ac7 	vfms.f32	s0, s15, s14
 8022aa0:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8022aa4:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 8022aa8:	ee10 3a10 	vmov	r3, s0
 8022aac:	f842 3024 	str.w	r3, [r2, r4, lsl #2]
 8022ab0:	ee17 3a90 	vmov	r3, s15
 8022ab4:	3401      	adds	r4, #1
 8022ab6:	f842 3024 	str.w	r3, [r2, r4, lsl #2]
 8022aba:	e74c      	b.n	8022956 <__kernel_rem_pio2f+0x1e6>
 8022abc:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 8022ac0:	aa08      	add	r2, sp, #32
 8022ac2:	ee10 3a10 	vmov	r3, s0
 8022ac6:	e7f6      	b.n	8022ab6 <__kernel_rem_pio2f+0x346>
 8022ac8:	a808      	add	r0, sp, #32
 8022aca:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
 8022ace:	9001      	str	r0, [sp, #4]
 8022ad0:	ee07 0a90 	vmov	s15, r0
 8022ad4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8022ad8:	3b01      	subs	r3, #1
 8022ada:	ee67 7a80 	vmul.f32	s15, s15, s0
 8022ade:	ee20 0a07 	vmul.f32	s0, s0, s14
 8022ae2:	ed62 7a01 	vstmdb	r2!, {s15}
 8022ae6:	e743      	b.n	8022970 <__kernel_rem_pio2f+0x200>
 8022ae8:	ecfc 6a01 	vldmia	ip!, {s13}
 8022aec:	ecb5 7a01 	vldmia	r5!, {s14}
 8022af0:	eee6 7a87 	vfma.f32	s15, s13, s14
 8022af4:	3001      	adds	r0, #1
 8022af6:	4550      	cmp	r0, sl
 8022af8:	dc01      	bgt.n	8022afe <__kernel_rem_pio2f+0x38e>
 8022afa:	4290      	cmp	r0, r2
 8022afc:	ddf4      	ble.n	8022ae8 <__kernel_rem_pio2f+0x378>
 8022afe:	a858      	add	r0, sp, #352	@ 0x160
 8022b00:	eb00 0282 	add.w	r2, r0, r2, lsl #2
 8022b04:	ed42 7a28 	vstr	s15, [r2, #-160]	@ 0xffffff60
 8022b08:	3b01      	subs	r3, #1
 8022b0a:	e735      	b.n	8022978 <__kernel_rem_pio2f+0x208>
 8022b0c:	9b66      	ldr	r3, [sp, #408]	@ 0x198
 8022b0e:	2b02      	cmp	r3, #2
 8022b10:	dc09      	bgt.n	8022b26 <__kernel_rem_pio2f+0x3b6>
 8022b12:	2b00      	cmp	r3, #0
 8022b14:	dc27      	bgt.n	8022b66 <__kernel_rem_pio2f+0x3f6>
 8022b16:	d040      	beq.n	8022b9a <__kernel_rem_pio2f+0x42a>
 8022b18:	f009 0007 	and.w	r0, r9, #7
 8022b1c:	b059      	add	sp, #356	@ 0x164
 8022b1e:	ecbd 8b04 	vpop	{d8-d9}
 8022b22:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8022b26:	9b66      	ldr	r3, [sp, #408]	@ 0x198
 8022b28:	2b03      	cmp	r3, #3
 8022b2a:	d1f5      	bne.n	8022b18 <__kernel_rem_pio2f+0x3a8>
 8022b2c:	aa30      	add	r2, sp, #192	@ 0xc0
 8022b2e:	1f0b      	subs	r3, r1, #4
 8022b30:	4413      	add	r3, r2
 8022b32:	461a      	mov	r2, r3
 8022b34:	4620      	mov	r0, r4
 8022b36:	2800      	cmp	r0, #0
 8022b38:	dc50      	bgt.n	8022bdc <__kernel_rem_pio2f+0x46c>
 8022b3a:	4622      	mov	r2, r4
 8022b3c:	2a01      	cmp	r2, #1
 8022b3e:	dc5d      	bgt.n	8022bfc <__kernel_rem_pio2f+0x48c>
 8022b40:	ab30      	add	r3, sp, #192	@ 0xc0
 8022b42:	ed5f 7a37 	vldr	s15, [pc, #-220]	@ 8022a68 <__kernel_rem_pio2f+0x2f8>
 8022b46:	440b      	add	r3, r1
 8022b48:	2c01      	cmp	r4, #1
 8022b4a:	dc67      	bgt.n	8022c1c <__kernel_rem_pio2f+0x4ac>
 8022b4c:	eddd 6a30 	vldr	s13, [sp, #192]	@ 0xc0
 8022b50:	ed9d 7a31 	vldr	s14, [sp, #196]	@ 0xc4
 8022b54:	2e00      	cmp	r6, #0
 8022b56:	d167      	bne.n	8022c28 <__kernel_rem_pio2f+0x4b8>
 8022b58:	edc7 6a00 	vstr	s13, [r7]
 8022b5c:	ed87 7a01 	vstr	s14, [r7, #4]
 8022b60:	edc7 7a02 	vstr	s15, [r7, #8]
 8022b64:	e7d8      	b.n	8022b18 <__kernel_rem_pio2f+0x3a8>
 8022b66:	ab30      	add	r3, sp, #192	@ 0xc0
 8022b68:	ed1f 7a41 	vldr	s14, [pc, #-260]	@ 8022a68 <__kernel_rem_pio2f+0x2f8>
 8022b6c:	440b      	add	r3, r1
 8022b6e:	4622      	mov	r2, r4
 8022b70:	2a00      	cmp	r2, #0
 8022b72:	da24      	bge.n	8022bbe <__kernel_rem_pio2f+0x44e>
 8022b74:	b34e      	cbz	r6, 8022bca <__kernel_rem_pio2f+0x45a>
 8022b76:	eef1 7a47 	vneg.f32	s15, s14
 8022b7a:	edc7 7a00 	vstr	s15, [r7]
 8022b7e:	eddd 7a30 	vldr	s15, [sp, #192]	@ 0xc0
 8022b82:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8022b86:	aa31      	add	r2, sp, #196	@ 0xc4
 8022b88:	2301      	movs	r3, #1
 8022b8a:	429c      	cmp	r4, r3
 8022b8c:	da20      	bge.n	8022bd0 <__kernel_rem_pio2f+0x460>
 8022b8e:	b10e      	cbz	r6, 8022b94 <__kernel_rem_pio2f+0x424>
 8022b90:	eef1 7a67 	vneg.f32	s15, s15
 8022b94:	edc7 7a01 	vstr	s15, [r7, #4]
 8022b98:	e7be      	b.n	8022b18 <__kernel_rem_pio2f+0x3a8>
 8022b9a:	ab30      	add	r3, sp, #192	@ 0xc0
 8022b9c:	ed5f 7a4e 	vldr	s15, [pc, #-312]	@ 8022a68 <__kernel_rem_pio2f+0x2f8>
 8022ba0:	440b      	add	r3, r1
 8022ba2:	2c00      	cmp	r4, #0
 8022ba4:	da05      	bge.n	8022bb2 <__kernel_rem_pio2f+0x442>
 8022ba6:	b10e      	cbz	r6, 8022bac <__kernel_rem_pio2f+0x43c>
 8022ba8:	eef1 7a67 	vneg.f32	s15, s15
 8022bac:	edc7 7a00 	vstr	s15, [r7]
 8022bb0:	e7b2      	b.n	8022b18 <__kernel_rem_pio2f+0x3a8>
 8022bb2:	ed33 7a01 	vldmdb	r3!, {s14}
 8022bb6:	3c01      	subs	r4, #1
 8022bb8:	ee77 7a87 	vadd.f32	s15, s15, s14
 8022bbc:	e7f1      	b.n	8022ba2 <__kernel_rem_pio2f+0x432>
 8022bbe:	ed73 7a01 	vldmdb	r3!, {s15}
 8022bc2:	3a01      	subs	r2, #1
 8022bc4:	ee37 7a27 	vadd.f32	s14, s14, s15
 8022bc8:	e7d2      	b.n	8022b70 <__kernel_rem_pio2f+0x400>
 8022bca:	eef0 7a47 	vmov.f32	s15, s14
 8022bce:	e7d4      	b.n	8022b7a <__kernel_rem_pio2f+0x40a>
 8022bd0:	ecb2 7a01 	vldmia	r2!, {s14}
 8022bd4:	3301      	adds	r3, #1
 8022bd6:	ee77 7a87 	vadd.f32	s15, s15, s14
 8022bda:	e7d6      	b.n	8022b8a <__kernel_rem_pio2f+0x41a>
 8022bdc:	ed72 7a01 	vldmdb	r2!, {s15}
 8022be0:	edd2 6a01 	vldr	s13, [r2, #4]
 8022be4:	ee37 7aa6 	vadd.f32	s14, s15, s13
 8022be8:	3801      	subs	r0, #1
 8022bea:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8022bee:	ed82 7a00 	vstr	s14, [r2]
 8022bf2:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8022bf6:	edc2 7a01 	vstr	s15, [r2, #4]
 8022bfa:	e79c      	b.n	8022b36 <__kernel_rem_pio2f+0x3c6>
 8022bfc:	ed73 7a01 	vldmdb	r3!, {s15}
 8022c00:	edd3 6a01 	vldr	s13, [r3, #4]
 8022c04:	ee37 7aa6 	vadd.f32	s14, s15, s13
 8022c08:	3a01      	subs	r2, #1
 8022c0a:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8022c0e:	ed83 7a00 	vstr	s14, [r3]
 8022c12:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8022c16:	edc3 7a01 	vstr	s15, [r3, #4]
 8022c1a:	e78f      	b.n	8022b3c <__kernel_rem_pio2f+0x3cc>
 8022c1c:	ed33 7a01 	vldmdb	r3!, {s14}
 8022c20:	3c01      	subs	r4, #1
 8022c22:	ee77 7a87 	vadd.f32	s15, s15, s14
 8022c26:	e78f      	b.n	8022b48 <__kernel_rem_pio2f+0x3d8>
 8022c28:	eef1 6a66 	vneg.f32	s13, s13
 8022c2c:	eeb1 7a47 	vneg.f32	s14, s14
 8022c30:	edc7 6a00 	vstr	s13, [r7]
 8022c34:	ed87 7a01 	vstr	s14, [r7, #4]
 8022c38:	eef1 7a67 	vneg.f32	s15, s15
 8022c3c:	e790      	b.n	8022b60 <__kernel_rem_pio2f+0x3f0>
 8022c3e:	bf00      	nop

08022c40 <scalbnf>:
 8022c40:	ee10 3a10 	vmov	r3, s0
 8022c44:	f033 4200 	bics.w	r2, r3, #2147483648	@ 0x80000000
 8022c48:	d02b      	beq.n	8022ca2 <scalbnf+0x62>
 8022c4a:	f1b2 4fff 	cmp.w	r2, #2139095040	@ 0x7f800000
 8022c4e:	d302      	bcc.n	8022c56 <scalbnf+0x16>
 8022c50:	ee30 0a00 	vadd.f32	s0, s0, s0
 8022c54:	4770      	bx	lr
 8022c56:	f013 4fff 	tst.w	r3, #2139095040	@ 0x7f800000
 8022c5a:	d123      	bne.n	8022ca4 <scalbnf+0x64>
 8022c5c:	4b24      	ldr	r3, [pc, #144]	@ (8022cf0 <scalbnf+0xb0>)
 8022c5e:	eddf 7a25 	vldr	s15, [pc, #148]	@ 8022cf4 <scalbnf+0xb4>
 8022c62:	4298      	cmp	r0, r3
 8022c64:	ee20 0a27 	vmul.f32	s0, s0, s15
 8022c68:	db17      	blt.n	8022c9a <scalbnf+0x5a>
 8022c6a:	ee10 3a10 	vmov	r3, s0
 8022c6e:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 8022c72:	3a19      	subs	r2, #25
 8022c74:	f24c 3150 	movw	r1, #50000	@ 0xc350
 8022c78:	4288      	cmp	r0, r1
 8022c7a:	dd15      	ble.n	8022ca8 <scalbnf+0x68>
 8022c7c:	eddf 7a1e 	vldr	s15, [pc, #120]	@ 8022cf8 <scalbnf+0xb8>
 8022c80:	eddf 6a1e 	vldr	s13, [pc, #120]	@ 8022cfc <scalbnf+0xbc>
 8022c84:	ee10 3a10 	vmov	r3, s0
 8022c88:	eeb0 7a67 	vmov.f32	s14, s15
 8022c8c:	2b00      	cmp	r3, #0
 8022c8e:	bfb8      	it	lt
 8022c90:	eef0 7a66 	vmovlt.f32	s15, s13
 8022c94:	ee27 0a87 	vmul.f32	s0, s15, s14
 8022c98:	4770      	bx	lr
 8022c9a:	eddf 7a19 	vldr	s15, [pc, #100]	@ 8022d00 <scalbnf+0xc0>
 8022c9e:	ee27 0a80 	vmul.f32	s0, s15, s0
 8022ca2:	4770      	bx	lr
 8022ca4:	0dd2      	lsrs	r2, r2, #23
 8022ca6:	e7e5      	b.n	8022c74 <scalbnf+0x34>
 8022ca8:	4410      	add	r0, r2
 8022caa:	28fe      	cmp	r0, #254	@ 0xfe
 8022cac:	dce6      	bgt.n	8022c7c <scalbnf+0x3c>
 8022cae:	2800      	cmp	r0, #0
 8022cb0:	dd06      	ble.n	8022cc0 <scalbnf+0x80>
 8022cb2:	f023 43ff 	bic.w	r3, r3, #2139095040	@ 0x7f800000
 8022cb6:	ea43 53c0 	orr.w	r3, r3, r0, lsl #23
 8022cba:	ee00 3a10 	vmov	s0, r3
 8022cbe:	4770      	bx	lr
 8022cc0:	f110 0f16 	cmn.w	r0, #22
 8022cc4:	da09      	bge.n	8022cda <scalbnf+0x9a>
 8022cc6:	eddf 7a0e 	vldr	s15, [pc, #56]	@ 8022d00 <scalbnf+0xc0>
 8022cca:	eddf 6a0e 	vldr	s13, [pc, #56]	@ 8022d04 <scalbnf+0xc4>
 8022cce:	ee10 3a10 	vmov	r3, s0
 8022cd2:	eeb0 7a67 	vmov.f32	s14, s15
 8022cd6:	2b00      	cmp	r3, #0
 8022cd8:	e7d9      	b.n	8022c8e <scalbnf+0x4e>
 8022cda:	3019      	adds	r0, #25
 8022cdc:	f023 43ff 	bic.w	r3, r3, #2139095040	@ 0x7f800000
 8022ce0:	ea43 53c0 	orr.w	r3, r3, r0, lsl #23
 8022ce4:	ed9f 0a08 	vldr	s0, [pc, #32]	@ 8022d08 <scalbnf+0xc8>
 8022ce8:	ee07 3a90 	vmov	s15, r3
 8022cec:	e7d7      	b.n	8022c9e <scalbnf+0x5e>
 8022cee:	bf00      	nop
 8022cf0:	ffff3cb0 	.word	0xffff3cb0
 8022cf4:	4c000000 	.word	0x4c000000
 8022cf8:	7149f2ca 	.word	0x7149f2ca
 8022cfc:	f149f2ca 	.word	0xf149f2ca
 8022d00:	0da24260 	.word	0x0da24260
 8022d04:	8da24260 	.word	0x8da24260
 8022d08:	33000000 	.word	0x33000000

08022d0c <floorf>:
 8022d0c:	ee10 3a10 	vmov	r3, s0
 8022d10:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 8022d14:	3a7f      	subs	r2, #127	@ 0x7f
 8022d16:	2a16      	cmp	r2, #22
 8022d18:	f023 4100 	bic.w	r1, r3, #2147483648	@ 0x80000000
 8022d1c:	dc2b      	bgt.n	8022d76 <floorf+0x6a>
 8022d1e:	2a00      	cmp	r2, #0
 8022d20:	da12      	bge.n	8022d48 <floorf+0x3c>
 8022d22:	eddf 7a19 	vldr	s15, [pc, #100]	@ 8022d88 <floorf+0x7c>
 8022d26:	ee30 0a27 	vadd.f32	s0, s0, s15
 8022d2a:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8022d2e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8022d32:	dd06      	ble.n	8022d42 <floorf+0x36>
 8022d34:	2b00      	cmp	r3, #0
 8022d36:	da24      	bge.n	8022d82 <floorf+0x76>
 8022d38:	2900      	cmp	r1, #0
 8022d3a:	4b14      	ldr	r3, [pc, #80]	@ (8022d8c <floorf+0x80>)
 8022d3c:	bf08      	it	eq
 8022d3e:	f04f 4300 	moveq.w	r3, #2147483648	@ 0x80000000
 8022d42:	ee00 3a10 	vmov	s0, r3
 8022d46:	4770      	bx	lr
 8022d48:	4911      	ldr	r1, [pc, #68]	@ (8022d90 <floorf+0x84>)
 8022d4a:	4111      	asrs	r1, r2
 8022d4c:	420b      	tst	r3, r1
 8022d4e:	d0fa      	beq.n	8022d46 <floorf+0x3a>
 8022d50:	eddf 7a0d 	vldr	s15, [pc, #52]	@ 8022d88 <floorf+0x7c>
 8022d54:	ee30 0a27 	vadd.f32	s0, s0, s15
 8022d58:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8022d5c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8022d60:	ddef      	ble.n	8022d42 <floorf+0x36>
 8022d62:	2b00      	cmp	r3, #0
 8022d64:	bfbe      	ittt	lt
 8022d66:	f44f 0000 	movlt.w	r0, #8388608	@ 0x800000
 8022d6a:	fa40 f202 	asrlt.w	r2, r0, r2
 8022d6e:	189b      	addlt	r3, r3, r2
 8022d70:	ea23 0301 	bic.w	r3, r3, r1
 8022d74:	e7e5      	b.n	8022d42 <floorf+0x36>
 8022d76:	f1b1 4fff 	cmp.w	r1, #2139095040	@ 0x7f800000
 8022d7a:	d3e4      	bcc.n	8022d46 <floorf+0x3a>
 8022d7c:	ee30 0a00 	vadd.f32	s0, s0, s0
 8022d80:	4770      	bx	lr
 8022d82:	2300      	movs	r3, #0
 8022d84:	e7dd      	b.n	8022d42 <floorf+0x36>
 8022d86:	bf00      	nop
 8022d88:	7149f2ca 	.word	0x7149f2ca
 8022d8c:	bf800000 	.word	0xbf800000
 8022d90:	007fffff 	.word	0x007fffff

08022d94 <abort>:
 8022d94:	b508      	push	{r3, lr}
 8022d96:	2006      	movs	r0, #6
 8022d98:	f000 fa3c 	bl	8023214 <raise>
 8022d9c:	2001      	movs	r0, #1
 8022d9e:	f7e0 f96d 	bl	800307c <_exit>
	...

08022da4 <__assert_func>:
 8022da4:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8022da6:	4614      	mov	r4, r2
 8022da8:	461a      	mov	r2, r3
 8022daa:	4b09      	ldr	r3, [pc, #36]	@ (8022dd0 <__assert_func+0x2c>)
 8022dac:	681b      	ldr	r3, [r3, #0]
 8022dae:	4605      	mov	r5, r0
 8022db0:	68d8      	ldr	r0, [r3, #12]
 8022db2:	b14c      	cbz	r4, 8022dc8 <__assert_func+0x24>
 8022db4:	4b07      	ldr	r3, [pc, #28]	@ (8022dd4 <__assert_func+0x30>)
 8022db6:	9100      	str	r1, [sp, #0]
 8022db8:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8022dbc:	4906      	ldr	r1, [pc, #24]	@ (8022dd8 <__assert_func+0x34>)
 8022dbe:	462b      	mov	r3, r5
 8022dc0:	f000 f984 	bl	80230cc <fiprintf>
 8022dc4:	f7ff ffe6 	bl	8022d94 <abort>
 8022dc8:	4b04      	ldr	r3, [pc, #16]	@ (8022ddc <__assert_func+0x38>)
 8022dca:	461c      	mov	r4, r3
 8022dcc:	e7f3      	b.n	8022db6 <__assert_func+0x12>
 8022dce:	bf00      	nop
 8022dd0:	20000220 	.word	0x20000220
 8022dd4:	0802484b 	.word	0x0802484b
 8022dd8:	08024858 	.word	0x08024858
 8022ddc:	08024886 	.word	0x08024886

08022de0 <atexit>:
 8022de0:	2300      	movs	r3, #0
 8022de2:	4601      	mov	r1, r0
 8022de4:	461a      	mov	r2, r3
 8022de6:	4618      	mov	r0, r3
 8022de8:	f000 bac2 	b.w	8023370 <__register_exitproc>

08022dec <malloc>:
 8022dec:	4b02      	ldr	r3, [pc, #8]	@ (8022df8 <malloc+0xc>)
 8022dee:	4601      	mov	r1, r0
 8022df0:	6818      	ldr	r0, [r3, #0]
 8022df2:	f000 b82d 	b.w	8022e50 <_malloc_r>
 8022df6:	bf00      	nop
 8022df8:	20000220 	.word	0x20000220

08022dfc <free>:
 8022dfc:	4b02      	ldr	r3, [pc, #8]	@ (8022e08 <free+0xc>)
 8022dfe:	4601      	mov	r1, r0
 8022e00:	6818      	ldr	r0, [r3, #0]
 8022e02:	f000 bb11 	b.w	8023428 <_free_r>
 8022e06:	bf00      	nop
 8022e08:	20000220 	.word	0x20000220

08022e0c <sbrk_aligned>:
 8022e0c:	b570      	push	{r4, r5, r6, lr}
 8022e0e:	4e0f      	ldr	r6, [pc, #60]	@ (8022e4c <sbrk_aligned+0x40>)
 8022e10:	460c      	mov	r4, r1
 8022e12:	6831      	ldr	r1, [r6, #0]
 8022e14:	4605      	mov	r5, r0
 8022e16:	b911      	cbnz	r1, 8022e1e <sbrk_aligned+0x12>
 8022e18:	f000 fa4c 	bl	80232b4 <_sbrk_r>
 8022e1c:	6030      	str	r0, [r6, #0]
 8022e1e:	4621      	mov	r1, r4
 8022e20:	4628      	mov	r0, r5
 8022e22:	f000 fa47 	bl	80232b4 <_sbrk_r>
 8022e26:	1c43      	adds	r3, r0, #1
 8022e28:	d103      	bne.n	8022e32 <sbrk_aligned+0x26>
 8022e2a:	f04f 34ff 	mov.w	r4, #4294967295
 8022e2e:	4620      	mov	r0, r4
 8022e30:	bd70      	pop	{r4, r5, r6, pc}
 8022e32:	1cc4      	adds	r4, r0, #3
 8022e34:	f024 0403 	bic.w	r4, r4, #3
 8022e38:	42a0      	cmp	r0, r4
 8022e3a:	d0f8      	beq.n	8022e2e <sbrk_aligned+0x22>
 8022e3c:	1a21      	subs	r1, r4, r0
 8022e3e:	4628      	mov	r0, r5
 8022e40:	f000 fa38 	bl	80232b4 <_sbrk_r>
 8022e44:	3001      	adds	r0, #1
 8022e46:	d1f2      	bne.n	8022e2e <sbrk_aligned+0x22>
 8022e48:	e7ef      	b.n	8022e2a <sbrk_aligned+0x1e>
 8022e4a:	bf00      	nop
 8022e4c:	20013e30 	.word	0x20013e30

08022e50 <_malloc_r>:
 8022e50:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8022e54:	1ccd      	adds	r5, r1, #3
 8022e56:	f025 0503 	bic.w	r5, r5, #3
 8022e5a:	3508      	adds	r5, #8
 8022e5c:	2d0c      	cmp	r5, #12
 8022e5e:	bf38      	it	cc
 8022e60:	250c      	movcc	r5, #12
 8022e62:	2d00      	cmp	r5, #0
 8022e64:	4606      	mov	r6, r0
 8022e66:	db01      	blt.n	8022e6c <_malloc_r+0x1c>
 8022e68:	42a9      	cmp	r1, r5
 8022e6a:	d904      	bls.n	8022e76 <_malloc_r+0x26>
 8022e6c:	230c      	movs	r3, #12
 8022e6e:	6033      	str	r3, [r6, #0]
 8022e70:	2000      	movs	r0, #0
 8022e72:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8022e76:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 8022f4c <_malloc_r+0xfc>
 8022e7a:	f000 f869 	bl	8022f50 <__malloc_lock>
 8022e7e:	f8d8 3000 	ldr.w	r3, [r8]
 8022e82:	461c      	mov	r4, r3
 8022e84:	bb44      	cbnz	r4, 8022ed8 <_malloc_r+0x88>
 8022e86:	4629      	mov	r1, r5
 8022e88:	4630      	mov	r0, r6
 8022e8a:	f7ff ffbf 	bl	8022e0c <sbrk_aligned>
 8022e8e:	1c43      	adds	r3, r0, #1
 8022e90:	4604      	mov	r4, r0
 8022e92:	d158      	bne.n	8022f46 <_malloc_r+0xf6>
 8022e94:	f8d8 4000 	ldr.w	r4, [r8]
 8022e98:	4627      	mov	r7, r4
 8022e9a:	2f00      	cmp	r7, #0
 8022e9c:	d143      	bne.n	8022f26 <_malloc_r+0xd6>
 8022e9e:	2c00      	cmp	r4, #0
 8022ea0:	d04b      	beq.n	8022f3a <_malloc_r+0xea>
 8022ea2:	6823      	ldr	r3, [r4, #0]
 8022ea4:	4639      	mov	r1, r7
 8022ea6:	4630      	mov	r0, r6
 8022ea8:	eb04 0903 	add.w	r9, r4, r3
 8022eac:	f000 fa02 	bl	80232b4 <_sbrk_r>
 8022eb0:	4581      	cmp	r9, r0
 8022eb2:	d142      	bne.n	8022f3a <_malloc_r+0xea>
 8022eb4:	6821      	ldr	r1, [r4, #0]
 8022eb6:	1a6d      	subs	r5, r5, r1
 8022eb8:	4629      	mov	r1, r5
 8022eba:	4630      	mov	r0, r6
 8022ebc:	f7ff ffa6 	bl	8022e0c <sbrk_aligned>
 8022ec0:	3001      	adds	r0, #1
 8022ec2:	d03a      	beq.n	8022f3a <_malloc_r+0xea>
 8022ec4:	6823      	ldr	r3, [r4, #0]
 8022ec6:	442b      	add	r3, r5
 8022ec8:	6023      	str	r3, [r4, #0]
 8022eca:	f8d8 3000 	ldr.w	r3, [r8]
 8022ece:	685a      	ldr	r2, [r3, #4]
 8022ed0:	bb62      	cbnz	r2, 8022f2c <_malloc_r+0xdc>
 8022ed2:	f8c8 7000 	str.w	r7, [r8]
 8022ed6:	e00f      	b.n	8022ef8 <_malloc_r+0xa8>
 8022ed8:	6822      	ldr	r2, [r4, #0]
 8022eda:	1b52      	subs	r2, r2, r5
 8022edc:	d420      	bmi.n	8022f20 <_malloc_r+0xd0>
 8022ede:	2a0b      	cmp	r2, #11
 8022ee0:	d917      	bls.n	8022f12 <_malloc_r+0xc2>
 8022ee2:	1961      	adds	r1, r4, r5
 8022ee4:	42a3      	cmp	r3, r4
 8022ee6:	6025      	str	r5, [r4, #0]
 8022ee8:	bf18      	it	ne
 8022eea:	6059      	strne	r1, [r3, #4]
 8022eec:	6863      	ldr	r3, [r4, #4]
 8022eee:	bf08      	it	eq
 8022ef0:	f8c8 1000 	streq.w	r1, [r8]
 8022ef4:	5162      	str	r2, [r4, r5]
 8022ef6:	604b      	str	r3, [r1, #4]
 8022ef8:	4630      	mov	r0, r6
 8022efa:	f000 f82f 	bl	8022f5c <__malloc_unlock>
 8022efe:	f104 000b 	add.w	r0, r4, #11
 8022f02:	1d23      	adds	r3, r4, #4
 8022f04:	f020 0007 	bic.w	r0, r0, #7
 8022f08:	1ac2      	subs	r2, r0, r3
 8022f0a:	bf1c      	itt	ne
 8022f0c:	1a1b      	subne	r3, r3, r0
 8022f0e:	50a3      	strne	r3, [r4, r2]
 8022f10:	e7af      	b.n	8022e72 <_malloc_r+0x22>
 8022f12:	6862      	ldr	r2, [r4, #4]
 8022f14:	42a3      	cmp	r3, r4
 8022f16:	bf0c      	ite	eq
 8022f18:	f8c8 2000 	streq.w	r2, [r8]
 8022f1c:	605a      	strne	r2, [r3, #4]
 8022f1e:	e7eb      	b.n	8022ef8 <_malloc_r+0xa8>
 8022f20:	4623      	mov	r3, r4
 8022f22:	6864      	ldr	r4, [r4, #4]
 8022f24:	e7ae      	b.n	8022e84 <_malloc_r+0x34>
 8022f26:	463c      	mov	r4, r7
 8022f28:	687f      	ldr	r7, [r7, #4]
 8022f2a:	e7b6      	b.n	8022e9a <_malloc_r+0x4a>
 8022f2c:	461a      	mov	r2, r3
 8022f2e:	685b      	ldr	r3, [r3, #4]
 8022f30:	42a3      	cmp	r3, r4
 8022f32:	d1fb      	bne.n	8022f2c <_malloc_r+0xdc>
 8022f34:	2300      	movs	r3, #0
 8022f36:	6053      	str	r3, [r2, #4]
 8022f38:	e7de      	b.n	8022ef8 <_malloc_r+0xa8>
 8022f3a:	230c      	movs	r3, #12
 8022f3c:	6033      	str	r3, [r6, #0]
 8022f3e:	4630      	mov	r0, r6
 8022f40:	f000 f80c 	bl	8022f5c <__malloc_unlock>
 8022f44:	e794      	b.n	8022e70 <_malloc_r+0x20>
 8022f46:	6005      	str	r5, [r0, #0]
 8022f48:	e7d6      	b.n	8022ef8 <_malloc_r+0xa8>
 8022f4a:	bf00      	nop
 8022f4c:	20013e34 	.word	0x20013e34

08022f50 <__malloc_lock>:
 8022f50:	4801      	ldr	r0, [pc, #4]	@ (8022f58 <__malloc_lock+0x8>)
 8022f52:	f000 b9fc 	b.w	802334e <__retarget_lock_acquire_recursive>
 8022f56:	bf00      	nop
 8022f58:	20013f78 	.word	0x20013f78

08022f5c <__malloc_unlock>:
 8022f5c:	4801      	ldr	r0, [pc, #4]	@ (8022f64 <__malloc_unlock+0x8>)
 8022f5e:	f000 b9f7 	b.w	8023350 <__retarget_lock_release_recursive>
 8022f62:	bf00      	nop
 8022f64:	20013f78 	.word	0x20013f78

08022f68 <__cxa_atexit>:
 8022f68:	b510      	push	{r4, lr}
 8022f6a:	4604      	mov	r4, r0
 8022f6c:	4804      	ldr	r0, [pc, #16]	@ (8022f80 <__cxa_atexit+0x18>)
 8022f6e:	4613      	mov	r3, r2
 8022f70:	b120      	cbz	r0, 8022f7c <__cxa_atexit+0x14>
 8022f72:	460a      	mov	r2, r1
 8022f74:	2002      	movs	r0, #2
 8022f76:	4621      	mov	r1, r4
 8022f78:	f000 f9fa 	bl	8023370 <__register_exitproc>
 8022f7c:	bd10      	pop	{r4, pc}
 8022f7e:	bf00      	nop
 8022f80:	08023371 	.word	0x08023371

08022f84 <std>:
 8022f84:	2300      	movs	r3, #0
 8022f86:	b510      	push	{r4, lr}
 8022f88:	4604      	mov	r4, r0
 8022f8a:	e9c0 3300 	strd	r3, r3, [r0]
 8022f8e:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8022f92:	6083      	str	r3, [r0, #8]
 8022f94:	8181      	strh	r1, [r0, #12]
 8022f96:	6643      	str	r3, [r0, #100]	@ 0x64
 8022f98:	81c2      	strh	r2, [r0, #14]
 8022f9a:	6183      	str	r3, [r0, #24]
 8022f9c:	4619      	mov	r1, r3
 8022f9e:	2208      	movs	r2, #8
 8022fa0:	305c      	adds	r0, #92	@ 0x5c
 8022fa2:	f000 f906 	bl	80231b2 <memset>
 8022fa6:	4b0d      	ldr	r3, [pc, #52]	@ (8022fdc <std+0x58>)
 8022fa8:	6263      	str	r3, [r4, #36]	@ 0x24
 8022faa:	4b0d      	ldr	r3, [pc, #52]	@ (8022fe0 <std+0x5c>)
 8022fac:	62a3      	str	r3, [r4, #40]	@ 0x28
 8022fae:	4b0d      	ldr	r3, [pc, #52]	@ (8022fe4 <std+0x60>)
 8022fb0:	62e3      	str	r3, [r4, #44]	@ 0x2c
 8022fb2:	4b0d      	ldr	r3, [pc, #52]	@ (8022fe8 <std+0x64>)
 8022fb4:	6323      	str	r3, [r4, #48]	@ 0x30
 8022fb6:	4b0d      	ldr	r3, [pc, #52]	@ (8022fec <std+0x68>)
 8022fb8:	6224      	str	r4, [r4, #32]
 8022fba:	429c      	cmp	r4, r3
 8022fbc:	d006      	beq.n	8022fcc <std+0x48>
 8022fbe:	f103 0268 	add.w	r2, r3, #104	@ 0x68
 8022fc2:	4294      	cmp	r4, r2
 8022fc4:	d002      	beq.n	8022fcc <std+0x48>
 8022fc6:	33d0      	adds	r3, #208	@ 0xd0
 8022fc8:	429c      	cmp	r4, r3
 8022fca:	d105      	bne.n	8022fd8 <std+0x54>
 8022fcc:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 8022fd0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8022fd4:	f000 b9ba 	b.w	802334c <__retarget_lock_init_recursive>
 8022fd8:	bd10      	pop	{r4, pc}
 8022fda:	bf00      	nop
 8022fdc:	0802312d 	.word	0x0802312d
 8022fe0:	0802314f 	.word	0x0802314f
 8022fe4:	08023187 	.word	0x08023187
 8022fe8:	080231ab 	.word	0x080231ab
 8022fec:	20013e38 	.word	0x20013e38

08022ff0 <stdio_exit_handler>:
 8022ff0:	4a02      	ldr	r2, [pc, #8]	@ (8022ffc <stdio_exit_handler+0xc>)
 8022ff2:	4903      	ldr	r1, [pc, #12]	@ (8023000 <stdio_exit_handler+0x10>)
 8022ff4:	4803      	ldr	r0, [pc, #12]	@ (8023004 <stdio_exit_handler+0x14>)
 8022ff6:	f000 b87b 	b.w	80230f0 <_fwalk_sglue>
 8022ffa:	bf00      	nop
 8022ffc:	20000214 	.word	0x20000214
 8023000:	08023b61 	.word	0x08023b61
 8023004:	20000224 	.word	0x20000224

08023008 <cleanup_stdio>:
 8023008:	6841      	ldr	r1, [r0, #4]
 802300a:	4b0c      	ldr	r3, [pc, #48]	@ (802303c <cleanup_stdio+0x34>)
 802300c:	4299      	cmp	r1, r3
 802300e:	b510      	push	{r4, lr}
 8023010:	4604      	mov	r4, r0
 8023012:	d001      	beq.n	8023018 <cleanup_stdio+0x10>
 8023014:	f000 fda4 	bl	8023b60 <_fflush_r>
 8023018:	68a1      	ldr	r1, [r4, #8]
 802301a:	4b09      	ldr	r3, [pc, #36]	@ (8023040 <cleanup_stdio+0x38>)
 802301c:	4299      	cmp	r1, r3
 802301e:	d002      	beq.n	8023026 <cleanup_stdio+0x1e>
 8023020:	4620      	mov	r0, r4
 8023022:	f000 fd9d 	bl	8023b60 <_fflush_r>
 8023026:	68e1      	ldr	r1, [r4, #12]
 8023028:	4b06      	ldr	r3, [pc, #24]	@ (8023044 <cleanup_stdio+0x3c>)
 802302a:	4299      	cmp	r1, r3
 802302c:	d004      	beq.n	8023038 <cleanup_stdio+0x30>
 802302e:	4620      	mov	r0, r4
 8023030:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8023034:	f000 bd94 	b.w	8023b60 <_fflush_r>
 8023038:	bd10      	pop	{r4, pc}
 802303a:	bf00      	nop
 802303c:	20013e38 	.word	0x20013e38
 8023040:	20013ea0 	.word	0x20013ea0
 8023044:	20013f08 	.word	0x20013f08

08023048 <global_stdio_init.part.0>:
 8023048:	b510      	push	{r4, lr}
 802304a:	4b0b      	ldr	r3, [pc, #44]	@ (8023078 <global_stdio_init.part.0+0x30>)
 802304c:	4c0b      	ldr	r4, [pc, #44]	@ (802307c <global_stdio_init.part.0+0x34>)
 802304e:	4a0c      	ldr	r2, [pc, #48]	@ (8023080 <global_stdio_init.part.0+0x38>)
 8023050:	601a      	str	r2, [r3, #0]
 8023052:	4620      	mov	r0, r4
 8023054:	2200      	movs	r2, #0
 8023056:	2104      	movs	r1, #4
 8023058:	f7ff ff94 	bl	8022f84 <std>
 802305c:	f104 0068 	add.w	r0, r4, #104	@ 0x68
 8023060:	2201      	movs	r2, #1
 8023062:	2109      	movs	r1, #9
 8023064:	f7ff ff8e 	bl	8022f84 <std>
 8023068:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
 802306c:	2202      	movs	r2, #2
 802306e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8023072:	2112      	movs	r1, #18
 8023074:	f7ff bf86 	b.w	8022f84 <std>
 8023078:	20013f70 	.word	0x20013f70
 802307c:	20013e38 	.word	0x20013e38
 8023080:	08022ff1 	.word	0x08022ff1

08023084 <__sfp_lock_acquire>:
 8023084:	4801      	ldr	r0, [pc, #4]	@ (802308c <__sfp_lock_acquire+0x8>)
 8023086:	f000 b962 	b.w	802334e <__retarget_lock_acquire_recursive>
 802308a:	bf00      	nop
 802308c:	20013f7a 	.word	0x20013f7a

08023090 <__sfp_lock_release>:
 8023090:	4801      	ldr	r0, [pc, #4]	@ (8023098 <__sfp_lock_release+0x8>)
 8023092:	f000 b95d 	b.w	8023350 <__retarget_lock_release_recursive>
 8023096:	bf00      	nop
 8023098:	20013f7a 	.word	0x20013f7a

0802309c <__sinit>:
 802309c:	b510      	push	{r4, lr}
 802309e:	4604      	mov	r4, r0
 80230a0:	f7ff fff0 	bl	8023084 <__sfp_lock_acquire>
 80230a4:	6a23      	ldr	r3, [r4, #32]
 80230a6:	b11b      	cbz	r3, 80230b0 <__sinit+0x14>
 80230a8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80230ac:	f7ff bff0 	b.w	8023090 <__sfp_lock_release>
 80230b0:	4b04      	ldr	r3, [pc, #16]	@ (80230c4 <__sinit+0x28>)
 80230b2:	6223      	str	r3, [r4, #32]
 80230b4:	4b04      	ldr	r3, [pc, #16]	@ (80230c8 <__sinit+0x2c>)
 80230b6:	681b      	ldr	r3, [r3, #0]
 80230b8:	2b00      	cmp	r3, #0
 80230ba:	d1f5      	bne.n	80230a8 <__sinit+0xc>
 80230bc:	f7ff ffc4 	bl	8023048 <global_stdio_init.part.0>
 80230c0:	e7f2      	b.n	80230a8 <__sinit+0xc>
 80230c2:	bf00      	nop
 80230c4:	08023009 	.word	0x08023009
 80230c8:	20013f70 	.word	0x20013f70

080230cc <fiprintf>:
 80230cc:	b40e      	push	{r1, r2, r3}
 80230ce:	b503      	push	{r0, r1, lr}
 80230d0:	4601      	mov	r1, r0
 80230d2:	ab03      	add	r3, sp, #12
 80230d4:	4805      	ldr	r0, [pc, #20]	@ (80230ec <fiprintf+0x20>)
 80230d6:	f853 2b04 	ldr.w	r2, [r3], #4
 80230da:	6800      	ldr	r0, [r0, #0]
 80230dc:	9301      	str	r3, [sp, #4]
 80230de:	f000 fa17 	bl	8023510 <_vfiprintf_r>
 80230e2:	b002      	add	sp, #8
 80230e4:	f85d eb04 	ldr.w	lr, [sp], #4
 80230e8:	b003      	add	sp, #12
 80230ea:	4770      	bx	lr
 80230ec:	20000220 	.word	0x20000220

080230f0 <_fwalk_sglue>:
 80230f0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80230f4:	4607      	mov	r7, r0
 80230f6:	4688      	mov	r8, r1
 80230f8:	4614      	mov	r4, r2
 80230fa:	2600      	movs	r6, #0
 80230fc:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8023100:	f1b9 0901 	subs.w	r9, r9, #1
 8023104:	d505      	bpl.n	8023112 <_fwalk_sglue+0x22>
 8023106:	6824      	ldr	r4, [r4, #0]
 8023108:	2c00      	cmp	r4, #0
 802310a:	d1f7      	bne.n	80230fc <_fwalk_sglue+0xc>
 802310c:	4630      	mov	r0, r6
 802310e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8023112:	89ab      	ldrh	r3, [r5, #12]
 8023114:	2b01      	cmp	r3, #1
 8023116:	d907      	bls.n	8023128 <_fwalk_sglue+0x38>
 8023118:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 802311c:	3301      	adds	r3, #1
 802311e:	d003      	beq.n	8023128 <_fwalk_sglue+0x38>
 8023120:	4629      	mov	r1, r5
 8023122:	4638      	mov	r0, r7
 8023124:	47c0      	blx	r8
 8023126:	4306      	orrs	r6, r0
 8023128:	3568      	adds	r5, #104	@ 0x68
 802312a:	e7e9      	b.n	8023100 <_fwalk_sglue+0x10>

0802312c <__sread>:
 802312c:	b510      	push	{r4, lr}
 802312e:	460c      	mov	r4, r1
 8023130:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8023134:	f000 f898 	bl	8023268 <_read_r>
 8023138:	2800      	cmp	r0, #0
 802313a:	bfab      	itete	ge
 802313c:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
 802313e:	89a3      	ldrhlt	r3, [r4, #12]
 8023140:	181b      	addge	r3, r3, r0
 8023142:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
 8023146:	bfac      	ite	ge
 8023148:	6563      	strge	r3, [r4, #84]	@ 0x54
 802314a:	81a3      	strhlt	r3, [r4, #12]
 802314c:	bd10      	pop	{r4, pc}

0802314e <__swrite>:
 802314e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8023152:	461f      	mov	r7, r3
 8023154:	898b      	ldrh	r3, [r1, #12]
 8023156:	05db      	lsls	r3, r3, #23
 8023158:	4605      	mov	r5, r0
 802315a:	460c      	mov	r4, r1
 802315c:	4616      	mov	r6, r2
 802315e:	d505      	bpl.n	802316c <__swrite+0x1e>
 8023160:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8023164:	2302      	movs	r3, #2
 8023166:	2200      	movs	r2, #0
 8023168:	f000 f86c 	bl	8023244 <_lseek_r>
 802316c:	89a3      	ldrh	r3, [r4, #12]
 802316e:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8023172:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 8023176:	81a3      	strh	r3, [r4, #12]
 8023178:	4632      	mov	r2, r6
 802317a:	463b      	mov	r3, r7
 802317c:	4628      	mov	r0, r5
 802317e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8023182:	f000 b8a7 	b.w	80232d4 <_write_r>

08023186 <__sseek>:
 8023186:	b510      	push	{r4, lr}
 8023188:	460c      	mov	r4, r1
 802318a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802318e:	f000 f859 	bl	8023244 <_lseek_r>
 8023192:	1c43      	adds	r3, r0, #1
 8023194:	89a3      	ldrh	r3, [r4, #12]
 8023196:	bf15      	itete	ne
 8023198:	6560      	strne	r0, [r4, #84]	@ 0x54
 802319a:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
 802319e:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 80231a2:	81a3      	strheq	r3, [r4, #12]
 80231a4:	bf18      	it	ne
 80231a6:	81a3      	strhne	r3, [r4, #12]
 80231a8:	bd10      	pop	{r4, pc}

080231aa <__sclose>:
 80231aa:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80231ae:	f000 b839 	b.w	8023224 <_close_r>

080231b2 <memset>:
 80231b2:	4402      	add	r2, r0
 80231b4:	4603      	mov	r3, r0
 80231b6:	4293      	cmp	r3, r2
 80231b8:	d100      	bne.n	80231bc <memset+0xa>
 80231ba:	4770      	bx	lr
 80231bc:	f803 1b01 	strb.w	r1, [r3], #1
 80231c0:	e7f9      	b.n	80231b6 <memset+0x4>

080231c2 <_raise_r>:
 80231c2:	291f      	cmp	r1, #31
 80231c4:	b538      	push	{r3, r4, r5, lr}
 80231c6:	4605      	mov	r5, r0
 80231c8:	460c      	mov	r4, r1
 80231ca:	d904      	bls.n	80231d6 <_raise_r+0x14>
 80231cc:	2316      	movs	r3, #22
 80231ce:	6003      	str	r3, [r0, #0]
 80231d0:	f04f 30ff 	mov.w	r0, #4294967295
 80231d4:	bd38      	pop	{r3, r4, r5, pc}
 80231d6:	6bc2      	ldr	r2, [r0, #60]	@ 0x3c
 80231d8:	b112      	cbz	r2, 80231e0 <_raise_r+0x1e>
 80231da:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 80231de:	b94b      	cbnz	r3, 80231f4 <_raise_r+0x32>
 80231e0:	4628      	mov	r0, r5
 80231e2:	f000 f865 	bl	80232b0 <_getpid_r>
 80231e6:	4622      	mov	r2, r4
 80231e8:	4601      	mov	r1, r0
 80231ea:	4628      	mov	r0, r5
 80231ec:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80231f0:	f000 b84c 	b.w	802328c <_kill_r>
 80231f4:	2b01      	cmp	r3, #1
 80231f6:	d00a      	beq.n	802320e <_raise_r+0x4c>
 80231f8:	1c59      	adds	r1, r3, #1
 80231fa:	d103      	bne.n	8023204 <_raise_r+0x42>
 80231fc:	2316      	movs	r3, #22
 80231fe:	6003      	str	r3, [r0, #0]
 8023200:	2001      	movs	r0, #1
 8023202:	e7e7      	b.n	80231d4 <_raise_r+0x12>
 8023204:	2100      	movs	r1, #0
 8023206:	f842 1024 	str.w	r1, [r2, r4, lsl #2]
 802320a:	4620      	mov	r0, r4
 802320c:	4798      	blx	r3
 802320e:	2000      	movs	r0, #0
 8023210:	e7e0      	b.n	80231d4 <_raise_r+0x12>
	...

08023214 <raise>:
 8023214:	4b02      	ldr	r3, [pc, #8]	@ (8023220 <raise+0xc>)
 8023216:	4601      	mov	r1, r0
 8023218:	6818      	ldr	r0, [r3, #0]
 802321a:	f7ff bfd2 	b.w	80231c2 <_raise_r>
 802321e:	bf00      	nop
 8023220:	20000220 	.word	0x20000220

08023224 <_close_r>:
 8023224:	b538      	push	{r3, r4, r5, lr}
 8023226:	4d06      	ldr	r5, [pc, #24]	@ (8023240 <_close_r+0x1c>)
 8023228:	2300      	movs	r3, #0
 802322a:	4604      	mov	r4, r0
 802322c:	4608      	mov	r0, r1
 802322e:	602b      	str	r3, [r5, #0]
 8023230:	f7df ff46 	bl	80030c0 <_close>
 8023234:	1c43      	adds	r3, r0, #1
 8023236:	d102      	bne.n	802323e <_close_r+0x1a>
 8023238:	682b      	ldr	r3, [r5, #0]
 802323a:	b103      	cbz	r3, 802323e <_close_r+0x1a>
 802323c:	6023      	str	r3, [r4, #0]
 802323e:	bd38      	pop	{r3, r4, r5, pc}
 8023240:	20013f74 	.word	0x20013f74

08023244 <_lseek_r>:
 8023244:	b538      	push	{r3, r4, r5, lr}
 8023246:	4d07      	ldr	r5, [pc, #28]	@ (8023264 <_lseek_r+0x20>)
 8023248:	4604      	mov	r4, r0
 802324a:	4608      	mov	r0, r1
 802324c:	4611      	mov	r1, r2
 802324e:	2200      	movs	r2, #0
 8023250:	602a      	str	r2, [r5, #0]
 8023252:	461a      	mov	r2, r3
 8023254:	f7df ff3e 	bl	80030d4 <_lseek>
 8023258:	1c43      	adds	r3, r0, #1
 802325a:	d102      	bne.n	8023262 <_lseek_r+0x1e>
 802325c:	682b      	ldr	r3, [r5, #0]
 802325e:	b103      	cbz	r3, 8023262 <_lseek_r+0x1e>
 8023260:	6023      	str	r3, [r4, #0]
 8023262:	bd38      	pop	{r3, r4, r5, pc}
 8023264:	20013f74 	.word	0x20013f74

08023268 <_read_r>:
 8023268:	b538      	push	{r3, r4, r5, lr}
 802326a:	4d07      	ldr	r5, [pc, #28]	@ (8023288 <_read_r+0x20>)
 802326c:	4604      	mov	r4, r0
 802326e:	4608      	mov	r0, r1
 8023270:	4611      	mov	r1, r2
 8023272:	2200      	movs	r2, #0
 8023274:	602a      	str	r2, [r5, #0]
 8023276:	461a      	mov	r2, r3
 8023278:	f7df ff06 	bl	8003088 <_read>
 802327c:	1c43      	adds	r3, r0, #1
 802327e:	d102      	bne.n	8023286 <_read_r+0x1e>
 8023280:	682b      	ldr	r3, [r5, #0]
 8023282:	b103      	cbz	r3, 8023286 <_read_r+0x1e>
 8023284:	6023      	str	r3, [r4, #0]
 8023286:	bd38      	pop	{r3, r4, r5, pc}
 8023288:	20013f74 	.word	0x20013f74

0802328c <_kill_r>:
 802328c:	b538      	push	{r3, r4, r5, lr}
 802328e:	4d07      	ldr	r5, [pc, #28]	@ (80232ac <_kill_r+0x20>)
 8023290:	2300      	movs	r3, #0
 8023292:	4604      	mov	r4, r0
 8023294:	4608      	mov	r0, r1
 8023296:	4611      	mov	r1, r2
 8023298:	602b      	str	r3, [r5, #0]
 802329a:	f7df fee7 	bl	800306c <_kill>
 802329e:	1c43      	adds	r3, r0, #1
 80232a0:	d102      	bne.n	80232a8 <_kill_r+0x1c>
 80232a2:	682b      	ldr	r3, [r5, #0]
 80232a4:	b103      	cbz	r3, 80232a8 <_kill_r+0x1c>
 80232a6:	6023      	str	r3, [r4, #0]
 80232a8:	bd38      	pop	{r3, r4, r5, pc}
 80232aa:	bf00      	nop
 80232ac:	20013f74 	.word	0x20013f74

080232b0 <_getpid_r>:
 80232b0:	f7df beda 	b.w	8003068 <_getpid>

080232b4 <_sbrk_r>:
 80232b4:	b538      	push	{r3, r4, r5, lr}
 80232b6:	4d06      	ldr	r5, [pc, #24]	@ (80232d0 <_sbrk_r+0x1c>)
 80232b8:	2300      	movs	r3, #0
 80232ba:	4604      	mov	r4, r0
 80232bc:	4608      	mov	r0, r1
 80232be:	602b      	str	r3, [r5, #0]
 80232c0:	f7df ff0a 	bl	80030d8 <_sbrk>
 80232c4:	1c43      	adds	r3, r0, #1
 80232c6:	d102      	bne.n	80232ce <_sbrk_r+0x1a>
 80232c8:	682b      	ldr	r3, [r5, #0]
 80232ca:	b103      	cbz	r3, 80232ce <_sbrk_r+0x1a>
 80232cc:	6023      	str	r3, [r4, #0]
 80232ce:	bd38      	pop	{r3, r4, r5, pc}
 80232d0:	20013f74 	.word	0x20013f74

080232d4 <_write_r>:
 80232d4:	b538      	push	{r3, r4, r5, lr}
 80232d6:	4d07      	ldr	r5, [pc, #28]	@ (80232f4 <_write_r+0x20>)
 80232d8:	4604      	mov	r4, r0
 80232da:	4608      	mov	r0, r1
 80232dc:	4611      	mov	r1, r2
 80232de:	2200      	movs	r2, #0
 80232e0:	602a      	str	r2, [r5, #0]
 80232e2:	461a      	mov	r2, r3
 80232e4:	f7df fede 	bl	80030a4 <_write>
 80232e8:	1c43      	adds	r3, r0, #1
 80232ea:	d102      	bne.n	80232f2 <_write_r+0x1e>
 80232ec:	682b      	ldr	r3, [r5, #0]
 80232ee:	b103      	cbz	r3, 80232f2 <_write_r+0x1e>
 80232f0:	6023      	str	r3, [r4, #0]
 80232f2:	bd38      	pop	{r3, r4, r5, pc}
 80232f4:	20013f74 	.word	0x20013f74

080232f8 <__errno>:
 80232f8:	4b01      	ldr	r3, [pc, #4]	@ (8023300 <__errno+0x8>)
 80232fa:	6818      	ldr	r0, [r3, #0]
 80232fc:	4770      	bx	lr
 80232fe:	bf00      	nop
 8023300:	20000220 	.word	0x20000220

08023304 <__libc_init_array>:
 8023304:	b570      	push	{r4, r5, r6, lr}
 8023306:	4d0d      	ldr	r5, [pc, #52]	@ (802333c <__libc_init_array+0x38>)
 8023308:	4c0d      	ldr	r4, [pc, #52]	@ (8023340 <__libc_init_array+0x3c>)
 802330a:	1b64      	subs	r4, r4, r5
 802330c:	10a4      	asrs	r4, r4, #2
 802330e:	2600      	movs	r6, #0
 8023310:	42a6      	cmp	r6, r4
 8023312:	d109      	bne.n	8023328 <__libc_init_array+0x24>
 8023314:	4d0b      	ldr	r5, [pc, #44]	@ (8023344 <__libc_init_array+0x40>)
 8023316:	4c0c      	ldr	r4, [pc, #48]	@ (8023348 <__libc_init_array+0x44>)
 8023318:	f000 fd62 	bl	8023de0 <_init>
 802331c:	1b64      	subs	r4, r4, r5
 802331e:	10a4      	asrs	r4, r4, #2
 8023320:	2600      	movs	r6, #0
 8023322:	42a6      	cmp	r6, r4
 8023324:	d105      	bne.n	8023332 <__libc_init_array+0x2e>
 8023326:	bd70      	pop	{r4, r5, r6, pc}
 8023328:	f855 3b04 	ldr.w	r3, [r5], #4
 802332c:	4798      	blx	r3
 802332e:	3601      	adds	r6, #1
 8023330:	e7ee      	b.n	8023310 <__libc_init_array+0xc>
 8023332:	f855 3b04 	ldr.w	r3, [r5], #4
 8023336:	4798      	blx	r3
 8023338:	3601      	adds	r6, #1
 802333a:	e7f2      	b.n	8023322 <__libc_init_array+0x1e>
 802333c:	08025c5c 	.word	0x08025c5c
 8023340:	08025c5c 	.word	0x08025c5c
 8023344:	08025c5c 	.word	0x08025c5c
 8023348:	08025c70 	.word	0x08025c70

0802334c <__retarget_lock_init_recursive>:
 802334c:	4770      	bx	lr

0802334e <__retarget_lock_acquire_recursive>:
 802334e:	4770      	bx	lr

08023350 <__retarget_lock_release_recursive>:
 8023350:	4770      	bx	lr

08023352 <memcpy>:
 8023352:	440a      	add	r2, r1
 8023354:	4291      	cmp	r1, r2
 8023356:	f100 33ff 	add.w	r3, r0, #4294967295
 802335a:	d100      	bne.n	802335e <memcpy+0xc>
 802335c:	4770      	bx	lr
 802335e:	b510      	push	{r4, lr}
 8023360:	f811 4b01 	ldrb.w	r4, [r1], #1
 8023364:	f803 4f01 	strb.w	r4, [r3, #1]!
 8023368:	4291      	cmp	r1, r2
 802336a:	d1f9      	bne.n	8023360 <memcpy+0xe>
 802336c:	bd10      	pop	{r4, pc}
	...

08023370 <__register_exitproc>:
 8023370:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8023374:	4d27      	ldr	r5, [pc, #156]	@ (8023414 <__register_exitproc+0xa4>)
 8023376:	4607      	mov	r7, r0
 8023378:	6828      	ldr	r0, [r5, #0]
 802337a:	4691      	mov	r9, r2
 802337c:	460e      	mov	r6, r1
 802337e:	4698      	mov	r8, r3
 8023380:	f7ff ffe5 	bl	802334e <__retarget_lock_acquire_recursive>
 8023384:	4a24      	ldr	r2, [pc, #144]	@ (8023418 <__register_exitproc+0xa8>)
 8023386:	6814      	ldr	r4, [r2, #0]
 8023388:	b93c      	cbnz	r4, 802339a <__register_exitproc+0x2a>
 802338a:	4b24      	ldr	r3, [pc, #144]	@ (802341c <__register_exitproc+0xac>)
 802338c:	6013      	str	r3, [r2, #0]
 802338e:	4a24      	ldr	r2, [pc, #144]	@ (8023420 <__register_exitproc+0xb0>)
 8023390:	b112      	cbz	r2, 8023398 <__register_exitproc+0x28>
 8023392:	6812      	ldr	r2, [r2, #0]
 8023394:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
 8023398:	4c20      	ldr	r4, [pc, #128]	@ (802341c <__register_exitproc+0xac>)
 802339a:	6863      	ldr	r3, [r4, #4]
 802339c:	2b1f      	cmp	r3, #31
 802339e:	dd06      	ble.n	80233ae <__register_exitproc+0x3e>
 80233a0:	6828      	ldr	r0, [r5, #0]
 80233a2:	f7ff ffd5 	bl	8023350 <__retarget_lock_release_recursive>
 80233a6:	f04f 30ff 	mov.w	r0, #4294967295
 80233aa:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80233ae:	b32f      	cbz	r7, 80233fc <__register_exitproc+0x8c>
 80233b0:	f8d4 0088 	ldr.w	r0, [r4, #136]	@ 0x88
 80233b4:	b968      	cbnz	r0, 80233d2 <__register_exitproc+0x62>
 80233b6:	4b1b      	ldr	r3, [pc, #108]	@ (8023424 <__register_exitproc+0xb4>)
 80233b8:	2b00      	cmp	r3, #0
 80233ba:	d0f1      	beq.n	80233a0 <__register_exitproc+0x30>
 80233bc:	f44f 7084 	mov.w	r0, #264	@ 0x108
 80233c0:	f7ff fd14 	bl	8022dec <malloc>
 80233c4:	2800      	cmp	r0, #0
 80233c6:	d0eb      	beq.n	80233a0 <__register_exitproc+0x30>
 80233c8:	2300      	movs	r3, #0
 80233ca:	e9c0 3340 	strd	r3, r3, [r0, #256]	@ 0x100
 80233ce:	f8c4 0088 	str.w	r0, [r4, #136]	@ 0x88
 80233d2:	6863      	ldr	r3, [r4, #4]
 80233d4:	f840 9023 	str.w	r9, [r0, r3, lsl #2]
 80233d8:	2201      	movs	r2, #1
 80233da:	409a      	lsls	r2, r3
 80233dc:	eb00 0183 	add.w	r1, r0, r3, lsl #2
 80233e0:	f8d0 3100 	ldr.w	r3, [r0, #256]	@ 0x100
 80233e4:	4313      	orrs	r3, r2
 80233e6:	f8c0 3100 	str.w	r3, [r0, #256]	@ 0x100
 80233ea:	2f02      	cmp	r7, #2
 80233ec:	f8c1 8080 	str.w	r8, [r1, #128]	@ 0x80
 80233f0:	bf02      	ittt	eq
 80233f2:	f8d0 3104 	ldreq.w	r3, [r0, #260]	@ 0x104
 80233f6:	4313      	orreq	r3, r2
 80233f8:	f8c0 3104 	streq.w	r3, [r0, #260]	@ 0x104
 80233fc:	6863      	ldr	r3, [r4, #4]
 80233fe:	6828      	ldr	r0, [r5, #0]
 8023400:	1c5a      	adds	r2, r3, #1
 8023402:	3302      	adds	r3, #2
 8023404:	6062      	str	r2, [r4, #4]
 8023406:	f844 6023 	str.w	r6, [r4, r3, lsl #2]
 802340a:	f7ff ffa1 	bl	8023350 <__retarget_lock_release_recursive>
 802340e:	2000      	movs	r0, #0
 8023410:	e7cb      	b.n	80233aa <__register_exitproc+0x3a>
 8023412:	bf00      	nop
 8023414:	20000270 	.word	0x20000270
 8023418:	20014008 	.word	0x20014008
 802341c:	20013f7c 	.word	0x20013f7c
 8023420:	08025a80 	.word	0x08025a80
 8023424:	08022ded 	.word	0x08022ded

08023428 <_free_r>:
 8023428:	b538      	push	{r3, r4, r5, lr}
 802342a:	4605      	mov	r5, r0
 802342c:	2900      	cmp	r1, #0
 802342e:	d041      	beq.n	80234b4 <_free_r+0x8c>
 8023430:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8023434:	1f0c      	subs	r4, r1, #4
 8023436:	2b00      	cmp	r3, #0
 8023438:	bfb8      	it	lt
 802343a:	18e4      	addlt	r4, r4, r3
 802343c:	f7ff fd88 	bl	8022f50 <__malloc_lock>
 8023440:	4a1d      	ldr	r2, [pc, #116]	@ (80234b8 <_free_r+0x90>)
 8023442:	6813      	ldr	r3, [r2, #0]
 8023444:	b933      	cbnz	r3, 8023454 <_free_r+0x2c>
 8023446:	6063      	str	r3, [r4, #4]
 8023448:	6014      	str	r4, [r2, #0]
 802344a:	4628      	mov	r0, r5
 802344c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8023450:	f7ff bd84 	b.w	8022f5c <__malloc_unlock>
 8023454:	42a3      	cmp	r3, r4
 8023456:	d908      	bls.n	802346a <_free_r+0x42>
 8023458:	6820      	ldr	r0, [r4, #0]
 802345a:	1821      	adds	r1, r4, r0
 802345c:	428b      	cmp	r3, r1
 802345e:	bf01      	itttt	eq
 8023460:	6819      	ldreq	r1, [r3, #0]
 8023462:	685b      	ldreq	r3, [r3, #4]
 8023464:	1809      	addeq	r1, r1, r0
 8023466:	6021      	streq	r1, [r4, #0]
 8023468:	e7ed      	b.n	8023446 <_free_r+0x1e>
 802346a:	461a      	mov	r2, r3
 802346c:	685b      	ldr	r3, [r3, #4]
 802346e:	b10b      	cbz	r3, 8023474 <_free_r+0x4c>
 8023470:	42a3      	cmp	r3, r4
 8023472:	d9fa      	bls.n	802346a <_free_r+0x42>
 8023474:	6811      	ldr	r1, [r2, #0]
 8023476:	1850      	adds	r0, r2, r1
 8023478:	42a0      	cmp	r0, r4
 802347a:	d10b      	bne.n	8023494 <_free_r+0x6c>
 802347c:	6820      	ldr	r0, [r4, #0]
 802347e:	4401      	add	r1, r0
 8023480:	1850      	adds	r0, r2, r1
 8023482:	4283      	cmp	r3, r0
 8023484:	6011      	str	r1, [r2, #0]
 8023486:	d1e0      	bne.n	802344a <_free_r+0x22>
 8023488:	6818      	ldr	r0, [r3, #0]
 802348a:	685b      	ldr	r3, [r3, #4]
 802348c:	6053      	str	r3, [r2, #4]
 802348e:	4408      	add	r0, r1
 8023490:	6010      	str	r0, [r2, #0]
 8023492:	e7da      	b.n	802344a <_free_r+0x22>
 8023494:	d902      	bls.n	802349c <_free_r+0x74>
 8023496:	230c      	movs	r3, #12
 8023498:	602b      	str	r3, [r5, #0]
 802349a:	e7d6      	b.n	802344a <_free_r+0x22>
 802349c:	6820      	ldr	r0, [r4, #0]
 802349e:	1821      	adds	r1, r4, r0
 80234a0:	428b      	cmp	r3, r1
 80234a2:	bf04      	itt	eq
 80234a4:	6819      	ldreq	r1, [r3, #0]
 80234a6:	685b      	ldreq	r3, [r3, #4]
 80234a8:	6063      	str	r3, [r4, #4]
 80234aa:	bf04      	itt	eq
 80234ac:	1809      	addeq	r1, r1, r0
 80234ae:	6021      	streq	r1, [r4, #0]
 80234b0:	6054      	str	r4, [r2, #4]
 80234b2:	e7ca      	b.n	802344a <_free_r+0x22>
 80234b4:	bd38      	pop	{r3, r4, r5, pc}
 80234b6:	bf00      	nop
 80234b8:	20013e34 	.word	0x20013e34

080234bc <__sfputc_r>:
 80234bc:	6893      	ldr	r3, [r2, #8]
 80234be:	3b01      	subs	r3, #1
 80234c0:	2b00      	cmp	r3, #0
 80234c2:	b410      	push	{r4}
 80234c4:	6093      	str	r3, [r2, #8]
 80234c6:	da08      	bge.n	80234da <__sfputc_r+0x1e>
 80234c8:	6994      	ldr	r4, [r2, #24]
 80234ca:	42a3      	cmp	r3, r4
 80234cc:	db01      	blt.n	80234d2 <__sfputc_r+0x16>
 80234ce:	290a      	cmp	r1, #10
 80234d0:	d103      	bne.n	80234da <__sfputc_r+0x1e>
 80234d2:	f85d 4b04 	ldr.w	r4, [sp], #4
 80234d6:	f000 bb6b 	b.w	8023bb0 <__swbuf_r>
 80234da:	6813      	ldr	r3, [r2, #0]
 80234dc:	1c58      	adds	r0, r3, #1
 80234de:	6010      	str	r0, [r2, #0]
 80234e0:	7019      	strb	r1, [r3, #0]
 80234e2:	4608      	mov	r0, r1
 80234e4:	f85d 4b04 	ldr.w	r4, [sp], #4
 80234e8:	4770      	bx	lr

080234ea <__sfputs_r>:
 80234ea:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80234ec:	4606      	mov	r6, r0
 80234ee:	460f      	mov	r7, r1
 80234f0:	4614      	mov	r4, r2
 80234f2:	18d5      	adds	r5, r2, r3
 80234f4:	42ac      	cmp	r4, r5
 80234f6:	d101      	bne.n	80234fc <__sfputs_r+0x12>
 80234f8:	2000      	movs	r0, #0
 80234fa:	e007      	b.n	802350c <__sfputs_r+0x22>
 80234fc:	f814 1b01 	ldrb.w	r1, [r4], #1
 8023500:	463a      	mov	r2, r7
 8023502:	4630      	mov	r0, r6
 8023504:	f7ff ffda 	bl	80234bc <__sfputc_r>
 8023508:	1c43      	adds	r3, r0, #1
 802350a:	d1f3      	bne.n	80234f4 <__sfputs_r+0xa>
 802350c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08023510 <_vfiprintf_r>:
 8023510:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8023514:	460d      	mov	r5, r1
 8023516:	b09d      	sub	sp, #116	@ 0x74
 8023518:	4614      	mov	r4, r2
 802351a:	4698      	mov	r8, r3
 802351c:	4606      	mov	r6, r0
 802351e:	b118      	cbz	r0, 8023528 <_vfiprintf_r+0x18>
 8023520:	6a03      	ldr	r3, [r0, #32]
 8023522:	b90b      	cbnz	r3, 8023528 <_vfiprintf_r+0x18>
 8023524:	f7ff fdba 	bl	802309c <__sinit>
 8023528:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 802352a:	07d9      	lsls	r1, r3, #31
 802352c:	d405      	bmi.n	802353a <_vfiprintf_r+0x2a>
 802352e:	89ab      	ldrh	r3, [r5, #12]
 8023530:	059a      	lsls	r2, r3, #22
 8023532:	d402      	bmi.n	802353a <_vfiprintf_r+0x2a>
 8023534:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8023536:	f7ff ff0a 	bl	802334e <__retarget_lock_acquire_recursive>
 802353a:	89ab      	ldrh	r3, [r5, #12]
 802353c:	071b      	lsls	r3, r3, #28
 802353e:	d501      	bpl.n	8023544 <_vfiprintf_r+0x34>
 8023540:	692b      	ldr	r3, [r5, #16]
 8023542:	b99b      	cbnz	r3, 802356c <_vfiprintf_r+0x5c>
 8023544:	4629      	mov	r1, r5
 8023546:	4630      	mov	r0, r6
 8023548:	f000 fb70 	bl	8023c2c <__swsetup_r>
 802354c:	b170      	cbz	r0, 802356c <_vfiprintf_r+0x5c>
 802354e:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8023550:	07dc      	lsls	r4, r3, #31
 8023552:	d504      	bpl.n	802355e <_vfiprintf_r+0x4e>
 8023554:	f04f 30ff 	mov.w	r0, #4294967295
 8023558:	b01d      	add	sp, #116	@ 0x74
 802355a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802355e:	89ab      	ldrh	r3, [r5, #12]
 8023560:	0598      	lsls	r0, r3, #22
 8023562:	d4f7      	bmi.n	8023554 <_vfiprintf_r+0x44>
 8023564:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8023566:	f7ff fef3 	bl	8023350 <__retarget_lock_release_recursive>
 802356a:	e7f3      	b.n	8023554 <_vfiprintf_r+0x44>
 802356c:	2300      	movs	r3, #0
 802356e:	9309      	str	r3, [sp, #36]	@ 0x24
 8023570:	2320      	movs	r3, #32
 8023572:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 8023576:	f8cd 800c 	str.w	r8, [sp, #12]
 802357a:	2330      	movs	r3, #48	@ 0x30
 802357c:	f8df 81ac 	ldr.w	r8, [pc, #428]	@ 802372c <_vfiprintf_r+0x21c>
 8023580:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 8023584:	f04f 0901 	mov.w	r9, #1
 8023588:	4623      	mov	r3, r4
 802358a:	469a      	mov	sl, r3
 802358c:	f813 2b01 	ldrb.w	r2, [r3], #1
 8023590:	b10a      	cbz	r2, 8023596 <_vfiprintf_r+0x86>
 8023592:	2a25      	cmp	r2, #37	@ 0x25
 8023594:	d1f9      	bne.n	802358a <_vfiprintf_r+0x7a>
 8023596:	ebba 0b04 	subs.w	fp, sl, r4
 802359a:	d00b      	beq.n	80235b4 <_vfiprintf_r+0xa4>
 802359c:	465b      	mov	r3, fp
 802359e:	4622      	mov	r2, r4
 80235a0:	4629      	mov	r1, r5
 80235a2:	4630      	mov	r0, r6
 80235a4:	f7ff ffa1 	bl	80234ea <__sfputs_r>
 80235a8:	3001      	adds	r0, #1
 80235aa:	f000 80a7 	beq.w	80236fc <_vfiprintf_r+0x1ec>
 80235ae:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 80235b0:	445a      	add	r2, fp
 80235b2:	9209      	str	r2, [sp, #36]	@ 0x24
 80235b4:	f89a 3000 	ldrb.w	r3, [sl]
 80235b8:	2b00      	cmp	r3, #0
 80235ba:	f000 809f 	beq.w	80236fc <_vfiprintf_r+0x1ec>
 80235be:	2300      	movs	r3, #0
 80235c0:	f04f 32ff 	mov.w	r2, #4294967295
 80235c4:	e9cd 2305 	strd	r2, r3, [sp, #20]
 80235c8:	f10a 0a01 	add.w	sl, sl, #1
 80235cc:	9304      	str	r3, [sp, #16]
 80235ce:	9307      	str	r3, [sp, #28]
 80235d0:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 80235d4:	931a      	str	r3, [sp, #104]	@ 0x68
 80235d6:	4654      	mov	r4, sl
 80235d8:	2205      	movs	r2, #5
 80235da:	f814 1b01 	ldrb.w	r1, [r4], #1
 80235de:	4853      	ldr	r0, [pc, #332]	@ (802372c <_vfiprintf_r+0x21c>)
 80235e0:	f7dc fe0e 	bl	8000200 <memchr>
 80235e4:	9a04      	ldr	r2, [sp, #16]
 80235e6:	b9d8      	cbnz	r0, 8023620 <_vfiprintf_r+0x110>
 80235e8:	06d1      	lsls	r1, r2, #27
 80235ea:	bf44      	itt	mi
 80235ec:	2320      	movmi	r3, #32
 80235ee:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 80235f2:	0713      	lsls	r3, r2, #28
 80235f4:	bf44      	itt	mi
 80235f6:	232b      	movmi	r3, #43	@ 0x2b
 80235f8:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 80235fc:	f89a 3000 	ldrb.w	r3, [sl]
 8023600:	2b2a      	cmp	r3, #42	@ 0x2a
 8023602:	d015      	beq.n	8023630 <_vfiprintf_r+0x120>
 8023604:	9a07      	ldr	r2, [sp, #28]
 8023606:	4654      	mov	r4, sl
 8023608:	2000      	movs	r0, #0
 802360a:	f04f 0c0a 	mov.w	ip, #10
 802360e:	4621      	mov	r1, r4
 8023610:	f811 3b01 	ldrb.w	r3, [r1], #1
 8023614:	3b30      	subs	r3, #48	@ 0x30
 8023616:	2b09      	cmp	r3, #9
 8023618:	d94b      	bls.n	80236b2 <_vfiprintf_r+0x1a2>
 802361a:	b1b0      	cbz	r0, 802364a <_vfiprintf_r+0x13a>
 802361c:	9207      	str	r2, [sp, #28]
 802361e:	e014      	b.n	802364a <_vfiprintf_r+0x13a>
 8023620:	eba0 0308 	sub.w	r3, r0, r8
 8023624:	fa09 f303 	lsl.w	r3, r9, r3
 8023628:	4313      	orrs	r3, r2
 802362a:	9304      	str	r3, [sp, #16]
 802362c:	46a2      	mov	sl, r4
 802362e:	e7d2      	b.n	80235d6 <_vfiprintf_r+0xc6>
 8023630:	9b03      	ldr	r3, [sp, #12]
 8023632:	1d19      	adds	r1, r3, #4
 8023634:	681b      	ldr	r3, [r3, #0]
 8023636:	9103      	str	r1, [sp, #12]
 8023638:	2b00      	cmp	r3, #0
 802363a:	bfbb      	ittet	lt
 802363c:	425b      	neglt	r3, r3
 802363e:	f042 0202 	orrlt.w	r2, r2, #2
 8023642:	9307      	strge	r3, [sp, #28]
 8023644:	9307      	strlt	r3, [sp, #28]
 8023646:	bfb8      	it	lt
 8023648:	9204      	strlt	r2, [sp, #16]
 802364a:	7823      	ldrb	r3, [r4, #0]
 802364c:	2b2e      	cmp	r3, #46	@ 0x2e
 802364e:	d10a      	bne.n	8023666 <_vfiprintf_r+0x156>
 8023650:	7863      	ldrb	r3, [r4, #1]
 8023652:	2b2a      	cmp	r3, #42	@ 0x2a
 8023654:	d132      	bne.n	80236bc <_vfiprintf_r+0x1ac>
 8023656:	9b03      	ldr	r3, [sp, #12]
 8023658:	1d1a      	adds	r2, r3, #4
 802365a:	681b      	ldr	r3, [r3, #0]
 802365c:	9203      	str	r2, [sp, #12]
 802365e:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 8023662:	3402      	adds	r4, #2
 8023664:	9305      	str	r3, [sp, #20]
 8023666:	f8df a0d4 	ldr.w	sl, [pc, #212]	@ 802373c <_vfiprintf_r+0x22c>
 802366a:	7821      	ldrb	r1, [r4, #0]
 802366c:	2203      	movs	r2, #3
 802366e:	4650      	mov	r0, sl
 8023670:	f7dc fdc6 	bl	8000200 <memchr>
 8023674:	b138      	cbz	r0, 8023686 <_vfiprintf_r+0x176>
 8023676:	9b04      	ldr	r3, [sp, #16]
 8023678:	eba0 000a 	sub.w	r0, r0, sl
 802367c:	2240      	movs	r2, #64	@ 0x40
 802367e:	4082      	lsls	r2, r0
 8023680:	4313      	orrs	r3, r2
 8023682:	3401      	adds	r4, #1
 8023684:	9304      	str	r3, [sp, #16]
 8023686:	f814 1b01 	ldrb.w	r1, [r4], #1
 802368a:	4829      	ldr	r0, [pc, #164]	@ (8023730 <_vfiprintf_r+0x220>)
 802368c:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 8023690:	2206      	movs	r2, #6
 8023692:	f7dc fdb5 	bl	8000200 <memchr>
 8023696:	2800      	cmp	r0, #0
 8023698:	d03f      	beq.n	802371a <_vfiprintf_r+0x20a>
 802369a:	4b26      	ldr	r3, [pc, #152]	@ (8023734 <_vfiprintf_r+0x224>)
 802369c:	bb1b      	cbnz	r3, 80236e6 <_vfiprintf_r+0x1d6>
 802369e:	9b03      	ldr	r3, [sp, #12]
 80236a0:	3307      	adds	r3, #7
 80236a2:	f023 0307 	bic.w	r3, r3, #7
 80236a6:	3308      	adds	r3, #8
 80236a8:	9303      	str	r3, [sp, #12]
 80236aa:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80236ac:	443b      	add	r3, r7
 80236ae:	9309      	str	r3, [sp, #36]	@ 0x24
 80236b0:	e76a      	b.n	8023588 <_vfiprintf_r+0x78>
 80236b2:	fb0c 3202 	mla	r2, ip, r2, r3
 80236b6:	460c      	mov	r4, r1
 80236b8:	2001      	movs	r0, #1
 80236ba:	e7a8      	b.n	802360e <_vfiprintf_r+0xfe>
 80236bc:	2300      	movs	r3, #0
 80236be:	3401      	adds	r4, #1
 80236c0:	9305      	str	r3, [sp, #20]
 80236c2:	4619      	mov	r1, r3
 80236c4:	f04f 0c0a 	mov.w	ip, #10
 80236c8:	4620      	mov	r0, r4
 80236ca:	f810 2b01 	ldrb.w	r2, [r0], #1
 80236ce:	3a30      	subs	r2, #48	@ 0x30
 80236d0:	2a09      	cmp	r2, #9
 80236d2:	d903      	bls.n	80236dc <_vfiprintf_r+0x1cc>
 80236d4:	2b00      	cmp	r3, #0
 80236d6:	d0c6      	beq.n	8023666 <_vfiprintf_r+0x156>
 80236d8:	9105      	str	r1, [sp, #20]
 80236da:	e7c4      	b.n	8023666 <_vfiprintf_r+0x156>
 80236dc:	fb0c 2101 	mla	r1, ip, r1, r2
 80236e0:	4604      	mov	r4, r0
 80236e2:	2301      	movs	r3, #1
 80236e4:	e7f0      	b.n	80236c8 <_vfiprintf_r+0x1b8>
 80236e6:	ab03      	add	r3, sp, #12
 80236e8:	9300      	str	r3, [sp, #0]
 80236ea:	462a      	mov	r2, r5
 80236ec:	4b12      	ldr	r3, [pc, #72]	@ (8023738 <_vfiprintf_r+0x228>)
 80236ee:	a904      	add	r1, sp, #16
 80236f0:	4630      	mov	r0, r6
 80236f2:	f3af 8000 	nop.w
 80236f6:	4607      	mov	r7, r0
 80236f8:	1c78      	adds	r0, r7, #1
 80236fa:	d1d6      	bne.n	80236aa <_vfiprintf_r+0x19a>
 80236fc:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 80236fe:	07d9      	lsls	r1, r3, #31
 8023700:	d405      	bmi.n	802370e <_vfiprintf_r+0x1fe>
 8023702:	89ab      	ldrh	r3, [r5, #12]
 8023704:	059a      	lsls	r2, r3, #22
 8023706:	d402      	bmi.n	802370e <_vfiprintf_r+0x1fe>
 8023708:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 802370a:	f7ff fe21 	bl	8023350 <__retarget_lock_release_recursive>
 802370e:	89ab      	ldrh	r3, [r5, #12]
 8023710:	065b      	lsls	r3, r3, #25
 8023712:	f53f af1f 	bmi.w	8023554 <_vfiprintf_r+0x44>
 8023716:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8023718:	e71e      	b.n	8023558 <_vfiprintf_r+0x48>
 802371a:	ab03      	add	r3, sp, #12
 802371c:	9300      	str	r3, [sp, #0]
 802371e:	462a      	mov	r2, r5
 8023720:	4b05      	ldr	r3, [pc, #20]	@ (8023738 <_vfiprintf_r+0x228>)
 8023722:	a904      	add	r1, sp, #16
 8023724:	4630      	mov	r0, r6
 8023726:	f000 f879 	bl	802381c <_printf_i>
 802372a:	e7e4      	b.n	80236f6 <_vfiprintf_r+0x1e6>
 802372c:	08024887 	.word	0x08024887
 8023730:	08024891 	.word	0x08024891
 8023734:	00000000 	.word	0x00000000
 8023738:	080234eb 	.word	0x080234eb
 802373c:	0802488d 	.word	0x0802488d

08023740 <_printf_common>:
 8023740:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8023744:	4616      	mov	r6, r2
 8023746:	4698      	mov	r8, r3
 8023748:	688a      	ldr	r2, [r1, #8]
 802374a:	690b      	ldr	r3, [r1, #16]
 802374c:	f8dd 9020 	ldr.w	r9, [sp, #32]
 8023750:	4293      	cmp	r3, r2
 8023752:	bfb8      	it	lt
 8023754:	4613      	movlt	r3, r2
 8023756:	6033      	str	r3, [r6, #0]
 8023758:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 802375c:	4607      	mov	r7, r0
 802375e:	460c      	mov	r4, r1
 8023760:	b10a      	cbz	r2, 8023766 <_printf_common+0x26>
 8023762:	3301      	adds	r3, #1
 8023764:	6033      	str	r3, [r6, #0]
 8023766:	6823      	ldr	r3, [r4, #0]
 8023768:	0699      	lsls	r1, r3, #26
 802376a:	bf42      	ittt	mi
 802376c:	6833      	ldrmi	r3, [r6, #0]
 802376e:	3302      	addmi	r3, #2
 8023770:	6033      	strmi	r3, [r6, #0]
 8023772:	6825      	ldr	r5, [r4, #0]
 8023774:	f015 0506 	ands.w	r5, r5, #6
 8023778:	d106      	bne.n	8023788 <_printf_common+0x48>
 802377a:	f104 0a19 	add.w	sl, r4, #25
 802377e:	68e3      	ldr	r3, [r4, #12]
 8023780:	6832      	ldr	r2, [r6, #0]
 8023782:	1a9b      	subs	r3, r3, r2
 8023784:	42ab      	cmp	r3, r5
 8023786:	dc26      	bgt.n	80237d6 <_printf_common+0x96>
 8023788:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 802378c:	6822      	ldr	r2, [r4, #0]
 802378e:	3b00      	subs	r3, #0
 8023790:	bf18      	it	ne
 8023792:	2301      	movne	r3, #1
 8023794:	0692      	lsls	r2, r2, #26
 8023796:	d42b      	bmi.n	80237f0 <_printf_common+0xb0>
 8023798:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 802379c:	4641      	mov	r1, r8
 802379e:	4638      	mov	r0, r7
 80237a0:	47c8      	blx	r9
 80237a2:	3001      	adds	r0, #1
 80237a4:	d01e      	beq.n	80237e4 <_printf_common+0xa4>
 80237a6:	6823      	ldr	r3, [r4, #0]
 80237a8:	6922      	ldr	r2, [r4, #16]
 80237aa:	f003 0306 	and.w	r3, r3, #6
 80237ae:	2b04      	cmp	r3, #4
 80237b0:	bf02      	ittt	eq
 80237b2:	68e5      	ldreq	r5, [r4, #12]
 80237b4:	6833      	ldreq	r3, [r6, #0]
 80237b6:	1aed      	subeq	r5, r5, r3
 80237b8:	68a3      	ldr	r3, [r4, #8]
 80237ba:	bf0c      	ite	eq
 80237bc:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 80237c0:	2500      	movne	r5, #0
 80237c2:	4293      	cmp	r3, r2
 80237c4:	bfc4      	itt	gt
 80237c6:	1a9b      	subgt	r3, r3, r2
 80237c8:	18ed      	addgt	r5, r5, r3
 80237ca:	2600      	movs	r6, #0
 80237cc:	341a      	adds	r4, #26
 80237ce:	42b5      	cmp	r5, r6
 80237d0:	d11a      	bne.n	8023808 <_printf_common+0xc8>
 80237d2:	2000      	movs	r0, #0
 80237d4:	e008      	b.n	80237e8 <_printf_common+0xa8>
 80237d6:	2301      	movs	r3, #1
 80237d8:	4652      	mov	r2, sl
 80237da:	4641      	mov	r1, r8
 80237dc:	4638      	mov	r0, r7
 80237de:	47c8      	blx	r9
 80237e0:	3001      	adds	r0, #1
 80237e2:	d103      	bne.n	80237ec <_printf_common+0xac>
 80237e4:	f04f 30ff 	mov.w	r0, #4294967295
 80237e8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80237ec:	3501      	adds	r5, #1
 80237ee:	e7c6      	b.n	802377e <_printf_common+0x3e>
 80237f0:	18e1      	adds	r1, r4, r3
 80237f2:	1c5a      	adds	r2, r3, #1
 80237f4:	2030      	movs	r0, #48	@ 0x30
 80237f6:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 80237fa:	4422      	add	r2, r4
 80237fc:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 8023800:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 8023804:	3302      	adds	r3, #2
 8023806:	e7c7      	b.n	8023798 <_printf_common+0x58>
 8023808:	2301      	movs	r3, #1
 802380a:	4622      	mov	r2, r4
 802380c:	4641      	mov	r1, r8
 802380e:	4638      	mov	r0, r7
 8023810:	47c8      	blx	r9
 8023812:	3001      	adds	r0, #1
 8023814:	d0e6      	beq.n	80237e4 <_printf_common+0xa4>
 8023816:	3601      	adds	r6, #1
 8023818:	e7d9      	b.n	80237ce <_printf_common+0x8e>
	...

0802381c <_printf_i>:
 802381c:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8023820:	7e0f      	ldrb	r7, [r1, #24]
 8023822:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 8023824:	2f78      	cmp	r7, #120	@ 0x78
 8023826:	4691      	mov	r9, r2
 8023828:	4680      	mov	r8, r0
 802382a:	460c      	mov	r4, r1
 802382c:	469a      	mov	sl, r3
 802382e:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 8023832:	d807      	bhi.n	8023844 <_printf_i+0x28>
 8023834:	2f62      	cmp	r7, #98	@ 0x62
 8023836:	d80a      	bhi.n	802384e <_printf_i+0x32>
 8023838:	2f00      	cmp	r7, #0
 802383a:	f000 80d1 	beq.w	80239e0 <_printf_i+0x1c4>
 802383e:	2f58      	cmp	r7, #88	@ 0x58
 8023840:	f000 80b8 	beq.w	80239b4 <_printf_i+0x198>
 8023844:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8023848:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 802384c:	e03a      	b.n	80238c4 <_printf_i+0xa8>
 802384e:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 8023852:	2b15      	cmp	r3, #21
 8023854:	d8f6      	bhi.n	8023844 <_printf_i+0x28>
 8023856:	a101      	add	r1, pc, #4	@ (adr r1, 802385c <_printf_i+0x40>)
 8023858:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 802385c:	080238b5 	.word	0x080238b5
 8023860:	080238c9 	.word	0x080238c9
 8023864:	08023845 	.word	0x08023845
 8023868:	08023845 	.word	0x08023845
 802386c:	08023845 	.word	0x08023845
 8023870:	08023845 	.word	0x08023845
 8023874:	080238c9 	.word	0x080238c9
 8023878:	08023845 	.word	0x08023845
 802387c:	08023845 	.word	0x08023845
 8023880:	08023845 	.word	0x08023845
 8023884:	08023845 	.word	0x08023845
 8023888:	080239c7 	.word	0x080239c7
 802388c:	080238f3 	.word	0x080238f3
 8023890:	08023981 	.word	0x08023981
 8023894:	08023845 	.word	0x08023845
 8023898:	08023845 	.word	0x08023845
 802389c:	080239e9 	.word	0x080239e9
 80238a0:	08023845 	.word	0x08023845
 80238a4:	080238f3 	.word	0x080238f3
 80238a8:	08023845 	.word	0x08023845
 80238ac:	08023845 	.word	0x08023845
 80238b0:	08023989 	.word	0x08023989
 80238b4:	6833      	ldr	r3, [r6, #0]
 80238b6:	1d1a      	adds	r2, r3, #4
 80238b8:	681b      	ldr	r3, [r3, #0]
 80238ba:	6032      	str	r2, [r6, #0]
 80238bc:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 80238c0:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 80238c4:	2301      	movs	r3, #1
 80238c6:	e09c      	b.n	8023a02 <_printf_i+0x1e6>
 80238c8:	6833      	ldr	r3, [r6, #0]
 80238ca:	6820      	ldr	r0, [r4, #0]
 80238cc:	1d19      	adds	r1, r3, #4
 80238ce:	6031      	str	r1, [r6, #0]
 80238d0:	0606      	lsls	r6, r0, #24
 80238d2:	d501      	bpl.n	80238d8 <_printf_i+0xbc>
 80238d4:	681d      	ldr	r5, [r3, #0]
 80238d6:	e003      	b.n	80238e0 <_printf_i+0xc4>
 80238d8:	0645      	lsls	r5, r0, #25
 80238da:	d5fb      	bpl.n	80238d4 <_printf_i+0xb8>
 80238dc:	f9b3 5000 	ldrsh.w	r5, [r3]
 80238e0:	2d00      	cmp	r5, #0
 80238e2:	da03      	bge.n	80238ec <_printf_i+0xd0>
 80238e4:	232d      	movs	r3, #45	@ 0x2d
 80238e6:	426d      	negs	r5, r5
 80238e8:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 80238ec:	4858      	ldr	r0, [pc, #352]	@ (8023a50 <_printf_i+0x234>)
 80238ee:	230a      	movs	r3, #10
 80238f0:	e011      	b.n	8023916 <_printf_i+0xfa>
 80238f2:	6821      	ldr	r1, [r4, #0]
 80238f4:	6833      	ldr	r3, [r6, #0]
 80238f6:	0608      	lsls	r0, r1, #24
 80238f8:	f853 5b04 	ldr.w	r5, [r3], #4
 80238fc:	d402      	bmi.n	8023904 <_printf_i+0xe8>
 80238fe:	0649      	lsls	r1, r1, #25
 8023900:	bf48      	it	mi
 8023902:	b2ad      	uxthmi	r5, r5
 8023904:	2f6f      	cmp	r7, #111	@ 0x6f
 8023906:	4852      	ldr	r0, [pc, #328]	@ (8023a50 <_printf_i+0x234>)
 8023908:	6033      	str	r3, [r6, #0]
 802390a:	bf14      	ite	ne
 802390c:	230a      	movne	r3, #10
 802390e:	2308      	moveq	r3, #8
 8023910:	2100      	movs	r1, #0
 8023912:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 8023916:	6866      	ldr	r6, [r4, #4]
 8023918:	60a6      	str	r6, [r4, #8]
 802391a:	2e00      	cmp	r6, #0
 802391c:	db05      	blt.n	802392a <_printf_i+0x10e>
 802391e:	6821      	ldr	r1, [r4, #0]
 8023920:	432e      	orrs	r6, r5
 8023922:	f021 0104 	bic.w	r1, r1, #4
 8023926:	6021      	str	r1, [r4, #0]
 8023928:	d04b      	beq.n	80239c2 <_printf_i+0x1a6>
 802392a:	4616      	mov	r6, r2
 802392c:	fbb5 f1f3 	udiv	r1, r5, r3
 8023930:	fb03 5711 	mls	r7, r3, r1, r5
 8023934:	5dc7      	ldrb	r7, [r0, r7]
 8023936:	f806 7d01 	strb.w	r7, [r6, #-1]!
 802393a:	462f      	mov	r7, r5
 802393c:	42bb      	cmp	r3, r7
 802393e:	460d      	mov	r5, r1
 8023940:	d9f4      	bls.n	802392c <_printf_i+0x110>
 8023942:	2b08      	cmp	r3, #8
 8023944:	d10b      	bne.n	802395e <_printf_i+0x142>
 8023946:	6823      	ldr	r3, [r4, #0]
 8023948:	07df      	lsls	r7, r3, #31
 802394a:	d508      	bpl.n	802395e <_printf_i+0x142>
 802394c:	6923      	ldr	r3, [r4, #16]
 802394e:	6861      	ldr	r1, [r4, #4]
 8023950:	4299      	cmp	r1, r3
 8023952:	bfde      	ittt	le
 8023954:	2330      	movle	r3, #48	@ 0x30
 8023956:	f806 3c01 	strble.w	r3, [r6, #-1]
 802395a:	f106 36ff 	addle.w	r6, r6, #4294967295
 802395e:	1b92      	subs	r2, r2, r6
 8023960:	6122      	str	r2, [r4, #16]
 8023962:	f8cd a000 	str.w	sl, [sp]
 8023966:	464b      	mov	r3, r9
 8023968:	aa03      	add	r2, sp, #12
 802396a:	4621      	mov	r1, r4
 802396c:	4640      	mov	r0, r8
 802396e:	f7ff fee7 	bl	8023740 <_printf_common>
 8023972:	3001      	adds	r0, #1
 8023974:	d14a      	bne.n	8023a0c <_printf_i+0x1f0>
 8023976:	f04f 30ff 	mov.w	r0, #4294967295
 802397a:	b004      	add	sp, #16
 802397c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8023980:	6823      	ldr	r3, [r4, #0]
 8023982:	f043 0320 	orr.w	r3, r3, #32
 8023986:	6023      	str	r3, [r4, #0]
 8023988:	4832      	ldr	r0, [pc, #200]	@ (8023a54 <_printf_i+0x238>)
 802398a:	2778      	movs	r7, #120	@ 0x78
 802398c:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 8023990:	6823      	ldr	r3, [r4, #0]
 8023992:	6831      	ldr	r1, [r6, #0]
 8023994:	061f      	lsls	r7, r3, #24
 8023996:	f851 5b04 	ldr.w	r5, [r1], #4
 802399a:	d402      	bmi.n	80239a2 <_printf_i+0x186>
 802399c:	065f      	lsls	r7, r3, #25
 802399e:	bf48      	it	mi
 80239a0:	b2ad      	uxthmi	r5, r5
 80239a2:	6031      	str	r1, [r6, #0]
 80239a4:	07d9      	lsls	r1, r3, #31
 80239a6:	bf44      	itt	mi
 80239a8:	f043 0320 	orrmi.w	r3, r3, #32
 80239ac:	6023      	strmi	r3, [r4, #0]
 80239ae:	b11d      	cbz	r5, 80239b8 <_printf_i+0x19c>
 80239b0:	2310      	movs	r3, #16
 80239b2:	e7ad      	b.n	8023910 <_printf_i+0xf4>
 80239b4:	4826      	ldr	r0, [pc, #152]	@ (8023a50 <_printf_i+0x234>)
 80239b6:	e7e9      	b.n	802398c <_printf_i+0x170>
 80239b8:	6823      	ldr	r3, [r4, #0]
 80239ba:	f023 0320 	bic.w	r3, r3, #32
 80239be:	6023      	str	r3, [r4, #0]
 80239c0:	e7f6      	b.n	80239b0 <_printf_i+0x194>
 80239c2:	4616      	mov	r6, r2
 80239c4:	e7bd      	b.n	8023942 <_printf_i+0x126>
 80239c6:	6833      	ldr	r3, [r6, #0]
 80239c8:	6825      	ldr	r5, [r4, #0]
 80239ca:	6961      	ldr	r1, [r4, #20]
 80239cc:	1d18      	adds	r0, r3, #4
 80239ce:	6030      	str	r0, [r6, #0]
 80239d0:	062e      	lsls	r6, r5, #24
 80239d2:	681b      	ldr	r3, [r3, #0]
 80239d4:	d501      	bpl.n	80239da <_printf_i+0x1be>
 80239d6:	6019      	str	r1, [r3, #0]
 80239d8:	e002      	b.n	80239e0 <_printf_i+0x1c4>
 80239da:	0668      	lsls	r0, r5, #25
 80239dc:	d5fb      	bpl.n	80239d6 <_printf_i+0x1ba>
 80239de:	8019      	strh	r1, [r3, #0]
 80239e0:	2300      	movs	r3, #0
 80239e2:	6123      	str	r3, [r4, #16]
 80239e4:	4616      	mov	r6, r2
 80239e6:	e7bc      	b.n	8023962 <_printf_i+0x146>
 80239e8:	6833      	ldr	r3, [r6, #0]
 80239ea:	1d1a      	adds	r2, r3, #4
 80239ec:	6032      	str	r2, [r6, #0]
 80239ee:	681e      	ldr	r6, [r3, #0]
 80239f0:	6862      	ldr	r2, [r4, #4]
 80239f2:	2100      	movs	r1, #0
 80239f4:	4630      	mov	r0, r6
 80239f6:	f7dc fc03 	bl	8000200 <memchr>
 80239fa:	b108      	cbz	r0, 8023a00 <_printf_i+0x1e4>
 80239fc:	1b80      	subs	r0, r0, r6
 80239fe:	6060      	str	r0, [r4, #4]
 8023a00:	6863      	ldr	r3, [r4, #4]
 8023a02:	6123      	str	r3, [r4, #16]
 8023a04:	2300      	movs	r3, #0
 8023a06:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8023a0a:	e7aa      	b.n	8023962 <_printf_i+0x146>
 8023a0c:	6923      	ldr	r3, [r4, #16]
 8023a0e:	4632      	mov	r2, r6
 8023a10:	4649      	mov	r1, r9
 8023a12:	4640      	mov	r0, r8
 8023a14:	47d0      	blx	sl
 8023a16:	3001      	adds	r0, #1
 8023a18:	d0ad      	beq.n	8023976 <_printf_i+0x15a>
 8023a1a:	6823      	ldr	r3, [r4, #0]
 8023a1c:	079b      	lsls	r3, r3, #30
 8023a1e:	d413      	bmi.n	8023a48 <_printf_i+0x22c>
 8023a20:	68e0      	ldr	r0, [r4, #12]
 8023a22:	9b03      	ldr	r3, [sp, #12]
 8023a24:	4298      	cmp	r0, r3
 8023a26:	bfb8      	it	lt
 8023a28:	4618      	movlt	r0, r3
 8023a2a:	e7a6      	b.n	802397a <_printf_i+0x15e>
 8023a2c:	2301      	movs	r3, #1
 8023a2e:	4632      	mov	r2, r6
 8023a30:	4649      	mov	r1, r9
 8023a32:	4640      	mov	r0, r8
 8023a34:	47d0      	blx	sl
 8023a36:	3001      	adds	r0, #1
 8023a38:	d09d      	beq.n	8023976 <_printf_i+0x15a>
 8023a3a:	3501      	adds	r5, #1
 8023a3c:	68e3      	ldr	r3, [r4, #12]
 8023a3e:	9903      	ldr	r1, [sp, #12]
 8023a40:	1a5b      	subs	r3, r3, r1
 8023a42:	42ab      	cmp	r3, r5
 8023a44:	dcf2      	bgt.n	8023a2c <_printf_i+0x210>
 8023a46:	e7eb      	b.n	8023a20 <_printf_i+0x204>
 8023a48:	2500      	movs	r5, #0
 8023a4a:	f104 0619 	add.w	r6, r4, #25
 8023a4e:	e7f5      	b.n	8023a3c <_printf_i+0x220>
 8023a50:	08024898 	.word	0x08024898
 8023a54:	080248a9 	.word	0x080248a9

08023a58 <__sflush_r>:
 8023a58:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 8023a5c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8023a60:	0716      	lsls	r6, r2, #28
 8023a62:	4605      	mov	r5, r0
 8023a64:	460c      	mov	r4, r1
 8023a66:	d454      	bmi.n	8023b12 <__sflush_r+0xba>
 8023a68:	684b      	ldr	r3, [r1, #4]
 8023a6a:	2b00      	cmp	r3, #0
 8023a6c:	dc02      	bgt.n	8023a74 <__sflush_r+0x1c>
 8023a6e:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
 8023a70:	2b00      	cmp	r3, #0
 8023a72:	dd48      	ble.n	8023b06 <__sflush_r+0xae>
 8023a74:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8023a76:	2e00      	cmp	r6, #0
 8023a78:	d045      	beq.n	8023b06 <__sflush_r+0xae>
 8023a7a:	2300      	movs	r3, #0
 8023a7c:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
 8023a80:	682f      	ldr	r7, [r5, #0]
 8023a82:	6a21      	ldr	r1, [r4, #32]
 8023a84:	602b      	str	r3, [r5, #0]
 8023a86:	d030      	beq.n	8023aea <__sflush_r+0x92>
 8023a88:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 8023a8a:	89a3      	ldrh	r3, [r4, #12]
 8023a8c:	0759      	lsls	r1, r3, #29
 8023a8e:	d505      	bpl.n	8023a9c <__sflush_r+0x44>
 8023a90:	6863      	ldr	r3, [r4, #4]
 8023a92:	1ad2      	subs	r2, r2, r3
 8023a94:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 8023a96:	b10b      	cbz	r3, 8023a9c <__sflush_r+0x44>
 8023a98:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8023a9a:	1ad2      	subs	r2, r2, r3
 8023a9c:	2300      	movs	r3, #0
 8023a9e:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8023aa0:	6a21      	ldr	r1, [r4, #32]
 8023aa2:	4628      	mov	r0, r5
 8023aa4:	47b0      	blx	r6
 8023aa6:	1c43      	adds	r3, r0, #1
 8023aa8:	89a3      	ldrh	r3, [r4, #12]
 8023aaa:	d106      	bne.n	8023aba <__sflush_r+0x62>
 8023aac:	6829      	ldr	r1, [r5, #0]
 8023aae:	291d      	cmp	r1, #29
 8023ab0:	d82b      	bhi.n	8023b0a <__sflush_r+0xb2>
 8023ab2:	4a2a      	ldr	r2, [pc, #168]	@ (8023b5c <__sflush_r+0x104>)
 8023ab4:	40ca      	lsrs	r2, r1
 8023ab6:	07d6      	lsls	r6, r2, #31
 8023ab8:	d527      	bpl.n	8023b0a <__sflush_r+0xb2>
 8023aba:	2200      	movs	r2, #0
 8023abc:	6062      	str	r2, [r4, #4]
 8023abe:	04d9      	lsls	r1, r3, #19
 8023ac0:	6922      	ldr	r2, [r4, #16]
 8023ac2:	6022      	str	r2, [r4, #0]
 8023ac4:	d504      	bpl.n	8023ad0 <__sflush_r+0x78>
 8023ac6:	1c42      	adds	r2, r0, #1
 8023ac8:	d101      	bne.n	8023ace <__sflush_r+0x76>
 8023aca:	682b      	ldr	r3, [r5, #0]
 8023acc:	b903      	cbnz	r3, 8023ad0 <__sflush_r+0x78>
 8023ace:	6560      	str	r0, [r4, #84]	@ 0x54
 8023ad0:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8023ad2:	602f      	str	r7, [r5, #0]
 8023ad4:	b1b9      	cbz	r1, 8023b06 <__sflush_r+0xae>
 8023ad6:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 8023ada:	4299      	cmp	r1, r3
 8023adc:	d002      	beq.n	8023ae4 <__sflush_r+0x8c>
 8023ade:	4628      	mov	r0, r5
 8023ae0:	f7ff fca2 	bl	8023428 <_free_r>
 8023ae4:	2300      	movs	r3, #0
 8023ae6:	6363      	str	r3, [r4, #52]	@ 0x34
 8023ae8:	e00d      	b.n	8023b06 <__sflush_r+0xae>
 8023aea:	2301      	movs	r3, #1
 8023aec:	4628      	mov	r0, r5
 8023aee:	47b0      	blx	r6
 8023af0:	4602      	mov	r2, r0
 8023af2:	1c50      	adds	r0, r2, #1
 8023af4:	d1c9      	bne.n	8023a8a <__sflush_r+0x32>
 8023af6:	682b      	ldr	r3, [r5, #0]
 8023af8:	2b00      	cmp	r3, #0
 8023afa:	d0c6      	beq.n	8023a8a <__sflush_r+0x32>
 8023afc:	2b1d      	cmp	r3, #29
 8023afe:	d001      	beq.n	8023b04 <__sflush_r+0xac>
 8023b00:	2b16      	cmp	r3, #22
 8023b02:	d11e      	bne.n	8023b42 <__sflush_r+0xea>
 8023b04:	602f      	str	r7, [r5, #0]
 8023b06:	2000      	movs	r0, #0
 8023b08:	e022      	b.n	8023b50 <__sflush_r+0xf8>
 8023b0a:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8023b0e:	b21b      	sxth	r3, r3
 8023b10:	e01b      	b.n	8023b4a <__sflush_r+0xf2>
 8023b12:	690f      	ldr	r7, [r1, #16]
 8023b14:	2f00      	cmp	r7, #0
 8023b16:	d0f6      	beq.n	8023b06 <__sflush_r+0xae>
 8023b18:	0793      	lsls	r3, r2, #30
 8023b1a:	680e      	ldr	r6, [r1, #0]
 8023b1c:	bf08      	it	eq
 8023b1e:	694b      	ldreq	r3, [r1, #20]
 8023b20:	600f      	str	r7, [r1, #0]
 8023b22:	bf18      	it	ne
 8023b24:	2300      	movne	r3, #0
 8023b26:	eba6 0807 	sub.w	r8, r6, r7
 8023b2a:	608b      	str	r3, [r1, #8]
 8023b2c:	f1b8 0f00 	cmp.w	r8, #0
 8023b30:	dde9      	ble.n	8023b06 <__sflush_r+0xae>
 8023b32:	6a21      	ldr	r1, [r4, #32]
 8023b34:	6aa6      	ldr	r6, [r4, #40]	@ 0x28
 8023b36:	4643      	mov	r3, r8
 8023b38:	463a      	mov	r2, r7
 8023b3a:	4628      	mov	r0, r5
 8023b3c:	47b0      	blx	r6
 8023b3e:	2800      	cmp	r0, #0
 8023b40:	dc08      	bgt.n	8023b54 <__sflush_r+0xfc>
 8023b42:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8023b46:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8023b4a:	81a3      	strh	r3, [r4, #12]
 8023b4c:	f04f 30ff 	mov.w	r0, #4294967295
 8023b50:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8023b54:	4407      	add	r7, r0
 8023b56:	eba8 0800 	sub.w	r8, r8, r0
 8023b5a:	e7e7      	b.n	8023b2c <__sflush_r+0xd4>
 8023b5c:	20400001 	.word	0x20400001

08023b60 <_fflush_r>:
 8023b60:	b538      	push	{r3, r4, r5, lr}
 8023b62:	690b      	ldr	r3, [r1, #16]
 8023b64:	4605      	mov	r5, r0
 8023b66:	460c      	mov	r4, r1
 8023b68:	b913      	cbnz	r3, 8023b70 <_fflush_r+0x10>
 8023b6a:	2500      	movs	r5, #0
 8023b6c:	4628      	mov	r0, r5
 8023b6e:	bd38      	pop	{r3, r4, r5, pc}
 8023b70:	b118      	cbz	r0, 8023b7a <_fflush_r+0x1a>
 8023b72:	6a03      	ldr	r3, [r0, #32]
 8023b74:	b90b      	cbnz	r3, 8023b7a <_fflush_r+0x1a>
 8023b76:	f7ff fa91 	bl	802309c <__sinit>
 8023b7a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8023b7e:	2b00      	cmp	r3, #0
 8023b80:	d0f3      	beq.n	8023b6a <_fflush_r+0xa>
 8023b82:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 8023b84:	07d0      	lsls	r0, r2, #31
 8023b86:	d404      	bmi.n	8023b92 <_fflush_r+0x32>
 8023b88:	0599      	lsls	r1, r3, #22
 8023b8a:	d402      	bmi.n	8023b92 <_fflush_r+0x32>
 8023b8c:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8023b8e:	f7ff fbde 	bl	802334e <__retarget_lock_acquire_recursive>
 8023b92:	4628      	mov	r0, r5
 8023b94:	4621      	mov	r1, r4
 8023b96:	f7ff ff5f 	bl	8023a58 <__sflush_r>
 8023b9a:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8023b9c:	07da      	lsls	r2, r3, #31
 8023b9e:	4605      	mov	r5, r0
 8023ba0:	d4e4      	bmi.n	8023b6c <_fflush_r+0xc>
 8023ba2:	89a3      	ldrh	r3, [r4, #12]
 8023ba4:	059b      	lsls	r3, r3, #22
 8023ba6:	d4e1      	bmi.n	8023b6c <_fflush_r+0xc>
 8023ba8:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8023baa:	f7ff fbd1 	bl	8023350 <__retarget_lock_release_recursive>
 8023bae:	e7dd      	b.n	8023b6c <_fflush_r+0xc>

08023bb0 <__swbuf_r>:
 8023bb0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8023bb2:	460e      	mov	r6, r1
 8023bb4:	4614      	mov	r4, r2
 8023bb6:	4605      	mov	r5, r0
 8023bb8:	b118      	cbz	r0, 8023bc2 <__swbuf_r+0x12>
 8023bba:	6a03      	ldr	r3, [r0, #32]
 8023bbc:	b90b      	cbnz	r3, 8023bc2 <__swbuf_r+0x12>
 8023bbe:	f7ff fa6d 	bl	802309c <__sinit>
 8023bc2:	69a3      	ldr	r3, [r4, #24]
 8023bc4:	60a3      	str	r3, [r4, #8]
 8023bc6:	89a3      	ldrh	r3, [r4, #12]
 8023bc8:	071a      	lsls	r2, r3, #28
 8023bca:	d501      	bpl.n	8023bd0 <__swbuf_r+0x20>
 8023bcc:	6923      	ldr	r3, [r4, #16]
 8023bce:	b943      	cbnz	r3, 8023be2 <__swbuf_r+0x32>
 8023bd0:	4621      	mov	r1, r4
 8023bd2:	4628      	mov	r0, r5
 8023bd4:	f000 f82a 	bl	8023c2c <__swsetup_r>
 8023bd8:	b118      	cbz	r0, 8023be2 <__swbuf_r+0x32>
 8023bda:	f04f 37ff 	mov.w	r7, #4294967295
 8023bde:	4638      	mov	r0, r7
 8023be0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8023be2:	6823      	ldr	r3, [r4, #0]
 8023be4:	6922      	ldr	r2, [r4, #16]
 8023be6:	1a98      	subs	r0, r3, r2
 8023be8:	6963      	ldr	r3, [r4, #20]
 8023bea:	b2f6      	uxtb	r6, r6
 8023bec:	4283      	cmp	r3, r0
 8023bee:	4637      	mov	r7, r6
 8023bf0:	dc05      	bgt.n	8023bfe <__swbuf_r+0x4e>
 8023bf2:	4621      	mov	r1, r4
 8023bf4:	4628      	mov	r0, r5
 8023bf6:	f7ff ffb3 	bl	8023b60 <_fflush_r>
 8023bfa:	2800      	cmp	r0, #0
 8023bfc:	d1ed      	bne.n	8023bda <__swbuf_r+0x2a>
 8023bfe:	68a3      	ldr	r3, [r4, #8]
 8023c00:	3b01      	subs	r3, #1
 8023c02:	60a3      	str	r3, [r4, #8]
 8023c04:	6823      	ldr	r3, [r4, #0]
 8023c06:	1c5a      	adds	r2, r3, #1
 8023c08:	6022      	str	r2, [r4, #0]
 8023c0a:	701e      	strb	r6, [r3, #0]
 8023c0c:	6962      	ldr	r2, [r4, #20]
 8023c0e:	1c43      	adds	r3, r0, #1
 8023c10:	429a      	cmp	r2, r3
 8023c12:	d004      	beq.n	8023c1e <__swbuf_r+0x6e>
 8023c14:	89a3      	ldrh	r3, [r4, #12]
 8023c16:	07db      	lsls	r3, r3, #31
 8023c18:	d5e1      	bpl.n	8023bde <__swbuf_r+0x2e>
 8023c1a:	2e0a      	cmp	r6, #10
 8023c1c:	d1df      	bne.n	8023bde <__swbuf_r+0x2e>
 8023c1e:	4621      	mov	r1, r4
 8023c20:	4628      	mov	r0, r5
 8023c22:	f7ff ff9d 	bl	8023b60 <_fflush_r>
 8023c26:	2800      	cmp	r0, #0
 8023c28:	d0d9      	beq.n	8023bde <__swbuf_r+0x2e>
 8023c2a:	e7d6      	b.n	8023bda <__swbuf_r+0x2a>

08023c2c <__swsetup_r>:
 8023c2c:	b538      	push	{r3, r4, r5, lr}
 8023c2e:	4b29      	ldr	r3, [pc, #164]	@ (8023cd4 <__swsetup_r+0xa8>)
 8023c30:	4605      	mov	r5, r0
 8023c32:	6818      	ldr	r0, [r3, #0]
 8023c34:	460c      	mov	r4, r1
 8023c36:	b118      	cbz	r0, 8023c40 <__swsetup_r+0x14>
 8023c38:	6a03      	ldr	r3, [r0, #32]
 8023c3a:	b90b      	cbnz	r3, 8023c40 <__swsetup_r+0x14>
 8023c3c:	f7ff fa2e 	bl	802309c <__sinit>
 8023c40:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8023c44:	0719      	lsls	r1, r3, #28
 8023c46:	d422      	bmi.n	8023c8e <__swsetup_r+0x62>
 8023c48:	06da      	lsls	r2, r3, #27
 8023c4a:	d407      	bmi.n	8023c5c <__swsetup_r+0x30>
 8023c4c:	2209      	movs	r2, #9
 8023c4e:	602a      	str	r2, [r5, #0]
 8023c50:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8023c54:	81a3      	strh	r3, [r4, #12]
 8023c56:	f04f 30ff 	mov.w	r0, #4294967295
 8023c5a:	e033      	b.n	8023cc4 <__swsetup_r+0x98>
 8023c5c:	0758      	lsls	r0, r3, #29
 8023c5e:	d512      	bpl.n	8023c86 <__swsetup_r+0x5a>
 8023c60:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8023c62:	b141      	cbz	r1, 8023c76 <__swsetup_r+0x4a>
 8023c64:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 8023c68:	4299      	cmp	r1, r3
 8023c6a:	d002      	beq.n	8023c72 <__swsetup_r+0x46>
 8023c6c:	4628      	mov	r0, r5
 8023c6e:	f7ff fbdb 	bl	8023428 <_free_r>
 8023c72:	2300      	movs	r3, #0
 8023c74:	6363      	str	r3, [r4, #52]	@ 0x34
 8023c76:	89a3      	ldrh	r3, [r4, #12]
 8023c78:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
 8023c7c:	81a3      	strh	r3, [r4, #12]
 8023c7e:	2300      	movs	r3, #0
 8023c80:	6063      	str	r3, [r4, #4]
 8023c82:	6923      	ldr	r3, [r4, #16]
 8023c84:	6023      	str	r3, [r4, #0]
 8023c86:	89a3      	ldrh	r3, [r4, #12]
 8023c88:	f043 0308 	orr.w	r3, r3, #8
 8023c8c:	81a3      	strh	r3, [r4, #12]
 8023c8e:	6923      	ldr	r3, [r4, #16]
 8023c90:	b94b      	cbnz	r3, 8023ca6 <__swsetup_r+0x7a>
 8023c92:	89a3      	ldrh	r3, [r4, #12]
 8023c94:	f403 7320 	and.w	r3, r3, #640	@ 0x280
 8023c98:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 8023c9c:	d003      	beq.n	8023ca6 <__swsetup_r+0x7a>
 8023c9e:	4621      	mov	r1, r4
 8023ca0:	4628      	mov	r0, r5
 8023ca2:	f000 f83f 	bl	8023d24 <__smakebuf_r>
 8023ca6:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8023caa:	f013 0201 	ands.w	r2, r3, #1
 8023cae:	d00a      	beq.n	8023cc6 <__swsetup_r+0x9a>
 8023cb0:	2200      	movs	r2, #0
 8023cb2:	60a2      	str	r2, [r4, #8]
 8023cb4:	6962      	ldr	r2, [r4, #20]
 8023cb6:	4252      	negs	r2, r2
 8023cb8:	61a2      	str	r2, [r4, #24]
 8023cba:	6922      	ldr	r2, [r4, #16]
 8023cbc:	b942      	cbnz	r2, 8023cd0 <__swsetup_r+0xa4>
 8023cbe:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
 8023cc2:	d1c5      	bne.n	8023c50 <__swsetup_r+0x24>
 8023cc4:	bd38      	pop	{r3, r4, r5, pc}
 8023cc6:	0799      	lsls	r1, r3, #30
 8023cc8:	bf58      	it	pl
 8023cca:	6962      	ldrpl	r2, [r4, #20]
 8023ccc:	60a2      	str	r2, [r4, #8]
 8023cce:	e7f4      	b.n	8023cba <__swsetup_r+0x8e>
 8023cd0:	2000      	movs	r0, #0
 8023cd2:	e7f7      	b.n	8023cc4 <__swsetup_r+0x98>
 8023cd4:	20000220 	.word	0x20000220

08023cd8 <__swhatbuf_r>:
 8023cd8:	b570      	push	{r4, r5, r6, lr}
 8023cda:	460c      	mov	r4, r1
 8023cdc:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8023ce0:	2900      	cmp	r1, #0
 8023ce2:	b096      	sub	sp, #88	@ 0x58
 8023ce4:	4615      	mov	r5, r2
 8023ce6:	461e      	mov	r6, r3
 8023ce8:	da0d      	bge.n	8023d06 <__swhatbuf_r+0x2e>
 8023cea:	89a3      	ldrh	r3, [r4, #12]
 8023cec:	f013 0f80 	tst.w	r3, #128	@ 0x80
 8023cf0:	f04f 0100 	mov.w	r1, #0
 8023cf4:	bf14      	ite	ne
 8023cf6:	2340      	movne	r3, #64	@ 0x40
 8023cf8:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
 8023cfc:	2000      	movs	r0, #0
 8023cfe:	6031      	str	r1, [r6, #0]
 8023d00:	602b      	str	r3, [r5, #0]
 8023d02:	b016      	add	sp, #88	@ 0x58
 8023d04:	bd70      	pop	{r4, r5, r6, pc}
 8023d06:	466a      	mov	r2, sp
 8023d08:	f000 f848 	bl	8023d9c <_fstat_r>
 8023d0c:	2800      	cmp	r0, #0
 8023d0e:	dbec      	blt.n	8023cea <__swhatbuf_r+0x12>
 8023d10:	9901      	ldr	r1, [sp, #4]
 8023d12:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
 8023d16:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
 8023d1a:	4259      	negs	r1, r3
 8023d1c:	4159      	adcs	r1, r3
 8023d1e:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 8023d22:	e7eb      	b.n	8023cfc <__swhatbuf_r+0x24>

08023d24 <__smakebuf_r>:
 8023d24:	898b      	ldrh	r3, [r1, #12]
 8023d26:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8023d28:	079d      	lsls	r5, r3, #30
 8023d2a:	4606      	mov	r6, r0
 8023d2c:	460c      	mov	r4, r1
 8023d2e:	d507      	bpl.n	8023d40 <__smakebuf_r+0x1c>
 8023d30:	f104 0347 	add.w	r3, r4, #71	@ 0x47
 8023d34:	6023      	str	r3, [r4, #0]
 8023d36:	6123      	str	r3, [r4, #16]
 8023d38:	2301      	movs	r3, #1
 8023d3a:	6163      	str	r3, [r4, #20]
 8023d3c:	b003      	add	sp, #12
 8023d3e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8023d40:	ab01      	add	r3, sp, #4
 8023d42:	466a      	mov	r2, sp
 8023d44:	f7ff ffc8 	bl	8023cd8 <__swhatbuf_r>
 8023d48:	9f00      	ldr	r7, [sp, #0]
 8023d4a:	4605      	mov	r5, r0
 8023d4c:	4639      	mov	r1, r7
 8023d4e:	4630      	mov	r0, r6
 8023d50:	f7ff f87e 	bl	8022e50 <_malloc_r>
 8023d54:	b948      	cbnz	r0, 8023d6a <__smakebuf_r+0x46>
 8023d56:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8023d5a:	059a      	lsls	r2, r3, #22
 8023d5c:	d4ee      	bmi.n	8023d3c <__smakebuf_r+0x18>
 8023d5e:	f023 0303 	bic.w	r3, r3, #3
 8023d62:	f043 0302 	orr.w	r3, r3, #2
 8023d66:	81a3      	strh	r3, [r4, #12]
 8023d68:	e7e2      	b.n	8023d30 <__smakebuf_r+0xc>
 8023d6a:	89a3      	ldrh	r3, [r4, #12]
 8023d6c:	6020      	str	r0, [r4, #0]
 8023d6e:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8023d72:	81a3      	strh	r3, [r4, #12]
 8023d74:	9b01      	ldr	r3, [sp, #4]
 8023d76:	e9c4 0704 	strd	r0, r7, [r4, #16]
 8023d7a:	b15b      	cbz	r3, 8023d94 <__smakebuf_r+0x70>
 8023d7c:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8023d80:	4630      	mov	r0, r6
 8023d82:	f000 f81d 	bl	8023dc0 <_isatty_r>
 8023d86:	b128      	cbz	r0, 8023d94 <__smakebuf_r+0x70>
 8023d88:	89a3      	ldrh	r3, [r4, #12]
 8023d8a:	f023 0303 	bic.w	r3, r3, #3
 8023d8e:	f043 0301 	orr.w	r3, r3, #1
 8023d92:	81a3      	strh	r3, [r4, #12]
 8023d94:	89a3      	ldrh	r3, [r4, #12]
 8023d96:	431d      	orrs	r5, r3
 8023d98:	81a5      	strh	r5, [r4, #12]
 8023d9a:	e7cf      	b.n	8023d3c <__smakebuf_r+0x18>

08023d9c <_fstat_r>:
 8023d9c:	b538      	push	{r3, r4, r5, lr}
 8023d9e:	4d07      	ldr	r5, [pc, #28]	@ (8023dbc <_fstat_r+0x20>)
 8023da0:	2300      	movs	r3, #0
 8023da2:	4604      	mov	r4, r0
 8023da4:	4608      	mov	r0, r1
 8023da6:	4611      	mov	r1, r2
 8023da8:	602b      	str	r3, [r5, #0]
 8023daa:	f7df f98c 	bl	80030c6 <_fstat>
 8023dae:	1c43      	adds	r3, r0, #1
 8023db0:	d102      	bne.n	8023db8 <_fstat_r+0x1c>
 8023db2:	682b      	ldr	r3, [r5, #0]
 8023db4:	b103      	cbz	r3, 8023db8 <_fstat_r+0x1c>
 8023db6:	6023      	str	r3, [r4, #0]
 8023db8:	bd38      	pop	{r3, r4, r5, pc}
 8023dba:	bf00      	nop
 8023dbc:	20013f74 	.word	0x20013f74

08023dc0 <_isatty_r>:
 8023dc0:	b538      	push	{r3, r4, r5, lr}
 8023dc2:	4d06      	ldr	r5, [pc, #24]	@ (8023ddc <_isatty_r+0x1c>)
 8023dc4:	2300      	movs	r3, #0
 8023dc6:	4604      	mov	r4, r0
 8023dc8:	4608      	mov	r0, r1
 8023dca:	602b      	str	r3, [r5, #0]
 8023dcc:	f7df f980 	bl	80030d0 <_isatty>
 8023dd0:	1c43      	adds	r3, r0, #1
 8023dd2:	d102      	bne.n	8023dda <_isatty_r+0x1a>
 8023dd4:	682b      	ldr	r3, [r5, #0]
 8023dd6:	b103      	cbz	r3, 8023dda <_isatty_r+0x1a>
 8023dd8:	6023      	str	r3, [r4, #0]
 8023dda:	bd38      	pop	{r3, r4, r5, pc}
 8023ddc:	20013f74 	.word	0x20013f74

08023de0 <_init>:
 8023de0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8023de2:	bf00      	nop
 8023de4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8023de6:	bc08      	pop	{r3}
 8023de8:	469e      	mov	lr, r3
 8023dea:	4770      	bx	lr

08023dec <_fini>:
 8023dec:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8023dee:	bf00      	nop
 8023df0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8023df2:	bc08      	pop	{r3}
 8023df4:	469e      	mov	lr, r3
 8023df6:	4770      	bx	lr
