
STM32F429I_DISCO_REV_D01.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001ac  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00023a28  080001b0  080001b0  000011b0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00001d98  08023bd8  08023bd8  00024bd8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 FontFlashSection 0000056a  08025970  08025970  00026970  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 FontSearchFlashSection 00000018  08025edc  08025edc  00026edc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 TextFlashSection 0000000e  08025ef4  08025ef4  00026ef4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 .ARM.extab    00000002  08025f02  08025f02  00026f02  2**0
                  ALLOC
  7 .ARM          00000008  08025f04  08025f04  00026f04  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .preinit_array 00000000  08025f0c  08025f0c  00027480  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .init_array   00000014  08025f0c  08025f0c  00026f0c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 10 .fini_array   00000008  08025f20  08025f20  00026f20  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 11 .data         00000274  20000000  08025f28  00027000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 12 TouchGFX_ScratchbufferA 00000100  20000280  0802619c  00027280  2**5
                  CONTENTS, ALLOC, LOAD, DATA
 13 TouchGFX_ScratchbufferB 00000100  20000380  0802629c  00027380  2**5
                  CONTENTS, ALLOC, LOAD, DATA
 14 .bss          00014904  20000480  0802639c  00027480  2**2
                  ALLOC
 15 ._user_heap_stack 00001404  20014d84  0802639c  00027d84  2**0
                  ALLOC
 16 .ARM.attributes 00000030  00000000  00000000  00027480  2**0
                  CONTENTS, READONLY
 17 TouchGFX_Framebuffer 00070800  d0000000  d0000000  00028000  2**2
                  ALLOC
 18 .debug_line   0005212f  00000000  00000000  000274b0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_line_str 00000067  00000000  00000000  000795df  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_info   000b4c04  00000000  00000000  00079646  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_abbrev 000141dc  00000000  00000000  0012e24a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_aranges 00003248  00000000  00000000  00142428  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 23 .debug_str    001157ec  00000000  00000000  00145670  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 24 .debug_rnglists 0000349d  00000000  00000000  0025ae5c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 25 .debug_loclists 0001ceb9  00000000  00000000  0025e2f9  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 26 .debug_macro  00033f72  00000000  00000000  0027b1b2  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 27 .comment      000000c2  00000000  00000000  002af124  2**0
                  CONTENTS, READONLY
 28 .debug_frame  00009018  00000000  00000000  002af1e8  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001b0 <__do_global_dtors_aux>:
 80001b0:	b510      	push	{r4, lr}
 80001b2:	4c05      	ldr	r4, [pc, #20]	@ (80001c8 <__do_global_dtors_aux+0x18>)
 80001b4:	7823      	ldrb	r3, [r4, #0]
 80001b6:	b933      	cbnz	r3, 80001c6 <__do_global_dtors_aux+0x16>
 80001b8:	4b04      	ldr	r3, [pc, #16]	@ (80001cc <__do_global_dtors_aux+0x1c>)
 80001ba:	b113      	cbz	r3, 80001c2 <__do_global_dtors_aux+0x12>
 80001bc:	4804      	ldr	r0, [pc, #16]	@ (80001d0 <__do_global_dtors_aux+0x20>)
 80001be:	f3af 8000 	nop.w
 80001c2:	2301      	movs	r3, #1
 80001c4:	7023      	strb	r3, [r4, #0]
 80001c6:	bd10      	pop	{r4, pc}
 80001c8:	20000480 	.word	0x20000480
 80001cc:	00000000 	.word	0x00000000
 80001d0:	08023bc0 	.word	0x08023bc0

080001d4 <frame_dummy>:
 80001d4:	b508      	push	{r3, lr}
 80001d6:	4b03      	ldr	r3, [pc, #12]	@ (80001e4 <frame_dummy+0x10>)
 80001d8:	b11b      	cbz	r3, 80001e2 <frame_dummy+0xe>
 80001da:	4903      	ldr	r1, [pc, #12]	@ (80001e8 <frame_dummy+0x14>)
 80001dc:	4803      	ldr	r0, [pc, #12]	@ (80001ec <frame_dummy+0x18>)
 80001de:	f3af 8000 	nop.w
 80001e2:	bd08      	pop	{r3, pc}
 80001e4:	00000000 	.word	0x00000000
 80001e8:	20000484 	.word	0x20000484
 80001ec:	08023bc0 	.word	0x08023bc0

080001f0 <strlen>:
 80001f0:	4603      	mov	r3, r0
 80001f2:	f813 2b01 	ldrb.w	r2, [r3], #1
 80001f6:	2a00      	cmp	r2, #0
 80001f8:	d1fb      	bne.n	80001f2 <strlen+0x2>
 80001fa:	1a18      	subs	r0, r3, r0
 80001fc:	3801      	subs	r0, #1
 80001fe:	4770      	bx	lr

08000200 <memchr>:
 8000200:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 8000204:	2a10      	cmp	r2, #16
 8000206:	db2b      	blt.n	8000260 <memchr+0x60>
 8000208:	f010 0f07 	tst.w	r0, #7
 800020c:	d008      	beq.n	8000220 <memchr+0x20>
 800020e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000212:	3a01      	subs	r2, #1
 8000214:	428b      	cmp	r3, r1
 8000216:	d02d      	beq.n	8000274 <memchr+0x74>
 8000218:	f010 0f07 	tst.w	r0, #7
 800021c:	b342      	cbz	r2, 8000270 <memchr+0x70>
 800021e:	d1f6      	bne.n	800020e <memchr+0xe>
 8000220:	b4f0      	push	{r4, r5, r6, r7}
 8000222:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000226:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800022a:	f022 0407 	bic.w	r4, r2, #7
 800022e:	f07f 0700 	mvns.w	r7, #0
 8000232:	2300      	movs	r3, #0
 8000234:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000238:	3c08      	subs	r4, #8
 800023a:	ea85 0501 	eor.w	r5, r5, r1
 800023e:	ea86 0601 	eor.w	r6, r6, r1
 8000242:	fa85 f547 	uadd8	r5, r5, r7
 8000246:	faa3 f587 	sel	r5, r3, r7
 800024a:	fa86 f647 	uadd8	r6, r6, r7
 800024e:	faa5 f687 	sel	r6, r5, r7
 8000252:	b98e      	cbnz	r6, 8000278 <memchr+0x78>
 8000254:	d1ee      	bne.n	8000234 <memchr+0x34>
 8000256:	bcf0      	pop	{r4, r5, r6, r7}
 8000258:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 800025c:	f002 0207 	and.w	r2, r2, #7
 8000260:	b132      	cbz	r2, 8000270 <memchr+0x70>
 8000262:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000266:	3a01      	subs	r2, #1
 8000268:	ea83 0301 	eor.w	r3, r3, r1
 800026c:	b113      	cbz	r3, 8000274 <memchr+0x74>
 800026e:	d1f8      	bne.n	8000262 <memchr+0x62>
 8000270:	2000      	movs	r0, #0
 8000272:	4770      	bx	lr
 8000274:	3801      	subs	r0, #1
 8000276:	4770      	bx	lr
 8000278:	2d00      	cmp	r5, #0
 800027a:	bf06      	itte	eq
 800027c:	4635      	moveq	r5, r6
 800027e:	3803      	subeq	r0, #3
 8000280:	3807      	subne	r0, #7
 8000282:	f015 0f01 	tst.w	r5, #1
 8000286:	d107      	bne.n	8000298 <memchr+0x98>
 8000288:	3001      	adds	r0, #1
 800028a:	f415 7f80 	tst.w	r5, #256	@ 0x100
 800028e:	bf02      	ittt	eq
 8000290:	3001      	addeq	r0, #1
 8000292:	f415 3fc0 	tsteq.w	r5, #98304	@ 0x18000
 8000296:	3001      	addeq	r0, #1
 8000298:	bcf0      	pop	{r4, r5, r6, r7}
 800029a:	3801      	subs	r0, #1
 800029c:	4770      	bx	lr
 800029e:	bf00      	nop

080002a0 <__aeabi_ldivmod>:
 80002a0:	b97b      	cbnz	r3, 80002c2 <__aeabi_ldivmod+0x22>
 80002a2:	b972      	cbnz	r2, 80002c2 <__aeabi_ldivmod+0x22>
 80002a4:	2900      	cmp	r1, #0
 80002a6:	bfbe      	ittt	lt
 80002a8:	2000      	movlt	r0, #0
 80002aa:	f04f 4100 	movlt.w	r1, #2147483648	@ 0x80000000
 80002ae:	e006      	blt.n	80002be <__aeabi_ldivmod+0x1e>
 80002b0:	bf08      	it	eq
 80002b2:	2800      	cmpeq	r0, #0
 80002b4:	bf1c      	itt	ne
 80002b6:	f06f 4100 	mvnne.w	r1, #2147483648	@ 0x80000000
 80002ba:	f04f 30ff 	movne.w	r0, #4294967295
 80002be:	f000 b9d3 	b.w	8000668 <__aeabi_idiv0>
 80002c2:	f1ad 0c08 	sub.w	ip, sp, #8
 80002c6:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 80002ca:	2900      	cmp	r1, #0
 80002cc:	db09      	blt.n	80002e2 <__aeabi_ldivmod+0x42>
 80002ce:	2b00      	cmp	r3, #0
 80002d0:	db1a      	blt.n	8000308 <__aeabi_ldivmod+0x68>
 80002d2:	f000 f84d 	bl	8000370 <__udivmoddi4>
 80002d6:	f8dd e004 	ldr.w	lr, [sp, #4]
 80002da:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80002de:	b004      	add	sp, #16
 80002e0:	4770      	bx	lr
 80002e2:	4240      	negs	r0, r0
 80002e4:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80002e8:	2b00      	cmp	r3, #0
 80002ea:	db1b      	blt.n	8000324 <__aeabi_ldivmod+0x84>
 80002ec:	f000 f840 	bl	8000370 <__udivmoddi4>
 80002f0:	f8dd e004 	ldr.w	lr, [sp, #4]
 80002f4:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80002f8:	b004      	add	sp, #16
 80002fa:	4240      	negs	r0, r0
 80002fc:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000300:	4252      	negs	r2, r2
 8000302:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000306:	4770      	bx	lr
 8000308:	4252      	negs	r2, r2
 800030a:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 800030e:	f000 f82f 	bl	8000370 <__udivmoddi4>
 8000312:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000316:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 800031a:	b004      	add	sp, #16
 800031c:	4240      	negs	r0, r0
 800031e:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000322:	4770      	bx	lr
 8000324:	4252      	negs	r2, r2
 8000326:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 800032a:	f000 f821 	bl	8000370 <__udivmoddi4>
 800032e:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000332:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000336:	b004      	add	sp, #16
 8000338:	4252      	negs	r2, r2
 800033a:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 800033e:	4770      	bx	lr

08000340 <__aeabi_uldivmod>:
 8000340:	b953      	cbnz	r3, 8000358 <__aeabi_uldivmod+0x18>
 8000342:	b94a      	cbnz	r2, 8000358 <__aeabi_uldivmod+0x18>
 8000344:	2900      	cmp	r1, #0
 8000346:	bf08      	it	eq
 8000348:	2800      	cmpeq	r0, #0
 800034a:	bf1c      	itt	ne
 800034c:	f04f 31ff 	movne.w	r1, #4294967295
 8000350:	f04f 30ff 	movne.w	r0, #4294967295
 8000354:	f000 b988 	b.w	8000668 <__aeabi_idiv0>
 8000358:	f1ad 0c08 	sub.w	ip, sp, #8
 800035c:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8000360:	f000 f806 	bl	8000370 <__udivmoddi4>
 8000364:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000368:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 800036c:	b004      	add	sp, #16
 800036e:	4770      	bx	lr

08000370 <__udivmoddi4>:
 8000370:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000374:	9d08      	ldr	r5, [sp, #32]
 8000376:	468e      	mov	lr, r1
 8000378:	4604      	mov	r4, r0
 800037a:	4688      	mov	r8, r1
 800037c:	2b00      	cmp	r3, #0
 800037e:	d14a      	bne.n	8000416 <__udivmoddi4+0xa6>
 8000380:	428a      	cmp	r2, r1
 8000382:	4617      	mov	r7, r2
 8000384:	d962      	bls.n	800044c <__udivmoddi4+0xdc>
 8000386:	fab2 f682 	clz	r6, r2
 800038a:	b14e      	cbz	r6, 80003a0 <__udivmoddi4+0x30>
 800038c:	f1c6 0320 	rsb	r3, r6, #32
 8000390:	fa01 f806 	lsl.w	r8, r1, r6
 8000394:	fa20 f303 	lsr.w	r3, r0, r3
 8000398:	40b7      	lsls	r7, r6
 800039a:	ea43 0808 	orr.w	r8, r3, r8
 800039e:	40b4      	lsls	r4, r6
 80003a0:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 80003a4:	fa1f fc87 	uxth.w	ip, r7
 80003a8:	fbb8 f1fe 	udiv	r1, r8, lr
 80003ac:	0c23      	lsrs	r3, r4, #16
 80003ae:	fb0e 8811 	mls	r8, lr, r1, r8
 80003b2:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
 80003b6:	fb01 f20c 	mul.w	r2, r1, ip
 80003ba:	429a      	cmp	r2, r3
 80003bc:	d909      	bls.n	80003d2 <__udivmoddi4+0x62>
 80003be:	18fb      	adds	r3, r7, r3
 80003c0:	f101 30ff 	add.w	r0, r1, #4294967295
 80003c4:	f080 80ea 	bcs.w	800059c <__udivmoddi4+0x22c>
 80003c8:	429a      	cmp	r2, r3
 80003ca:	f240 80e7 	bls.w	800059c <__udivmoddi4+0x22c>
 80003ce:	3902      	subs	r1, #2
 80003d0:	443b      	add	r3, r7
 80003d2:	1a9a      	subs	r2, r3, r2
 80003d4:	b2a3      	uxth	r3, r4
 80003d6:	fbb2 f0fe 	udiv	r0, r2, lr
 80003da:	fb0e 2210 	mls	r2, lr, r0, r2
 80003de:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 80003e2:	fb00 fc0c 	mul.w	ip, r0, ip
 80003e6:	459c      	cmp	ip, r3
 80003e8:	d909      	bls.n	80003fe <__udivmoddi4+0x8e>
 80003ea:	18fb      	adds	r3, r7, r3
 80003ec:	f100 32ff 	add.w	r2, r0, #4294967295
 80003f0:	f080 80d6 	bcs.w	80005a0 <__udivmoddi4+0x230>
 80003f4:	459c      	cmp	ip, r3
 80003f6:	f240 80d3 	bls.w	80005a0 <__udivmoddi4+0x230>
 80003fa:	443b      	add	r3, r7
 80003fc:	3802      	subs	r0, #2
 80003fe:	ea40 4001 	orr.w	r0, r0, r1, lsl #16
 8000402:	eba3 030c 	sub.w	r3, r3, ip
 8000406:	2100      	movs	r1, #0
 8000408:	b11d      	cbz	r5, 8000412 <__udivmoddi4+0xa2>
 800040a:	40f3      	lsrs	r3, r6
 800040c:	2200      	movs	r2, #0
 800040e:	e9c5 3200 	strd	r3, r2, [r5]
 8000412:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000416:	428b      	cmp	r3, r1
 8000418:	d905      	bls.n	8000426 <__udivmoddi4+0xb6>
 800041a:	b10d      	cbz	r5, 8000420 <__udivmoddi4+0xb0>
 800041c:	e9c5 0100 	strd	r0, r1, [r5]
 8000420:	2100      	movs	r1, #0
 8000422:	4608      	mov	r0, r1
 8000424:	e7f5      	b.n	8000412 <__udivmoddi4+0xa2>
 8000426:	fab3 f183 	clz	r1, r3
 800042a:	2900      	cmp	r1, #0
 800042c:	d146      	bne.n	80004bc <__udivmoddi4+0x14c>
 800042e:	4573      	cmp	r3, lr
 8000430:	d302      	bcc.n	8000438 <__udivmoddi4+0xc8>
 8000432:	4282      	cmp	r2, r0
 8000434:	f200 8105 	bhi.w	8000642 <__udivmoddi4+0x2d2>
 8000438:	1a84      	subs	r4, r0, r2
 800043a:	eb6e 0203 	sbc.w	r2, lr, r3
 800043e:	2001      	movs	r0, #1
 8000440:	4690      	mov	r8, r2
 8000442:	2d00      	cmp	r5, #0
 8000444:	d0e5      	beq.n	8000412 <__udivmoddi4+0xa2>
 8000446:	e9c5 4800 	strd	r4, r8, [r5]
 800044a:	e7e2      	b.n	8000412 <__udivmoddi4+0xa2>
 800044c:	2a00      	cmp	r2, #0
 800044e:	f000 8090 	beq.w	8000572 <__udivmoddi4+0x202>
 8000452:	fab2 f682 	clz	r6, r2
 8000456:	2e00      	cmp	r6, #0
 8000458:	f040 80a4 	bne.w	80005a4 <__udivmoddi4+0x234>
 800045c:	1a8a      	subs	r2, r1, r2
 800045e:	0c03      	lsrs	r3, r0, #16
 8000460:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 8000464:	b280      	uxth	r0, r0
 8000466:	b2bc      	uxth	r4, r7
 8000468:	2101      	movs	r1, #1
 800046a:	fbb2 fcfe 	udiv	ip, r2, lr
 800046e:	fb0e 221c 	mls	r2, lr, ip, r2
 8000472:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8000476:	fb04 f20c 	mul.w	r2, r4, ip
 800047a:	429a      	cmp	r2, r3
 800047c:	d907      	bls.n	800048e <__udivmoddi4+0x11e>
 800047e:	18fb      	adds	r3, r7, r3
 8000480:	f10c 38ff 	add.w	r8, ip, #4294967295
 8000484:	d202      	bcs.n	800048c <__udivmoddi4+0x11c>
 8000486:	429a      	cmp	r2, r3
 8000488:	f200 80e0 	bhi.w	800064c <__udivmoddi4+0x2dc>
 800048c:	46c4      	mov	ip, r8
 800048e:	1a9b      	subs	r3, r3, r2
 8000490:	fbb3 f2fe 	udiv	r2, r3, lr
 8000494:	fb0e 3312 	mls	r3, lr, r2, r3
 8000498:	ea40 4303 	orr.w	r3, r0, r3, lsl #16
 800049c:	fb02 f404 	mul.w	r4, r2, r4
 80004a0:	429c      	cmp	r4, r3
 80004a2:	d907      	bls.n	80004b4 <__udivmoddi4+0x144>
 80004a4:	18fb      	adds	r3, r7, r3
 80004a6:	f102 30ff 	add.w	r0, r2, #4294967295
 80004aa:	d202      	bcs.n	80004b2 <__udivmoddi4+0x142>
 80004ac:	429c      	cmp	r4, r3
 80004ae:	f200 80ca 	bhi.w	8000646 <__udivmoddi4+0x2d6>
 80004b2:	4602      	mov	r2, r0
 80004b4:	1b1b      	subs	r3, r3, r4
 80004b6:	ea42 400c 	orr.w	r0, r2, ip, lsl #16
 80004ba:	e7a5      	b.n	8000408 <__udivmoddi4+0x98>
 80004bc:	f1c1 0620 	rsb	r6, r1, #32
 80004c0:	408b      	lsls	r3, r1
 80004c2:	fa22 f706 	lsr.w	r7, r2, r6
 80004c6:	431f      	orrs	r7, r3
 80004c8:	fa0e f401 	lsl.w	r4, lr, r1
 80004cc:	fa20 f306 	lsr.w	r3, r0, r6
 80004d0:	fa2e fe06 	lsr.w	lr, lr, r6
 80004d4:	ea4f 4917 	mov.w	r9, r7, lsr #16
 80004d8:	4323      	orrs	r3, r4
 80004da:	fa00 f801 	lsl.w	r8, r0, r1
 80004de:	fa1f fc87 	uxth.w	ip, r7
 80004e2:	fbbe f0f9 	udiv	r0, lr, r9
 80004e6:	0c1c      	lsrs	r4, r3, #16
 80004e8:	fb09 ee10 	mls	lr, r9, r0, lr
 80004ec:	ea44 440e 	orr.w	r4, r4, lr, lsl #16
 80004f0:	fb00 fe0c 	mul.w	lr, r0, ip
 80004f4:	45a6      	cmp	lr, r4
 80004f6:	fa02 f201 	lsl.w	r2, r2, r1
 80004fa:	d909      	bls.n	8000510 <__udivmoddi4+0x1a0>
 80004fc:	193c      	adds	r4, r7, r4
 80004fe:	f100 3aff 	add.w	sl, r0, #4294967295
 8000502:	f080 809c 	bcs.w	800063e <__udivmoddi4+0x2ce>
 8000506:	45a6      	cmp	lr, r4
 8000508:	f240 8099 	bls.w	800063e <__udivmoddi4+0x2ce>
 800050c:	3802      	subs	r0, #2
 800050e:	443c      	add	r4, r7
 8000510:	eba4 040e 	sub.w	r4, r4, lr
 8000514:	fa1f fe83 	uxth.w	lr, r3
 8000518:	fbb4 f3f9 	udiv	r3, r4, r9
 800051c:	fb09 4413 	mls	r4, r9, r3, r4
 8000520:	ea4e 4404 	orr.w	r4, lr, r4, lsl #16
 8000524:	fb03 fc0c 	mul.w	ip, r3, ip
 8000528:	45a4      	cmp	ip, r4
 800052a:	d908      	bls.n	800053e <__udivmoddi4+0x1ce>
 800052c:	193c      	adds	r4, r7, r4
 800052e:	f103 3eff 	add.w	lr, r3, #4294967295
 8000532:	f080 8082 	bcs.w	800063a <__udivmoddi4+0x2ca>
 8000536:	45a4      	cmp	ip, r4
 8000538:	d97f      	bls.n	800063a <__udivmoddi4+0x2ca>
 800053a:	3b02      	subs	r3, #2
 800053c:	443c      	add	r4, r7
 800053e:	ea43 4000 	orr.w	r0, r3, r0, lsl #16
 8000542:	eba4 040c 	sub.w	r4, r4, ip
 8000546:	fba0 ec02 	umull	lr, ip, r0, r2
 800054a:	4564      	cmp	r4, ip
 800054c:	4673      	mov	r3, lr
 800054e:	46e1      	mov	r9, ip
 8000550:	d362      	bcc.n	8000618 <__udivmoddi4+0x2a8>
 8000552:	d05f      	beq.n	8000614 <__udivmoddi4+0x2a4>
 8000554:	b15d      	cbz	r5, 800056e <__udivmoddi4+0x1fe>
 8000556:	ebb8 0203 	subs.w	r2, r8, r3
 800055a:	eb64 0409 	sbc.w	r4, r4, r9
 800055e:	fa04 f606 	lsl.w	r6, r4, r6
 8000562:	fa22 f301 	lsr.w	r3, r2, r1
 8000566:	431e      	orrs	r6, r3
 8000568:	40cc      	lsrs	r4, r1
 800056a:	e9c5 6400 	strd	r6, r4, [r5]
 800056e:	2100      	movs	r1, #0
 8000570:	e74f      	b.n	8000412 <__udivmoddi4+0xa2>
 8000572:	fbb1 fcf2 	udiv	ip, r1, r2
 8000576:	0c01      	lsrs	r1, r0, #16
 8000578:	ea41 410e 	orr.w	r1, r1, lr, lsl #16
 800057c:	b280      	uxth	r0, r0
 800057e:	ea40 4201 	orr.w	r2, r0, r1, lsl #16
 8000582:	463b      	mov	r3, r7
 8000584:	4638      	mov	r0, r7
 8000586:	463c      	mov	r4, r7
 8000588:	46b8      	mov	r8, r7
 800058a:	46be      	mov	lr, r7
 800058c:	2620      	movs	r6, #32
 800058e:	fbb1 f1f7 	udiv	r1, r1, r7
 8000592:	eba2 0208 	sub.w	r2, r2, r8
 8000596:	ea41 410c 	orr.w	r1, r1, ip, lsl #16
 800059a:	e766      	b.n	800046a <__udivmoddi4+0xfa>
 800059c:	4601      	mov	r1, r0
 800059e:	e718      	b.n	80003d2 <__udivmoddi4+0x62>
 80005a0:	4610      	mov	r0, r2
 80005a2:	e72c      	b.n	80003fe <__udivmoddi4+0x8e>
 80005a4:	f1c6 0220 	rsb	r2, r6, #32
 80005a8:	fa2e f302 	lsr.w	r3, lr, r2
 80005ac:	40b7      	lsls	r7, r6
 80005ae:	40b1      	lsls	r1, r6
 80005b0:	fa20 f202 	lsr.w	r2, r0, r2
 80005b4:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 80005b8:	430a      	orrs	r2, r1
 80005ba:	fbb3 f8fe 	udiv	r8, r3, lr
 80005be:	b2bc      	uxth	r4, r7
 80005c0:	fb0e 3318 	mls	r3, lr, r8, r3
 80005c4:	0c11      	lsrs	r1, r2, #16
 80005c6:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 80005ca:	fb08 f904 	mul.w	r9, r8, r4
 80005ce:	40b0      	lsls	r0, r6
 80005d0:	4589      	cmp	r9, r1
 80005d2:	ea4f 4310 	mov.w	r3, r0, lsr #16
 80005d6:	b280      	uxth	r0, r0
 80005d8:	d93e      	bls.n	8000658 <__udivmoddi4+0x2e8>
 80005da:	1879      	adds	r1, r7, r1
 80005dc:	f108 3cff 	add.w	ip, r8, #4294967295
 80005e0:	d201      	bcs.n	80005e6 <__udivmoddi4+0x276>
 80005e2:	4589      	cmp	r9, r1
 80005e4:	d81f      	bhi.n	8000626 <__udivmoddi4+0x2b6>
 80005e6:	eba1 0109 	sub.w	r1, r1, r9
 80005ea:	fbb1 f9fe 	udiv	r9, r1, lr
 80005ee:	fb09 f804 	mul.w	r8, r9, r4
 80005f2:	fb0e 1119 	mls	r1, lr, r9, r1
 80005f6:	b292      	uxth	r2, r2
 80005f8:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 80005fc:	4542      	cmp	r2, r8
 80005fe:	d229      	bcs.n	8000654 <__udivmoddi4+0x2e4>
 8000600:	18ba      	adds	r2, r7, r2
 8000602:	f109 31ff 	add.w	r1, r9, #4294967295
 8000606:	d2c4      	bcs.n	8000592 <__udivmoddi4+0x222>
 8000608:	4542      	cmp	r2, r8
 800060a:	d2c2      	bcs.n	8000592 <__udivmoddi4+0x222>
 800060c:	f1a9 0102 	sub.w	r1, r9, #2
 8000610:	443a      	add	r2, r7
 8000612:	e7be      	b.n	8000592 <__udivmoddi4+0x222>
 8000614:	45f0      	cmp	r8, lr
 8000616:	d29d      	bcs.n	8000554 <__udivmoddi4+0x1e4>
 8000618:	ebbe 0302 	subs.w	r3, lr, r2
 800061c:	eb6c 0c07 	sbc.w	ip, ip, r7
 8000620:	3801      	subs	r0, #1
 8000622:	46e1      	mov	r9, ip
 8000624:	e796      	b.n	8000554 <__udivmoddi4+0x1e4>
 8000626:	eba7 0909 	sub.w	r9, r7, r9
 800062a:	4449      	add	r1, r9
 800062c:	f1a8 0c02 	sub.w	ip, r8, #2
 8000630:	fbb1 f9fe 	udiv	r9, r1, lr
 8000634:	fb09 f804 	mul.w	r8, r9, r4
 8000638:	e7db      	b.n	80005f2 <__udivmoddi4+0x282>
 800063a:	4673      	mov	r3, lr
 800063c:	e77f      	b.n	800053e <__udivmoddi4+0x1ce>
 800063e:	4650      	mov	r0, sl
 8000640:	e766      	b.n	8000510 <__udivmoddi4+0x1a0>
 8000642:	4608      	mov	r0, r1
 8000644:	e6fd      	b.n	8000442 <__udivmoddi4+0xd2>
 8000646:	443b      	add	r3, r7
 8000648:	3a02      	subs	r2, #2
 800064a:	e733      	b.n	80004b4 <__udivmoddi4+0x144>
 800064c:	f1ac 0c02 	sub.w	ip, ip, #2
 8000650:	443b      	add	r3, r7
 8000652:	e71c      	b.n	800048e <__udivmoddi4+0x11e>
 8000654:	4649      	mov	r1, r9
 8000656:	e79c      	b.n	8000592 <__udivmoddi4+0x222>
 8000658:	eba1 0109 	sub.w	r1, r1, r9
 800065c:	46c4      	mov	ip, r8
 800065e:	fbb1 f9fe 	udiv	r9, r1, lr
 8000662:	fb09 f804 	mul.w	r8, r9, r4
 8000666:	e7c4      	b.n	80005f2 <__udivmoddi4+0x282>

08000668 <__aeabi_idiv0>:
 8000668:	4770      	bx	lr
 800066a:	bf00      	nop

0800066c <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler: 
  ldr   sp, =_estack       /* set stack pointer */
 800066c:	f8df d034 	ldr.w	sp, [pc, #52]	@ 80006a4 <LoopFillZerobss+0x14>
 
/* Copy the data segment initializers from flash to SRAM */  
  movs  r1, #0
 8000670:	2100      	movs	r1, #0
  b  LoopCopyDataInit
 8000672:	e003      	b.n	800067c <LoopCopyDataInit>

08000674 <CopyDataInit>:

CopyDataInit:
  ldr  r3, =_sidata
 8000674:	4b0c      	ldr	r3, [pc, #48]	@ (80006a8 <LoopFillZerobss+0x18>)
  ldr  r3, [r3, r1]
 8000676:	585b      	ldr	r3, [r3, r1]
  str  r3, [r0, r1]
 8000678:	5043      	str	r3, [r0, r1]
  adds  r1, r1, #4
 800067a:	3104      	adds	r1, #4

0800067c <LoopCopyDataInit>:
    
LoopCopyDataInit:
  ldr  r0, =_sdata
 800067c:	480b      	ldr	r0, [pc, #44]	@ (80006ac <LoopFillZerobss+0x1c>)
  ldr  r3, =_edata
 800067e:	4b0c      	ldr	r3, [pc, #48]	@ (80006b0 <LoopFillZerobss+0x20>)
  adds  r2, r0, r1
 8000680:	1842      	adds	r2, r0, r1
  cmp  r2, r3
 8000682:	429a      	cmp	r2, r3
  bcc  CopyDataInit
 8000684:	d3f6      	bcc.n	8000674 <CopyDataInit>
  ldr  r2, =_sbss
 8000686:	4a0b      	ldr	r2, [pc, #44]	@ (80006b4 <LoopFillZerobss+0x24>)
  b  LoopFillZerobss
 8000688:	e002      	b.n	8000690 <LoopFillZerobss>

0800068a <FillZerobss>:
/* Zero fill the bss segment. */  
FillZerobss:
  movs  r3, #0
 800068a:	2300      	movs	r3, #0
  str  r3, [r2], #4
 800068c:	f842 3b04 	str.w	r3, [r2], #4

08000690 <LoopFillZerobss>:
    
LoopFillZerobss:
  ldr  r3, = _ebss
 8000690:	4b09      	ldr	r3, [pc, #36]	@ (80006b8 <LoopFillZerobss+0x28>)
  cmp  r2, r3
 8000692:	429a      	cmp	r2, r3
  bcc  FillZerobss
 8000694:	d3f9      	bcc.n	800068a <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit   
 8000696:	f003 fa7b 	bl	8003b90 <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 800069a:	f022 fd23 	bl	80230e4 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 800069e:	f001 fa41 	bl	8001b24 <main>
  bx  lr    
 80006a2:	4770      	bx	lr
  ldr   sp, =_estack       /* set stack pointer */
 80006a4:	20030000 	.word	0x20030000
  ldr  r3, =_sidata
 80006a8:	08025f28 	.word	0x08025f28
  ldr  r0, =_sdata
 80006ac:	20000000 	.word	0x20000000
  ldr  r3, =_edata
 80006b0:	20000274 	.word	0x20000274
  ldr  r2, =_sbss
 80006b4:	20000480 	.word	0x20000480
  ldr  r3, = _ebss
 80006b8:	20014d84 	.word	0x20014d84

080006bc <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 80006bc:	e7fe      	b.n	80006bc <ADC_IRQHandler>

080006be <MX_TouchGFX_PreOSInit>:
/**
 * PreOS Initialization function
 */
void MX_TouchGFX_PreOSInit(void)
{
}
 80006be:	4770      	bx	lr

080006c0 <MX_TouchGFX_Init>:

/**
 * Initialize TouchGFX application
 */
void MX_TouchGFX_Init(void)
{
 80006c0:	b508      	push	{r3, lr}
    // Calling forward to touchgfx_init in C++ domain
    touchgfx_components_init();
 80006c2:	f000 fdbf 	bl	8001244 <touchgfx_components_init>
    touchgfx_init();
}
 80006c6:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    touchgfx_init();
 80006ca:	f000 bd41 	b.w	8001150 <touchgfx_init>

080006ce <TouchGFX_Task>:
 * TouchGFX application thread
 */
void TouchGFX_Task(void* argument)
{
    // Calling forward to touchgfx_taskEntry in C++ domain
    touchgfx_taskEntry();
 80006ce:	f000 bdbb 	b.w	8001248 <touchgfx_taskEntry>

080006d2 <_ZN20STM32TouchControllerD1Ev>:
 * @brief This class specializes TouchController Interface.
 *
 * @sa touchgfx::TouchController
 */

class STM32TouchController : public touchgfx::TouchController
 80006d2:	4770      	bx	lr

080006d4 <_ZN20STM32TouchControllerD0Ev>:
 80006d4:	b510      	push	{r4, lr}
 80006d6:	2104      	movs	r1, #4
 80006d8:	4604      	mov	r4, r0
 80006da:	f021 fb16 	bl	8021d0a <_ZdlPvj>
 80006de:	4620      	mov	r0, r4
 80006e0:	bd10      	pop	{r4, pc}
	...

080006e4 <_Z11BSP_TS_Inittt>:
  * @param  XSize: The maximum X size of the TS area on LCD
  * @param  YSize: The maximum Y size of the TS area on LCD
  * @retval TS_OK: if all initializations are OK. Other value if error.
  */
uint8_t BSP_TS_Init(uint16_t XSize, uint16_t YSize)
{
 80006e4:	b538      	push	{r3, r4, r5, lr}
    uint8_t ret = TS_ERROR;

    /* Initialize x and y positions boundaries */
    TsXBoundary = XSize;
 80006e6:	4b0c      	ldr	r3, [pc, #48]	@ (8000718 <_Z11BSP_TS_Inittt+0x34>)
    TsYBoundary = YSize;

    /* Read ID and verify if the IO expander is ready */
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 80006e8:	4c0c      	ldr	r4, [pc, #48]	@ (800071c <_Z11BSP_TS_Inittt+0x38>)
    TsXBoundary = XSize;
 80006ea:	8018      	strh	r0, [r3, #0]
    TsYBoundary = YSize;
 80006ec:	4b0c      	ldr	r3, [pc, #48]	@ (8000720 <_Z11BSP_TS_Inittt+0x3c>)
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 80006ee:	2082      	movs	r0, #130	@ 0x82
    TsYBoundary = YSize;
 80006f0:	8019      	strh	r1, [r3, #0]
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 80006f2:	6863      	ldr	r3, [r4, #4]
 80006f4:	4798      	blx	r3
 80006f6:	f640 0311 	movw	r3, #2065	@ 0x811
 80006fa:	4298      	cmp	r0, r3
 80006fc:	d10a      	bne.n	8000714 <_Z11BSP_TS_Inittt+0x30>
    {
        /* Initialize the TS driver structure */
        TsDrv = &stmpe811_ts_drv;
 80006fe:	4d09      	ldr	r5, [pc, #36]	@ (8000724 <_Z11BSP_TS_Inittt+0x40>)
    }

    if (ret == TS_OK)
    {
        /* Initialize the LL TS Driver */
        TsDrv->Init(TS_I2C_ADDRESS);
 8000700:	6823      	ldr	r3, [r4, #0]
        TsDrv = &stmpe811_ts_drv;
 8000702:	602c      	str	r4, [r5, #0]
        TsDrv->Init(TS_I2C_ADDRESS);
 8000704:	2082      	movs	r0, #130	@ 0x82
 8000706:	4798      	blx	r3
        TsDrv->Start(TS_I2C_ADDRESS);
 8000708:	682b      	ldr	r3, [r5, #0]
 800070a:	2082      	movs	r0, #130	@ 0x82
 800070c:	68db      	ldr	r3, [r3, #12]
 800070e:	4798      	blx	r3
 8000710:	2000      	movs	r0, #0
    }

    return ret;
}
 8000712:	bd38      	pop	{r3, r4, r5, pc}
    uint8_t ret = TS_ERROR;
 8000714:	2001      	movs	r0, #1
 8000716:	e7fc      	b.n	8000712 <_Z11BSP_TS_Inittt+0x2e>
 8000718:	200004a6 	.word	0x200004a6
 800071c:	2000009c 	.word	0x2000009c
 8000720:	200004a4 	.word	0x200004a4
 8000724:	200004a8 	.word	0x200004a8

08000728 <_ZN20STM32TouchController4initEv>:
    BSP_TS_Init(240, 320);
 8000728:	f44f 71a0 	mov.w	r1, #320	@ 0x140
 800072c:	20f0      	movs	r0, #240	@ 0xf0
 800072e:	f7ff bfd9 	b.w	80006e4 <_Z11BSP_TS_Inittt>
	...

08000734 <_Z15BSP_TS_GetStateP15TS_StateTypeDef>:
/**
  * @brief  Returns status and positions of the touch screen.
  * @param  TsState: Pointer to touch screen current state structure
  */
void BSP_TS_GetState(TS_StateTypeDef* TsState)
{
 8000734:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    static uint32_t _x = 0, _y = 0;
    uint16_t xDiff, yDiff, x, y, xr, yr;

    TsState->TouchDetected = TsDrv->DetectTouch(TS_I2C_ADDRESS);
 8000736:	4d39      	ldr	r5, [pc, #228]	@ (800081c <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xe8>)
 8000738:	682b      	ldr	r3, [r5, #0]
{
 800073a:	4604      	mov	r4, r0
    TsState->TouchDetected = TsDrv->DetectTouch(TS_I2C_ADDRESS);
 800073c:	691b      	ldr	r3, [r3, #16]
 800073e:	2082      	movs	r0, #130	@ 0x82
 8000740:	4798      	blx	r3
 8000742:	8020      	strh	r0, [r4, #0]

    if (TsState->TouchDetected)
 8000744:	2800      	cmp	r0, #0
 8000746:	d04e      	beq.n	80007e6 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xb2>
    {
        TsDrv->GetXY(TS_I2C_ADDRESS, &x, &y);
 8000748:	682b      	ldr	r3, [r5, #0]
 800074a:	f10d 0206 	add.w	r2, sp, #6
 800074e:	695b      	ldr	r3, [r3, #20]
 8000750:	a901      	add	r1, sp, #4
 8000752:	2082      	movs	r0, #130	@ 0x82
 8000754:	4798      	blx	r3

        if (isRevD)
 8000756:	4b32      	ldr	r3, [pc, #200]	@ (8000820 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xec>)
 8000758:	781b      	ldrb	r3, [r3, #0]
 800075a:	2b00      	cmp	r3, #0
 800075c:	d04b      	beq.n	80007f6 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xc2>
        {
            //Ensures the coordinates are within the screen
            if (y > 3700)
 800075e:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 8000762:	f640 6374 	movw	r3, #3700	@ 0xe74
 8000766:	429a      	cmp	r2, r3
 8000768:	d93f      	bls.n	80007ea <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xb6>
            {
                y = 3700;
 800076a:	f8ad 3006 	strh.w	r3, [sp, #6]

            /* Y value first correction */
            y -= 180;

            /* Y value second correction */
            y = 3520 - y;
 800076e:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 8000772:	1a9b      	subs	r3, r3, r2
        }
        else
        {
            /* Y value first correction */
            y -= 360;
 8000774:	b29b      	uxth	r3, r3

        /* Y value second correction */
        yr = y / 11;

        /* Return y position value */
        if (yr <= 0)
 8000776:	2b0a      	cmp	r3, #10
 8000778:	d942      	bls.n	8000800 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xcc>
        yr = y / 11;
 800077a:	220b      	movs	r2, #11
 800077c:	fbb3 f3f2 	udiv	r3, r3, r2
        {
            yr = 0;
        }
        else if (yr > TsYBoundary)
 8000780:	4a28      	ldr	r2, [pc, #160]	@ (8000824 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xf0>)
 8000782:	8812      	ldrh	r2, [r2, #0]
 8000784:	4293      	cmp	r3, r2
 8000786:	d901      	bls.n	800078c <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x58>
        {
            yr = TsYBoundary - 1;
 8000788:	3a01      	subs	r2, #1
 800078a:	b293      	uxth	r3, r2
        else
        {}
        y = yr;

        /* X value first correction */
        if (x <= 3000)
 800078c:	f8bd 2004 	ldrh.w	r2, [sp, #4]
 8000790:	4825      	ldr	r0, [pc, #148]	@ (8000828 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xf4>)
 8000792:	f640 31b8 	movw	r1, #3000	@ 0xbb8
 8000796:	428a      	cmp	r2, r1
 8000798:	d834      	bhi.n	8000804 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xd0>
        {
            x = 3870 - x;
 800079a:	f5c2 6271 	rsb	r2, r2, #3856	@ 0xf10
 800079e:	320e      	adds	r2, #14
        }
        else
        {}

        x = xr;
        xDiff = x > _x ? (x - _x) : (_x - x);
 80007a0:	6801      	ldr	r1, [r0, #0]
            x = 3870 - x;
 80007a2:	b292      	uxth	r2, r2
        xr = x / 15;
 80007a4:	250f      	movs	r5, #15
 80007a6:	fbb2 f2f5 	udiv	r2, r2, r5
        else if (xr > TsXBoundary)
 80007aa:	4d20      	ldr	r5, [pc, #128]	@ (800082c <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xf8>)
 80007ac:	882d      	ldrh	r5, [r5, #0]
 80007ae:	42aa      	cmp	r2, r5
            xr = TsXBoundary - 1;
 80007b0:	bf84      	itt	hi
 80007b2:	f105 35ff 	addhi.w	r5, r5, #4294967295
 80007b6:	b2aa      	uxthhi	r2, r5
        xDiff = x > _x ? (x - _x) : (_x - x);
 80007b8:	428a      	cmp	r2, r1
 80007ba:	4615      	mov	r5, r2
 80007bc:	b28e      	uxth	r6, r1
 80007be:	d92a      	bls.n	8000816 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xe2>
 80007c0:	1b92      	subs	r2, r2, r6
 80007c2:	b291      	uxth	r1, r2
        yDiff = y > _y ? (y - _y) : (_y - y);
 80007c4:	4e1a      	ldr	r6, [pc, #104]	@ (8000830 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xfc>)
 80007c6:	6837      	ldr	r7, [r6, #0]
 80007c8:	42bb      	cmp	r3, r7
 80007ca:	b2ba      	uxth	r2, r7
 80007cc:	bf8c      	ite	hi
 80007ce:	1a9a      	subhi	r2, r3, r2
 80007d0:	1ad2      	subls	r2, r2, r3
 80007d2:	b292      	uxth	r2, r2

        if (xDiff + yDiff > 5)
 80007d4:	4411      	add	r1, r2
 80007d6:	2905      	cmp	r1, #5
        {
            _x = x;
 80007d8:	bfc4      	itt	gt
 80007da:	6005      	strgt	r5, [r0, #0]
            _y = y;
 80007dc:	6033      	strgt	r3, [r6, #0]
        }

        /* Update the X position */
        TsState->X = _x;
 80007de:	6803      	ldr	r3, [r0, #0]
 80007e0:	8063      	strh	r3, [r4, #2]

        /* Update the Y position */
        TsState->Y = _y;
 80007e2:	6833      	ldr	r3, [r6, #0]
 80007e4:	80a3      	strh	r3, [r4, #4]
    }
}
 80007e6:	b003      	add	sp, #12
 80007e8:	bdf0      	pop	{r4, r5, r6, r7, pc}
            else if (y < 180)
 80007ea:	2ab3      	cmp	r2, #179	@ 0xb3
                y = 180;
 80007ec:	bf9c      	itt	ls
 80007ee:	22b4      	movls	r2, #180	@ 0xb4
 80007f0:	f8ad 2006 	strhls.w	r2, [sp, #6]
 80007f4:	e7bb      	b.n	800076e <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x3a>
            y -= 360;
 80007f6:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 80007fa:	f5a3 73b4 	sub.w	r3, r3, #360	@ 0x168
 80007fe:	e7b9      	b.n	8000774 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x40>
            yr = 0;
 8000800:	2300      	movs	r3, #0
 8000802:	e7c3      	b.n	800078c <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x58>
            x = 3800 - x;
 8000804:	f5c2 626d 	rsb	r2, r2, #3792	@ 0xed0
 8000808:	3208      	adds	r2, #8
 800080a:	b292      	uxth	r2, r2
        if (xr <= 0)
 800080c:	2a0e      	cmp	r2, #14
        xDiff = x > _x ? (x - _x) : (_x - x);
 800080e:	6801      	ldr	r1, [r0, #0]
        if (xr <= 0)
 8000810:	d8c8      	bhi.n	80007a4 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x70>
        xDiff = x > _x ? (x - _x) : (_x - x);
 8000812:	2500      	movs	r5, #0
            xr = 0;
 8000814:	462a      	mov	r2, r5
        xDiff = x > _x ? (x - _x) : (_x - x);
 8000816:	1a89      	subs	r1, r1, r2
 8000818:	b289      	uxth	r1, r1
 800081a:	e7d3      	b.n	80007c4 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x90>
 800081c:	200004a8 	.word	0x200004a8
 8000820:	20002fe4 	.word	0x20002fe4
 8000824:	200004a4 	.word	0x200004a4
 8000828:	200004a0 	.word	0x200004a0
 800082c:	200004a6 	.word	0x200004a6
 8000830:	2000049c 	.word	0x2000049c

08000834 <_ZN20STM32TouchController11sampleTouchERlS0_>:
{
 8000834:	b537      	push	{r0, r1, r2, r4, r5, lr}
    BSP_TS_GetState(&state);
 8000836:	4668      	mov	r0, sp
{
 8000838:	460d      	mov	r5, r1
 800083a:	4614      	mov	r4, r2
    BSP_TS_GetState(&state);
 800083c:	f7ff ff7a 	bl	8000734 <_Z15BSP_TS_GetStateP15TS_StateTypeDef>
    if (state.TouchDetected)
 8000840:	f8bd 0000 	ldrh.w	r0, [sp]
 8000844:	b130      	cbz	r0, 8000854 <_ZN20STM32TouchController11sampleTouchERlS0_+0x20>
        x = state.X;
 8000846:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800084a:	602b      	str	r3, [r5, #0]
        y = state.Y;
 800084c:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8000850:	6023      	str	r3, [r4, #0]
        return true;
 8000852:	2001      	movs	r0, #1
}
 8000854:	b003      	add	sp, #12
 8000856:	bd30      	pop	{r4, r5, pc}

08000858 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>:
/*
 * Sets a pin high.
 */
void GPIO::set(GPIO_ID id)
{
    switch (id)
 8000858:	2803      	cmp	r0, #3
 800085a:	d821      	bhi.n	80008a0 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x48>
 800085c:	e8df f000 	tbb	[pc, r0]
 8000860:	19120b02 	.word	0x19120b02
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_SET(id));
 8000864:	4b0f      	ldr	r3, [pc, #60]	@ (80008a4 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x4c>)
 8000866:	681a      	ldr	r2, [r3, #0]
 8000868:	fab2 f282 	clz	r2, r2
 800086c:	0952      	lsrs	r2, r2, #5
 800086e:	2104      	movs	r1, #4
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_SET(id));
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_SET(id));
 8000870:	480d      	ldr	r0, [pc, #52]	@ (80008a8 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x50>)
 8000872:	f003 bc21 	b.w	80040b8 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_SET(id));
 8000876:	4b0b      	ldr	r3, [pc, #44]	@ (80008a4 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x4c>)
 8000878:	685a      	ldr	r2, [r3, #4]
 800087a:	fab2 f282 	clz	r2, r2
 800087e:	0952      	lsrs	r2, r2, #5
 8000880:	2108      	movs	r1, #8
 8000882:	e7f5      	b.n	8000870 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x18>
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_SET(id));
 8000884:	4b07      	ldr	r3, [pc, #28]	@ (80008a4 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x4c>)
 8000886:	689a      	ldr	r2, [r3, #8]
 8000888:	fab2 f282 	clz	r2, r2
 800088c:	0952      	lsrs	r2, r2, #5
 800088e:	2110      	movs	r1, #16
 8000890:	e7ee      	b.n	8000870 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x18>
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_SET(id));
 8000892:	4b04      	ldr	r3, [pc, #16]	@ (80008a4 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x4c>)
 8000894:	68da      	ldr	r2, [r3, #12]
 8000896:	fab2 f282 	clz	r2, r2
 800089a:	0952      	lsrs	r2, r2, #5
 800089c:	2120      	movs	r1, #32
 800089e:	e7e7      	b.n	8000870 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x18>
#endif
        break;
    }
}
 80008a0:	4770      	bx	lr
 80008a2:	bf00      	nop
 80008a4:	200004ac 	.word	0x200004ac
 80008a8:	40021000 	.word	0x40021000

080008ac <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>:
/*
 * Sets a pin low.
 */
void GPIO::clear(GPIO_ID id)
{
    switch (id)
 80008ac:	2803      	cmp	r0, #3
 80008ae:	d821      	bhi.n	80008f4 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x48>
 80008b0:	e8df f000 	tbb	[pc, r0]
 80008b4:	19120b02 	.word	0x19120b02
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_RESET(id));
 80008b8:	4b0f      	ldr	r3, [pc, #60]	@ (80008f8 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x4c>)
 80008ba:	681a      	ldr	r2, [r3, #0]
 80008bc:	3a00      	subs	r2, #0
 80008be:	bf18      	it	ne
 80008c0:	2201      	movne	r2, #1
 80008c2:	2104      	movs	r1, #4
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_RESET(id));
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_RESET(id));
 80008c4:	480d      	ldr	r0, [pc, #52]	@ (80008fc <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x50>)
 80008c6:	f003 bbf7 	b.w	80040b8 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_RESET(id));
 80008ca:	4b0b      	ldr	r3, [pc, #44]	@ (80008f8 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x4c>)
 80008cc:	685a      	ldr	r2, [r3, #4]
 80008ce:	3a00      	subs	r2, #0
 80008d0:	bf18      	it	ne
 80008d2:	2201      	movne	r2, #1
 80008d4:	2108      	movs	r1, #8
 80008d6:	e7f5      	b.n	80008c4 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x18>
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_RESET(id));
 80008d8:	4b07      	ldr	r3, [pc, #28]	@ (80008f8 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x4c>)
 80008da:	689a      	ldr	r2, [r3, #8]
 80008dc:	3a00      	subs	r2, #0
 80008de:	bf18      	it	ne
 80008e0:	2201      	movne	r2, #1
 80008e2:	2110      	movs	r1, #16
 80008e4:	e7ee      	b.n	80008c4 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x18>
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_RESET(id));
 80008e6:	4b04      	ldr	r3, [pc, #16]	@ (80008f8 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x4c>)
 80008e8:	68da      	ldr	r2, [r3, #12]
 80008ea:	3a00      	subs	r2, #0
 80008ec:	bf18      	it	ne
 80008ee:	2201      	movne	r2, #1
 80008f0:	2120      	movs	r1, #32
 80008f2:	e7e7      	b.n	80008c4 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x18>
#endif
        break;
    }
}
 80008f4:	4770      	bx	lr
 80008f6:	bf00      	nop
 80008f8:	200004ac 	.word	0x200004ac
 80008fc:	40021000 	.word	0x40021000

08000900 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>:
/*
 * Toggles a pin.
 */
void GPIO::toggle(GPIO_ID id)
{
    switch (id)
 8000900:	2803      	cmp	r0, #3
 8000902:	d80d      	bhi.n	8000920 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x20>
 8000904:	e8df f000 	tbb	[pc, r0]
 8000908:	0a080602 	.word	0x0a080602
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_TogglePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
 800090c:	2104      	movs	r1, #4
        HAL_GPIO_TogglePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_TogglePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
 800090e:	4805      	ldr	r0, [pc, #20]	@ (8000924 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x24>)
 8000910:	f003 bbd7 	b.w	80040c2 <HAL_GPIO_TogglePin>
        HAL_GPIO_TogglePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
 8000914:	2108      	movs	r1, #8
 8000916:	e7fa      	b.n	800090e <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0xe>
        HAL_GPIO_TogglePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 8000918:	2110      	movs	r1, #16
 800091a:	e7f8      	b.n	800090e <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0xe>
        HAL_GPIO_TogglePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
 800091c:	2120      	movs	r1, #32
 800091e:	e7f6      	b.n	800090e <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0xe>
#endif
        break;
    }
}
 8000920:	4770      	bx	lr
 8000922:	bf00      	nop
 8000924:	40021000 	.word	0x40021000

08000928 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE>:

/*
 * Gets the state of a pin.
 */
bool GPIO::get(GPIO_ID id)
{
 8000928:	b508      	push	{r3, lr}
    GPIO_PinState bitstatus = GPIO_PIN_RESET;
    switch (id)
 800092a:	2803      	cmp	r0, #3
 800092c:	d811      	bhi.n	8000952 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x2a>
 800092e:	e8df f000 	tbb	[pc, r0]
 8000932:	0a02      	.short	0x0a02
 8000934:	0e0c      	.short	0x0e0c
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        bitstatus = HAL_GPIO_ReadPin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
 8000936:	2104      	movs	r1, #4
        bitstatus = HAL_GPIO_ReadPin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        bitstatus = HAL_GPIO_ReadPin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
 8000938:	4807      	ldr	r0, [pc, #28]	@ (8000958 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x30>)
 800093a:	f003 fbb7 	bl	80040ac <HAL_GPIO_ReadPin>
#endif
        break;
    }
    return (bitstatus == GPIO_PIN_SET);
}
 800093e:	1e43      	subs	r3, r0, #1
 8000940:	4258      	negs	r0, r3
 8000942:	4158      	adcs	r0, r3
 8000944:	bd08      	pop	{r3, pc}
        bitstatus = HAL_GPIO_ReadPin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
 8000946:	2108      	movs	r1, #8
 8000948:	e7f6      	b.n	8000938 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x10>
        bitstatus = HAL_GPIO_ReadPin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 800094a:	2110      	movs	r1, #16
 800094c:	e7f4      	b.n	8000938 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x10>
        bitstatus = HAL_GPIO_ReadPin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
 800094e:	2120      	movs	r1, #32
 8000950:	e7f2      	b.n	8000938 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x10>
    switch (id)
 8000952:	2000      	movs	r0, #0
 8000954:	e7f3      	b.n	800093e <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x16>
 8000956:	bf00      	nop
 8000958:	40021000 	.word	0x40021000

0800095c <_ZN8touchgfx4GPIO4initEv>:
{
 800095c:	b570      	push	{r4, r5, r6, lr}
 800095e:	4d08      	ldr	r5, [pc, #32]	@ (8000980 <_ZN8touchgfx4GPIO4initEv+0x24>)
    for (int id = 0; id <= 4; id++)
 8000960:	2400      	movs	r4, #0
                GPIO_InvertedLevels[id] = 1;
 8000962:	2601      	movs	r6, #1
        if (GPIO::get(static_cast<GPIO_ID>(id)))
 8000964:	b2e0      	uxtb	r0, r4
 8000966:	f7ff ffdf 	bl	8000928 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE>
 800096a:	b118      	cbz	r0, 8000974 <_ZN8touchgfx4GPIO4initEv+0x18>
            if (GPIO_InvertedLevels[id] != 1)
 800096c:	682b      	ldr	r3, [r5, #0]
 800096e:	2b01      	cmp	r3, #1
                GPIO_InvertedLevels[id] = 1;
 8000970:	bf18      	it	ne
 8000972:	602e      	strne	r6, [r5, #0]
    for (int id = 0; id <= 4; id++)
 8000974:	3401      	adds	r4, #1
 8000976:	2c05      	cmp	r4, #5
 8000978:	f105 0504 	add.w	r5, r5, #4
 800097c:	d1f2      	bne.n	8000964 <_ZN8touchgfx4GPIO4initEv+0x8>
}
 800097e:	bd70      	pop	{r4, r5, r6, pc}
 8000980:	200004ac 	.word	0x200004ac

08000984 <_ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE>:
     * @note A screen transition must occur before this takes effect!
     */
    virtual void setDisplayOrientation(DisplayOrientation orientation)
    {
        requestedOrientation = orientation;
        displayOrientationChangeRequested = true;
 8000984:	2301      	movs	r3, #1
        requestedOrientation = orientation;
 8000986:	f880 1078 	strb.w	r1, [r0, #120]	@ 0x78
        displayOrientationChangeRequested = true;
 800098a:	f880 3079 	strb.w	r3, [r0, #121]	@ 0x79
    }
 800098e:	4770      	bx	lr

08000990 <_ZN8touchgfx3HAL11submitGPU2DEv>:
     *
     * Only implemented on systems with the GPU2D IP.
     */
    virtual void submitGPU2D()
    {
    }
 8000990:	4770      	bx	lr

08000992 <_ZN8touchgfx3HAL9sampleKeyERh>:
     */
    virtual bool sampleKey(uint8_t& key)
    {
        (void)key; // Unused variable
        return false;
    }
 8000992:	2000      	movs	r0, #0
 8000994:	4770      	bx	lr
	...

08000998 <_ZN8touchgfx3HAL19setAnimationStorageEPv>:
     * @see setFrameBufferStartAddresses
     */
    virtual void setAnimationStorage(void* animationStorage)
    {
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
        USE_ANIMATION_STORAGE = animationStorage != 0;
 8000998:	4b03      	ldr	r3, [pc, #12]	@ (80009a8 <_ZN8touchgfx3HAL19setAnimationStorageEPv+0x10>)
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
 800099a:	6441      	str	r1, [r0, #68]	@ 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
 800099c:	3900      	subs	r1, #0
 800099e:	bf18      	it	ne
 80009a0:	2101      	movne	r1, #1
 80009a2:	7019      	strb	r1, [r3, #0]
    }
 80009a4:	4770      	bx	lr
 80009a6:	bf00      	nop
 80009a8:	20014041 	.word	0x20014041

080009ac <_ZN8touchgfx3HAL16waitForLTDCLinesEt>:
     *
     * @param numberOfLines Number of lines to wait.
     */
    virtual void waitForLTDCLines(uint16_t numberOfLines)
    {
    }
 80009ac:	4770      	bx	lr

080009ae <_ZNK8touchgfx3HAL18getFlashDataReaderEv>:
     * @return the FlashDataReader.
     */
    virtual FlashDataReader* getFlashDataReader() const
    {
        return 0;
    }
 80009ae:	2000      	movs	r0, #0
 80009b0:	4770      	bx	lr

080009b2 <_ZN8touchgfx3HAL9taskDelayEt>:
     *
     * @see registerTaskDelayFunction
     */
    virtual void taskDelay(uint16_t ms)
    {
        if (taskDelayFunc)
 80009b2:	6b83      	ldr	r3, [r0, #56]	@ 0x38
 80009b4:	b10b      	cbz	r3, 80009ba <_ZN8touchgfx3HAL9taskDelayEt+0x8>
        {
            taskDelayFunc(ms);
 80009b6:	4608      	mov	r0, r1
 80009b8:	4718      	bx	r3
        }
    }
 80009ba:	4770      	bx	lr

080009bc <_ZN8touchgfx3HAL17getTFTCurrentLineEv>:
     *         implemented".
     */
    virtual uint16_t getTFTCurrentLine()
    {
        return 0xFFFFu;
    }
 80009bc:	f64f 70ff 	movw	r0, #65535	@ 0xffff
 80009c0:	4770      	bx	lr

080009c2 <_ZN8touchgfx3HAL10getDMATypeEv>:
     *
     * @return a DMAType value of the concrete DMA implementation.
     */
    virtual DMAType getDMAType()
    {
        return dma.getDMAType();
 80009c2:	6840      	ldr	r0, [r0, #4]
 80009c4:	6803      	ldr	r3, [r0, #0]
 80009c6:	699b      	ldr	r3, [r3, #24]
 80009c8:	4718      	bx	r3

080009ca <_ZN8touchgfx3HAL25partialLTDCDeadlineMissedEv>:
     * This empty function can be overridden to e.g. output this error condition
     * on a pin.
     */
    virtual void partialLTDCDeadlineMissed()
    {
    }
 80009ca:	4770      	bx	lr

080009cc <_ZN8touchgfx3HAL15InvalidateCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Hardware to Software indicating the cache should be invalidated.
     */
    virtual void InvalidateCache()
    {
    }
 80009cc:	4770      	bx	lr

080009ce <_ZN8touchgfx3HAL10FlushCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Software to Hardware indicating the cache should be invalidated.
     */
    virtual void FlushCache()
    {
    }
 80009ce:	4770      	bx	lr

080009d0 <_ZN8touchgfx3HAL22InvalidateTextureCacheEv>:
     * Called on every tick before drawing into the framebuffer to enable
     * invalidation of any caches that may be incoherent with main memory.
     */
    virtual void InvalidateTextureCache()
    {
    }
 80009d0:	4770      	bx	lr

080009d2 <_ZN11TouchGFXHALD1Ev>:
 *
 * @brief HAL implementation for TouchGFX.
 *
 * @sa HAL
 */
class TouchGFXHAL : public TouchGFXGeneratedHAL
 80009d2:	4770      	bx	lr

080009d4 <_ZN11TouchGFXHAL10initializeEv>:
LOCATION_PRAGMA_NOLOAD("TouchGFX_Framebuffer")
uint32_t animationStorage[(240 * 320 * 2 + 3) / 4] LOCATION_ATTRIBUTE_NOLOAD("TouchGFX_Framebuffer");
}

void TouchGFXHAL::initialize()
{
 80009d4:	b510      	push	{r4, lr}
 80009d6:	4604      	mov	r4, r0
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::initialize() must be called to initialize the framework.

    TouchGFXGeneratedHAL::initialize();
 80009d8:	f000 fd4c 	bl	8001474 <_ZN20TouchGFXGeneratedHAL10initializeEv>

    // Add animation storage
    setAnimationStorage((void*)animationStorage);
 80009dc:	6823      	ldr	r3, [r4, #0]
 80009de:	4903      	ldr	r1, [pc, #12]	@ (80009ec <_ZN11TouchGFXHAL10initializeEv+0x18>)
 80009e0:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 80009e4:	4620      	mov	r0, r4
}
 80009e6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    setAnimationStorage((void*)animationStorage);
 80009ea:	4718      	bx	r3
 80009ec:	d0000000 	.word	0xd0000000

080009f0 <_ZN11TouchGFXHAL9taskEntryEv>:

void TouchGFXHAL::taskEntry()
{
 80009f0:	b508      	push	{r3, lr}
    enableLCDControllerInterrupt();
 80009f2:	6803      	ldr	r3, [r0, #0]
{
 80009f4:	4604      	mov	r4, r0
    enableLCDControllerInterrupt();
 80009f6:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 80009fa:	4798      	blx	r3
    enableInterrupts();
 80009fc:	6823      	ldr	r3, [r4, #0]
 80009fe:	4620      	mov	r0, r4
 8000a00:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 8000a02:	4798      	blx	r3

    OSWrappers::waitForVSync();
 8000a04:	f000 f8ec 	bl	8000be0 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
    backPorchExited();
 8000a08:	6823      	ldr	r3, [r4, #0]
 8000a0a:	4620      	mov	r0, r4
 8000a0c:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8000a0e:	4798      	blx	r3

    LCD_IO_WriteReg(0x29);
 8000a10:	2029      	movs	r0, #41	@ 0x29
 8000a12:	f001 fb1b 	bl	800204c <LCD_IO_WriteReg>

    for (;;)
    {
        OSWrappers::waitForVSync();
 8000a16:	f000 f8e3 	bl	8000be0 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
        backPorchExited();
 8000a1a:	6823      	ldr	r3, [r4, #0]
 8000a1c:	4620      	mov	r0, r4
 8000a1e:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8000a20:	4798      	blx	r3
    for (;;)
 8000a22:	e7f8      	b.n	8000a16 <_ZN11TouchGFXHAL9taskEntryEv+0x26>

08000a24 <_ZN8touchgfx3HAL15backPorchExitedEv>:
    virtual void backPorchExited()
 8000a24:	b510      	push	{r4, lr}
 8000a26:	4604      	mov	r4, r0
        swapFrameBuffers();
 8000a28:	f00a fc30 	bl	800b28c <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
 8000a2c:	6823      	ldr	r3, [r4, #0]
 8000a2e:	4620      	mov	r0, r4
 8000a30:	f8d3 30bc 	ldr.w	r3, [r3, #188]	@ 0xbc
    }
 8000a34:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        tick();
 8000a38:	4718      	bx	r3

08000a3a <_ZNK11TouchGFXHAL17getTFTFrameBufferEv>:
    // Calling parent implementation of getTFTFrameBuffer().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    return TouchGFXGeneratedHAL::getTFTFrameBuffer();
 8000a3a:	f000 bcff 	b.w	800143c <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>

08000a3e <_ZN11TouchGFXHAL17setTFTFrameBufferEPt>:
    // Calling parent implementation of setTFTFrameBuffer(uint16_t* address).
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::setTFTFrameBuffer(address);
 8000a3e:	f000 bd03 	b.w	8001448 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>

08000a42 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE>:
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::flushFrameBuffer(const touchgfx::Rect& rect) must
    // be called to notify the touchgfx framework that flush has been performed.

    TouchGFXGeneratedHAL::flushFrameBuffer(rect);
 8000a42:	f000 bd35 	b.w	80014b0 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>

08000a46 <_ZN11TouchGFXHAL19configureInterruptsEv>:
    // Calling parent implementation of configureInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::configureInterrupts();
 8000a46:	f000 bcd5 	b.w	80013f4 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>

08000a4a <_ZN11TouchGFXHAL16enableInterruptsEv>:
    // Calling parent implementation of enableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableInterrupts();
 8000a4a:	f000 bd45 	b.w	80014d8 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>

08000a4e <_ZN11TouchGFXHAL17disableInterruptsEv>:
    // Calling parent implementation of disableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::disableInterrupts();
 8000a4e:	f000 bd4d 	b.w	80014ec <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>

08000a52 <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv>:
    // Calling parent implementation of enableLCDControllerInterrupt().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
 8000a52:	f000 bcd9 	b.w	8001408 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>

08000a56 <_ZN11TouchGFXHAL16flushFrameBufferEv>:
     * Rect version.
     * @see HAL::flushFrameBuffer
     */
    virtual void flushFrameBuffer()
    {
        HAL::flushFrameBuffer();
 8000a56:	f009 be47 	b.w	800a6e8 <_ZN8touchgfx3HAL16flushFrameBufferEv>

08000a5a <_ZN11TouchGFXHALD0Ev>:
 8000a5a:	b510      	push	{r4, lr}
 8000a5c:	2184      	movs	r1, #132	@ 0x84
 8000a5e:	4604      	mov	r4, r0
 8000a60:	f021 f953 	bl	8021d0a <_ZdlPvj>
 8000a64:	4620      	mov	r0, r4
 8000a66:	bd10      	pop	{r4, pc}

08000a68 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv>:
    virtual void performDisplayOrientationChange()
 8000a68:	b510      	push	{r4, lr}
        if (requestedOrientation != nativeDisplayOrientation)
 8000a6a:	f890 1034 	ldrb.w	r1, [r0, #52]	@ 0x34
 8000a6e:	f890 4078 	ldrb.w	r4, [r0, #120]	@ 0x78
            if (DISPLAY_ROTATION == rotate0)
 8000a72:	4b0c      	ldr	r3, [pc, #48]	@ (8000aa4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x3c>)
        if (requestedOrientation != nativeDisplayOrientation)
 8000a74:	428c      	cmp	r4, r1
            if (DISPLAY_ROTATION == rotate0)
 8000a76:	781a      	ldrb	r2, [r3, #0]
        if (requestedOrientation != nativeDisplayOrientation)
 8000a78:	d009      	beq.n	8000a8e <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x26>
            if (DISPLAY_ROTATION == rotate0)
 8000a7a:	b93a      	cbnz	r2, 8000a8c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8000a7c:	4a0a      	ldr	r2, [pc, #40]	@ (8000aa8 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
                const uint16_t tmp = DISPLAY_HEIGHT;
 8000a7e:	490b      	ldr	r1, [pc, #44]	@ (8000aac <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8000a80:	8814      	ldrh	r4, [r2, #0]
                const uint16_t tmp = DISPLAY_HEIGHT;
 8000a82:	8808      	ldrh	r0, [r1, #0]
                DISPLAY_WIDTH = tmp;
 8000a84:	8010      	strh	r0, [r2, #0]
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8000a86:	800c      	strh	r4, [r1, #0]
                DISPLAY_ROTATION = rotate90;
 8000a88:	2201      	movs	r2, #1
            DISPLAY_ROTATION = rotate0;
 8000a8a:	701a      	strb	r2, [r3, #0]
    }
 8000a8c:	bd10      	pop	{r4, pc}
        else if (DISPLAY_ROTATION != rotate0)
 8000a8e:	2a00      	cmp	r2, #0
 8000a90:	d0fc      	beq.n	8000a8c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8000a92:	4a05      	ldr	r2, [pc, #20]	@ (8000aa8 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
            const uint16_t tmp = DISPLAY_HEIGHT;
 8000a94:	4905      	ldr	r1, [pc, #20]	@ (8000aac <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8000a96:	8814      	ldrh	r4, [r2, #0]
            const uint16_t tmp = DISPLAY_HEIGHT;
 8000a98:	8808      	ldrh	r0, [r1, #0]
            DISPLAY_WIDTH = tmp;
 8000a9a:	8010      	strh	r0, [r2, #0]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8000a9c:	800c      	strh	r4, [r1, #0]
            DISPLAY_ROTATION = rotate0;
 8000a9e:	2200      	movs	r2, #0
 8000aa0:	e7f3      	b.n	8000a8a <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x22>
 8000aa2:	bf00      	nop
 8000aa4:	2001403a 	.word	0x2001403a
 8000aa8:	20014036 	.word	0x20014036
 8000aac:	20014038 	.word	0x20014038

08000ab0 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_>:
    virtual void setFrameBufferStartAddresses(void* frameBuffer, void* doubleBuffer, void* animationStorage)
 8000ab0:	b570      	push	{r4, r5, r6, lr}
 8000ab2:	460d      	mov	r5, r1
 8000ab4:	4619      	mov	r1, r3
        assert(frameBuffer != 0 && "A framebuffer address must be set");
 8000ab6:	b935      	cbnz	r5, 8000ac6 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x16>
 8000ab8:	4b09      	ldr	r3, [pc, #36]	@ (8000ae0 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x30>)
 8000aba:	4a0a      	ldr	r2, [pc, #40]	@ (8000ae4 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x34>)
 8000abc:	480a      	ldr	r0, [pc, #40]	@ (8000ae8 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x38>)
 8000abe:	f240 21ff 	movw	r1, #767	@ 0x2ff
 8000ac2:	f022 f85f 	bl	8022b84 <__assert_func>
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
 8000ac6:	e9c0 520f 	strd	r5, r2, [r0, #60]	@ 0x3c
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
 8000aca:	4b08      	ldr	r3, [pc, #32]	@ (8000aec <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x3c>)
 8000acc:	3a00      	subs	r2, #0
 8000ace:	bf18      	it	ne
 8000ad0:	2201      	movne	r2, #1
 8000ad2:	701a      	strb	r2, [r3, #0]
        setAnimationStorage(animationStorage);
 8000ad4:	6803      	ldr	r3, [r0, #0]
    }
 8000ad6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setAnimationStorage(animationStorage);
 8000ada:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8000ade:	4718      	bx	r3
 8000ae0:	08023c30 	.word	0x08023c30
 8000ae4:	08023c68 	.word	0x08023c68
 8000ae8:	08023cb6 	.word	0x08023cb6
 8000aec:	20014040 	.word	0x20014040

08000af0 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt>:
    virtual void setFrameBufferSize(uint16_t width, uint16_t height)
 8000af0:	b508      	push	{r3, lr}
        assert(width >= DISPLAY_WIDTH && height >= DISPLAY_HEIGHT && "Framebuffer cannot be smaller than display");
 8000af2:	4b09      	ldr	r3, [pc, #36]	@ (8000b18 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x28>)
 8000af4:	881b      	ldrh	r3, [r3, #0]
 8000af6:	428b      	cmp	r3, r1
 8000af8:	d803      	bhi.n	8000b02 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x12>
 8000afa:	4b08      	ldr	r3, [pc, #32]	@ (8000b1c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x2c>)
 8000afc:	881b      	ldrh	r3, [r3, #0]
 8000afe:	4293      	cmp	r3, r2
 8000b00:	d905      	bls.n	8000b0e <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x1e>
 8000b02:	4b07      	ldr	r3, [pc, #28]	@ (8000b20 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x30>)
 8000b04:	4a07      	ldr	r2, [pc, #28]	@ (8000b24 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x34>)
 8000b06:	4808      	ldr	r0, [pc, #32]	@ (8000b28 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x38>)
 8000b08:	21a3      	movs	r1, #163	@ 0xa3
 8000b0a:	f022 f83b 	bl	8022b84 <__assert_func>
        FRAME_BUFFER_WIDTH = width;
 8000b0e:	4b07      	ldr	r3, [pc, #28]	@ (8000b2c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x3c>)
 8000b10:	8019      	strh	r1, [r3, #0]
        FRAME_BUFFER_HEIGHT = height;
 8000b12:	4b07      	ldr	r3, [pc, #28]	@ (8000b30 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x40>)
 8000b14:	801a      	strh	r2, [r3, #0]
    }
 8000b16:	bd08      	pop	{r3, pc}
 8000b18:	20014036 	.word	0x20014036
 8000b1c:	20014038 	.word	0x20014038
 8000b20:	08023cfb 	.word	0x08023cfb
 8000b24:	08023d5e 	.word	0x08023d5e
 8000b28:	08023cb6 	.word	0x08023cb6
 8000b2c:	2001403c 	.word	0x2001403c
 8000b30:	2001403e 	.word	0x2001403e

08000b34 <_ZN8touchgfx3HAL11getBlitCapsEv>:
    virtual BlitOperations getBlitCaps()
 8000b34:	4603      	mov	r3, r0
        if (useDMAAcceleration)
 8000b36:	f890 007a 	ldrb.w	r0, [r0, #122]	@ 0x7a
 8000b3a:	b118      	cbz	r0, 8000b44 <_ZN8touchgfx3HAL11getBlitCapsEv+0x10>
 8000b3c:	6858      	ldr	r0, [r3, #4]
            return dma.getBlitCaps();
 8000b3e:	6803      	ldr	r3, [r0, #0]
 8000b40:	681b      	ldr	r3, [r3, #0]
 8000b42:	4718      	bx	r3
    }
 8000b44:	4770      	bx	lr
	...

08000b48 <_ZN8touchgfx10OSWrappers10initializeEv>:
 * Initialize frame buffer semaphore and queue/mutex for VSYNC signal.
 */
void OSWrappers::initialize()
{
    // Create a queue of length 1
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 8000b48:	2101      	movs	r1, #1
{
 8000b4a:	b508      	push	{r3, lr}
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 8000b4c:	2200      	movs	r2, #0
 8000b4e:	4608      	mov	r0, r1
 8000b50:	f006 fd80 	bl	8007654 <osSemaphoreNew>
 8000b54:	4b0a      	ldr	r3, [pc, #40]	@ (8000b80 <_ZN8touchgfx10OSWrappers10initializeEv+0x38>)
 8000b56:	6018      	str	r0, [r3, #0]
    assert((frame_buffer_sem != NULL) && "Creation of framebuffer semaphore failed");
 8000b58:	b928      	cbnz	r0, 8000b66 <_ZN8touchgfx10OSWrappers10initializeEv+0x1e>
 8000b5a:	4b0a      	ldr	r3, [pc, #40]	@ (8000b84 <_ZN8touchgfx10OSWrappers10initializeEv+0x3c>)
 8000b5c:	4a0a      	ldr	r2, [pc, #40]	@ (8000b88 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 8000b5e:	2128      	movs	r1, #40	@ 0x28

    // Create a queue of length 1
    vsync_queue = osMessageQueueNew(1, 4, NULL);
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8000b60:	480a      	ldr	r0, [pc, #40]	@ (8000b8c <_ZN8touchgfx10OSWrappers10initializeEv+0x44>)
 8000b62:	f022 f80f 	bl	8022b84 <__assert_func>
    vsync_queue = osMessageQueueNew(1, 4, NULL);
 8000b66:	2200      	movs	r2, #0
 8000b68:	2104      	movs	r1, #4
 8000b6a:	2001      	movs	r0, #1
 8000b6c:	f006 fe11 	bl	8007792 <osMessageQueueNew>
 8000b70:	4b07      	ldr	r3, [pc, #28]	@ (8000b90 <_ZN8touchgfx10OSWrappers10initializeEv+0x48>)
 8000b72:	6018      	str	r0, [r3, #0]
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8000b74:	b918      	cbnz	r0, 8000b7e <_ZN8touchgfx10OSWrappers10initializeEv+0x36>
 8000b76:	4b07      	ldr	r3, [pc, #28]	@ (8000b94 <_ZN8touchgfx10OSWrappers10initializeEv+0x4c>)
 8000b78:	4a03      	ldr	r2, [pc, #12]	@ (8000b88 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 8000b7a:	212c      	movs	r1, #44	@ 0x2c
 8000b7c:	e7f0      	b.n	8000b60 <_ZN8touchgfx10OSWrappers10initializeEv+0x18>
}
 8000b7e:	bd08      	pop	{r3, pc}
 8000b80:	200004c0 	.word	0x200004c0
 8000b84:	08023da1 	.word	0x08023da1
 8000b88:	08023dea 	.word	0x08023dea
 8000b8c:	08023e19 	.word	0x08023e19
 8000b90:	200004bc 	.word	0x200004bc
 8000b94:	08023e67 	.word	0x08023e67

08000b98 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>:
/*
 * Take the frame buffer semaphore. Blocks until semaphore is available.
 */
void OSWrappers::takeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, osWaitForever);
 8000b98:	4b02      	ldr	r3, [pc, #8]	@ (8000ba4 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0xc>)
 8000b9a:	f04f 31ff 	mov.w	r1, #4294967295
 8000b9e:	6818      	ldr	r0, [r3, #0]
 8000ba0:	f006 bda2 	b.w	80076e8 <osSemaphoreAcquire>
 8000ba4:	200004c0 	.word	0x200004c0

08000ba8 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>:
/*
 * Release the frame buffer semaphore.
 */
void OSWrappers::giveFrameBufferSemaphore()
{
    osSemaphoreRelease(frame_buffer_sem);
 8000ba8:	4b01      	ldr	r3, [pc, #4]	@ (8000bb0 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x8>)
 8000baa:	6818      	ldr	r0, [r3, #0]
 8000bac:	f006 bdc8 	b.w	8007740 <osSemaphoreRelease>
 8000bb0:	200004c0 	.word	0x200004c0

08000bb4 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>:
 * Note must return immediately! This function does not care who has the taken the semaphore,
 * it only serves to make sure that the semaphore is taken by someone.
 */
void OSWrappers::tryTakeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, 0);
 8000bb4:	4b02      	ldr	r3, [pc, #8]	@ (8000bc0 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0xc>)
 8000bb6:	2100      	movs	r1, #0
 8000bb8:	6818      	ldr	r0, [r3, #0]
 8000bba:	f006 bd95 	b.w	80076e8 <osSemaphoreAcquire>
 8000bbe:	bf00      	nop
 8000bc0:	200004c0 	.word	0x200004c0

08000bc4 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>:
 * from ISR.
 *
 * Release the frame buffer semaphore in a way that is safe in interrupt context.
 * Called from ISR.
 */
void OSWrappers::giveFrameBufferSemaphoreFromISR()
 8000bc4:	f7ff bff0 	b.w	8000ba8 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

08000bc8 <_ZN8touchgfx10OSWrappers11signalVSyncEv>:
 * Note This function is called from an ISR, and should (depending on OS) trigger a
 * scheduling.
 */
void OSWrappers::signalVSync()
{
    osMessageQueuePut(vsync_queue, &dummy, 0, 0);
 8000bc8:	4803      	ldr	r0, [pc, #12]	@ (8000bd8 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x10>)
 8000bca:	4904      	ldr	r1, [pc, #16]	@ (8000bdc <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x14>)
 8000bcc:	6800      	ldr	r0, [r0, #0]
 8000bce:	2300      	movs	r3, #0
 8000bd0:	461a      	mov	r2, r3
 8000bd2:	f006 be19 	b.w	8007808 <osMessageQueuePut>
 8000bd6:	bf00      	nop
 8000bd8:	200004bc 	.word	0x200004bc
 8000bdc:	20000004 	.word	0x20000004

08000be0 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>:
 *
 * Note This function must first clear the mutex/queue and then wait for the next one to
 * occur.
 */
void OSWrappers::waitForVSync()
{
 8000be0:	b513      	push	{r0, r1, r4, lr}
    uint32_t dummyGet;
    // First make sure the queue is empty, by trying to remove an element with 0 timeout.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, 0);
 8000be2:	4c08      	ldr	r4, [pc, #32]	@ (8000c04 <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x24>)
 8000be4:	2300      	movs	r3, #0
 8000be6:	461a      	mov	r2, r3
 8000be8:	a901      	add	r1, sp, #4
 8000bea:	6820      	ldr	r0, [r4, #0]
 8000bec:	f006 fe3d 	bl	800786a <osMessageQueueGet>

    // Then, wait for next VSYNC to occur.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, osWaitForever);
 8000bf0:	6820      	ldr	r0, [r4, #0]
 8000bf2:	f04f 33ff 	mov.w	r3, #4294967295
 8000bf6:	2200      	movs	r2, #0
 8000bf8:	a901      	add	r1, sp, #4
 8000bfa:	f006 fe36 	bl	800786a <osMessageQueueGet>
}
 8000bfe:	b002      	add	sp, #8
 8000c00:	bd10      	pop	{r4, pc}
 8000c02:	bf00      	nop
 8000c04:	200004bc 	.word	0x200004bc

08000c08 <_ZN8touchgfx13DMA_Interface5flushEv>:
    virtual void addToQueue(const BlitOp& op);

    /** This function blocks until all DMA transfers in the queue have been completed. */
    virtual void flush()
    {
        waitForFrameBufferSemaphore();
 8000c08:	6803      	ldr	r3, [r0, #0]
 8000c0a:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8000c0c:	4718      	bx	r3

08000c0e <_ZN8STM32DMA10getDMATypeEv>:
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual touchgfx::DMAType getDMAType(void)
    {
        return touchgfx::DMA_TYPE_CHROMART;
    }
 8000c0e:	2001      	movs	r0, #1
 8000c10:	4770      	bx	lr

08000c12 <_ZN8STM32DMA18signalDMAInterruptEv>:
     *
     *        Raises a DMA interrupt signal.
     */
    virtual void signalDMAInterrupt()
    {
        executeCompleted();
 8000c12:	6803      	ldr	r3, [r0, #0]
 8000c14:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8000c16:	4718      	bx	r3

08000c18 <DMA2D_XferErrorCallback>:
    }

    static void DMA2D_XferErrorCallback(DMA2D_HandleTypeDef* handle)
    {
        (void)handle; // Unused argument
        while (1)
 8000c18:	e7fe      	b.n	8000c18 <DMA2D_XferErrorCallback>

08000c1a <_ZN8STM32DMA11getBlitCapsEv>:
                                       | BLIT_OP_COPY_WITH_ALPHA
                                       | BLIT_OP_COPY_ARGB8888
                                       | BLIT_OP_COPY_ARGB8888_WITH_ALPHA
                                       | BLIT_OP_COPY_A4
                                       | BLIT_OP_COPY_A8);
}
 8000c1a:	f240 30ef 	movw	r0, #1007	@ 0x3ef
 8000c1e:	4770      	bx	lr

08000c20 <_ZN8STM32DMAD1Ev>:
STM32DMA::~STM32DMA()
 8000c20:	4b05      	ldr	r3, [pc, #20]	@ (8000c38 <_ZN8STM32DMAD1Ev+0x18>)
 8000c22:	6003      	str	r3, [r0, #0]
 */
__STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8000c24:	4b05      	ldr	r3, [pc, #20]	@ (8000c3c <_ZN8STM32DMAD1Ev+0x1c>)
 8000c26:	f04f 6280 	mov.w	r2, #67108864	@ 0x4000000
 8000c2a:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
 8000c2e:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8000c32:	f3bf 8f6f 	isb	sy
}
 8000c36:	4770      	bx	lr
 8000c38:	080247a0 	.word	0x080247a0
 8000c3c:	e000e100 	.word	0xe000e100

08000c40 <_ZN8STM32DMAD0Ev>:
STM32DMA::~STM32DMA()
 8000c40:	b510      	push	{r4, lr}
 8000c42:	4604      	mov	r4, r0
}
 8000c44:	f44f 615a 	mov.w	r1, #3488	@ 0xda0
 8000c48:	f7ff ffea 	bl	8000c20 <_ZN8STM32DMAD1Ev>
 8000c4c:	4620      	mov	r0, r4
 8000c4e:	f021 f85c 	bl	8021d0a <_ZdlPvj>
 8000c52:	4620      	mov	r0, r4
 8000c54:	bd10      	pop	{r4, pc}
	...

08000c58 <_ZN8STM32DMA10initializeEv>:
{
 8000c58:	b082      	sub	sp, #8
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8000c5a:	2300      	movs	r3, #0
 8000c5c:	9301      	str	r3, [sp, #4]
 8000c5e:	4b0e      	ldr	r3, [pc, #56]	@ (8000c98 <_ZN8STM32DMA10initializeEv+0x40>)
 8000c60:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8000c62:	f442 0200 	orr.w	r2, r2, #8388608	@ 0x800000
 8000c66:	631a      	str	r2, [r3, #48]	@ 0x30
 8000c68:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8000c6a:	f402 0200 	and.w	r2, r2, #8388608	@ 0x800000
 8000c6e:	9201      	str	r2, [sp, #4]
 8000c70:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_DMA2D_FORCE_RESET();
 8000c72:	691a      	ldr	r2, [r3, #16]
 8000c74:	f442 0200 	orr.w	r2, r2, #8388608	@ 0x800000
 8000c78:	611a      	str	r2, [r3, #16]
    __HAL_RCC_DMA2D_RELEASE_RESET();
 8000c7a:	691a      	ldr	r2, [r3, #16]
 8000c7c:	f422 0200 	bic.w	r2, r2, #8388608	@ 0x800000
 8000c80:	611a      	str	r2, [r3, #16]
    hdma2d.XferCpltCallback = DMA2D_XferCpltCallback;
 8000c82:	4b06      	ldr	r3, [pc, #24]	@ (8000c9c <_ZN8STM32DMA10initializeEv+0x44>)
 8000c84:	4a06      	ldr	r2, [pc, #24]	@ (8000ca0 <_ZN8STM32DMA10initializeEv+0x48>)
 8000c86:	611a      	str	r2, [r3, #16]
    hdma2d.XferErrorCallback = DMA2D_XferErrorCallback;
 8000c88:	4a06      	ldr	r2, [pc, #24]	@ (8000ca4 <_ZN8STM32DMA10initializeEv+0x4c>)
 8000c8a:	615a      	str	r2, [r3, #20]
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8000c8c:	4b06      	ldr	r3, [pc, #24]	@ (8000ca8 <_ZN8STM32DMA10initializeEv+0x50>)
 8000c8e:	f04f 6280 	mov.w	r2, #67108864	@ 0x4000000
 8000c92:	609a      	str	r2, [r3, #8]
}
 8000c94:	b002      	add	sp, #8
 8000c96:	4770      	bx	lr
 8000c98:	40023800 	.word	0x40023800
 8000c9c:	20003190 	.word	0x20003190
 8000ca0:	08000ef9 	.word	0x08000ef9
 8000ca4:	08000c19 	.word	0x08000c19
 8000ca8:	e000e100 	.word	0xe000e100

08000cac <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>:
inline uint32_t STM32DMA::getChromARTOutputFormat(Bitmap::BitmapFormat format)
 8000cac:	b508      	push	{r3, lr}
    switch (format)
 8000cae:	280a      	cmp	r0, #10
 8000cb0:	d809      	bhi.n	8000cc6 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x1a>
 8000cb2:	e8df f000 	tbb	[pc, r0]
 8000cb6:	1006      	.short	0x1006
 8000cb8:	0808080e 	.word	0x0808080e
 8000cbc:	10101008 	.word	0x10101008
 8000cc0:	10          	.byte	0x10
 8000cc1:	00          	.byte	0x00
        dma2dColorMode = DMA2D_OUTPUT_RGB565;
 8000cc2:	2002      	movs	r0, #2
}
 8000cc4:	bd08      	pop	{r3, pc}
        assert(0 && "Unsupported Format!");
 8000cc6:	4b05      	ldr	r3, [pc, #20]	@ (8000cdc <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x30>)
 8000cc8:	4a05      	ldr	r2, [pc, #20]	@ (8000ce0 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x34>)
 8000cca:	4806      	ldr	r0, [pc, #24]	@ (8000ce4 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x38>)
 8000ccc:	2190      	movs	r1, #144	@ 0x90
 8000cce:	f021 ff59 	bl	8022b84 <__assert_func>
        dma2dColorMode = DMA2D_OUTPUT_ARGB8888;
 8000cd2:	2000      	movs	r0, #0
 8000cd4:	e7f6      	b.n	8000cc4 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
    switch (format)
 8000cd6:	2001      	movs	r0, #1
    return dma2dColorMode;
 8000cd8:	e7f4      	b.n	8000cc4 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
 8000cda:	bf00      	nop
 8000cdc:	08023ea9 	.word	0x08023ea9
 8000ce0:	08023ec4 	.word	0x08023ec4
 8000ce4:	08023f0f 	.word	0x08023f0f

08000ce8 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE>:
 * void STM32DMA::setupDataFill(const BlitOp& blitOp) handles blit operation of
 * BLIT_OP_FILL
 * BLIT_OP_FILL_WITH_ALPHA
 */
void STM32DMA::setupDataFill(const BlitOp& blitOp)
{
 8000ce8:	b538      	push	{r3, r4, r5, lr}
 8000cea:	460c      	mov	r4, r1
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000cec:	7f88      	ldrb	r0, [r1, #30]
 8000cee:	f7ff ffdd 	bl	8000cac <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000cf2:	8aa5      	ldrh	r5, [r4, #20]
 8000cf4:	8ae2      	ldrh	r2, [r4, #22]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8000cf6:	4b16      	ldr	r3, [pc, #88]	@ (8000d50 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x68>)

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000cf8:	6921      	ldr	r1, [r4, #16]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8000cfa:	6358      	str	r0, [r3, #52]	@ 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000cfc:	ea42 4205 	orr.w	r2, r2, r5, lsl #16
 8000d00:	645a      	str	r2, [r3, #68]	@ 0x44

    /* DMA2D OOR register configuration */
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000d02:	8b62      	ldrh	r2, [r4, #26]
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000d04:	63d9      	str	r1, [r3, #60]	@ 0x3c
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000d06:	1b52      	subs	r2, r2, r5
 8000d08:	641a      	str	r2, [r3, #64]	@ 0x40

    if (blitOp.operation == BLIT_OP_FILL_WITH_ALPHA)
 8000d0a:	6825      	ldr	r5, [r4, #0]
 8000d0c:	2d08      	cmp	r5, #8
 8000d0e:	d10e      	bne.n	8000d2e <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x46>
    {
        /* DMA2D BGOR register configuration */
        WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000d10:	619a      	str	r2, [r3, #24]

        /* DMA2D FGOR register configuration */
        WRITE_REG(DMA2D->FGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000d12:	611a      	str	r2, [r3, #16]

        /* Write DMA2D BGPFCCR register */
        WRITE_REG(DMA2D->BGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000d14:	6258      	str	r0, [r3, #36]	@ 0x24

        /* Write DMA2D FGPFCCR register */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((blitOp.alpha << 24) & DMA2D_FGPFCCR_ALPHA));
 8000d16:	7f20      	ldrb	r0, [r4, #28]
 8000d18:	4a0e      	ldr	r2, [pc, #56]	@ (8000d54 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x6c>)
 8000d1a:	ea42 6200 	orr.w	r2, r2, r0, lsl #24
 8000d1e:	61da      	str	r2, [r3, #28]
     *
     * @return The result of the operation.
     */
    operator uint32_t() const
    {
        return color;
 8000d20:	68e2      	ldr	r2, [r4, #12]

        /* DMA2D FGCOLR register configuration */
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
 8000d22:	621a      	str	r2, [r3, #32]

        /* Configure DMA2D source address */
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_M2M_BLEND | DMA2D_IT_CE | DMA2D_IT_TE));
 8000d24:	4a0c      	ldr	r2, [pc, #48]	@ (8000d58 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x70>)
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000d26:	6159      	str	r1, [r3, #20]
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000d28:	60d9      	str	r1, [r3, #12]

        /* Set color */
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M | DMA2D_IT_CE | DMA2D_IT_TE));
 8000d2a:	601a      	str	r2, [r3, #0]
    }
}
 8000d2c:	bd38      	pop	{r3, r4, r5, pc}
        WRITE_REG(DMA2D->FGOR, 0);
 8000d2e:	2200      	movs	r2, #0
        WRITE_REG(DMA2D->FGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_FGPFCCR_AM_Pos));
 8000d30:	61d8      	str	r0, [r3, #28]
        WRITE_REG(DMA2D->FGOR, 0);
 8000d32:	611a      	str	r2, [r3, #16]
 8000d34:	68e1      	ldr	r1, [r4, #12]
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));
 8000d36:	0a0a      	lsrs	r2, r1, #8
 8000d38:	0948      	lsrs	r0, r1, #5
 8000d3a:	f402 4278 	and.w	r2, r2, #63488	@ 0xf800
 8000d3e:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8000d42:	4302      	orrs	r2, r0
 8000d44:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8000d48:	430a      	orrs	r2, r1
 8000d4a:	639a      	str	r2, [r3, #56]	@ 0x38
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M | DMA2D_IT_CE | DMA2D_IT_TE));
 8000d4c:	4a03      	ldr	r2, [pc, #12]	@ (8000d5c <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x74>)
 8000d4e:	e7ec      	b.n	8000d2a <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x42>
 8000d50:	4002b000 	.word	0x4002b000
 8000d54:	00010009 	.word	0x00010009
 8000d58:	00022301 	.word	0x00022301
 8000d5c:	00032301 	.word	0x00032301

08000d60 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>:
inline uint32_t STM32DMA::getChromARTInputFormat(Bitmap::BitmapFormat format)
 8000d60:	b508      	push	{r3, lr}
    switch (format)
 8000d62:	280b      	cmp	r0, #11
 8000d64:	d80b      	bhi.n	8000d7e <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x1e>
 8000d66:	e8df f000 	tbb	[pc, r0]
 8000d6a:	1206      	.short	0x1206
 8000d6c:	0a0a0a10 	.word	0x0a0a0a10
 8000d70:	0808080a 	.word	0x0808080a
 8000d74:	0808      	.short	0x0808
        dma2dColorMode = DMA2D_INPUT_RGB565;
 8000d76:	2002      	movs	r0, #2
}
 8000d78:	bd08      	pop	{r3, pc}
        dma2dColorMode = DMA2D_INPUT_L8;
 8000d7a:	2005      	movs	r0, #5
        break;
 8000d7c:	e7fc      	b.n	8000d78 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
        assert(0 && "Unsupported Format!");
 8000d7e:	4b05      	ldr	r3, [pc, #20]	@ (8000d94 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x34>)
 8000d80:	4a05      	ldr	r2, [pc, #20]	@ (8000d98 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x38>)
 8000d82:	4806      	ldr	r0, [pc, #24]	@ (8000d9c <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x3c>)
 8000d84:	216f      	movs	r1, #111	@ 0x6f
 8000d86:	f021 fefd 	bl	8022b84 <__assert_func>
        dma2dColorMode = DMA2D_INPUT_ARGB8888;
 8000d8a:	2000      	movs	r0, #0
 8000d8c:	e7f4      	b.n	8000d78 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
    switch (format)
 8000d8e:	2001      	movs	r0, #1
    return dma2dColorMode;
 8000d90:	e7f2      	b.n	8000d78 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
 8000d92:	bf00      	nop
 8000d94:	08023ea9 	.word	0x08023ea9
 8000d98:	08023f5b 	.word	0x08023f5b
 8000d9c:	08023f0f 	.word	0x08023f0f

08000da0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE>:
{
 8000da0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8000da4:	f891 801d 	ldrb.w	r8, [r1, #29]
{
 8000da8:	460c      	mov	r4, r1
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8000daa:	4640      	mov	r0, r8
 8000dac:	f7ff ffd8 	bl	8000d60 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000db0:	7fa7      	ldrb	r7, [r4, #30]
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8000db2:	4605      	mov	r5, r0
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000db4:	4638      	mov	r0, r7
 8000db6:	f7ff ffd3 	bl	8000d60 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>
 8000dba:	4606      	mov	r6, r0
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000dbc:	4638      	mov	r0, r7
 8000dbe:	f7ff ff75 	bl	8000cac <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000dc2:	8aa1      	ldrh	r1, [r4, #20]
 8000dc4:	8b62      	ldrh	r2, [r4, #26]
 8000dc6:	4b44      	ldr	r3, [pc, #272]	@ (8000ed8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 8000dc8:	1a52      	subs	r2, r2, r1
 8000dca:	641a      	str	r2, [r3, #64]	@ 0x40
    WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000dcc:	619a      	str	r2, [r3, #24]
    WRITE_REG(DMA2D->FGOR, blitOp.srcLoopStride - blitOp.nSteps);
 8000dce:	8b22      	ldrh	r2, [r4, #24]
 8000dd0:	1a52      	subs	r2, r2, r1
 8000dd2:	611a      	str	r2, [r3, #16]
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000dd4:	8ae2      	ldrh	r2, [r4, #22]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8000dd6:	6358      	str	r0, [r3, #52]	@ 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000dd8:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8000ddc:	645a      	str	r2, [r3, #68]	@ 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000dde:	6921      	ldr	r1, [r4, #16]
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
 8000de0:	6862      	ldr	r2, [r4, #4]
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000de2:	63d9      	str	r1, [r3, #60]	@ 0x3c
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
 8000de4:	60da      	str	r2, [r3, #12]
    switch (blitOp.operation)
 8000de6:	6820      	ldr	r0, [r4, #0]
 8000de8:	2880      	cmp	r0, #128	@ 0x80
 8000dea:	d028      	beq.n	8000e3e <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x9e>
 8000dec:	7f22      	ldrb	r2, [r4, #28]
 8000dee:	d80f      	bhi.n	8000e10 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x70>
 8000df0:	2820      	cmp	r0, #32
 8000df2:	d067      	beq.n	8000ec4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x124>
 8000df4:	2840      	cmp	r0, #64	@ 0x40
 8000df6:	d065      	beq.n	8000ec4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x124>
 8000df8:	2804      	cmp	r0, #4
 8000dfa:	d01a      	beq.n	8000e32 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x92>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000dfc:	4b36      	ldr	r3, [pc, #216]	@ (8000ed8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 8000dfe:	ea45 6502 	orr.w	r5, r5, r2, lsl #24
 8000e02:	f445 3500 	orr.w	r5, r5, #131072	@ 0x20000
        if (blitOp.srcFormat != blitOp.dstFormat)
 8000e06:	45b8      	cmp	r8, r7
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000e08:	61dd      	str	r5, [r3, #28]
        if (blitOp.srcFormat != blitOp.dstFormat)
 8000e0a:	d061      	beq.n	8000ed0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x130>
            WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
 8000e0c:	4a33      	ldr	r2, [pc, #204]	@ (8000edc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x13c>)
 8000e0e:	e044      	b.n	8000e9a <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xfa>
    switch (blitOp.operation)
 8000e10:	f5b0 7f80 	cmp.w	r0, #256	@ 0x100
 8000e14:	d004      	beq.n	8000e20 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x80>
 8000e16:	f5b0 7f00 	cmp.w	r0, #512	@ 0x200
 8000e1a:	d1ef      	bne.n	8000dfc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x5c>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000e1c:	4830      	ldr	r0, [pc, #192]	@ (8000ee0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x140>)
 8000e1e:	e000      	b.n	8000e22 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x82>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000e20:	4830      	ldr	r0, [pc, #192]	@ (8000ee4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x144>)
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000e22:	ea40 6202 	orr.w	r2, r0, r2, lsl #24
 8000e26:	61da      	str	r2, [r3, #28]
 8000e28:	68e2      	ldr	r2, [r4, #12]
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
 8000e2a:	621a      	str	r2, [r3, #32]
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000e2c:	625e      	str	r6, [r3, #36]	@ 0x24
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000e2e:	6159      	str	r1, [r3, #20]
 8000e30:	e032      	b.n	8000e98 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xf8>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000e32:	ea45 6202 	orr.w	r2, r5, r2, lsl #24
 8000e36:	f442 3200 	orr.w	r2, r2, #131072	@ 0x20000
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000e3a:	61da      	str	r2, [r3, #28]
 8000e3c:	e7f6      	b.n	8000e2c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x8c>
            const clutData_t* const palette = reinterpret_cast<const clutData_t*>(blitOp.pClut);
 8000e3e:	68a0      	ldr	r0, [r4, #8]
            WRITE_REG(DMA2D->FGCMAR, reinterpret_cast<uint32_t>(&palette->data));
 8000e40:	1d02      	adds	r2, r0, #4
 8000e42:	62da      	str	r2, [r3, #44]	@ 0x2c
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000e44:	7f22      	ldrb	r2, [r4, #28]
 8000e46:	ea45 6502 	orr.w	r5, r5, r2, lsl #24
 8000e4a:	f445 3500 	orr.w	r5, r5, #131072	@ 0x20000
 8000e4e:	61dd      	str	r5, [r3, #28]
            WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000e50:	625e      	str	r6, [r3, #36]	@ 0x24
            WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000e52:	6159      	str	r1, [r3, #20]
            switch ((Bitmap::ClutFormat)palette->format)
 8000e54:	7801      	ldrb	r1, [r0, #0]
 8000e56:	b141      	cbz	r1, 8000e6a <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xca>
 8000e58:	2901      	cmp	r1, #1
 8000e5a:	d021      	beq.n	8000ea0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x100>
                assert(0 && "Unsupported format");
 8000e5c:	4b22      	ldr	r3, [pc, #136]	@ (8000ee8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x148>)
 8000e5e:	4a23      	ldr	r2, [pc, #140]	@ (8000eec <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x14c>)
 8000e60:	4823      	ldr	r0, [pc, #140]	@ (8000ef0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x150>)
 8000e62:	f44f 718d 	mov.w	r1, #282	@ 0x11a
 8000e66:	f021 fe8d 	bl	8022b84 <__assert_func>
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_ARGB8888 << DMA2D_FGPFCCR_CCM_Pos)));
 8000e6a:	69da      	ldr	r2, [r3, #28]
 8000e6c:	8841      	ldrh	r1, [r0, #2]
 8000e6e:	f422 427f 	bic.w	r2, r2, #65280	@ 0xff00
 8000e72:	3901      	subs	r1, #1
 8000e74:	f022 0210 	bic.w	r2, r2, #16
 8000e78:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 8000e7c:	61da      	str	r2, [r3, #28]
            bool blend = true;
 8000e7e:	2101      	movs	r1, #1
            SET_BIT(DMA2D->FGPFCCR, DMA2D_FGPFCCR_START);
 8000e80:	4b15      	ldr	r3, [pc, #84]	@ (8000ed8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 8000e82:	69da      	ldr	r2, [r3, #28]
 8000e84:	f042 0220 	orr.w	r2, r2, #32
 8000e88:	61da      	str	r2, [r3, #28]
            while ((READ_REG(DMA2D->FGPFCCR) & DMA2D_FGPFCCR_START) != 0U)
 8000e8a:	69da      	ldr	r2, [r3, #28]
 8000e8c:	0692      	lsls	r2, r2, #26
 8000e8e:	d4fc      	bmi.n	8000e8a <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xea>
            DMA2D->IFCR = (DMA2D_FLAG_CTC);
 8000e90:	2210      	movs	r2, #16
 8000e92:	609a      	str	r2, [r3, #8]
            if (blend)
 8000e94:	2900      	cmp	r1, #0
 8000e96:	d0b9      	beq.n	8000e0c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x6c>
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
 8000e98:	4a16      	ldr	r2, [pc, #88]	@ (8000ef4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x154>)
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
 8000e9a:	601a      	str	r2, [r3, #0]
}
 8000e9c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
                if (blitOp.alpha == 255)
 8000ea0:	f1b2 01ff 	subs.w	r1, r2, #255	@ 0xff
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 8000ea4:	69da      	ldr	r2, [r3, #28]
 8000ea6:	8840      	ldrh	r0, [r0, #2]
 8000ea8:	f422 427f 	bic.w	r2, r2, #65280	@ 0xff00
 8000eac:	f100 30ff 	add.w	r0, r0, #4294967295
 8000eb0:	f022 0210 	bic.w	r2, r2, #16
 8000eb4:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
 8000eb8:	f042 0210 	orr.w	r2, r2, #16
                if (blitOp.alpha == 255)
 8000ebc:	bf18      	it	ne
 8000ebe:	2101      	movne	r1, #1
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 8000ec0:	61da      	str	r2, [r3, #28]
                break;
 8000ec2:	e7dd      	b.n	8000e80 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xe0>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000ec4:	ea45 6202 	orr.w	r2, r5, r2, lsl #24
 8000ec8:	4b03      	ldr	r3, [pc, #12]	@ (8000ed8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 8000eca:	f442 3200 	orr.w	r2, r2, #131072	@ 0x20000
 8000ece:	e7b4      	b.n	8000e3a <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x9a>
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
 8000ed0:	f242 3201 	movw	r2, #8961	@ 0x2301
 8000ed4:	e7e1      	b.n	8000e9a <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xfa>
 8000ed6:	bf00      	nop
 8000ed8:	4002b000 	.word	0x4002b000
 8000edc:	00012301 	.word	0x00012301
 8000ee0:	00020009 	.word	0x00020009
 8000ee4:	0002000a 	.word	0x0002000a
 8000ee8:	08023fa5 	.word	0x08023fa5
 8000eec:	08023fbf 	.word	0x08023fbf
 8000ef0:	08023f0f 	.word	0x08023f0f
 8000ef4:	00022301 	.word	0x00022301

08000ef8 <DMA2D_XferCpltCallback>:
        return instance;
 8000ef8:	4b02      	ldr	r3, [pc, #8]	@ (8000f04 <DMA2D_XferCpltCallback+0xc>)
 8000efa:	681b      	ldr	r3, [r3, #0]
 8000efc:	6858      	ldr	r0, [r3, #4]
        dma.signalDMAInterrupt();
 8000efe:	6803      	ldr	r3, [r0, #0]
 8000f00:	695b      	ldr	r3, [r3, #20]
 8000f02:	4718      	bx	r3
 8000f04:	20014044 	.word	0x20014044

08000f08 <_ZN8STM32DMAC1Ev>:
STM32DMA::STM32DMA()
 8000f08:	b570      	push	{r4, r5, r6, lr}
 8000f0a:	4604      	mov	r4, r0
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0]))
 8000f0c:	4625      	mov	r5, r4
 8000f0e:	4b0a      	ldr	r3, [pc, #40]	@ (8000f38 <_ZN8STM32DMAC1Ev+0x30>)
 8000f10:	300c      	adds	r0, #12
     * Constructs a DMA Interface object.
     *
     * @param [in] dmaQueue Reference to the queue of DMA operations.
     */
    DMA_Interface(DMA_Queue& dmaQueue)
        : queue(dmaQueue), isRunning(false), isAllowed(false)
 8000f12:	2600      	movs	r6, #0
 8000f14:	6060      	str	r0, [r4, #4]
 8000f16:	7226      	strb	r6, [r4, #8]
 8000f18:	7266      	strb	r6, [r4, #9]
 8000f1a:	f845 3b20 	str.w	r3, [r5], #32
 8000f1e:	2260      	movs	r2, #96	@ 0x60
 8000f20:	4629      	mov	r1, r5
 8000f22:	f00a fb09 	bl	800b538 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>
 8000f26:	f504 635a 	add.w	r3, r4, #3488	@ 0xda0
        : color(0)
 8000f2a:	60ee      	str	r6, [r5, #12]
 8000f2c:	3524      	adds	r5, #36	@ 0x24
 8000f2e:	429d      	cmp	r5, r3
 8000f30:	d1fb      	bne.n	8000f2a <_ZN8STM32DMAC1Ev+0x22>
}
 8000f32:	4620      	mov	r0, r4
 8000f34:	bd70      	pop	{r4, r5, r6, pc}
 8000f36:	bf00      	nop
 8000f38:	080247a0 	.word	0x080247a0

08000f3c <_ZN8touchgfx5paint8tearDownEv>:
 * @brief Waits until previous DMA drawing operation has finished
 */
void tearDown()
{
    /* Wait for DMA2D to finish last run */
    while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
 8000f3c:	4b03      	ldr	r3, [pc, #12]	@ (8000f4c <_ZN8touchgfx5paint8tearDownEv+0x10>)
 8000f3e:	681a      	ldr	r2, [r3, #0]
 8000f40:	07d2      	lsls	r2, r2, #31
 8000f42:	d4fc      	bmi.n	8000f3e <_ZN8touchgfx5paint8tearDownEv+0x2>

    /* Clear transfer flags */
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
 8000f44:	2223      	movs	r2, #35	@ 0x23
 8000f46:	609a      	str	r2, [r3, #8]
}
 8000f48:	4770      	bx	lr
 8000f4a:	bf00      	nop
 8000f4c:	4002b000 	.word	0x4002b000

08000f50 <_ZN8touchgfx5paint9flushLineEPmi>:
 *
 * @brief Flushes decoded RGB pixels when rendering compressed images
 */
void flushLine(uint32_t* addr, int sizebytes)
{
}
 8000f50:	4770      	bx	lr
	...

08000f54 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>:
 *
 * @brief Renders Canvas Widget chunks using DMA.
 * This functions will not generate an interrupt, and will not affect the DMA queue.
 */
void lineFromColor(uint16_t* const ptr, const unsigned count, const uint32_t color, const uint8_t alpha, const uint32_t color565)
{
 8000f54:	b530      	push	{r4, r5, lr}
    /* Wait for DMA2D to finish last run */
    while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
 8000f56:	4c0f      	ldr	r4, [pc, #60]	@ (8000f94 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x40>)
 8000f58:	6825      	ldr	r5, [r4, #0]
 8000f5a:	07ed      	lsls	r5, r5, #31
 8000f5c:	d4fc      	bmi.n	8000f58 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x4>

    /* Clear transfer flags */
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
 8000f5e:	2523      	movs	r5, #35	@ 0x23

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 8000f60:	0409      	lsls	r1, r1, #16
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
 8000f62:	60a5      	str	r5, [r4, #8]
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 8000f64:	f041 0101 	orr.w	r1, r1, #1
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
 8000f68:	2502      	movs	r5, #2

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));

    if (alpha < 0xFF)
 8000f6a:	2bff      	cmp	r3, #255	@ 0xff
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
 8000f6c:	6365      	str	r5, [r4, #52]	@ 0x34
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 8000f6e:	6461      	str	r1, [r4, #68]	@ 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));
 8000f70:	63e0      	str	r0, [r4, #60]	@ 0x3c
    if (alpha < 0xFF)
 8000f72:	d00a      	beq.n	8000f8a <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x36>
    {
        /* Write DMA2D BGPFCCR register */
        WRITE_REG(DMA2D->BGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));

        /* Write DMA2D FGPFCCR register */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
 8000f74:	4908      	ldr	r1, [pc, #32]	@ (8000f98 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x44>)
        WRITE_REG(DMA2D->BGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000f76:	6265      	str	r5, [r4, #36]	@ 0x24
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
 8000f78:	ea41 6303 	orr.w	r3, r1, r3, lsl #24
 8000f7c:	61e3      	str	r3, [r4, #28]

        /* Configure DMA2D source address */
        WRITE_REG(DMA2D->FGMAR, (uint32_t)ptr);

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_M2M_BLEND));
 8000f7e:	4b07      	ldr	r3, [pc, #28]	@ (8000f9c <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x48>)
        WRITE_REG(DMA2D->FGCOLR, color);
 8000f80:	6222      	str	r2, [r4, #32]
        WRITE_REG(DMA2D->BGMAR, (uint32_t)ptr);
 8000f82:	6160      	str	r0, [r4, #20]
        WRITE_REG(DMA2D->FGMAR, (uint32_t)ptr);
 8000f84:	60e0      	str	r0, [r4, #12]

        /* Set color */
        WRITE_REG(DMA2D->OCOLR, color565);

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_R2M));
 8000f86:	6023      	str	r3, [r4, #0]
    }
}
 8000f88:	bd30      	pop	{r4, r5, pc}
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_FGPFCCR_AM_Pos));
 8000f8a:	61e5      	str	r5, [r4, #28]
        WRITE_REG(DMA2D->OCOLR, color565);
 8000f8c:	9b03      	ldr	r3, [sp, #12]
 8000f8e:	63a3      	str	r3, [r4, #56]	@ 0x38
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_R2M));
 8000f90:	4b03      	ldr	r3, [pc, #12]	@ (8000fa0 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x4c>)
 8000f92:	e7f8      	b.n	8000f86 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x32>
 8000f94:	4002b000 	.word	0x4002b000
 8000f98:	00010009 	.word	0x00010009
 8000f9c:	00020001 	.word	0x00020001
 8000fa0:	00030001 	.word	0x00030001

08000fa4 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh>:

void lineFromRGB565(uint16_t* const ptr, const uint16_t* const data, const unsigned count, const uint8_t alpha)
{
 8000fa4:	b530      	push	{r4, r5, lr}
    /* Wait for DMA2D to finish last run */
    while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
 8000fa6:	4c0e      	ldr	r4, [pc, #56]	@ (8000fe0 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x3c>)
 8000fa8:	6825      	ldr	r5, [r4, #0]
 8000faa:	07ed      	lsls	r5, r5, #31
 8000fac:	d4fc      	bmi.n	8000fa8 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x4>

    /* Clear transfer flags */
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
 8000fae:	2523      	movs	r5, #35	@ 0x23

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 8000fb0:	0412      	lsls	r2, r2, #16
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
 8000fb2:	60a5      	str	r5, [r4, #8]
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 8000fb4:	f042 0201 	orr.w	r2, r2, #1
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
 8000fb8:	2502      	movs	r5, #2
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));

    /* Configure DMA2D source address */
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(data));

    if (alpha < 0xFF)
 8000fba:	2bff      	cmp	r3, #255	@ 0xff
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
 8000fbc:	6365      	str	r5, [r4, #52]	@ 0x34
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 8000fbe:	6462      	str	r2, [r4, #68]	@ 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));
 8000fc0:	63e0      	str	r0, [r4, #60]	@ 0x3c
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(data));
 8000fc2:	60e1      	str	r1, [r4, #12]
    if (alpha < 0xFF)
 8000fc4:	d008      	beq.n	8000fd8 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x34>
    {
        /* Set DMA2D color mode and alpha mode */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
 8000fc6:	061b      	lsls	r3, r3, #24
 8000fc8:	f043 1302 	orr.w	r3, r3, #131074	@ 0x20002
 8000fcc:	61e3      	str	r3, [r4, #28]

        /* Configure DMA2D Stream source2 address */
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(ptr));

        /* Set DMA2D mode */
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_CR_START);
 8000fce:	4b05      	ldr	r3, [pc, #20]	@ (8000fe4 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x40>)
        WRITE_REG(DMA2D->BGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000fd0:	6265      	str	r5, [r4, #36]	@ 0x24
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(ptr));
 8000fd2:	6160      	str	r0, [r4, #20]
    {
        /* Set DMA2D color mode and alpha mode */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));

        /* Start DMA2D : M2M Mode */
        WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_CR_START);
 8000fd4:	6023      	str	r3, [r4, #0]
    }
}
 8000fd6:	bd30      	pop	{r4, r5, pc}
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
 8000fd8:	4b03      	ldr	r3, [pc, #12]	@ (8000fe8 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x44>)
 8000fda:	61e3      	str	r3, [r4, #28]
        WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_CR_START);
 8000fdc:	2301      	movs	r3, #1
 8000fde:	e7f9      	b.n	8000fd4 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x30>
 8000fe0:	4002b000 	.word	0x4002b000
 8000fe4:	00020001 	.word	0x00020001
 8000fe8:	ff020002 	.word	0xff020002

08000fec <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh>:

void lineFromARGB8888(uint16_t* const ptr, const uint32_t* const data, const unsigned count, const uint8_t alpha)
{
 8000fec:	b530      	push	{r4, r5, lr}
    /* Wait for DMA2D to finish last run */
    while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
 8000fee:	4c0b      	ldr	r4, [pc, #44]	@ (800101c <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh+0x30>)
 8000ff0:	6825      	ldr	r5, [r4, #0]
 8000ff2:	07ed      	lsls	r5, r5, #31
 8000ff4:	d4fc      	bmi.n	8000ff0 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh+0x4>

    /* Clear transfer flags */
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
 8000ff6:	2523      	movs	r5, #35	@ 0x23

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 8000ff8:	0412      	lsls	r2, r2, #16

    /* Configure DMA2D source address */
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(data));

    /* Set DMA2D color mode and alpha mode */
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_ARGB8888 | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
 8000ffa:	061b      	lsls	r3, r3, #24
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
 8000ffc:	60a5      	str	r5, [r4, #8]
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_ARGB8888 | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
 8000ffe:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
 8001002:	2502      	movs	r5, #2
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 8001004:	f042 0201 	orr.w	r2, r2, #1
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
 8001008:	6365      	str	r5, [r4, #52]	@ 0x34
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 800100a:	6462      	str	r2, [r4, #68]	@ 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));
 800100c:	63e0      	str	r0, [r4, #60]	@ 0x3c
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(data));
 800100e:	60e1      	str	r1, [r4, #12]
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_ARGB8888 | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
 8001010:	61e3      	str	r3, [r4, #28]

    /* Configure DMA2D Stream source2 address */
    WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(ptr));

    /* Set DMA2D mode */
    WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_CR_START);
 8001012:	4b03      	ldr	r3, [pc, #12]	@ (8001020 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh+0x34>)
    WRITE_REG(DMA2D->BGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8001014:	6265      	str	r5, [r4, #36]	@ 0x24
    WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(ptr));
 8001016:	6160      	str	r0, [r4, #20]
    WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_CR_START);
 8001018:	6023      	str	r3, [r4, #0]
}
 800101a:	bd30      	pop	{r4, r5, pc}
 800101c:	4002b000 	.word	0x4002b000
 8001020:	00020001 	.word	0x00020001

08001024 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    };

    virtual uint16_t capacity() const
    {
        return NUMBER_OF_ELEMENTS;
    }
 8001024:	2001      	movs	r0, #1
 8001026:	4770      	bx	lr

08001028 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:

    virtual uint32_t element_size()
    {
        return sizeof(stBlocks[0]);
    }
 8001028:	200c      	movs	r0, #12
 800102a:	4770      	bx	lr

0800102c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt>:

protected:
    virtual void* element(uint16_t index)
    {
        return &stBlocks[index];
 800102c:	230c      	movs	r3, #12
 800102e:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8001032:	3008      	adds	r0, #8
 8001034:	4770      	bx	lr

08001036 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt>:

    virtual const void* element(uint16_t index) const
    {
        return &stBlocks[index];
 8001036:	230c      	movs	r3, #12
 8001038:	fb03 0001 	mla	r0, r3, r1, r0
    }
 800103c:	3008      	adds	r0, #8
 800103e:	4770      	bx	lr

08001040 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 8001040:	2001      	movs	r0, #1
 8001042:	4770      	bx	lr

08001044 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 8001044:	f241 0004 	movw	r0, #4100	@ 0x1004
 8001048:	4770      	bx	lr

0800104a <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 800104a:	f241 0304 	movw	r3, #4100	@ 0x1004
 800104e:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8001052:	3008      	adds	r0, #8
 8001054:	4770      	bx	lr

08001056 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8001056:	f241 0304 	movw	r3, #4100	@ 0x1004
 800105a:	fb03 0001 	mla	r0, r3, r1, r0
    }
 800105e:	3008      	adds	r0, #8
 8001060:	4770      	bx	lr

08001062 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 8001062:	2001      	movs	r0, #1
 8001064:	4770      	bx	lr

08001066 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 8001066:	2010      	movs	r0, #16
 8001068:	4770      	bx	lr

0800106a <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 800106a:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 800106e:	3008      	adds	r0, #8
 8001070:	4770      	bx	lr

08001072 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8001072:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 8001076:	3008      	adds	r0, #8
 8001078:	4770      	bx	lr

0800107a <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>:
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
    {
        app.gotoScreen1ScreenNoTransition();
 800107a:	4608      	mov	r0, r1
 800107c:	f001 bcea 	b.w	8002a54 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>

08001080 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>:
class Partition : public AbstractPartition
 8001080:	b510      	push	{r4, lr}
 8001082:	4b03      	ldr	r3, [pc, #12]	@ (8001090 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8001084:	6003      	str	r3, [r0, #0]
 8001086:	4604      	mov	r4, r0
 8001088:	f009 f884 	bl	800a194 <_ZN8touchgfx17AbstractPartitionD1Ev>
 800108c:	4620      	mov	r0, r4
 800108e:	bd10      	pop	{r4, pc}
 8001090:	08024858 	.word	0x08024858

08001094 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8001094:	b510      	push	{r4, lr}
 8001096:	4604      	mov	r4, r0
 8001098:	f7ff fff2 	bl	8001080 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>
 800109c:	4620      	mov	r0, r4
 800109e:	2114      	movs	r1, #20
 80010a0:	f020 fe33 	bl	8021d0a <_ZdlPvj>
 80010a4:	4620      	mov	r0, r4
 80010a6:	bd10      	pop	{r4, pc}

080010a8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 80010a8:	b510      	push	{r4, lr}
 80010aa:	4b03      	ldr	r3, [pc, #12]	@ (80010b8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 80010ac:	6003      	str	r3, [r0, #0]
 80010ae:	4604      	mov	r4, r0
 80010b0:	f009 f870 	bl	800a194 <_ZN8touchgfx17AbstractPartitionD1Ev>
 80010b4:	4620      	mov	r0, r4
 80010b6:	bd10      	pop	{r4, pc}
 80010b8:	08024824 	.word	0x08024824

080010bc <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 80010bc:	b510      	push	{r4, lr}
 80010be:	4604      	mov	r4, r0
 80010c0:	f7ff fff2 	bl	80010a8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 80010c4:	4620      	mov	r0, r4
 80010c6:	f241 010c 	movw	r1, #4108	@ 0x100c
 80010ca:	f020 fe1e 	bl	8021d0a <_ZdlPvj>
 80010ce:	4620      	mov	r0, r4
 80010d0:	bd10      	pop	{r4, pc}
	...

080010d4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 80010d4:	b510      	push	{r4, lr}
 80010d6:	4b03      	ldr	r3, [pc, #12]	@ (80010e4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 80010d8:	6003      	str	r3, [r0, #0]
 80010da:	4604      	mov	r4, r0
 80010dc:	f009 f85a 	bl	800a194 <_ZN8touchgfx17AbstractPartitionD1Ev>
 80010e0:	4620      	mov	r0, r4
 80010e2:	bd10      	pop	{r4, pc}
 80010e4:	080247f0 	.word	0x080247f0

080010e8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 80010e8:	b510      	push	{r4, lr}
 80010ea:	4604      	mov	r4, r0
 80010ec:	f7ff fff2 	bl	80010d4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 80010f0:	4620      	mov	r0, r4
 80010f2:	2118      	movs	r1, #24
 80010f4:	f020 fe09 	bl	8021d0a <_ZdlPvj>
 80010f8:	4620      	mov	r0, r4
 80010fa:	bd10      	pop	{r4, pc}

080010fc <_ZN12FrontendHeapD1Ev>:
#ifndef FRONTENDHEAP_HPP
#define FRONTENDHEAP_HPP

#include <gui_generated/common/FrontendHeapBase.hpp>

class FrontendHeap : public FrontendHeapBase
 80010fc:	b510      	push	{r4, lr}
 80010fe:	4b09      	ldr	r3, [pc, #36]	@ (8001124 <_ZN12FrontendHeapD1Ev+0x28>)
 8001100:	6003      	str	r3, [r0, #0]
 8001102:	4604      	mov	r4, r0
 8001104:	f500 5081 	add.w	r0, r0, #4128	@ 0x1020
 8001108:	3018      	adds	r0, #24
 800110a:	f7ff ffb9 	bl	8001080 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>
 800110e:	f104 002c 	add.w	r0, r4, #44	@ 0x2c
 8001112:	f7ff ffc9 	bl	80010a8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8001116:	f104 0014 	add.w	r0, r4, #20
 800111a:	f7ff ffdb 	bl	80010d4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 800111e:	4620      	mov	r0, r4
 8001120:	bd10      	pop	{r4, pc}
 8001122:	bf00      	nop
 8001124:	0802488c 	.word	0x0802488c

08001128 <__tcf_0>:
                            > > CombinedTransitionTypes;
    typedef touchgfx::meta::select_type_maxsize< CombinedTransitionTypes >::type MaxTransitionType;

    static FrontendHeap& getInstance()
    {
        static FrontendHeap instance;
 8001128:	b508      	push	{r3, lr}
 800112a:	4802      	ldr	r0, [pc, #8]	@ (8001134 <__tcf_0+0xc>)
 800112c:	f7ff ffe6 	bl	80010fc <_ZN12FrontendHeapD1Ev>
 8001130:	bd08      	pop	{r3, pc}
 8001132:	bf00      	nop
 8001134:	2000139c 	.word	0x2000139c

08001138 <_ZN12FrontendHeapD0Ev>:
class FrontendHeap : public FrontendHeapBase
 8001138:	b510      	push	{r4, lr}
 800113a:	4604      	mov	r4, r0
 800113c:	f7ff ffde 	bl	80010fc <_ZN12FrontendHeapD1Ev>
 8001140:	4620      	mov	r0, r4
 8001142:	f241 11ac 	movw	r1, #4524	@ 0x11ac
 8001146:	f020 fde0 	bl	8021d0a <_ZdlPvj>
 800114a:	4620      	mov	r0, r4
 800114c:	bd10      	pop	{r4, pc}
	...

08001150 <touchgfx_init>:
static ApplicationFontProvider fontProvider;
static Texts texts;
static TouchGFXHAL hal(dma, display, tc, 240, 320);

void touchgfx_init()
{
 8001150:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
    Bitmap::registerBitmapDatabase(BitmapDatabase::getInstance(), BitmapDatabase::getInstanceSize());
 8001154:	f001 fb00 	bl	8002758 <_ZN14BitmapDatabase11getInstanceEv>
 8001158:	4605      	mov	r5, r0
 800115a:	f001 fb01 	bl	8002760 <_ZN14BitmapDatabase15getInstanceSizeEv>
 800115e:	2400      	movs	r4, #0
 8001160:	4601      	mov	r1, r0
 8001162:	4623      	mov	r3, r4
 8001164:	4628      	mov	r0, r5
 8001166:	4622      	mov	r2, r4
 8001168:	9400      	str	r4, [sp, #0]
 800116a:	f011 fd3b 	bl	8012be4 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>
     *
     * @param  t The array of texts.
     */
    static void registerTexts(const Texts* t)
    {
        texts = t;
 800116e:	4b27      	ldr	r3, [pc, #156]	@ (800120c <touchgfx_init+0xbc>)
 8001170:	4a27      	ldr	r2, [pc, #156]	@ (8001210 <touchgfx_init+0xc0>)
 8001172:	601a      	str	r2, [r3, #0]
    TypedText::registerTexts(&texts);
    Texts::setLanguage(0);
 8001174:	4620      	mov	r0, r4
 8001176:	f001 ffe9 	bl	800314c <_ZN8touchgfx5Texts11setLanguageEt>
        static FrontendHeap instance;
 800117a:	4d26      	ldr	r5, [pc, #152]	@ (8001214 <touchgfx_init+0xc4>)
     *
     * @param renderer  The renderer to be used by LCD when dealing with vector fonts.
     */
    void setVectorFontRenderer(VectorFontRenderer* renderer)
    {
        vectorFontRenderer = renderer;
 800117c:	4b26      	ldr	r3, [pc, #152]	@ (8001218 <touchgfx_init+0xc8>)
 800117e:	4a27      	ldr	r2, [pc, #156]	@ (800121c <touchgfx_init+0xcc>)

    display.setVectorFontRenderer(&vectorFontRenderer);

    FontManager::setFontProvider(&fontProvider);
 8001180:	4827      	ldr	r0, [pc, #156]	@ (8001220 <touchgfx_init+0xd0>)
 8001182:	609a      	str	r2, [r3, #8]
 8001184:	f011 fc96 	bl	8012ab4 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>
 8001188:	682b      	ldr	r3, [r5, #0]
 800118a:	f3bf 8f5b 	dmb	ish
 800118e:	07db      	lsls	r3, r3, #31
 8001190:	d435      	bmi.n	80011fe <touchgfx_init+0xae>
 8001192:	4628      	mov	r0, r5
 8001194:	f020 fdbb 	bl	8021d0e <__cxa_guard_acquire>
 8001198:	b388      	cbz	r0, 80011fe <touchgfx_init+0xae>
     */
    MVPHeap(AbstractPartition& pres,
            AbstractPartition& scr,
            AbstractPartition& tra,
            MVPApplication& app)
        : presenterStorage(pres),
 800119a:	4c22      	ldr	r4, [pc, #136]	@ (8001224 <touchgfx_init+0xd4>)
          screenStorage(scr),
          transitionStorage(tra),
 800119c:	4f22      	ldr	r7, [pc, #136]	@ (8001228 <touchgfx_init+0xd8>)
    Model model;
    FrontendApplication app;

private:
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
                     app(model, *this)
 800119e:	4b23      	ldr	r3, [pc, #140]	@ (800122c <touchgfx_init+0xdc>)
 80011a0:	6023      	str	r3, [r4, #0]
          frontendApplication(app)
 80011a2:	f107 0618 	add.w	r6, r7, #24
        : presenterStorage(pres),
 80011a6:	f104 0014 	add.w	r0, r4, #20
          screenStorage(scr),
 80011aa:	f104 082c 	add.w	r8, r4, #44	@ 0x2c
        : presenterStorage(pres),
 80011ae:	6060      	str	r0, [r4, #4]
          screenStorage(scr),
 80011b0:	f8c4 8008 	str.w	r8, [r4, #8]
          transitionStorage(tra),
 80011b4:	60e7      	str	r7, [r4, #12]
          frontendApplication(app)
 80011b6:	6126      	str	r6, [r4, #16]
 80011b8:	f008 ffee 	bl	800a198 <_ZN8touchgfx17AbstractPartitionC1Ev>
 80011bc:	4b1c      	ldr	r3, [pc, #112]	@ (8001230 <touchgfx_init+0xe0>)
 80011be:	6163      	str	r3, [r4, #20]
 80011c0:	4640      	mov	r0, r8
 80011c2:	f008 ffe9 	bl	800a198 <_ZN8touchgfx17AbstractPartitionC1Ev>
 80011c6:	4b1b      	ldr	r3, [pc, #108]	@ (8001234 <touchgfx_init+0xe4>)
 80011c8:	62e3      	str	r3, [r4, #44]	@ 0x2c
 80011ca:	4638      	mov	r0, r7
 80011cc:	f008 ffe4 	bl	800a198 <_ZN8touchgfx17AbstractPartitionC1Ev>
 80011d0:	f504 5380 	add.w	r3, r4, #4096	@ 0x1000
 80011d4:	f103 004c 	add.w	r0, r3, #76	@ 0x4c
 80011d8:	4a17      	ldr	r2, [pc, #92]	@ (8001238 <touchgfx_init+0xe8>)
 80011da:	639a      	str	r2, [r3, #56]	@ 0x38
 80011dc:	f002 f82c 	bl	8003238 <_ZN5ModelC1Ev>
 80011e0:	4622      	mov	r2, r4
 80011e2:	f107 0114 	add.w	r1, r7, #20
 80011e6:	4630      	mov	r0, r6
 80011e8:	f002 f81c 	bl	8003224 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>
 80011ec:	4630      	mov	r0, r6
 80011ee:	f001 fc31 	bl	8002a54 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>
        static FrontendHeap instance;
 80011f2:	4812      	ldr	r0, [pc, #72]	@ (800123c <touchgfx_init+0xec>)
 80011f4:	f021 fce4 	bl	8022bc0 <atexit>
 80011f8:	4628      	mov	r0, r5
 80011fa:	f020 fd94 	bl	8021d26 <__cxa_guard_release>
    (void)heap;

    /*
     * Initialize TouchGFX
     */
    hal.initialize();
 80011fe:	4810      	ldr	r0, [pc, #64]	@ (8001240 <touchgfx_init+0xf0>)
}
 8001200:	b002      	add	sp, #8
 8001202:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    hal.initialize();
 8001206:	f7ff bbe5 	b.w	80009d4 <_ZN11TouchGFXHAL10initializeEv>
 800120a:	bf00      	nop
 800120c:	200140a8 	.word	0x200140a8
 8001210:	20000548 	.word	0x20000548
 8001214:	20001398 	.word	0x20001398
 8001218:	20000568 	.word	0x20000568
 800121c:	2000054c 	.word	0x2000054c
 8001220:	20000008 	.word	0x20000008
 8001224:	2000139c 	.word	0x2000139c
 8001228:	200023d4 	.word	0x200023d4
 800122c:	0802488c 	.word	0x0802488c
 8001230:	080247f0 	.word	0x080247f0
 8001234:	08024824 	.word	0x08024824
 8001238:	08024858 	.word	0x08024858
 800123c:	08001129 	.word	0x08001129
 8001240:	200004c4 	.word	0x200004c4

08001244 <touchgfx_components_init>:

void touchgfx_components_init()
{
}
 8001244:	4770      	bx	lr
	...

08001248 <touchgfx_taskEntry>:
     * Main event loop. Will wait for VSYNC signal, and then process next frame. Call
     * this function from your GUI task.
     *
     * Note This function never returns
     */
    hal.taskEntry();
 8001248:	4801      	ldr	r0, [pc, #4]	@ (8001250 <touchgfx_taskEntry+0x8>)
 800124a:	f7ff bbd1 	b.w	80009f0 <_ZN11TouchGFXHAL9taskEntryEv>
 800124e:	bf00      	nop
 8001250:	200004c4 	.word	0x200004c4

08001254 <_GLOBAL__sub_I_touchgfx_init>:
}
 8001254:	b570      	push	{r4, r5, r6, lr}
static STM32DMA dma;
 8001256:	4e26      	ldr	r6, [pc, #152]	@ (80012f0 <_GLOBAL__sub_I_touchgfx_init+0x9c>)
{
public:

    STM32TouchController() {}
 8001258:	4c26      	ldr	r4, [pc, #152]	@ (80012f4 <_GLOBAL__sub_I_touchgfx_init+0xa0>)
static LCD16bpp display;
 800125a:	4d27      	ldr	r5, [pc, #156]	@ (80012f8 <_GLOBAL__sub_I_touchgfx_init+0xa4>)
 800125c:	4b27      	ldr	r3, [pc, #156]	@ (80012fc <_GLOBAL__sub_I_touchgfx_init+0xa8>)
 800125e:	6023      	str	r3, [r4, #0]
static STM32DMA dma;
 8001260:	4630      	mov	r0, r6
 8001262:	f7ff fe51 	bl	8000f08 <_ZN8STM32DMAC1Ev>
static LCD16bpp display;
 8001266:	4628      	mov	r0, r5
 8001268:	f016 fdc2 	bl	8017df0 <_ZN8touchgfx8LCD16bppC1Ev>
static VectorFontRendererImpl vectorFontRenderer;
 800126c:	4824      	ldr	r0, [pc, #144]	@ (8001300 <_GLOBAL__sub_I_touchgfx_init+0xac>)
 800126e:	f00f fd1f 	bl	8010cb0 <_ZN8touchgfx22VectorFontRendererImplC1Ev>
        : dma(dmaInterface),
 8001272:	4b24      	ldr	r3, [pc, #144]	@ (8001304 <_GLOBAL__sub_I_touchgfx_init+0xb0>)
          isFrontPorchEntered(false),
 8001274:	4824      	ldr	r0, [pc, #144]	@ (8001308 <_GLOBAL__sub_I_touchgfx_init+0xb4>)
          touchController(touchCtrl),
 8001276:	60dc      	str	r4, [r3, #12]
          mcuInstrumentation(0),
 8001278:	2200      	movs	r2, #0
          refreshStrategy(REFRESH_STRATEGY_DEFAULT),
 800127a:	f44f 7180 	mov.w	r1, #256	@ 0x100
          auxiliaryLCD(0),
 800127e:	e9c3 1212 	strd	r1, r2, [r3, #72]	@ 0x48
          touchSampleRate(1),
 8001282:	4922      	ldr	r1, [pc, #136]	@ (800130c <_GLOBAL__sub_I_touchgfx_init+0xb8>)
    };

public:
    /** Default constructor. Does nothing. */
    Gestures()
        : drag(), listener(0), dragThresholdValue(0)
 8001284:	861a      	strh	r2, [r3, #48]	@ 0x30
          vSyncCompensationEnabled(false),
 8001286:	e9c3 121a 	strd	r1, r2, [r3, #104]	@ 0x68
          isFrontPorchEntered(false),
 800128a:	4921      	ldr	r1, [pc, #132]	@ (8001310 <_GLOBAL__sub_I_touchgfx_init+0xbc>)
          useAuxiliaryLCD(false),
 800128c:	f883 2058 	strb.w	r2, [r3, #88]	@ 0x58
          isFrontPorchEntered(false),
 8001290:	e9c3 011e 	strd	r0, r1, [r3, #120]	@ 0x78
          minDrawingHeight(maxDrawingHeight / 3),    // Best guess based on testing (but not ideal in all cases)
 8001294:	491f      	ldr	r1, [pc, #124]	@ (8001314 <_GLOBAL__sub_I_touchgfx_init+0xc0>)
 8001296:	f8c3 1080 	str.w	r1, [r3, #128]	@ 0x80
        instance = this;
 800129a:	491f      	ldr	r1, [pc, #124]	@ (8001318 <_GLOBAL__sub_I_touchgfx_init+0xc4>)
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 800129c:	481f      	ldr	r0, [pc, #124]	@ (800131c <_GLOBAL__sub_I_touchgfx_init+0xc8>)
        instance = this;
 800129e:	600b      	str	r3, [r1, #0]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 80012a0:	21f0      	movs	r1, #240	@ 0xf0
          buttonController(0),
 80012a2:	e9c3 2204 	strd	r2, r2, [r3, #16]
 80012a6:	e9c3 2206 	strd	r2, r2, [r3, #24]
 80012aa:	e9c3 2208 	strd	r2, r2, [r3, #32]
 80012ae:	e9c3 220a 	strd	r2, r2, [r3, #40]	@ 0x28
          frameBuffer0(0),
 80012b2:	e9c3 220e 	strd	r2, r2, [r3, #56]	@ 0x38
          frameBuffer2(0),
 80012b6:	e9c3 2210 	strd	r2, r2, [r3, #64]	@ 0x40
class Rect
{
public:
    /** Default constructor. Resulting in an empty Rect with coordinates 0,0. */
    Rect()
        : x(0), y(0), width(0), height(0)
 80012ba:	e9c3 2214 	strd	r2, r2, [r3, #80]	@ 0x50
          lastX(0),
 80012be:	e9c3 2217 	strd	r2, r2, [r3, #92]	@ 0x5c
          lastY(0),
 80012c2:	665a      	str	r2, [r3, #100]	@ 0x64
          updateMCULoad(0),
 80012c4:	f883 2070 	strb.w	r2, [r3, #112]	@ 0x70
          cc_begin(0),
 80012c8:	675a      	str	r2, [r3, #116]	@ 0x74
          lcdRef(display),
 80012ca:	e9c3 6501 	strd	r6, r5, [r3, #4]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 80012ce:	8001      	strh	r1, [r0, #0]
 80012d0:	4813      	ldr	r0, [pc, #76]	@ (8001320 <_GLOBAL__sub_I_touchgfx_init+0xcc>)
 80012d2:	8001      	strh	r1, [r0, #0]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 80012d4:	4813      	ldr	r0, [pc, #76]	@ (8001324 <_GLOBAL__sub_I_touchgfx_init+0xd0>)
 80012d6:	f44f 71a0 	mov.w	r1, #320	@ 0x140
 80012da:	8001      	strh	r1, [r0, #0]
 80012dc:	4812      	ldr	r0, [pc, #72]	@ (8001328 <_GLOBAL__sub_I_touchgfx_init+0xd4>)
 80012de:	8001      	strh	r1, [r0, #0]
        DISPLAY_ROTATION = rotate0;
 80012e0:	4912      	ldr	r1, [pc, #72]	@ (800132c <_GLOBAL__sub_I_touchgfx_init+0xd8>)
 80012e2:	700a      	strb	r2, [r1, #0]
        nativeDisplayOrientation = ((width >= height) ? ORIENTATION_LANDSCAPE : ORIENTATION_PORTRAIT);
 80012e4:	2201      	movs	r2, #1
 80012e6:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
     * @param [in,out] display Reference to LCD interface.
     * @param [in,out] tc      Reference to Touch Controller driver.
     * @param width            Width of the display.
     * @param height           Height of the display.
     */
    TouchGFXHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) : TouchGFXGeneratedHAL(dma, display, tc, width, height)
 80012ea:	4a11      	ldr	r2, [pc, #68]	@ (8001330 <_GLOBAL__sub_I_touchgfx_init+0xdc>)
 80012ec:	601a      	str	r2, [r3, #0]
}
 80012ee:	bd70      	pop	{r4, r5, r6, pc}
 80012f0:	200005f4 	.word	0x200005f4
 80012f4:	20001394 	.word	0x20001394
 80012f8:	20000568 	.word	0x20000568
 80012fc:	08023c20 	.word	0x08023c20
 8001300:	2000054c 	.word	0x2000054c
 8001304:	200004c4 	.word	0x200004c4
 8001308:	01010000 	.word	0x01010000
 800130c:	01000001 	.word	0x01000001
 8001310:	00500400 	.word	0x00500400
 8001314:	0014001a 	.word	0x0014001a
 8001318:	20014044 	.word	0x20014044
 800131c:	20014036 	.word	0x20014036
 8001320:	2001403c 	.word	0x2001403c
 8001324:	20014038 	.word	0x20014038
 8001328:	2001403e 	.word	0x2001403e
 800132c:	2001403a 	.word	0x2001403a
 8001330:	080246b4 	.word	0x080246b4

08001334 <_GLOBAL__sub_D_touchgfx_init>:
static STM32DMA dma;
 8001334:	4801      	ldr	r0, [pc, #4]	@ (800133c <_GLOBAL__sub_D_touchgfx_init+0x8>)
 8001336:	f7ff bc73 	b.w	8000c20 <_ZN8STM32DMAD1Ev>
 800133a:	bf00      	nop
 800133c:	200005f4 	.word	0x200005f4

08001340 <_ZN8touchgfx8Drawable13getFirstChildEv>:
     * @see Container::getFirstChild
     */
    virtual Drawable* getFirstChild()
    {
        return 0;
    }
 8001340:	2000      	movs	r0, #0
 8001342:	4770      	bx	lr

08001344 <_ZN8touchgfx8Drawable4setXEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setX(int16_t x)
    {
        rect.x = x;
 8001344:	8081      	strh	r1, [r0, #4]
    }
 8001346:	4770      	bx	lr

08001348 <_ZN8touchgfx8Drawable4setYEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setY(int16_t y)
    {
        rect.y = y;
 8001348:	80c1      	strh	r1, [r0, #6]
    }
 800134a:	4770      	bx	lr

0800134c <_ZN8touchgfx8Drawable8setWidthEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setWidth(int16_t width)
    {
        rect.width = width;
 800134c:	8101      	strh	r1, [r0, #8]
    }
 800134e:	4770      	bx	lr

08001350 <_ZN8touchgfx8Drawable9setHeightEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setHeight(int16_t height)
    {
        rect.height = height;
 8001350:	8141      	strh	r1, [r0, #10]
    }
 8001352:	4770      	bx	lr

08001354 <_ZN8touchgfx8Drawable20childGeometryChangedEv>:
     * one or more of its children has changed. Currently only used in ScrollableContainer
     * to redraw scrollbars when the size of the scrolling contents changes.
     */
    virtual void childGeometryChanged()
    {
    }
 8001354:	4770      	bx	lr

08001356 <_ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE>:
     * @param  event The ClickEvent received from the HAL.
     */
    virtual void handleClickEvent(const ClickEvent& event)
    {
        (void)event; // Unused variable
    }
 8001356:	4770      	bx	lr

08001358 <_ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE>:
     * @param  event The GestureEvent received from the HAL.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
    {
        (void)event; // Unused variable
    }
 8001358:	4770      	bx	lr

0800135a <_ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE>:
     * @param  event The DragEvent received from the HAL.
     */
    virtual void handleDragEvent(const DragEvent& event)
    {
        (void)event; // Unused variable
    }
 800135a:	4770      	bx	lr

0800135c <_ZN8touchgfx8Drawable15handleTickEventEv>:
     *
     * @see Application::registerTimerWidget
     */
    virtual void handleTickEvent()
    {
    }
 800135c:	4770      	bx	lr

0800135e <_ZN8touchgfx8Drawable6moveToEss>:
     *
     * @see moveRelative, setXY
     *
     * @note Will redraw the appropriate areas of the screen.
     */
    virtual void moveTo(int16_t x, int16_t y)
 800135e:	b410      	push	{r4}
    {
        moveRelative(x - rect.x, y - rect.y);
 8001360:	88c4      	ldrh	r4, [r0, #6]
 8001362:	6803      	ldr	r3, [r0, #0]
 8001364:	1b12      	subs	r2, r2, r4
 8001366:	8884      	ldrh	r4, [r0, #4]
 8001368:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800136a:	1b09      	subs	r1, r1, r4
 800136c:	b212      	sxth	r2, r2
    }
 800136e:	f85d 4b04 	ldr.w	r4, [sp], #4
        moveRelative(x - rect.x, y - rect.y);
 8001372:	b209      	sxth	r1, r1
 8001374:	4718      	bx	r3

08001376 <_ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_>:
     * @note For TouchGFX internal use only.
     */
    void resetDrawChainCache()
    {
        // Resetting the cached indicators
        cachedVisibleRect.x = UNCACHED_INDICATOR;
 8001376:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 800137a:	8183      	strh	r3, [r0, #12]
        cachedAbsX = UNCACHED_INDICATOR;
 800137c:	f04f 33ff 	mov.w	r3, #4294967295
 8001380:	6203      	str	r3, [r0, #32]
     */
    virtual void setupDrawChain(const Rect& invalidatedArea, Drawable** nextPreviousElement)
    {
        (void)invalidatedArea; // Unused variable
        resetDrawChainCache();
        nextDrawChainElement = *nextPreviousElement;
 8001382:	6813      	ldr	r3, [r2, #0]
 8001384:	61c3      	str	r3, [r0, #28]
        *nextPreviousElement = this;
 8001386:	6010      	str	r0, [r2, #0]
    }
 8001388:	4770      	bx	lr

0800138a <_ZNK8touchgfx15AbstractPainter18getRenderingMethodEv>:
     * @return HARDWARE if painter uses hardware based drawing, SOFTWARE otherwise.
     */
    virtual HAL::RenderingMethod getRenderingMethod() const
    {
        return HAL::SOFTWARE;
    }
 800138a:	2000      	movs	r0, #0
 800138c:	4770      	bx	lr

0800138e <_ZNK8touchgfx15AbstractPainter5setupERKNS_4RectE>:
     *
     * @see AbstractPainter::paint, AbstractPainter::tearDown
     */
    virtual bool setup(const Rect& widgetRect) const
    {
        widgetWidth = widgetRect.width;
 800138e:	888b      	ldrh	r3, [r1, #4]
 8001390:	8083      	strh	r3, [r0, #4]
        return true;
    }
 8001392:	2001      	movs	r0, #1
 8001394:	4770      	bx	lr

08001396 <_ZNK8touchgfx15AbstractPainter8tearDownEv>:
     * @see AbstractPainter::paint, AbstractPainter::setup
     */
    virtual void tearDown() const
    {
        return;
    }
 8001396:	4770      	bx	lr

08001398 <_ZN8touchgfx12CanvasWidget8setAlphaEh>:
    }

    /** @copydoc Image::setAlpha */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 8001398:	f880 1026 	strb.w	r1, [r0, #38]	@ 0x26
    }
 800139c:	4770      	bx	lr

0800139e <_ZNK8touchgfx12CanvasWidget8getAlphaEv>:

    /** @copydoc Image::getAlpha() */
    virtual uint8_t getAlpha() const
    {
        return alpha;
    }
 800139e:	f890 0026 	ldrb.w	r0, [r0, #38]	@ 0x26
 80013a2:	4770      	bx	lr

080013a4 <_ZNK8touchgfx12CanvasWidget14getMinimalRectEv>:
     * overwritten in subclasses and return the minimal rectangle containing the shape. See
     * classes such as Circle for example implementations.
     *
     * @return The minimal rectangle containing the shape drawn.
     */
    virtual Rect getMinimalRect() const
 80013a4:	b510      	push	{r4, lr}
     * @param  rectY      The y coordinate.
     * @param  rectWidth  The width.
     * @param  rectHeight The height.
     */
    Rect(int16_t rectX, int16_t rectY, int16_t rectWidth, int16_t rectHeight)
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 80013a6:	2200      	movs	r2, #0
        return rect.width;
 80013a8:	f9b1 4008 	ldrsh.w	r4, [r1, #8]
        return rect.height;
 80013ac:	f9b1 100a 	ldrsh.w	r1, [r1, #10]
 80013b0:	8002      	strh	r2, [r0, #0]
 80013b2:	8042      	strh	r2, [r0, #2]
 80013b4:	8084      	strh	r4, [r0, #4]
 80013b6:	80c1      	strh	r1, [r0, #6]
    {
        return Rect(0, 0, getWidth(), getHeight());
    }
 80013b8:	bd10      	pop	{r4, pc}

080013ba <_ZNK8touchgfx12CanvasWidget12getSolidRectEv>:
        : x(0), y(0), width(0), height(0)
 80013ba:	2200      	movs	r2, #0
 80013bc:	8002      	strh	r2, [r0, #0]
 80013be:	8042      	strh	r2, [r0, #2]
 80013c0:	8082      	strh	r2, [r0, #4]
 80013c2:	80c2      	strh	r2, [r0, #6]
     *       lines will not be drawn and may cause strange display artifacts.
     */
    virtual Rect getSolidRect() const
    {
        return Rect();
    }
 80013c4:	4770      	bx	lr

080013c6 <_ZN8touchgfx17CWRVectorRenderer7setModeENS_14VectorRenderer8DrawModeE>:
     *
     * @param mode The filling mode.
     */
    virtual void setMode(DrawMode mode)
    {
        drawMode = mode;
 80013c6:	7701      	strb	r1, [r0, #28]
    }
 80013c8:	4770      	bx	lr

080013ca <_ZN8touchgfx17CWRVectorRenderer19setStrokeMiterLimitEf>:

    virtual void setStrokeMiterLimit(float miterLimit)
    {
        strokeMiterLimit = miterLimit;
 80013ca:	ed80 0a08 	vstr	s0, [r0, #32]
    }
 80013ce:	4770      	bx	lr

080013d0 <_ZN8touchgfx17CWRVectorRenderer17setStrokeLineJoinENS_16VGStrokeLineJoinE>:

    virtual void setStrokeLineJoin(VGStrokeLineJoin lineJoin)
    {
        strokeLineJoin = lineJoin;
 80013d0:	f880 1024 	strb.w	r1, [r0, #36]	@ 0x24
    }
 80013d4:	4770      	bx	lr

080013d6 <_ZN8touchgfx17CWRVectorRenderer16setStrokeLineCapENS_15VGStrokeLineCapE>:

    virtual void setStrokeLineCap(VGStrokeLineCap lineCap)
    {
        strokeLineCap = lineCap;
 80013d6:	f880 1025 	strb.w	r1, [r0, #37]	@ 0x25
    }
 80013da:	4770      	bx	lr

080013dc <_ZNK8touchgfx17CWRVectorRenderer17CanvasWidgetProxy16drawCanvasWidgetERKNS_4RectE>:
    class CanvasWidgetProxy : public CanvasWidget
    {
        virtual bool drawCanvasWidget(const Rect& invalidatedArea) const
        {
            return true;
        }
 80013dc:	2001      	movs	r0, #1
 80013de:	4770      	bx	lr

080013e0 <_ZN8touchgfx23CWRVectorRendererRGB56516getLinearPainterEv>:
class CWRVectorRendererRGB565 : public CWRVectorRenderer
{
    virtual AbstractPainterLinearGradient& getLinearPainter()
    {
        return linearPainter;
    }
 80013e0:	3098      	adds	r0, #152	@ 0x98
 80013e2:	4770      	bx	lr

080013e4 <_ZN8touchgfx23CWRVectorRendererRGB56520getColorPainterColorEv>:

    virtual AbstractPainterColor& getColorPainterColor()
    {
        return colorPainter;
    }
 80013e4:	308c      	adds	r0, #140	@ 0x8c
 80013e6:	4770      	bx	lr

080013e8 <_ZN8touchgfx23CWRVectorRendererRGB56515getColorPainterEv>:

    virtual AbstractPainter& getColorPainter()
    {
        return colorPainter;
    }
 80013e8:	3084      	adds	r0, #132	@ 0x84
 80013ea:	4770      	bx	lr

080013ec <_ZN8touchgfx17CWRVectorRenderer17CanvasWidgetProxyD1Ev>:
    class CanvasWidgetProxy : public CanvasWidget
 80013ec:	4770      	bx	lr

080013ee <_ZN8touchgfx23CWRVectorRendererRGB565D1Ev>:
class CWRVectorRendererRGB565 : public CWRVectorRenderer
 80013ee:	4770      	bx	lr

080013f0 <__tcf_1>:

namespace touchgfx
{
VectorRenderer* VectorRenderer::getInstance()
{
    static CWRVectorRendererRGB565 renderer;
 80013f0:	4770      	bx	lr
	...

080013f4 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>:
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80013f4:	4b03      	ldr	r3, [pc, #12]	@ (8001404 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv+0x10>)
 80013f6:	2290      	movs	r2, #144	@ 0x90
 80013f8:	f883 235a 	strb.w	r2, [r3, #858]	@ 0x35a
 80013fc:	f883 2358 	strb.w	r2, [r3, #856]	@ 0x358

void TouchGFXGeneratedHAL::configureInterrupts()
{
    NVIC_SetPriority(DMA2D_IRQn, 9);
    NVIC_SetPriority(LTDC_IRQn, 9);
}
 8001400:	4770      	bx	lr
 8001402:	bf00      	nop
 8001404:	e000e100 	.word	0xe000e100

08001408 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>:
    NVIC_DisableIRQ(LTDC_IRQn);
}

void TouchGFXGeneratedHAL::enableLCDControllerInterrupt()
{
    lcd_int_active_line = (LTDC->BPCR & LTDC_BPCR_AVBP_Msk) - 1;
 8001408:	4a09      	ldr	r2, [pc, #36]	@ (8001430 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x28>)
 800140a:	490a      	ldr	r1, [pc, #40]	@ (8001434 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x2c>)
 800140c:	68d3      	ldr	r3, [r2, #12]
    lcd_int_porch_line = (LTDC->AWCR & LTDC_AWCR_AAH_Msk) - 1;
 800140e:	480a      	ldr	r0, [pc, #40]	@ (8001438 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x30>)
    lcd_int_active_line = (LTDC->BPCR & LTDC_BPCR_AVBP_Msk) - 1;
 8001410:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8001414:	3b01      	subs	r3, #1
 8001416:	b29b      	uxth	r3, r3
 8001418:	800b      	strh	r3, [r1, #0]
    lcd_int_porch_line = (LTDC->AWCR & LTDC_AWCR_AAH_Msk) - 1;
 800141a:	6911      	ldr	r1, [r2, #16]
 800141c:	f3c1 010a 	ubfx	r1, r1, #0, #11
 8001420:	3901      	subs	r1, #1
 8001422:	8001      	strh	r1, [r0, #0]

    /* Sets the Line Interrupt position */
    LTDC->LIPCR = lcd_int_active_line;
 8001424:	6413      	str	r3, [r2, #64]	@ 0x40
    /* Line Interrupt Enable            */
    LTDC->IER |= LTDC_IER_LIE;
 8001426:	6b53      	ldr	r3, [r2, #52]	@ 0x34
 8001428:	f043 0301 	orr.w	r3, r3, #1
 800142c:	6353      	str	r3, [r2, #52]	@ 0x34
}
 800142e:	4770      	bx	lr
 8001430:	40016800 	.word	0x40016800
 8001434:	2000254a 	.word	0x2000254a
 8001438:	20002548 	.word	0x20002548

0800143c <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>:
    HAL::endFrame();
}

uint16_t* TouchGFXGeneratedHAL::getTFTFrameBuffer() const
{
    return (uint16_t*)LTDC_Layer1->CFBAR;
 800143c:	4b01      	ldr	r3, [pc, #4]	@ (8001444 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv+0x8>)
 800143e:	f8d3 00ac 	ldr.w	r0, [r3, #172]	@ 0xac
}
 8001442:	4770      	bx	lr
 8001444:	40016800 	.word	0x40016800

08001448 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>:

void TouchGFXGeneratedHAL::setTFTFrameBuffer(uint16_t* adr)
{
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 8001448:	4b02      	ldr	r3, [pc, #8]	@ (8001454 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt+0xc>)

    /* Reload immediate */
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 800144a:	2201      	movs	r2, #1
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 800144c:	f8c3 10ac 	str.w	r1, [r3, #172]	@ 0xac
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 8001450:	625a      	str	r2, [r3, #36]	@ 0x24
}
 8001452:	4770      	bx	lr
 8001454:	40016800 	.word	0x40016800

08001458 <_ZN8touchgfx17CWRVectorRenderer17CanvasWidgetProxyD0Ev>:
    class CanvasWidgetProxy : public CanvasWidget
 8001458:	b510      	push	{r4, lr}
 800145a:	212c      	movs	r1, #44	@ 0x2c
 800145c:	4604      	mov	r4, r0
 800145e:	f020 fc54 	bl	8021d0a <_ZdlPvj>
 8001462:	4620      	mov	r0, r4
 8001464:	bd10      	pop	{r4, pc}

08001466 <_ZN8touchgfx23CWRVectorRendererRGB565D0Ev>:
class CWRVectorRendererRGB565 : public CWRVectorRenderer
 8001466:	b510      	push	{r4, lr}
 8001468:	21bc      	movs	r1, #188	@ 0xbc
 800146a:	4604      	mov	r4, r0
 800146c:	f020 fc4d 	bl	8021d0a <_ZdlPvj>
 8001470:	4620      	mov	r0, r4
 8001472:	bd10      	pop	{r4, pc}

08001474 <_ZN20TouchGFXGeneratedHAL10initializeEv>:
{
 8001474:	b570      	push	{r4, r5, r6, lr}
 8001476:	4604      	mov	r4, r0
    HAL::initialize();
 8001478:	f009 f98b 	bl	800a792 <_ZN8touchgfx3HAL10initializeEv>
    registerEventListener(*(Application::getInstance()));
 800147c:	6823      	ldr	r3, [r4, #0]
 800147e:	6e9d      	ldr	r5, [r3, #104]	@ 0x68
 8001480:	f00e f9ae 	bl	800f7e0 <_ZN8touchgfx11Application11getInstanceEv>
 8001484:	4601      	mov	r1, r0
 8001486:	4620      	mov	r0, r4
 8001488:	47a8      	blx	r5
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
 800148a:	6823      	ldr	r3, [r4, #0]
 800148c:	4a05      	ldr	r2, [pc, #20]	@ (80014a4 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x30>)
 800148e:	f8d3 508c 	ldr.w	r5, [r3, #140]	@ 0x8c
 8001492:	4620      	mov	r0, r4
 8001494:	46ac      	mov	ip, r5
 8001496:	2300      	movs	r3, #0
}
 8001498:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
 800149c:	f5a2 3116 	sub.w	r1, r2, #153600	@ 0x25800
 80014a0:	4760      	bx	ip
 80014a2:	bf00      	nop
 80014a4:	d004b000 	.word	0xd004b000

080014a8 <_ZN20TouchGFXGeneratedHAL10beginFrameEv>:
    return HAL::beginFrame();
 80014a8:	f009 b95a 	b.w	800a760 <_ZN8touchgfx3HAL10beginFrameEv>

080014ac <_ZN20TouchGFXGeneratedHAL8endFrameEv>:
    HAL::endFrame();
 80014ac:	f009 b964 	b.w	800a778 <_ZN8touchgfx3HAL8endFrameEv>

080014b0 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>:

void TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
    HAL::flushFrameBuffer(rect);
 80014b0:	f009 b920 	b.w	800a6f4 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>

080014b4 <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>:
}

bool TouchGFXGeneratedHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
    return HAL::blockCopy(dest, src, numBytes);
 80014b4:	f009 ba8f 	b.w	800a9d6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm>

080014b8 <_ZNK8touchgfx8Drawable17invalidateContentEv>:
        if (visible)
 80014b8:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
 80014bc:	b112      	cbz	r2, 80014c4 <_ZNK8touchgfx8Drawable17invalidateContentEv+0xc>
            invalidate();
 80014be:	6803      	ldr	r3, [r0, #0]
 80014c0:	695b      	ldr	r3, [r3, #20]
 80014c2:	4718      	bx	r3
    }
 80014c4:	4770      	bx	lr

080014c6 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE>:
     *
     * @param [out] last Result, the address of the actual instance of the Widget.
     */
    virtual void getLastChild(int16_t /*x*/, int16_t /*y*/, Drawable** last)
    {
        if (isVisible() && isTouchable())
 80014c6:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
 80014ca:	b11a      	cbz	r2, 80014d4 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
 80014cc:	f890 2024 	ldrb.w	r2, [r0, #36]	@ 0x24
 80014d0:	b102      	cbz	r2, 80014d4 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
        {
            *last = this;
 80014d2:	6018      	str	r0, [r3, #0]
        }
    }
 80014d4:	4770      	bx	lr
	...

080014d8 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>:
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80014d8:	4b03      	ldr	r3, [pc, #12]	@ (80014e8 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv+0x10>)
 80014da:	f04f 6280 	mov.w	r2, #67108864	@ 0x4000000
 80014de:	609a      	str	r2, [r3, #8]
 80014e0:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 80014e4:	609a      	str	r2, [r3, #8]
}
 80014e6:	4770      	bx	lr
 80014e8:	e000e100 	.word	0xe000e100

080014ec <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>:
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80014ec:	4b08      	ldr	r3, [pc, #32]	@ (8001510 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv+0x24>)
 80014ee:	f04f 6280 	mov.w	r2, #67108864	@ 0x4000000
 80014f2:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
  __ASM volatile ("dsb 0xF":::"memory");
 80014f6:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 80014fa:	f3bf 8f6f 	isb	sy
 80014fe:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 8001502:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
  __ASM volatile ("dsb 0xF":::"memory");
 8001506:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 800150a:	f3bf 8f6f 	isb	sy
}
 800150e:	4770      	bx	lr
 8001510:	e000e100 	.word	0xe000e100

08001514 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>:
public:
    static const uint16_t RMASK = 0xF800; ///< Mask for red   (1111100000000000)
    static const uint16_t GMASK = 0x07E0; ///< Mask for green (0000011111100000)
    static const uint16_t BMASK = 0x001F; ///< Mask for blue  (0000000000011111)

    AbstractPainterRGB565()
 8001514:	b570      	push	{r4, r5, r6, lr}
        : widgetWidth(0)
 8001516:	2300      	movs	r3, #0
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 8001518:	4e12      	ldr	r6, [pc, #72]	@ (8001564 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x50>)
 800151a:	8083      	strh	r3, [r0, #4]
        : AbstractPainter()
 800151c:	4b12      	ldr	r3, [pc, #72]	@ (8001568 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x54>)
 800151e:	6003      	str	r3, [r0, #0]
 8001520:	6833      	ldr	r3, [r6, #0]
 8001522:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
    AbstractPainterRGB565()
 8001526:	4605      	mov	r5, r0
 8001528:	b10a      	cbz	r2, 800152e <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x1a>
 800152a:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 800152c:	b900      	cbnz	r0, 8001530 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x1c>
        return instance->lcdRef;
 800152e:	6898      	ldr	r0, [r3, #8]
     *
     * @return True if the format matches the framebuffer format, false otherwise.
     */
    FORCE_INLINE_FUNCTION static bool compatibleFramebuffer(Bitmap::BitmapFormat format)
    {
        bool compat = HAL::lcd().framebufferFormat() == format;
 8001530:	6803      	ldr	r3, [r0, #0]
 8001532:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8001534:	4798      	blx	r3
        return auxiliaryLCD;
 8001536:	6833      	ldr	r3, [r6, #0]
 8001538:	fab0 f480 	clz	r4, r0
 800153c:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 800153e:	0964      	lsrs	r4, r4, #5
        if (HAL::getInstance()->getAuxiliaryLCD())
 8001540:	b130      	cbz	r0, 8001550 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x3c>
        {
            compat |= HAL::getInstance()->getAuxiliaryLCD()->framebufferFormat() == format;
 8001542:	6803      	ldr	r3, [r0, #0]
 8001544:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8001546:	4798      	blx	r3
 8001548:	2800      	cmp	r0, #0
 800154a:	bf08      	it	eq
 800154c:	f044 0401 	orreq.w	r4, r4, #1
    {
        assert(compatibleFramebuffer(Bitmap::RGB565) && "The chosen painter only works with RGB565 displays");
 8001550:	b92c      	cbnz	r4, 800155e <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x4a>
 8001552:	4b06      	ldr	r3, [pc, #24]	@ (800156c <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x58>)
 8001554:	4a06      	ldr	r2, [pc, #24]	@ (8001570 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x5c>)
 8001556:	4807      	ldr	r0, [pc, #28]	@ (8001574 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x60>)
 8001558:	212c      	movs	r1, #44	@ 0x2c
 800155a:	f021 fb13 	bl	8022b84 <__assert_func>
    }
 800155e:	4628      	mov	r0, r5
 8001560:	bd70      	pop	{r4, r5, r6, pc}
 8001562:	bf00      	nop
 8001564:	20014044 	.word	0x20014044
 8001568:	080248a0 	.word	0x080248a0
 800156c:	08023ffd 	.word	0x08023ffd
 8001570:	0802405b 	.word	0x0802405b
 8001574:	08024094 	.word	0x08024094

08001578 <_ZN8touchgfx14VectorRenderer11getInstanceEv>:
{
 8001578:	b570      	push	{r4, r5, r6, lr}
    static CWRVectorRendererRGB565 renderer;
 800157a:	4e25      	ldr	r6, [pc, #148]	@ (8001610 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x98>)
 800157c:	6835      	ldr	r5, [r6, #0]
 800157e:	f3bf 8f5b 	dmb	ish
 8001582:	f015 0501 	ands.w	r5, r5, #1
 8001586:	d140      	bne.n	800160a <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x92>
 8001588:	4630      	mov	r0, r6
 800158a:	f020 fbc0 	bl	8021d0e <__cxa_guard_acquire>
 800158e:	2800      	cmp	r0, #0
 8001590:	d03b      	beq.n	800160a <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x92>
class CWRVectorRenderer : public VectorRenderer
 8001592:	4c20      	ldr	r4, [pc, #128]	@ (8001614 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x9c>)
 8001594:	4b20      	ldr	r3, [pc, #128]	@ (8001618 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0xa0>)
 8001596:	6125      	str	r5, [r4, #16]
 8001598:	f104 0034 	add.w	r0, r4, #52	@ 0x34
 800159c:	e9c4 3500 	strd	r3, r5, [r4]
 80015a0:	e9c4 5502 	strd	r5, r5, [r4, #8]
 80015a4:	84e5      	strh	r5, [r4, #38]	@ 0x26
 80015a6:	62a5      	str	r5, [r4, #40]	@ 0x28
 80015a8:	85a5      	strh	r5, [r4, #44]	@ 0x2c
 80015aa:	f00f fe66 	bl	801127a <_ZN8touchgfx9Matrix3x3C1Ev>
    class CanvasWidgetProxy : public CanvasWidget
 80015ae:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 80015b2:	f00c f93f 	bl	800d834 <_ZN8touchgfx12CanvasWidgetC1Ev>
 80015b6:	4b19      	ldr	r3, [pc, #100]	@ (800161c <_ZN8touchgfx14VectorRenderer11getInstanceEv+0xa4>)
 80015b8:	65a3      	str	r3, [r4, #88]	@ 0x58
class CWRVectorRendererRGB565 : public CWRVectorRenderer
 80015ba:	4620      	mov	r0, r4
 80015bc:	4b18      	ldr	r3, [pc, #96]	@ (8001620 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0xa8>)
 80015be:	f840 3b84 	str.w	r3, [r0], #132
     * Initializes a new instance of the PainterRGB565 class.
     *
     * @param  color (Optional) the color, default is black.
     */
    PainterRGB565(colortype color = 0)
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 80015c2:	f7ff ffa7 	bl	8001514 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 80015c6:	4b17      	ldr	r3, [pc, #92]	@ (8001624 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0xac>)
 80015c8:	f8c4 3084 	str.w	r3, [r4, #132]	@ 0x84
 80015cc:	3324      	adds	r3, #36	@ 0x24
 80015ce:	f8c4 308c 	str.w	r3, [r4, #140]	@ 0x8c
class AbstractPainterLinearGradient : public AbstractPainter
{
public:
    /** Constructor. */
    AbstractPainterLinearGradient()
        : AbstractPainter(),
 80015d2:	f44f 03c8 	mov.w	r3, #6553600	@ 0x640000
          coord0(0), coord1(100), texture(0), isSolid(false), isVertical(false), isHorizontal(false), clSlope(0.0f), clOffset(0.0f), horizontalDistance(0.0f), deltaColor(0.0f)
 80015d6:	e9c4 3528 	strd	r3, r5, [r4, #160]	@ 0xa0
 80015da:	2300      	movs	r3, #0
 80015dc:	f8c4 30ac 	str.w	r3, [r4, #172]	@ 0xac
 80015e0:	f8c4 30b0 	str.w	r3, [r4, #176]	@ 0xb0
 80015e4:	f8c4 30b4 	str.w	r3, [r4, #180]	@ 0xb4
 80015e8:	f8c4 30b8 	str.w	r3, [r4, #184]	@ 0xb8
 80015ec:	480e      	ldr	r0, [pc, #56]	@ (8001628 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0xb0>)
 * An abstract class for creating painter classes for drawing canvas widgets. All canvas widgets
 * need a painter to fill the shape drawn with a CanvasWidgetRenderer. The painter must provide
 * the color of a pixel on a given coordinate, which will the be blended into the framebuffer
 * depending on the position of the canvas widget and the transparency of the given pixel.
 */
class PainterRGB565LinearGradient : public AbstractPainterLinearGradient
 80015ee:	4b0f      	ldr	r3, [pc, #60]	@ (800162c <_ZN8touchgfx14VectorRenderer11getInstanceEv+0xb4>)
     *
     * @param  color The color.
     */
    virtual void setColor(colortype color)
    {
        painterColor = color;
 80015f0:	f8c4 5090 	str.w	r5, [r4, #144]	@ 0x90
        : AbstractPainter(),
 80015f4:	f8c4 509c 	str.w	r5, [r4, #156]	@ 0x9c
 80015f8:	f8c4 50a8 	str.w	r5, [r4, #168]	@ 0xa8
 80015fc:	f8c4 3098 	str.w	r3, [r4, #152]	@ 0x98
 8001600:	f021 fade 	bl	8022bc0 <atexit>
 8001604:	4630      	mov	r0, r6
 8001606:	f020 fb8e 	bl	8021d26 <__cxa_guard_release>
}
 800160a:	4802      	ldr	r0, [pc, #8]	@ (8001614 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x9c>)
 800160c:	bd70      	pop	{r4, r5, r6, pc}
 800160e:	bf00      	nop
 8001610:	2000254c 	.word	0x2000254c
 8001614:	20002550 	.word	0x20002550
 8001618:	08024e50 	.word	0x08024e50
 800161c:	080248c0 	.word	0x080248c0
 8001620:	08024938 	.word	0x08024938
 8001624:	08024e04 	.word	0x08024e04
 8001628:	080013f1 	.word	0x080013f1
 800162c:	08024de4 	.word	0x08024de4

08001630 <HAL_LTDC_LineEventCallback>:
}

extern "C"
{
    void HAL_LTDC_LineEventCallback(LTDC_HandleTypeDef* hltdc)
    {
 8001630:	b538      	push	{r3, r4, r5, lr}
        return instance;
 8001632:	4c18      	ldr	r4, [pc, #96]	@ (8001694 <HAL_LTDC_LineEventCallback+0x64>)
        if (!HAL::getInstance())
 8001634:	6823      	ldr	r3, [r4, #0]
 8001636:	b35b      	cbz	r3, 8001690 <HAL_LTDC_LineEventCallback+0x60>
        {
            return;
        }

        if (LTDC->LIPCR == lcd_int_active_line)
 8001638:	4b17      	ldr	r3, [pc, #92]	@ (8001698 <HAL_LTDC_LineEventCallback+0x68>)
 800163a:	4a18      	ldr	r2, [pc, #96]	@ (800169c <HAL_LTDC_LineEventCallback+0x6c>)
 800163c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800163e:	8811      	ldrh	r1, [r2, #0]
 8001640:	428b      	cmp	r3, r1
 8001642:	d116      	bne.n	8001672 <HAL_LTDC_LineEventCallback+0x42>
        {
            //entering active area
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_porch_line);
 8001644:	4b16      	ldr	r3, [pc, #88]	@ (80016a0 <HAL_LTDC_LineEventCallback+0x70>)
 8001646:	8819      	ldrh	r1, [r3, #0]
 8001648:	f003 fb3e 	bl	8004cc8 <HAL_LTDC_ProgramLineEvent>
 800164c:	6823      	ldr	r3, [r4, #0]
        vSyncCnt++;
 800164e:	f893 206a 	ldrb.w	r2, [r3, #106]	@ 0x6a
        isFrontPorchEntered = false;
 8001652:	2500      	movs	r5, #0
        vSyncCnt++;
 8001654:	3201      	adds	r2, #1
 8001656:	f883 206a 	strb.w	r2, [r3, #106]	@ 0x6a
        isFrontPorchEntered = false;
 800165a:	f883 507c 	strb.w	r5, [r3, #124]	@ 0x7c
            HAL::getInstance()->vSync();
            OSWrappers::signalVSync();
 800165e:	f7ff fab3 	bl	8000bc8 <_ZN8touchgfx10OSWrappers11signalVSyncEv>

            // Swap frame buffers immediately instead of waiting for the task to be scheduled in.
            // Note: task will also swap when it wakes up, but that operation is guarded and will not have
            // any effect if already swapped.
            HAL::getInstance()->swapFrameBuffers();
 8001662:	6820      	ldr	r0, [r4, #0]
 8001664:	f009 fe12 	bl	800b28c <_ZN8touchgfx3HAL16swapFrameBuffersEv>
            GPIO::set(GPIO::VSYNC_FREQ);
 8001668:	4628      	mov	r0, r5

            // Signal to the framework that display update has finished.
            HAL::getInstance()->frontPorchEntered();
            GPIO::clear(GPIO::VSYNC_FREQ);
        }
    }
 800166a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
            GPIO::set(GPIO::VSYNC_FREQ);
 800166e:	f7ff b8f3 	b.w	8000858 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_active_line);
 8001672:	f003 fb29 	bl	8004cc8 <HAL_LTDC_ProgramLineEvent>
        return instance;
 8001676:	6824      	ldr	r4, [r4, #0]
        allowDMATransfers();
 8001678:	6823      	ldr	r3, [r4, #0]
 800167a:	4620      	mov	r0, r4
 800167c:	6a1b      	ldr	r3, [r3, #32]
 800167e:	4798      	blx	r3
        isFrontPorchEntered = true;
 8001680:	2301      	movs	r3, #1
 8001682:	f884 307c 	strb.w	r3, [r4, #124]	@ 0x7c
            GPIO::clear(GPIO::VSYNC_FREQ);
 8001686:	2000      	movs	r0, #0
    }
 8001688:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
            GPIO::clear(GPIO::VSYNC_FREQ);
 800168c:	f7ff b90e 	b.w	80008ac <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
    }
 8001690:	bd38      	pop	{r3, r4, r5, pc}
 8001692:	bf00      	nop
 8001694:	20014044 	.word	0x20014044
 8001698:	40016800 	.word	0x40016800
 800169c:	2000254a 	.word	0x2000254a
 80016a0:	20002548 	.word	0x20002548

080016a4 <MX_USB_DEVICE_Init>:
/**
  * Init USB device Library, add supported class and start the library
  * @retval None
  */
void MX_USB_DEVICE_Init(void)
{
 80016a4:	b508      	push	{r3, lr}
  /* USER CODE BEGIN USB_DEVICE_Init_PreTreatment */

  /* USER CODE END USB_DEVICE_Init_PreTreatment */

  /* Init Device Library, add supported class and start the library. */
  if (USBD_Init(&hUsbDeviceHS, &HS_Desc, DEVICE_HS) != USBD_OK)
 80016a6:	490c      	ldr	r1, [pc, #48]	@ (80016d8 <MX_USB_DEVICE_Init+0x34>)
 80016a8:	480c      	ldr	r0, [pc, #48]	@ (80016dc <MX_USB_DEVICE_Init+0x38>)
 80016aa:	2201      	movs	r2, #1
 80016ac:	f008 f810 	bl	80096d0 <USBD_Init>
 80016b0:	b108      	cbz	r0, 80016b6 <MX_USB_DEVICE_Init+0x12>
  {
    Error_Handler();
 80016b2:	f000 fd25 	bl	8002100 <Error_Handler>
  }
  if (USBD_RegisterClass(&hUsbDeviceHS, &USBD_HID) != USBD_OK)
 80016b6:	490a      	ldr	r1, [pc, #40]	@ (80016e0 <MX_USB_DEVICE_Init+0x3c>)
 80016b8:	4808      	ldr	r0, [pc, #32]	@ (80016dc <MX_USB_DEVICE_Init+0x38>)
 80016ba:	f008 f81c 	bl	80096f6 <USBD_RegisterClass>
 80016be:	b108      	cbz	r0, 80016c4 <MX_USB_DEVICE_Init+0x20>
  {
    Error_Handler();
 80016c0:	f000 fd1e 	bl	8002100 <Error_Handler>
  }
  if (USBD_Start(&hUsbDeviceHS) != USBD_OK)
 80016c4:	4805      	ldr	r0, [pc, #20]	@ (80016dc <MX_USB_DEVICE_Init+0x38>)
 80016c6:	f008 f82f 	bl	8009728 <USBD_Start>
 80016ca:	b118      	cbz	r0, 80016d4 <MX_USB_DEVICE_Init+0x30>
  }

  /* USER CODE BEGIN USB_DEVICE_Init_PostTreatment */

  /* USER CODE END USB_DEVICE_Init_PostTreatment */
}
 80016cc:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    Error_Handler();
 80016d0:	f000 bd16 	b.w	8002100 <Error_Handler>
}
 80016d4:	bd08      	pop	{r3, pc}
 80016d6:	bf00      	nop
 80016d8:	20000040 	.word	0x20000040
 80016dc:	2000260c 	.word	0x2000260c
 80016e0:	2000015c 	.word	0x2000015c

080016e4 <USBD_HS_DeviceDescriptor>:
  * @retval Pointer to descriptor buffer
  */
uint8_t * USBD_HS_DeviceDescriptor(USBD_SpeedTypeDef speed, uint16_t *length)
{
  UNUSED(speed);
  *length = sizeof(USBD_HS_DeviceDesc);
 80016e4:	2312      	movs	r3, #18
  return USBD_HS_DeviceDesc;
}
 80016e6:	4801      	ldr	r0, [pc, #4]	@ (80016ec <USBD_HS_DeviceDescriptor+0x8>)
  *length = sizeof(USBD_HS_DeviceDesc);
 80016e8:	800b      	strh	r3, [r1, #0]
}
 80016ea:	4770      	bx	lr
 80016ec:	2000002c 	.word	0x2000002c

080016f0 <USBD_HS_LangIDStrDescriptor>:
  * @retval Pointer to descriptor buffer
  */
uint8_t * USBD_HS_LangIDStrDescriptor(USBD_SpeedTypeDef speed, uint16_t *length)
{
  UNUSED(speed);
  *length = sizeof(USBD_LangIDDesc);
 80016f0:	2304      	movs	r3, #4
  return USBD_LangIDDesc;
}
 80016f2:	4801      	ldr	r0, [pc, #4]	@ (80016f8 <USBD_HS_LangIDStrDescriptor+0x8>)
  *length = sizeof(USBD_LangIDDesc);
 80016f4:	800b      	strh	r3, [r1, #0]
}
 80016f6:	4770      	bx	lr
 80016f8:	20000028 	.word	0x20000028

080016fc <IntToUnicode>:
  * @param  pbuf: pointer to the buffer
  * @param  len: buffer length
  * @retval None
  */
static void IntToUnicode(uint32_t value, uint8_t * pbuf, uint8_t len)
{
 80016fc:	2300      	movs	r3, #0
 80016fe:	b570      	push	{r4, r5, r6, lr}
      pbuf[2 * idx] = (value >> 28) + 'A' - 10;
    }

    value = value << 4;

    pbuf[2 * idx + 1] = 0;
 8001700:	1c4d      	adds	r5, r1, #1
 8001702:	461e      	mov	r6, r3
      pbuf[2 * idx] = (value >> 28) + '0';
 8001704:	0f04      	lsrs	r4, r0, #28
    if (((value >> 28)) < 0xA)
 8001706:	f1b0 4f20 	cmp.w	r0, #2684354560	@ 0xa0000000
      pbuf[2 * idx] = (value >> 28) + '0';
 800170a:	bf34      	ite	cc
 800170c:	3430      	addcc	r4, #48	@ 0x30
      pbuf[2 * idx] = (value >> 28) + 'A' - 10;
 800170e:	3437      	addcs	r4, #55	@ 0x37
      pbuf[2 * idx] = (value >> 28) + '0';
 8001710:	f801 4013 	strb.w	r4, [r1, r3, lsl #1]
    pbuf[2 * idx + 1] = 0;
 8001714:	f805 6013 	strb.w	r6, [r5, r3, lsl #1]
  for (idx = 0; idx < len; idx++)
 8001718:	3301      	adds	r3, #1
 800171a:	b2dc      	uxtb	r4, r3
 800171c:	42a2      	cmp	r2, r4
    value = value << 4;
 800171e:	ea4f 1000 	mov.w	r0, r0, lsl #4
  for (idx = 0; idx < len; idx++)
 8001722:	d8ef      	bhi.n	8001704 <IntToUnicode+0x8>
  }
}
 8001724:	bd70      	pop	{r4, r5, r6, pc}
	...

08001728 <USBD_HS_SerialStrDescriptor>:
  *length = USB_SIZ_STRING_SERIAL;
 8001728:	231a      	movs	r3, #26
{
 800172a:	b510      	push	{r4, lr}
  *length = USB_SIZ_STRING_SERIAL;
 800172c:	800b      	strh	r3, [r1, #0]
  deviceserial0 = *(uint32_t *) DEVICE_ID1;
 800172e:	4b0a      	ldr	r3, [pc, #40]	@ (8001758 <USBD_HS_SerialStrDescriptor+0x30>)
 8001730:	f8d3 0a10 	ldr.w	r0, [r3, #2576]	@ 0xa10
  deviceserial0 += deviceserial2;
 8001734:	f8d3 2a18 	ldr.w	r2, [r3, #2584]	@ 0xa18
  if (deviceserial0 != 0)
 8001738:	1880      	adds	r0, r0, r2
 800173a:	d00a      	beq.n	8001752 <USBD_HS_SerialStrDescriptor+0x2a>
  deviceserial1 = *(uint32_t *) DEVICE_ID2;
 800173c:	f8d3 4a14 	ldr.w	r4, [r3, #2580]	@ 0xa14
    IntToUnicode(deviceserial0, &USBD_StringSerial[2], 8);
 8001740:	4906      	ldr	r1, [pc, #24]	@ (800175c <USBD_HS_SerialStrDescriptor+0x34>)
 8001742:	2208      	movs	r2, #8
 8001744:	f7ff ffda 	bl	80016fc <IntToUnicode>
    IntToUnicode(deviceserial1, &USBD_StringSerial[18], 4);
 8001748:	2204      	movs	r2, #4
 800174a:	3110      	adds	r1, #16
 800174c:	4620      	mov	r0, r4
 800174e:	f7ff ffd5 	bl	80016fc <IntToUnicode>
}
 8001752:	4803      	ldr	r0, [pc, #12]	@ (8001760 <USBD_HS_SerialStrDescriptor+0x38>)
 8001754:	bd10      	pop	{r4, pc}
 8001756:	bf00      	nop
 8001758:	1fff7000 	.word	0x1fff7000
 800175c:	2000000e 	.word	0x2000000e
 8001760:	2000000c 	.word	0x2000000c

08001764 <USBD_HS_ManufacturerStrDescriptor>:
{
 8001764:	b510      	push	{r4, lr}
  USBD_GetString((uint8_t *)USBD_MANUFACTURER_STRING, USBD_StrDesc, length);
 8001766:	4c04      	ldr	r4, [pc, #16]	@ (8001778 <USBD_HS_ManufacturerStrDescriptor+0x14>)
 8001768:	4804      	ldr	r0, [pc, #16]	@ (800177c <USBD_HS_ManufacturerStrDescriptor+0x18>)
{
 800176a:	460a      	mov	r2, r1
  USBD_GetString((uint8_t *)USBD_MANUFACTURER_STRING, USBD_StrDesc, length);
 800176c:	4621      	mov	r1, r4
 800176e:	f008 fba1 	bl	8009eb4 <USBD_GetString>
}
 8001772:	4620      	mov	r0, r4
 8001774:	bd10      	pop	{r4, pc}
 8001776:	bf00      	nop
 8001778:	200028e8 	.word	0x200028e8
 800177c:	080240f6 	.word	0x080240f6

08001780 <USBD_HS_ProductStrDescriptor>:
{
 8001780:	b510      	push	{r4, lr}
    USBD_GetString((uint8_t *)USBD_PRODUCT_STRING_HS, USBD_StrDesc, length);
 8001782:	4c04      	ldr	r4, [pc, #16]	@ (8001794 <USBD_HS_ProductStrDescriptor+0x14>)
 8001784:	4804      	ldr	r0, [pc, #16]	@ (8001798 <USBD_HS_ProductStrDescriptor+0x18>)
{
 8001786:	460a      	mov	r2, r1
    USBD_GetString((uint8_t *)USBD_PRODUCT_STRING_HS, USBD_StrDesc, length);
 8001788:	4621      	mov	r1, r4
 800178a:	f008 fb93 	bl	8009eb4 <USBD_GetString>
}
 800178e:	4620      	mov	r0, r4
 8001790:	bd10      	pop	{r4, pc}
 8001792:	bf00      	nop
 8001794:	200028e8 	.word	0x200028e8
 8001798:	08024109 	.word	0x08024109

0800179c <USBD_HS_ConfigStrDescriptor>:
{
 800179c:	b510      	push	{r4, lr}
    USBD_GetString((uint8_t *)USBD_CONFIGURATION_STRING_HS, USBD_StrDesc, length);
 800179e:	4c04      	ldr	r4, [pc, #16]	@ (80017b0 <USBD_HS_ConfigStrDescriptor+0x14>)
 80017a0:	4804      	ldr	r0, [pc, #16]	@ (80017b4 <USBD_HS_ConfigStrDescriptor+0x18>)
{
 80017a2:	460a      	mov	r2, r1
    USBD_GetString((uint8_t *)USBD_CONFIGURATION_STRING_HS, USBD_StrDesc, length);
 80017a4:	4621      	mov	r1, r4
 80017a6:	f008 fb85 	bl	8009eb4 <USBD_GetString>
}
 80017aa:	4620      	mov	r0, r4
 80017ac:	bd10      	pop	{r4, pc}
 80017ae:	bf00      	nop
 80017b0:	200028e8 	.word	0x200028e8
 80017b4:	0802411f 	.word	0x0802411f

080017b8 <USBD_HS_InterfaceStrDescriptor>:
{
 80017b8:	b510      	push	{r4, lr}
    USBD_GetString((uint8_t *)USBD_INTERFACE_STRING_HS, USBD_StrDesc, length);
 80017ba:	4c04      	ldr	r4, [pc, #16]	@ (80017cc <USBD_HS_InterfaceStrDescriptor+0x14>)
 80017bc:	4804      	ldr	r0, [pc, #16]	@ (80017d0 <USBD_HS_InterfaceStrDescriptor+0x18>)
{
 80017be:	460a      	mov	r2, r1
    USBD_GetString((uint8_t *)USBD_INTERFACE_STRING_HS, USBD_StrDesc, length);
 80017c0:	4621      	mov	r1, r4
 80017c2:	f008 fb77 	bl	8009eb4 <USBD_GetString>
}
 80017c6:	4620      	mov	r0, r4
 80017c8:	bd10      	pop	{r4, pc}
 80017ca:	bf00      	nop
 80017cc:	200028e8 	.word	0x200028e8
 80017d0:	0802412a 	.word	0x0802412a

080017d4 <HAL_PCD_MspInit>:
                       LL Driver Callbacks (PCD -> USB Device Library)
*******************************************************************************/
/* MSP Init */

void HAL_PCD_MspInit(PCD_HandleTypeDef* pcdHandle)
{
 80017d4:	b530      	push	{r4, r5, lr}
 80017d6:	4604      	mov	r4, r0
 80017d8:	b089      	sub	sp, #36	@ 0x24
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80017da:	2214      	movs	r2, #20
 80017dc:	2100      	movs	r1, #0
 80017de:	a803      	add	r0, sp, #12
 80017e0:	f021 fbd7 	bl	8022f92 <memset>
  if(pcdHandle->Instance==USB_OTG_HS)
 80017e4:	6822      	ldr	r2, [r4, #0]
 80017e6:	4b1c      	ldr	r3, [pc, #112]	@ (8001858 <HAL_PCD_MspInit+0x84>)
 80017e8:	429a      	cmp	r2, r3
 80017ea:	d133      	bne.n	8001854 <HAL_PCD_MspInit+0x80>
  {
  /* USER CODE BEGIN USB_OTG_HS_MspInit 0 */

  /* USER CODE END USB_OTG_HS_MspInit 0 */

    __HAL_RCC_GPIOB_CLK_ENABLE();
 80017ec:	4c1b      	ldr	r4, [pc, #108]	@ (800185c <HAL_PCD_MspInit+0x88>)
    PB15     ------> USB_OTG_HS_DP
    */
    GPIO_InitStruct.Pin = GPIO_PIN_13;
    GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80017ee:	481c      	ldr	r0, [pc, #112]	@ (8001860 <HAL_PCD_MspInit+0x8c>)
    __HAL_RCC_GPIOB_CLK_ENABLE();
 80017f0:	2500      	movs	r5, #0
 80017f2:	9501      	str	r5, [sp, #4]
 80017f4:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 80017f6:	f043 0302 	orr.w	r3, r3, #2
 80017fa:	6323      	str	r3, [r4, #48]	@ 0x30
 80017fc:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 80017fe:	f003 0302 	and.w	r3, r3, #2
 8001802:	9301      	str	r3, [sp, #4]
 8001804:	9b01      	ldr	r3, [sp, #4]
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001806:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Pin = GPIO_PIN_13;
 8001808:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
 800180c:	9303      	str	r3, [sp, #12]
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800180e:	f002 fb69 	bl	8003ee4 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_14|GPIO_PIN_15;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001812:	f44f 4240 	mov.w	r2, #49152	@ 0xc000
 8001816:	2302      	movs	r3, #2
 8001818:	e9cd 2303 	strd	r2, r3, [sp, #12]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF12_OTG_HS_FS;
 800181c:	2103      	movs	r1, #3
 800181e:	230c      	movs	r3, #12
 8001820:	e9cd 1306 	strd	r1, r3, [sp, #24]
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001824:	480e      	ldr	r0, [pc, #56]	@ (8001860 <HAL_PCD_MspInit+0x8c>)
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001826:	9505      	str	r5, [sp, #20]
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001828:	eb0d 0103 	add.w	r1, sp, r3
 800182c:	f002 fb5a 	bl	8003ee4 <HAL_GPIO_Init>

    /* Peripheral clock enable */
    __HAL_RCC_USB_OTG_HS_CLK_ENABLE();
 8001830:	9502      	str	r5, [sp, #8]
 8001832:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8001834:	f043 5300 	orr.w	r3, r3, #536870912	@ 0x20000000
 8001838:	6323      	str	r3, [r4, #48]	@ 0x30
 800183a:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 800183c:	f003 5300 	and.w	r3, r3, #536870912	@ 0x20000000
 8001840:	9302      	str	r3, [sp, #8]

    /* Peripheral interrupt init */
    HAL_NVIC_SetPriority(OTG_HS_IRQn, 5, 0);
 8001842:	204d      	movs	r0, #77	@ 0x4d
 8001844:	462a      	mov	r2, r5
 8001846:	2105      	movs	r1, #5
    __HAL_RCC_USB_OTG_HS_CLK_ENABLE();
 8001848:	9b02      	ldr	r3, [sp, #8]
    HAL_NVIC_SetPriority(OTG_HS_IRQn, 5, 0);
 800184a:	f002 fa01 	bl	8003c50 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(OTG_HS_IRQn);
 800184e:	204d      	movs	r0, #77	@ 0x4d
 8001850:	f002 fa30 	bl	8003cb4 <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN USB_OTG_HS_MspInit 1 */

  /* USER CODE END USB_OTG_HS_MspInit 1 */
  }
}
 8001854:	b009      	add	sp, #36	@ 0x24
 8001856:	bd30      	pop	{r4, r5, pc}
 8001858:	40040000 	.word	0x40040000
 800185c:	40023800 	.word	0x40023800
 8001860:	40020400 	.word	0x40020400

08001864 <HAL_PCD_SetupStageCallback>:
static void PCD_SetupStageCallback(PCD_HandleTypeDef *hpcd)
#else
void HAL_PCD_SetupStageCallback(PCD_HandleTypeDef *hpcd)
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
{
  USBD_LL_SetupStage((USBD_HandleTypeDef*)hpcd->pData, (uint8_t *)hpcd->Setup);
 8001864:	f200 419c 	addw	r1, r0, #1180	@ 0x49c
 8001868:	f8d0 04e0 	ldr.w	r0, [r0, #1248]	@ 0x4e0
 800186c:	f007 bf6e 	b.w	800974c <USBD_LL_SetupStage>

08001870 <HAL_PCD_DataOutStageCallback>:
static void PCD_DataOutStageCallback(PCD_HandleTypeDef *hpcd, uint8_t epnum)
#else
void HAL_PCD_DataOutStageCallback(PCD_HandleTypeDef *hpcd, uint8_t epnum)
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
{
  USBD_LL_DataOutStage((USBD_HandleTypeDef*)hpcd->pData, epnum, hpcd->OUT_ep[epnum].xfer_buff);
 8001870:	2324      	movs	r3, #36	@ 0x24
 8001872:	fb03 0301 	mla	r3, r3, r1, r0
 8001876:	f8d0 04e0 	ldr.w	r0, [r0, #1248]	@ 0x4e0
 800187a:	f8d3 2260 	ldr.w	r2, [r3, #608]	@ 0x260
 800187e:	f007 bf95 	b.w	80097ac <USBD_LL_DataOutStage>

08001882 <HAL_PCD_DataInStageCallback>:
static void PCD_DataInStageCallback(PCD_HandleTypeDef *hpcd, uint8_t epnum)
#else
void HAL_PCD_DataInStageCallback(PCD_HandleTypeDef *hpcd, uint8_t epnum)
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
{
  USBD_LL_DataInStage((USBD_HandleTypeDef*)hpcd->pData, epnum, hpcd->IN_ep[epnum].xfer_buff);
 8001882:	2324      	movs	r3, #36	@ 0x24
 8001884:	fb03 0301 	mla	r3, r3, r1, r0
 8001888:	f8d0 04e0 	ldr.w	r0, [r0, #1248]	@ 0x4e0
 800188c:	6a1a      	ldr	r2, [r3, #32]
 800188e:	f007 bfc2 	b.w	8009816 <USBD_LL_DataInStage>

08001892 <HAL_PCD_SOFCallback>:
static void PCD_SOFCallback(PCD_HandleTypeDef *hpcd)
#else
void HAL_PCD_SOFCallback(PCD_HandleTypeDef *hpcd)
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
{
  USBD_LL_SOF((USBD_HandleTypeDef*)hpcd->pData);
 8001892:	f8d0 04e0 	ldr.w	r0, [r0, #1248]	@ 0x4e0
 8001896:	f008 b85c 	b.w	8009952 <USBD_LL_SOF>

0800189a <HAL_PCD_ResetCallback>:
#if (USE_HAL_PCD_REGISTER_CALLBACKS == 1U)
static void PCD_ResetCallback(PCD_HandleTypeDef *hpcd)
#else
void HAL_PCD_ResetCallback(PCD_HandleTypeDef *hpcd)
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
{
 800189a:	b510      	push	{r4, lr}
  USBD_SpeedTypeDef speed = USBD_SPEED_FULL;

  if ( hpcd->Init.speed == PCD_SPEED_HIGH)
 800189c:	79c1      	ldrb	r1, [r0, #7]
{
 800189e:	4604      	mov	r4, r0
  if ( hpcd->Init.speed == PCD_SPEED_HIGH)
 80018a0:	b121      	cbz	r1, 80018ac <HAL_PCD_ResetCallback+0x12>
  {
    speed = USBD_SPEED_HIGH;
  }
  else if ( hpcd->Init.speed == PCD_SPEED_FULL)
 80018a2:	2902      	cmp	r1, #2
 80018a4:	d001      	beq.n	80018aa <HAL_PCD_ResetCallback+0x10>
  {
    speed = USBD_SPEED_FULL;
  }
  else
  {
    Error_Handler();
 80018a6:	f000 fc2b 	bl	8002100 <Error_Handler>
    speed = USBD_SPEED_FULL;
 80018aa:	2101      	movs	r1, #1
  }
    /* Set Speed. */
  USBD_LL_SetSpeed((USBD_HandleTypeDef*)hpcd->pData, speed);
 80018ac:	f8d4 04e0 	ldr.w	r0, [r4, #1248]	@ 0x4e0
 80018b0:	f008 f833 	bl	800991a <USBD_LL_SetSpeed>

  /* Reset Device. */
  USBD_LL_Reset((USBD_HandleTypeDef*)hpcd->pData);
 80018b4:	f8d4 04e0 	ldr.w	r0, [r4, #1248]	@ 0x4e0
}
 80018b8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  USBD_LL_Reset((USBD_HandleTypeDef*)hpcd->pData);
 80018bc:	f007 bffe 	b.w	80098bc <USBD_LL_Reset>

080018c0 <HAL_PCD_SuspendCallback>:
#if (USE_HAL_PCD_REGISTER_CALLBACKS == 1U)
static void PCD_SuspendCallback(PCD_HandleTypeDef *hpcd)
#else
void HAL_PCD_SuspendCallback(PCD_HandleTypeDef *hpcd)
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
{
 80018c0:	b510      	push	{r4, lr}
 80018c2:	4604      	mov	r4, r0
  /* Inform USB library that core enters in suspend Mode. */
  USBD_LL_Suspend((USBD_HandleTypeDef*)hpcd->pData);
 80018c4:	f8d0 04e0 	ldr.w	r0, [r0, #1248]	@ 0x4e0
 80018c8:	f008 f82a 	bl	8009920 <USBD_LL_Suspend>
  __HAL_PCD_GATE_PHYCLOCK(hpcd);
 80018cc:	6822      	ldr	r2, [r4, #0]
 80018ce:	f8d2 3e00 	ldr.w	r3, [r2, #3584]	@ 0xe00
 80018d2:	f043 0301 	orr.w	r3, r3, #1
 80018d6:	f8c2 3e00 	str.w	r3, [r2, #3584]	@ 0xe00
  /* Enter in STOP mode. */
  /* USER CODE BEGIN 2 */
  if (hpcd->Init.low_power_enable)
 80018da:	7ae3      	ldrb	r3, [r4, #11]
 80018dc:	b123      	cbz	r3, 80018e8 <HAL_PCD_SuspendCallback+0x28>
  {
    /* Set SLEEPDEEP bit and SleepOnExit of Cortex System Control Register. */
    SCB->SCR |= (uint32_t)((uint32_t)(SCB_SCR_SLEEPDEEP_Msk | SCB_SCR_SLEEPONEXIT_Msk));
 80018de:	4a03      	ldr	r2, [pc, #12]	@ (80018ec <HAL_PCD_SuspendCallback+0x2c>)
 80018e0:	6913      	ldr	r3, [r2, #16]
 80018e2:	f043 0306 	orr.w	r3, r3, #6
 80018e6:	6113      	str	r3, [r2, #16]
  }
  /* USER CODE END 2 */
}
 80018e8:	bd10      	pop	{r4, pc}
 80018ea:	bf00      	nop
 80018ec:	e000ed00 	.word	0xe000ed00

080018f0 <HAL_PCD_ResumeCallback>:
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
{
  /* USER CODE BEGIN 3 */

  /* USER CODE END 3 */
  USBD_LL_Resume((USBD_HandleTypeDef*)hpcd->pData);
 80018f0:	f8d0 04e0 	ldr.w	r0, [r0, #1248]	@ 0x4e0
 80018f4:	f008 b822 	b.w	800993c <USBD_LL_Resume>

080018f8 <HAL_PCD_ISOOUTIncompleteCallback>:
static void PCD_ISOOUTIncompleteCallback(PCD_HandleTypeDef *hpcd, uint8_t epnum)
#else
void HAL_PCD_ISOOUTIncompleteCallback(PCD_HandleTypeDef *hpcd, uint8_t epnum)
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
{
  USBD_LL_IsoOUTIncomplete((USBD_HandleTypeDef*)hpcd->pData, epnum);
 80018f8:	f8d0 04e0 	ldr.w	r0, [r0, #1248]	@ 0x4e0
 80018fc:	f008 b849 	b.w	8009992 <USBD_LL_IsoOUTIncomplete>

08001900 <HAL_PCD_ISOINIncompleteCallback>:
static void PCD_ISOINIncompleteCallback(PCD_HandleTypeDef *hpcd, uint8_t epnum)
#else
void HAL_PCD_ISOINIncompleteCallback(PCD_HandleTypeDef *hpcd, uint8_t epnum)
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
{
  USBD_LL_IsoINIncomplete((USBD_HandleTypeDef*)hpcd->pData, epnum);
 8001900:	f8d0 04e0 	ldr.w	r0, [r0, #1248]	@ 0x4e0
 8001904:	f008 b832 	b.w	800996c <USBD_LL_IsoINIncomplete>

08001908 <HAL_PCD_ConnectCallback>:
static void PCD_ConnectCallback(PCD_HandleTypeDef *hpcd)
#else
void HAL_PCD_ConnectCallback(PCD_HandleTypeDef *hpcd)
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
{
  USBD_LL_DevConnected((USBD_HandleTypeDef*)hpcd->pData);
 8001908:	f8d0 04e0 	ldr.w	r0, [r0, #1248]	@ 0x4e0
 800190c:	f008 b854 	b.w	80099b8 <USBD_LL_DevConnected>

08001910 <HAL_PCD_DisconnectCallback>:
static void PCD_DisconnectCallback(PCD_HandleTypeDef *hpcd)
#else
void HAL_PCD_DisconnectCallback(PCD_HandleTypeDef *hpcd)
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
{
  USBD_LL_DevDisconnected((USBD_HandleTypeDef*)hpcd->pData);
 8001910:	f8d0 04e0 	ldr.w	r0, [r0, #1248]	@ 0x4e0
 8001914:	f008 b852 	b.w	80099bc <USBD_LL_DevDisconnected>

08001918 <USBD_LL_Init>:
  * @brief  Initializes the low level portion of the device driver.
  * @param  pdev: Device handle
  * @retval USBD status
  */
USBD_StatusTypeDef USBD_LL_Init(USBD_HandleTypeDef *pdev)
{
 8001918:	b508      	push	{r3, lr}
  /* Init USB Ip. */
  if (pdev->id == DEVICE_HS) {
 800191a:	7802      	ldrb	r2, [r0, #0]
 800191c:	2a01      	cmp	r2, #1
{
 800191e:	4603      	mov	r3, r0
  if (pdev->id == DEVICE_HS) {
 8001920:	d127      	bne.n	8001972 <USBD_LL_Init+0x5a>
  /* Link the driver to the stack. */
  hpcd_USB_OTG_HS.pData = pdev;
 8001922:	4815      	ldr	r0, [pc, #84]	@ (8001978 <USBD_LL_Init+0x60>)
 8001924:	f8c0 34e0 	str.w	r3, [r0, #1248]	@ 0x4e0
  pdev->pData = &hpcd_USB_OTG_HS;
 8001928:	f8c3 02c8 	str.w	r0, [r3, #712]	@ 0x2c8

  hpcd_USB_OTG_HS.Instance = USB_OTG_HS;
 800192c:	4b13      	ldr	r3, [pc, #76]	@ (800197c <USBD_LL_Init+0x64>)
 800192e:	6003      	str	r3, [r0, #0]
  hpcd_USB_OTG_HS.Init.dev_endpoints = 6;
 8001930:	2306      	movs	r3, #6
 8001932:	7103      	strb	r3, [r0, #4]
  hpcd_USB_OTG_HS.Init.speed = PCD_SPEED_FULL;
  hpcd_USB_OTG_HS.Init.dma_enable = DISABLE;
 8001934:	f44f 7300 	mov.w	r3, #512	@ 0x200
 8001938:	80c3      	strh	r3, [r0, #6]
  hpcd_USB_OTG_HS.Init.phy_itface = USB_OTG_EMBEDDED_PHY;
 800193a:	2302      	movs	r3, #2
 800193c:	7243      	strb	r3, [r0, #9]
  hpcd_USB_OTG_HS.Init.Sof_enable = DISABLE;
 800193e:	2300      	movs	r3, #0
 8001940:	8143      	strh	r3, [r0, #10]
  hpcd_USB_OTG_HS.Init.low_power_enable = DISABLE;
  hpcd_USB_OTG_HS.Init.lpm_enable = DISABLE;
 8001942:	7303      	strb	r3, [r0, #12]
  hpcd_USB_OTG_HS.Init.vbus_sensing_enable = ENABLE;
 8001944:	81c2      	strh	r2, [r0, #14]
  hpcd_USB_OTG_HS.Init.use_dedicated_ep1 = DISABLE;
  hpcd_USB_OTG_HS.Init.use_external_vbus = DISABLE;
 8001946:	7403      	strb	r3, [r0, #16]
  if (HAL_PCD_Init(&hpcd_USB_OTG_HS) != HAL_OK)
 8001948:	f003 f9dc 	bl	8004d04 <HAL_PCD_Init>
 800194c:	b108      	cbz	r0, 8001952 <USBD_LL_Init+0x3a>
  {
    Error_Handler( );
 800194e:	f000 fbd7 	bl	8002100 <Error_Handler>
  HAL_PCD_RegisterDataOutStageCallback(&hpcd_USB_OTG_HS, PCD_DataOutStageCallback);
  HAL_PCD_RegisterDataInStageCallback(&hpcd_USB_OTG_HS, PCD_DataInStageCallback);
  HAL_PCD_RegisterIsoOutIncpltCallback(&hpcd_USB_OTG_HS, PCD_ISOOUTIncompleteCallback);
  HAL_PCD_RegisterIsoInIncpltCallback(&hpcd_USB_OTG_HS, PCD_ISOINIncompleteCallback);
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
  HAL_PCDEx_SetRxFiFo(&hpcd_USB_OTG_HS, 0x200);
 8001952:	f44f 7100 	mov.w	r1, #512	@ 0x200
 8001956:	4808      	ldr	r0, [pc, #32]	@ (8001978 <USBD_LL_Init+0x60>)
 8001958:	f003 fef9 	bl	800574e <HAL_PCDEx_SetRxFiFo>
  HAL_PCDEx_SetTxFiFo(&hpcd_USB_OTG_HS, 0, 0x80);
 800195c:	2280      	movs	r2, #128	@ 0x80
 800195e:	2100      	movs	r1, #0
 8001960:	4805      	ldr	r0, [pc, #20]	@ (8001978 <USBD_LL_Init+0x60>)
 8001962:	f003 fed5 	bl	8005710 <HAL_PCDEx_SetTxFiFo>
  HAL_PCDEx_SetTxFiFo(&hpcd_USB_OTG_HS, 1, 0x174);
 8001966:	4804      	ldr	r0, [pc, #16]	@ (8001978 <USBD_LL_Init+0x60>)
 8001968:	f44f 72ba 	mov.w	r2, #372	@ 0x174
 800196c:	2101      	movs	r1, #1
 800196e:	f003 fecf 	bl	8005710 <HAL_PCDEx_SetTxFiFo>
  }
  return USBD_OK;
}
 8001972:	2000      	movs	r0, #0
 8001974:	bd08      	pop	{r3, pc}
 8001976:	bf00      	nop
 8001978:	20002afc 	.word	0x20002afc
 800197c:	40040000 	.word	0x40040000

08001980 <USBD_LL_IsStallEP>:
  */
uint8_t USBD_LL_IsStallEP(USBD_HandleTypeDef *pdev, uint8_t ep_addr)
{
  PCD_HandleTypeDef *hpcd = (PCD_HandleTypeDef*) pdev->pData;

  if((ep_addr & 0x80) == 0x80)
 8001980:	f011 0f80 	tst.w	r1, #128	@ 0x80
  PCD_HandleTypeDef *hpcd = (PCD_HandleTypeDef*) pdev->pData;
 8001984:	f8d0 32c8 	ldr.w	r3, [r0, #712]	@ 0x2c8
  if((ep_addr & 0x80) == 0x80)
 8001988:	f04f 0224 	mov.w	r2, #36	@ 0x24
  {
    return hpcd->IN_ep[ep_addr & 0x7F].is_stall;
 800198c:	bf1b      	ittet	ne
 800198e:	f001 017f 	andne.w	r1, r1, #127	@ 0x7f
 8001992:	fb02 3301 	mlane	r3, r2, r1, r3
  }
  else
  {
    return hpcd->OUT_ep[ep_addr & 0x7F].is_stall;
 8001996:	fb02 3301 	mlaeq	r3, r2, r1, r3
    return hpcd->IN_ep[ep_addr & 0x7F].is_stall;
 800199a:	7d98      	ldrbne	r0, [r3, #22]
    return hpcd->OUT_ep[ep_addr & 0x7F].is_stall;
 800199c:	bf08      	it	eq
 800199e:	f893 0256 	ldrbeq.w	r0, [r3, #598]	@ 0x256
  }
}
 80019a2:	4770      	bx	lr

080019a4 <USBD_static_malloc>:
  */
void *USBD_static_malloc(uint32_t size)
{
  static uint32_t mem[(sizeof(USBD_HID_HandleTypeDef)/4)+1];/* On 32-bit boundary */
  return mem;
}
 80019a4:	4800      	ldr	r0, [pc, #0]	@ (80019a8 <USBD_static_malloc+0x4>)
 80019a6:	4770      	bx	lr
 80019a8:	20002ae8 	.word	0x20002ae8

080019ac <USBD_static_free>:
  * @retval None
  */
void USBD_static_free(void *p)
{

}
 80019ac:	4770      	bx	lr

080019ae <USBD_Get_USB_Status>:
  */
USBD_StatusTypeDef USBD_Get_USB_Status(HAL_StatusTypeDef hal_status)
{
  USBD_StatusTypeDef usb_status = USBD_OK;

  switch (hal_status)
 80019ae:	b118      	cbz	r0, 80019b8 <USBD_Get_USB_Status+0xa>
 80019b0:	2802      	cmp	r0, #2
 80019b2:	bf0c      	ite	eq
 80019b4:	2001      	moveq	r0, #1
 80019b6:	2003      	movne	r0, #3
    default :
      usb_status = USBD_FAIL;
    break;
  }
  return usb_status;
}
 80019b8:	4770      	bx	lr

080019ba <USBD_LL_Start>:
{
 80019ba:	b508      	push	{r3, lr}
  hal_status = HAL_PCD_Start(pdev->pData);
 80019bc:	f8d0 02c8 	ldr.w	r0, [r0, #712]	@ 0x2c8
 80019c0:	f003 fa0f 	bl	8004de2 <HAL_PCD_Start>
}
 80019c4:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  usb_status =  USBD_Get_USB_Status(hal_status);
 80019c8:	f7ff bff1 	b.w	80019ae <USBD_Get_USB_Status>

080019cc <USBD_LL_OpenEP>:
{
 80019cc:	b510      	push	{r4, lr}
 80019ce:	4614      	mov	r4, r2
  hal_status = HAL_PCD_EP_Open(pdev->pData, ep_addr, ep_mps, ep_type);
 80019d0:	f8d0 02c8 	ldr.w	r0, [r0, #712]	@ 0x2c8
{
 80019d4:	461a      	mov	r2, r3
  hal_status = HAL_PCD_EP_Open(pdev->pData, ep_addr, ep_mps, ep_type);
 80019d6:	4623      	mov	r3, r4
 80019d8:	f003 fa35 	bl	8004e46 <HAL_PCD_EP_Open>
}
 80019dc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  usb_status =  USBD_Get_USB_Status(hal_status);
 80019e0:	f7ff bfe5 	b.w	80019ae <USBD_Get_USB_Status>

080019e4 <USBD_LL_CloseEP>:
{
 80019e4:	b508      	push	{r3, lr}
  hal_status = HAL_PCD_EP_Close(pdev->pData, ep_addr);
 80019e6:	f8d0 02c8 	ldr.w	r0, [r0, #712]	@ 0x2c8
 80019ea:	f003 fa65 	bl	8004eb8 <HAL_PCD_EP_Close>
}
 80019ee:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  usb_status =  USBD_Get_USB_Status(hal_status);
 80019f2:	f7ff bfdc 	b.w	80019ae <USBD_Get_USB_Status>

080019f6 <USBD_LL_StallEP>:
{
 80019f6:	b508      	push	{r3, lr}
  hal_status = HAL_PCD_EP_SetStall(pdev->pData, ep_addr);
 80019f8:	f8d0 02c8 	ldr.w	r0, [r0, #712]	@ 0x2c8
 80019fc:	f003 fac3 	bl	8004f86 <HAL_PCD_EP_SetStall>
}
 8001a00:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  usb_status =  USBD_Get_USB_Status(hal_status);
 8001a04:	f7ff bfd3 	b.w	80019ae <USBD_Get_USB_Status>

08001a08 <USBD_LL_ClearStallEP>:
{
 8001a08:	b508      	push	{r3, lr}
  hal_status = HAL_PCD_EP_ClrStall(pdev->pData, ep_addr);
 8001a0a:	f8d0 02c8 	ldr.w	r0, [r0, #712]	@ 0x2c8
 8001a0e:	f003 faf1 	bl	8004ff4 <HAL_PCD_EP_ClrStall>
}
 8001a12:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  usb_status =  USBD_Get_USB_Status(hal_status);
 8001a16:	f7ff bfca 	b.w	80019ae <USBD_Get_USB_Status>

08001a1a <USBD_LL_SetUSBAddress>:
{
 8001a1a:	b508      	push	{r3, lr}
  hal_status = HAL_PCD_SetAddress(pdev->pData, dev_addr);
 8001a1c:	f8d0 02c8 	ldr.w	r0, [r0, #712]	@ 0x2c8
 8001a20:	f003 f9fe 	bl	8004e20 <HAL_PCD_SetAddress>
}
 8001a24:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  usb_status =  USBD_Get_USB_Status(hal_status);
 8001a28:	f7ff bfc1 	b.w	80019ae <USBD_Get_USB_Status>

08001a2c <USBD_LL_Transmit>:
{
 8001a2c:	b508      	push	{r3, lr}
  hal_status = HAL_PCD_EP_Transmit(pdev->pData, ep_addr, pbuf, size);
 8001a2e:	f8d0 02c8 	ldr.w	r0, [r0, #712]	@ 0x2c8
 8001a32:	f003 fa8d 	bl	8004f50 <HAL_PCD_EP_Transmit>
}
 8001a36:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  usb_status =  USBD_Get_USB_Status(hal_status);
 8001a3a:	f7ff bfb8 	b.w	80019ae <USBD_Get_USB_Status>

08001a3e <USBD_LL_PrepareReceive>:
{
 8001a3e:	b508      	push	{r3, lr}
  hal_status = HAL_PCD_EP_Receive(pdev->pData, ep_addr, pbuf, size);
 8001a40:	f8d0 02c8 	ldr.w	r0, [r0, #712]	@ 0x2c8
 8001a44:	f003 fa66 	bl	8004f14 <HAL_PCD_EP_Receive>
}
 8001a48:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  usb_status =  USBD_Get_USB_Status(hal_status);
 8001a4c:	f7ff bfaf 	b.w	80019ae <USBD_Get_USB_Status>

08001a50 <SPI5_Write>:
/**
  * @brief  Writes a byte to device.
  * @param  Value: value to be written
  */
static void SPI5_Write(uint16_t Value)
{
 8001a50:	b507      	push	{r0, r1, r2, lr}
  HAL_StatusTypeDef status = HAL_OK;

  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8001a52:	4b06      	ldr	r3, [pc, #24]	@ (8001a6c <SPI5_Write+0x1c>)
{
 8001a54:	f8ad 0006 	strh.w	r0, [sp, #6]
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8001a58:	681b      	ldr	r3, [r3, #0]
 8001a5a:	4805      	ldr	r0, [pc, #20]	@ (8001a70 <SPI5_Write+0x20>)
 8001a5c:	2201      	movs	r2, #1
 8001a5e:	f10d 0106 	add.w	r1, sp, #6
 8001a62:	f004 fc13 	bl	800628c <HAL_SPI_Transmit>
  if(status != HAL_OK)
  {
    /* Re-Initialize the BUS */
    SPI5_Error();
  }
}
 8001a66:	b003      	add	sp, #12
 8001a68:	f85d fb04 	ldr.w	pc, [sp], #4
 8001a6c:	2000005c 	.word	0x2000005c
 8001a70:	2000302c 	.word	0x2000302c

08001a74 <StartDefaultTask>:
  * @param  argument: Not used
  * @retval None
  */
/* USER CODE END Header_StartDefaultTask */
void StartDefaultTask(void *argument)
{
 8001a74:	b508      	push	{r3, lr}
  /* init code for USB_DEVICE */
  MX_USB_DEVICE_Init();
 8001a76:	f7ff fe15 	bl	80016a4 <MX_USB_DEVICE_Init>
  /* USER CODE BEGIN 5 */
  /* Infinite loop */
  for(;;)
  {
    osDelay(100);
 8001a7a:	2064      	movs	r0, #100	@ 0x64
 8001a7c:	f005 fdde 	bl	800763c <osDelay>
  for(;;)
 8001a80:	e7fb      	b.n	8001a7a <StartDefaultTask+0x6>

08001a82 <StartTask03>:
* @param argument: Not used
* @retval None
*/
/* USER CODE END Header_StartTask03 */
void StartTask03(void *argument)
{
 8001a82:	b508      	push	{r3, lr}
  /* USER CODE BEGIN StartTask03 */
  /* Infinite loop */
  for(;;)
  {
    osDelay(1);
 8001a84:	2001      	movs	r0, #1
 8001a86:	f005 fdd9 	bl	800763c <osDelay>
  for(;;)
 8001a8a:	e7fb      	b.n	8001a84 <StartTask03+0x2>

08001a8c <SystemClock_Config>:
{
 8001a8c:	b530      	push	{r4, r5, lr}
 8001a8e:	b095      	sub	sp, #84	@ 0x54
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8001a90:	2210      	movs	r2, #16
 8001a92:	2100      	movs	r1, #0
 8001a94:	a80a      	add	r0, sp, #40	@ 0x28
 8001a96:	f021 fa7c 	bl	8022f92 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8001a9a:	2214      	movs	r2, #20
 8001a9c:	2100      	movs	r1, #0
 8001a9e:	a803      	add	r0, sp, #12
 8001aa0:	f021 fa77 	bl	8022f92 <memset>
  __HAL_RCC_PWR_CLK_ENABLE();
 8001aa4:	2400      	movs	r4, #0
 8001aa6:	4b1d      	ldr	r3, [pc, #116]	@ (8001b1c <SystemClock_Config+0x90>)
 8001aa8:	9401      	str	r4, [sp, #4]
 8001aaa:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 8001aac:	f042 5280 	orr.w	r2, r2, #268435456	@ 0x10000000
 8001ab0:	641a      	str	r2, [r3, #64]	@ 0x40
 8001ab2:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001ab4:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8001ab8:	9301      	str	r3, [sp, #4]
 8001aba:	9b01      	ldr	r3, [sp, #4]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8001abc:	4b18      	ldr	r3, [pc, #96]	@ (8001b20 <SystemClock_Config+0x94>)
 8001abe:	9402      	str	r4, [sp, #8]
 8001ac0:	681a      	ldr	r2, [r3, #0]
 8001ac2:	f442 4240 	orr.w	r2, r2, #49152	@ 0xc000
 8001ac6:	601a      	str	r2, [r3, #0]
 8001ac8:	681b      	ldr	r3, [r3, #0]
 8001aca:	f403 4340 	and.w	r3, r3, #49152	@ 0xc000
 8001ace:	9302      	str	r3, [sp, #8]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8001ad0:	2201      	movs	r2, #1
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8001ad2:	9b02      	ldr	r3, [sp, #8]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8001ad4:	f44f 3380 	mov.w	r3, #65536	@ 0x10000
 8001ad8:	e9cd 2308 	strd	r2, r3, [sp, #32]
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8001adc:	2502      	movs	r5, #2
 8001ade:	f44f 0380 	mov.w	r3, #4194304	@ 0x400000
 8001ae2:	e9cd 530e 	strd	r5, r3, [sp, #56]	@ 0x38
  RCC_OscInitStruct.PLL.PLLN = 168;
 8001ae6:	2104      	movs	r1, #4
 8001ae8:	23a8      	movs	r3, #168	@ 0xa8
 8001aea:	e9cd 1310 	strd	r1, r3, [sp, #64]	@ 0x40
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8001aee:	a808      	add	r0, sp, #32
  RCC_OscInitStruct.PLL.PLLQ = 7;
 8001af0:	2307      	movs	r3, #7
 8001af2:	9313      	str	r3, [sp, #76]	@ 0x4c
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 8001af4:	9512      	str	r5, [sp, #72]	@ 0x48
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8001af6:	f003 fe2f 	bl	8005758 <HAL_RCC_OscConfig>
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8001afa:	230f      	movs	r3, #15
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8001afc:	e9cd 3503 	strd	r3, r5, [sp, #12]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 8001b00:	f44f 50a0 	mov.w	r0, #5120	@ 0x1400
 8001b04:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 8001b08:	e9cd 0306 	strd	r0, r3, [sp, #24]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 8001b0c:	2105      	movs	r1, #5
 8001b0e:	a803      	add	r0, sp, #12
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8001b10:	9405      	str	r4, [sp, #20]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 8001b12:	f003 fffd 	bl	8005b10 <HAL_RCC_ClockConfig>
}
 8001b16:	b015      	add	sp, #84	@ 0x54
 8001b18:	bd30      	pop	{r4, r5, pc}
 8001b1a:	bf00      	nop
 8001b1c:	40023800 	.word	0x40023800
 8001b20:	40007000 	.word	0x40007000

08001b24 <main>:
{
 8001b24:	e92d 4880 	stmdb	sp!, {r7, fp, lr}
 8001b28:	b09b      	sub	sp, #108	@ 0x6c
  HAL_Init();
 8001b2a:	f002 f83f 	bl	8003bac <HAL_Init>
  SystemClock_Config();
 8001b2e:	f7ff ffad 	bl	8001a8c <SystemClock_Config>
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001b32:	2214      	movs	r2, #20
 8001b34:	2100      	movs	r1, #0
 8001b36:	a80d      	add	r0, sp, #52	@ 0x34
 8001b38:	f021 fa2b 	bl	8022f92 <memset>
  __HAL_RCC_GPIOE_CLK_ENABLE();
 8001b3c:	2400      	movs	r4, #0
 8001b3e:	4bc7      	ldr	r3, [pc, #796]	@ (8001e5c <main+0x338>)
 8001b40:	9400      	str	r4, [sp, #0]
 8001b42:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|RENDER_TIME_Pin|FRAME_RATE_Pin|MCU_ACTIVE_Pin, GPIO_PIN_RESET);
 8001b44:	48c6      	ldr	r0, [pc, #792]	@ (8001e60 <main+0x33c>)
  hi2c3.Instance = I2C3;
 8001b46:	4dc7      	ldr	r5, [pc, #796]	@ (8001e64 <main+0x340>)
  __HAL_RCC_GPIOE_CLK_ENABLE();
 8001b48:	f042 0210 	orr.w	r2, r2, #16
 8001b4c:	631a      	str	r2, [r3, #48]	@ 0x30
 8001b4e:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001b50:	f002 0210 	and.w	r2, r2, #16
 8001b54:	9200      	str	r2, [sp, #0]
 8001b56:	9a00      	ldr	r2, [sp, #0]
  __HAL_RCC_GPIOF_CLK_ENABLE();
 8001b58:	9401      	str	r4, [sp, #4]
 8001b5a:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001b5c:	f042 0220 	orr.w	r2, r2, #32
 8001b60:	631a      	str	r2, [r3, #48]	@ 0x30
 8001b62:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001b64:	f002 0220 	and.w	r2, r2, #32
 8001b68:	9201      	str	r2, [sp, #4]
 8001b6a:	9a01      	ldr	r2, [sp, #4]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 8001b6c:	9402      	str	r4, [sp, #8]
 8001b6e:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001b70:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
 8001b74:	631a      	str	r2, [r3, #48]	@ 0x30
 8001b76:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001b78:	f002 0280 	and.w	r2, r2, #128	@ 0x80
 8001b7c:	9202      	str	r2, [sp, #8]
 8001b7e:	9a02      	ldr	r2, [sp, #8]
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8001b80:	9403      	str	r4, [sp, #12]
 8001b82:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001b84:	f042 0204 	orr.w	r2, r2, #4
 8001b88:	631a      	str	r2, [r3, #48]	@ 0x30
 8001b8a:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001b8c:	f002 0204 	and.w	r2, r2, #4
 8001b90:	9203      	str	r2, [sp, #12]
 8001b92:	9a03      	ldr	r2, [sp, #12]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8001b94:	9404      	str	r4, [sp, #16]
 8001b96:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001b98:	f042 0201 	orr.w	r2, r2, #1
 8001b9c:	631a      	str	r2, [r3, #48]	@ 0x30
 8001b9e:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001ba0:	f002 0201 	and.w	r2, r2, #1
 8001ba4:	9204      	str	r2, [sp, #16]
 8001ba6:	9a04      	ldr	r2, [sp, #16]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8001ba8:	9405      	str	r4, [sp, #20]
 8001baa:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001bac:	f042 0202 	orr.w	r2, r2, #2
 8001bb0:	631a      	str	r2, [r3, #48]	@ 0x30
 8001bb2:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001bb4:	f002 0202 	and.w	r2, r2, #2
 8001bb8:	9205      	str	r2, [sp, #20]
 8001bba:	9a05      	ldr	r2, [sp, #20]
  __HAL_RCC_GPIOG_CLK_ENABLE();
 8001bbc:	9406      	str	r4, [sp, #24]
 8001bbe:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001bc0:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 8001bc4:	631a      	str	r2, [r3, #48]	@ 0x30
 8001bc6:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001bc8:	f002 0240 	and.w	r2, r2, #64	@ 0x40
 8001bcc:	9206      	str	r2, [sp, #24]
 8001bce:	9a06      	ldr	r2, [sp, #24]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8001bd0:	9407      	str	r4, [sp, #28]
 8001bd2:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001bd4:	f042 0208 	orr.w	r2, r2, #8
 8001bd8:	631a      	str	r2, [r3, #48]	@ 0x30
 8001bda:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001bdc:	f003 0308 	and.w	r3, r3, #8
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|RENDER_TIME_Pin|FRAME_RATE_Pin|MCU_ACTIVE_Pin, GPIO_PIN_RESET);
 8001be0:	4622      	mov	r2, r4
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8001be2:	9307      	str	r3, [sp, #28]
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|RENDER_TIME_Pin|FRAME_RATE_Pin|MCU_ACTIVE_Pin, GPIO_PIN_RESET);
 8001be4:	213c      	movs	r1, #60	@ 0x3c
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8001be6:	9b07      	ldr	r3, [sp, #28]
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|RENDER_TIME_Pin|FRAME_RATE_Pin|MCU_ACTIVE_Pin, GPIO_PIN_RESET);
 8001be8:	f002 fa66 	bl	80040b8 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(SPI5_NCS_GPIO_Port, SPI5_NCS_Pin, GPIO_PIN_SET);
 8001bec:	489e      	ldr	r0, [pc, #632]	@ (8001e68 <main+0x344>)
 8001bee:	2201      	movs	r2, #1
 8001bf0:	2102      	movs	r1, #2
 8001bf2:	f002 fa61 	bl	80040b8 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001bf6:	4622      	mov	r2, r4
 8001bf8:	489b      	ldr	r0, [pc, #620]	@ (8001e68 <main+0x344>)
 8001bfa:	2104      	movs	r1, #4
 8001bfc:	f002 fa5c 	bl	80040b8 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12|GPIO_PIN_13, GPIO_PIN_RESET);
 8001c00:	4622      	mov	r2, r4
 8001c02:	489a      	ldr	r0, [pc, #616]	@ (8001e6c <main+0x348>)
 8001c04:	f44f 5140 	mov.w	r1, #12288	@ 0x3000
 8001c08:	f002 fa56 	bl	80040b8 <HAL_GPIO_WritePin>
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001c0c:	2601      	movs	r6, #1
 8001c0e:	233c      	movs	r3, #60	@ 0x3c
 8001c10:	e9cd 360d 	strd	r3, r6, [sp, #52]	@ 0x34
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001c14:	4892      	ldr	r0, [pc, #584]	@ (8001e60 <main+0x33c>)
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001c16:	940f      	str	r4, [sp, #60]	@ 0x3c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001c18:	2303      	movs	r3, #3
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001c1a:	a90d      	add	r1, sp, #52	@ 0x34
  GPIO_InitStruct.Pin = SPI5_NCS_Pin;
 8001c1c:	2702      	movs	r7, #2
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001c1e:	9310      	str	r3, [sp, #64]	@ 0x40
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001c20:	f002 f960 	bl	8003ee4 <HAL_GPIO_Init>
  HAL_GPIO_Init(SPI5_NCS_GPIO_Port, &GPIO_InitStruct);
 8001c24:	4890      	ldr	r0, [pc, #576]	@ (8001e68 <main+0x344>)
 8001c26:	a90d      	add	r1, sp, #52	@ 0x34
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001c28:	e9cd 760d 	strd	r7, r6, [sp, #52]	@ 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001c2c:	e9cd 440f 	strd	r4, r4, [sp, #60]	@ 0x3c
  HAL_GPIO_Init(SPI5_NCS_GPIO_Port, &GPIO_InitStruct);
 8001c30:	f002 f958 	bl	8003ee4 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_2;
 8001c34:	2304      	movs	r3, #4
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001c36:	488c      	ldr	r0, [pc, #560]	@ (8001e68 <main+0x344>)
 8001c38:	a90d      	add	r1, sp, #52	@ 0x34
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001c3a:	e9cd 360d 	strd	r3, r6, [sp, #52]	@ 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001c3e:	e9cd 470f 	strd	r4, r7, [sp, #60]	@ 0x3c
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001c42:	f002 f94f 	bl	8003ee4 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001c46:	a90d      	add	r1, sp, #52	@ 0x34
  GPIO_InitStruct.Pin = GPIO_PIN_12|GPIO_PIN_13;
 8001c48:	f44f 5340 	mov.w	r3, #12288	@ 0x3000
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001c4c:	4887      	ldr	r0, [pc, #540]	@ (8001e6c <main+0x348>)
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001c4e:	e9cd 360d 	strd	r3, r6, [sp, #52]	@ 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001c52:	e9cd 470f 	strd	r4, r7, [sp, #60]	@ 0x3c
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001c56:	f002 f945 	bl	8003ee4 <HAL_GPIO_Init>
  hcrc.Instance = CRC;
 8001c5a:	4885      	ldr	r0, [pc, #532]	@ (8001e70 <main+0x34c>)
 8001c5c:	4b85      	ldr	r3, [pc, #532]	@ (8001e74 <main+0x350>)
 8001c5e:	6003      	str	r3, [r0, #0]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
 8001c60:	f002 f836 	bl	8003cd0 <HAL_CRC_Init>
  hi2c3.Init.ClockSpeed = 100000;
 8001c64:	f8df c234 	ldr.w	ip, [pc, #564]	@ 8001e9c <main+0x378>
 8001c68:	4b83      	ldr	r3, [pc, #524]	@ (8001e78 <main+0x354>)
  hi2c3.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 8001c6a:	622c      	str	r4, [r5, #32]
  hi2c3.Init.ClockSpeed = 100000;
 8001c6c:	e9c5 c300 	strd	ip, r3, [r5]
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 8001c70:	4628      	mov	r0, r5
  hi2c3.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 8001c72:	f44f 4380 	mov.w	r3, #16384	@ 0x4000
  hi2c3.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 8001c76:	e9c5 3404 	strd	r3, r4, [r5, #16]
  hi2c3.Init.OwnAddress1 = 0;
 8001c7a:	e9c5 4402 	strd	r4, r4, [r5, #8]
  hi2c3.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 8001c7e:	e9c5 4406 	strd	r4, r4, [r5, #24]
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 8001c82:	f002 fc27 	bl	80044d4 <HAL_I2C_Init>
  if (HAL_I2CEx_ConfigAnalogFilter(&hi2c3, I2C_ANALOGFILTER_DISABLE) != HAL_OK)
 8001c86:	2110      	movs	r1, #16
 8001c88:	4628      	mov	r0, r5
 8001c8a:	f002 fe6b 	bl	8004964 <HAL_I2CEx_ConfigAnalogFilter>
  if (HAL_I2CEx_ConfigDigitalFilter(&hi2c3, 0) != HAL_OK)
 8001c8e:	4621      	mov	r1, r4
 8001c90:	4628      	mov	r0, r5
 8001c92:	f002 fe86 	bl	80049a2 <HAL_I2CEx_ConfigDigitalFilter>
  hspi5.Instance = SPI5;
 8001c96:	4d79      	ldr	r5, [pc, #484]	@ (8001e7c <main+0x358>)
  hspi5.Init.Mode = SPI_MODE_MASTER;
 8001c98:	f8df e204 	ldr.w	lr, [pc, #516]	@ 8001ea0 <main+0x37c>
  hspi5.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8001c9c:	62ac      	str	r4, [r5, #40]	@ 0x28
  hspi5.Init.Mode = SPI_MODE_MASTER;
 8001c9e:	f44f 7382 	mov.w	r3, #260	@ 0x104
 8001ca2:	e9c5 e300 	strd	lr, r3, [r5]
  hspi5.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_16;
 8001ca6:	f44f 7800 	mov.w	r8, #512	@ 0x200
 8001caa:	2318      	movs	r3, #24
 8001cac:	e9c5 8306 	strd	r8, r3, [r5, #24]
  if (HAL_SPI_Init(&hspi5) != HAL_OK)
 8001cb0:	4628      	mov	r0, r5
  hspi5.Init.CRCPolynomial = 10;
 8001cb2:	230a      	movs	r3, #10
  hspi5.Init.DataSize = SPI_DATASIZE_8BIT;
 8001cb4:	e9c5 4402 	strd	r4, r4, [r5, #8]
  hspi5.Init.CLKPhase = SPI_PHASE_1EDGE;
 8001cb8:	e9c5 4404 	strd	r4, r4, [r5, #16]
  hspi5.Init.TIMode = SPI_TIMODE_DISABLE;
 8001cbc:	e9c5 4408 	strd	r4, r4, [r5, #32]
  hspi5.Init.CRCPolynomial = 10;
 8001cc0:	62eb      	str	r3, [r5, #44]	@ 0x2c
  if (HAL_SPI_Init(&hspi5) != HAL_OK)
 8001cc2:	f004 fa87 	bl	80061d4 <HAL_SPI_Init>
  const uint8_t READ_ID_CMD = 0x8F; // 0b10001111 = set read bit and register address of WHO_AM_I
 8001cc6:	238f      	movs	r3, #143	@ 0x8f
  HAL_GPIO_WritePin(SPI5_NCS_GPIO_Port, SPI5_NCS_Pin, GPIO_PIN_RESET);
 8001cc8:	4622      	mov	r2, r4
 8001cca:	4639      	mov	r1, r7
 8001ccc:	4866      	ldr	r0, [pc, #408]	@ (8001e68 <main+0x344>)
  const uint8_t READ_ID_CMD = 0x8F; // 0b10001111 = set read bit and register address of WHO_AM_I
 8001cce:	f88d 3024 	strb.w	r3, [sp, #36]	@ 0x24
  uint8_t pdata = 0;
 8001cd2:	f88d 4034 	strb.w	r4, [sp, #52]	@ 0x34
  HAL_GPIO_WritePin(SPI5_NCS_GPIO_Port, SPI5_NCS_Pin, GPIO_PIN_RESET);
 8001cd6:	f002 f9ef 	bl	80040b8 <HAL_GPIO_WritePin>
  HAL_SPI_Transmit(&hspi5, &READ_ID_CMD, 1, 1000);
 8001cda:	4632      	mov	r2, r6
 8001cdc:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 8001ce0:	a909      	add	r1, sp, #36	@ 0x24
 8001ce2:	4628      	mov	r0, r5
 8001ce4:	f004 fad2 	bl	800628c <HAL_SPI_Transmit>
  HAL_SPI_Receive(&hspi5, &pdata, 1, 1000);
 8001ce8:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 8001cec:	4632      	mov	r2, r6
 8001cee:	a90d      	add	r1, sp, #52	@ 0x34
 8001cf0:	4628      	mov	r0, r5
 8001cf2:	f004 fc77 	bl	80065e4 <HAL_SPI_Receive>
  HAL_GPIO_WritePin(SPI5_NCS_GPIO_Port, SPI5_NCS_Pin, GPIO_PIN_SET);
 8001cf6:	4632      	mov	r2, r6
 8001cf8:	4639      	mov	r1, r7
 8001cfa:	485b      	ldr	r0, [pc, #364]	@ (8001e68 <main+0x344>)
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 8001cfc:	4d60      	ldr	r5, [pc, #384]	@ (8001e80 <main+0x35c>)
  HAL_GPIO_WritePin(SPI5_NCS_GPIO_Port, SPI5_NCS_Pin, GPIO_PIN_SET);
 8001cfe:	f002 f9db 	bl	80040b8 <HAL_GPIO_WritePin>
  if (pdata == 0xD3) // 0b11010011
 8001d02:	f89d 3034 	ldrb.w	r3, [sp, #52]	@ 0x34
 8001d06:	2bd3      	cmp	r3, #211	@ 0xd3
    isRevD = 1;
 8001d08:	bf04      	itt	eq
 8001d0a:	4b5e      	ldreq	r3, [pc, #376]	@ (8001e84 <main+0x360>)
 8001d0c:	701e      	strbeq	r6, [r3, #0]
  hsdram1.Init.SDBank = FMC_SDRAM_BANK2;
 8001d0e:	4b5e      	ldr	r3, [pc, #376]	@ (8001e88 <main+0x364>)
 8001d10:	2701      	movs	r7, #1
 8001d12:	e9c5 3700 	strd	r3, r7, [r5]
  hsdram1.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
 8001d16:	f04f 0a10 	mov.w	sl, #16
 8001d1a:	2340      	movs	r3, #64	@ 0x40
  hsdram1.Init.RowBitsNumber = FMC_SDRAM_ROW_BITS_NUM_12;
 8001d1c:	2400      	movs	r4, #0
  hsdram1.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
 8001d1e:	e9c5 a304 	strd	sl, r3, [r5, #16]
  hsdram1.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
 8001d22:	f44f 73c0 	mov.w	r3, #384	@ 0x180
  hsdram1.Init.WriteProtection = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
 8001d26:	e9c5 3406 	strd	r3, r4, [r5, #24]
  hsdram1.Init.SDClockPeriod = FMC_SDRAM_CLOCK_PERIOD_2;
 8001d2a:	f44f 6300 	mov.w	r3, #2048	@ 0x800
  hsdram1.Init.ReadBurst = FMC_SDRAM_RBURST_DISABLE;
 8001d2e:	e9c5 3408 	strd	r3, r4, [r5, #32]
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_1;
 8001d32:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
  SdramTiming.ExitSelfRefreshDelay = 7;
 8001d36:	2602      	movs	r6, #2
  hsdram1.Init.RowBitsNumber = FMC_SDRAM_ROW_BITS_NUM_12;
 8001d38:	f04f 0904 	mov.w	r9, #4
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_1;
 8001d3c:	62ab      	str	r3, [r5, #40]	@ 0x28
  SdramTiming.WriteRecoveryTime = 3;
 8001d3e:	f04f 0b03 	mov.w	fp, #3
  SdramTiming.ExitSelfRefreshDelay = 7;
 8001d42:	2307      	movs	r3, #7
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 8001d44:	a90d      	add	r1, sp, #52	@ 0x34
 8001d46:	4628      	mov	r0, r5
  SdramTiming.ExitSelfRefreshDelay = 7;
 8001d48:	e9cd 630d 	strd	r6, r3, [sp, #52]	@ 0x34
  SdramTiming.RowCycleDelay = 7;
 8001d4c:	e9cd 930f 	strd	r9, r3, [sp, #60]	@ 0x3c
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8001d50:	f04f 0808 	mov.w	r8, #8
  hsdram1.Init.RowBitsNumber = FMC_SDRAM_ROW_BITS_NUM_12;
 8001d54:	e9c5 4902 	strd	r4, r9, [r5, #8]
  SdramTiming.RPDelay = 2;
 8001d58:	e9cd b611 	strd	fp, r6, [sp, #68]	@ 0x44
  SdramTiming.RCDDelay = 2;
 8001d5c:	9613      	str	r6, [sp, #76]	@ 0x4c
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 8001d5e:	f004 f91d 	bl	8005f9c <HAL_SDRAM_Init>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001d62:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 8001d66:	a909      	add	r1, sp, #36	@ 0x24
 8001d68:	4628      	mov	r0, r5
  Command->AutoRefreshNumber       = 1;
 8001d6a:	e9cd 870a 	strd	r8, r7, [sp, #40]	@ 0x28
 __IO uint32_t tmpmrd =0;
 8001d6e:	9408      	str	r4, [sp, #32]
  Command->CommandMode             = FMC_SDRAM_CMD_CLK_ENABLE;
 8001d70:	9709      	str	r7, [sp, #36]	@ 0x24
  Command->ModeRegisterDefinition  = 0;
 8001d72:	940c      	str	r4, [sp, #48]	@ 0x30
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001d74:	f004 f932 	bl	8005fdc <HAL_SDRAM_SendCommand>
  HAL_Delay(1);
 8001d78:	4638      	mov	r0, r7
 8001d7a:	f001 ff43 	bl	8003c04 <HAL_Delay>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001d7e:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 8001d82:	a909      	add	r1, sp, #36	@ 0x24
 8001d84:	4628      	mov	r0, r5
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8001d86:	e9cd 6809 	strd	r6, r8, [sp, #36]	@ 0x24
  Command->ModeRegisterDefinition  = 0;
 8001d8a:	e9cd 740b 	strd	r7, r4, [sp, #44]	@ 0x2c
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001d8e:	f004 f925 	bl	8005fdc <HAL_SDRAM_SendCommand>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001d92:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 8001d96:	a909      	add	r1, sp, #36	@ 0x24
 8001d98:	4628      	mov	r0, r5
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8001d9a:	e9cd b809 	strd	fp, r8, [sp, #36]	@ 0x24
  Command->ModeRegisterDefinition  = 0;
 8001d9e:	e9cd 940b 	strd	r9, r4, [sp, #44]	@ 0x2c
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001da2:	f004 f91b 	bl	8005fdc <HAL_SDRAM_SendCommand>
  tmpmrd = (uint32_t)SDRAM_MODEREG_BURST_LENGTH_1          |
 8001da6:	f44f 730c 	mov.w	r3, #560	@ 0x230
 8001daa:	9308      	str	r3, [sp, #32]
  Command->ModeRegisterDefinition  = tmpmrd;
 8001dac:	9b08      	ldr	r3, [sp, #32]
 8001dae:	930c      	str	r3, [sp, #48]	@ 0x30
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001db0:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 8001db4:	a909      	add	r1, sp, #36	@ 0x24
 8001db6:	4628      	mov	r0, r5
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8001db8:	e9cd 9809 	strd	r9, r8, [sp, #36]	@ 0x24
  Command->AutoRefreshNumber       = 1;
 8001dbc:	970b      	str	r7, [sp, #44]	@ 0x2c
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001dbe:	f004 f90d 	bl	8005fdc <HAL_SDRAM_SendCommand>
  HAL_SDRAM_ProgramRefreshRate(hsdram, REFRESH_COUNT);
 8001dc2:	f240 516a 	movw	r1, #1386	@ 0x56a
 8001dc6:	4628      	mov	r0, r5
 8001dc8:	f004 f926 	bl	8006018 <HAL_SDRAM_ProgramRefreshRate>
  LTDC_LayerCfgTypeDef pLayerCfg = {0};
 8001dcc:	2234      	movs	r2, #52	@ 0x34
 8001dce:	4621      	mov	r1, r4
 8001dd0:	eb0d 0002 	add.w	r0, sp, r2
 8001dd4:	f021 f8dd 	bl	8022f92 <memset>
  hltdc.Instance = LTDC;
 8001dd8:	4d2c      	ldr	r5, [pc, #176]	@ (8001e8c <main+0x368>)
 8001dda:	4b2d      	ldr	r3, [pc, #180]	@ (8001e90 <main+0x36c>)
  hltdc.Init.PCPolarity = LTDC_PCPOLARITY_IPC;
 8001ddc:	612c      	str	r4, [r5, #16]
  hltdc.Init.HSPolarity = LTDC_HSPOLARITY_AL;
 8001dde:	e9c5 3400 	strd	r3, r4, [r5]
  hltdc.Init.HorizontalSync = 9;
 8001de2:	2309      	movs	r3, #9
  hltdc.Init.VerticalSync = 1;
 8001de4:	e9c5 3705 	strd	r3, r7, [r5, #20]
  hltdc.Init.AccumulatedHBP = 29;
 8001de8:	231d      	movs	r3, #29
  hltdc.Init.AccumulatedVBP = 3;
 8001dea:	e9c5 3b07 	strd	r3, fp, [r5, #28]
  hltdc.Init.AccumulatedActiveH = 323;
 8001dee:	f240 120d 	movw	r2, #269	@ 0x10d
 8001df2:	f240 1343 	movw	r3, #323	@ 0x143
 8001df6:	e9c5 2309 	strd	r2, r3, [r5, #36]	@ 0x24
  hltdc.Init.TotalHeigh = 327;
 8001dfa:	f240 1117 	movw	r1, #279	@ 0x117
 8001dfe:	f240 1347 	movw	r3, #327	@ 0x147
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 8001e02:	4628      	mov	r0, r5
  hltdc.Init.TotalHeigh = 327;
 8001e04:	e9c5 130b 	strd	r1, r3, [r5, #44]	@ 0x2c
  hltdc.Init.DEPolarity = LTDC_DEPOLARITY_AL;
 8001e08:	e9c5 4402 	strd	r4, r4, [r5, #8]
  hltdc.Init.Backcolor.Blue = 0;
 8001e0c:	86ac      	strh	r4, [r5, #52]	@ 0x34
  hltdc.Init.Backcolor.Red = 0;
 8001e0e:	f885 4036 	strb.w	r4, [r5, #54]	@ 0x36
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 8001e12:	f002 fe61 	bl	8004ad8 <HAL_LTDC_Init>
  pLayerCfg.Alpha = 255;
 8001e16:	21ff      	movs	r1, #255	@ 0xff
  pLayerCfg.WindowX1 = 240;
 8001e18:	22f0      	movs	r2, #240	@ 0xf0
  pLayerCfg.Alpha0 = 0;
 8001e1a:	e9cd 1412 	strd	r1, r4, [sp, #72]	@ 0x48
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 8001e1e:	f44f 6080 	mov.w	r0, #1024	@ 0x400
 8001e22:	2105      	movs	r1, #5
  pLayerCfg.WindowY1 = 320;
 8001e24:	f44f 73a0 	mov.w	r3, #320	@ 0x140
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 8001e28:	e9cd 0114 	strd	r0, r1, [sp, #80]	@ 0x50
  pLayerCfg.WindowY0 = 0;
 8001e2c:	e9cd 240e 	strd	r2, r4, [sp, #56]	@ 0x38
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8001e30:	a90d      	add	r1, sp, #52	@ 0x34
  pLayerCfg.ImageWidth = 240;
 8001e32:	e9cd 4216 	strd	r4, r2, [sp, #88]	@ 0x58
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8001e36:	4628      	mov	r0, r5
 8001e38:	4622      	mov	r2, r4
  LcdDrv = &ili9341_drv;
 8001e3a:	4d16      	ldr	r5, [pc, #88]	@ (8001e94 <main+0x370>)
  pLayerCfg.ImageHeight = 320;
 8001e3c:	9318      	str	r3, [sp, #96]	@ 0x60
  pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_RGB565;
 8001e3e:	e9cd 3610 	strd	r3, r6, [sp, #64]	@ 0x40
  pLayerCfg.WindowX0 = 0;
 8001e42:	940d      	str	r4, [sp, #52]	@ 0x34
  pLayerCfg.Backcolor.Blue = 0;
 8001e44:	f8ad 4064 	strh.w	r4, [sp, #100]	@ 0x64
  pLayerCfg.Backcolor.Red = 0;
 8001e48:	f88d 4066 	strb.w	r4, [sp, #102]	@ 0x66
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8001e4c:	f002 ff0f 	bl	8004c6e <HAL_LTDC_ConfigLayer>
  LcdDrv = &ili9341_drv;
 8001e50:	4b11      	ldr	r3, [pc, #68]	@ (8001e98 <main+0x374>)
 8001e52:	602b      	str	r3, [r5, #0]
  LcdDrv->Init();
 8001e54:	681b      	ldr	r3, [r3, #0]
 8001e56:	4798      	blx	r3
  LcdDrv->DisplayOff();
 8001e58:	682b      	ldr	r3, [r5, #0]
 8001e5a:	e023      	b.n	8001ea4 <main+0x380>
 8001e5c:	40023800 	.word	0x40023800
 8001e60:	40021000 	.word	0x40021000
 8001e64:	2000313c 	.word	0x2000313c
 8001e68:	40020800 	.word	0x40020800
 8001e6c:	40020c00 	.word	0x40020c00
 8001e70:	200031d0 	.word	0x200031d0
 8001e74:	40023000 	.word	0x40023000
 8001e78:	000186a0 	.word	0x000186a0
 8001e7c:	2000302c 	.word	0x2000302c
 8001e80:	20002ff8 	.word	0x20002ff8
 8001e84:	20002fe4 	.word	0x20002fe4
 8001e88:	a0000140 	.word	0xa0000140
 8001e8c:	20003094 	.word	0x20003094
 8001e90:	40016800 	.word	0x40016800
 8001e94:	20002fe0 	.word	0x20002fe0
 8001e98:	20000064 	.word	0x20000064
 8001e9c:	40005c00 	.word	0x40005c00
 8001ea0:	40015000 	.word	0x40015000
  hdma2d.Instance = DMA2D;
 8001ea4:	4d1e      	ldr	r5, [pc, #120]	@ (8001f20 <main+0x3fc>)
  LcdDrv->DisplayOff();
 8001ea6:	68db      	ldr	r3, [r3, #12]
 8001ea8:	4798      	blx	r3
  hdma2d.Instance = DMA2D;
 8001eaa:	4b1e      	ldr	r3, [pc, #120]	@ (8001f24 <main+0x400>)
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 8001eac:	4628      	mov	r0, r5
  hdma2d.Init.Mode = DMA2D_M2M;
 8001eae:	e9c5 3400 	strd	r3, r4, [r5]
  hdma2d.Init.OutputOffset = 0;
 8001eb2:	e9c5 6402 	strd	r6, r4, [r5, #8]
  hdma2d.LayerCfg[1].InputColorMode = DMA2D_INPUT_RGB565;
 8001eb6:	e9c5 460a 	strd	r4, r6, [r5, #40]	@ 0x28
  hdma2d.LayerCfg[1].InputAlpha = 0;
 8001eba:	e9c5 440c 	strd	r4, r4, [r5, #48]	@ 0x30
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 8001ebe:	f001 ff17 	bl	8003cf0 <HAL_DMA2D_Init>
  if (HAL_DMA2D_ConfigLayer(&hdma2d, 1) != HAL_OK)
 8001ec2:	4639      	mov	r1, r7
 8001ec4:	4628      	mov	r0, r5
 8001ec6:	f001 ffc9 	bl	8003e5c <HAL_DMA2D_ConfigLayer>
  hrng.Instance = RNG;
 8001eca:	4817      	ldr	r0, [pc, #92]	@ (8001f28 <main+0x404>)
 8001ecc:	4b17      	ldr	r3, [pc, #92]	@ (8001f2c <main+0x408>)
 8001ece:	6003      	str	r3, [r0, #0]
  if (HAL_RNG_Init(&hrng) != HAL_OK)
 8001ed0:	f004 f818 	bl	8005f04 <HAL_RNG_Init>
  MX_TouchGFX_Init();
 8001ed4:	f7fe fbf4 	bl	80006c0 <MX_TouchGFX_Init>
  MX_TouchGFX_PreOSInit();
 8001ed8:	f7fe fbf1 	bl	80006be <MX_TouchGFX_PreOSInit>
  osKernelInitialize();
 8001edc:	f005 fb3e 	bl	800755c <osKernelInitialize>
  myQueue01Handle = osMessageQueueNew (16, sizeof(uint16_t), &myQueue01_attributes);
 8001ee0:	4a13      	ldr	r2, [pc, #76]	@ (8001f30 <main+0x40c>)
 8001ee2:	4631      	mov	r1, r6
 8001ee4:	4650      	mov	r0, sl
 8001ee6:	f005 fc54 	bl	8007792 <osMessageQueueNew>
 8001eea:	4b12      	ldr	r3, [pc, #72]	@ (8001f34 <main+0x410>)
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 8001eec:	4a12      	ldr	r2, [pc, #72]	@ (8001f38 <main+0x414>)
  myQueue01Handle = osMessageQueueNew (16, sizeof(uint16_t), &myQueue01_attributes);
 8001eee:	6018      	str	r0, [r3, #0]
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 8001ef0:	4621      	mov	r1, r4
 8001ef2:	4812      	ldr	r0, [pc, #72]	@ (8001f3c <main+0x418>)
 8001ef4:	f005 fb5e 	bl	80075b4 <osThreadNew>
 8001ef8:	4b11      	ldr	r3, [pc, #68]	@ (8001f40 <main+0x41c>)
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 8001efa:	4a12      	ldr	r2, [pc, #72]	@ (8001f44 <main+0x420>)
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 8001efc:	6018      	str	r0, [r3, #0]
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 8001efe:	4621      	mov	r1, r4
 8001f00:	4811      	ldr	r0, [pc, #68]	@ (8001f48 <main+0x424>)
 8001f02:	f005 fb57 	bl	80075b4 <osThreadNew>
 8001f06:	4b11      	ldr	r3, [pc, #68]	@ (8001f4c <main+0x428>)
  myTask03Handle = osThreadNew(StartTask03, NULL, &myTask03_attributes);
 8001f08:	4a11      	ldr	r2, [pc, #68]	@ (8001f50 <main+0x42c>)
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 8001f0a:	6018      	str	r0, [r3, #0]
  myTask03Handle = osThreadNew(StartTask03, NULL, &myTask03_attributes);
 8001f0c:	4621      	mov	r1, r4
 8001f0e:	4811      	ldr	r0, [pc, #68]	@ (8001f54 <main+0x430>)
 8001f10:	f005 fb50 	bl	80075b4 <osThreadNew>
 8001f14:	4b10      	ldr	r3, [pc, #64]	@ (8001f58 <main+0x434>)
 8001f16:	6018      	str	r0, [r3, #0]
  osKernelStart();
 8001f18:	f005 fb32 	bl	8007580 <osKernelStart>
  while (1)
 8001f1c:	e7fe      	b.n	8001f1c <main+0x3f8>
 8001f1e:	bf00      	nop
 8001f20:	20003190 	.word	0x20003190
 8001f24:	4002b000 	.word	0x4002b000
 8001f28:	20003084 	.word	0x20003084
 8001f2c:	50060800 	.word	0x50060800
 8001f30:	0802497c 	.word	0x0802497c
 8001f34:	20002fe8 	.word	0x20002fe8
 8001f38:	080249dc 	.word	0x080249dc
 8001f3c:	08001a75 	.word	0x08001a75
 8001f40:	20002ff4 	.word	0x20002ff4
 8001f44:	080249b8 	.word	0x080249b8
 8001f48:	080006cf 	.word	0x080006cf
 8001f4c:	20002ff0 	.word	0x20002ff0
 8001f50:	08024994 	.word	0x08024994
 8001f54:	08001a83 	.word	0x08001a83
 8001f58:	20002fec 	.word	0x20002fec

08001f5c <IOE_Init>:
void IOE_Init(void)
 8001f5c:	4770      	bx	lr

08001f5e <IOE_ITConfig>:
void IOE_ITConfig(void)
 8001f5e:	4770      	bx	lr

08001f60 <IOE_Write>:
{
 8001f60:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
  status = HAL_I2C_Mem_Write(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, &Value, 1, I2c3Timeout);
 8001f62:	4b09      	ldr	r3, [pc, #36]	@ (8001f88 <IOE_Write+0x28>)
 8001f64:	f88d 2017 	strb.w	r2, [sp, #23]
 8001f68:	681b      	ldr	r3, [r3, #0]
 8001f6a:	9302      	str	r3, [sp, #8]
 8001f6c:	f10d 0217 	add.w	r2, sp, #23
 8001f70:	2301      	movs	r3, #1
 8001f72:	9200      	str	r2, [sp, #0]
 8001f74:	9301      	str	r3, [sp, #4]
 8001f76:	460a      	mov	r2, r1
 8001f78:	4601      	mov	r1, r0
 8001f7a:	4804      	ldr	r0, [pc, #16]	@ (8001f8c <IOE_Write+0x2c>)
 8001f7c:	f002 fb52 	bl	8004624 <HAL_I2C_Mem_Write>
}
 8001f80:	b007      	add	sp, #28
 8001f82:	f85d fb04 	ldr.w	pc, [sp], #4
 8001f86:	bf00      	nop
 8001f88:	20000060 	.word	0x20000060
 8001f8c:	2000313c 	.word	0x2000313c

08001f90 <IOE_Read>:
{
 8001f90:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
  uint8_t value = 0;
 8001f92:	2300      	movs	r3, #0
 8001f94:	f88d 3017 	strb.w	r3, [sp, #23]
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 8001f98:	4b08      	ldr	r3, [pc, #32]	@ (8001fbc <IOE_Read+0x2c>)
 8001f9a:	681b      	ldr	r3, [r3, #0]
 8001f9c:	9302      	str	r3, [sp, #8]
{
 8001f9e:	460a      	mov	r2, r1
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 8001fa0:	2301      	movs	r3, #1
 8001fa2:	f10d 0117 	add.w	r1, sp, #23
 8001fa6:	9100      	str	r1, [sp, #0]
 8001fa8:	9301      	str	r3, [sp, #4]
 8001faa:	4601      	mov	r1, r0
 8001fac:	4804      	ldr	r0, [pc, #16]	@ (8001fc0 <IOE_Read+0x30>)
 8001fae:	f002 fbc9 	bl	8004744 <HAL_I2C_Mem_Read>
}
 8001fb2:	f89d 0017 	ldrb.w	r0, [sp, #23]
 8001fb6:	b007      	add	sp, #28
 8001fb8:	f85d fb04 	ldr.w	pc, [sp], #4
 8001fbc:	20000060 	.word	0x20000060
 8001fc0:	2000313c 	.word	0x2000313c

08001fc4 <IOE_ReadMultiple>:
{
 8001fc4:	b51f      	push	{r0, r1, r2, r3, r4, lr}
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, pBuffer, Length, I2c3Timeout);
 8001fc6:	4c08      	ldr	r4, [pc, #32]	@ (8001fe8 <IOE_ReadMultiple+0x24>)
 8001fc8:	6824      	ldr	r4, [r4, #0]
 8001fca:	9200      	str	r2, [sp, #0]
 8001fcc:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8001fd0:	460a      	mov	r2, r1
 8001fd2:	2301      	movs	r3, #1
 8001fd4:	4601      	mov	r1, r0
 8001fd6:	4805      	ldr	r0, [pc, #20]	@ (8001fec <IOE_ReadMultiple+0x28>)
 8001fd8:	f002 fbb4 	bl	8004744 <HAL_I2C_Mem_Read>
}
 8001fdc:	3800      	subs	r0, #0
 8001fde:	bf18      	it	ne
 8001fe0:	2001      	movne	r0, #1
 8001fe2:	b004      	add	sp, #16
 8001fe4:	bd10      	pop	{r4, pc}
 8001fe6:	bf00      	nop
 8001fe8:	20000060 	.word	0x20000060
 8001fec:	2000313c 	.word	0x2000313c

08001ff0 <IOE_Delay>:
void IOE_Delay(uint32_t Delay)
 8001ff0:	f001 be08 	b.w	8003c04 <HAL_Delay>

08001ff4 <LCD_IO_Init>:
{
 8001ff4:	b510      	push	{r4, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001ff6:	4c06      	ldr	r4, [pc, #24]	@ (8002010 <LCD_IO_Init+0x1c>)
 8001ff8:	2200      	movs	r2, #0
 8001ffa:	4620      	mov	r0, r4
 8001ffc:	2104      	movs	r1, #4
 8001ffe:	f002 f85b 	bl	80040b8 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8002002:	4620      	mov	r0, r4
 8002004:	2201      	movs	r2, #1
}
 8002006:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 800200a:	2104      	movs	r1, #4
 800200c:	f002 b854 	b.w	80040b8 <HAL_GPIO_WritePin>
 8002010:	40020800 	.word	0x40020800

08002014 <LCD_IO_WriteData>:
{
 8002014:	b538      	push	{r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8002016:	4d0b      	ldr	r5, [pc, #44]	@ (8002044 <LCD_IO_WriteData+0x30>)
{
 8002018:	4604      	mov	r4, r0
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 800201a:	2201      	movs	r2, #1
 800201c:	480a      	ldr	r0, [pc, #40]	@ (8002048 <LCD_IO_WriteData+0x34>)
 800201e:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 8002022:	f002 f849 	bl	80040b8 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8002026:	2200      	movs	r2, #0
 8002028:	2104      	movs	r1, #4
 800202a:	4628      	mov	r0, r5
 800202c:	f002 f844 	bl	80040b8 <HAL_GPIO_WritePin>
  SPI5_Write(RegValue);
 8002030:	4620      	mov	r0, r4
 8002032:	f7ff fd0d 	bl	8001a50 <SPI5_Write>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8002036:	4628      	mov	r0, r5
 8002038:	2201      	movs	r2, #1
}
 800203a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 800203e:	2104      	movs	r1, #4
 8002040:	f002 b83a 	b.w	80040b8 <HAL_GPIO_WritePin>
 8002044:	40020800 	.word	0x40020800
 8002048:	40020c00 	.word	0x40020c00

0800204c <LCD_IO_WriteReg>:
{
 800204c:	b538      	push	{r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 800204e:	4d0b      	ldr	r5, [pc, #44]	@ (800207c <LCD_IO_WriteReg+0x30>)
{
 8002050:	4604      	mov	r4, r0
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 8002052:	2200      	movs	r2, #0
 8002054:	480a      	ldr	r0, [pc, #40]	@ (8002080 <LCD_IO_WriteReg+0x34>)
 8002056:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 800205a:	f002 f82d 	bl	80040b8 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 800205e:	2200      	movs	r2, #0
 8002060:	2104      	movs	r1, #4
 8002062:	4628      	mov	r0, r5
 8002064:	f002 f828 	bl	80040b8 <HAL_GPIO_WritePin>
  SPI5_Write(Reg);
 8002068:	4620      	mov	r0, r4
 800206a:	f7ff fcf1 	bl	8001a50 <SPI5_Write>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 800206e:	4628      	mov	r0, r5
 8002070:	2201      	movs	r2, #1
}
 8002072:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8002076:	2104      	movs	r1, #4
 8002078:	f002 b81e 	b.w	80040b8 <HAL_GPIO_WritePin>
 800207c:	40020800 	.word	0x40020800
 8002080:	40020c00 	.word	0x40020c00

08002084 <LCD_IO_ReadData>:
{
 8002084:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8002086:	4e14      	ldr	r6, [pc, #80]	@ (80020d8 <LCD_IO_ReadData+0x54>)
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 8002088:	4f14      	ldr	r7, [pc, #80]	@ (80020dc <LCD_IO_ReadData+0x58>)
{
 800208a:	4605      	mov	r5, r0
 800208c:	460c      	mov	r4, r1
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 800208e:	4630      	mov	r0, r6
 8002090:	2200      	movs	r2, #0
 8002092:	2104      	movs	r1, #4
 8002094:	f002 f810 	bl	80040b8 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 8002098:	2200      	movs	r2, #0
 800209a:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 800209e:	4638      	mov	r0, r7
 80020a0:	f002 f80a 	bl	80040b8 <HAL_GPIO_WritePin>
  SPI5_Write(RegValue);
 80020a4:	4628      	mov	r0, r5
 80020a6:	f7ff fcd3 	bl	8001a50 <SPI5_Write>
  status = HAL_SPI_Receive(&hspi5, (uint8_t*) &readvalue, ReadSize, Spi5Timeout);
 80020aa:	4b0d      	ldr	r3, [pc, #52]	@ (80020e0 <LCD_IO_ReadData+0x5c>)
 80020ac:	480d      	ldr	r0, [pc, #52]	@ (80020e4 <LCD_IO_ReadData+0x60>)
 80020ae:	681b      	ldr	r3, [r3, #0]
 80020b0:	4622      	mov	r2, r4
 80020b2:	a901      	add	r1, sp, #4
 80020b4:	f004 fa96 	bl	80065e4 <HAL_SPI_Receive>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 80020b8:	4638      	mov	r0, r7
 80020ba:	2201      	movs	r2, #1
 80020bc:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
  return readvalue;
 80020c0:	9c01      	ldr	r4, [sp, #4]
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 80020c2:	f001 fff9 	bl	80040b8 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 80020c6:	4630      	mov	r0, r6
 80020c8:	2201      	movs	r2, #1
 80020ca:	2104      	movs	r1, #4
 80020cc:	f001 fff4 	bl	80040b8 <HAL_GPIO_WritePin>
}
 80020d0:	4620      	mov	r0, r4
 80020d2:	b003      	add	sp, #12
 80020d4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80020d6:	bf00      	nop
 80020d8:	40020800 	.word	0x40020800
 80020dc:	40020c00 	.word	0x40020c00
 80020e0:	2000005c 	.word	0x2000005c
 80020e4:	2000302c 	.word	0x2000302c

080020e8 <LCD_Delay>:
  HAL_Delay(Delay);
 80020e8:	f001 bd8c 	b.w	8003c04 <HAL_Delay>

080020ec <HAL_TIM_PeriodElapsedCallback>:
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
  /* USER CODE BEGIN Callback 0 */

  /* USER CODE END Callback 0 */
  if (htim->Instance == TIM6)
 80020ec:	6802      	ldr	r2, [r0, #0]
 80020ee:	4b03      	ldr	r3, [pc, #12]	@ (80020fc <HAL_TIM_PeriodElapsedCallback+0x10>)
 80020f0:	429a      	cmp	r2, r3
 80020f2:	d101      	bne.n	80020f8 <HAL_TIM_PeriodElapsedCallback+0xc>
  {
    HAL_IncTick();
 80020f4:	f001 bd74 	b.w	8003be0 <HAL_IncTick>
  }
  /* USER CODE BEGIN Callback 1 */

  /* USER CODE END Callback 1 */
}
 80020f8:	4770      	bx	lr
 80020fa:	bf00      	nop
 80020fc:	40001000 	.word	0x40001000

08002100 <Error_Handler>:
{
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */

  /* USER CODE END Error_Handler_Debug */
}
 8002100:	4770      	bx	lr
	...

08002104 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8002104:	b082      	sub	sp, #8

  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8002106:	4b0e      	ldr	r3, [pc, #56]	@ (8002140 <HAL_MspInit+0x3c>)
 8002108:	2200      	movs	r2, #0
 800210a:	9200      	str	r2, [sp, #0]
 800210c:	6c59      	ldr	r1, [r3, #68]	@ 0x44
 800210e:	f441 4180 	orr.w	r1, r1, #16384	@ 0x4000
 8002112:	6459      	str	r1, [r3, #68]	@ 0x44
 8002114:	6c59      	ldr	r1, [r3, #68]	@ 0x44
 8002116:	f401 4180 	and.w	r1, r1, #16384	@ 0x4000
 800211a:	9100      	str	r1, [sp, #0]
 800211c:	9900      	ldr	r1, [sp, #0]
  __HAL_RCC_PWR_CLK_ENABLE();
 800211e:	9201      	str	r2, [sp, #4]
 8002120:	6c19      	ldr	r1, [r3, #64]	@ 0x40
 8002122:	f041 5180 	orr.w	r1, r1, #268435456	@ 0x10000000
 8002126:	6419      	str	r1, [r3, #64]	@ 0x40
 8002128:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800212a:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 800212e:	9301      	str	r3, [sp, #4]
 8002130:	9b01      	ldr	r3, [sp, #4]

  /* System interrupt init*/
  /* PendSV_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 8002132:	210f      	movs	r1, #15
 8002134:	f06f 0001 	mvn.w	r0, #1

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8002138:	b002      	add	sp, #8
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 800213a:	f001 bd89 	b.w	8003c50 <HAL_NVIC_SetPriority>
 800213e:	bf00      	nop
 8002140:	40023800 	.word	0x40023800

08002144 <HAL_CRC_MspInit>:
  * @param hcrc: CRC handle pointer
  * @retval None
  */
void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
{
  if(hcrc->Instance==CRC)
 8002144:	6802      	ldr	r2, [r0, #0]
 8002146:	4b09      	ldr	r3, [pc, #36]	@ (800216c <HAL_CRC_MspInit+0x28>)
 8002148:	429a      	cmp	r2, r3
{
 800214a:	b082      	sub	sp, #8
  if(hcrc->Instance==CRC)
 800214c:	d10b      	bne.n	8002166 <HAL_CRC_MspInit+0x22>
  {
    /* USER CODE BEGIN CRC_MspInit 0 */

    /* USER CODE END CRC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
 800214e:	2300      	movs	r3, #0
 8002150:	9301      	str	r3, [sp, #4]
 8002152:	4b07      	ldr	r3, [pc, #28]	@ (8002170 <HAL_CRC_MspInit+0x2c>)
 8002154:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8002156:	f442 5280 	orr.w	r2, r2, #4096	@ 0x1000
 800215a:	631a      	str	r2, [r3, #48]	@ 0x30
 800215c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800215e:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 8002162:	9301      	str	r3, [sp, #4]
 8002164:	9b01      	ldr	r3, [sp, #4]

    /* USER CODE END CRC_MspInit 1 */

  }

}
 8002166:	b002      	add	sp, #8
 8002168:	4770      	bx	lr
 800216a:	bf00      	nop
 800216c:	40023000 	.word	0x40023000
 8002170:	40023800 	.word	0x40023800

08002174 <HAL_DMA2D_MspInit>:
  * This function configures the hardware resources used in this example
  * @param hdma2d: DMA2D handle pointer
  * @retval None
  */
void HAL_DMA2D_MspInit(DMA2D_HandleTypeDef* hdma2d)
{
 8002174:	b507      	push	{r0, r1, r2, lr}
  if(hdma2d->Instance==DMA2D)
 8002176:	4b0f      	ldr	r3, [pc, #60]	@ (80021b4 <HAL_DMA2D_MspInit+0x40>)
 8002178:	6802      	ldr	r2, [r0, #0]
 800217a:	429a      	cmp	r2, r3
 800217c:	d116      	bne.n	80021ac <HAL_DMA2D_MspInit+0x38>
  {
    /* USER CODE BEGIN DMA2D_MspInit 0 */

    /* USER CODE END DMA2D_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_DMA2D_CLK_ENABLE();
 800217e:	2200      	movs	r2, #0
 8002180:	f5a3 43f0 	sub.w	r3, r3, #30720	@ 0x7800
 8002184:	9201      	str	r2, [sp, #4]
 8002186:	6b19      	ldr	r1, [r3, #48]	@ 0x30
 8002188:	f441 0100 	orr.w	r1, r1, #8388608	@ 0x800000
 800218c:	6319      	str	r1, [r3, #48]	@ 0x30
 800218e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002190:	f403 0300 	and.w	r3, r3, #8388608	@ 0x800000
 8002194:	9301      	str	r3, [sp, #4]
    /* DMA2D interrupt Init */
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 8002196:	2105      	movs	r1, #5
 8002198:	205a      	movs	r0, #90	@ 0x5a
    __HAL_RCC_DMA2D_CLK_ENABLE();
 800219a:	9b01      	ldr	r3, [sp, #4]
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 800219c:	f001 fd58 	bl	8003c50 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 80021a0:	205a      	movs	r0, #90	@ 0x5a

    /* USER CODE END DMA2D_MspInit 1 */

  }

}
 80021a2:	b003      	add	sp, #12
 80021a4:	f85d eb04 	ldr.w	lr, [sp], #4
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 80021a8:	f001 bd84 	b.w	8003cb4 <HAL_NVIC_EnableIRQ>
}
 80021ac:	b003      	add	sp, #12
 80021ae:	f85d fb04 	ldr.w	pc, [sp], #4
 80021b2:	bf00      	nop
 80021b4:	4002b000 	.word	0x4002b000

080021b8 <HAL_I2C_MspInit>:
  * This function configures the hardware resources used in this example
  * @param hi2c: I2C handle pointer
  * @retval None
  */
void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
{
 80021b8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80021bc:	4604      	mov	r4, r0
 80021be:	b089      	sub	sp, #36	@ 0x24
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80021c0:	2214      	movs	r2, #20
 80021c2:	2100      	movs	r1, #0
 80021c4:	a803      	add	r0, sp, #12
 80021c6:	f020 fee4 	bl	8022f92 <memset>
  if(hi2c->Instance==I2C3)
 80021ca:	6822      	ldr	r2, [r4, #0]
 80021cc:	4b24      	ldr	r3, [pc, #144]	@ (8002260 <HAL_I2C_MspInit+0xa8>)
 80021ce:	429a      	cmp	r2, r3
 80021d0:	d143      	bne.n	800225a <HAL_I2C_MspInit+0xa2>
  {
    /* USER CODE BEGIN I2C3_MspInit 0 */

    /* USER CODE END I2C3_MspInit 0 */

    __HAL_RCC_GPIOC_CLK_ENABLE();
 80021d2:	4c24      	ldr	r4, [pc, #144]	@ (8002264 <HAL_I2C_MspInit+0xac>)
    GPIO_InitStruct.Pin = GPIO_PIN_9;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
    GPIO_InitStruct.Pull = GPIO_PULLUP;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80021d4:	4824      	ldr	r0, [pc, #144]	@ (8002268 <HAL_I2C_MspInit+0xb0>)
    __HAL_RCC_GPIOC_CLK_ENABLE();
 80021d6:	2500      	movs	r5, #0
 80021d8:	9500      	str	r5, [sp, #0]
 80021da:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 80021dc:	f043 0304 	orr.w	r3, r3, #4
 80021e0:	6323      	str	r3, [r4, #48]	@ 0x30
 80021e2:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 80021e4:	f003 0304 	and.w	r3, r3, #4
 80021e8:	9300      	str	r3, [sp, #0]
 80021ea:	9b00      	ldr	r3, [sp, #0]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 80021ec:	9501      	str	r5, [sp, #4]
 80021ee:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 80021f0:	f043 0301 	orr.w	r3, r3, #1
 80021f4:	6323      	str	r3, [r4, #48]	@ 0x30
 80021f6:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 80021f8:	f003 0301 	and.w	r3, r3, #1
 80021fc:	9301      	str	r3, [sp, #4]
 80021fe:	9b01      	ldr	r3, [sp, #4]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8002200:	f04f 0912 	mov.w	r9, #18
 8002204:	f44f 7300 	mov.w	r3, #512	@ 0x200
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002208:	f04f 0801 	mov.w	r8, #1
 800220c:	2703      	movs	r7, #3
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 800220e:	2604      	movs	r6, #4
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002210:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8002212:	e9cd 3903 	strd	r3, r9, [sp, #12]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002216:	e9cd 8705 	strd	r8, r7, [sp, #20]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 800221a:	9607      	str	r6, [sp, #28]
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 800221c:	f001 fe62 	bl	8003ee4 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_8;
 8002220:	f44f 7380 	mov.w	r3, #256	@ 0x100
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
    GPIO_InitStruct.Pull = GPIO_PULLUP;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002224:	4811      	ldr	r0, [pc, #68]	@ (800226c <HAL_I2C_MspInit+0xb4>)
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8002226:	9607      	str	r6, [sp, #28]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002228:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 800222a:	e9cd 3903 	strd	r3, r9, [sp, #12]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800222e:	e9cd 8705 	strd	r8, r7, [sp, #20]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002232:	f001 fe57 	bl	8003ee4 <HAL_GPIO_Init>

    /* Peripheral clock enable */
    __HAL_RCC_I2C3_CLK_ENABLE();
 8002236:	9502      	str	r5, [sp, #8]
 8002238:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 800223a:	f443 0300 	orr.w	r3, r3, #8388608	@ 0x800000
 800223e:	6423      	str	r3, [r4, #64]	@ 0x40
 8002240:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8002242:	f403 0300 	and.w	r3, r3, #8388608	@ 0x800000
 8002246:	9302      	str	r3, [sp, #8]
 8002248:	9b02      	ldr	r3, [sp, #8]
    /* USER CODE BEGIN I2C3_MspInit 1 */
  /* Force the I2C Peripheral Clock Reset */  
    __HAL_RCC_I2C3_FORCE_RESET();
 800224a:	6a23      	ldr	r3, [r4, #32]
 800224c:	f443 0300 	orr.w	r3, r3, #8388608	@ 0x800000
 8002250:	6223      	str	r3, [r4, #32]
      
    /* Release the I2C Peripheral Clock Reset */  
    __HAL_RCC_I2C3_RELEASE_RESET(); 
 8002252:	6a23      	ldr	r3, [r4, #32]
 8002254:	f423 0300 	bic.w	r3, r3, #8388608	@ 0x800000
 8002258:	6223      	str	r3, [r4, #32]
    /* USER CODE END I2C3_MspInit 1 */

  }

}
 800225a:	b009      	add	sp, #36	@ 0x24
 800225c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8002260:	40005c00 	.word	0x40005c00
 8002264:	40023800 	.word	0x40023800
 8002268:	40020800 	.word	0x40020800
 800226c:	40020000 	.word	0x40020000

08002270 <HAL_LTDC_MspInit>:
  * This function configures the hardware resources used in this example
  * @param hltdc: LTDC handle pointer
  * @retval None
  */
void HAL_LTDC_MspInit(LTDC_HandleTypeDef* hltdc)
{
 8002270:	b5f0      	push	{r4, r5, r6, r7, lr}
 8002272:	b099      	sub	sp, #100	@ 0x64
 8002274:	4604      	mov	r4, r0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002276:	2214      	movs	r2, #20
 8002278:	2100      	movs	r1, #0
 800227a:	a807      	add	r0, sp, #28
 800227c:	f020 fe89 	bl	8022f92 <memset>
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8002280:	2230      	movs	r2, #48	@ 0x30
 8002282:	eb0d 0002 	add.w	r0, sp, r2
 8002286:	2100      	movs	r1, #0
 8002288:	f020 fe83 	bl	8022f92 <memset>
  if(hltdc->Instance==LTDC)
 800228c:	6822      	ldr	r2, [r4, #0]
 800228e:	4b5e      	ldr	r3, [pc, #376]	@ (8002408 <HAL_LTDC_MspInit+0x198>)
 8002290:	429a      	cmp	r2, r3
 8002292:	f040 80b7 	bne.w	8002404 <HAL_LTDC_MspInit+0x194>

    /* USER CODE END LTDC_MspInit 0 */

  /** Initializes the peripherals clock
  */
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
 8002296:	2308      	movs	r3, #8
 8002298:	930c      	str	r3, [sp, #48]	@ 0x30
    PeriphClkInitStruct.PLLSAI.PLLSAIN = 192;
 800229a:	23c0      	movs	r3, #192	@ 0xc0
 800229c:	9310      	str	r3, [sp, #64]	@ 0x40
    PeriphClkInitStruct.PLLSAI.PLLSAIR = 4;
 800229e:	2304      	movs	r3, #4
 80022a0:	9312      	str	r3, [sp, #72]	@ 0x48
    PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 80022a2:	a80c      	add	r0, sp, #48	@ 0x30
    PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
 80022a4:	f44f 3300 	mov.w	r3, #131072	@ 0x20000
 80022a8:	9315      	str	r3, [sp, #84]	@ 0x54
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 80022aa:	f003 fcff 	bl	8005cac <HAL_RCCEx_PeriphCLKConfig>
 80022ae:	b108      	cbz	r0, 80022b4 <HAL_LTDC_MspInit+0x44>
    {
      Error_Handler();
 80022b0:	f7ff ff26 	bl	8002100 <Error_Handler>
    }

    /* Peripheral clock enable */
    __HAL_RCC_LTDC_CLK_ENABLE();
 80022b4:	4b55      	ldr	r3, [pc, #340]	@ (800240c <HAL_LTDC_MspInit+0x19c>)
    GPIO_InitStruct.Pin = GPIO_PIN_10;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 80022b6:	4856      	ldr	r0, [pc, #344]	@ (8002410 <HAL_LTDC_MspInit+0x1a0>)
    __HAL_RCC_LTDC_CLK_ENABLE();
 80022b8:	2400      	movs	r4, #0
 80022ba:	9400      	str	r4, [sp, #0]
 80022bc:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 80022be:	f042 6280 	orr.w	r2, r2, #67108864	@ 0x4000000
 80022c2:	645a      	str	r2, [r3, #68]	@ 0x44
 80022c4:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 80022c6:	f002 6280 	and.w	r2, r2, #67108864	@ 0x4000000
 80022ca:	9200      	str	r2, [sp, #0]
 80022cc:	9a00      	ldr	r2, [sp, #0]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 80022ce:	9401      	str	r4, [sp, #4]
 80022d0:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80022d2:	f042 0220 	orr.w	r2, r2, #32
 80022d6:	631a      	str	r2, [r3, #48]	@ 0x30
 80022d8:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80022da:	f002 0220 	and.w	r2, r2, #32
 80022de:	9201      	str	r2, [sp, #4]
 80022e0:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 80022e2:	9402      	str	r4, [sp, #8]
 80022e4:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80022e6:	f042 0201 	orr.w	r2, r2, #1
 80022ea:	631a      	str	r2, [r3, #48]	@ 0x30
 80022ec:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80022ee:	f002 0201 	and.w	r2, r2, #1
 80022f2:	9202      	str	r2, [sp, #8]
 80022f4:	9a02      	ldr	r2, [sp, #8]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 80022f6:	9403      	str	r4, [sp, #12]
 80022f8:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80022fa:	f042 0202 	orr.w	r2, r2, #2
 80022fe:	631a      	str	r2, [r3, #48]	@ 0x30
 8002300:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8002302:	f002 0202 	and.w	r2, r2, #2
 8002306:	9203      	str	r2, [sp, #12]
 8002308:	9a03      	ldr	r2, [sp, #12]
    __HAL_RCC_GPIOG_CLK_ENABLE();
 800230a:	9404      	str	r4, [sp, #16]
 800230c:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800230e:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 8002312:	631a      	str	r2, [r3, #48]	@ 0x30
 8002314:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8002316:	f002 0240 	and.w	r2, r2, #64	@ 0x40
 800231a:	9204      	str	r2, [sp, #16]
 800231c:	9a04      	ldr	r2, [sp, #16]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 800231e:	9405      	str	r4, [sp, #20]
 8002320:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8002322:	f042 0204 	orr.w	r2, r2, #4
 8002326:	631a      	str	r2, [r3, #48]	@ 0x30
 8002328:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800232a:	f002 0204 	and.w	r2, r2, #4
 800232e:	9205      	str	r2, [sp, #20]
 8002330:	9a05      	ldr	r2, [sp, #20]
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8002332:	9406      	str	r4, [sp, #24]
 8002334:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8002336:	f042 0208 	orr.w	r2, r2, #8
 800233a:	631a      	str	r2, [r3, #48]	@ 0x30
 800233c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800233e:	f003 0308 	and.w	r3, r3, #8
 8002342:	9306      	str	r3, [sp, #24]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002344:	2502      	movs	r5, #2
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8002346:	260e      	movs	r6, #14
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8002348:	9b06      	ldr	r3, [sp, #24]
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 800234a:	960b      	str	r6, [sp, #44]	@ 0x2c
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800234c:	f44f 6380 	mov.w	r3, #1024	@ 0x400
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8002350:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002352:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8002356:	e9cd 4509 	strd	r4, r5, [sp, #36]	@ 0x24
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 800235a:	f001 fdc3 	bl	8003ee4 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_11
 800235e:	f641 0358 	movw	r3, #6232	@ 0x1858
                          |GPIO_PIN_12;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002362:	482c      	ldr	r0, [pc, #176]	@ (8002414 <HAL_LTDC_MspInit+0x1a4>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8002364:	960b      	str	r6, [sp, #44]	@ 0x2c
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002366:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002368:	e9cd 3507 	strd	r3, r5, [sp, #28]

    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 800236c:	2709      	movs	r7, #9
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 800236e:	e9cd 4509 	strd	r4, r5, [sp, #36]	@ 0x24
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002372:	f001 fdb7 	bl	8003ee4 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 8002376:	2303      	movs	r3, #3
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002378:	4827      	ldr	r0, [pc, #156]	@ (8002418 <HAL_LTDC_MspInit+0x1a8>)
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 800237a:	970b      	str	r7, [sp, #44]	@ 0x2c
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800237c:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800237e:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8002382:	e9cd 4509 	strd	r4, r5, [sp, #36]	@ 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002386:	f001 fdad 	bl	8003ee4 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_11|GPIO_PIN_8|GPIO_PIN_9;
 800238a:	f44f 6370 	mov.w	r3, #3840	@ 0xf00
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800238e:	4822      	ldr	r0, [pc, #136]	@ (8002418 <HAL_LTDC_MspInit+0x1a8>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8002390:	960b      	str	r6, [sp, #44]	@ 0x2c
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002392:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002394:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8002398:	e9cd 4509 	strd	r4, r5, [sp, #36]	@ 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800239c:	f001 fda2 	bl	8003ee4 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7|GPIO_PIN_11;
 80023a0:	f44f 630c 	mov.w	r3, #2240	@ 0x8c0
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80023a4:	481d      	ldr	r0, [pc, #116]	@ (800241c <HAL_LTDC_MspInit+0x1ac>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 80023a6:	960b      	str	r6, [sp, #44]	@ 0x2c
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80023a8:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80023aa:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80023ae:	e9cd 4509 	strd	r4, r5, [sp, #36]	@ 0x24
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80023b2:	f001 fd97 	bl	8003ee4 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 80023b6:	23c0      	movs	r3, #192	@ 0xc0
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80023b8:	4819      	ldr	r0, [pc, #100]	@ (8002420 <HAL_LTDC_MspInit+0x1b0>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 80023ba:	960b      	str	r6, [sp, #44]	@ 0x2c
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80023bc:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80023be:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80023c2:	e9cd 4509 	strd	r4, r5, [sp, #36]	@ 0x24
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80023c6:	f001 fd8d 	bl	8003ee4 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_3;
 80023ca:	2308      	movs	r3, #8
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80023cc:	4815      	ldr	r0, [pc, #84]	@ (8002424 <HAL_LTDC_MspInit+0x1b4>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 80023ce:	960b      	str	r6, [sp, #44]	@ 0x2c
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80023d0:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80023d2:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80023d6:	e9cd 4509 	strd	r4, r5, [sp, #36]	@ 0x24
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80023da:	f001 fd83 	bl	8003ee4 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_12;
 80023de:	f44f 53a0 	mov.w	r3, #5120	@ 0x1400
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80023e2:	480e      	ldr	r0, [pc, #56]	@ (800241c <HAL_LTDC_MspInit+0x1ac>)
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 80023e4:	970b      	str	r7, [sp, #44]	@ 0x2c
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80023e6:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80023e8:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80023ec:	e9cd 4509 	strd	r4, r5, [sp, #36]	@ 0x24
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80023f0:	f001 fd78 	bl	8003ee4 <HAL_GPIO_Init>

    /* LTDC interrupt Init */
    HAL_NVIC_SetPriority(LTDC_IRQn, 5, 0);
 80023f4:	2058      	movs	r0, #88	@ 0x58
 80023f6:	4622      	mov	r2, r4
 80023f8:	2105      	movs	r1, #5
 80023fa:	f001 fc29 	bl	8003c50 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(LTDC_IRQn);
 80023fe:	2058      	movs	r0, #88	@ 0x58
 8002400:	f001 fc58 	bl	8003cb4 <HAL_NVIC_EnableIRQ>

    /* USER CODE END LTDC_MspInit 1 */

  }

}
 8002404:	b019      	add	sp, #100	@ 0x64
 8002406:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8002408:	40016800 	.word	0x40016800
 800240c:	40023800 	.word	0x40023800
 8002410:	40021400 	.word	0x40021400
 8002414:	40020000 	.word	0x40020000
 8002418:	40020400 	.word	0x40020400
 800241c:	40021800 	.word	0x40021800
 8002420:	40020800 	.word	0x40020800
 8002424:	40020c00 	.word	0x40020c00

08002428 <HAL_RNG_MspInit>:
  * @param hrng: RNG handle pointer
  * @retval None
  */
void HAL_RNG_MspInit(RNG_HandleTypeDef* hrng)
{
  if(hrng->Instance==RNG)
 8002428:	6802      	ldr	r2, [r0, #0]
 800242a:	4b09      	ldr	r3, [pc, #36]	@ (8002450 <HAL_RNG_MspInit+0x28>)
 800242c:	429a      	cmp	r2, r3
{
 800242e:	b082      	sub	sp, #8
  if(hrng->Instance==RNG)
 8002430:	d10b      	bne.n	800244a <HAL_RNG_MspInit+0x22>
  {
    /* USER CODE BEGIN RNG_MspInit 0 */

    /* USER CODE END RNG_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_RNG_CLK_ENABLE();
 8002432:	2300      	movs	r3, #0
 8002434:	9301      	str	r3, [sp, #4]
 8002436:	4b07      	ldr	r3, [pc, #28]	@ (8002454 <HAL_RNG_MspInit+0x2c>)
 8002438:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 800243a:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 800243e:	635a      	str	r2, [r3, #52]	@ 0x34
 8002440:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8002442:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8002446:	9301      	str	r3, [sp, #4]
 8002448:	9b01      	ldr	r3, [sp, #4]

    /* USER CODE END RNG_MspInit 1 */

  }

}
 800244a:	b002      	add	sp, #8
 800244c:	4770      	bx	lr
 800244e:	bf00      	nop
 8002450:	50060800 	.word	0x50060800
 8002454:	40023800 	.word	0x40023800

08002458 <HAL_SPI_MspInit>:
  * This function configures the hardware resources used in this example
  * @param hspi: SPI handle pointer
  * @retval None
  */
void HAL_SPI_MspInit(SPI_HandleTypeDef* hspi)
{
 8002458:	b510      	push	{r4, lr}
 800245a:	4604      	mov	r4, r0
 800245c:	b088      	sub	sp, #32
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800245e:	2214      	movs	r2, #20
 8002460:	2100      	movs	r1, #0
 8002462:	a803      	add	r0, sp, #12
 8002464:	f020 fd95 	bl	8022f92 <memset>
  if(hspi->Instance==SPI5)
 8002468:	6822      	ldr	r2, [r4, #0]
 800246a:	4b14      	ldr	r3, [pc, #80]	@ (80024bc <HAL_SPI_MspInit+0x64>)
 800246c:	429a      	cmp	r2, r3
 800246e:	d123      	bne.n	80024b8 <HAL_SPI_MspInit+0x60>
  {
    /* USER CODE BEGIN SPI5_MspInit 0 */

    /* USER CODE END SPI5_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_SPI5_CLK_ENABLE();
 8002470:	f503 4368 	add.w	r3, r3, #59392	@ 0xe800
 8002474:	2100      	movs	r1, #0
 8002476:	9101      	str	r1, [sp, #4]
 8002478:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
    GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 800247a:	4811      	ldr	r0, [pc, #68]	@ (80024c0 <HAL_SPI_MspInit+0x68>)
    __HAL_RCC_SPI5_CLK_ENABLE();
 800247c:	f442 1280 	orr.w	r2, r2, #1048576	@ 0x100000
 8002480:	645a      	str	r2, [r3, #68]	@ 0x44
 8002482:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 8002484:	f402 1280 	and.w	r2, r2, #1048576	@ 0x100000
 8002488:	9201      	str	r2, [sp, #4]
 800248a:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 800248c:	9102      	str	r1, [sp, #8]
 800248e:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8002490:	f042 0220 	orr.w	r2, r2, #32
 8002494:	631a      	str	r2, [r3, #48]	@ 0x30
 8002496:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002498:	f003 0320 	and.w	r3, r3, #32
 800249c:	9302      	str	r3, [sp, #8]
 800249e:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80024a0:	f44f 7260 	mov.w	r2, #896	@ 0x380
 80024a4:	2302      	movs	r3, #2
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
 80024a6:	2103      	movs	r1, #3
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80024a8:	e9cd 2303 	strd	r2, r3, [sp, #12]
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
 80024ac:	2305      	movs	r3, #5
 80024ae:	e9cd 1306 	strd	r1, r3, [sp, #24]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 80024b2:	a903      	add	r1, sp, #12
 80024b4:	f001 fd16 	bl	8003ee4 <HAL_GPIO_Init>

    /* USER CODE END SPI5_MspInit 1 */

  }

}
 80024b8:	b008      	add	sp, #32
 80024ba:	bd10      	pop	{r4, pc}
 80024bc:	40015000 	.word	0x40015000
 80024c0:	40021400 	.word	0x40021400

080024c4 <HAL_SDRAM_MspInit>:
  /* USER CODE BEGIN FMC_MspInit 1 */

  /* USER CODE END FMC_MspInit 1 */
}

void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
 80024c4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80024c8:	b086      	sub	sp, #24
  GPIO_InitTypeDef GPIO_InitStruct ={0};
 80024ca:	2300      	movs	r3, #0
 80024cc:	9303      	str	r3, [sp, #12]
  if (FMC_Initialized) {
 80024ce:	4b2b      	ldr	r3, [pc, #172]	@ (800257c <HAL_SDRAM_MspInit+0xb8>)
 80024d0:	681c      	ldr	r4, [r3, #0]
 80024d2:	2c00      	cmp	r4, #0
 80024d4:	d14f      	bne.n	8002576 <HAL_SDRAM_MspInit+0xb2>
  FMC_Initialized = 1;
 80024d6:	f04f 0801 	mov.w	r8, #1
 80024da:	f8c3 8000 	str.w	r8, [r3]
  __HAL_RCC_FMC_CLK_ENABLE();
 80024de:	4b28      	ldr	r3, [pc, #160]	@ (8002580 <HAL_SDRAM_MspInit+0xbc>)
 80024e0:	9400      	str	r4, [sp, #0]
 80024e2:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 80024e4:	4827      	ldr	r0, [pc, #156]	@ (8002584 <HAL_SDRAM_MspInit+0xc0>)
  __HAL_RCC_FMC_CLK_ENABLE();
 80024e6:	ea42 0208 	orr.w	r2, r2, r8
 80024ea:	639a      	str	r2, [r3, #56]	@ 0x38
 80024ec:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80024ee:	ea03 0308 	and.w	r3, r3, r8
 80024f2:	9300      	str	r3, [sp, #0]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80024f4:	2702      	movs	r7, #2
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 80024f6:	2603      	movs	r6, #3
 80024f8:	250c      	movs	r5, #12
  __HAL_RCC_FMC_CLK_ENABLE();
 80024fa:	9b00      	ldr	r3, [sp, #0]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 80024fc:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80024fe:	f64f 033f 	movw	r3, #63551	@ 0xf83f
 8002502:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002506:	e9cd 6504 	strd	r6, r5, [sp, #16]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 800250a:	f001 fceb 	bl	8003ee4 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 800250e:	481e      	ldr	r0, [pc, #120]	@ (8002588 <HAL_SDRAM_MspInit+0xc4>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002510:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002512:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002514:	e9cd 8701 	strd	r8, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002518:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 800251c:	f001 fce2 	bl	8003ee4 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_4|GPIO_PIN_5
 8002520:	f248 1333 	movw	r3, #33075	@ 0x8133
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8002524:	4819      	ldr	r0, [pc, #100]	@ (800258c <HAL_SDRAM_MspInit+0xc8>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002526:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8002528:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800252a:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800252e:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8002532:	f001 fcd7 	bl	8003ee4 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10
 8002536:	f64f 7383 	movw	r3, #65411	@ 0xff83
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 800253a:	4815      	ldr	r0, [pc, #84]	@ (8002590 <HAL_SDRAM_MspInit+0xcc>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 800253c:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 800253e:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002540:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002544:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8002548:	f001 fccc 	bl	8003ee4 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10|GPIO_PIN_14
 800254c:	f24c 7303 	movw	r3, #50947	@ 0xc703
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8002550:	4810      	ldr	r0, [pc, #64]	@ (8002594 <HAL_SDRAM_MspInit+0xd0>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002552:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8002554:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002556:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800255a:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 800255e:	f001 fcc1 	bl	8003ee4 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6;
 8002562:	2360      	movs	r3, #96	@ 0x60
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002564:	480c      	ldr	r0, [pc, #48]	@ (8002598 <HAL_SDRAM_MspInit+0xd4>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002566:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002568:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800256a:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800256e:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002572:	f001 fcb7 	bl	8003ee4 <HAL_GPIO_Init>
  /* USER CODE END SDRAM_MspInit 0 */
  HAL_FMC_MspInit();
  /* USER CODE BEGIN SDRAM_MspInit 1 */

  /* USER CODE END SDRAM_MspInit 1 */
}
 8002576:	b006      	add	sp, #24
 8002578:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800257c:	200031d8 	.word	0x200031d8
 8002580:	40023800 	.word	0x40023800
 8002584:	40021400 	.word	0x40021400
 8002588:	40020800 	.word	0x40020800
 800258c:	40021800 	.word	0x40021800
 8002590:	40021000 	.word	0x40021000
 8002594:	40020c00 	.word	0x40020c00
 8002598:	40020400 	.word	0x40020400

0800259c <HAL_InitTick>:
  *         reset by HAL_Init() or at any time when clock is configured, by HAL_RCC_ClockConfig().
  * @param  TickPriority: Tick interrupt priority.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 800259c:	b570      	push	{r4, r5, r6, lr}
 800259e:	b088      	sub	sp, #32
  uint32_t              pFLatency;

  HAL_StatusTypeDef     status;

  /* Enable TIM6 clock */
  __HAL_RCC_TIM6_CLK_ENABLE();
 80025a0:	2300      	movs	r3, #0
 80025a2:	9302      	str	r3, [sp, #8]
 80025a4:	4b20      	ldr	r3, [pc, #128]	@ (8002628 <HAL_InitTick+0x8c>)
 80025a6:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 80025a8:	f042 0210 	orr.w	r2, r2, #16
 80025ac:	641a      	str	r2, [r3, #64]	@ 0x40
 80025ae:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80025b0:	f003 0310 	and.w	r3, r3, #16
 80025b4:	9302      	str	r3, [sp, #8]
{
 80025b6:	4605      	mov	r5, r0

  /* Get clock configuration */
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 80025b8:	a901      	add	r1, sp, #4
 80025ba:	a803      	add	r0, sp, #12
  __HAL_RCC_TIM6_CLK_ENABLE();
 80025bc:	9b02      	ldr	r3, [sp, #8]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 80025be:	f003 fb57 	bl	8005c70 <HAL_RCC_GetClockConfig>

  /* Get APB1 prescaler */
  uwAPB1Prescaler = clkconfig.APB1CLKDivider;
  /* Compute TIM6 clock */
  if (uwAPB1Prescaler == RCC_HCLK_DIV1)
 80025c2:	9b06      	ldr	r3, [sp, #24]
 80025c4:	bb4b      	cbnz	r3, 800261a <HAL_InitTick+0x7e>
  {
    uwTimclock = HAL_RCC_GetPCLK1Freq();
 80025c6:	f003 fb43 	bl	8005c50 <HAL_RCC_GetPCLK1Freq>

  /* Compute the prescaler value to have TIM6 counter clock equal to 1MHz */
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);

  /* Initialize TIM6 */
  htim6.Instance = TIM6;
 80025ca:	4e18      	ldr	r6, [pc, #96]	@ (800262c <HAL_InitTick+0x90>)
 80025cc:	4b18      	ldr	r3, [pc, #96]	@ (8002630 <HAL_InitTick+0x94>)
 80025ce:	6033      	str	r3, [r6, #0]
   * Period = [(TIM6CLK/1000) - 1]. to have a (1/1000) s time base.
   * Prescaler = (uwTimclock/1000000 - 1) to have a 1MHz counter clock.
   * ClockDivision = 0
   * Counter direction = Up
   */
  htim6.Init.Period = (1000000U / 1000U) - 1U;
 80025d0:	f240 33e7 	movw	r3, #999	@ 0x3e7
 80025d4:	60f3      	str	r3, [r6, #12]
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
 80025d6:	4b17      	ldr	r3, [pc, #92]	@ (8002634 <HAL_InitTick+0x98>)
 80025d8:	fbb0 f3f3 	udiv	r3, r0, r3
 80025dc:	3b01      	subs	r3, #1
  htim6.Init.Prescaler = uwPrescalerValue;
 80025de:	6073      	str	r3, [r6, #4]
  htim6.Init.ClockDivision = 0;
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
  htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;

  status = HAL_TIM_Base_Init(&htim6);
 80025e0:	4630      	mov	r0, r6
  htim6.Init.ClockDivision = 0;
 80025e2:	2300      	movs	r3, #0
 80025e4:	6133      	str	r3, [r6, #16]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
 80025e6:	60b3      	str	r3, [r6, #8]
  htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 80025e8:	61b3      	str	r3, [r6, #24]
  status = HAL_TIM_Base_Init(&htim6);
 80025ea:	f004 f9cb 	bl	8006984 <HAL_TIM_Base_Init>
  if (status == HAL_OK)
 80025ee:	4604      	mov	r4, r0
 80025f0:	b980      	cbnz	r0, 8002614 <HAL_InitTick+0x78>
  {
    /* Start the TIM time Base generation in interrupt mode */
    status = HAL_TIM_Base_Start_IT(&htim6);
 80025f2:	4630      	mov	r0, r6
 80025f4:	f004 f89c 	bl	8006730 <HAL_TIM_Base_Start_IT>
    if (status == HAL_OK)
 80025f8:	4604      	mov	r4, r0
 80025fa:	b958      	cbnz	r0, 8002614 <HAL_InitTick+0x78>
    {
    /* Enable the TIM6 global Interrupt */
        HAL_NVIC_EnableIRQ(TIM6_DAC_IRQn);
 80025fc:	2036      	movs	r0, #54	@ 0x36
 80025fe:	f001 fb59 	bl	8003cb4 <HAL_NVIC_EnableIRQ>
      /* Configure the SysTick IRQ priority */
      if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 8002602:	2d0f      	cmp	r5, #15
 8002604:	d80d      	bhi.n	8002622 <HAL_InitTick+0x86>
      {
        /* Configure the TIM IRQ priority */
        HAL_NVIC_SetPriority(TIM6_DAC_IRQn, TickPriority, 0U);
 8002606:	4622      	mov	r2, r4
 8002608:	4629      	mov	r1, r5
 800260a:	2036      	movs	r0, #54	@ 0x36
 800260c:	f001 fb20 	bl	8003c50 <HAL_NVIC_SetPriority>
        uwTickPrio = TickPriority;
 8002610:	4b09      	ldr	r3, [pc, #36]	@ (8002638 <HAL_InitTick+0x9c>)
 8002612:	601d      	str	r5, [r3, #0]
    }
  }

 /* Return function status */
  return status;
}
 8002614:	4620      	mov	r0, r4
 8002616:	b008      	add	sp, #32
 8002618:	bd70      	pop	{r4, r5, r6, pc}
    uwTimclock = 2UL * HAL_RCC_GetPCLK1Freq();
 800261a:	f003 fb19 	bl	8005c50 <HAL_RCC_GetPCLK1Freq>
 800261e:	0040      	lsls	r0, r0, #1
 8002620:	e7d3      	b.n	80025ca <HAL_InitTick+0x2e>
        status = HAL_ERROR;
 8002622:	2401      	movs	r4, #1
 8002624:	e7f6      	b.n	8002614 <HAL_InitTick+0x78>
 8002626:	bf00      	nop
 8002628:	40023800 	.word	0x40023800
 800262c:	200031dc 	.word	0x200031dc
 8002630:	40001000 	.word	0x40001000
 8002634:	000f4240 	.word	0x000f4240
 8002638:	200000cc 	.word	0x200000cc

0800263c <NMI_Handler>:

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */

  /* USER CODE END NonMaskableInt_IRQn 1 */
}
 800263c:	4770      	bx	lr

0800263e <HardFault_Handler>:
void HardFault_Handler(void)
{
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 800263e:	e7fe      	b.n	800263e <HardFault_Handler>

08002640 <MemManage_Handler>:
void MemManage_Handler(void)
{
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8002640:	e7fe      	b.n	8002640 <MemManage_Handler>

08002642 <BusFault_Handler>:
void BusFault_Handler(void)
{
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8002642:	e7fe      	b.n	8002642 <BusFault_Handler>

08002644 <UsageFault_Handler>:
void UsageFault_Handler(void)
{
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8002644:	e7fe      	b.n	8002644 <UsageFault_Handler>

08002646 <DebugMon_Handler>:
}

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
 8002646:	4770      	bx	lr

08002648 <TIM6_DAC_IRQHandler>:
void TIM6_DAC_IRQHandler(void)
{
  /* USER CODE BEGIN TIM6_DAC_IRQn 0 */

  /* USER CODE END TIM6_DAC_IRQn 0 */
  HAL_TIM_IRQHandler(&htim6);
 8002648:	4801      	ldr	r0, [pc, #4]	@ (8002650 <TIM6_DAC_IRQHandler+0x8>)
 800264a:	f004 b8af 	b.w	80067ac <HAL_TIM_IRQHandler>
 800264e:	bf00      	nop
 8002650:	200031dc 	.word	0x200031dc

08002654 <OTG_HS_IRQHandler>:
void OTG_HS_IRQHandler(void)
{
  /* USER CODE BEGIN OTG_HS_IRQn 0 */

  /* USER CODE END OTG_HS_IRQn 0 */
  HAL_PCD_IRQHandler(&hpcd_USB_OTG_HS);
 8002654:	4801      	ldr	r0, [pc, #4]	@ (800265c <OTG_HS_IRQHandler+0x8>)
 8002656:	f002 bd13 	b.w	8005080 <HAL_PCD_IRQHandler>
 800265a:	bf00      	nop
 800265c:	20002afc 	.word	0x20002afc

08002660 <LTDC_IRQHandler>:
void LTDC_IRQHandler(void)
{
  /* USER CODE BEGIN LTDC_IRQn 0 */

  /* USER CODE END LTDC_IRQn 0 */
  HAL_LTDC_IRQHandler(&hltdc);
 8002660:	4801      	ldr	r0, [pc, #4]	@ (8002668 <LTDC_IRQHandler+0x8>)
 8002662:	f002 baa7 	b.w	8004bb4 <HAL_LTDC_IRQHandler>
 8002666:	bf00      	nop
 8002668:	20003094 	.word	0x20003094

0800266c <DMA2D_IRQHandler>:
void DMA2D_IRQHandler(void)
{
  /* USER CODE BEGIN DMA2D_IRQn 0 */

  /* USER CODE END DMA2D_IRQn 0 */
  HAL_DMA2D_IRQHandler(&hdma2d);
 800266c:	4801      	ldr	r0, [pc, #4]	@ (8002674 <DMA2D_IRQHandler+0x8>)
 800266e:	f001 bb6b 	b.w	8003d48 <HAL_DMA2D_IRQHandler>
 8002672:	bf00      	nop
 8002674:	20003190 	.word	0x20003190

08002678 <_getpid>:
}

int _getpid(void)
{
	return 1;
}
 8002678:	2001      	movs	r0, #1
 800267a:	4770      	bx	lr

0800267c <_kill>:

int _kill(int pid, int sig)
{
 800267c:	b508      	push	{r3, lr}
	errno = EINVAL;
 800267e:	f020 fd2b 	bl	80230d8 <__errno>
 8002682:	2316      	movs	r3, #22
 8002684:	6003      	str	r3, [r0, #0]
	return -1;
}
 8002686:	f04f 30ff 	mov.w	r0, #4294967295
 800268a:	bd08      	pop	{r3, pc}

0800268c <_exit>:

void _exit (int status)
{
 800268c:	b508      	push	{r3, lr}
	errno = EINVAL;
 800268e:	f020 fd23 	bl	80230d8 <__errno>
 8002692:	2316      	movs	r3, #22
 8002694:	6003      	str	r3, [r0, #0]
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
 8002696:	e7fe      	b.n	8002696 <_exit+0xa>

08002698 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8002698:	b570      	push	{r4, r5, r6, lr}
 800269a:	460d      	mov	r5, r1
 800269c:	4614      	mov	r4, r2
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800269e:	460e      	mov	r6, r1
 80026a0:	1b73      	subs	r3, r6, r5
 80026a2:	429c      	cmp	r4, r3
 80026a4:	dc01      	bgt.n	80026aa <_read+0x12>
	{
		*ptr++ = __io_getchar();
	}

return len;
}
 80026a6:	4620      	mov	r0, r4
 80026a8:	bd70      	pop	{r4, r5, r6, pc}
		*ptr++ = __io_getchar();
 80026aa:	f3af 8000 	nop.w
 80026ae:	f806 0b01 	strb.w	r0, [r6], #1
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80026b2:	e7f5      	b.n	80026a0 <_read+0x8>

080026b4 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 80026b4:	b570      	push	{r4, r5, r6, lr}
 80026b6:	460d      	mov	r5, r1
 80026b8:	4614      	mov	r4, r2
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80026ba:	460e      	mov	r6, r1
 80026bc:	1b73      	subs	r3, r6, r5
 80026be:	429c      	cmp	r4, r3
 80026c0:	dc01      	bgt.n	80026c6 <_write+0x12>
	{
		__io_putchar(*ptr++);
	}
	return len;
}
 80026c2:	4620      	mov	r0, r4
 80026c4:	bd70      	pop	{r4, r5, r6, pc}
		__io_putchar(*ptr++);
 80026c6:	f816 0b01 	ldrb.w	r0, [r6], #1
 80026ca:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80026ce:	e7f5      	b.n	80026bc <_write+0x8>

080026d0 <_close>:

int _close(int file)
{
	return -1;
}
 80026d0:	f04f 30ff 	mov.w	r0, #4294967295
 80026d4:	4770      	bx	lr

080026d6 <_fstat>:


int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
 80026d6:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
 80026da:	604b      	str	r3, [r1, #4]
	return 0;
}
 80026dc:	2000      	movs	r0, #0
 80026de:	4770      	bx	lr

080026e0 <_isatty>:

int _isatty(int file)
{
	return 1;
}
 80026e0:	2001      	movs	r0, #1
 80026e2:	4770      	bx	lr

080026e4 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
	return 0;
}
 80026e4:	2000      	movs	r0, #0
 80026e6:	4770      	bx	lr

080026e8 <_sbrk>:
{
	extern char end asm("end");
	static char *heap_end;
	char *prev_heap_end;

	if (heap_end == 0)
 80026e8:	4a0a      	ldr	r2, [pc, #40]	@ (8002714 <_sbrk+0x2c>)
 80026ea:	6811      	ldr	r1, [r2, #0]
{
 80026ec:	b508      	push	{r3, lr}
 80026ee:	4603      	mov	r3, r0
	if (heap_end == 0)
 80026f0:	b909      	cbnz	r1, 80026f6 <_sbrk+0xe>
		heap_end = &end;
 80026f2:	4909      	ldr	r1, [pc, #36]	@ (8002718 <_sbrk+0x30>)
 80026f4:	6011      	str	r1, [r2, #0]

	prev_heap_end = heap_end;
 80026f6:	6810      	ldr	r0, [r2, #0]
	if (heap_end + incr > stack_ptr)
 80026f8:	4669      	mov	r1, sp
 80026fa:	4403      	add	r3, r0
 80026fc:	428b      	cmp	r3, r1
 80026fe:	d906      	bls.n	800270e <_sbrk+0x26>
	{
		errno = ENOMEM;
 8002700:	f020 fcea 	bl	80230d8 <__errno>
 8002704:	230c      	movs	r3, #12
 8002706:	6003      	str	r3, [r0, #0]
		return (caddr_t) -1;
 8002708:	f04f 30ff 	mov.w	r0, #4294967295
	}

	heap_end += incr;

	return (caddr_t) prev_heap_end;
}
 800270c:	bd08      	pop	{r3, pc}
	heap_end += incr;
 800270e:	6013      	str	r3, [r2, #0]
	return (caddr_t) prev_heap_end;
 8002710:	e7fc      	b.n	800270c <_sbrk+0x24>
 8002712:	bf00      	nop
 8002714:	20003224 	.word	0x20003224
 8002718:	20014d88 	.word	0x20014d88

0800271c <_ZN23ApplicationFontProviderD1Ev>:
    static const touchgfx::FontId SMALL = 2;   // verdana_10_4bpp
    static const touchgfx::FontId TYPE0 = 0;   // verdana_20_4bpp
    static const uint16_t NUMBER_OF_FONTS = 3;
};

class ApplicationFontProvider : public touchgfx::FontProvider
 800271c:	4770      	bx	lr

0800271e <_ZN23ApplicationFontProviderD0Ev>:
 800271e:	b510      	push	{r4, lr}
 8002720:	2104      	movs	r1, #4
 8002722:	4604      	mov	r4, r0
 8002724:	f01f faf1 	bl	8021d0a <_ZdlPvj>
 8002728:	4620      	mov	r0, r4
 800272a:	bd10      	pop	{r4, pc}

0800272c <_ZN23ApplicationFontProvider7getFontEt>:
#include <fonts/ApplicationFontProvider.hpp>
#include <fonts/GeneratedFont.hpp>
#include <texts/TypedTextDatabase.hpp>

touchgfx::Font* ApplicationFontProvider::getFont(touchgfx::FontId typography)
{
 800272c:	b508      	push	{r3, lr}
    switch (typography)
 800272e:	2903      	cmp	r1, #3
 8002730:	d80f      	bhi.n	8002752 <_ZN23ApplicationFontProvider7getFontEt+0x26>
 8002732:	e8df f001 	tbb	[pc, r1]
 8002736:	020a      	.short	0x020a
 8002738:	0a06      	.short	0x0a06
    case Typography::DEFAULT:
        // verdana_20_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
    case Typography::LARGE:
        // verdana_40_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[1]);
 800273a:	f000 fd45 	bl	80031c8 <_ZN17TypedTextDatabase8getFontsEv>
 800273e:	6840      	ldr	r0, [r0, #4]
        // verdana_20_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
    default:
        return 0;
    }
}
 8002740:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
 8002742:	f000 fd41 	bl	80031c8 <_ZN17TypedTextDatabase8getFontsEv>
 8002746:	6880      	ldr	r0, [r0, #8]
 8002748:	e7fa      	b.n	8002740 <_ZN23ApplicationFontProvider7getFontEt+0x14>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
 800274a:	f000 fd3d 	bl	80031c8 <_ZN17TypedTextDatabase8getFontsEv>
 800274e:	6800      	ldr	r0, [r0, #0]
 8002750:	e7f6      	b.n	8002740 <_ZN23ApplicationFontProvider7getFontEt+0x14>
    switch (typography)
 8002752:	2000      	movs	r0, #0
 8002754:	e7f4      	b.n	8002740 <_ZN23ApplicationFontProvider7getFontEt+0x14>
	...

08002758 <_ZN14BitmapDatabase11getInstanceEv>:
namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}
 8002758:	4800      	ldr	r0, [pc, #0]	@ (800275c <_ZN14BitmapDatabase11getInstanceEv+0x4>)
 800275a:	4770      	bx	lr
 800275c:	08024a14 	.word	0x08024a14

08002760 <_ZN14BitmapDatabase15getInstanceSizeEv>:

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
 8002760:	2001      	movs	r0, #1
 8002762:	4770      	bx	lr

08002764 <_ZNK8touchgfx4Font8getGlyphEt>:
     *
     * @return A pointer to the glyph node or null if the glyph was not found.
     *
     * @see TextProvider::getNextLigature
     */
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
 8002764:	b513      	push	{r0, r1, r4, lr}
 8002766:	2400      	movs	r4, #0
    {
        if (unicode == 0)
 8002768:	b151      	cbz	r1, 8002780 <_ZNK8touchgfx4Font8getGlyphEt+0x1c>
        {
            return 0;
        }
        const uint8_t* dummyPixelDataPointer = 0;
        uint8_t bitsPerPixelDummy = 0;
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 800276a:	6803      	ldr	r3, [r0, #0]
        const uint8_t* dummyPixelDataPointer = 0;
 800276c:	9401      	str	r4, [sp, #4]
        uint8_t bitsPerPixelDummy = 0;
 800276e:	f88d 4003 	strb.w	r4, [sp, #3]
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 8002772:	aa01      	add	r2, sp, #4
 8002774:	689c      	ldr	r4, [r3, #8]
 8002776:	f10d 0303 	add.w	r3, sp, #3
 800277a:	47a0      	blx	r4
        return glyph;
    }
 800277c:	b002      	add	sp, #8
 800277e:	bd10      	pop	{r4, pc}
            return 0;
 8002780:	4608      	mov	r0, r1
 8002782:	e7fb      	b.n	800277c <_ZNK8touchgfx4Font8getGlyphEt+0x18>

08002784 <_ZNK8touchgfx4Font15getFallbackCharEv>:
     * @return The default character for the typography in case no glyph is available.
     */
    virtual Unicode::UnicodeChar getFallbackChar() const
    {
        return fallbackCharacter;
    }
 8002784:	89c0      	ldrh	r0, [r0, #14]
 8002786:	4770      	bx	lr

08002788 <_ZNK8touchgfx4Font15getEllipsisCharEv>:
     * @see TextArea::setWideTextAction
     */
    virtual Unicode::UnicodeChar getEllipsisChar() const
    {
        return ellipsisCharacter;
    }
 8002788:	8a00      	ldrh	r0, [r0, #16]
 800278a:	4770      	bx	lr

0800278c <_ZNK8touchgfx4Font11getBaselineEv>:
     *       getHeight for this.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getBaseline() const
    {
        return baselineHeight;
    }
 800278c:	88c0      	ldrh	r0, [r0, #6]
 800278e:	4770      	bx	lr

08002790 <_ZNK8touchgfx4Font9getHeightEv>:
     * @return The font height.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getHeight() const
    {
        return fontHeight;
    }
 8002790:	8880      	ldrh	r0, [r0, #4]
 8002792:	4770      	bx	lr

08002794 <_ZNK8touchgfx4Font15getBitsPerPixelEv>:
     *
     * @return The number of bits used per pixel in this font.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getBitsPerPixel() const
    {
        return bPerPixel;
 8002794:	7a80      	ldrb	r0, [r0, #10]
    }
 8002796:	f000 007f 	and.w	r0, r0, #127	@ 0x7f
 800279a:	4770      	bx	lr

0800279c <_ZNK8touchgfx4Font15getByteAlignRowEv>:
     *
     * @return True if each glyph row is stored byte aligned, false otherwise.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getByteAlignRow() const
    {
        return bAlignRow;
 800279c:	7a80      	ldrb	r0, [r0, #10]
    }
 800279e:	09c0      	lsrs	r0, r0, #7
 80027a0:	4770      	bx	lr

080027a2 <_ZNK8touchgfx4Font17isVectorBasedFontEv>:
     * @return True if this Font is vector based.
     */
    virtual bool isVectorBasedFont() const
    {
        return false;
    }
 80027a2:	2000      	movs	r0, #0
 80027a4:	4770      	bx	lr
	...

080027a8 <_ZNK8touchgfx4Font14getScaleFactorEv>:
     * @return The scale factor
     */
    virtual float getScaleFactor() const
    {
        return 0;
    }
 80027a8:	ed9f 0a01 	vldr	s0, [pc, #4]	@ 80027b0 <_ZNK8touchgfx4Font14getScaleFactorEv+0x8>
 80027ac:	4770      	bx	lr
 80027ae:	bf00      	nop
 80027b0:	00000000 	.word	0x00000000

080027b4 <_ZN8touchgfx11Application19changeToStartScreenEv>:
     *       this is explicitly done in your
     *       FrontendApplication::changeToStartScreen().
     */
    virtual void changeToStartScreen()
    {
    }
 80027b4:	4770      	bx	lr

080027b6 <_ZN8touchgfx11Application15appSwitchScreenEh>:
     * @param screenId An id that maps to the desired screen.
     */
    virtual void appSwitchScreen(uint8_t screenId)
    {
        (void)screenId; // Unused variable
    }
 80027b6:	4770      	bx	lr

080027b8 <_ZN8touchgfx11Application13requestRedrawERNS_4RectE>:
     *
     * @param [in,out] rect The Rect that must be redrawn.
     */
    virtual void requestRedraw(Rect& rect)
    {
        redraw = rect;
 80027b8:	f500 7398 	add.w	r3, r0, #304	@ 0x130
 80027bc:	6808      	ldr	r0, [r1, #0]
 80027be:	6849      	ldr	r1, [r1, #4]
 80027c0:	c303      	stmia	r3!, {r0, r1}
    }
 80027c2:	4770      	bx	lr

080027c4 <_ZN8touchgfx10Transition8tearDownEv>:
     * Tears down the Animation. Called before the destructor is called, when the
     * application changes the transition.
     */
    virtual void tearDown()
    {
    }
 80027c4:	4770      	bx	lr

080027c6 <_ZN8touchgfx10Transition4initEv>:
     * Initializes the transition. Called after the constructor is called, when the
     * application changes the transition.
     */
    virtual void init()
    {
    }
 80027c6:	4770      	bx	lr

080027c8 <_ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE>:
     *
     * @param [in] cont The Container the transition should have access to.
     */
    virtual void setScreenContainer(Container& cont)
    {
        screenContainer = &cont;
 80027c8:	6041      	str	r1, [r0, #4]
    }
 80027ca:	4770      	bx	lr

080027cc <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type>
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 80027cc:	4770      	bx	lr

080027ce <_ZN23FrontendApplicationBaseD1Ev>:

class FrontendApplicationBase : public touchgfx::MVPApplication
{
public:
    FrontendApplicationBase(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplicationBase() { }
 80027ce:	4770      	bx	lr

080027d0 <_ZN23FrontendApplicationBase19changeToStartScreenEv>:
 80027d0:	4b06      	ldr	r3, [pc, #24]	@ (80027ec <_ZN23FrontendApplicationBase19changeToStartScreenEv+0x1c>)
 80027d2:	f8c0 314c 	str.w	r3, [r0, #332]	@ 0x14c
 80027d6:	2300      	movs	r3, #0
 80027d8:	f8c0 3150 	str.w	r3, [r0, #336]	@ 0x150
// Screen1

void FrontendApplicationBase::gotoScreen1ScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoScreen1ScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 80027dc:	f500 73a2 	add.w	r3, r0, #324	@ 0x144
 80027e0:	f8c0 0148 	str.w	r0, [r0, #328]	@ 0x148
 80027e4:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140

    virtual void changeToStartScreen()
    {
        gotoScreen1ScreenNoTransition();
    }
 80027e8:	4770      	bx	lr
 80027ea:	bf00      	nop
 80027ec:	08002891 	.word	0x08002891

080027f0 <_ZN8touchgfx12NoTransition15handleTickEventEv>:
{
public:
    /** Indicates that the transition is done after the first tick. */
    virtual void handleTickEvent()
    {
        done = true;
 80027f0:	2301      	movs	r3, #1
 80027f2:	7203      	strb	r3, [r0, #8]
    }
 80027f4:	4770      	bx	lr

080027f6 <_ZN8touchgfx12NoTransitionD1Ev>:
class NoTransition : public Transition
 80027f6:	4770      	bx	lr

080027f8 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv>:

    /**
     * Calls the member function. Do not call execute unless isValid() returns true (ie. a
     * pointer to the object and the function has been set).
     */
    virtual void execute()
 80027f8:	b410      	push	{r4}
    {
        (pobject->*pmemfun)();
 80027fa:	68c2      	ldr	r2, [r0, #12]
 80027fc:	6841      	ldr	r1, [r0, #4]
 80027fe:	1054      	asrs	r4, r2, #1
    virtual void execute()
 8002800:	4603      	mov	r3, r0
        (pobject->*pmemfun)();
 8002802:	eb01 0062 	add.w	r0, r1, r2, asr #1
 8002806:	07d2      	lsls	r2, r2, #31
 8002808:	bf48      	it	mi
 800280a:	590a      	ldrmi	r2, [r1, r4]
 800280c:	689b      	ldr	r3, [r3, #8]
    }
 800280e:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)();
 8002812:	bf48      	it	mi
 8002814:	58d3      	ldrmi	r3, [r2, r3]
 8002816:	4718      	bx	r3

08002818 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv>:
    /**
     * Function to check whether the Callback has been initialized with values.
     *
     * @return true If the callback is valid (i.e. safe to call execute).
     */
    virtual bool isValid() const
 8002818:	4603      	mov	r3, r0
    {
        return (pobject != 0) && (pmemfun != 0);
 800281a:	6840      	ldr	r0, [r0, #4]
 800281c:	b130      	cbz	r0, 800282c <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x14>
 800281e:	689a      	ldr	r2, [r3, #8]
 8002820:	b91a      	cbnz	r2, 800282a <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x12>
 8002822:	68d8      	ldr	r0, [r3, #12]
 8002824:	f000 0001 	and.w	r0, r0, #1
 8002828:	4770      	bx	lr
 800282a:	2001      	movs	r0, #1
    }
 800282c:	4770      	bx	lr

0800282e <_ZN8touchgfx12NoTransitionD0Ev>:
 800282e:	b510      	push	{r4, lr}
 8002830:	210c      	movs	r1, #12
 8002832:	4604      	mov	r4, r0
 8002834:	f01f fa69 	bl	8021d0a <_ZdlPvj>
 8002838:	4620      	mov	r0, r4
 800283a:	bd10      	pop	{r4, pc}

0800283c <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 800283c:	b510      	push	{r4, lr}
 800283e:	2110      	movs	r1, #16
 8002840:	4604      	mov	r4, r0
 8002842:	f01f fa62 	bl	8021d0a <_ZdlPvj>
 8002846:	4620      	mov	r0, r4
 8002848:	bd10      	pop	{r4, pc}

0800284a <_ZN23FrontendApplicationBaseD0Ev>:
    virtual ~FrontendApplicationBase() { }
 800284a:	b510      	push	{r4, lr}
 800284c:	f44f 71ae 	mov.w	r1, #348	@ 0x15c
 8002850:	4604      	mov	r4, r0
 8002852:	f01f fa5a 	bl	8021d0a <_ZdlPvj>
 8002856:	4620      	mov	r0, r4
 8002858:	bd10      	pop	{r4, pc}

0800285a <_ZN8touchgfx10Transition10invalidateEv>:
    virtual void invalidate()
 800285a:	b510      	push	{r4, lr}
        Application::getInstance()->invalidate();
 800285c:	f00c ffc0 	bl	800f7e0 <_ZN8touchgfx11Application11getInstanceEv>
 8002860:	6803      	ldr	r3, [r0, #0]
    }
 8002862:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        Application::getInstance()->invalidate();
 8002866:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8002868:	4718      	bx	r3

0800286a <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv>:
    /**
     * Handles the pending screen transition.
     *
     * Delegates the work to evaluatePendingScreenTransition()
     */
    virtual void handlePendingScreenTransition()
 800286a:	b510      	push	{r4, lr}
 800286c:	4604      	mov	r4, r0
     * Evaluates the pending Callback instances. If a callback is valid, it is executed and
     * a Screen transition is executed.
     */
    void evaluatePendingScreenTransition()
    {
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
 800286e:	f8d0 0140 	ldr.w	r0, [r0, #320]	@ 0x140
 8002872:	b158      	cbz	r0, 800288c <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
 8002874:	6803      	ldr	r3, [r0, #0]
 8002876:	68db      	ldr	r3, [r3, #12]
 8002878:	4798      	blx	r3
 800287a:	b138      	cbz	r0, 800288c <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
        {
            pendingScreenTransitionCallback->execute();
 800287c:	f8d4 0140 	ldr.w	r0, [r4, #320]	@ 0x140
 8002880:	6803      	ldr	r3, [r0, #0]
 8002882:	689b      	ldr	r3, [r3, #8]
 8002884:	4798      	blx	r3
            pendingScreenTransitionCallback = 0;
 8002886:	2300      	movs	r3, #0
 8002888:	f8c4 3140 	str.w	r3, [r4, #320]	@ 0x140
    }
 800288c:	bd10      	pop	{r4, pc}
	...

08002890 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv>:
}

void FrontendApplicationBase::gotoScreen1ScreenNoTransitionImpl()
{
 8002890:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<Screen1View, Screen1Presenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8002894:	e9d0 6a55 	ldrd	r6, sl, [r0, #340]	@ 0x154
{
 8002898:	4607      	mov	r7, r0
 *         value as the old presenter due to memory reuse.
 */
template <class ScreenType, class PresenterType, class TransType, class ModelType>
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
{
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800289a:	68b0      	ldr	r0, [r6, #8]
 800289c:	6803      	ldr	r3, [r0, #0]
 800289e:	6a1b      	ldr	r3, [r3, #32]
 80028a0:	4798      	blx	r3
 80028a2:	f241 0303 	movw	r3, #4099	@ 0x1003
 80028a6:	4298      	cmp	r0, r3
 80028a8:	d805      	bhi.n	80028b6 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x26>
 80028aa:	4b44      	ldr	r3, [pc, #272]	@ (80029bc <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x12c>)
 80028ac:	4a44      	ldr	r2, [pc, #272]	@ (80029c0 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x130>)
 80028ae:	21a3      	movs	r1, #163	@ 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80028b0:	4844      	ldr	r0, [pc, #272]	@ (80029c4 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x134>)
 80028b2:	f020 f967 	bl	8022b84 <__assert_func>
 80028b6:	6870      	ldr	r0, [r6, #4]
 80028b8:	6803      	ldr	r3, [r0, #0]
 80028ba:	6a1b      	ldr	r3, [r3, #32]
 80028bc:	4798      	blx	r3
 80028be:	280f      	cmp	r0, #15
 80028c0:	d803      	bhi.n	80028ca <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x3a>
 80028c2:	4b41      	ldr	r3, [pc, #260]	@ (80029c8 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x138>)
 80028c4:	4a3e      	ldr	r2, [pc, #248]	@ (80029c0 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x130>)
 80028c6:	21a4      	movs	r1, #164	@ 0xa4
 80028c8:	e7f2      	b.n	80028b0 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80028ca:	68f0      	ldr	r0, [r6, #12]
 80028cc:	6803      	ldr	r3, [r0, #0]
 80028ce:	6a1b      	ldr	r3, [r3, #32]
 80028d0:	4798      	blx	r3
 80028d2:	280b      	cmp	r0, #11
 80028d4:	d803      	bhi.n	80028de <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x4e>
 80028d6:	4b3d      	ldr	r3, [pc, #244]	@ (80029cc <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x13c>)
 80028d8:	4a39      	ldr	r2, [pc, #228]	@ (80029c0 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x130>)
 80028da:	21a5      	movs	r1, #165	@ 0xa5
 80028dc:	e7e8      	b.n	80028b0 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 80028de:	f00c ff7f 	bl	800f7e0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 80028e2:	f8df 90f0 	ldr.w	r9, [pc, #240]	@ 80029d4 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x144>

    /** Clears all currently registered timer widgets. */

    void clearAllTimerWidgets()
    {
        timerWidgets.clear();
 80028e6:	3004      	adds	r0, #4
 80028e8:	f00c ff9f 	bl	800f82a <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 80028ec:	f8d9 0000 	ldr.w	r0, [r9]
 80028f0:	b110      	cbz	r0, 80028f8 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x68>
        (*currentTrans)->tearDown();
 80028f2:	6803      	ldr	r3, [r0, #0]
 80028f4:	68db      	ldr	r3, [r3, #12]
 80028f6:	4798      	blx	r3
    if (*currentTrans)
 80028f8:	f8d9 0000 	ldr.w	r0, [r9]
 80028fc:	b110      	cbz	r0, 8002904 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x74>
        (*currentTrans)->~Transition();
 80028fe:	6803      	ldr	r3, [r0, #0]
 8002900:	681b      	ldr	r3, [r3, #0]
 8002902:	4798      	blx	r3
    if (*currentScreen)
 8002904:	f8df 80d0 	ldr.w	r8, [pc, #208]	@ 80029d8 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x148>
 8002908:	f8d8 0000 	ldr.w	r0, [r8]
 800290c:	b110      	cbz	r0, 8002914 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 800290e:	6803      	ldr	r3, [r0, #0]
 8002910:	695b      	ldr	r3, [r3, #20]
 8002912:	4798      	blx	r3
    if (*currentPresenter)
 8002914:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 8002918:	b110      	cbz	r0, 8002920 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x90>
        (*currentPresenter)->deactivate();
 800291a:	6803      	ldr	r3, [r0, #0]
 800291c:	685b      	ldr	r3, [r3, #4]
 800291e:	4798      	blx	r3
    if (*currentScreen)
 8002920:	f8d8 0000 	ldr.w	r0, [r8]
 8002924:	b110      	cbz	r0, 800292c <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x9c>
        (*currentScreen)->~Screen();
 8002926:	6803      	ldr	r3, [r0, #0]
 8002928:	681b      	ldr	r3, [r3, #0]
 800292a:	4798      	blx	r3
    if (*currentPresenter)
 800292c:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 8002930:	b110      	cbz	r0, 8002938 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8002932:	6803      	ldr	r3, [r0, #0]
 8002934:	689b      	ldr	r3, [r3, #8]
 8002936:	4798      	blx	r3

    prepareTransition(currentScreen, currentPresenter, currentTrans);

    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8002938:	68f0      	ldr	r0, [r6, #12]
     * @return A typed reference to the object at the specified index.
     */
    template <typename T>
    T& at(const uint16_t index)
    {
        return *static_cast<T*>(element(index));
 800293a:	6803      	ldr	r3, [r0, #0]
 800293c:	2100      	movs	r1, #0
 800293e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002940:	4798      	blx	r3
        : screenContainer(0), done(false)
 8002942:	f04f 0b00 	mov.w	fp, #0
 8002946:	4b22      	ldr	r3, [pc, #136]	@ (80029d0 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x140>)
 8002948:	f8c0 b004 	str.w	fp, [r0, #4]
 800294c:	4604      	mov	r4, r0
 800294e:	f880 b008 	strb.w	fp, [r0, #8]
 8002952:	6003      	str	r3, [r0, #0]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8002954:	68b0      	ldr	r0, [r6, #8]
 8002956:	6803      	ldr	r3, [r0, #0]
 8002958:	4659      	mov	r1, fp
 800295a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800295c:	4798      	blx	r3
 800295e:	4605      	mov	r5, r0
 8002960:	f000 fcb2 	bl	80032c8 <_ZN11Screen1ViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8002964:	6870      	ldr	r0, [r6, #4]
 8002966:	6803      	ldr	r3, [r0, #0]
 8002968:	4659      	mov	r1, fp
 800296a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800296c:	4798      	blx	r3
 800296e:	4629      	mov	r1, r5
 8002970:	4606      	mov	r6, r0
 8002972:	f000 fc73 	bl	800325c <_ZN16Screen1PresenterC1ER11Screen1View>
    *currentTrans = newTransition;
    *currentPresenter = newPresenter;
    *currentScreen = newScreen;
    model->bind(newPresenter);
 8002976:	1d33      	adds	r3, r6, #4
    *currentPresenter = newPresenter;
 8002978:	f8c7 613c 	str.w	r6, [r7, #316]	@ 0x13c
    *currentTrans = newTransition;
 800297c:	f8c9 4000 	str.w	r4, [r9]
    *currentScreen = newScreen;
 8002980:	f8c8 5000 	str.w	r5, [r8]
public:
    Model();

    void bind(ModelListener* listener)
    {
        modelListener = listener;
 8002984:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8002988:	682b      	ldr	r3, [r5, #0]
    
    virtual ~ModelListener() {}

    void bind(Model* m)
    {
        model = m;
 800298a:	f8c6 a008 	str.w	sl, [r6, #8]
 800298e:	4628      	mov	r0, r5
 8002990:	68db      	ldr	r3, [r3, #12]
     *
     * @param [in] newPresenter The specific Presenter to be associated with the View.
     */
    void bind(T& newPresenter)
    {
        presenter = &newPresenter;
 8002992:	63ee      	str	r6, [r5, #60]	@ 0x3c
 8002994:	4798      	blx	r3
    newPresenter->activate();
 8002996:	6833      	ldr	r3, [r6, #0]
 8002998:	4630      	mov	r0, r6
 800299a:	681b      	ldr	r3, [r3, #0]
 800299c:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 800299e:	4621      	mov	r1, r4
 80029a0:	4628      	mov	r0, r5
 80029a2:	f00f f959 	bl	8011c58 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80029a6:	6823      	ldr	r3, [r4, #0]
 80029a8:	4620      	mov	r0, r4
 80029aa:	691b      	ldr	r3, [r3, #16]
 80029ac:	4798      	blx	r3
    newTransition->invalidate();
 80029ae:	6823      	ldr	r3, [r4, #0]
 80029b0:	695b      	ldr	r3, [r3, #20]
 80029b2:	4620      	mov	r0, r4
}
 80029b4:	b001      	add	sp, #4
 80029b6:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80029ba:	4718      	bx	r3
 80029bc:	08024160 	.word	0x08024160
 80029c0:	080241ee 	.word	0x080241ee
 80029c4:	080242c0 	.word	0x080242c0
 80029c8:	08024307 	.word	0x08024307
 80029cc:	080243aa 	.word	0x080243aa
 80029d0:	08024a9c 	.word	0x08024a9c
 80029d4:	2001408c 	.word	0x2001408c
 80029d8:	20014088 	.word	0x20014088

080029dc <_ZN8touchgfx3HAL3lcdEv>:
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 80029dc:	4b04      	ldr	r3, [pc, #16]	@ (80029f0 <_ZN8touchgfx3HAL3lcdEv+0x14>)
 80029de:	681b      	ldr	r3, [r3, #0]
 80029e0:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
 80029e4:	b10a      	cbz	r2, 80029ea <_ZN8touchgfx3HAL3lcdEv+0xe>
 80029e6:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 80029e8:	b900      	cbnz	r0, 80029ec <_ZN8touchgfx3HAL3lcdEv+0x10>
        return instance->lcdRef;
 80029ea:	6898      	ldr	r0, [r3, #8]
    }
 80029ec:	4770      	bx	lr
 80029ee:	bf00      	nop
 80029f0:	20014044 	.word	0x20014044

080029f4 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>:
FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
 80029f4:	b570      	push	{r4, r5, r6, lr}
 80029f6:	4604      	mov	r4, r0
 80029f8:	460d      	mov	r5, r1
 80029fa:	4616      	mov	r6, r2
          pendingScreenTransitionCallback(0)
 80029fc:	f00c ffb2 	bl	800f964 <_ZN8touchgfx11ApplicationC1Ev>
        instance = this;
 8002a00:	4a10      	ldr	r2, [pc, #64]	@ (8002a44 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x50>)
 8002a02:	6014      	str	r4, [r2, #0]
      model(m)
 8002a04:	4a10      	ldr	r2, [pc, #64]	@ (8002a48 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x54>)
 8002a06:	6022      	str	r2, [r4, #0]
        : pobject(0), pmemfun(0)
 8002a08:	4a10      	ldr	r2, [pc, #64]	@ (8002a4c <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x58>)
        : currentPresenter(0),
 8002a0a:	2300      	movs	r3, #0
 8002a0c:	e9c4 2351 	strd	r2, r3, [r4, #324]	@ 0x144
 8002a10:	e9c4 3353 	strd	r3, r3, [r4, #332]	@ 0x14c
          pendingScreenTransitionCallback(0)
 8002a14:	e9c4 334f 	strd	r3, r3, [r4, #316]	@ 0x13c
        return instance;
 8002a18:	4b0d      	ldr	r3, [pc, #52]	@ (8002a50 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x5c>)
 8002a1a:	6818      	ldr	r0, [r3, #0]
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_PORTRAIT);
 8002a1c:	6803      	ldr	r3, [r0, #0]
 8002a1e:	2101      	movs	r1, #1
 8002a20:	689b      	ldr	r3, [r3, #8]
      model(m)
 8002a22:	e9c4 6555 	strd	r6, r5, [r4, #340]	@ 0x154
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_PORTRAIT);
 8002a26:	4798      	blx	r3
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
 8002a28:	f7ff ffd8 	bl	80029dc <_ZN8touchgfx3HAL3lcdEv>
 8002a2c:	f017 f889 	bl	8019b42 <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableDecompressorL8_All();
 8002a30:	f7ff ffd4 	bl	80029dc <_ZN8touchgfx3HAL3lcdEv>
 8002a34:	f017 f900 	bl	8019c38 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableDecompressorRGB();
 8002a38:	f7ff ffd0 	bl	80029dc <_ZN8touchgfx3HAL3lcdEv>
 8002a3c:	f017 f908 	bl	8019c50 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv>
}
 8002a40:	4620      	mov	r0, r4
 8002a42:	bd70      	pop	{r4, r5, r6, pc}
 8002a44:	20014098 	.word	0x20014098
 8002a48:	08024a48 	.word	0x08024a48
 8002a4c:	08024a30 	.word	0x08024a30
 8002a50:	20014044 	.word	0x20014044

08002a54 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8002a54:	4b06      	ldr	r3, [pc, #24]	@ (8002a70 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv+0x1c>)
 8002a56:	f8c0 314c 	str.w	r3, [r0, #332]	@ 0x14c
 8002a5a:	2300      	movs	r3, #0
 8002a5c:	f8c0 3150 	str.w	r3, [r0, #336]	@ 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8002a60:	f500 73a2 	add.w	r3, r0, #324	@ 0x144
 8002a64:	f8c0 0148 	str.w	r0, [r0, #328]	@ 0x148
 8002a68:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140
}
 8002a6c:	4770      	bx	lr
 8002a6e:	bf00      	nop
 8002a70:	08002891 	.word	0x08002891

08002a74 <_ZNK8touchgfx13GeneratedFont12getGSUBTableEv>:
    virtual int8_t getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const;

    virtual const uint16_t* getGSUBTable() const
    {
        return gsubTable;
    }
 8002a74:	6a40      	ldr	r0, [r0, #36]	@ 0x24
 8002a76:	4770      	bx	lr

08002a78 <_ZNK8touchgfx13GeneratedFont23getContextualFormsTableEv>:

    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return arabicTable;
    }
 8002a78:	6a80      	ldr	r0, [r0, #40]	@ 0x28
 8002a7a:	4770      	bx	lr

08002a7c <_ZN8touchgfx13GeneratedFontD1Ev>:
class GeneratedFont : public ConstFont
 8002a7c:	4770      	bx	lr

08002a7e <_ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE>:
    volatile const uint16_t* dataOffset = (const uint16_t*)((const uint8_t*)glyph + offsetof(GlyphNode, dataOffset));
    uint32_t offset = dataOffset[0];
    offset |= dataOffset[1] << 16;

    const uint8_t* const* table = (const uint8_t* const*)glyphData;
    const uint8_t* pixels = table[glyph->unicode / 2048];
 8002a7e:	888a      	ldrh	r2, [r1, #4]
    uint32_t offset = dataOffset[0];
 8002a80:	880b      	ldrh	r3, [r1, #0]
{
 8002a82:	b510      	push	{r4, lr}
    const uint8_t* pixels = table[glyph->unicode / 2048];
 8002a84:	0ad2      	lsrs	r2, r2, #11
    offset |= dataOffset[1] << 16;
 8002a86:	884c      	ldrh	r4, [r1, #2]
    const uint8_t* pixels = table[glyph->unicode / 2048];
 8002a88:	69c1      	ldr	r1, [r0, #28]
    uint32_t offset = dataOffset[0];
 8002a8a:	b29b      	uxth	r3, r3
    return pixels + offset;
 8002a8c:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
    offset |= dataOffset[1] << 16;
 8002a90:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
}
 8002a94:	4418      	add	r0, r3
 8002a96:	bd10      	pop	{r4, pc}

08002a98 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE>:

int8_t GeneratedFont::getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
{
 8002a98:	b510      	push	{r4, lr}
 8002a9a:	4604      	mov	r4, r0
    if (!glyph || glyph->kerningTableSize == 0)
 8002a9c:	b1ba      	cbz	r2, 8002ace <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
 8002a9e:	7b10      	ldrb	r0, [r2, #12]
 8002aa0:	b168      	cbz	r0, 8002abe <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>
        return ((flags & GLYPH_DATA_KERNINGTABLEPOS_BIT8_10) << 8) | _kerningTablePos;
 8002aa2:	7b53      	ldrb	r3, [r2, #13]
 8002aa4:	7ad2      	ldrb	r2, [r2, #11]
 8002aa6:	021b      	lsls	r3, r3, #8
 8002aa8:	f403 63e0 	and.w	r3, r3, #1792	@ 0x700
    {
        return 0;
    }

    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 8002aac:	431a      	orrs	r2, r3
 8002aae:	6a23      	ldr	r3, [r4, #32]
 8002ab0:	eb03 0382 	add.w	r3, r3, r2, lsl #2
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
    {
        if (prevChar == kerndata->unicodePrevChar)
 8002ab4:	881a      	ldrh	r2, [r3, #0]
 8002ab6:	428a      	cmp	r2, r1
 8002ab8:	d102      	bne.n	8002ac0 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x28>
        {
            return kerndata->distance;
 8002aba:	f993 0002 	ldrsb.w	r0, [r3, #2]
        {
            break;
        }
    }
    return 0;
}
 8002abe:	bd10      	pop	{r4, pc}
        if (prevChar < kerndata->unicodePrevChar)
 8002ac0:	d805      	bhi.n	8002ace <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 8002ac2:	3801      	subs	r0, #1
 8002ac4:	b280      	uxth	r0, r0
 8002ac6:	3304      	adds	r3, #4
 8002ac8:	2800      	cmp	r0, #0
 8002aca:	d1f3      	bne.n	8002ab4 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x1c>
 8002acc:	e7f7      	b.n	8002abe <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>
        return 0;
 8002ace:	2000      	movs	r0, #0
 8002ad0:	e7f5      	b.n	8002abe <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>

08002ad2 <_ZN8touchgfx13GeneratedFontD0Ev>:
 8002ad2:	b510      	push	{r4, lr}
 8002ad4:	212c      	movs	r1, #44	@ 0x2c
 8002ad6:	4604      	mov	r4, r0
 8002ad8:	f01f f917 	bl	8021d0a <_ZdlPvj>
 8002adc:	4620      	mov	r0, r4
 8002ade:	bd10      	pop	{r4, pc}

08002ae0 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>:
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
 8002ae0:	b530      	push	{r4, r5, lr}
 8002ae2:	b08b      	sub	sp, #44	@ 0x2c
 8002ae4:	4604      	mov	r4, r0
      arabicTable(formsTable)
 8002ae6:	f8bd 5060 	ldrh.w	r5, [sp, #96]	@ 0x60
 8002aea:	9508      	str	r5, [sp, #32]
 8002aec:	f8bd 505c 	ldrh.w	r5, [sp, #92]	@ 0x5c
 8002af0:	9507      	str	r5, [sp, #28]
 8002af2:	f89d 5050 	ldrb.w	r5, [sp, #80]	@ 0x50
 8002af6:	9506      	str	r5, [sp, #24]
 8002af8:	f89d 504c 	ldrb.w	r5, [sp, #76]	@ 0x4c
 8002afc:	9505      	str	r5, [sp, #20]
 8002afe:	f89d 5048 	ldrb.w	r5, [sp, #72]	@ 0x48
 8002b02:	9504      	str	r5, [sp, #16]
 8002b04:	f89d 5044 	ldrb.w	r5, [sp, #68]	@ 0x44
 8002b08:	9503      	str	r5, [sp, #12]
 8002b0a:	f89d 5040 	ldrb.w	r5, [sp, #64]	@ 0x40
 8002b0e:	9502      	str	r5, [sp, #8]
 8002b10:	f89d 503c 	ldrb.w	r5, [sp, #60]	@ 0x3c
 8002b14:	9501      	str	r5, [sp, #4]
 8002b16:	f8bd 5038 	ldrh.w	r5, [sp, #56]	@ 0x38
 8002b1a:	9500      	str	r5, [sp, #0]
 8002b1c:	f00e fc6a 	bl	80113f4 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>
 8002b20:	4b06      	ldr	r3, [pc, #24]	@ (8002b3c <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE+0x5c>)
 8002b22:	6023      	str	r3, [r4, #0]
      glyphData(glyphDataInternalFlash),
 8002b24:	9b15      	ldr	r3, [sp, #84]	@ 0x54
 8002b26:	61e3      	str	r3, [r4, #28]
      kerningData(kerningList),
 8002b28:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 8002b2a:	6223      	str	r3, [r4, #32]
      gsubTable(gsubData),
 8002b2c:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8002b2e:	6263      	str	r3, [r4, #36]	@ 0x24
      arabicTable(formsTable)
 8002b30:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
 8002b32:	62a3      	str	r3, [r4, #40]	@ 0x28
}
 8002b34:	4620      	mov	r0, r4
 8002b36:	b00b      	add	sp, #44	@ 0x2c
 8002b38:	bd30      	pop	{r4, r5, pc}
 8002b3a:	bf00      	nop
 8002b3c:	08024ac0 	.word	0x08024ac0

08002b40 <_ZN8touchgfx9Container13getFirstChildEv>:
     * @see getNextSibling
     */
    virtual Drawable* getFirstChild()
    {
        return firstChild;
    }
 8002b40:	6a80      	ldr	r0, [r0, #40]	@ 0x28
 8002b42:	4770      	bx	lr

08002b44 <_ZN8touchgfx6Screen11setupScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void setupScreen()
    {
    }
 8002b44:	4770      	bx	lr

08002b46 <_ZN8touchgfx6Screen15afterTransitionEv>:
     *
     * @see Application::handleTickEvent
     */
    virtual void afterTransition()
    {
    }
 8002b46:	4770      	bx	lr

08002b48 <_ZN8touchgfx6Screen14tearDownScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void tearDownScreen()
    {
    }
 8002b48:	4770      	bx	lr

08002b4a <_ZN8touchgfx6Screen15handleTickEventEv>:
     * Called by the Application on the current screen with a frequency of
     * Application::TICK_INTERVAL_MS.
     */
    virtual void handleTickEvent()
    {
    }
 8002b4a:	4770      	bx	lr

08002b4c <_ZN8touchgfx6Screen14handleKeyEventEh>:
     * @param  key The key to handle.
     */
    virtual void handleKeyEvent(uint8_t key)
    {
        (void)key; // Unused variable
    }
 8002b4c:	4770      	bx	lr

08002b4e <_ZN15Screen1ViewBase9leftClickEv>:
     * Virtual Action Handlers
     */
    virtual void leftClick()
    {
        // Override and implement this function in Screen1
    }
 8002b4e:	4770      	bx	lr

08002b50 <_ZN15Screen1ViewBase10rightClickEv>:
    virtual void rightClick()
    {
        // Override and implement this function in Screen1
    }
 8002b50:	4770      	bx	lr

08002b52 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEED1Ev>:
 * @tparam T Generic type parameter. Typically a AbstractButtonContainer subclass.
 *
 * @see AbstractButtonContainer, BoxWithBorder
 */
template <class T>
class BoxWithBorderButtonStyle : public T
 8002b52:	4770      	bx	lr

08002b54 <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8002b54:	4770      	bx	lr

08002b56 <_ZN15Screen1ViewBase11setupScreenEv>:
}

void Screen1ViewBase::setupScreen()
{

}
 8002b56:	4770      	bx	lr

08002b58 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv>:
     *
     * @see setPressed
     */
    bool getPressed() const
    {
        return pressed;
 8002b58:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c
    colortype borderDown;    ///< The border down

    /** @copydoc AbstractButtonContainer::handlePressedUpdated() */
    virtual void handlePressedUpdated()
    {
        borderBox.setColor(T::getPressed() ? down : up);
 8002b5c:	b14b      	cbz	r3, 8002b72 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0x1a>
 8002b5e:	f100 026c 	add.w	r2, r0, #108	@ 0x6c
 8002b62:	6812      	ldr	r2, [r2, #0]
     *
     * @see getColor, Color::getColorFromRGB
     */
    void setColor(colortype newColor)
    {
        color = newColor;
 8002b64:	65c2      	str	r2, [r0, #92]	@ 0x5c
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
 8002b66:	b13b      	cbz	r3, 8002b78 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0x20>
 8002b68:	f100 0374 	add.w	r3, r0, #116	@ 0x74
 8002b6c:	681b      	ldr	r3, [r3, #0]
     *
     * @see setColor, getBorderColor, Color::getColorFromRGB
     */
    void setBorderColor(colortype colorBorder)
    {
        borderColor = colorBorder;
 8002b6e:	6603      	str	r3, [r0, #96]	@ 0x60
        T::handlePressedUpdated();
    }
 8002b70:	4770      	bx	lr
        borderBox.setColor(T::getPressed() ? down : up);
 8002b72:	f100 0268 	add.w	r2, r0, #104	@ 0x68
 8002b76:	e7f4      	b.n	8002b62 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0xa>
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
 8002b78:	f100 0370 	add.w	r3, r0, #112	@ 0x70
 8002b7c:	e7f6      	b.n	8002b6c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0x14>

08002b7e <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8002b7e:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8002b80:	68c2      	ldr	r2, [r0, #12]
 8002b82:	6844      	ldr	r4, [r0, #4]
 8002b84:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8002b86:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8002b88:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8002b8c:	07d2      	lsls	r2, r2, #31
 8002b8e:	bf48      	it	mi
 8002b90:	5962      	ldrmi	r2, [r4, r5]
 8002b92:	689b      	ldr	r3, [r3, #8]
    }
 8002b94:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8002b96:	bf48      	it	mi
 8002b98:	58d3      	ldrmi	r3, [r2, r3]
 8002b9a:	4718      	bx	r3

08002b9c <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv>:
    virtual bool isValid() const
 8002b9c:	4603      	mov	r3, r0
        return (pobject != 0) && (pmemfun != 0);
 8002b9e:	6840      	ldr	r0, [r0, #4]
 8002ba0:	b130      	cbz	r0, 8002bb0 <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x14>
 8002ba2:	689a      	ldr	r2, [r3, #8]
 8002ba4:	b91a      	cbnz	r2, 8002bae <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x12>
 8002ba6:	68d8      	ldr	r0, [r3, #12]
 8002ba8:	f000 0001 	and.w	r0, r0, #1
 8002bac:	4770      	bx	lr
 8002bae:	2001      	movs	r0, #1
    }
 8002bb0:	4770      	bx	lr

08002bb2 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE18handleAlphaUpdatedEv>:
    /**
     * @copydoc Image::setAlpha
     */
    void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 8002bb2:	f890 302d 	ldrb.w	r3, [r0, #45]	@ 0x2d
 8002bb6:	f880 305a 	strb.w	r3, [r0, #90]	@ 0x5a
    /** @copydoc AbstractButtonContainer::handleAlphaUpdated() */
    virtual void handleAlphaUpdated()
    {
        borderBox.setAlpha(T::getAlpha());
        T::handleAlphaUpdated();
    }
 8002bba:	4770      	bx	lr

08002bbc <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEED0Ev>:
class BoxWithBorderButtonStyle : public T
 8002bbc:	b510      	push	{r4, lr}
 8002bbe:	2178      	movs	r1, #120	@ 0x78
 8002bc0:	4604      	mov	r4, r0
 8002bc2:	f01f f8a2 	bl	8021d0a <_ZdlPvj>
 8002bc6:	4620      	mov	r0, r4
 8002bc8:	bd10      	pop	{r4, pc}

08002bca <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8002bca:	b510      	push	{r4, lr}
 8002bcc:	2110      	movs	r1, #16
 8002bce:	4604      	mov	r4, r0
 8002bd0:	f01f f89b 	bl	8021d0a <_ZdlPvj>
 8002bd4:	4620      	mov	r0, r4
 8002bd6:	bd10      	pop	{r4, pc}

08002bd8 <_ZN15Screen1ViewBaseD1Ev>:
Screen1ViewBase::~Screen1ViewBase()
 8002bd8:	b510      	push	{r4, lr}
 8002bda:	4b03      	ldr	r3, [pc, #12]	@ (8002be8 <_ZN15Screen1ViewBaseD1Ev+0x10>)
 8002bdc:	6003      	str	r3, [r0, #0]
 8002bde:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8002be0:	f00b fdae 	bl	800e740 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8002be4:	4620      	mov	r0, r4
 8002be6:	bd10      	pop	{r4, pc}
 8002be8:	08024bdc 	.word	0x08024bdc

08002bec <_ZN15Screen1ViewBaseD0Ev>:
Screen1ViewBase::~Screen1ViewBase()
 8002bec:	b510      	push	{r4, lr}
 8002bee:	4b06      	ldr	r3, [pc, #24]	@ (8002c08 <_ZN15Screen1ViewBaseD0Ev+0x1c>)
 8002bf0:	6003      	str	r3, [r0, #0]
 8002bf2:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8002bf4:	f00b fda4 	bl	800e740 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8002bf8:	4620      	mov	r0, r4
 8002bfa:	f640 71d8 	movw	r1, #4056	@ 0xfd8
 8002bfe:	f01f f884 	bl	8021d0a <_ZdlPvj>
 8002c02:	4620      	mov	r0, r4
 8002c04:	bd10      	pop	{r4, pc}
 8002c06:	bf00      	nop
 8002c08:	08024bdc 	.word	0x08024bdc

08002c0c <_ZN8touchgfx23AbstractButtonContainer13executeActionEv>:
    /**
     * Executes the previously set action.
     *
     * @see setAction
     */
    virtual void executeAction()
 8002c0c:	b510      	push	{r4, lr}
 8002c0e:	4604      	mov	r4, r0
    {
        if (action && action->isValid())
 8002c10:	6b00      	ldr	r0, [r0, #48]	@ 0x30
 8002c12:	b150      	cbz	r0, 8002c2a <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x1e>
 8002c14:	6803      	ldr	r3, [r0, #0]
 8002c16:	68db      	ldr	r3, [r3, #12]
 8002c18:	4798      	blx	r3
 8002c1a:	b130      	cbz	r0, 8002c2a <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x1e>
        {
            action->execute(*this);
 8002c1c:	6b20      	ldr	r0, [r4, #48]	@ 0x30
 8002c1e:	6803      	ldr	r3, [r0, #0]
 8002c20:	4621      	mov	r1, r4
 8002c22:	689b      	ldr	r3, [r3, #8]
        }
    }
 8002c24:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            action->execute(*this);
 8002c28:	4718      	bx	r3
    }
 8002c2a:	bd10      	pop	{r4, pc}

08002c2c <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE>:

void Screen1ViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
    if (&src == &leftButton)
 8002c2c:	f100 03c8 	add.w	r3, r0, #200	@ 0xc8
 8002c30:	4299      	cmp	r1, r3
{
 8002c32:	b570      	push	{r4, r5, r6, lr}
 8002c34:	4604      	mov	r4, r0
 8002c36:	460d      	mov	r5, r1
    if (&src == &leftButton)
 8002c38:	d102      	bne.n	8002c40 <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x14>
    {
        //Interaction1
        //When leftButton clicked call virtual function
        //Call leftClick
        leftClick();
 8002c3a:	6803      	ldr	r3, [r0, #0]
 8002c3c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8002c3e:	4798      	blx	r3
    }
    if (&src == &rightButton)
 8002c40:	f504 73a0 	add.w	r3, r4, #320	@ 0x140
 8002c44:	429d      	cmp	r5, r3
 8002c46:	d105      	bne.n	8002c54 <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x28>
    {
        //Interaction2
        //When rightButton clicked call virtual function
        //Call rightClick
        rightClick();
 8002c48:	6823      	ldr	r3, [r4, #0]
 8002c4a:	4620      	mov	r0, r4
 8002c4c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
    }
}
 8002c4e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        rightClick();
 8002c52:	4718      	bx	r3
}
 8002c54:	bd70      	pop	{r4, r5, r6, pc}

08002c56 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE>:
     *
     * @return The click type of this event.
     */
    ClickEventType getType() const
    {
        return clickEventType;
 8002c56:	790b      	ldrb	r3, [r1, #4]
     *
     * @param  event The click event.
     *
     * @see setAction, setPressed, getPressed
     */
    virtual void handleClickEvent(const ClickEvent& event)
 8002c58:	b570      	push	{r4, r5, r6, lr}
        return pressed;
 8002c5a:	f890 602c 	ldrb.w	r6, [r0, #44]	@ 0x2c
 8002c5e:	4604      	mov	r4, r0
 8002c60:	460d      	mov	r5, r1
    {
        bool wasPressed = getPressed();
        bool newPressedValue = (event.getType() == ClickEvent::PRESSED);
        if ((newPressedValue && !wasPressed) || (!newPressedValue && wasPressed))
 8002c62:	b90b      	cbnz	r3, 8002c68 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x12>
 8002c64:	b116      	cbz	r6, 8002c6c <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x16>
        }
        if (wasPressed && (event.getType() == ClickEvent::RELEASED))
        {
            executeAction();
        }
    }
 8002c66:	bd70      	pop	{r4, r5, r6, pc}
        if ((newPressedValue && !wasPressed) || (!newPressedValue && wasPressed))
 8002c68:	2e00      	cmp	r6, #0
 8002c6a:	d0fc      	beq.n	8002c66 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x10>
        bool newPressedValue = (event.getType() == ClickEvent::PRESSED);
 8002c6c:	fab3 f383 	clz	r3, r3
 8002c70:	095b      	lsrs	r3, r3, #5
 8002c72:	f884 302c 	strb.w	r3, [r4, #44]	@ 0x2c
        handlePressedUpdated();
 8002c76:	6823      	ldr	r3, [r4, #0]
 8002c78:	4620      	mov	r0, r4
 8002c7a:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 8002c7e:	4798      	blx	r3
            invalidate();
 8002c80:	6823      	ldr	r3, [r4, #0]
 8002c82:	4620      	mov	r0, r4
 8002c84:	695b      	ldr	r3, [r3, #20]
 8002c86:	4798      	blx	r3
        if (wasPressed && (event.getType() == ClickEvent::RELEASED))
 8002c88:	2e00      	cmp	r6, #0
 8002c8a:	d0ec      	beq.n	8002c66 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x10>
 8002c8c:	792b      	ldrb	r3, [r5, #4]
 8002c8e:	2b01      	cmp	r3, #1
 8002c90:	d1e9      	bne.n	8002c66 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x10>
            executeAction();
 8002c92:	6823      	ldr	r3, [r4, #0]
 8002c94:	4620      	mov	r0, r4
 8002c96:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
    }
 8002c9a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
            executeAction();
 8002c9e:	4718      	bx	r3

08002ca0 <_ZN8touchgfx8Drawable5setXYEss>:
    void setXY(int16_t x, int16_t y)
 8002ca0:	b570      	push	{r4, r5, r6, lr}
        setX(x);
 8002ca2:	6803      	ldr	r3, [r0, #0]
    void setXY(int16_t x, int16_t y)
 8002ca4:	4604      	mov	r4, r0
        setX(x);
 8002ca6:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
    void setXY(int16_t x, int16_t y)
 8002ca8:	4615      	mov	r5, r2
        setX(x);
 8002caa:	4798      	blx	r3
        setY(y);
 8002cac:	6823      	ldr	r3, [r4, #0]
 8002cae:	4629      	mov	r1, r5
 8002cb0:	4620      	mov	r0, r4
 8002cb2:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
    }
 8002cb4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(y);
 8002cb8:	4718      	bx	r3

08002cba <_ZN8touchgfx8Drawable11setPositionEssss>:
    void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 8002cba:	b570      	push	{r4, r5, r6, lr}
 8002cbc:	4604      	mov	r4, r0
 8002cbe:	461d      	mov	r5, r3
 8002cc0:	f9bd 6010 	ldrsh.w	r6, [sp, #16]
        setXY(x, y);
 8002cc4:	f7ff ffec 	bl	8002ca0 <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 8002cc8:	6823      	ldr	r3, [r4, #0]
 8002cca:	4629      	mov	r1, r5
 8002ccc:	4620      	mov	r0, r4
 8002cce:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8002cd0:	4798      	blx	r3
        setHeight(height);
 8002cd2:	6823      	ldr	r3, [r4, #0]
 8002cd4:	4631      	mov	r1, r6
 8002cd6:	4620      	mov	r0, r4
 8002cd8:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
    }
 8002cda:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setHeight(height);
 8002cde:	4718      	bx	r3

08002ce0 <_ZN8touchgfx3BoxC1Ev>:
        : Widget(), alpha(255), color(0)
 8002ce0:	4a09      	ldr	r2, [pc, #36]	@ (8002d08 <_ZN8touchgfx3BoxC1Ev+0x28>)
 8002ce2:	6002      	str	r2, [r0, #0]
          touchable(false),
 8002ce4:	f44f 7180 	mov.w	r1, #256	@ 0x100
 8002ce8:	2200      	movs	r2, #0
 8002cea:	8481      	strh	r1, [r0, #36]	@ 0x24
 8002cec:	21ff      	movs	r1, #255	@ 0xff
 8002cee:	e9c0 2201 	strd	r2, r2, [r0, #4]
 8002cf2:	e9c0 2203 	strd	r2, r2, [r0, #12]
          nextSibling(0),
 8002cf6:	e9c0 2205 	strd	r2, r2, [r0, #20]
          cachedAbsX(0),
 8002cfa:	e9c0 2207 	strd	r2, r2, [r0, #28]
 8002cfe:	f880 1026 	strb.w	r1, [r0, #38]	@ 0x26
        : color(col)
 8002d02:	6282      	str	r2, [r0, #40]	@ 0x28
    }
 8002d04:	4770      	bx	lr
 8002d06:	bf00      	nop
 8002d08:	08025044 	.word	0x08025044

08002d0c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev>:
        : pressed(false), alpha(255), action(0)
 8002d0c:	f44f 437f 	mov.w	r3, #65280	@ 0xff00
    BoxWithBorderButtonStyle()
 8002d10:	b570      	push	{r4, r5, r6, lr}
        : T(), up(), down()
 8002d12:	4606      	mov	r6, r0
 8002d14:	8583      	strh	r3, [r0, #44]	@ 0x2c
        touchable = touch;
 8002d16:	f240 1301 	movw	r3, #257	@ 0x101
          firstChild(0)
 8002d1a:	2500      	movs	r5, #0
 8002d1c:	8483      	strh	r3, [r0, #36]	@ 0x24
 8002d1e:	4b12      	ldr	r3, [pc, #72]	@ (8002d68 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev+0x5c>)
 8002d20:	6285      	str	r5, [r0, #40]	@ 0x28
        : x(0), y(0), width(0), height(0)
 8002d22:	e9c0 5501 	strd	r5, r5, [r0, #4]
 8002d26:	e9c0 5503 	strd	r5, r5, [r0, #12]
          nextSibling(0),
 8002d2a:	e9c0 5505 	strd	r5, r5, [r0, #20]
          cachedAbsX(0),
 8002d2e:	e9c0 5507 	strd	r5, r5, [r0, #28]
 8002d32:	6305      	str	r5, [r0, #48]	@ 0x30
 8002d34:	f846 3b34 	str.w	r3, [r6], #52
    BoxWithBorderButtonStyle()
 8002d38:	4604      	mov	r4, r0
        : Box(), borderColor(0), borderSize(0)
 8002d3a:	4630      	mov	r0, r6
 8002d3c:	f7ff ffd0 	bl	8002ce0 <_ZN8touchgfx3BoxC1Ev>
 8002d40:	4b0a      	ldr	r3, [pc, #40]	@ (8002d6c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev+0x60>)
 8002d42:	6363      	str	r3, [r4, #52]	@ 0x34
        borderBox.setXY(0, 0);
 8002d44:	462a      	mov	r2, r5
 8002d46:	4629      	mov	r1, r5
 8002d48:	4630      	mov	r0, r6
        : color(0)
 8002d4a:	e9c4 551a 	strd	r5, r5, [r4, #104]	@ 0x68
 8002d4e:	e9c4 551c 	strd	r5, r5, [r4, #112]	@ 0x70
        : color(col)
 8002d52:	6625      	str	r5, [r4, #96]	@ 0x60
 8002d54:	f8a4 5064 	strh.w	r5, [r4, #100]	@ 0x64
 8002d58:	f7ff ffa2 	bl	8002ca0 <_ZN8touchgfx8Drawable5setXYEss>
        T::add(borderBox);
 8002d5c:	4620      	mov	r0, r4
 8002d5e:	4631      	mov	r1, r6
 8002d60:	f007 fa2c 	bl	800a1bc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    }
 8002d64:	4620      	mov	r0, r4
 8002d66:	bd70      	pop	{r4, r5, r6, pc}
 8002d68:	08024b28 	.word	0x08024b28
 8002d6c:	080250ac 	.word	0x080250ac

08002d70 <_ZN15Screen1ViewBaseC1Ev>:
Screen1ViewBase::Screen1ViewBase() :
 8002d70:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002d74:	4604      	mov	r4, r0
 8002d76:	b085      	sub	sp, #20
    flexButtonCallback(this, &Screen1ViewBase::flexButtonCallbackHandler)
 8002d78:	4626      	mov	r6, r4
        : presenter(0)
 8002d7a:	2500      	movs	r5, #0
 8002d7c:	f00e fdc0 	bl	8011900 <_ZN8touchgfx6ScreenC1Ev>
 8002d80:	4b5e      	ldr	r3, [pc, #376]	@ (8002efc <_ZN15Screen1ViewBaseC1Ev+0x18c>)
 8002d82:	63e5      	str	r5, [r4, #60]	@ 0x3c
 8002d84:	f846 3b40 	str.w	r3, [r6], #64
 8002d88:	f104 096c 	add.w	r9, r4, #108	@ 0x6c
 8002d8c:	4630      	mov	r0, r6
 8002d8e:	f7ff ffa7 	bl	8002ce0 <_ZN8touchgfx3BoxC1Ev>
 8002d92:	f104 0ab4 	add.w	sl, r4, #180	@ 0xb4
 8002d96:	4648      	mov	r0, r9
 8002d98:	f00a f834 	bl	800ce04 <_ZN8touchgfx6CircleC1Ev>
 8002d9c:	4650      	mov	r0, sl
 8002d9e:	f7fe fbb9 	bl	8001514 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8002da2:	4b57      	ldr	r3, [pc, #348]	@ (8002f00 <_ZN15Screen1ViewBaseC1Ev+0x190>)
 8002da4:	f8c4 30b4 	str.w	r3, [r4, #180]	@ 0xb4
 8002da8:	f104 08c8 	add.w	r8, r4, #200	@ 0xc8
 8002dac:	3324      	adds	r3, #36	@ 0x24
 8002dae:	f8c4 30bc 	str.w	r3, [r4, #188]	@ 0xbc
 8002db2:	f8c4 50c0 	str.w	r5, [r4, #192]	@ 0xc0
 8002db6:	4640      	mov	r0, r8
 8002db8:	f7ff ffa8 	bl	8002d0c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev>
 8002dbc:	f504 73a0 	add.w	r3, r4, #320	@ 0x140
 8002dc0:	4618      	mov	r0, r3
 8002dc2:	9303      	str	r3, [sp, #12]
 8002dc4:	f7ff ffa2 	bl	8002d0c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8002dc8:	4b4e      	ldr	r3, [pc, #312]	@ (8002f04 <_ZN15Screen1ViewBaseC1Ev+0x194>)
 8002dca:	f8c4 3fc8 	str.w	r3, [r4, #4040]	@ 0xfc8
 8002dce:	4b4e      	ldr	r3, [pc, #312]	@ (8002f08 <_ZN15Screen1ViewBaseC1Ev+0x198>)
 8002dd0:	f8c4 3fd0 	str.w	r3, [r4, #4048]	@ 0xfd0
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8002dd4:	f504 70dc 	add.w	r0, r4, #440	@ 0x1b8
    __background.setPosition(0, 0, 240, 320);
 8002dd8:	f44f 7ba0 	mov.w	fp, #320	@ 0x140
 8002ddc:	f8c4 4fcc 	str.w	r4, [r4, #4044]	@ 0xfcc
 8002de0:	f8c4 5fd4 	str.w	r5, [r4, #4052]	@ 0xfd4
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8002de4:	f44f 6161 	mov.w	r1, #3600	@ 0xe10
 8002de8:	f00b fca0 	bl	800e72c <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8002dec:	462a      	mov	r2, r5
 8002dee:	f8cd b000 	str.w	fp, [sp]
 8002df2:	4629      	mov	r1, r5
 8002df4:	4630      	mov	r0, r6
 8002df6:	23f0      	movs	r3, #240	@ 0xf0
 8002df8:	f7ff ff5f 	bl	8002cba <_ZN8touchgfx8Drawable11setPositionEssss>
     * @note Must not be called with a Drawable that was already added to the screen. If in doubt,
     *       call remove() first.
     */
    void add(Drawable& d)
    {
        container.add(d);
 8002dfc:	1d27      	adds	r7, r4, #4
        color = newColor;
 8002dfe:	f04f 437f 	mov.w	r3, #4278190080	@ 0xff000000
 8002e02:	66a3      	str	r3, [r4, #104]	@ 0x68
 8002e04:	4631      	mov	r1, r6
 8002e06:	4638      	mov	r0, r7
 8002e08:	f007 f9d8 	bl	800a1bc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    circle1.setPosition(0, 0, 206, 320);
 8002e0c:	462a      	mov	r2, r5
 8002e0e:	f8cd b000 	str.w	fp, [sp]
 8002e12:	4629      	mov	r1, r5
 8002e14:	4648      	mov	r0, r9
 8002e16:	23ce      	movs	r3, #206	@ 0xce
 8002e18:	f7ff ff4f 	bl	8002cba <_ZN8touchgfx8Drawable11setPositionEssss>
     * @note The area containing the Circle is not invalidated.
     */
    template <typename T>
    void setCenter(const T x, const T y)
    {
        this->circleCenterX = CWRUtil::toQ5(x);
 8002e1c:	f44f 63a0 	mov.w	r3, #1280	@ 0x500
        this->circleCenterY = CWRUtil::toQ5(y);
 8002e20:	e9c4 3326 	strd	r3, r3, [r4, #152]	@ 0x98
     */
    template <typename T>
    void setRadius(const T r)
    {
        this->circleRadius = CWRUtil::toQ5(r);
        this->circleRadius = MAX(CWRUtil::toQ5(0), this->circleRadius);
 8002e24:	f44f 638c 	mov.w	r3, #1120	@ 0x460
     */
    template <typename T>
    void setLineWidth(const T width)
    {
        this->circleLineWidth = CWRUtil::toQ5(width);
        this->circleLineWidth = MAX(CWRUtil::toQ5(0), this->circleLineWidth);
 8002e28:	26a0      	movs	r6, #160	@ 0xa0
        this->circleRadius = MAX(CWRUtil::toQ5(0), this->circleRadius);
 8002e2a:	f8c4 30a0 	str.w	r3, [r4, #160]	@ 0xa0
        circleArcAngleEnd = CWRUtil::toQ5(endAngle);
 8002e2e:	f44f 5334 	mov.w	r3, #11520	@ 0x2d00
 8002e32:	f8c4 30a8 	str.w	r3, [r4, #168]	@ 0xa8
    circle1.setCapPrecision(180);
 8002e36:	4648      	mov	r0, r9
        this->circleLineWidth = MAX(CWRUtil::toQ5(0), this->circleLineWidth);
 8002e38:	f8c4 60ac 	str.w	r6, [r4, #172]	@ 0xac
        circleArcAngleStart = CWRUtil::toQ5(startAngle);
 8002e3c:	f8c4 50a4 	str.w	r5, [r4, #164]	@ 0xa4
 8002e40:	21b4      	movs	r1, #180	@ 0xb4
 8002e42:	f009 fff7 	bl	800ce34 <_ZN8touchgfx6Circle15setCapPrecisionEi>
 8002e46:	f04f 33ff 	mov.w	r3, #4294967295
 8002e4a:	f8c4 30c0 	str.w	r3, [r4, #192]	@ 0xc0
    }

    virtual void setColor(colortype color)
    {
        AbstractPainterColor::setColor(color);
        color565 = LCD16bpp::getNativeColor(painterColor);
 8002e4e:	f8a4 30c4 	strh.w	r3, [r4, #196]	@ 0xc4
        canvasPainter = &painter;
 8002e52:	f8c4 a094 	str.w	sl, [r4, #148]	@ 0x94
 8002e56:	4649      	mov	r1, r9
 8002e58:	4638      	mov	r0, r7
 8002e5a:	f007 f9af 	bl	800a1bc <_ZN8touchgfx9Container3addERNS_8DrawableE>
        borderBox.setPosition(x, y, width, height);
 8002e5e:	462a      	mov	r2, r5
 8002e60:	4629      	mov	r1, r5
 8002e62:	f104 00fc 	add.w	r0, r4, #252	@ 0xfc
 8002e66:	9600      	str	r6, [sp, #0]
 8002e68:	2322      	movs	r3, #34	@ 0x22
 8002e6a:	f7ff ff26 	bl	8002cba <_ZN8touchgfx8Drawable11setPositionEssss>
        down = colorPressed;
 8002e6e:	f8df b0a8 	ldr.w	fp, [pc, #168]	@ 8002f18 <_ZN15Screen1ViewBaseC1Ev+0x1a8>
 8002e72:	4b26      	ldr	r3, [pc, #152]	@ (8002f0c <_ZN15Screen1ViewBaseC1Ev+0x19c>)
        borderDown = borderColorPressed;
 8002e74:	4a26      	ldr	r2, [pc, #152]	@ (8002f10 <_ZN15Screen1ViewBaseC1Ev+0x1a0>)
 8002e76:	4927      	ldr	r1, [pc, #156]	@ (8002f14 <_ZN15Screen1ViewBaseC1Ev+0x1a4>)
     *
     * @see getBorderSize
     */
    void setBorderSize(uint16_t size)
    {
        borderSize = size;
 8002e78:	f04f 0a05 	mov.w	sl, #5
 8002e7c:	e9c4 214e 	strd	r2, r1, [r4, #312]	@ 0x138
        down = colorPressed;
 8002e80:	e9c4 b34c 	strd	fp, r3, [r4, #304]	@ 0x130
        handlePressedUpdated();
 8002e84:	4640      	mov	r0, r8
    leftButton.setAction(flexButtonCallback);
 8002e86:	f604 79c8 	addw	r9, r4, #4040	@ 0xfc8
 8002e8a:	f8a4 a12c 	strh.w	sl, [r4, #300]	@ 0x12c
 8002e8e:	f7ff fe63 	bl	8002b58 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv>
    leftButton.setPosition(206, 0, 34, 160);
 8002e92:	462a      	mov	r2, r5
        action = &callback;
 8002e94:	f8c4 90f8 	str.w	r9, [r4, #248]	@ 0xf8
 8002e98:	2322      	movs	r3, #34	@ 0x22
 8002e9a:	4640      	mov	r0, r8
 8002e9c:	9600      	str	r6, [sp, #0]
 8002e9e:	21ce      	movs	r1, #206	@ 0xce
 8002ea0:	f7ff ff0b 	bl	8002cba <_ZN8touchgfx8Drawable11setPositionEssss>
 8002ea4:	4641      	mov	r1, r8
 8002ea6:	4638      	mov	r0, r7
 8002ea8:	f007 f988 	bl	800a1bc <_ZN8touchgfx9Container3addERNS_8DrawableE>
        borderBox.setPosition(x, y, width, height);
 8002eac:	462a      	mov	r2, r5
 8002eae:	4629      	mov	r1, r5
 8002eb0:	f504 70ba 	add.w	r0, r4, #372	@ 0x174
 8002eb4:	9600      	str	r6, [sp, #0]
 8002eb6:	2322      	movs	r3, #34	@ 0x22
 8002eb8:	f7ff feff 	bl	8002cba <_ZN8touchgfx8Drawable11setPositionEssss>
        borderUp = borderColorReleased;
 8002ebc:	4b13      	ldr	r3, [pc, #76]	@ (8002f0c <_ZN15Screen1ViewBaseC1Ev+0x19c>)
 8002ebe:	4a14      	ldr	r2, [pc, #80]	@ (8002f10 <_ZN15Screen1ViewBaseC1Ev+0x1a0>)
        borderDown = borderColorPressed;
 8002ec0:	4914      	ldr	r1, [pc, #80]	@ (8002f14 <_ZN15Screen1ViewBaseC1Ev+0x1a4>)
        handlePressedUpdated();
 8002ec2:	9803      	ldr	r0, [sp, #12]
        borderDown = borderColorPressed;
 8002ec4:	f8c4 11b4 	str.w	r1, [r4, #436]	@ 0x1b4
        borderUp = borderColorReleased;
 8002ec8:	e9c4 326b 	strd	r3, r2, [r4, #428]	@ 0x1ac
 8002ecc:	f8a4 a1a4 	strh.w	sl, [r4, #420]	@ 0x1a4
        up = colorReleased;
 8002ed0:	f8c4 b1a8 	str.w	fp, [r4, #424]	@ 0x1a8
        handlePressedUpdated();
 8002ed4:	f7ff fe40 	bl	8002b58 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv>
    rightButton.setPosition(206, 160, 34, 160);
 8002ed8:	9803      	ldr	r0, [sp, #12]
 8002eda:	f8c4 9170 	str.w	r9, [r4, #368]	@ 0x170
 8002ede:	2322      	movs	r3, #34	@ 0x22
 8002ee0:	4632      	mov	r2, r6
 8002ee2:	9600      	str	r6, [sp, #0]
 8002ee4:	21ce      	movs	r1, #206	@ 0xce
 8002ee6:	f7ff fee8 	bl	8002cba <_ZN8touchgfx8Drawable11setPositionEssss>
 8002eea:	4638      	mov	r0, r7
 8002eec:	9903      	ldr	r1, [sp, #12]
 8002eee:	f007 f965 	bl	800a1bc <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8002ef2:	4620      	mov	r0, r4
 8002ef4:	b005      	add	sp, #20
 8002ef6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8002efa:	bf00      	nop
 8002efc:	08024bdc 	.word	0x08024bdc
 8002f00:	08024e04 	.word	0x08024e04
 8002f04:	08024bc4 	.word	0x08024bc4
 8002f08:	08002c2d 	.word	0x08002c2d
 8002f0c:	ff0099cc 	.word	0xff0099cc
 8002f10:	ff003366 	.word	0xff003366
 8002f14:	ff336699 	.word	0xff336699
 8002f18:	ff006699 	.word	0xff006699

08002f1c <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_10_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_10_4bpp();

touchgfx::GeneratedFont& getFont_verdana_10_4bpp()
{
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 10, 0, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8002f1c:	4770      	bx	lr
	...

08002f20 <_Z23getFont_verdana_10_4bppv>:
{
 8002f20:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 10, 0, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8002f22:	4d16      	ldr	r5, [pc, #88]	@ (8002f7c <_Z23getFont_verdana_10_4bppv+0x5c>)
 8002f24:	682c      	ldr	r4, [r5, #0]
 8002f26:	f014 0401 	ands.w	r4, r4, #1
{
 8002f2a:	b08f      	sub	sp, #60	@ 0x3c
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 10, 0, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8002f2c:	f3bf 8f5b 	dmb	ish
 8002f30:	d120      	bne.n	8002f74 <_Z23getFont_verdana_10_4bppv+0x54>
 8002f32:	4628      	mov	r0, r5
 8002f34:	f01e feeb 	bl	8021d0e <__cxa_guard_acquire>
 8002f38:	b1e0      	cbz	r0, 8002f74 <_Z23getFont_verdana_10_4bppv+0x54>
 8002f3a:	233f      	movs	r3, #63	@ 0x3f
 8002f3c:	9309      	str	r3, [sp, #36]	@ 0x24
 8002f3e:	4b10      	ldr	r3, [pc, #64]	@ (8002f80 <_Z23getFont_verdana_10_4bppv+0x60>)
 8002f40:	9308      	str	r3, [sp, #32]
 8002f42:	4b10      	ldr	r3, [pc, #64]	@ (8002f84 <_Z23getFont_verdana_10_4bppv+0x64>)
 8002f44:	4910      	ldr	r1, [pc, #64]	@ (8002f88 <_Z23getFont_verdana_10_4bppv+0x68>)
 8002f46:	4811      	ldr	r0, [pc, #68]	@ (8002f8c <_Z23getFont_verdana_10_4bppv+0x6c>)
 8002f48:	940a      	str	r4, [sp, #40]	@ 0x28
 8002f4a:	2201      	movs	r2, #1
 8002f4c:	e9cd 4306 	strd	r4, r3, [sp, #24]
 8002f50:	2304      	movs	r3, #4
 8002f52:	e9cd 3203 	strd	r3, r2, [sp, #12]
 8002f56:	230a      	movs	r3, #10
 8002f58:	9300      	str	r3, [sp, #0]
 8002f5a:	e9cd 440b 	strd	r4, r4, [sp, #44]	@ 0x2c
 8002f5e:	e9cd 4401 	strd	r4, r4, [sp, #4]
 8002f62:	9405      	str	r4, [sp, #20]
 8002f64:	f7ff fdbc 	bl	8002ae0 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8002f68:	4809      	ldr	r0, [pc, #36]	@ (8002f90 <_Z23getFont_verdana_10_4bppv+0x70>)
 8002f6a:	f01f fe29 	bl	8022bc0 <atexit>
 8002f6e:	4628      	mov	r0, r5
 8002f70:	f01e fed9 	bl	8021d26 <__cxa_guard_release>
    return verdana_10_4bpp;
}
 8002f74:	4805      	ldr	r0, [pc, #20]	@ (8002f8c <_Z23getFont_verdana_10_4bppv+0x6c>)
 8002f76:	b00f      	add	sp, #60	@ 0x3c
 8002f78:	bd30      	pop	{r4, r5, pc}
 8002f7a:	bf00      	nop
 8002f7c:	20003228 	.word	0x20003228
 8002f80:	08025edc 	.word	0x08025edc
 8002f84:	08025ee8 	.word	0x08025ee8
 8002f88:	08025e20 	.word	0x08025e20
 8002f8c:	2000322c 	.word	0x2000322c
 8002f90:	08002f1d 	.word	0x08002f1d

08002f94 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_20_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_20_4bpp();

touchgfx::GeneratedFont& getFont_verdana_20_4bpp()
{
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 11, 20, 20, 0, 0, 4, 1, 0, 0, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
 8002f94:	4770      	bx	lr
	...

08002f98 <_Z23getFont_verdana_20_4bppv>:
{
 8002f98:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 11, 20, 20, 0, 0, 4, 1, 0, 0, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
 8002f9a:	4d16      	ldr	r5, [pc, #88]	@ (8002ff4 <_Z23getFont_verdana_20_4bppv+0x5c>)
 8002f9c:	682c      	ldr	r4, [r5, #0]
 8002f9e:	f014 0401 	ands.w	r4, r4, #1
{
 8002fa2:	b08f      	sub	sp, #60	@ 0x3c
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 11, 20, 20, 0, 0, 4, 1, 0, 0, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
 8002fa4:	f3bf 8f5b 	dmb	ish
 8002fa8:	d121      	bne.n	8002fee <_Z23getFont_verdana_20_4bppv+0x56>
 8002faa:	4628      	mov	r0, r5
 8002fac:	f01e feaf 	bl	8021d0e <__cxa_guard_acquire>
 8002fb0:	b1e8      	cbz	r0, 8002fee <_Z23getFont_verdana_20_4bppv+0x56>
 8002fb2:	233f      	movs	r3, #63	@ 0x3f
 8002fb4:	9309      	str	r3, [sp, #36]	@ 0x24
 8002fb6:	4b10      	ldr	r3, [pc, #64]	@ (8002ff8 <_Z23getFont_verdana_20_4bppv+0x60>)
 8002fb8:	9308      	str	r3, [sp, #32]
 8002fba:	4b10      	ldr	r3, [pc, #64]	@ (8002ffc <_Z23getFont_verdana_20_4bppv+0x64>)
 8002fbc:	4910      	ldr	r1, [pc, #64]	@ (8003000 <_Z23getFont_verdana_20_4bppv+0x68>)
 8002fbe:	4811      	ldr	r0, [pc, #68]	@ (8003004 <_Z23getFont_verdana_20_4bppv+0x6c>)
 8002fc0:	940a      	str	r4, [sp, #40]	@ 0x28
 8002fc2:	e9cd 4306 	strd	r4, r3, [sp, #24]
 8002fc6:	2201      	movs	r2, #1
 8002fc8:	2304      	movs	r3, #4
 8002fca:	e9cd 3203 	strd	r3, r2, [sp, #12]
 8002fce:	2314      	movs	r3, #20
 8002fd0:	9300      	str	r3, [sp, #0]
 8002fd2:	220b      	movs	r2, #11
 8002fd4:	e9cd 440b 	strd	r4, r4, [sp, #44]	@ 0x2c
 8002fd8:	e9cd 4401 	strd	r4, r4, [sp, #4]
 8002fdc:	9405      	str	r4, [sp, #20]
 8002fde:	f7ff fd7f 	bl	8002ae0 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8002fe2:	4809      	ldr	r0, [pc, #36]	@ (8003008 <_Z23getFont_verdana_20_4bppv+0x70>)
 8002fe4:	f01f fdec 	bl	8022bc0 <atexit>
 8002fe8:	4628      	mov	r0, r5
 8002fea:	f01e fe9c 	bl	8021d26 <__cxa_guard_release>
    return verdana_20_4bpp;
}
 8002fee:	4805      	ldr	r0, [pc, #20]	@ (8003004 <_Z23getFont_verdana_20_4bppv+0x6c>)
 8002ff0:	b00f      	add	sp, #60	@ 0x3c
 8002ff2:	bd30      	pop	{r4, r5, pc}
 8002ff4:	20003258 	.word	0x20003258
 8002ff8:	08025ee0 	.word	0x08025ee0
 8002ffc:	08025eec 	.word	0x08025eec
 8003000:	08025e30 	.word	0x08025e30
 8003004:	2000325c 	.word	0x2000325c
 8003008:	08002f95 	.word	0x08002f95

0800300c <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_40_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_40_4bpp();

touchgfx::GeneratedFont& getFont_verdana_40_4bpp()
{
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 800300c:	4770      	bx	lr
	...

08003010 <_Z23getFont_verdana_40_4bppv>:
{
 8003010:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8003012:	4d16      	ldr	r5, [pc, #88]	@ (800306c <_Z23getFont_verdana_40_4bppv+0x5c>)
 8003014:	682c      	ldr	r4, [r5, #0]
 8003016:	f014 0401 	ands.w	r4, r4, #1
{
 800301a:	b08f      	sub	sp, #60	@ 0x3c
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 800301c:	f3bf 8f5b 	dmb	ish
 8003020:	d120      	bne.n	8003064 <_Z23getFont_verdana_40_4bppv+0x54>
 8003022:	4628      	mov	r0, r5
 8003024:	f01e fe73 	bl	8021d0e <__cxa_guard_acquire>
 8003028:	b1e0      	cbz	r0, 8003064 <_Z23getFont_verdana_40_4bppv+0x54>
 800302a:	233f      	movs	r3, #63	@ 0x3f
 800302c:	9309      	str	r3, [sp, #36]	@ 0x24
 800302e:	4b10      	ldr	r3, [pc, #64]	@ (8003070 <_Z23getFont_verdana_40_4bppv+0x60>)
 8003030:	9308      	str	r3, [sp, #32]
 8003032:	4b10      	ldr	r3, [pc, #64]	@ (8003074 <_Z23getFont_verdana_40_4bppv+0x64>)
 8003034:	4910      	ldr	r1, [pc, #64]	@ (8003078 <_Z23getFont_verdana_40_4bppv+0x68>)
 8003036:	4811      	ldr	r0, [pc, #68]	@ (800307c <_Z23getFont_verdana_40_4bppv+0x6c>)
 8003038:	940a      	str	r4, [sp, #40]	@ 0x28
 800303a:	2201      	movs	r2, #1
 800303c:	e9cd 4306 	strd	r4, r3, [sp, #24]
 8003040:	2304      	movs	r3, #4
 8003042:	e9cd 3203 	strd	r3, r2, [sp, #12]
 8003046:	2328      	movs	r3, #40	@ 0x28
 8003048:	9300      	str	r3, [sp, #0]
 800304a:	e9cd 440b 	strd	r4, r4, [sp, #44]	@ 0x2c
 800304e:	e9cd 4401 	strd	r4, r4, [sp, #4]
 8003052:	9405      	str	r4, [sp, #20]
 8003054:	f7ff fd44 	bl	8002ae0 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8003058:	4809      	ldr	r0, [pc, #36]	@ (8003080 <_Z23getFont_verdana_40_4bppv+0x70>)
 800305a:	f01f fdb1 	bl	8022bc0 <atexit>
 800305e:	4628      	mov	r0, r5
 8003060:	f01e fe61 	bl	8021d26 <__cxa_guard_release>
    return verdana_40_4bpp;
}
 8003064:	4805      	ldr	r0, [pc, #20]	@ (800307c <_Z23getFont_verdana_40_4bppv+0x6c>)
 8003066:	b00f      	add	sp, #60	@ 0x3c
 8003068:	bd30      	pop	{r4, r5, pc}
 800306a:	bf00      	nop
 800306c:	20003288 	.word	0x20003288
 8003070:	08025ee4 	.word	0x08025ee4
 8003074:	08025ef0 	.word	0x08025ef0
 8003078:	08025ecc 	.word	0x08025ecc
 800307c:	2000328c 	.word	0x2000328c
 8003080:	0800300d 	.word	0x0800300d

08003084 <_ZNK8touchgfx4Font12getGSUBTableEv>:
    }
 8003084:	2000      	movs	r0, #0
 8003086:	4770      	bx	lr

08003088 <_ZNK8touchgfx4Font23getContextualFormsTableEv>:
    }
 8003088:	2000      	movs	r0, #0
 800308a:	4770      	bx	lr

0800308c <_ZNK8touchgfx4Font14getStringWidthEPKtz>:
#include <touchgfx/hal/HAL.hpp>
#include <touchgfx/lcd/LCD.hpp>
#include <texts/TypedTextDatabase.hpp>

uint16_t touchgfx::Font::getStringWidth(const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 800308c:	b40e      	push	{r1, r2, r3}
 800308e:	b503      	push	{r0, r1, lr}
 8003090:	ab03      	add	r3, sp, #12
    va_list pArg;
    va_start(pArg, text);
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 8003092:	2100      	movs	r1, #0
{
 8003094:	f853 2b04 	ldr.w	r2, [r3], #4
    va_start(pArg, text);
 8003098:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 800309a:	f00d fc29 	bl	80108f0 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 800309e:	b002      	add	sp, #8
 80030a0:	f85d eb04 	ldr.w	lr, [sp], #4
 80030a4:	b003      	add	sp, #12
 80030a6:	4770      	bx	lr

080030a8 <_ZNK8touchgfx4Font14getStringWidthEhPKtz>:

uint16_t touchgfx::Font::getStringWidth(touchgfx::TextDirection textDirection, const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 80030a8:	b40c      	push	{r2, r3}
 80030aa:	b507      	push	{r0, r1, r2, lr}
 80030ac:	ab04      	add	r3, sp, #16
 80030ae:	f853 2b04 	ldr.w	r2, [r3], #4
    va_list pArg;
    va_start(pArg, text);
 80030b2:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(textDirection, text, pArg);
 80030b4:	f00d fc1c 	bl	80108f0 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 80030b8:	b003      	add	sp, #12
 80030ba:	f85d eb04 	ldr.w	lr, [sp], #4
 80030be:	b002      	add	sp, #8
 80030c0:	4770      	bx	lr
	...

080030c4 <_ZN8touchgfx12TextProvider15getNextLigatureEh>:

touchgfx::Unicode::UnicodeChar touchgfx::TextProvider::getNextLigature(TextDirection direction)
{
    if (fontGsubTable && nextCharacters.peekChar())
 80030c4:	6c43      	ldr	r3, [r0, #68]	@ 0x44
{
 80030c6:	b510      	push	{r4, lr}
 80030c8:	4604      	mov	r4, r0
    if (fontGsubTable && nextCharacters.peekChar())
 80030ca:	b373      	cbz	r3, 800312a <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
            return used == size;
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
        {
            assert(used > 0);
 80030cc:	8f03      	ldrh	r3, [r0, #56]	@ 0x38
 80030ce:	b92b      	cbnz	r3, 80030dc <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x18>
 80030d0:	4b18      	ldr	r3, [pc, #96]	@ (8003134 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x70>)
 80030d2:	4a19      	ldr	r2, [pc, #100]	@ (8003138 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x74>)
 80030d4:	21c5      	movs	r1, #197	@ 0xc5
            return buffer[pos];
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar(uint16_t offset)
        {
            assert(offset < used);
 80030d6:	4819      	ldr	r0, [pc, #100]	@ (800313c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x78>)
 80030d8:	f01f fd54 	bl	8022b84 <__assert_func>
            return buffer[pos];
 80030dc:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
 80030de:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 80030e2:	8c5b      	ldrh	r3, [r3, #34]	@ 0x22
 80030e4:	b30b      	cbz	r3, 800312a <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
    {
        substituteGlyphs();
 80030e6:	f00f faaa 	bl	801263e <_ZN8touchgfx12TextProvider16substituteGlyphsEv>
            assert(offset < used);
 80030ea:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
 80030ec:	2b01      	cmp	r3, #1
 80030ee:	d803      	bhi.n	80030f8 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x34>
 80030f0:	4b13      	ldr	r3, [pc, #76]	@ (8003140 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x7c>)
 80030f2:	4a14      	ldr	r2, [pc, #80]	@ (8003144 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x80>)
 80030f4:	21cb      	movs	r1, #203	@ 0xcb
 80030f6:	e7ee      	b.n	80030d6 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x12>
            const uint16_t index = pos + offset;
 80030f8:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
 80030fa:	1c53      	adds	r3, r2, #1
 80030fc:	b29b      	uxth	r3, r3
            return buffer[index < size ? index : index - size];
 80030fe:	2b09      	cmp	r3, #9
 8003100:	4619      	mov	r1, r3
 8003102:	bf88      	it	hi
 8003104:	f1a3 010a 	subhi.w	r1, r3, #10
 8003108:	eb04 0141 	add.w	r1, r4, r1, lsl #1
        if (nextCharacters.peekChar(1) == 0x093F) // Hindi I-matra
 800310c:	f640 103f 	movw	r0, #2367	@ 0x93f
 8003110:	8c49      	ldrh	r1, [r1, #34]	@ 0x22
 8003112:	4281      	cmp	r1, r0
 8003114:	d109      	bne.n	800312a <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>

        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
        {
            assert(used > 1);
            const uint16_t index = pos + 1;
            buffer[index < size ? index : 0] = newChar;
 8003116:	2b0a      	cmp	r3, #10
 8003118:	eb04 0242 	add.w	r2, r4, r2, lsl #1
 800311c:	bf28      	it	cs
 800311e:	2300      	movcs	r3, #0
 8003120:	eb04 0343 	add.w	r3, r4, r3, lsl #1
            return buffer[pos];
 8003124:	8c50      	ldrh	r0, [r2, #34]	@ 0x22
            buffer[index < size ? index : 0] = newChar;
 8003126:	8458      	strh	r0, [r3, #34]	@ 0x22
            buffer[pos] = newChar;
 8003128:	8451      	strh	r1, [r2, #34]	@ 0x22
        {
            nextCharacters.replaceAt1(nextCharacters.peekChar());
            nextCharacters.replaceAt0(0x093F);
        }
    }
    return getNextChar();
 800312a:	4620      	mov	r0, r4
}
 800312c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    return getNextChar();
 8003130:	f00f b988 	b.w	8012444 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8003134:	0802444d 	.word	0x0802444d
 8003138:	08024456 	.word	0x08024456
 800313c:	08024501 	.word	0x08024501
 8003140:	0802454b 	.word	0x0802454b
 8003144:	08024559 	.word	0x08024559

08003148 <_ZN8touchgfx12TextProvider18initializeInternalEv>:

void touchgfx::TextProvider::initializeInternal()
{
    fillInputBuffer();
 8003148:	f00f b943 	b.w	80123d2 <_ZN8touchgfx12TextProvider15fillInputBufferEv>

0800314c <_ZN8touchgfx5Texts11setLanguageEt>:
touchgfx::LanguageId touchgfx::Texts::currentLanguage = static_cast<touchgfx::LanguageId>(0);
static const touchgfx::Unicode::UnicodeChar* currentLanguagePtr = 0;
static const uint32_t* currentLanguageIndices = 0;

void touchgfx::Texts::setLanguage(touchgfx::LanguageId id)
{
 800314c:	b538      	push	{r3, r4, r5, lr}
    const touchgfx::TypedText::TypedTextData* currentLanguageTypedText = 0;
    if (id < 1)
 800314e:	bb18      	cbnz	r0, 8003198 <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
    {
        if (languagesArray[id] != 0)
 8003150:	4b12      	ldr	r3, [pc, #72]	@ (800319c <_ZN8touchgfx5Texts11setLanguageEt+0x50>)
 8003152:	4813      	ldr	r0, [pc, #76]	@ (80031a0 <_ZN8touchgfx5Texts11setLanguageEt+0x54>)
 8003154:	681c      	ldr	r4, [r3, #0]
 8003156:	4913      	ldr	r1, [pc, #76]	@ (80031a4 <_ZN8touchgfx5Texts11setLanguageEt+0x58>)
 8003158:	b1b4      	cbz	r4, 8003188 <_ZN8touchgfx5Texts11setLanguageEt+0x3c>
        {
            // Dynamic translation is added
            const TranslationHeader* translation = languagesArray[id];
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 800315a:	6822      	ldr	r2, [r4, #0]
 800315c:	4422      	add	r2, r4
 800315e:	6002      	str	r2, [r0, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
 8003160:	6862      	ldr	r2, [r4, #4]
 8003162:	4422      	add	r2, r4
 8003164:	600a      	str	r2, [r1, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 8003166:	68a2      	ldr	r2, [r4, #8]
 8003168:	4414      	add	r4, r2
        }
    }

    if (currentLanguageTypedText)
    {
        currentLanguage = id;
 800316a:	4b0f      	ldr	r3, [pc, #60]	@ (80031a8 <_ZN8touchgfx5Texts11setLanguageEt+0x5c>)
 800316c:	2200      	movs	r2, #0
 800316e:	801a      	strh	r2, [r3, #0]
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
                                                       TypedTextDatabase::getFonts(), TypedTextDatabase::getInstanceSize());
 8003170:	f000 f82a 	bl	80031c8 <_ZN17TypedTextDatabase8getFontsEv>
 8003174:	4605      	mov	r5, r0
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
 8003176:	f000 f825 	bl	80031c4 <_ZN17TypedTextDatabase15getInstanceSizeEv>
        typedTexts = data;
 800317a:	4b0c      	ldr	r3, [pc, #48]	@ (80031ac <_ZN8touchgfx5Texts11setLanguageEt+0x60>)
 800317c:	601c      	str	r4, [r3, #0]
        fonts = f;
 800317e:	4b0c      	ldr	r3, [pc, #48]	@ (80031b0 <_ZN8touchgfx5Texts11setLanguageEt+0x64>)
 8003180:	601d      	str	r5, [r3, #0]
        numberOfTypedTexts = n;
 8003182:	4b0c      	ldr	r3, [pc, #48]	@ (80031b4 <_ZN8touchgfx5Texts11setLanguageEt+0x68>)
 8003184:	8018      	strh	r0, [r3, #0]
    }
}
 8003186:	e007      	b.n	8003198 <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
            currentLanguagePtr = texts_all_languages;
 8003188:	4b0b      	ldr	r3, [pc, #44]	@ (80031b8 <_ZN8touchgfx5Texts11setLanguageEt+0x6c>)
 800318a:	6003      	str	r3, [r0, #0]
            currentLanguageIndices = staticLanguageIndices[id];
 800318c:	4b0b      	ldr	r3, [pc, #44]	@ (80031bc <_ZN8touchgfx5Texts11setLanguageEt+0x70>)
 800318e:	600b      	str	r3, [r1, #0]
            currentLanguageTypedText = typedTextDatabaseArray[id];
 8003190:	4b0b      	ldr	r3, [pc, #44]	@ (80031c0 <_ZN8touchgfx5Texts11setLanguageEt+0x74>)
 8003192:	681c      	ldr	r4, [r3, #0]
    if (currentLanguageTypedText)
 8003194:	2c00      	cmp	r4, #0
 8003196:	d1e8      	bne.n	800316a <_ZN8touchgfx5Texts11setLanguageEt+0x1e>
}
 8003198:	bd38      	pop	{r3, r4, r5, pc}
 800319a:	bf00      	nop
 800319c:	200032c4 	.word	0x200032c4
 80031a0:	200032bc 	.word	0x200032bc
 80031a4:	200032b8 	.word	0x200032b8
 80031a8:	200032c0 	.word	0x200032c0
 80031ac:	2001409c 	.word	0x2001409c
 80031b0:	200140a4 	.word	0x200140a4
 80031b4:	200140a0 	.word	0x200140a0
 80031b8:	08025ef8 	.word	0x08025ef8
 80031bc:	08025ef4 	.word	0x08025ef4
 80031c0:	08025efc 	.word	0x08025efc

080031c4 <_ZN17TypedTextDatabase15getInstanceSizeEv>:
}

uint16_t getInstanceSize()
{
    return 0;
}
 80031c4:	2000      	movs	r0, #0
 80031c6:	4770      	bx	lr

080031c8 <_ZN17TypedTextDatabase8getFontsEv>:

const touchgfx::Font** getFonts()
{
    return touchgfx_fonts;
}
 80031c8:	4800      	ldr	r0, [pc, #0]	@ (80031cc <_ZN17TypedTextDatabase8getFontsEv+0x4>)
 80031ca:	4770      	bx	lr
 80031cc:	200032c8 	.word	0x200032c8

080031d0 <_GLOBAL__sub_I_touchgfx_fonts>:
    case 2:
        touchgfx_fonts[2] = &(getFont_verdana_10_4bpp());
        break;
    }
}
} // namespace TypedTextDatabase
 80031d0:	b510      	push	{r4, lr}
    &(getFont_verdana_20_4bpp()),
 80031d2:	f7ff fee1 	bl	8002f98 <_Z23getFont_verdana_20_4bppv>
};
 80031d6:	4c04      	ldr	r4, [pc, #16]	@ (80031e8 <_GLOBAL__sub_I_touchgfx_fonts+0x18>)
 80031d8:	6020      	str	r0, [r4, #0]
    &(getFont_verdana_40_4bpp()),
 80031da:	f7ff ff19 	bl	8003010 <_Z23getFont_verdana_40_4bppv>
};
 80031de:	6060      	str	r0, [r4, #4]
    &(getFont_verdana_10_4bpp())
 80031e0:	f7ff fe9e 	bl	8002f20 <_Z23getFont_verdana_10_4bppv>
};
 80031e4:	60a0      	str	r0, [r4, #8]
} // namespace TypedTextDatabase
 80031e6:	bd10      	pop	{r4, pc}
 80031e8:	200032c8 	.word	0x200032c8

080031ec <_ZN8touchgfx22VectorFontRendererImpl20getVectorFontBuffersERPfRiRPhS3_>:
/* DO NOT EDIT THIS FILE */
/* This file is autogenerated by the text-database code generator */
#include <touchgfx/VectorFontRendererImpl.hpp>

void touchgfx::VectorFontRendererImpl::getVectorFontBuffers(float*& pointArray, int& pointArraySize, uint8_t*& commandArray, int& commandArraySize)
{
 80031ec:	b510      	push	{r4, lr}
    pointArray = 0;
 80031ee:	2400      	movs	r4, #0
 80031f0:	6004      	str	r4, [r0, #0]
    pointArraySize = 0;
 80031f2:	600c      	str	r4, [r1, #0]
    commandArray = 0;
 80031f4:	6014      	str	r4, [r2, #0]
    commandArraySize = 0;
 80031f6:	601c      	str	r4, [r3, #0]
}
 80031f8:	bd10      	pop	{r4, pc}

080031fa <_ZN19FrontendApplicationD1Ev>:

class FrontendApplication : public FrontendApplicationBase
{
public:
    FrontendApplication(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplication() { }
 80031fa:	4770      	bx	lr

080031fc <_ZN19FrontendApplicationD0Ev>:
 80031fc:	b510      	push	{r4, lr}
 80031fe:	f44f 71ae 	mov.w	r1, #348	@ 0x15c
 8003202:	4604      	mov	r4, r0
 8003204:	f01e fd81 	bl	8021d0a <_ZdlPvj>
 8003208:	4620      	mov	r0, r4
 800320a:	bd10      	pop	{r4, pc}

0800320c <_ZN19FrontendApplication15handleTickEventEv>:

    virtual void handleTickEvent()
 800320c:	b510      	push	{r4, lr}
 800320e:	4604      	mov	r4, r0
    {
        model.tick();
 8003210:	f8d0 0158 	ldr.w	r0, [r0, #344]	@ 0x158
 8003214:	f000 f813 	bl	800323e <_ZN5Model4tickEv>
        FrontendApplicationBase::handleTickEvent();
 8003218:	4620      	mov	r0, r4
    }
 800321a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        FrontendApplicationBase::handleTickEvent();
 800321e:	f00c bb61 	b.w	800f8e4 <_ZN8touchgfx11Application15handleTickEventEv>
	...

08003224 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>:
#include <gui/common/FrontendApplication.hpp>

FrontendApplication::FrontendApplication(Model& m, FrontendHeap& heap)
 8003224:	b510      	push	{r4, lr}
 8003226:	4604      	mov	r4, r0
    : FrontendApplicationBase(m, heap)
 8003228:	f7ff fbe4 	bl	80029f4 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>
 800322c:	4b01      	ldr	r3, [pc, #4]	@ (8003234 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap+0x10>)
 800322e:	6023      	str	r3, [r4, #0]
{

}
 8003230:	4620      	mov	r0, r4
 8003232:	bd10      	pop	{r4, pc}
 8003234:	08024c18 	.word	0x08024c18

08003238 <_ZN5ModelC1Ev>:
#include <gui/model/Model.hpp>
#include <gui/model/ModelListener.hpp>

Model::Model() : modelListener(0)
 8003238:	2200      	movs	r2, #0
 800323a:	6002      	str	r2, [r0, #0]
{

}
 800323c:	4770      	bx	lr

0800323e <_ZN5Model4tickEv>:

void Model::tick()
{

}
 800323e:	4770      	bx	lr

08003240 <_ZN16Screen1PresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Screen1Presenter() {}
 8003240:	4770      	bx	lr

08003242 <_ZThn4_N16Screen1PresenterD1Ev>:
 8003242:	3804      	subs	r0, #4
 8003244:	4770      	bx	lr

08003246 <_ZN16Screen1Presenter10deactivateEv>:
}

void Screen1Presenter::activate()
{

}
 8003246:	4770      	bx	lr

08003248 <_ZN16Screen1PresenterD0Ev>:
 8003248:	b510      	push	{r4, lr}
 800324a:	2110      	movs	r1, #16
 800324c:	4604      	mov	r4, r0
 800324e:	f01e fd5c 	bl	8021d0a <_ZdlPvj>
 8003252:	4620      	mov	r0, r4
 8003254:	bd10      	pop	{r4, pc}

08003256 <_ZThn4_N16Screen1PresenterD0Ev>:
 8003256:	f1a0 0004 	sub.w	r0, r0, #4
 800325a:	e7f5      	b.n	8003248 <_ZN16Screen1PresenterD0Ev>

0800325c <_ZN16Screen1PresenterC1ER11Screen1View>:
    ModelListener() : model(0) {}
 800325c:	2200      	movs	r2, #0
 800325e:	6082      	str	r2, [r0, #8]
    : view(v)
 8003260:	4a02      	ldr	r2, [pc, #8]	@ (800326c <_ZN16Screen1PresenterC1ER11Screen1View+0x10>)
 8003262:	6002      	str	r2, [r0, #0]
 8003264:	3218      	adds	r2, #24
 8003266:	6042      	str	r2, [r0, #4]
 8003268:	60c1      	str	r1, [r0, #12]
}
 800326a:	4770      	bx	lr
 800326c:	08024c6c 	.word	0x08024c6c

08003270 <_ZN11Screen1View14tearDownScreenEv>:
}

void Screen1View::tearDownScreen()
{
    Screen1ViewBase::tearDownScreen();
}
 8003270:	4770      	bx	lr
	...

08003274 <_ZN11Screen1ViewD1Ev>:

class Screen1View : public Screen1ViewBase
{
public:
    Screen1View();
    virtual ~Screen1View() {}
 8003274:	b510      	push	{r4, lr}
 8003276:	4b03      	ldr	r3, [pc, #12]	@ (8003284 <_ZN11Screen1ViewD1Ev+0x10>)
 8003278:	6003      	str	r3, [r0, #0]
 800327a:	4604      	mov	r4, r0
 800327c:	f7ff fcac 	bl	8002bd8 <_ZN15Screen1ViewBaseD1Ev>
 8003280:	4620      	mov	r0, r4
 8003282:	bd10      	pop	{r4, pc}
 8003284:	08024c94 	.word	0x08024c94

08003288 <_ZN11Screen1ViewD0Ev>:
 8003288:	b510      	push	{r4, lr}
 800328a:	4604      	mov	r4, r0
 800328c:	f7ff fff2 	bl	8003274 <_ZN11Screen1ViewD1Ev>
 8003290:	4620      	mov	r0, r4
 8003292:	f241 0104 	movw	r1, #4100	@ 0x1004
 8003296:	f01e fd38 	bl	8021d0a <_ZdlPvj>
 800329a:	4620      	mov	r0, r4
 800329c:	bd10      	pop	{r4, pc}
	...

080032a0 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
     *
     * @return The color representation depending on LCD color format.
     */
    FORCE_INLINE_FUNCTION static uint16_t getNativeColor(colortype color)
    {
        return ((color >> 8) & 0xF800) | ((color >> 5) & 0x07E0) | ((color >> 3) & 0x001F);
 80032a0:	4b06      	ldr	r3, [pc, #24]	@ (80032bc <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE+0x1c>)
 80032a2:	60c1      	str	r1, [r0, #12]
 80032a4:	094a      	lsrs	r2, r1, #5
 80032a6:	ea03 2311 	and.w	r3, r3, r1, lsr #8
 80032aa:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 80032ae:	4313      	orrs	r3, r2
 80032b0:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 80032b4:	430b      	orrs	r3, r1
 80032b6:	8203      	strh	r3, [r0, #16]
    }
 80032b8:	4770      	bx	lr
 80032ba:	bf00      	nop
 80032bc:	fffff800 	.word	0xfffff800

080032c0 <_ZThn8_N8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
    virtual void setColor(colortype color)
 80032c0:	f1a0 0008 	sub.w	r0, r0, #8
 80032c4:	e7ec      	b.n	80032a0 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>
 80032c6:	bf00      	nop

080032c8 <_ZN11Screen1ViewC1Ev>:
Screen1View::Screen1View()
 80032c8:	b538      	push	{r3, r4, r5, lr}
 80032ca:	4604      	mov	r4, r0
 80032cc:	f7ff fd50 	bl	8002d70 <_ZN15Screen1ViewBaseC1Ev>
 80032d0:	f604 72d8 	addw	r2, r4, #4056	@ 0xfd8
 80032d4:	4b0e      	ldr	r3, [pc, #56]	@ (8003310 <_ZN11Screen1ViewC1Ev+0x48>)
 80032d6:	6023      	str	r3, [r4, #0]
 80032d8:	2300      	movs	r3, #0
 80032da:	6013      	str	r3, [r2, #0]
 80032dc:	f604 72dc 	addw	r2, r4, #4060	@ 0xfdc
 80032e0:	2500      	movs	r5, #0
 80032e2:	6013      	str	r3, [r2, #0]
 80032e4:	2323      	movs	r3, #35	@ 0x23
 80032e6:	f8c4 3fe4 	str.w	r3, [r4, #4068]	@ 0xfe4
 80032ea:	f884 5fe0 	strb.w	r5, [r4, #4064]	@ 0xfe0
 80032ee:	f8c4 5fe8 	str.w	r5, [r4, #4072]	@ 0xfe8
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 80032f2:	f504 607f 	add.w	r0, r4, #4080	@ 0xff0
 80032f6:	f7fe f90d 	bl	8001514 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 80032fa:	4b06      	ldr	r3, [pc, #24]	@ (8003314 <_ZN11Screen1ViewC1Ev+0x4c>)
 80032fc:	f8c4 3ff0 	str.w	r3, [r4, #4080]	@ 0xff0
 8003300:	3324      	adds	r3, #36	@ 0x24
 8003302:	f8c4 5ffc 	str.w	r5, [r4, #4092]	@ 0xffc
 8003306:	f8c4 3ff8 	str.w	r3, [r4, #4088]	@ 0xff8
}
 800330a:	4620      	mov	r0, r4
 800330c:	bd38      	pop	{r3, r4, r5, pc}
 800330e:	bf00      	nop
 8003310:	08024c94 	.word	0x08024c94
 8003314:	08024e04 	.word	0x08024e04

08003318 <_ZN11Screen1View14randomizeColorEv>:
            invalidate();
        }
    }
}
void Screen1View::randomizeColor()
{
 8003318:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800331a:	4604      	mov	r4, r0
    uint32_t rnd;
    HAL_StatusTypeDef status = HAL_RNG_GenerateRandomNumber(&hrng, &rnd);
 800331c:	a901      	add	r1, sp, #4
 800331e:	480a      	ldr	r0, [pc, #40]	@ (8003348 <_ZN11Screen1View14randomizeColorEv+0x30>)
 8003320:	f002 fe08 	bl	8005f34 <HAL_RNG_GenerateRandomNumber>

    if (status == HAL_OK)
 8003324:	b968      	cbnz	r0, 8003342 <_ZN11Screen1View14randomizeColorEv+0x2a>
     *
     * @return The color representation depending on LCD color format.
     */
    FORCE_INLINE_FUNCTION static colortype getColorFromRGB(uint8_t red, uint8_t green, uint8_t blue)
    {
        return 0xFF000000 | (red << 16) | (green << 8) | (blue);
 8003326:	9901      	ldr	r1, [sp, #4]
 8003328:	f041 417f 	orr.w	r1, r1, #4278190080	@ 0xff000000
    else
    {
        currentColor = touchgfx::Color::getColorFromRGB(255, 255, 255);
    }

    circlePainter.setColor(currentColor);
 800332c:	f504 657f 	add.w	r5, r4, #4080	@ 0xff0
 8003330:	f8c4 1fec 	str.w	r1, [r4, #4076]	@ 0xfec
 8003334:	4628      	mov	r0, r5
 8003336:	f7ff ffb3 	bl	80032a0 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>
 800333a:	f8c4 5094 	str.w	r5, [r4, #148]	@ 0x94
    circle1.setPainter(circlePainter);
}
 800333e:	b003      	add	sp, #12
 8003340:	bd30      	pop	{r4, r5, pc}
        currentColor = touchgfx::Color::getColorFromRGB(255, 255, 255);
 8003342:	f04f 31ff 	mov.w	r1, #4294967295
 8003346:	e7f1      	b.n	800332c <_ZN11Screen1View14randomizeColorEv+0x14>
 8003348:	20003084 	.word	0x20003084

0800334c <_ZN11Screen1View17sendMousePositionEss>:
 * @return The absolute (non-negative) value of d.
 */
template <typename T>
T abs(T d)
{
    return (d < 0) ? -d : d;
 800334c:	ea81 73e1 	eor.w	r3, r1, r1, asr #31
 8003350:	eba3 73e1 	sub.w	r3, r3, r1, asr #31
void Screen1View::sendMousePosition(int16_t deltaX, int16_t deltaY)
{
    const int DEADZONE = 1;


    if (abs(deltaX) < DEADZONE) deltaX = 0;
 8003354:	b21b      	sxth	r3, r3
 8003356:	2b00      	cmp	r3, #0
 8003358:	ea82 73e2 	eor.w	r3, r2, r2, asr #31
 800335c:	eba3 73e2 	sub.w	r3, r3, r2, asr #31
    if (abs(deltaY) < DEADZONE) deltaY = 0;
 8003360:	b21b      	sxth	r3, r3
{
 8003362:	b507      	push	{r0, r1, r2, lr}
    if (abs(deltaX) < DEADZONE) deltaX = 0;
 8003364:	bfd8      	it	le
 8003366:	2100      	movle	r1, #0
    if (abs(deltaY) < DEADZONE) deltaY = 0;
 8003368:	2b00      	cmp	r3, #0
 800336a:	dd5f      	ble.n	800342c <_ZN11Screen1View17sendMousePositionEss+0xe0>


    if (deltaX == 0 && deltaY == 0) return;
 800336c:	ea51 0302 	orrs.w	r3, r1, r2
 8003370:	d053      	beq.n	800341a <_ZN11Screen1View17sendMousePositionEss+0xce>
    int16_t adjustedX = deltaY;
    int16_t adjustedY = -deltaX;

    // Apply exponential smoothing để giảm jitter
            const float smoothingFactor = 0.3f; // 0.0 = no smoothing, 1.0 = maximum smoothing
            smoothedDeltaX = smoothedDeltaX * smoothingFactor + adjustedX * (1.0f - smoothingFactor);
 8003372:	ee07 2a90 	vmov	s15, r2
 8003376:	ed9f 6a2f 	vldr	s12, [pc, #188]	@ 8003434 <_ZN11Screen1View17sendMousePositionEss+0xe8>
 800337a:	eddf 6a2f 	vldr	s13, [pc, #188]	@ 8003438 <_ZN11Screen1View17sendMousePositionEss+0xec>
 800337e:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8003382:	f600 73d8 	addw	r3, r0, #4056	@ 0xfd8
 8003386:	ee27 7a06 	vmul.f32	s14, s14, s12
 800338a:	edd3 7a00 	vldr	s15, [r3]
    int16_t adjustedY = -deltaX;
 800338e:	4249      	negs	r1, r1
            smoothedDeltaY = smoothedDeltaY * smoothingFactor + adjustedY * (1.0f - smoothingFactor);
 8003390:	b20a      	sxth	r2, r1
            smoothedDeltaX = smoothedDeltaX * smoothingFactor + adjustedX * (1.0f - smoothingFactor);
 8003392:	eea7 7aa6 	vfma.f32	s14, s15, s13
            smoothedDeltaY = smoothedDeltaY * smoothingFactor + adjustedY * (1.0f - smoothingFactor);
 8003396:	f600 70dc 	addw	r0, r0, #4060	@ 0xfdc
 800339a:	ee07 2a90 	vmov	s15, r2
 800339e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80033a2:	ee67 7a86 	vmul.f32	s15, s15, s12
 80033a6:	ed90 6a00 	vldr	s12, [r0]
 80033aa:	eee6 7a26 	vfma.f32	s15, s12, s13

            smoothedDeltaX *= 1;
            smoothedDeltaY *= 1;


    if (smoothedDeltaX > 127) smoothedDeltaX = 127;
 80033ae:	eddf 6a23 	vldr	s13, [pc, #140]	@ 800343c <_ZN11Screen1View17sendMousePositionEss+0xf0>
 80033b2:	eeb4 7ae6 	vcmpe.f32	s14, s13
 80033b6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80033ba:	dc31      	bgt.n	8003420 <_ZN11Screen1View17sendMousePositionEss+0xd4>
    if (smoothedDeltaX < -128) smoothedDeltaX = -128;
 80033bc:	ed9f 6a20 	vldr	s12, [pc, #128]	@ 8003440 <_ZN11Screen1View17sendMousePositionEss+0xf4>
 80033c0:	eeb4 7a46 	vcmp.f32	s14, s12
 80033c4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80033c8:	bf48      	it	mi
 80033ca:	eeb0 7a46 	vmovmi.f32	s14, s12
    if (smoothedDeltaY > 127) smoothedDeltaY = 127;
 80033ce:	eef4 7ae6 	vcmpe.f32	s15, s13
 80033d2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80033d6:	ed83 7a00 	vstr	s14, [r3]
 80033da:	dc24      	bgt.n	8003426 <_ZN11Screen1View17sendMousePositionEss+0xda>
    if (smoothedDeltaY < -128) smoothedDeltaY = -128;
 80033dc:	eddf 6a18 	vldr	s13, [pc, #96]	@ 8003440 <_ZN11Screen1View17sendMousePositionEss+0xf4>
 80033e0:	eef4 7a66 	vcmp.f32	s15, s13
 80033e4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80033e8:	bf48      	it	mi
 80033ea:	eef0 7a66 	vmovmi.f32	s15, s13

    mouseHID mouseReport = {0};
    mouseReport.mouse_x = (int8_t)smoothedDeltaX;
 80033ee:	eebd 7ac7 	vcvt.s32.f32	s14, s14
    mouseHID mouseReport = {0};
 80033f2:	2300      	movs	r3, #0
 80033f4:	9301      	str	r3, [sp, #4]
 80033f6:	edc0 7a00 	vstr	s15, [r0]
    mouseReport.mouse_x = (int8_t)smoothedDeltaX;
 80033fa:	ee17 3a10 	vmov	r3, s14
    mouseReport.mouse_y = (int8_t)smoothedDeltaY;
 80033fe:	eefd 7ae7 	vcvt.s32.f32	s15, s15
    mouseReport.mouse_x = (int8_t)smoothedDeltaX;
 8003402:	f88d 3005 	strb.w	r3, [sp, #5]
    mouseReport.button = 0;
    mouseReport.wheel = 0;

    USBD_HID_SendReport(&hUsbDeviceHS, (uint8_t *)&mouseReport, sizeof(mouseReport));
 8003406:	2204      	movs	r2, #4
    mouseReport.mouse_y = (int8_t)smoothedDeltaY;
 8003408:	ee17 3a90 	vmov	r3, s15
    USBD_HID_SendReport(&hUsbDeviceHS, (uint8_t *)&mouseReport, sizeof(mouseReport));
 800340c:	480d      	ldr	r0, [pc, #52]	@ (8003444 <_ZN11Screen1View17sendMousePositionEss+0xf8>)
    mouseReport.mouse_y = (int8_t)smoothedDeltaY;
 800340e:	f88d 3006 	strb.w	r3, [sp, #6]
    USBD_HID_SendReport(&hUsbDeviceHS, (uint8_t *)&mouseReport, sizeof(mouseReport));
 8003412:	eb0d 0102 	add.w	r1, sp, r2
 8003416:	f006 fe4e 	bl	800a0b6 <USBD_HID_SendReport>
}
 800341a:	b003      	add	sp, #12
 800341c:	f85d fb04 	ldr.w	pc, [sp], #4
    if (smoothedDeltaX < -128) smoothedDeltaX = -128;
 8003420:	eeb0 7a66 	vmov.f32	s14, s13
 8003424:	e7d3      	b.n	80033ce <_ZN11Screen1View17sendMousePositionEss+0x82>
    if (smoothedDeltaY < -128) smoothedDeltaY = -128;
 8003426:	eddf 7a05 	vldr	s15, [pc, #20]	@ 800343c <_ZN11Screen1View17sendMousePositionEss+0xf0>
 800342a:	e7e0      	b.n	80033ee <_ZN11Screen1View17sendMousePositionEss+0xa2>
    if (deltaX == 0 && deltaY == 0) return;
 800342c:	2900      	cmp	r1, #0
 800342e:	d0f4      	beq.n	800341a <_ZN11Screen1View17sendMousePositionEss+0xce>
    if (abs(deltaY) < DEADZONE) deltaY = 0;
 8003430:	2200      	movs	r2, #0
 8003432:	e79e      	b.n	8003372 <_ZN11Screen1View17sendMousePositionEss+0x26>
 8003434:	3f333333 	.word	0x3f333333
 8003438:	3e99999a 	.word	0x3e99999a
 800343c:	42fe0000 	.word	0x42fe0000
 8003440:	c3000000 	.word	0xc3000000
 8003444:	2000260c 	.word	0x2000260c

08003448 <_ZN11Screen1View14sendMouseClickEa>:

void Screen1View::sendMouseClick(int8_t click)
{
 8003448:	b507      	push	{r0, r1, r2, lr}
    mouseReport.button = click;
    mouseReport.mouse_x = 0;
    mouseReport.mouse_y = 0;
    mouseReport.wheel = 0;

    USBD_HID_SendReport(&hUsbDeviceHS, (uint8_t *)&mouseReport, sizeof(mouseReport));
 800344a:	2204      	movs	r2, #4
    mouseHID mouseReport = {0};
 800344c:	2300      	movs	r3, #0
    mouseReport.button = click;
 800344e:	f88d 1004 	strb.w	r1, [sp, #4]
    USBD_HID_SendReport(&hUsbDeviceHS, (uint8_t *)&mouseReport, sizeof(mouseReport));
 8003452:	4806      	ldr	r0, [pc, #24]	@ (800346c <_ZN11Screen1View14sendMouseClickEa+0x24>)
    mouseHID mouseReport = {0};
 8003454:	f8ad 3005 	strh.w	r3, [sp, #5]
    USBD_HID_SendReport(&hUsbDeviceHS, (uint8_t *)&mouseReport, sizeof(mouseReport));
 8003458:	eb0d 0102 	add.w	r1, sp, r2
    mouseHID mouseReport = {0};
 800345c:	f88d 3007 	strb.w	r3, [sp, #7]
    USBD_HID_SendReport(&hUsbDeviceHS, (uint8_t *)&mouseReport, sizeof(mouseReport));
 8003460:	f006 fe29 	bl	800a0b6 <USBD_HID_SendReport>
}
 8003464:	b003      	add	sp, #12
 8003466:	f85d fb04 	ldr.w	pc, [sp], #4
 800346a:	bf00      	nop
 800346c:	2000260c 	.word	0x2000260c

08003470 <_ZN11Screen1View9leftClickEv>:
{
 8003470:	b510      	push	{r4, lr}
    sendMouseClick(1);       // Gửi tín hiệu nhấn chuột trái
 8003472:	2101      	movs	r1, #1
{
 8003474:	4604      	mov	r4, r0
    sendMouseClick(1);       // Gửi tín hiệu nhấn chuột trái
 8003476:	f7ff ffe7 	bl	8003448 <_ZN11Screen1View14sendMouseClickEa>
    HAL_Delay(10);
 800347a:	200a      	movs	r0, #10
 800347c:	f000 fbc2 	bl	8003c04 <HAL_Delay>
    sendMouseClick(0);       // Gửi tín hiệu thả chuột
 8003480:	4620      	mov	r0, r4
 8003482:	2100      	movs	r1, #0
}
 8003484:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    sendMouseClick(0);       // Gửi tín hiệu thả chuột
 8003488:	f7ff bfde 	b.w	8003448 <_ZN11Screen1View14sendMouseClickEa>

0800348c <_ZN11Screen1View10rightClickEv>:
{
 800348c:	b510      	push	{r4, lr}
    sendMouseClick(2);       // Gửi tín hiệu nhấn chuột phải
 800348e:	2102      	movs	r1, #2
{
 8003490:	4604      	mov	r4, r0
    sendMouseClick(2);       // Gửi tín hiệu nhấn chuột phải
 8003492:	f7ff ffd9 	bl	8003448 <_ZN11Screen1View14sendMouseClickEa>
    HAL_Delay(10);
 8003496:	200a      	movs	r0, #10
 8003498:	f000 fbb4 	bl	8003c04 <HAL_Delay>
    sendMouseClick(0);       // Gửi tín hiệu thả chuột
 800349c:	4620      	mov	r0, r4
 800349e:	2100      	movs	r1, #0
}
 80034a0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    sendMouseClick(0);       // Gửi tín hiệu thả chuột
 80034a4:	f7ff bfd0 	b.w	8003448 <_ZN11Screen1View14sendMouseClickEa>

080034a8 <_ZN11Screen1View11setupScreenEv>:
{
 80034a8:	b510      	push	{r4, lr}
 80034aa:	4604      	mov	r4, r0
    Screen1ViewBase::setupScreen();
 80034ac:	f7ff fb53 	bl	8002b56 <_ZN15Screen1ViewBase11setupScreenEv>
        visible = vis;
 80034b0:	2300      	movs	r3, #0
 80034b2:	f884 3091 	strb.w	r3, [r4, #145]	@ 0x91
}
 80034b6:	bd10      	pop	{r4, pc}

080034b8 <_ZN11Screen1View15handleDragEventERKN8touchgfx9DragEventE>:
{
 80034b8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
     *
     * @return The distance of this drag event.
     */
    int16_t getDeltaX() const
    {
        return dragNewX - dragOldX;
 80034ba:	88ca      	ldrh	r2, [r1, #6]
 80034bc:	894b      	ldrh	r3, [r1, #10]
    deltaX = evt.getDeltaX();
 80034be:	4f21      	ldr	r7, [pc, #132]	@ (8003544 <_ZN11Screen1View15handleDragEventERKN8touchgfx9DragEventE+0x8c>)
    deltaY = evt.getDeltaY();
 80034c0:	4e21      	ldr	r6, [pc, #132]	@ (8003548 <_ZN11Screen1View15handleDragEventERKN8touchgfx9DragEventE+0x90>)
 80034c2:	1a9b      	subs	r3, r3, r2
    deltaX = evt.getDeltaX();
 80034c4:	803b      	strh	r3, [r7, #0]
     *
     * @return The distance of this drag event.
     */
    int16_t getDeltaY() const
    {
        return dragNewY - dragOldY;
 80034c6:	890a      	ldrh	r2, [r1, #8]
 80034c8:	898b      	ldrh	r3, [r1, #12]
 80034ca:	1a9b      	subs	r3, r3, r2
{
 80034cc:	4604      	mov	r4, r0
    deltaY = evt.getDeltaY();
 80034ce:	8033      	strh	r3, [r6, #0]
{
 80034d0:	460d      	mov	r5, r1
    shrinkStartTick = HAL_GetTick();
 80034d2:	f000 fb91 	bl	8003bf8 <HAL_GetTick>
 80034d6:	f9b7 3000 	ldrsh.w	r3, [r7]
 80034da:	f8c4 0fe8 	str.w	r0, [r4, #4072]	@ 0xfe8
 80034de:	2b00      	cmp	r3, #0
 80034e0:	bfb8      	it	lt
 80034e2:	425b      	neglt	r3, r3
    if (abs(deltaX) < DRAG_THRESHOLD && abs(deltaY) < DRAG_THRESHOLD)
 80034e4:	b21b      	sxth	r3, r3
 80034e6:	2b03      	cmp	r3, #3
 80034e8:	dc07      	bgt.n	80034fa <_ZN11Screen1View15handleDragEventERKN8touchgfx9DragEventE+0x42>
 80034ea:	f9b6 3000 	ldrsh.w	r3, [r6]
 80034ee:	2b00      	cmp	r3, #0
 80034f0:	bfb8      	it	lt
 80034f2:	425b      	neglt	r3, r3
 80034f4:	b21b      	sxth	r3, r3
 80034f6:	2b03      	cmp	r3, #3
 80034f8:	dd22      	ble.n	8003540 <_ZN11Screen1View15handleDragEventERKN8touchgfx9DragEventE+0x88>
        return dragNewY;
 80034fa:	f9b5 300c 	ldrsh.w	r3, [r5, #12]
    template <typename T>
    FORCE_INLINE_FUNCTION
#endif
    static Q5 toQ5(T value)
    {
        return Q5((int)(value * (int)Rasterizer::POLY_BASE_SIZE));
 80034fe:	f9b5 200a 	ldrsh.w	r2, [r5, #10]
 8003502:	015b      	lsls	r3, r3, #5
 8003504:	0152      	lsls	r2, r2, #5
        this->circleCenterY = CWRUtil::toQ5(y);
 8003506:	f8c4 309c 	str.w	r3, [r4, #156]	@ 0x9c
    currentRadius = 35;
 800350a:	2323      	movs	r3, #35	@ 0x23
        this->circleCenterX = CWRUtil::toQ5(x);
 800350c:	f8c4 2098 	str.w	r2, [r4, #152]	@ 0x98
 8003510:	f8c4 3fe4 	str.w	r3, [r4, #4068]	@ 0xfe4
    randomizeColor();
 8003514:	4620      	mov	r0, r4
 8003516:	f7ff feff 	bl	8003318 <_ZN11Screen1View14randomizeColorEv>
 800351a:	f8d4 3fe4 	ldr.w	r3, [r4, #4068]	@ 0xfe4
 800351e:	015b      	lsls	r3, r3, #5
        this->circleRadius = MAX(CWRUtil::toQ5(0), this->circleRadius);
 8003520:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8003524:	f8c4 30a0 	str.w	r3, [r4, #160]	@ 0xa0
 8003528:	2501      	movs	r5, #1
        this->circleLineWidth = MAX(CWRUtil::toQ5(0), this->circleLineWidth);
 800352a:	23a0      	movs	r3, #160	@ 0xa0
 800352c:	f8c4 30ac 	str.w	r3, [r4, #172]	@ 0xac
 8003530:	f884 5091 	strb.w	r5, [r4, #145]	@ 0x91
    circle1.invalidate();
 8003534:	f104 006c 	add.w	r0, r4, #108	@ 0x6c
 8003538:	f00a f960 	bl	800d7fc <_ZNK8touchgfx12CanvasWidget10invalidateEv>
    shrinking = true;  // Bắt đầu thu nhỏ trong tick
 800353c:	f884 5fe0 	strb.w	r5, [r4, #4064]	@ 0xfe0
}
 8003540:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8003542:	bf00      	nop
 8003544:	200032d6 	.word	0x200032d6
 8003548:	200032d4 	.word	0x200032d4

0800354c <_ZN11Screen1View16handleClickEventERKN8touchgfx10ClickEventE>:
{
 800354c:	b538      	push	{r3, r4, r5, lr}
 800354e:	460b      	mov	r3, r1
 8003550:	7909      	ldrb	r1, [r1, #4]
 8003552:	4604      	mov	r4, r0
    if (evt.getType() == touchgfx::ClickEvent::PRESSED)
 8003554:	bb31      	cbnz	r1, 80035a4 <_ZN11Screen1View16handleClickEventERKN8touchgfx10ClickEventE+0x58>
 8003556:	f9b3 2008 	ldrsh.w	r2, [r3, #8]
 800355a:	f9b3 3006 	ldrsh.w	r3, [r3, #6]
 800355e:	015b      	lsls	r3, r3, #5
 8003560:	0152      	lsls	r2, r2, #5
        this->circleCenterX = CWRUtil::toQ5(x);
 8003562:	f8c0 3098 	str.w	r3, [r0, #152]	@ 0x98
        currentRadius = 35;
 8003566:	2323      	movs	r3, #35	@ 0x23
        this->circleCenterY = CWRUtil::toQ5(y);
 8003568:	f8c0 209c 	str.w	r2, [r0, #156]	@ 0x9c
 800356c:	f8c0 3fe4 	str.w	r3, [r0, #4068]	@ 0xfe4
        randomizeColor();
 8003570:	f7ff fed2 	bl	8003318 <_ZN11Screen1View14randomizeColorEv>
 8003574:	f8d4 3fe4 	ldr.w	r3, [r4, #4068]	@ 0xfe4
 8003578:	015b      	lsls	r3, r3, #5
        this->circleRadius = MAX(CWRUtil::toQ5(0), this->circleRadius);
 800357a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800357e:	f8c4 30a0 	str.w	r3, [r4, #160]	@ 0xa0
 8003582:	2501      	movs	r5, #1
        this->circleLineWidth = MAX(CWRUtil::toQ5(0), this->circleLineWidth);
 8003584:	23a0      	movs	r3, #160	@ 0xa0
 8003586:	f8c4 30ac 	str.w	r3, [r4, #172]	@ 0xac
        circle1.invalidate();
 800358a:	f104 006c 	add.w	r0, r4, #108	@ 0x6c
 800358e:	f884 5091 	strb.w	r5, [r4, #145]	@ 0x91
 8003592:	f00a f933 	bl	800d7fc <_ZNK8touchgfx12CanvasWidget10invalidateEv>
        shrinkStartTick = HAL_GetTick();
 8003596:	f000 fb2f 	bl	8003bf8 <HAL_GetTick>
        shrinking = true;
 800359a:	f884 5fe0 	strb.w	r5, [r4, #4064]	@ 0xfe0
        shrinkStartTick = HAL_GetTick();
 800359e:	f8c4 0fe8 	str.w	r0, [r4, #4072]	@ 0xfe8
}
 80035a2:	bd38      	pop	{r3, r4, r5, pc}
    else if (evt.getType() == touchgfx::ClickEvent::RELEASED)
 80035a4:	2901      	cmp	r1, #1
 80035a6:	d1fc      	bne.n	80035a2 <_ZN11Screen1View16handleClickEventERKN8touchgfx10ClickEventE+0x56>
		sendMouseClick(true);
 80035a8:	f7ff ff4e 	bl	8003448 <_ZN11Screen1View14sendMouseClickEa>
		HAL_Delay(20);
 80035ac:	2014      	movs	r0, #20
 80035ae:	f000 fb29 	bl	8003c04 <HAL_Delay>
		sendMouseClick(false);
 80035b2:	4620      	mov	r0, r4
 80035b4:	2100      	movs	r1, #0
}
 80035b6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		sendMouseClick(false);
 80035ba:	f7ff bf45 	b.w	8003448 <_ZN11Screen1View14sendMouseClickEa>
	...

080035c0 <_ZN11Screen1View15handleTickEventEv>:
{
 80035c0:	b570      	push	{r4, r5, r6, lr}
	if (deltaX != 0 || deltaY != 0)
 80035c2:	4e20      	ldr	r6, [pc, #128]	@ (8003644 <_ZN11Screen1View15handleTickEventEv+0x84>)
 80035c4:	4d20      	ldr	r5, [pc, #128]	@ (8003648 <_ZN11Screen1View15handleTickEventEv+0x88>)
 80035c6:	f9b6 1000 	ldrsh.w	r1, [r6]
 80035ca:	f9b5 2000 	ldrsh.w	r2, [r5]
 80035ce:	ea51 0302 	orrs.w	r3, r1, r2
{
 80035d2:	4604      	mov	r4, r0
	if (deltaX != 0 || deltaY != 0)
 80035d4:	d004      	beq.n	80035e0 <_ZN11Screen1View15handleTickEventEv+0x20>
	        sendMousePosition(deltaX, deltaY);
 80035d6:	f7ff feb9 	bl	800334c <_ZN11Screen1View17sendMousePositionEss>
	        deltaX = 0;
 80035da:	2300      	movs	r3, #0
 80035dc:	8033      	strh	r3, [r6, #0]
	        deltaY = 0;
 80035de:	802b      	strh	r3, [r5, #0]
    if (shrinking)
 80035e0:	f894 3fe0 	ldrb.w	r3, [r4, #4064]	@ 0xfe0
 80035e4:	b363      	cbz	r3, 8003640 <_ZN11Screen1View15handleTickEventEv+0x80>
        uint32_t elapsed = HAL_GetTick() - shrinkStartTick;
 80035e6:	f000 fb07 	bl	8003bf8 <HAL_GetTick>
 80035ea:	f8d4 3fe8 	ldr.w	r3, [r4, #4072]	@ 0xfe8
 80035ee:	1ac3      	subs	r3, r0, r3
        if (elapsed < DURATION)
 80035f0:	f5b3 7ffa 	cmp.w	r3, #500	@ 0x1f4
 80035f4:	f104 0004 	add.w	r0, r4, #4
 80035f8:	d21c      	bcs.n	8003634 <_ZN11Screen1View15handleTickEventEv+0x74>
            float progress = (float)elapsed / DURATION;  //  0.0 -> 1.0
 80035fa:	ee07 3a90 	vmov	s15, r3
 80035fe:	eddf 6a13 	vldr	s13, [pc, #76]	@ 800364c <_ZN11Screen1View15handleTickEventEv+0x8c>
 8003602:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8003606:	eec7 7a26 	vdiv.f32	s15, s14, s13
            currentRadius = 35 - static_cast<int>(30 * progress); // 35 → 5
 800360a:	eeb3 7a0e 	vmov.f32	s14, #62	@ 0x41f00000  30.0
 800360e:	ee67 7a87 	vmul.f32	s15, s15, s14
 8003612:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8003616:	ee17 3a90 	vmov	r3, s15
 800361a:	f1c3 0323 	rsb	r3, r3, #35	@ 0x23
 800361e:	f8c4 3fe4 	str.w	r3, [r4, #4068]	@ 0xfe4
 8003622:	015b      	lsls	r3, r3, #5
        this->circleRadius = MAX(CWRUtil::toQ5(0), this->circleRadius);
 8003624:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8003628:	f8c4 30a0 	str.w	r3, [r4, #160]	@ 0xa0
}
 800362c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
     *
     * @see Container::invalidate
     */
    void invalidate() const
    {
        container.invalidate();
 8003630:	f00d ba88 	b.w	8010b44 <_ZNK8touchgfx8Drawable10invalidateEv>
            shrinking = false;
 8003634:	2300      	movs	r3, #0
 8003636:	f884 3fe0 	strb.w	r3, [r4, #4064]	@ 0xfe0
 800363a:	f884 3091 	strb.w	r3, [r4, #145]	@ 0x91
 800363e:	e7f5      	b.n	800362c <_ZN11Screen1View15handleTickEventEv+0x6c>
}
 8003640:	bd70      	pop	{r4, r5, r6, pc}
 8003642:	bf00      	nop
 8003644:	200032d6 	.word	0x200032d6
 8003648:	200032d4 	.word	0x200032d4
 800364c:	43fa0000 	.word	0x43fa0000

08003650 <ili9341_GetLcdPixelWidth>:
  */
uint16_t ili9341_GetLcdPixelWidth(void)
{
  /* Return LCD PIXEL WIDTH */
  return ILI9341_LCD_PIXEL_WIDTH;
}
 8003650:	20f0      	movs	r0, #240	@ 0xf0
 8003652:	4770      	bx	lr

08003654 <ili9341_GetLcdPixelHeight>:
  */
uint16_t ili9341_GetLcdPixelHeight(void)
{
  /* Return LCD PIXEL HEIGHT */
  return ILI9341_LCD_PIXEL_HEIGHT;
}
 8003654:	f44f 70a0 	mov.w	r0, #320	@ 0x140
 8003658:	4770      	bx	lr

0800365a <ili9341_DisplayOn>:
  LCD_IO_WriteReg(LCD_Reg);
 800365a:	2029      	movs	r0, #41	@ 0x29
 800365c:	f7fe bcf6 	b.w	800204c <LCD_IO_WriteReg>

08003660 <ili9341_DisplayOff>:
 8003660:	2028      	movs	r0, #40	@ 0x28
 8003662:	f7fe bcf3 	b.w	800204c <LCD_IO_WriteReg>

08003666 <ili9341_Init>:
{
 8003666:	b508      	push	{r3, lr}
  LCD_IO_Init();
 8003668:	f7fe fcc4 	bl	8001ff4 <LCD_IO_Init>
  LCD_IO_WriteReg(LCD_Reg);
 800366c:	20ca      	movs	r0, #202	@ 0xca
 800366e:	f7fe fced 	bl	800204c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8003672:	20c3      	movs	r0, #195	@ 0xc3
 8003674:	f7fe fcce 	bl	8002014 <LCD_IO_WriteData>
 8003678:	2008      	movs	r0, #8
 800367a:	f7fe fccb 	bl	8002014 <LCD_IO_WriteData>
 800367e:	2050      	movs	r0, #80	@ 0x50
 8003680:	f7fe fcc8 	bl	8002014 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8003684:	20cf      	movs	r0, #207	@ 0xcf
 8003686:	f7fe fce1 	bl	800204c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800368a:	2000      	movs	r0, #0
 800368c:	f7fe fcc2 	bl	8002014 <LCD_IO_WriteData>
 8003690:	20c1      	movs	r0, #193	@ 0xc1
 8003692:	f7fe fcbf 	bl	8002014 <LCD_IO_WriteData>
 8003696:	2030      	movs	r0, #48	@ 0x30
 8003698:	f7fe fcbc 	bl	8002014 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800369c:	20ed      	movs	r0, #237	@ 0xed
 800369e:	f7fe fcd5 	bl	800204c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80036a2:	2064      	movs	r0, #100	@ 0x64
 80036a4:	f7fe fcb6 	bl	8002014 <LCD_IO_WriteData>
 80036a8:	2003      	movs	r0, #3
 80036aa:	f7fe fcb3 	bl	8002014 <LCD_IO_WriteData>
 80036ae:	2012      	movs	r0, #18
 80036b0:	f7fe fcb0 	bl	8002014 <LCD_IO_WriteData>
 80036b4:	2081      	movs	r0, #129	@ 0x81
 80036b6:	f7fe fcad 	bl	8002014 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80036ba:	20e8      	movs	r0, #232	@ 0xe8
 80036bc:	f7fe fcc6 	bl	800204c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80036c0:	2085      	movs	r0, #133	@ 0x85
 80036c2:	f7fe fca7 	bl	8002014 <LCD_IO_WriteData>
 80036c6:	2000      	movs	r0, #0
 80036c8:	f7fe fca4 	bl	8002014 <LCD_IO_WriteData>
 80036cc:	2078      	movs	r0, #120	@ 0x78
 80036ce:	f7fe fca1 	bl	8002014 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80036d2:	20cb      	movs	r0, #203	@ 0xcb
 80036d4:	f7fe fcba 	bl	800204c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80036d8:	2039      	movs	r0, #57	@ 0x39
 80036da:	f7fe fc9b 	bl	8002014 <LCD_IO_WriteData>
 80036de:	202c      	movs	r0, #44	@ 0x2c
 80036e0:	f7fe fc98 	bl	8002014 <LCD_IO_WriteData>
 80036e4:	2000      	movs	r0, #0
 80036e6:	f7fe fc95 	bl	8002014 <LCD_IO_WriteData>
 80036ea:	2034      	movs	r0, #52	@ 0x34
 80036ec:	f7fe fc92 	bl	8002014 <LCD_IO_WriteData>
 80036f0:	2002      	movs	r0, #2
 80036f2:	f7fe fc8f 	bl	8002014 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80036f6:	20f7      	movs	r0, #247	@ 0xf7
 80036f8:	f7fe fca8 	bl	800204c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80036fc:	2020      	movs	r0, #32
 80036fe:	f7fe fc89 	bl	8002014 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8003702:	20ea      	movs	r0, #234	@ 0xea
 8003704:	f7fe fca2 	bl	800204c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8003708:	2000      	movs	r0, #0
 800370a:	f7fe fc83 	bl	8002014 <LCD_IO_WriteData>
 800370e:	2000      	movs	r0, #0
 8003710:	f7fe fc80 	bl	8002014 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8003714:	20b1      	movs	r0, #177	@ 0xb1
 8003716:	f7fe fc99 	bl	800204c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800371a:	2000      	movs	r0, #0
 800371c:	f7fe fc7a 	bl	8002014 <LCD_IO_WriteData>
 8003720:	201b      	movs	r0, #27
 8003722:	f7fe fc77 	bl	8002014 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8003726:	20b6      	movs	r0, #182	@ 0xb6
 8003728:	f7fe fc90 	bl	800204c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800372c:	200a      	movs	r0, #10
 800372e:	f7fe fc71 	bl	8002014 <LCD_IO_WriteData>
 8003732:	20a2      	movs	r0, #162	@ 0xa2
 8003734:	f7fe fc6e 	bl	8002014 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8003738:	20c0      	movs	r0, #192	@ 0xc0
 800373a:	f7fe fc87 	bl	800204c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800373e:	2010      	movs	r0, #16
 8003740:	f7fe fc68 	bl	8002014 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8003744:	20c1      	movs	r0, #193	@ 0xc1
 8003746:	f7fe fc81 	bl	800204c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800374a:	2010      	movs	r0, #16
 800374c:	f7fe fc62 	bl	8002014 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8003750:	20c5      	movs	r0, #197	@ 0xc5
 8003752:	f7fe fc7b 	bl	800204c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8003756:	2045      	movs	r0, #69	@ 0x45
 8003758:	f7fe fc5c 	bl	8002014 <LCD_IO_WriteData>
 800375c:	2015      	movs	r0, #21
 800375e:	f7fe fc59 	bl	8002014 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8003762:	20c7      	movs	r0, #199	@ 0xc7
 8003764:	f7fe fc72 	bl	800204c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8003768:	2090      	movs	r0, #144	@ 0x90
 800376a:	f7fe fc53 	bl	8002014 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800376e:	2036      	movs	r0, #54	@ 0x36
 8003770:	f7fe fc6c 	bl	800204c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8003774:	20c8      	movs	r0, #200	@ 0xc8
 8003776:	f7fe fc4d 	bl	8002014 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800377a:	20f2      	movs	r0, #242	@ 0xf2
 800377c:	f7fe fc66 	bl	800204c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8003780:	2000      	movs	r0, #0
 8003782:	f7fe fc47 	bl	8002014 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8003786:	20b0      	movs	r0, #176	@ 0xb0
 8003788:	f7fe fc60 	bl	800204c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800378c:	20c2      	movs	r0, #194	@ 0xc2
 800378e:	f7fe fc41 	bl	8002014 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8003792:	20b6      	movs	r0, #182	@ 0xb6
 8003794:	f7fe fc5a 	bl	800204c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8003798:	200a      	movs	r0, #10
 800379a:	f7fe fc3b 	bl	8002014 <LCD_IO_WriteData>
 800379e:	20a7      	movs	r0, #167	@ 0xa7
 80037a0:	f7fe fc38 	bl	8002014 <LCD_IO_WriteData>
 80037a4:	2027      	movs	r0, #39	@ 0x27
 80037a6:	f7fe fc35 	bl	8002014 <LCD_IO_WriteData>
 80037aa:	2004      	movs	r0, #4
 80037ac:	f7fe fc32 	bl	8002014 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80037b0:	202a      	movs	r0, #42	@ 0x2a
 80037b2:	f7fe fc4b 	bl	800204c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80037b6:	2000      	movs	r0, #0
 80037b8:	f7fe fc2c 	bl	8002014 <LCD_IO_WriteData>
 80037bc:	2000      	movs	r0, #0
 80037be:	f7fe fc29 	bl	8002014 <LCD_IO_WriteData>
 80037c2:	2000      	movs	r0, #0
 80037c4:	f7fe fc26 	bl	8002014 <LCD_IO_WriteData>
 80037c8:	20ef      	movs	r0, #239	@ 0xef
 80037ca:	f7fe fc23 	bl	8002014 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80037ce:	202b      	movs	r0, #43	@ 0x2b
 80037d0:	f7fe fc3c 	bl	800204c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80037d4:	2000      	movs	r0, #0
 80037d6:	f7fe fc1d 	bl	8002014 <LCD_IO_WriteData>
 80037da:	2000      	movs	r0, #0
 80037dc:	f7fe fc1a 	bl	8002014 <LCD_IO_WriteData>
 80037e0:	2001      	movs	r0, #1
 80037e2:	f7fe fc17 	bl	8002014 <LCD_IO_WriteData>
 80037e6:	203f      	movs	r0, #63	@ 0x3f
 80037e8:	f7fe fc14 	bl	8002014 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80037ec:	20f6      	movs	r0, #246	@ 0xf6
 80037ee:	f7fe fc2d 	bl	800204c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80037f2:	2001      	movs	r0, #1
 80037f4:	f7fe fc0e 	bl	8002014 <LCD_IO_WriteData>
 80037f8:	2000      	movs	r0, #0
 80037fa:	f7fe fc0b 	bl	8002014 <LCD_IO_WriteData>
 80037fe:	2006      	movs	r0, #6
 8003800:	f7fe fc08 	bl	8002014 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8003804:	202c      	movs	r0, #44	@ 0x2c
 8003806:	f7fe fc21 	bl	800204c <LCD_IO_WriteReg>
  LCD_Delay(200);
 800380a:	20c8      	movs	r0, #200	@ 0xc8
 800380c:	f7fe fc6c 	bl	80020e8 <LCD_Delay>
  LCD_IO_WriteReg(LCD_Reg);
 8003810:	2026      	movs	r0, #38	@ 0x26
 8003812:	f7fe fc1b 	bl	800204c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8003816:	2001      	movs	r0, #1
 8003818:	f7fe fbfc 	bl	8002014 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800381c:	20e0      	movs	r0, #224	@ 0xe0
 800381e:	f7fe fc15 	bl	800204c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8003822:	200f      	movs	r0, #15
 8003824:	f7fe fbf6 	bl	8002014 <LCD_IO_WriteData>
 8003828:	2029      	movs	r0, #41	@ 0x29
 800382a:	f7fe fbf3 	bl	8002014 <LCD_IO_WriteData>
 800382e:	2024      	movs	r0, #36	@ 0x24
 8003830:	f7fe fbf0 	bl	8002014 <LCD_IO_WriteData>
 8003834:	200c      	movs	r0, #12
 8003836:	f7fe fbed 	bl	8002014 <LCD_IO_WriteData>
 800383a:	200e      	movs	r0, #14
 800383c:	f7fe fbea 	bl	8002014 <LCD_IO_WriteData>
 8003840:	2009      	movs	r0, #9
 8003842:	f7fe fbe7 	bl	8002014 <LCD_IO_WriteData>
 8003846:	204e      	movs	r0, #78	@ 0x4e
 8003848:	f7fe fbe4 	bl	8002014 <LCD_IO_WriteData>
 800384c:	2078      	movs	r0, #120	@ 0x78
 800384e:	f7fe fbe1 	bl	8002014 <LCD_IO_WriteData>
 8003852:	203c      	movs	r0, #60	@ 0x3c
 8003854:	f7fe fbde 	bl	8002014 <LCD_IO_WriteData>
 8003858:	2009      	movs	r0, #9
 800385a:	f7fe fbdb 	bl	8002014 <LCD_IO_WriteData>
 800385e:	2013      	movs	r0, #19
 8003860:	f7fe fbd8 	bl	8002014 <LCD_IO_WriteData>
 8003864:	2005      	movs	r0, #5
 8003866:	f7fe fbd5 	bl	8002014 <LCD_IO_WriteData>
 800386a:	2017      	movs	r0, #23
 800386c:	f7fe fbd2 	bl	8002014 <LCD_IO_WriteData>
 8003870:	2011      	movs	r0, #17
 8003872:	f7fe fbcf 	bl	8002014 <LCD_IO_WriteData>
 8003876:	2000      	movs	r0, #0
 8003878:	f7fe fbcc 	bl	8002014 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800387c:	20e1      	movs	r0, #225	@ 0xe1
 800387e:	f7fe fbe5 	bl	800204c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8003882:	2000      	movs	r0, #0
 8003884:	f7fe fbc6 	bl	8002014 <LCD_IO_WriteData>
 8003888:	2016      	movs	r0, #22
 800388a:	f7fe fbc3 	bl	8002014 <LCD_IO_WriteData>
 800388e:	201b      	movs	r0, #27
 8003890:	f7fe fbc0 	bl	8002014 <LCD_IO_WriteData>
 8003894:	2004      	movs	r0, #4
 8003896:	f7fe fbbd 	bl	8002014 <LCD_IO_WriteData>
 800389a:	2011      	movs	r0, #17
 800389c:	f7fe fbba 	bl	8002014 <LCD_IO_WriteData>
 80038a0:	2007      	movs	r0, #7
 80038a2:	f7fe fbb7 	bl	8002014 <LCD_IO_WriteData>
 80038a6:	2031      	movs	r0, #49	@ 0x31
 80038a8:	f7fe fbb4 	bl	8002014 <LCD_IO_WriteData>
 80038ac:	2033      	movs	r0, #51	@ 0x33
 80038ae:	f7fe fbb1 	bl	8002014 <LCD_IO_WriteData>
 80038b2:	2042      	movs	r0, #66	@ 0x42
 80038b4:	f7fe fbae 	bl	8002014 <LCD_IO_WriteData>
 80038b8:	2005      	movs	r0, #5
 80038ba:	f7fe fbab 	bl	8002014 <LCD_IO_WriteData>
 80038be:	200c      	movs	r0, #12
 80038c0:	f7fe fba8 	bl	8002014 <LCD_IO_WriteData>
 80038c4:	200a      	movs	r0, #10
 80038c6:	f7fe fba5 	bl	8002014 <LCD_IO_WriteData>
 80038ca:	2028      	movs	r0, #40	@ 0x28
 80038cc:	f7fe fba2 	bl	8002014 <LCD_IO_WriteData>
 80038d0:	202f      	movs	r0, #47	@ 0x2f
 80038d2:	f7fe fb9f 	bl	8002014 <LCD_IO_WriteData>
 80038d6:	200f      	movs	r0, #15
 80038d8:	f7fe fb9c 	bl	8002014 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80038dc:	2011      	movs	r0, #17
 80038de:	f7fe fbb5 	bl	800204c <LCD_IO_WriteReg>
  LCD_Delay(200);
 80038e2:	20c8      	movs	r0, #200	@ 0xc8
 80038e4:	f7fe fc00 	bl	80020e8 <LCD_Delay>
  LCD_IO_WriteReg(LCD_Reg);
 80038e8:	2029      	movs	r0, #41	@ 0x29
 80038ea:	f7fe fbaf 	bl	800204c <LCD_IO_WriteReg>
}
 80038ee:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  LCD_IO_WriteReg(LCD_Reg);
 80038f2:	202c      	movs	r0, #44	@ 0x2c
 80038f4:	f7fe bbaa 	b.w	800204c <LCD_IO_WriteReg>

080038f8 <ili9341_ReadID>:
{
 80038f8:	b508      	push	{r3, lr}
  LCD_IO_Init();
 80038fa:	f7fe fb7b 	bl	8001ff4 <LCD_IO_Init>
  return (LCD_IO_ReadData(RegValue, ReadSize));
 80038fe:	2103      	movs	r1, #3
 8003900:	20d3      	movs	r0, #211	@ 0xd3
 8003902:	f7fe fbbf 	bl	8002084 <LCD_IO_ReadData>
}
 8003906:	b280      	uxth	r0, r0
 8003908:	bd08      	pop	{r3, pc}

0800390a <stmpe811_Reset>:
  * @brief  Reset the stmpe811 by Software.
  * @param  DeviceAddr: Device address on communication Bus.  
  * @retval None
  */
void stmpe811_Reset(uint16_t DeviceAddr)
{
 800390a:	b510      	push	{r4, lr}
  /* Power Down the stmpe811 */  
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 2);
 800390c:	b2c4      	uxtb	r4, r0
 800390e:	2202      	movs	r2, #2
 8003910:	2103      	movs	r1, #3
 8003912:	4620      	mov	r0, r4
 8003914:	f7fe fb24 	bl	8001f60 <IOE_Write>

  /* Wait for a delay to ensure registers erasing */
  IOE_Delay(10); 
 8003918:	200a      	movs	r0, #10
 800391a:	f7fe fb69 	bl	8001ff0 <IOE_Delay>
  
  /* Power On the Codec after the power off => all registers are reinitialized */
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 0);
 800391e:	4620      	mov	r0, r4
 8003920:	2200      	movs	r2, #0
 8003922:	2103      	movs	r1, #3
 8003924:	f7fe fb1c 	bl	8001f60 <IOE_Write>
  
  /* Wait for a delay to ensure registers erasing */
  IOE_Delay(2); 
}
 8003928:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Delay(2); 
 800392c:	2002      	movs	r0, #2
 800392e:	f7fe bb5f 	b.w	8001ff0 <IOE_Delay>

08003932 <stmpe811_ReadID>:
  * @brief  Read the stmpe811 IO Expander device ID.
  * @param  DeviceAddr: Device address on communication Bus.  
  * @retval The Device ID (two bytes).
  */
uint16_t stmpe811_ReadID(uint16_t DeviceAddr)
{
 8003932:	b538      	push	{r3, r4, r5, lr}
 8003934:	4604      	mov	r4, r0
  /* Initialize IO BUS layer */
  IOE_Init(); 
  
  /* Return the device ID value */
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8003936:	b2e4      	uxtb	r4, r4
  IOE_Init(); 
 8003938:	f7fe fb10 	bl	8001f5c <IOE_Init>
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 800393c:	2100      	movs	r1, #0
 800393e:	4620      	mov	r0, r4
 8003940:	f7fe fb26 	bl	8001f90 <IOE_Read>
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 8003944:	2101      	movs	r1, #1
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8003946:	4605      	mov	r5, r0
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 8003948:	4620      	mov	r0, r4
 800394a:	f7fe fb21 	bl	8001f90 <IOE_Read>
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 800394e:	ea40 2005 	orr.w	r0, r0, r5, lsl #8
}
 8003952:	b280      	uxth	r0, r0
 8003954:	bd38      	pop	{r3, r4, r5, pc}

08003956 <stmpe811_TS_DetectTouch>:
  * @brief  Return if there is touch detected or not.
  * @param  DeviceAddr: Device address on communication Bus.
  * @retval Touch detected state.
  */
uint8_t stmpe811_TS_DetectTouch(uint16_t DeviceAddr)
{
 8003956:	b510      	push	{r4, lr}
  uint8_t state;
  uint8_t ret = 0;
  
  state = ((IOE_Read(DeviceAddr, STMPE811_REG_TSC_CTRL) & (uint8_t)STMPE811_TS_CTRL_STATUS) == (uint8_t)0x80);
 8003958:	b2c4      	uxtb	r4, r0
 800395a:	2140      	movs	r1, #64	@ 0x40
 800395c:	4620      	mov	r0, r4
 800395e:	f7fe fb17 	bl	8001f90 <IOE_Read>
  
  if(state > 0)
 8003962:	0603      	lsls	r3, r0, #24
 8003964:	d507      	bpl.n	8003976 <stmpe811_TS_DetectTouch+0x20>
  {
    if(IOE_Read(DeviceAddr, STMPE811_REG_FIFO_SIZE) > 0)
 8003966:	214c      	movs	r1, #76	@ 0x4c
 8003968:	4620      	mov	r0, r4
 800396a:	f7fe fb11 	bl	8001f90 <IOE_Read>
 800396e:	3800      	subs	r0, #0
 8003970:	bf18      	it	ne
 8003972:	2001      	movne	r0, #1
    /* Enable the FIFO again */
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
  }
  
  return ret;
}
 8003974:	bd10      	pop	{r4, pc}
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8003976:	2201      	movs	r2, #1
 8003978:	214b      	movs	r1, #75	@ 0x4b
 800397a:	4620      	mov	r0, r4
 800397c:	f7fe faf0 	bl	8001f60 <IOE_Write>
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 8003980:	4620      	mov	r0, r4
 8003982:	2200      	movs	r2, #0
 8003984:	214b      	movs	r1, #75	@ 0x4b
 8003986:	f7fe faeb 	bl	8001f60 <IOE_Write>
  uint8_t ret = 0;
 800398a:	2000      	movs	r0, #0
 800398c:	e7f2      	b.n	8003974 <stmpe811_TS_DetectTouch+0x1e>

0800398e <stmpe811_TS_GetXY>:
  * @param  X: Pointer to X position value
  * @param  Y: Pointer to Y position value   
  * @retval None.
  */
void stmpe811_TS_GetXY(uint16_t DeviceAddr, uint16_t *X, uint16_t *Y)
{
 800398e:	b573      	push	{r0, r1, r4, r5, r6, lr}
  uint8_t  dataXYZ[4];
  uint32_t uldataXYZ;
  
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 8003990:	2304      	movs	r3, #4
 8003992:	b2c4      	uxtb	r4, r0
{
 8003994:	460e      	mov	r6, r1
 8003996:	4615      	mov	r5, r2
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 8003998:	21d7      	movs	r1, #215	@ 0xd7
 800399a:	eb0d 0203 	add.w	r2, sp, r3
 800399e:	4620      	mov	r0, r4
 80039a0:	f7fe fb10 	bl	8001fc4 <IOE_ReadMultiple>
  
  /* Calculate positions values */
  uldataXYZ = (dataXYZ[0] << 24)|(dataXYZ[1] << 16)|(dataXYZ[2] << 8)|(dataXYZ[3] << 0);     
 80039a4:	9b01      	ldr	r3, [sp, #4]
 80039a6:	ba1b      	rev	r3, r3
  *X = (uldataXYZ >> 20) & 0x00000FFF;     
 80039a8:	0d1a      	lsrs	r2, r3, #20
  *Y = (uldataXYZ >>  8) & 0x00000FFF;     
 80039aa:	f3c3 230b 	ubfx	r3, r3, #8, #12
  *X = (uldataXYZ >> 20) & 0x00000FFF;     
 80039ae:	8032      	strh	r2, [r6, #0]
  
  /* Reset FIFO */
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 80039b0:	4620      	mov	r0, r4
  *Y = (uldataXYZ >>  8) & 0x00000FFF;     
 80039b2:	802b      	strh	r3, [r5, #0]
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 80039b4:	2201      	movs	r2, #1
 80039b6:	214b      	movs	r1, #75	@ 0x4b
 80039b8:	f7fe fad2 	bl	8001f60 <IOE_Write>
  /* Enable the FIFO again */
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 80039bc:	2200      	movs	r2, #0
 80039be:	214b      	movs	r1, #75	@ 0x4b
 80039c0:	4620      	mov	r0, r4
 80039c2:	f7fe facd 	bl	8001f60 <IOE_Write>
}
 80039c6:	b002      	add	sp, #8
 80039c8:	bd70      	pop	{r4, r5, r6, pc}
	...

080039cc <stmpe811_Init>:
{
 80039cc:	b510      	push	{r4, lr}
  uint8_t idx = 0;
  
  /* Check all the registered instances */
  for(idx = 0; idx < STMPE811_MAX_INSTANCE ; idx ++)
  {
    if(stmpe811[idx] == DeviceAddr)
 80039ce:	4a0a      	ldr	r2, [pc, #40]	@ (80039f8 <stmpe811_Init+0x2c>)
 80039d0:	7813      	ldrb	r3, [r2, #0]
 80039d2:	4298      	cmp	r0, r3
{
 80039d4:	4604      	mov	r4, r0
    if(stmpe811[idx] == DeviceAddr)
 80039d6:	d00d      	beq.n	80039f4 <stmpe811_Init+0x28>
 80039d8:	7851      	ldrb	r1, [r2, #1]
 80039da:	4288      	cmp	r0, r1
 80039dc:	d00a      	beq.n	80039f4 <stmpe811_Init+0x28>
 80039de:	b10b      	cbz	r3, 80039e4 <stmpe811_Init+0x18>
 80039e0:	b941      	cbnz	r1, 80039f4 <stmpe811_Init+0x28>
  for(idx = 0; idx < STMPE811_MAX_INSTANCE ; idx ++)
 80039e2:	2301      	movs	r3, #1
      stmpe811[empty] = DeviceAddr;
 80039e4:	54d4      	strb	r4, [r2, r3]
      IOE_Init(); 
 80039e6:	f7fe fab9 	bl	8001f5c <IOE_Init>
      stmpe811_Reset(DeviceAddr);
 80039ea:	4620      	mov	r0, r4
}
 80039ec:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
      stmpe811_Reset(DeviceAddr);
 80039f0:	f7ff bf8b 	b.w	800390a <stmpe811_Reset>
}
 80039f4:	bd10      	pop	{r4, pc}
 80039f6:	bf00      	nop
 80039f8:	200032d8 	.word	0x200032d8

080039fc <stmpe811_EnableGlobalIT>:
{
 80039fc:	b510      	push	{r4, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_CTRL);
 80039fe:	b2c4      	uxtb	r4, r0
 8003a00:	2109      	movs	r1, #9
 8003a02:	4620      	mov	r0, r4
 8003a04:	f7fe fac4 	bl	8001f90 <IOE_Read>
  tmp |= (uint8_t)STMPE811_GIT_EN;
 8003a08:	f040 0201 	orr.w	r2, r0, #1
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp); 
 8003a0c:	b2d2      	uxtb	r2, r2
 8003a0e:	4620      	mov	r0, r4
 8003a10:	2109      	movs	r1, #9
}
 8003a12:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp); 
 8003a16:	f7fe baa3 	b.w	8001f60 <IOE_Write>

08003a1a <stmpe811_DisableGlobalIT>:
{
 8003a1a:	b510      	push	{r4, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_CTRL);
 8003a1c:	b2c4      	uxtb	r4, r0
 8003a1e:	2109      	movs	r1, #9
 8003a20:	4620      	mov	r0, r4
 8003a22:	f7fe fab5 	bl	8001f90 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp);
 8003a26:	2109      	movs	r1, #9
 8003a28:	f000 02fe 	and.w	r2, r0, #254	@ 0xfe
 8003a2c:	4620      	mov	r0, r4
}
 8003a2e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp);
 8003a32:	f7fe ba95 	b.w	8001f60 <IOE_Write>

08003a36 <stmpe811_EnableITSource>:
{
 8003a36:	b538      	push	{r3, r4, r5, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 8003a38:	b2c4      	uxtb	r4, r0
{
 8003a3a:	460d      	mov	r5, r1
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 8003a3c:	4620      	mov	r0, r4
 8003a3e:	210a      	movs	r1, #10
 8003a40:	f7fe faa6 	bl	8001f90 <IOE_Read>
  tmp |= Source; 
 8003a44:	ea40 0205 	orr.w	r2, r0, r5
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 8003a48:	b2d2      	uxtb	r2, r2
 8003a4a:	4620      	mov	r0, r4
 8003a4c:	210a      	movs	r1, #10
}
 8003a4e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 8003a52:	f7fe ba85 	b.w	8001f60 <IOE_Write>

08003a56 <stmpe811_TS_EnableIT>:
{
 8003a56:	b510      	push	{r4, lr}
 8003a58:	4604      	mov	r4, r0
  IOE_ITConfig();
 8003a5a:	f7fe fa80 	bl	8001f5e <IOE_ITConfig>
  stmpe811_EnableITSource(DeviceAddr, STMPE811_TS_IT); 
 8003a5e:	4620      	mov	r0, r4
 8003a60:	211f      	movs	r1, #31
 8003a62:	f7ff ffe8 	bl	8003a36 <stmpe811_EnableITSource>
  stmpe811_EnableGlobalIT(DeviceAddr);
 8003a66:	4620      	mov	r0, r4
}
 8003a68:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  stmpe811_EnableGlobalIT(DeviceAddr);
 8003a6c:	f7ff bfc6 	b.w	80039fc <stmpe811_EnableGlobalIT>

08003a70 <stmpe811_DisableITSource>:
{
 8003a70:	b538      	push	{r3, r4, r5, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 8003a72:	b2c4      	uxtb	r4, r0
{
 8003a74:	460d      	mov	r5, r1
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 8003a76:	4620      	mov	r0, r4
 8003a78:	210a      	movs	r1, #10
 8003a7a:	f7fe fa89 	bl	8001f90 <IOE_Read>
  tmp &= ~Source; 
 8003a7e:	ea20 0205 	bic.w	r2, r0, r5
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 8003a82:	b2d2      	uxtb	r2, r2
 8003a84:	4620      	mov	r0, r4
 8003a86:	210a      	movs	r1, #10
}
 8003a88:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 8003a8c:	f7fe ba68 	b.w	8001f60 <IOE_Write>

08003a90 <stmpe811_TS_DisableIT>:
{
 8003a90:	b510      	push	{r4, lr}
 8003a92:	4604      	mov	r4, r0
  stmpe811_DisableGlobalIT(DeviceAddr);
 8003a94:	f7ff ffc1 	bl	8003a1a <stmpe811_DisableGlobalIT>
  stmpe811_DisableITSource(DeviceAddr, STMPE811_TS_IT); 
 8003a98:	4620      	mov	r0, r4
 8003a9a:	211f      	movs	r1, #31
}
 8003a9c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  stmpe811_DisableITSource(DeviceAddr, STMPE811_TS_IT); 
 8003aa0:	f7ff bfe6 	b.w	8003a70 <stmpe811_DisableITSource>

08003aa4 <stmpe811_ReadGITStatus>:
{
 8003aa4:	b510      	push	{r4, lr}
  return((IOE_Read(DeviceAddr, STMPE811_REG_INT_STA) & Source));
 8003aa6:	b2c0      	uxtb	r0, r0
{
 8003aa8:	460c      	mov	r4, r1
  return((IOE_Read(DeviceAddr, STMPE811_REG_INT_STA) & Source));
 8003aaa:	210b      	movs	r1, #11
 8003aac:	f7fe fa70 	bl	8001f90 <IOE_Read>
}
 8003ab0:	4020      	ands	r0, r4
 8003ab2:	bd10      	pop	{r4, pc}

08003ab4 <stmpe811_TS_ITStatus>:
  return(stmpe811_ReadGITStatus(DeviceAddr, STMPE811_TS_IT));
 8003ab4:	211f      	movs	r1, #31
 8003ab6:	f7ff bff5 	b.w	8003aa4 <stmpe811_ReadGITStatus>

08003aba <stmpe811_ClearGlobalIT>:
{
 8003aba:	460a      	mov	r2, r1
  IOE_Write(DeviceAddr, STMPE811_REG_INT_STA, Source);
 8003abc:	b2c0      	uxtb	r0, r0
 8003abe:	210b      	movs	r1, #11
 8003ac0:	f7fe ba4e 	b.w	8001f60 <IOE_Write>

08003ac4 <stmpe811_TS_ClearIT>:
  stmpe811_ClearGlobalIT(DeviceAddr, STMPE811_TS_IT);
 8003ac4:	211f      	movs	r1, #31
 8003ac6:	f7ff bff8 	b.w	8003aba <stmpe811_ClearGlobalIT>

08003aca <stmpe811_IO_EnableAF>:
{
 8003aca:	b538      	push	{r3, r4, r5, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_IO_AF);
 8003acc:	b2c4      	uxtb	r4, r0
{
 8003ace:	460d      	mov	r5, r1
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_IO_AF);
 8003ad0:	4620      	mov	r0, r4
 8003ad2:	2117      	movs	r1, #23
 8003ad4:	f7fe fa5c 	bl	8001f90 <IOE_Read>
  tmp &= ~(uint8_t)IO_Pin;   
 8003ad8:	ea20 0205 	bic.w	r2, r0, r5
  IOE_Write(DeviceAddr, STMPE811_REG_IO_AF, tmp); 
 8003adc:	b2d2      	uxtb	r2, r2
 8003ade:	4620      	mov	r0, r4
 8003ae0:	2117      	movs	r1, #23
}
 8003ae2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_IO_AF, tmp); 
 8003ae6:	f7fe ba3b 	b.w	8001f60 <IOE_Write>

08003aea <stmpe811_TS_Start>:
{
 8003aea:	b570      	push	{r4, r5, r6, lr}
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 8003aec:	b2c4      	uxtb	r4, r0
{
 8003aee:	4606      	mov	r6, r0
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 8003af0:	2104      	movs	r1, #4
 8003af2:	4620      	mov	r0, r4
 8003af4:	f7fe fa4c 	bl	8001f90 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 8003af8:	2104      	movs	r1, #4
 8003afa:	f000 02fb 	and.w	r2, r0, #251	@ 0xfb
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 8003afe:	4605      	mov	r5, r0
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 8003b00:	4620      	mov	r0, r4
 8003b02:	f7fe fa2d 	bl	8001f60 <IOE_Write>
  stmpe811_IO_EnableAF(DeviceAddr, STMPE811_TOUCH_IO_ALL);
 8003b06:	4630      	mov	r0, r6
 8003b08:	21f0      	movs	r1, #240	@ 0xf0
 8003b0a:	f7ff ffde 	bl	8003aca <stmpe811_IO_EnableAF>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 8003b0e:	f005 02f8 	and.w	r2, r5, #248	@ 0xf8
 8003b12:	4620      	mov	r0, r4
 8003b14:	2104      	movs	r1, #4
 8003b16:	f7fe fa23 	bl	8001f60 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_ADC_CTRL1, 0x49);
 8003b1a:	2249      	movs	r2, #73	@ 0x49
 8003b1c:	2120      	movs	r1, #32
 8003b1e:	4620      	mov	r0, r4
 8003b20:	f7fe fa1e 	bl	8001f60 <IOE_Write>
  IOE_Delay(2); 
 8003b24:	2002      	movs	r0, #2
 8003b26:	f7fe fa63 	bl	8001ff0 <IOE_Delay>
  IOE_Write(DeviceAddr, STMPE811_REG_ADC_CTRL2, 0x01);
 8003b2a:	4620      	mov	r0, r4
 8003b2c:	2201      	movs	r2, #1
 8003b2e:	2121      	movs	r1, #33	@ 0x21
 8003b30:	f7fe fa16 	bl	8001f60 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_CFG, 0x9A); 
 8003b34:	4620      	mov	r0, r4
 8003b36:	229a      	movs	r2, #154	@ 0x9a
 8003b38:	2141      	movs	r1, #65	@ 0x41
 8003b3a:	f7fe fa11 	bl	8001f60 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_TH, 0x01);
 8003b3e:	4620      	mov	r0, r4
 8003b40:	2201      	movs	r2, #1
 8003b42:	214a      	movs	r1, #74	@ 0x4a
 8003b44:	f7fe fa0c 	bl	8001f60 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8003b48:	4620      	mov	r0, r4
 8003b4a:	2201      	movs	r2, #1
 8003b4c:	214b      	movs	r1, #75	@ 0x4b
 8003b4e:	f7fe fa07 	bl	8001f60 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 8003b52:	4620      	mov	r0, r4
 8003b54:	2200      	movs	r2, #0
 8003b56:	214b      	movs	r1, #75	@ 0x4b
 8003b58:	f7fe fa02 	bl	8001f60 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_FRACT_XYZ, 0x01);
 8003b5c:	4620      	mov	r0, r4
 8003b5e:	2201      	movs	r2, #1
 8003b60:	2156      	movs	r1, #86	@ 0x56
 8003b62:	f7fe f9fd 	bl	8001f60 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_I_DRIVE, 0x01);
 8003b66:	4620      	mov	r0, r4
 8003b68:	2201      	movs	r2, #1
 8003b6a:	2158      	movs	r1, #88	@ 0x58
 8003b6c:	f7fe f9f8 	bl	8001f60 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_CTRL, 0x01);
 8003b70:	4620      	mov	r0, r4
 8003b72:	2201      	movs	r2, #1
 8003b74:	2140      	movs	r1, #64	@ 0x40
 8003b76:	f7fe f9f3 	bl	8001f60 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_STA, 0xFF);
 8003b7a:	4620      	mov	r0, r4
 8003b7c:	22ff      	movs	r2, #255	@ 0xff
 8003b7e:	210b      	movs	r1, #11
 8003b80:	f7fe f9ee 	bl	8001f60 <IOE_Write>
}
 8003b84:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
  IOE_Delay(2); 
 8003b88:	2002      	movs	r0, #2
 8003b8a:	f7fe ba31 	b.w	8001ff0 <IOE_Delay>
	...

08003b90 <SystemInit>:
  */
void SystemInit(void)
{
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 8003b90:	4b05      	ldr	r3, [pc, #20]	@ (8003ba8 <SystemInit+0x18>)
 8003b92:	f8d3 2088 	ldr.w	r2, [r3, #136]	@ 0x88
 8003b96:	f442 0270 	orr.w	r2, r2, #15728640	@ 0xf00000
 8003b9a:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88

  /* Configure the Vector Table location add offset address ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#else
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 8003b9e:	f04f 6200 	mov.w	r2, #134217728	@ 0x8000000
 8003ba2:	609a      	str	r2, [r3, #8]
#endif
}
 8003ba4:	4770      	bx	lr
 8003ba6:	bf00      	nop
 8003ba8:	e000ed00 	.word	0xe000ed00

08003bac <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 8003bac:	b508      	push	{r3, lr}
  /* Configure Flash prefetch, Instruction cache, Data cache */ 
#if (INSTRUCTION_CACHE_ENABLE != 0U)
  __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
 8003bae:	4b0b      	ldr	r3, [pc, #44]	@ (8003bdc <HAL_Init+0x30>)
 8003bb0:	681a      	ldr	r2, [r3, #0]
 8003bb2:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8003bb6:	601a      	str	r2, [r3, #0]
#endif /* INSTRUCTION_CACHE_ENABLE */

#if (DATA_CACHE_ENABLE != 0U)
  __HAL_FLASH_DATA_CACHE_ENABLE();
 8003bb8:	681a      	ldr	r2, [r3, #0]
 8003bba:	f442 6280 	orr.w	r2, r2, #1024	@ 0x400
 8003bbe:	601a      	str	r2, [r3, #0]
#endif /* DATA_CACHE_ENABLE */

#if (PREFETCH_ENABLE != 0U)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 8003bc0:	681a      	ldr	r2, [r3, #0]
 8003bc2:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 8003bc6:	601a      	str	r2, [r3, #0]
#endif /* PREFETCH_ENABLE */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 8003bc8:	2003      	movs	r0, #3
 8003bca:	f000 f82f 	bl	8003c2c <HAL_NVIC_SetPriorityGrouping>

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  HAL_InitTick(TICK_INT_PRIORITY);
 8003bce:	2000      	movs	r0, #0
 8003bd0:	f7fe fce4 	bl	800259c <HAL_InitTick>

  /* Init the low level hardware */
  HAL_MspInit();
 8003bd4:	f7fe fa96 	bl	8002104 <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
}
 8003bd8:	2000      	movs	r0, #0
 8003bda:	bd08      	pop	{r3, pc}
 8003bdc:	40023c00 	.word	0x40023c00

08003be0 <HAL_IncTick>:
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick += uwTickFreq;
 8003be0:	4a03      	ldr	r2, [pc, #12]	@ (8003bf0 <HAL_IncTick+0x10>)
 8003be2:	4b04      	ldr	r3, [pc, #16]	@ (8003bf4 <HAL_IncTick+0x14>)
 8003be4:	6811      	ldr	r1, [r2, #0]
 8003be6:	781b      	ldrb	r3, [r3, #0]
 8003be8:	440b      	add	r3, r1
 8003bea:	6013      	str	r3, [r2, #0]
}
 8003bec:	4770      	bx	lr
 8003bee:	bf00      	nop
 8003bf0:	200032dc 	.word	0x200032dc
 8003bf4:	200000c8 	.word	0x200000c8

08003bf8 <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
 8003bf8:	4b01      	ldr	r3, [pc, #4]	@ (8003c00 <HAL_GetTick+0x8>)
 8003bfa:	6818      	ldr	r0, [r3, #0]
}
 8003bfc:	4770      	bx	lr
 8003bfe:	bf00      	nop
 8003c00:	200032dc 	.word	0x200032dc

08003c04 <HAL_Delay>:
  *       implementations in user file.
  * @param Delay specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 8003c04:	b538      	push	{r3, r4, r5, lr}
 8003c06:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 8003c08:	f7ff fff6 	bl	8003bf8 <HAL_GetTick>
  uint32_t wait = Delay;

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 8003c0c:	1c63      	adds	r3, r4, #1
  {
    wait += (uint32_t)(uwTickFreq);
 8003c0e:	bf1c      	itt	ne
 8003c10:	4b05      	ldrne	r3, [pc, #20]	@ (8003c28 <HAL_Delay+0x24>)
 8003c12:	781b      	ldrbne	r3, [r3, #0]
  uint32_t tickstart = HAL_GetTick();
 8003c14:	4605      	mov	r5, r0
    wait += (uint32_t)(uwTickFreq);
 8003c16:	bf18      	it	ne
 8003c18:	18e4      	addne	r4, r4, r3
  }

  while((HAL_GetTick() - tickstart) < wait)
 8003c1a:	f7ff ffed 	bl	8003bf8 <HAL_GetTick>
 8003c1e:	1b43      	subs	r3, r0, r5
 8003c20:	42a3      	cmp	r3, r4
 8003c22:	d3fa      	bcc.n	8003c1a <HAL_Delay+0x16>
  {
  }
}
 8003c24:	bd38      	pop	{r3, r4, r5, pc}
 8003c26:	bf00      	nop
 8003c28:	200000c8 	.word	0x200000c8

08003c2c <HAL_NVIC_SetPriorityGrouping>:
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 8003c2c:	4907      	ldr	r1, [pc, #28]	@ (8003c4c <HAL_NVIC_SetPriorityGrouping+0x20>)
 8003c2e:	68ca      	ldr	r2, [r1, #12]
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 8003c30:	f422 62e0 	bic.w	r2, r2, #1792	@ 0x700
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 8003c34:	0203      	lsls	r3, r0, #8
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 8003c36:	0412      	lsls	r2, r2, #16
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 8003c38:	f403 63e0 	and.w	r3, r3, #1792	@ 0x700
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 8003c3c:	0c12      	lsrs	r2, r2, #16
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 8003c3e:	4313      	orrs	r3, r2
  reg_value  =  (reg_value                                   |
 8003c40:	f043 63bf 	orr.w	r3, r3, #100139008	@ 0x5f80000
 8003c44:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
  SCB->AIRCR =  reg_value;
 8003c48:	60cb      	str	r3, [r1, #12]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
  
  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
}
 8003c4a:	4770      	bx	lr
 8003c4c:	e000ed00 	.word	0xe000ed00

08003c50 <HAL_NVIC_SetPriority>:
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 8003c50:	4b16      	ldr	r3, [pc, #88]	@ (8003cac <HAL_NVIC_SetPriority+0x5c>)
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.          
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 8003c52:	b530      	push	{r4, r5, lr}
 8003c54:	68dc      	ldr	r4, [r3, #12]
 8003c56:	f3c4 2402 	ubfx	r4, r4, #8, #3
{
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 8003c5a:	f1c4 0307 	rsb	r3, r4, #7
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8003c5e:	1d25      	adds	r5, r4, #4
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 8003c60:	2b04      	cmp	r3, #4
 8003c62:	bf28      	it	cs
 8003c64:	2304      	movcs	r3, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8003c66:	2d06      	cmp	r5, #6

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8003c68:	f04f 35ff 	mov.w	r5, #4294967295
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8003c6c:	bf8c      	ite	hi
 8003c6e:	3c03      	subhi	r4, #3
 8003c70:	2400      	movls	r4, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8003c72:	fa05 f303 	lsl.w	r3, r5, r3
 8003c76:	ea21 0303 	bic.w	r3, r1, r3
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 8003c7a:	40a5      	lsls	r5, r4
 8003c7c:	ea22 0205 	bic.w	r2, r2, r5
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8003c80:	40a3      	lsls	r3, r4
  if ((int32_t)(IRQn) >= 0)
 8003c82:	2800      	cmp	r0, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8003c84:	ea43 0302 	orr.w	r3, r3, r2
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8003c88:	bfac      	ite	ge
 8003c8a:	f100 4060 	addge.w	r0, r0, #3758096384	@ 0xe0000000
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8003c8e:	4a08      	ldrlt	r2, [pc, #32]	@ (8003cb0 <HAL_NVIC_SetPriority+0x60>)
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8003c90:	ea4f 1303 	mov.w	r3, r3, lsl #4
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8003c94:	bfb8      	it	lt
 8003c96:	f000 000f 	andlt.w	r0, r0, #15
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8003c9a:	b2db      	uxtb	r3, r3
 8003c9c:	bfaa      	itet	ge
 8003c9e:	f500 4061 	addge.w	r0, r0, #57600	@ 0xe100
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8003ca2:	5413      	strblt	r3, [r2, r0]
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8003ca4:	f880 3300 	strbge.w	r3, [r0, #768]	@ 0x300
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  
  prioritygroup = NVIC_GetPriorityGrouping();
  
  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
}
 8003ca8:	bd30      	pop	{r4, r5, pc}
 8003caa:	bf00      	nop
 8003cac:	e000ed00 	.word	0xe000ed00
 8003cb0:	e000ed14 	.word	0xe000ed14

08003cb4 <HAL_NVIC_EnableIRQ>:
  if ((int32_t)(IRQn) >= 0)
 8003cb4:	2800      	cmp	r0, #0
 8003cb6:	db07      	blt.n	8003cc8 <HAL_NVIC_EnableIRQ+0x14>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8003cb8:	4a04      	ldr	r2, [pc, #16]	@ (8003ccc <HAL_NVIC_EnableIRQ+0x18>)
 8003cba:	0941      	lsrs	r1, r0, #5
 8003cbc:	2301      	movs	r3, #1
 8003cbe:	f000 001f 	and.w	r0, r0, #31
 8003cc2:	4083      	lsls	r3, r0
 8003cc4:	f842 3021 	str.w	r3, [r2, r1, lsl #2]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
}
 8003cc8:	4770      	bx	lr
 8003cca:	bf00      	nop
 8003ccc:	e000e100 	.word	0xe000e100

08003cd0 <HAL_CRC_Init>:
  *         parameters in the CRC_InitTypeDef and create the associated handle.
  * @param  hcrc CRC handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
 8003cd0:	b510      	push	{r4, lr}
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
 8003cd2:	4604      	mov	r4, r0
 8003cd4:	b150      	cbz	r0, 8003cec <HAL_CRC_Init+0x1c>
  }

  /* Check the parameters */
  assert_param(IS_CRC_ALL_INSTANCE(hcrc->Instance));

  if (hcrc->State == HAL_CRC_STATE_RESET)
 8003cd6:	7943      	ldrb	r3, [r0, #5]
 8003cd8:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 8003cdc:	b913      	cbnz	r3, 8003ce4 <HAL_CRC_Init+0x14>
  {
    /* Allocate lock resource and initialize it */
    hcrc->Lock = HAL_UNLOCKED;
 8003cde:	7102      	strb	r2, [r0, #4]
    /* Init the low level hardware */
    HAL_CRC_MspInit(hcrc);
 8003ce0:	f7fe fa30 	bl	8002144 <HAL_CRC_MspInit>
  }

  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;
 8003ce4:	2301      	movs	r3, #1
 8003ce6:	7163      	strb	r3, [r4, #5]

  /* Return function status */
  return HAL_OK;
 8003ce8:	2000      	movs	r0, #0
}
 8003cea:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8003cec:	2001      	movs	r0, #1
 8003cee:	e7fc      	b.n	8003cea <HAL_CRC_Init+0x1a>

08003cf0 <HAL_DMA2D_Init>:
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_Init(DMA2D_HandleTypeDef *hdma2d)
{
 8003cf0:	b510      	push	{r4, lr}
  /* Check the DMA2D peripheral state */
  if (hdma2d == NULL)
 8003cf2:	4604      	mov	r4, r0
 8003cf4:	b320      	cbz	r0, 8003d40 <HAL_DMA2D_Init+0x50>

    /* Init the low level hardware */
    hdma2d->MspInitCallback(hdma2d);
  }
#else
  if (hdma2d->State == HAL_DMA2D_STATE_RESET)
 8003cf6:	f890 3039 	ldrb.w	r3, [r0, #57]	@ 0x39
 8003cfa:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 8003cfe:	b91b      	cbnz	r3, 8003d08 <HAL_DMA2D_Init+0x18>
  {
    /* Allocate lock resource and initialize it */
    hdma2d->Lock = HAL_UNLOCKED;
 8003d00:	f880 2038 	strb.w	r2, [r0, #56]	@ 0x38
    /* Init the low level hardware */
    HAL_DMA2D_MspInit(hdma2d);
 8003d04:	f7fe fa36 	bl	8002174 <HAL_DMA2D_MspInit>
  }
#endif /* (USE_HAL_DMA2D_REGISTER_CALLBACKS) */

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 8003d08:	2302      	movs	r3, #2
 8003d0a:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39

  /* DMA2D CR register configuration -------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, hdma2d->Init.Mode);
 8003d0e:	6823      	ldr	r3, [r4, #0]
 8003d10:	6861      	ldr	r1, [r4, #4]
 8003d12:	681a      	ldr	r2, [r3, #0]
 8003d14:	f422 3240 	bic.w	r2, r2, #196608	@ 0x30000
 8003d18:	430a      	orrs	r2, r1
 8003d1a:	601a      	str	r2, [r3, #0]

  /* DMA2D OPFCCR register configuration ---------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM, hdma2d->Init.ColorMode);
 8003d1c:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8003d1e:	68a1      	ldr	r1, [r4, #8]
 8003d20:	f022 0207 	bic.w	r2, r2, #7
 8003d24:	430a      	orrs	r2, r1
 8003d26:	635a      	str	r2, [r3, #52]	@ 0x34

  /* DMA2D OOR register configuration ------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
 8003d28:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 8003d2a:	68e1      	ldr	r1, [r4, #12]
 8003d2c:	f36f 020d 	bfc	r2, #0, #14
 8003d30:	430a      	orrs	r2, r1
 8003d32:	641a      	str	r2, [r3, #64]	@ 0x40


  /* Update error code */
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 8003d34:	2000      	movs	r0, #0

  /* Initialize the DMA2D state*/
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 8003d36:	2301      	movs	r3, #1
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 8003d38:	63e0      	str	r0, [r4, #60]	@ 0x3c
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 8003d3a:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39

  return HAL_OK;
}
 8003d3e:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8003d40:	2001      	movs	r0, #1
 8003d42:	e7fc      	b.n	8003d3e <HAL_DMA2D_Init+0x4e>

08003d44 <HAL_DMA2D_LineEventCallback>:
  * @brief  Transfer watermark callback.
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval None
  */
__weak void HAL_DMA2D_LineEventCallback(DMA2D_HandleTypeDef *hdma2d)
 8003d44:	4770      	bx	lr

08003d46 <HAL_DMA2D_CLUTLoadingCpltCallback>:
  * @brief  CLUT Transfer Complete callback.
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval None
  */
__weak void HAL_DMA2D_CLUTLoadingCpltCallback(DMA2D_HandleTypeDef *hdma2d)
 8003d46:	4770      	bx	lr

08003d48 <HAL_DMA2D_IRQHandler>:
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 8003d48:	6803      	ldr	r3, [r0, #0]
{
 8003d4a:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 8003d4c:	685e      	ldr	r6, [r3, #4]
  uint32_t crflags = READ_REG(hdma2d->Instance->CR);
 8003d4e:	681d      	ldr	r5, [r3, #0]
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
 8003d50:	07f2      	lsls	r2, r6, #31
{
 8003d52:	4604      	mov	r4, r0
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
 8003d54:	d514      	bpl.n	8003d80 <HAL_DMA2D_IRQHandler+0x38>
    if ((crflags & DMA2D_IT_TE) != 0U)
 8003d56:	05e9      	lsls	r1, r5, #23
 8003d58:	d512      	bpl.n	8003d80 <HAL_DMA2D_IRQHandler+0x38>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TE);
 8003d5a:	681a      	ldr	r2, [r3, #0]
 8003d5c:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
 8003d60:	601a      	str	r2, [r3, #0]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TE;
 8003d62:	6bc2      	ldr	r2, [r0, #60]	@ 0x3c
 8003d64:	f042 0201 	orr.w	r2, r2, #1
 8003d68:	63c2      	str	r2, [r0, #60]	@ 0x3c
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TE);
 8003d6a:	2201      	movs	r2, #1
 8003d6c:	609a      	str	r2, [r3, #8]
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 8003d6e:	2304      	movs	r3, #4
 8003d70:	f880 3039 	strb.w	r3, [r0, #57]	@ 0x39
      __HAL_UNLOCK(hdma2d);
 8003d74:	2300      	movs	r3, #0
 8003d76:	f880 3038 	strb.w	r3, [r0, #56]	@ 0x38
      if (hdma2d->XferErrorCallback != NULL)
 8003d7a:	6943      	ldr	r3, [r0, #20]
 8003d7c:	b103      	cbz	r3, 8003d80 <HAL_DMA2D_IRQHandler+0x38>
        hdma2d->XferErrorCallback(hdma2d);
 8003d7e:	4798      	blx	r3
  if ((isrflags & DMA2D_FLAG_CE) != 0U)
 8003d80:	06b2      	lsls	r2, r6, #26
 8003d82:	d516      	bpl.n	8003db2 <HAL_DMA2D_IRQHandler+0x6a>
    if ((crflags & DMA2D_IT_CE) != 0U)
 8003d84:	04ab      	lsls	r3, r5, #18
 8003d86:	d514      	bpl.n	8003db2 <HAL_DMA2D_IRQHandler+0x6a>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CE);
 8003d88:	6823      	ldr	r3, [r4, #0]
 8003d8a:	681a      	ldr	r2, [r3, #0]
 8003d8c:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
 8003d90:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CE);
 8003d92:	2220      	movs	r2, #32
 8003d94:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CE;
 8003d96:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 8003d98:	f043 0302 	orr.w	r3, r3, #2
 8003d9c:	63e3      	str	r3, [r4, #60]	@ 0x3c
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 8003d9e:	2304      	movs	r3, #4
 8003da0:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39
      __HAL_UNLOCK(hdma2d);
 8003da4:	2300      	movs	r3, #0
 8003da6:	f884 3038 	strb.w	r3, [r4, #56]	@ 0x38
      if (hdma2d->XferErrorCallback != NULL)
 8003daa:	6963      	ldr	r3, [r4, #20]
 8003dac:	b10b      	cbz	r3, 8003db2 <HAL_DMA2D_IRQHandler+0x6a>
        hdma2d->XferErrorCallback(hdma2d);
 8003dae:	4620      	mov	r0, r4
 8003db0:	4798      	blx	r3
  if ((isrflags & DMA2D_FLAG_CAE) != 0U)
 8003db2:	0730      	lsls	r0, r6, #28
 8003db4:	d516      	bpl.n	8003de4 <HAL_DMA2D_IRQHandler+0x9c>
    if ((crflags & DMA2D_IT_CAE) != 0U)
 8003db6:	0529      	lsls	r1, r5, #20
 8003db8:	d514      	bpl.n	8003de4 <HAL_DMA2D_IRQHandler+0x9c>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CAE);
 8003dba:	6823      	ldr	r3, [r4, #0]
 8003dbc:	681a      	ldr	r2, [r3, #0]
 8003dbe:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 8003dc2:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CAE);
 8003dc4:	2208      	movs	r2, #8
 8003dc6:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CAE;
 8003dc8:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 8003dca:	f043 0304 	orr.w	r3, r3, #4
 8003dce:	63e3      	str	r3, [r4, #60]	@ 0x3c
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 8003dd0:	2304      	movs	r3, #4
 8003dd2:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39
      __HAL_UNLOCK(hdma2d);
 8003dd6:	2300      	movs	r3, #0
 8003dd8:	f884 3038 	strb.w	r3, [r4, #56]	@ 0x38
      if (hdma2d->XferErrorCallback != NULL)
 8003ddc:	6963      	ldr	r3, [r4, #20]
 8003dde:	b10b      	cbz	r3, 8003de4 <HAL_DMA2D_IRQHandler+0x9c>
        hdma2d->XferErrorCallback(hdma2d);
 8003de0:	4620      	mov	r0, r4
 8003de2:	4798      	blx	r3
  if ((isrflags & DMA2D_FLAG_TW) != 0U)
 8003de4:	0772      	lsls	r2, r6, #29
 8003de6:	d50b      	bpl.n	8003e00 <HAL_DMA2D_IRQHandler+0xb8>
    if ((crflags & DMA2D_IT_TW) != 0U)
 8003de8:	056b      	lsls	r3, r5, #21
 8003dea:	d509      	bpl.n	8003e00 <HAL_DMA2D_IRQHandler+0xb8>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TW);
 8003dec:	6823      	ldr	r3, [r4, #0]
 8003dee:	681a      	ldr	r2, [r3, #0]
 8003df0:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 8003df4:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TW);
 8003df6:	2204      	movs	r2, #4
 8003df8:	609a      	str	r2, [r3, #8]
      HAL_DMA2D_LineEventCallback(hdma2d);
 8003dfa:	4620      	mov	r0, r4
 8003dfc:	f7ff ffa2 	bl	8003d44 <HAL_DMA2D_LineEventCallback>
  if ((isrflags & DMA2D_FLAG_TC) != 0U)
 8003e00:	07b0      	lsls	r0, r6, #30
 8003e02:	d514      	bpl.n	8003e2e <HAL_DMA2D_IRQHandler+0xe6>
    if ((crflags & DMA2D_IT_TC) != 0U)
 8003e04:	05a9      	lsls	r1, r5, #22
 8003e06:	d512      	bpl.n	8003e2e <HAL_DMA2D_IRQHandler+0xe6>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TC);
 8003e08:	6823      	ldr	r3, [r4, #0]
 8003e0a:	681a      	ldr	r2, [r3, #0]
 8003e0c:	f422 7200 	bic.w	r2, r2, #512	@ 0x200
 8003e10:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TC);
 8003e12:	2202      	movs	r2, #2
 8003e14:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 8003e16:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 8003e18:	63e3      	str	r3, [r4, #60]	@ 0x3c
      hdma2d->State = HAL_DMA2D_STATE_READY;
 8003e1a:	2301      	movs	r3, #1
 8003e1c:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39
      __HAL_UNLOCK(hdma2d);
 8003e20:	2300      	movs	r3, #0
 8003e22:	f884 3038 	strb.w	r3, [r4, #56]	@ 0x38
      if (hdma2d->XferCpltCallback != NULL)
 8003e26:	6923      	ldr	r3, [r4, #16]
 8003e28:	b10b      	cbz	r3, 8003e2e <HAL_DMA2D_IRQHandler+0xe6>
        hdma2d->XferCpltCallback(hdma2d);
 8003e2a:	4620      	mov	r0, r4
 8003e2c:	4798      	blx	r3
  if ((isrflags & DMA2D_FLAG_CTC) != 0U)
 8003e2e:	06f2      	lsls	r2, r6, #27
 8003e30:	d513      	bpl.n	8003e5a <HAL_DMA2D_IRQHandler+0x112>
    if ((crflags & DMA2D_IT_CTC) != 0U)
 8003e32:	04eb      	lsls	r3, r5, #19
 8003e34:	d511      	bpl.n	8003e5a <HAL_DMA2D_IRQHandler+0x112>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC);
 8003e36:	6823      	ldr	r3, [r4, #0]
 8003e38:	681a      	ldr	r2, [r3, #0]
 8003e3a:	f422 5280 	bic.w	r2, r2, #4096	@ 0x1000
 8003e3e:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CTC);
 8003e40:	2210      	movs	r2, #16
 8003e42:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 8003e44:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 8003e46:	63e3      	str	r3, [r4, #60]	@ 0x3c
      hdma2d->State = HAL_DMA2D_STATE_READY;
 8003e48:	2301      	movs	r3, #1
 8003e4a:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39
      __HAL_UNLOCK(hdma2d);
 8003e4e:	2300      	movs	r3, #0
 8003e50:	f884 3038 	strb.w	r3, [r4, #56]	@ 0x38
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
 8003e54:	4620      	mov	r0, r4
 8003e56:	f7ff ff76 	bl	8003d46 <HAL_DMA2D_CLUTLoadingCpltCallback>
}
 8003e5a:	bd70      	pop	{r4, r5, r6, pc}

08003e5c <HAL_DMA2D_ConfigLayer>:
  *                   This parameter can be one of the following values:
  *                   DMA2D_BACKGROUND_LAYER(0) / DMA2D_FOREGROUND_LAYER(1)
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_ConfigLayer(DMA2D_HandleTypeDef *hdma2d, uint32_t LayerIdx)
{
 8003e5c:	b5f0      	push	{r4, r5, r6, r7, lr}
      assert_param(IS_DMA2D_ALPHA_MODE(hdma2d->LayerCfg[LayerIdx].AlphaMode));
    }
  }

  /* Process locked */
  __HAL_LOCK(hdma2d);
 8003e5e:	f890 2038 	ldrb.w	r2, [r0, #56]	@ 0x38
 8003e62:	2a01      	cmp	r2, #1
{
 8003e64:	4603      	mov	r3, r0
 8003e66:	f04f 0002 	mov.w	r0, #2
  __HAL_LOCK(hdma2d);
 8003e6a:	d02b      	beq.n	8003ec4 <HAL_DMA2D_ConfigLayer+0x68>
 8003e6c:	2201      	movs	r2, #1
 8003e6e:	f883 2038 	strb.w	r2, [r3, #56]	@ 0x38

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 8003e72:	f883 0039 	strb.w	r0, [r3, #57]	@ 0x39

  pLayerCfg = &hdma2d->LayerCfg[LayerIdx];

  /* Prepare the value to be written to the BGPFCCR or FGPFCCR register */
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 8003e76:	eb03 1201 	add.w	r2, r3, r1, lsl #4
 8003e7a:	e9d2 4007 	ldrd	r4, r0, [r2, #28]
 8003e7e:	6a55      	ldr	r5, [r2, #36]	@ 0x24
 8003e80:	4f17      	ldr	r7, [pc, #92]	@ (8003ee0 <HAL_DMA2D_ConfigLayer+0x84>)
 8003e82:	ea44 4000 	orr.w	r0, r4, r0, lsl #16
  regMask  = DMA2D_BGPFCCR_CM | DMA2D_BGPFCCR_AM | DMA2D_BGPFCCR_ALPHA;


  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8003e86:	3c09      	subs	r4, #9
 8003e88:	2c01      	cmp	r4, #1
  {
    regValue |= (pLayerCfg->InputAlpha & DMA2D_BGPFCCR_ALPHA);
 8003e8a:	bf9c      	itt	ls
 8003e8c:	f005 427f 	andls.w	r2, r5, #4278190080	@ 0xff000000
 8003e90:	4310      	orrls	r0, r2
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 8003e92:	ea4f 1601 	mov.w	r6, r1, lsl #4

  /* Configure the background DMA2D layer */
  if (LayerIdx == DMA2D_BACKGROUND_LAYER)
  {
    /* Write DMA2D BGPFCCR register */
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 8003e96:	681a      	ldr	r2, [r3, #0]
    regValue |= (pLayerCfg->InputAlpha << DMA2D_BGPFCCR_ALPHA_Pos);
 8003e98:	bf88      	it	hi
 8003e9a:	ea40 6005 	orrhi.w	r0, r0, r5, lsl #24
  if (LayerIdx == DMA2D_BACKGROUND_LAYER)
 8003e9e:	b991      	cbnz	r1, 8003ec6 <HAL_DMA2D_ConfigLayer+0x6a>
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 8003ea0:	6a51      	ldr	r1, [r2, #36]	@ 0x24
 8003ea2:	4039      	ands	r1, r7
 8003ea4:	4301      	orrs	r1, r0
 8003ea6:	6251      	str	r1, [r2, #36]	@ 0x24

    /* DMA2D BGOR register configuration -------------------------------------*/
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);

    /* DMA2D BGCOLR register configuration -------------------------------------*/
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8003ea8:	2c01      	cmp	r4, #1
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
 8003eaa:	6999      	ldr	r1, [r3, #24]
 8003eac:	6191      	str	r1, [r2, #24]
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8003eae:	d803      	bhi.n	8003eb8 <HAL_DMA2D_ConfigLayer+0x5c>
    {
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE | DMA2D_BGCOLR_GREEN | \
 8003eb0:	6a59      	ldr	r1, [r3, #36]	@ 0x24
 8003eb2:	f021 417f 	bic.w	r1, r1, #4278190080	@ 0xff000000
 8003eb6:	6291      	str	r1, [r2, #40]	@ 0x28
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | \
                                                                   DMA2D_FGCOLR_RED));
    }
  }
  /* Initialize the DMA2D state*/
  hdma2d->State = HAL_DMA2D_STATE_READY;
 8003eb8:	2201      	movs	r2, #1

  /* Process unlocked */
  __HAL_UNLOCK(hdma2d);
 8003eba:	2000      	movs	r0, #0
  hdma2d->State = HAL_DMA2D_STATE_READY;
 8003ebc:	f883 2039 	strb.w	r2, [r3, #57]	@ 0x39
  __HAL_UNLOCK(hdma2d);
 8003ec0:	f883 0038 	strb.w	r0, [r3, #56]	@ 0x38

  return HAL_OK;
}
 8003ec4:	bdf0      	pop	{r4, r5, r6, r7, pc}
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
 8003ec6:	69d1      	ldr	r1, [r2, #28]
 8003ec8:	4039      	ands	r1, r7
 8003eca:	4301      	orrs	r1, r0
 8003ecc:	61d1      	str	r1, [r2, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 8003ece:	1999      	adds	r1, r3, r6
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8003ed0:	2c01      	cmp	r4, #1
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 8003ed2:	6989      	ldr	r1, [r1, #24]
 8003ed4:	6111      	str	r1, [r2, #16]
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | \
 8003ed6:	bf9c      	itt	ls
 8003ed8:	f025 457f 	bicls.w	r5, r5, #4278190080	@ 0xff000000
 8003edc:	6215      	strls	r5, [r2, #32]
 8003ede:	e7eb      	b.n	8003eb8 <HAL_DMA2D_ConfigLayer+0x5c>
 8003ee0:	00fcfff0 	.word	0x00fcfff0

08003ee4 <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 8003ee4:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8003ee8:	f8df 91bc 	ldr.w	r9, [pc, #444]	@ 80040a8 <HAL_GPIO_Init+0x1c4>
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
        SYSCFG->EXTICR[position >> 2U] = temp;

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
 8003eec:	4a6c      	ldr	r2, [pc, #432]	@ (80040a0 <HAL_GPIO_Init+0x1bc>)
  for(position = 0U; position < GPIO_NUMBER; position++)
 8003eee:	2300      	movs	r3, #0
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 8003ef0:	680d      	ldr	r5, [r1, #0]
    ioposition = 0x01U << position;
 8003ef2:	2401      	movs	r4, #1
 8003ef4:	409c      	lsls	r4, r3
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 8003ef6:	ea04 0605 	and.w	r6, r4, r5
    if(iocurrent == ioposition)
 8003efa:	43ac      	bics	r4, r5
 8003efc:	f040 80b7 	bne.w	800406e <HAL_GPIO_Init+0x18a>
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 8003f00:	684d      	ldr	r5, [r1, #4]
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8003f02:	2703      	movs	r7, #3
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 8003f04:	f005 0403 	and.w	r4, r5, #3
 8003f08:	ea4f 0843 	mov.w	r8, r3, lsl #1
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8003f0c:	fa07 fc08 	lsl.w	ip, r7, r8
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 8003f10:	1e67      	subs	r7, r4, #1
 8003f12:	2f01      	cmp	r7, #1
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8003f14:	ea6f 0c0c 	mvn.w	ip, ip
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 8003f18:	d834      	bhi.n	8003f84 <HAL_GPIO_Init+0xa0>
        temp = GPIOx->OSPEEDR; 
 8003f1a:	6887      	ldr	r7, [r0, #8]
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8003f1c:	ea07 0e0c 	and.w	lr, r7, ip
        temp |= (GPIO_Init->Speed << (position * 2U));
 8003f20:	68cf      	ldr	r7, [r1, #12]
 8003f22:	fa07 f708 	lsl.w	r7, r7, r8
 8003f26:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->OSPEEDR = temp;
 8003f2a:	6087      	str	r7, [r0, #8]
        temp = GPIOx->OTYPER;
 8003f2c:	6847      	ldr	r7, [r0, #4]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 8003f2e:	ea27 0e06 	bic.w	lr, r7, r6
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
 8003f32:	f3c5 1700 	ubfx	r7, r5, #4, #1
 8003f36:	409f      	lsls	r7, r3
 8003f38:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->OTYPER = temp;
 8003f3c:	6047      	str	r7, [r0, #4]
        temp = GPIOx->PUPDR;
 8003f3e:	68c7      	ldr	r7, [r0, #12]
        temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 8003f40:	ea07 0e0c 	and.w	lr, r7, ip
        temp |= ((GPIO_Init->Pull) << (position * 2U));
 8003f44:	688f      	ldr	r7, [r1, #8]
 8003f46:	fa07 f708 	lsl.w	r7, r7, r8
 8003f4a:	ea47 070e 	orr.w	r7, r7, lr
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 8003f4e:	2c02      	cmp	r4, #2
        GPIOx->PUPDR = temp;
 8003f50:	60c7      	str	r7, [r0, #12]
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 8003f52:	d119      	bne.n	8003f88 <HAL_GPIO_Init+0xa4>
        temp = GPIOx->AFR[position >> 3U];
 8003f54:	ea4f 0ad3 	mov.w	sl, r3, lsr #3
 8003f58:	eb00 0a8a 	add.w	sl, r0, sl, lsl #2
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 8003f5c:	f003 0b07 	and.w	fp, r3, #7
        temp = GPIOx->AFR[position >> 3U];
 8003f60:	f8da 7020 	ldr.w	r7, [sl, #32]
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 8003f64:	ea4f 0b8b 	mov.w	fp, fp, lsl #2
 8003f68:	f04f 0e0f 	mov.w	lr, #15
 8003f6c:	fa0e fe0b 	lsl.w	lr, lr, fp
 8003f70:	ea27 0e0e 	bic.w	lr, r7, lr
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 8003f74:	690f      	ldr	r7, [r1, #16]
 8003f76:	fa07 f70b 	lsl.w	r7, r7, fp
 8003f7a:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->AFR[position >> 3U] = temp;
 8003f7e:	f8ca 7020 	str.w	r7, [sl, #32]
 8003f82:	e001      	b.n	8003f88 <HAL_GPIO_Init+0xa4>
      if((GPIO_Init->Mode & GPIO_MODE) != MODE_ANALOG)
 8003f84:	2c03      	cmp	r4, #3
 8003f86:	d1da      	bne.n	8003f3e <HAL_GPIO_Init+0x5a>
      temp = GPIOx->MODER;
 8003f88:	6807      	ldr	r7, [r0, #0]
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 8003f8a:	fa04 f408 	lsl.w	r4, r4, r8
      temp &= ~(GPIO_MODER_MODER0 << (position * 2U));
 8003f8e:	ea07 070c 	and.w	r7, r7, ip
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 8003f92:	433c      	orrs	r4, r7
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 8003f94:	f415 3f40 	tst.w	r5, #196608	@ 0x30000
      GPIOx->MODER = temp;
 8003f98:	6004      	str	r4, [r0, #0]
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 8003f9a:	d068      	beq.n	800406e <HAL_GPIO_Init+0x18a>
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8003f9c:	2400      	movs	r4, #0
 8003f9e:	9401      	str	r4, [sp, #4]
 8003fa0:	f8d9 4044 	ldr.w	r4, [r9, #68]	@ 0x44
 8003fa4:	f444 4480 	orr.w	r4, r4, #16384	@ 0x4000
 8003fa8:	f8c9 4044 	str.w	r4, [r9, #68]	@ 0x44
 8003fac:	f8d9 4044 	ldr.w	r4, [r9, #68]	@ 0x44
 8003fb0:	f023 0703 	bic.w	r7, r3, #3
 8003fb4:	f107 4780 	add.w	r7, r7, #1073741824	@ 0x40000000
 8003fb8:	f404 4480 	and.w	r4, r4, #16384	@ 0x4000
 8003fbc:	f507 379c 	add.w	r7, r7, #79872	@ 0x13800
 8003fc0:	9401      	str	r4, [sp, #4]
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 8003fc2:	f003 0c03 	and.w	ip, r3, #3
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8003fc6:	9c01      	ldr	r4, [sp, #4]
        temp = SYSCFG->EXTICR[position >> 2U];
 8003fc8:	f8d7 e008 	ldr.w	lr, [r7, #8]
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 8003fcc:	ea4f 0c8c 	mov.w	ip, ip, lsl #2
 8003fd0:	240f      	movs	r4, #15
 8003fd2:	fa04 f40c 	lsl.w	r4, r4, ip
 8003fd6:	ea2e 0e04 	bic.w	lr, lr, r4
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8003fda:	4c32      	ldr	r4, [pc, #200]	@ (80040a4 <HAL_GPIO_Init+0x1c0>)
 8003fdc:	42a0      	cmp	r0, r4
 8003fde:	d04d      	beq.n	800407c <HAL_GPIO_Init+0x198>
 8003fe0:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 8003fe4:	42a0      	cmp	r0, r4
 8003fe6:	d04b      	beq.n	8004080 <HAL_GPIO_Init+0x19c>
 8003fe8:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 8003fec:	42a0      	cmp	r0, r4
 8003fee:	d049      	beq.n	8004084 <HAL_GPIO_Init+0x1a0>
 8003ff0:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 8003ff4:	42a0      	cmp	r0, r4
 8003ff6:	d047      	beq.n	8004088 <HAL_GPIO_Init+0x1a4>
 8003ff8:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 8003ffc:	42a0      	cmp	r0, r4
 8003ffe:	d045      	beq.n	800408c <HAL_GPIO_Init+0x1a8>
 8004000:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 8004004:	42a0      	cmp	r0, r4
 8004006:	d043      	beq.n	8004090 <HAL_GPIO_Init+0x1ac>
 8004008:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 800400c:	42a0      	cmp	r0, r4
 800400e:	d041      	beq.n	8004094 <HAL_GPIO_Init+0x1b0>
 8004010:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 8004014:	42a0      	cmp	r0, r4
 8004016:	d03f      	beq.n	8004098 <HAL_GPIO_Init+0x1b4>
 8004018:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 800401c:	42a0      	cmp	r0, r4
 800401e:	d03d      	beq.n	800409c <HAL_GPIO_Init+0x1b8>
 8004020:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 8004024:	42a0      	cmp	r0, r4
 8004026:	bf14      	ite	ne
 8004028:	240a      	movne	r4, #10
 800402a:	2409      	moveq	r4, #9
 800402c:	fa04 f40c 	lsl.w	r4, r4, ip
 8004030:	ea44 040e 	orr.w	r4, r4, lr
        SYSCFG->EXTICR[position >> 2U] = temp;
 8004034:	60bc      	str	r4, [r7, #8]
        temp = EXTI->RTSR;
 8004036:	6894      	ldr	r4, [r2, #8]
        temp &= ~((uint32_t)iocurrent);
 8004038:	43f7      	mvns	r7, r6
        if((GPIO_Init->Mode & TRIGGER_RISING) != 0x00U)
 800403a:	f415 1f80 	tst.w	r5, #1048576	@ 0x100000
        temp &= ~((uint32_t)iocurrent);
 800403e:	bf0c      	ite	eq
 8004040:	403c      	andeq	r4, r7
        {
          temp |= iocurrent;
 8004042:	4334      	orrne	r4, r6
        }
        EXTI->RTSR = temp;
 8004044:	6094      	str	r4, [r2, #8]

        temp = EXTI->FTSR;
 8004046:	68d4      	ldr	r4, [r2, #12]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00U)
 8004048:	f415 1f00 	tst.w	r5, #2097152	@ 0x200000
        temp &= ~((uint32_t)iocurrent);
 800404c:	bf0c      	ite	eq
 800404e:	403c      	andeq	r4, r7
        {
          temp |= iocurrent;
 8004050:	4334      	orrne	r4, r6
        }
        EXTI->FTSR = temp;
 8004052:	60d4      	str	r4, [r2, #12]

        temp = EXTI->EMR;
 8004054:	6854      	ldr	r4, [r2, #4]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & EXTI_EVT) != 0x00U)
 8004056:	f415 3f00 	tst.w	r5, #131072	@ 0x20000
        temp &= ~((uint32_t)iocurrent);
 800405a:	bf0c      	ite	eq
 800405c:	403c      	andeq	r4, r7
        {
          temp |= iocurrent;
 800405e:	4334      	orrne	r4, r6
        }
        EXTI->EMR = temp;
 8004060:	6054      	str	r4, [r2, #4]

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
 8004062:	6814      	ldr	r4, [r2, #0]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & EXTI_IT) != 0x00U)
 8004064:	03ed      	lsls	r5, r5, #15
        temp &= ~((uint32_t)iocurrent);
 8004066:	bf54      	ite	pl
 8004068:	403c      	andpl	r4, r7
        {
          temp |= iocurrent;
 800406a:	4334      	orrmi	r4, r6
        }
        EXTI->IMR = temp;
 800406c:	6014      	str	r4, [r2, #0]
  for(position = 0U; position < GPIO_NUMBER; position++)
 800406e:	3301      	adds	r3, #1
 8004070:	2b10      	cmp	r3, #16
 8004072:	f47f af3d 	bne.w	8003ef0 <HAL_GPIO_Init+0xc>
      }
    }
  }
}
 8004076:	b003      	add	sp, #12
 8004078:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 800407c:	2400      	movs	r4, #0
 800407e:	e7d5      	b.n	800402c <HAL_GPIO_Init+0x148>
 8004080:	2401      	movs	r4, #1
 8004082:	e7d3      	b.n	800402c <HAL_GPIO_Init+0x148>
 8004084:	2402      	movs	r4, #2
 8004086:	e7d1      	b.n	800402c <HAL_GPIO_Init+0x148>
 8004088:	2403      	movs	r4, #3
 800408a:	e7cf      	b.n	800402c <HAL_GPIO_Init+0x148>
 800408c:	2404      	movs	r4, #4
 800408e:	e7cd      	b.n	800402c <HAL_GPIO_Init+0x148>
 8004090:	2405      	movs	r4, #5
 8004092:	e7cb      	b.n	800402c <HAL_GPIO_Init+0x148>
 8004094:	2406      	movs	r4, #6
 8004096:	e7c9      	b.n	800402c <HAL_GPIO_Init+0x148>
 8004098:	2407      	movs	r4, #7
 800409a:	e7c7      	b.n	800402c <HAL_GPIO_Init+0x148>
 800409c:	2408      	movs	r4, #8
 800409e:	e7c5      	b.n	800402c <HAL_GPIO_Init+0x148>
 80040a0:	40013c00 	.word	0x40013c00
 80040a4:	40020000 	.word	0x40020000
 80040a8:	40023800 	.word	0x40023800

080040ac <HAL_GPIO_ReadPin>:
  GPIO_PinState bitstatus;

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  if((GPIOx->IDR & GPIO_Pin) != (uint32_t)GPIO_PIN_RESET)
 80040ac:	6903      	ldr	r3, [r0, #16]
 80040ae:	4219      	tst	r1, r3
  else
  {
    bitstatus = GPIO_PIN_RESET;
  }
  return bitstatus;
}
 80040b0:	bf14      	ite	ne
 80040b2:	2001      	movne	r0, #1
 80040b4:	2000      	moveq	r0, #0
 80040b6:	4770      	bx	lr

080040b8 <HAL_GPIO_WritePin>:
{
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if(PinState != GPIO_PIN_RESET)
 80040b8:	b10a      	cbz	r2, 80040be <HAL_GPIO_WritePin+0x6>
  {
    GPIOx->BSRR = GPIO_Pin;
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 80040ba:	6181      	str	r1, [r0, #24]
  }
}
 80040bc:	4770      	bx	lr
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 80040be:	0409      	lsls	r1, r1, #16
 80040c0:	e7fb      	b.n	80040ba <HAL_GPIO_WritePin+0x2>

080040c2 <HAL_GPIO_TogglePin>:

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  /* get current Output Data Register value */
  odr = GPIOx->ODR;
 80040c2:	6943      	ldr	r3, [r0, #20]

  /* Set selected pins that were at low level, and reset ones that were high */
  GPIOx->BSRR = ((odr & GPIO_Pin) << GPIO_NUMBER) | (~odr & GPIO_Pin);
 80040c4:	ea01 0203 	and.w	r2, r1, r3
 80040c8:	ea21 0103 	bic.w	r1, r1, r3
 80040cc:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 80040d0:	6181      	str	r1, [r0, #24]
}
 80040d2:	4770      	bx	lr

080040d4 <I2C_IsAcknowledgeFailed>:
  *                the configuration information for the specified I2C.
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_IsAcknowledgeFailed(I2C_HandleTypeDef *hi2c)
{
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 80040d4:	6801      	ldr	r1, [r0, #0]
 80040d6:	694b      	ldr	r3, [r1, #20]
 80040d8:	f413 6380 	ands.w	r3, r3, #1024	@ 0x400
 80040dc:	f04f 0200 	mov.w	r2, #0
 80040e0:	d010      	beq.n	8004104 <I2C_IsAcknowledgeFailed+0x30>
  {
    /* Clear NACKF Flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 80040e2:	f46f 6380 	mvn.w	r3, #1024	@ 0x400
 80040e6:	614b      	str	r3, [r1, #20]

    hi2c->PreviousState       = I2C_STATE_NONE;
    hi2c->State               = HAL_I2C_STATE_READY;
 80040e8:	2320      	movs	r3, #32
    hi2c->PreviousState       = I2C_STATE_NONE;
 80040ea:	6302      	str	r2, [r0, #48]	@ 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 80040ec:	f880 303d 	strb.w	r3, [r0, #61]	@ 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 80040f0:	f880 203e 	strb.w	r2, [r0, #62]	@ 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 80040f4:	6c03      	ldr	r3, [r0, #64]	@ 0x40

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 80040f6:	f880 203c 	strb.w	r2, [r0, #60]	@ 0x3c
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 80040fa:	f043 0304 	orr.w	r3, r3, #4
 80040fe:	6403      	str	r3, [r0, #64]	@ 0x40

    return HAL_ERROR;
 8004100:	2001      	movs	r0, #1
 8004102:	4770      	bx	lr
  }
  return HAL_OK;
 8004104:	4618      	mov	r0, r3
}
 8004106:	4770      	bx	lr

08004108 <I2C_WaitOnFlagUntilTimeout>:
{
 8004108:	e92d 46f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r9, sl, lr}
 800410c:	4606      	mov	r6, r0
 800410e:	460f      	mov	r7, r1
 8004110:	4691      	mov	r9, r2
 8004112:	461d      	mov	r5, r3
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8004114:	ea4f 4a11 	mov.w	sl, r1, lsr #16
 8004118:	6833      	ldr	r3, [r6, #0]
 800411a:	f1ba 0f01 	cmp.w	sl, #1
 800411e:	bf0c      	ite	eq
 8004120:	695c      	ldreq	r4, [r3, #20]
 8004122:	699c      	ldrne	r4, [r3, #24]
 8004124:	ea27 0404 	bic.w	r4, r7, r4
 8004128:	b2a4      	uxth	r4, r4
 800412a:	fab4 f484 	clz	r4, r4
 800412e:	0964      	lsrs	r4, r4, #5
 8004130:	45a1      	cmp	r9, r4
 8004132:	d001      	beq.n	8004138 <I2C_WaitOnFlagUntilTimeout+0x30>
  return HAL_OK;
 8004134:	2000      	movs	r0, #0
 8004136:	e025      	b.n	8004184 <I2C_WaitOnFlagUntilTimeout+0x7c>
    if (Timeout != HAL_MAX_DELAY)
 8004138:	1c6a      	adds	r2, r5, #1
 800413a:	d0ee      	beq.n	800411a <I2C_WaitOnFlagUntilTimeout+0x12>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800413c:	f7ff fd5c 	bl	8003bf8 <HAL_GetTick>
 8004140:	9b08      	ldr	r3, [sp, #32]
 8004142:	1ac0      	subs	r0, r0, r3
 8004144:	42a8      	cmp	r0, r5
 8004146:	d801      	bhi.n	800414c <I2C_WaitOnFlagUntilTimeout+0x44>
 8004148:	2d00      	cmp	r5, #0
 800414a:	d1e5      	bne.n	8004118 <I2C_WaitOnFlagUntilTimeout+0x10>
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
 800414c:	6833      	ldr	r3, [r6, #0]
 800414e:	f1ba 0f01 	cmp.w	sl, #1
 8004152:	bf0c      	ite	eq
 8004154:	695b      	ldreq	r3, [r3, #20]
 8004156:	699b      	ldrne	r3, [r3, #24]
 8004158:	ea27 0303 	bic.w	r3, r7, r3
 800415c:	b29b      	uxth	r3, r3
 800415e:	fab3 f383 	clz	r3, r3
 8004162:	095b      	lsrs	r3, r3, #5
 8004164:	4599      	cmp	r9, r3
 8004166:	d1d7      	bne.n	8004118 <I2C_WaitOnFlagUntilTimeout+0x10>
          hi2c->PreviousState     = I2C_STATE_NONE;
 8004168:	2300      	movs	r3, #0
          hi2c->State             = HAL_I2C_STATE_READY;
 800416a:	2220      	movs	r2, #32
          hi2c->PreviousState     = I2C_STATE_NONE;
 800416c:	6333      	str	r3, [r6, #48]	@ 0x30
          hi2c->State             = HAL_I2C_STATE_READY;
 800416e:	f886 203d 	strb.w	r2, [r6, #61]	@ 0x3d
          hi2c->Mode              = HAL_I2C_MODE_NONE;
 8004172:	f886 303e 	strb.w	r3, [r6, #62]	@ 0x3e
          hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8004176:	6c32      	ldr	r2, [r6, #64]	@ 0x40
          __HAL_UNLOCK(hi2c);
 8004178:	f886 303c 	strb.w	r3, [r6, #60]	@ 0x3c
          hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800417c:	f042 0220 	orr.w	r2, r2, #32
 8004180:	6432      	str	r2, [r6, #64]	@ 0x40
          return HAL_ERROR;
 8004182:	2001      	movs	r0, #1
}
 8004184:	e8bd 86f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r9, sl, pc}

08004188 <I2C_WaitOnMasterAddressFlagUntilTimeout>:
{
 8004188:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800418c:	4604      	mov	r4, r0
 800418e:	460f      	mov	r7, r1
 8004190:	4616      	mov	r6, r2
 8004192:	4698      	mov	r8, r3
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 8004194:	6825      	ldr	r5, [r4, #0]
 8004196:	6968      	ldr	r0, [r5, #20]
 8004198:	ea27 0000 	bic.w	r0, r7, r0
 800419c:	b280      	uxth	r0, r0
 800419e:	b1c0      	cbz	r0, 80041d2 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x4a>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 80041a0:	696b      	ldr	r3, [r5, #20]
 80041a2:	055a      	lsls	r2, r3, #21
 80041a4:	d517      	bpl.n	80041d6 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x4e>
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80041a6:	682b      	ldr	r3, [r5, #0]
 80041a8:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 80041ac:	602b      	str	r3, [r5, #0]
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 80041ae:	f46f 6380 	mvn.w	r3, #1024	@ 0x400
 80041b2:	616b      	str	r3, [r5, #20]
      hi2c->State               = HAL_I2C_STATE_READY;
 80041b4:	2220      	movs	r2, #32
      hi2c->PreviousState       = I2C_STATE_NONE;
 80041b6:	2300      	movs	r3, #0
 80041b8:	6323      	str	r3, [r4, #48]	@ 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 80041ba:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 80041be:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 80041c2:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 80041c4:	f043 0304 	orr.w	r3, r3, #4
          hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 80041c8:	6423      	str	r3, [r4, #64]	@ 0x40
          __HAL_UNLOCK(hi2c);
 80041ca:	2300      	movs	r3, #0
 80041cc:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
      return HAL_ERROR;
 80041d0:	2001      	movs	r0, #1
}
 80041d2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if (Timeout != HAL_MAX_DELAY)
 80041d6:	1c73      	adds	r3, r6, #1
 80041d8:	d0dd      	beq.n	8004196 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xe>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80041da:	f7ff fd0d 	bl	8003bf8 <HAL_GetTick>
 80041de:	eba0 0008 	sub.w	r0, r0, r8
 80041e2:	42b0      	cmp	r0, r6
 80041e4:	d801      	bhi.n	80041ea <I2C_WaitOnMasterAddressFlagUntilTimeout+0x62>
 80041e6:	2e00      	cmp	r6, #0
 80041e8:	d1d4      	bne.n	8004194 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xc>
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET))
 80041ea:	6823      	ldr	r3, [r4, #0]
 80041ec:	695a      	ldr	r2, [r3, #20]
 80041ee:	ea27 0202 	bic.w	r2, r7, r2
 80041f2:	b292      	uxth	r2, r2
 80041f4:	2a00      	cmp	r2, #0
 80041f6:	d0cd      	beq.n	8004194 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xc>
          hi2c->PreviousState       = I2C_STATE_NONE;
 80041f8:	2300      	movs	r3, #0
          hi2c->State               = HAL_I2C_STATE_READY;
 80041fa:	2220      	movs	r2, #32
          hi2c->PreviousState       = I2C_STATE_NONE;
 80041fc:	6323      	str	r3, [r4, #48]	@ 0x30
          hi2c->State               = HAL_I2C_STATE_READY;
 80041fe:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
          hi2c->Mode                = HAL_I2C_MODE_NONE;
 8004202:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
          hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8004206:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8004208:	4313      	orrs	r3, r2
 800420a:	e7dd      	b.n	80041c8 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x40>

0800420c <I2C_WaitOnTXEFlagUntilTimeout>:
{
 800420c:	b570      	push	{r4, r5, r6, lr}
 800420e:	4604      	mov	r4, r0
 8004210:	460d      	mov	r5, r1
 8004212:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8004214:	6823      	ldr	r3, [r4, #0]
 8004216:	695b      	ldr	r3, [r3, #20]
 8004218:	061b      	lsls	r3, r3, #24
 800421a:	d501      	bpl.n	8004220 <I2C_WaitOnTXEFlagUntilTimeout+0x14>
  return HAL_OK;
 800421c:	2000      	movs	r0, #0
 800421e:	e01e      	b.n	800425e <I2C_WaitOnTXEFlagUntilTimeout+0x52>
    if (I2C_IsAcknowledgeFailed(hi2c) != HAL_OK)
 8004220:	4620      	mov	r0, r4
 8004222:	f7ff ff57 	bl	80040d4 <I2C_IsAcknowledgeFailed>
 8004226:	b9c8      	cbnz	r0, 800425c <I2C_WaitOnTXEFlagUntilTimeout+0x50>
    if (Timeout != HAL_MAX_DELAY)
 8004228:	1c6a      	adds	r2, r5, #1
 800422a:	d0f3      	beq.n	8004214 <I2C_WaitOnTXEFlagUntilTimeout+0x8>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800422c:	f7ff fce4 	bl	8003bf8 <HAL_GetTick>
 8004230:	1b80      	subs	r0, r0, r6
 8004232:	42a8      	cmp	r0, r5
 8004234:	d801      	bhi.n	800423a <I2C_WaitOnTXEFlagUntilTimeout+0x2e>
 8004236:	2d00      	cmp	r5, #0
 8004238:	d1ec      	bne.n	8004214 <I2C_WaitOnTXEFlagUntilTimeout+0x8>
        if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET))
 800423a:	6823      	ldr	r3, [r4, #0]
 800423c:	695b      	ldr	r3, [r3, #20]
 800423e:	f013 0380 	ands.w	r3, r3, #128	@ 0x80
 8004242:	d1e7      	bne.n	8004214 <I2C_WaitOnTXEFlagUntilTimeout+0x8>
          hi2c->State               = HAL_I2C_STATE_READY;
 8004244:	2220      	movs	r2, #32
          hi2c->PreviousState       = I2C_STATE_NONE;
 8004246:	6323      	str	r3, [r4, #48]	@ 0x30
          hi2c->State               = HAL_I2C_STATE_READY;
 8004248:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
          hi2c->Mode                = HAL_I2C_MODE_NONE;
 800424c:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
          hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8004250:	6c22      	ldr	r2, [r4, #64]	@ 0x40
          __HAL_UNLOCK(hi2c);
 8004252:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
          hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8004256:	f042 0220 	orr.w	r2, r2, #32
 800425a:	6422      	str	r2, [r4, #64]	@ 0x40
      return HAL_ERROR;
 800425c:	2001      	movs	r0, #1
}
 800425e:	bd70      	pop	{r4, r5, r6, pc}

08004260 <I2C_RequestMemoryWrite>:
{
 8004260:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8004264:	4615      	mov	r5, r2
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8004266:	6802      	ldr	r2, [r0, #0]
{
 8004268:	b085      	sub	sp, #20
 800426a:	e9dd 780c 	ldrd	r7, r8, [sp, #48]	@ 0x30
 800426e:	4699      	mov	r9, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8004270:	6813      	ldr	r3, [r2, #0]
 8004272:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8004276:	6013      	str	r3, [r2, #0]
{
 8004278:	460e      	mov	r6, r1
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 800427a:	463b      	mov	r3, r7
 800427c:	f8cd 8000 	str.w	r8, [sp]
 8004280:	2200      	movs	r2, #0
 8004282:	f04f 1101 	mov.w	r1, #65537	@ 0x10001
{
 8004286:	4604      	mov	r4, r0
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8004288:	f7ff ff3e 	bl	8004108 <I2C_WaitOnFlagUntilTimeout>
 800428c:	6823      	ldr	r3, [r4, #0]
 800428e:	b138      	cbz	r0, 80042a0 <I2C_RequestMemoryWrite+0x40>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8004290:	681b      	ldr	r3, [r3, #0]
 8004292:	05db      	lsls	r3, r3, #23
 8004294:	d502      	bpl.n	800429c <I2C_RequestMemoryWrite+0x3c>
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 8004296:	f44f 7300 	mov.w	r3, #512	@ 0x200
 800429a:	6423      	str	r3, [r4, #64]	@ 0x40
    return HAL_TIMEOUT;
 800429c:	2603      	movs	r6, #3
 800429e:	e020      	b.n	80042e2 <I2C_RequestMemoryWrite+0x82>
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 80042a0:	f006 06fe 	and.w	r6, r6, #254	@ 0xfe
 80042a4:	611e      	str	r6, [r3, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 80042a6:	491a      	ldr	r1, [pc, #104]	@ (8004310 <I2C_RequestMemoryWrite+0xb0>)
 80042a8:	4643      	mov	r3, r8
 80042aa:	463a      	mov	r2, r7
 80042ac:	4620      	mov	r0, r4
 80042ae:	f7ff ff6b 	bl	8004188 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 80042b2:	b9a8      	cbnz	r0, 80042e0 <I2C_RequestMemoryWrite+0x80>
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 80042b4:	6823      	ldr	r3, [r4, #0]
 80042b6:	9003      	str	r0, [sp, #12]
 80042b8:	695a      	ldr	r2, [r3, #20]
 80042ba:	9203      	str	r2, [sp, #12]
 80042bc:	699b      	ldr	r3, [r3, #24]
 80042be:	9303      	str	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 80042c0:	4642      	mov	r2, r8
 80042c2:	4639      	mov	r1, r7
 80042c4:	4620      	mov	r0, r4
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 80042c6:	9b03      	ldr	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 80042c8:	f7ff ffa0 	bl	800420c <I2C_WaitOnTXEFlagUntilTimeout>
 80042cc:	4606      	mov	r6, r0
 80042ce:	b160      	cbz	r0, 80042ea <I2C_RequestMemoryWrite+0x8a>
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 80042d0:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 80042d2:	2b04      	cmp	r3, #4
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80042d4:	bf01      	itttt	eq
 80042d6:	6822      	ldreq	r2, [r4, #0]
 80042d8:	6813      	ldreq	r3, [r2, #0]
 80042da:	f443 7300 	orreq.w	r3, r3, #512	@ 0x200
 80042de:	6013      	streq	r3, [r2, #0]
    return HAL_ERROR;
 80042e0:	2601      	movs	r6, #1
}
 80042e2:	4630      	mov	r0, r6
 80042e4:	b005      	add	sp, #20
 80042e6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 80042ea:	f1b9 0f01 	cmp.w	r9, #1
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80042ee:	6823      	ldr	r3, [r4, #0]
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 80042f0:	d102      	bne.n	80042f8 <I2C_RequestMemoryWrite+0x98>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 80042f2:	b2ed      	uxtb	r5, r5
 80042f4:	611d      	str	r5, [r3, #16]
 80042f6:	e7f4      	b.n	80042e2 <I2C_RequestMemoryWrite+0x82>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 80042f8:	0a2a      	lsrs	r2, r5, #8
 80042fa:	611a      	str	r2, [r3, #16]
    if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 80042fc:	4639      	mov	r1, r7
 80042fe:	4642      	mov	r2, r8
 8004300:	4620      	mov	r0, r4
 8004302:	f7ff ff83 	bl	800420c <I2C_WaitOnTXEFlagUntilTimeout>
 8004306:	2800      	cmp	r0, #0
 8004308:	d1e2      	bne.n	80042d0 <I2C_RequestMemoryWrite+0x70>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 800430a:	6823      	ldr	r3, [r4, #0]
 800430c:	e7f1      	b.n	80042f2 <I2C_RequestMemoryWrite+0x92>
 800430e:	bf00      	nop
 8004310:	00010002 	.word	0x00010002

08004314 <I2C_RequestMemoryRead>:
{
 8004314:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8004318:	469a      	mov	sl, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800431a:	6803      	ldr	r3, [r0, #0]
{
 800431c:	4615      	mov	r5, r2
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800431e:	681a      	ldr	r2, [r3, #0]
 8004320:	f442 6280 	orr.w	r2, r2, #1024	@ 0x400
 8004324:	601a      	str	r2, [r3, #0]
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8004326:	681a      	ldr	r2, [r3, #0]
{
 8004328:	e9dd 780c 	ldrd	r7, r8, [sp, #48]	@ 0x30
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800432c:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 8004330:	601a      	str	r2, [r3, #0]
{
 8004332:	460e      	mov	r6, r1
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8004334:	463b      	mov	r3, r7
 8004336:	f8cd 8000 	str.w	r8, [sp]
 800433a:	2200      	movs	r2, #0
 800433c:	f04f 1101 	mov.w	r1, #65537	@ 0x10001
{
 8004340:	4604      	mov	r4, r0
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8004342:	f7ff fee1 	bl	8004108 <I2C_WaitOnFlagUntilTimeout>
 8004346:	6823      	ldr	r3, [r4, #0]
 8004348:	b138      	cbz	r0, 800435a <I2C_RequestMemoryRead+0x46>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800434a:	681b      	ldr	r3, [r3, #0]
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800434c:	05db      	lsls	r3, r3, #23
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 800434e:	bf44      	itt	mi
 8004350:	f44f 7300 	movmi.w	r3, #512	@ 0x200
 8004354:	6423      	strmi	r3, [r4, #64]	@ 0x40
    return HAL_TIMEOUT;
 8004356:	2003      	movs	r0, #3
 8004358:	e021      	b.n	800439e <I2C_RequestMemoryRead+0x8a>
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 800435a:	fa5f f986 	uxtb.w	r9, r6
 800435e:	f006 06fe 	and.w	r6, r6, #254	@ 0xfe
 8004362:	611e      	str	r6, [r3, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 8004364:	492b      	ldr	r1, [pc, #172]	@ (8004414 <I2C_RequestMemoryRead+0x100>)
 8004366:	4643      	mov	r3, r8
 8004368:	463a      	mov	r2, r7
 800436a:	4620      	mov	r0, r4
 800436c:	f7ff ff0c 	bl	8004188 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8004370:	b9a0      	cbnz	r0, 800439c <I2C_RequestMemoryRead+0x88>
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8004372:	6823      	ldr	r3, [r4, #0]
 8004374:	9003      	str	r0, [sp, #12]
 8004376:	695a      	ldr	r2, [r3, #20]
 8004378:	9203      	str	r2, [sp, #12]
 800437a:	699b      	ldr	r3, [r3, #24]
 800437c:	9303      	str	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 800437e:	4642      	mov	r2, r8
 8004380:	4639      	mov	r1, r7
 8004382:	4620      	mov	r0, r4
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8004384:	9b03      	ldr	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8004386:	f7ff ff41 	bl	800420c <I2C_WaitOnTXEFlagUntilTimeout>
 800438a:	b158      	cbz	r0, 80043a4 <I2C_RequestMemoryRead+0x90>
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800438c:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 800438e:	2b04      	cmp	r3, #4
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8004390:	bf01      	itttt	eq
 8004392:	6822      	ldreq	r2, [r4, #0]
 8004394:	6813      	ldreq	r3, [r2, #0]
 8004396:	f443 7300 	orreq.w	r3, r3, #512	@ 0x200
 800439a:	6013      	streq	r3, [r2, #0]
    return HAL_ERROR;
 800439c:	2001      	movs	r0, #1
}
 800439e:	b004      	add	sp, #16
 80043a0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 80043a4:	f1ba 0f01 	cmp.w	sl, #1
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80043a8:	6823      	ldr	r3, [r4, #0]
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 80043aa:	d11a      	bne.n	80043e2 <I2C_RequestMemoryRead+0xce>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 80043ac:	b2ed      	uxtb	r5, r5
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 80043ae:	4642      	mov	r2, r8
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 80043b0:	611d      	str	r5, [r3, #16]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 80043b2:	4639      	mov	r1, r7
 80043b4:	4620      	mov	r0, r4
 80043b6:	f7ff ff29 	bl	800420c <I2C_WaitOnTXEFlagUntilTimeout>
 80043ba:	4602      	mov	r2, r0
 80043bc:	2800      	cmp	r0, #0
 80043be:	d1e5      	bne.n	800438c <I2C_RequestMemoryRead+0x78>
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 80043c0:	6821      	ldr	r1, [r4, #0]
 80043c2:	680b      	ldr	r3, [r1, #0]
 80043c4:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 80043c8:	600b      	str	r3, [r1, #0]
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 80043ca:	4620      	mov	r0, r4
 80043cc:	f8cd 8000 	str.w	r8, [sp]
 80043d0:	463b      	mov	r3, r7
 80043d2:	f04f 1101 	mov.w	r1, #65537	@ 0x10001
 80043d6:	f7ff fe97 	bl	8004108 <I2C_WaitOnFlagUntilTimeout>
 80043da:	6822      	ldr	r2, [r4, #0]
 80043dc:	b160      	cbz	r0, 80043f8 <I2C_RequestMemoryRead+0xe4>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 80043de:	6813      	ldr	r3, [r2, #0]
 80043e0:	e7b4      	b.n	800434c <I2C_RequestMemoryRead+0x38>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 80043e2:	0a2a      	lsrs	r2, r5, #8
 80043e4:	611a      	str	r2, [r3, #16]
    if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 80043e6:	4639      	mov	r1, r7
 80043e8:	4642      	mov	r2, r8
 80043ea:	4620      	mov	r0, r4
 80043ec:	f7ff ff0e 	bl	800420c <I2C_WaitOnTXEFlagUntilTimeout>
 80043f0:	2800      	cmp	r0, #0
 80043f2:	d1cb      	bne.n	800438c <I2C_RequestMemoryRead+0x78>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 80043f4:	6823      	ldr	r3, [r4, #0]
 80043f6:	e7d9      	b.n	80043ac <I2C_RequestMemoryRead+0x98>
  hi2c->Instance->DR = I2C_7BIT_ADD_READ(DevAddress);
 80043f8:	f049 0301 	orr.w	r3, r9, #1
 80043fc:	6113      	str	r3, [r2, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 80043fe:	4905      	ldr	r1, [pc, #20]	@ (8004414 <I2C_RequestMemoryRead+0x100>)
 8004400:	4643      	mov	r3, r8
 8004402:	463a      	mov	r2, r7
 8004404:	4620      	mov	r0, r4
 8004406:	f7ff febf 	bl	8004188 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 800440a:	3800      	subs	r0, #0
 800440c:	bf18      	it	ne
 800440e:	2001      	movne	r0, #1
 8004410:	e7c5      	b.n	800439e <I2C_RequestMemoryRead+0x8a>
 8004412:	bf00      	nop
 8004414:	00010002 	.word	0x00010002

08004418 <I2C_WaitOnBTFFlagUntilTimeout>:
{
 8004418:	b570      	push	{r4, r5, r6, lr}
 800441a:	4604      	mov	r4, r0
 800441c:	460d      	mov	r5, r1
 800441e:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 8004420:	6823      	ldr	r3, [r4, #0]
 8004422:	695b      	ldr	r3, [r3, #20]
 8004424:	075b      	lsls	r3, r3, #29
 8004426:	d501      	bpl.n	800442c <I2C_WaitOnBTFFlagUntilTimeout+0x14>
  return HAL_OK;
 8004428:	2000      	movs	r0, #0
 800442a:	e01e      	b.n	800446a <I2C_WaitOnBTFFlagUntilTimeout+0x52>
    if (I2C_IsAcknowledgeFailed(hi2c) != HAL_OK)
 800442c:	4620      	mov	r0, r4
 800442e:	f7ff fe51 	bl	80040d4 <I2C_IsAcknowledgeFailed>
 8004432:	b9c8      	cbnz	r0, 8004468 <I2C_WaitOnBTFFlagUntilTimeout+0x50>
    if (Timeout != HAL_MAX_DELAY)
 8004434:	1c6a      	adds	r2, r5, #1
 8004436:	d0f3      	beq.n	8004420 <I2C_WaitOnBTFFlagUntilTimeout+0x8>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8004438:	f7ff fbde 	bl	8003bf8 <HAL_GetTick>
 800443c:	1b80      	subs	r0, r0, r6
 800443e:	42a8      	cmp	r0, r5
 8004440:	d801      	bhi.n	8004446 <I2C_WaitOnBTFFlagUntilTimeout+0x2e>
 8004442:	2d00      	cmp	r5, #0
 8004444:	d1ec      	bne.n	8004420 <I2C_WaitOnBTFFlagUntilTimeout+0x8>
        if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET))
 8004446:	6823      	ldr	r3, [r4, #0]
 8004448:	695b      	ldr	r3, [r3, #20]
 800444a:	f013 0304 	ands.w	r3, r3, #4
 800444e:	d1e7      	bne.n	8004420 <I2C_WaitOnBTFFlagUntilTimeout+0x8>
          hi2c->State               = HAL_I2C_STATE_READY;
 8004450:	2220      	movs	r2, #32
          hi2c->PreviousState       = I2C_STATE_NONE;
 8004452:	6323      	str	r3, [r4, #48]	@ 0x30
          hi2c->State               = HAL_I2C_STATE_READY;
 8004454:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
          hi2c->Mode                = HAL_I2C_MODE_NONE;
 8004458:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
          hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800445c:	6c22      	ldr	r2, [r4, #64]	@ 0x40
          __HAL_UNLOCK(hi2c);
 800445e:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
          hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8004462:	f042 0220 	orr.w	r2, r2, #32
 8004466:	6422      	str	r2, [r4, #64]	@ 0x40
      return HAL_ERROR;
 8004468:	2001      	movs	r0, #1
}
 800446a:	bd70      	pop	{r4, r5, r6, pc}

0800446c <I2C_WaitOnRXNEFlagUntilTimeout>:
{
 800446c:	b570      	push	{r4, r5, r6, lr}
 800446e:	4604      	mov	r4, r0
 8004470:	460d      	mov	r5, r1
 8004472:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 8004474:	6821      	ldr	r1, [r4, #0]
 8004476:	694b      	ldr	r3, [r1, #20]
 8004478:	f013 0340 	ands.w	r3, r3, #64	@ 0x40
 800447c:	d001      	beq.n	8004482 <I2C_WaitOnRXNEFlagUntilTimeout+0x16>
  return HAL_OK;
 800447e:	2000      	movs	r0, #0
 8004480:	e011      	b.n	80044a6 <I2C_WaitOnRXNEFlagUntilTimeout+0x3a>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 8004482:	694a      	ldr	r2, [r1, #20]
 8004484:	06d2      	lsls	r2, r2, #27
 8004486:	d50f      	bpl.n	80044a8 <I2C_WaitOnRXNEFlagUntilTimeout+0x3c>
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 8004488:	f06f 0210 	mvn.w	r2, #16
 800448c:	614a      	str	r2, [r1, #20]
      hi2c->State               = HAL_I2C_STATE_READY;
 800448e:	2220      	movs	r2, #32
      hi2c->PreviousState       = I2C_STATE_NONE;
 8004490:	6323      	str	r3, [r4, #48]	@ 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 8004492:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 8004496:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_NONE;
 800449a:	6c23      	ldr	r3, [r4, #64]	@ 0x40
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800449c:	6423      	str	r3, [r4, #64]	@ 0x40
        __HAL_UNLOCK(hi2c);
 800449e:	2300      	movs	r3, #0
 80044a0:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
      return HAL_ERROR;
 80044a4:	2001      	movs	r0, #1
}
 80044a6:	bd70      	pop	{r4, r5, r6, pc}
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80044a8:	f7ff fba6 	bl	8003bf8 <HAL_GetTick>
 80044ac:	1b80      	subs	r0, r0, r6
 80044ae:	42a8      	cmp	r0, r5
 80044b0:	d801      	bhi.n	80044b6 <I2C_WaitOnRXNEFlagUntilTimeout+0x4a>
 80044b2:	2d00      	cmp	r5, #0
 80044b4:	d1de      	bne.n	8004474 <I2C_WaitOnRXNEFlagUntilTimeout+0x8>
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET))
 80044b6:	6823      	ldr	r3, [r4, #0]
 80044b8:	695b      	ldr	r3, [r3, #20]
 80044ba:	f013 0340 	ands.w	r3, r3, #64	@ 0x40
 80044be:	d1d9      	bne.n	8004474 <I2C_WaitOnRXNEFlagUntilTimeout+0x8>
        hi2c->State               = HAL_I2C_STATE_READY;
 80044c0:	2220      	movs	r2, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 80044c2:	6323      	str	r3, [r4, #48]	@ 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 80044c4:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 80044c8:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 80044cc:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 80044ce:	4313      	orrs	r3, r2
 80044d0:	e7e4      	b.n	800449c <I2C_WaitOnRXNEFlagUntilTimeout+0x30>
	...

080044d4 <HAL_I2C_Init>:
{
 80044d4:	b570      	push	{r4, r5, r6, lr}
  if (hi2c == NULL)
 80044d6:	4604      	mov	r4, r0
 80044d8:	b908      	cbnz	r0, 80044de <HAL_I2C_Init+0xa>
    return HAL_ERROR;
 80044da:	2001      	movs	r0, #1
}
 80044dc:	bd70      	pop	{r4, r5, r6, pc}
  if (hi2c->State == HAL_I2C_STATE_RESET)
 80044de:	f890 303d 	ldrb.w	r3, [r0, #61]	@ 0x3d
 80044e2:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 80044e6:	b91b      	cbnz	r3, 80044f0 <HAL_I2C_Init+0x1c>
    hi2c->Lock = HAL_UNLOCKED;
 80044e8:	f880 203c 	strb.w	r2, [r0, #60]	@ 0x3c
    HAL_I2C_MspInit(hi2c);
 80044ec:	f7fd fe64 	bl	80021b8 <HAL_I2C_MspInit>
  hi2c->State = HAL_I2C_STATE_BUSY;
 80044f0:	2324      	movs	r3, #36	@ 0x24
 80044f2:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
  __HAL_I2C_DISABLE(hi2c);
 80044f6:	6823      	ldr	r3, [r4, #0]
 80044f8:	681a      	ldr	r2, [r3, #0]
 80044fa:	f022 0201 	bic.w	r2, r2, #1
 80044fe:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 |= I2C_CR1_SWRST;
 8004500:	681a      	ldr	r2, [r3, #0]
 8004502:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 8004506:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 &= ~I2C_CR1_SWRST;
 8004508:	681a      	ldr	r2, [r3, #0]
 800450a:	f422 4200 	bic.w	r2, r2, #32768	@ 0x8000
 800450e:	601a      	str	r2, [r3, #0]
  pclk1 = HAL_RCC_GetPCLK1Freq();
 8004510:	f001 fb9e 	bl	8005c50 <HAL_RCC_GetPCLK1Freq>
  if (I2C_MIN_PCLK_FREQ(pclk1, hi2c->Init.ClockSpeed) == 1U)
 8004514:	4b3f      	ldr	r3, [pc, #252]	@ (8004614 <HAL_I2C_Init+0x140>)
 8004516:	6865      	ldr	r5, [r4, #4]
 8004518:	429d      	cmp	r5, r3
 800451a:	bf94      	ite	ls
 800451c:	4b3e      	ldrls	r3, [pc, #248]	@ (8004618 <HAL_I2C_Init+0x144>)
 800451e:	4b3f      	ldrhi	r3, [pc, #252]	@ (800461c <HAL_I2C_Init+0x148>)
 8004520:	4298      	cmp	r0, r3
 8004522:	bf8c      	ite	hi
 8004524:	2300      	movhi	r3, #0
 8004526:	2301      	movls	r3, #1
 8004528:	2b00      	cmp	r3, #0
 800452a:	d1d6      	bne.n	80044da <HAL_I2C_Init+0x6>
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 800452c:	6822      	ldr	r2, [r4, #0]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 800452e:	4e39      	ldr	r6, [pc, #228]	@ (8004614 <HAL_I2C_Init+0x140>)
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8004530:	6851      	ldr	r1, [r2, #4]
  freqrange = I2C_FREQRANGE(pclk1);
 8004532:	4b3b      	ldr	r3, [pc, #236]	@ (8004620 <HAL_I2C_Init+0x14c>)
 8004534:	fbb0 f3f3 	udiv	r3, r0, r3
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8004538:	f021 013f 	bic.w	r1, r1, #63	@ 0x3f
 800453c:	4319      	orrs	r1, r3
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 800453e:	42b5      	cmp	r5, r6
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8004540:	6051      	str	r1, [r2, #4]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 8004542:	bf88      	it	hi
 8004544:	f44f 7696 	movhi.w	r6, #300	@ 0x12c
 8004548:	6a11      	ldr	r1, [r2, #32]
 800454a:	bf88      	it	hi
 800454c:	4373      	mulhi	r3, r6
 800454e:	f021 013f 	bic.w	r1, r1, #63	@ 0x3f
 8004552:	bf84      	itt	hi
 8004554:	f44f 767a 	movhi.w	r6, #1000	@ 0x3e8
 8004558:	fbb3 f3f6 	udivhi	r3, r3, r6
 800455c:	3301      	adds	r3, #1
 800455e:	430b      	orrs	r3, r1
 8004560:	6213      	str	r3, [r2, #32]
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 8004562:	69d1      	ldr	r1, [r2, #28]
 8004564:	1e43      	subs	r3, r0, #1
 8004566:	482b      	ldr	r0, [pc, #172]	@ (8004614 <HAL_I2C_Init+0x140>)
 8004568:	f421 414f 	bic.w	r1, r1, #52992	@ 0xcf00
 800456c:	4285      	cmp	r5, r0
 800456e:	f021 01ff 	bic.w	r1, r1, #255	@ 0xff
 8004572:	d832      	bhi.n	80045da <HAL_I2C_Init+0x106>
 8004574:	006d      	lsls	r5, r5, #1
 8004576:	f640 70fc 	movw	r0, #4092	@ 0xffc
 800457a:	fbb3 f3f5 	udiv	r3, r3, r5
 800457e:	3301      	adds	r3, #1
 8004580:	4203      	tst	r3, r0
 8004582:	d042      	beq.n	800460a <HAL_I2C_Init+0x136>
 8004584:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8004588:	4319      	orrs	r1, r3
 800458a:	61d1      	str	r1, [r2, #28]
  MODIFY_REG(hi2c->Instance->CR1, (I2C_CR1_ENGC | I2C_CR1_NOSTRETCH), (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode));
 800458c:	e9d4 3007 	ldrd	r3, r0, [r4, #28]
 8004590:	6811      	ldr	r1, [r2, #0]
 8004592:	4303      	orrs	r3, r0
 8004594:	f021 01c0 	bic.w	r1, r1, #192	@ 0xc0
 8004598:	430b      	orrs	r3, r1
 800459a:	6013      	str	r3, [r2, #0]
  MODIFY_REG(hi2c->Instance->OAR1, (I2C_OAR1_ADDMODE | I2C_OAR1_ADD8_9 | I2C_OAR1_ADD1_7 | I2C_OAR1_ADD0), (hi2c->Init.AddressingMode | hi2c->Init.OwnAddress1));
 800459c:	6891      	ldr	r1, [r2, #8]
 800459e:	e9d4 0303 	ldrd	r0, r3, [r4, #12]
 80045a2:	f421 4103 	bic.w	r1, r1, #33536	@ 0x8300
 80045a6:	4303      	orrs	r3, r0
 80045a8:	f021 01ff 	bic.w	r1, r1, #255	@ 0xff
 80045ac:	430b      	orrs	r3, r1
 80045ae:	6093      	str	r3, [r2, #8]
  MODIFY_REG(hi2c->Instance->OAR2, (I2C_OAR2_ENDUAL | I2C_OAR2_ADD2), (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2));
 80045b0:	e9d4 3005 	ldrd	r3, r0, [r4, #20]
 80045b4:	68d1      	ldr	r1, [r2, #12]
 80045b6:	4303      	orrs	r3, r0
 80045b8:	f021 01ff 	bic.w	r1, r1, #255	@ 0xff
 80045bc:	430b      	orrs	r3, r1
 80045be:	60d3      	str	r3, [r2, #12]
  __HAL_I2C_ENABLE(hi2c);
 80045c0:	6813      	ldr	r3, [r2, #0]
 80045c2:	f043 0301 	orr.w	r3, r3, #1
 80045c6:	6013      	str	r3, [r2, #0]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 80045c8:	2000      	movs	r0, #0
  hi2c->State = HAL_I2C_STATE_READY;
 80045ca:	2320      	movs	r3, #32
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 80045cc:	6420      	str	r0, [r4, #64]	@ 0x40
  hi2c->State = HAL_I2C_STATE_READY;
 80045ce:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
  hi2c->PreviousState = I2C_STATE_NONE;
 80045d2:	6320      	str	r0, [r4, #48]	@ 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
 80045d4:	f884 003e 	strb.w	r0, [r4, #62]	@ 0x3e
  return HAL_OK;
 80045d8:	e780      	b.n	80044dc <HAL_I2C_Init+0x8>
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 80045da:	68a0      	ldr	r0, [r4, #8]
 80045dc:	b950      	cbnz	r0, 80045f4 <HAL_I2C_Init+0x120>
 80045de:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 80045e2:	fbb3 f3f5 	udiv	r3, r3, r5
 80045e6:	3301      	adds	r3, #1
 80045e8:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80045ec:	b17b      	cbz	r3, 800460e <HAL_I2C_Init+0x13a>
 80045ee:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 80045f2:	e7c9      	b.n	8004588 <HAL_I2C_Init+0xb4>
 80045f4:	2019      	movs	r0, #25
 80045f6:	4368      	muls	r0, r5
 80045f8:	fbb3 f3f0 	udiv	r3, r3, r0
 80045fc:	3301      	adds	r3, #1
 80045fe:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8004602:	b123      	cbz	r3, 800460e <HAL_I2C_Init+0x13a>
 8004604:	f443 4340 	orr.w	r3, r3, #49152	@ 0xc000
 8004608:	e7be      	b.n	8004588 <HAL_I2C_Init+0xb4>
 800460a:	2304      	movs	r3, #4
 800460c:	e7bc      	b.n	8004588 <HAL_I2C_Init+0xb4>
 800460e:	2301      	movs	r3, #1
 8004610:	e7ba      	b.n	8004588 <HAL_I2C_Init+0xb4>
 8004612:	bf00      	nop
 8004614:	000186a0 	.word	0x000186a0
 8004618:	001e847f 	.word	0x001e847f
 800461c:	003d08ff 	.word	0x003d08ff
 8004620:	000f4240 	.word	0x000f4240

08004624 <HAL_I2C_Mem_Write>:
{
 8004624:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8004628:	4604      	mov	r4, r0
 800462a:	4699      	mov	r9, r3
 800462c:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 800462e:	460f      	mov	r7, r1
 8004630:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 8004632:	f7ff fae1 	bl	8003bf8 <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 8004636:	f894 303d 	ldrb.w	r3, [r4, #61]	@ 0x3d
 800463a:	2b20      	cmp	r3, #32
  uint32_t tickstart = HAL_GetTick();
 800463c:	4605      	mov	r5, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 800463e:	d003      	beq.n	8004648 <HAL_I2C_Mem_Write+0x24>
      return HAL_BUSY;
 8004640:	2002      	movs	r0, #2
}
 8004642:	b003      	add	sp, #12
 8004644:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 8004648:	9000      	str	r0, [sp, #0]
 800464a:	493c      	ldr	r1, [pc, #240]	@ (800473c <HAL_I2C_Mem_Write+0x118>)
 800464c:	2319      	movs	r3, #25
 800464e:	2201      	movs	r2, #1
 8004650:	4620      	mov	r0, r4
 8004652:	f7ff fd59 	bl	8004108 <I2C_WaitOnFlagUntilTimeout>
 8004656:	2800      	cmp	r0, #0
 8004658:	d1f2      	bne.n	8004640 <HAL_I2C_Mem_Write+0x1c>
    __HAL_LOCK(hi2c);
 800465a:	f894 303c 	ldrb.w	r3, [r4, #60]	@ 0x3c
 800465e:	2b01      	cmp	r3, #1
 8004660:	d0ee      	beq.n	8004640 <HAL_I2C_Mem_Write+0x1c>
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8004662:	6820      	ldr	r0, [r4, #0]
    __HAL_LOCK(hi2c);
 8004664:	2301      	movs	r3, #1
 8004666:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 800466a:	6803      	ldr	r3, [r0, #0]
 800466c:	07d9      	lsls	r1, r3, #31
      __HAL_I2C_ENABLE(hi2c);
 800466e:	bf5e      	ittt	pl
 8004670:	6803      	ldrpl	r3, [r0, #0]
 8004672:	f043 0301 	orrpl.w	r3, r3, #1
 8004676:	6003      	strpl	r3, [r0, #0]
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8004678:	6803      	ldr	r3, [r0, #0]
 800467a:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 800467e:	6003      	str	r3, [r0, #0]
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 8004680:	2321      	movs	r3, #33	@ 0x21
 8004682:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 8004686:	2340      	movs	r3, #64	@ 0x40
 8004688:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800468c:	2300      	movs	r3, #0
 800468e:	6423      	str	r3, [r4, #64]	@ 0x40
    hi2c->pBuffPtr    = pData;
 8004690:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8004692:	6263      	str	r3, [r4, #36]	@ 0x24
    hi2c->XferCount   = Size;
 8004694:	f8bd 302c 	ldrh.w	r3, [sp, #44]	@ 0x2c
 8004698:	8563      	strh	r3, [r4, #42]	@ 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 800469a:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 800469c:	8523      	strh	r3, [r4, #40]	@ 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 800469e:	4b28      	ldr	r3, [pc, #160]	@ (8004740 <HAL_I2C_Mem_Write+0x11c>)
 80046a0:	62e3      	str	r3, [r4, #44]	@ 0x2c
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 80046a2:	4642      	mov	r2, r8
 80046a4:	e9cd 6500 	strd	r6, r5, [sp]
 80046a8:	464b      	mov	r3, r9
 80046aa:	4639      	mov	r1, r7
 80046ac:	4620      	mov	r0, r4
 80046ae:	f7ff fdd7 	bl	8004260 <I2C_RequestMemoryWrite>
 80046b2:	2800      	cmp	r0, #0
 80046b4:	d02a      	beq.n	800470c <HAL_I2C_Mem_Write+0xe8>
      return HAL_ERROR;
 80046b6:	2001      	movs	r0, #1
 80046b8:	e7c3      	b.n	8004642 <HAL_I2C_Mem_Write+0x1e>
      if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 80046ba:	f7ff fda7 	bl	800420c <I2C_WaitOnTXEFlagUntilTimeout>
 80046be:	b140      	cbz	r0, 80046d2 <HAL_I2C_Mem_Write+0xae>
        if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 80046c0:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 80046c2:	2b04      	cmp	r3, #4
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80046c4:	bf01      	itttt	eq
 80046c6:	6822      	ldreq	r2, [r4, #0]
 80046c8:	6813      	ldreq	r3, [r2, #0]
 80046ca:	f443 7300 	orreq.w	r3, r3, #512	@ 0x200
 80046ce:	6013      	streq	r3, [r2, #0]
 80046d0:	e7f1      	b.n	80046b6 <HAL_I2C_Mem_Write+0x92>
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 80046d2:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 80046d4:	6827      	ldr	r7, [r4, #0]
 80046d6:	461a      	mov	r2, r3
 80046d8:	f812 1b01 	ldrb.w	r1, [r2], #1
 80046dc:	6139      	str	r1, [r7, #16]
      hi2c->pBuffPtr++;
 80046de:	6262      	str	r2, [r4, #36]	@ 0x24
      hi2c->XferCount--;
 80046e0:	8d62      	ldrh	r2, [r4, #42]	@ 0x2a
      hi2c->XferSize--;
 80046e2:	8d21      	ldrh	r1, [r4, #40]	@ 0x28
      hi2c->XferCount--;
 80046e4:	3a01      	subs	r2, #1
 80046e6:	b292      	uxth	r2, r2
 80046e8:	8562      	strh	r2, [r4, #42]	@ 0x2a
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 80046ea:	697a      	ldr	r2, [r7, #20]
      hi2c->XferSize--;
 80046ec:	1e48      	subs	r0, r1, #1
 80046ee:	b280      	uxth	r0, r0
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 80046f0:	0752      	lsls	r2, r2, #29
      hi2c->XferSize--;
 80046f2:	8520      	strh	r0, [r4, #40]	@ 0x28
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 80046f4:	d50a      	bpl.n	800470c <HAL_I2C_Mem_Write+0xe8>
 80046f6:	b148      	cbz	r0, 800470c <HAL_I2C_Mem_Write+0xe8>
        hi2c->Instance->DR = *hi2c->pBuffPtr;
 80046f8:	785a      	ldrb	r2, [r3, #1]
 80046fa:	613a      	str	r2, [r7, #16]
        hi2c->pBuffPtr++;
 80046fc:	3302      	adds	r3, #2
 80046fe:	6263      	str	r3, [r4, #36]	@ 0x24
        hi2c->XferCount--;
 8004700:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 8004702:	3b01      	subs	r3, #1
        hi2c->XferSize--;
 8004704:	3902      	subs	r1, #2
        hi2c->XferCount--;
 8004706:	b29b      	uxth	r3, r3
        hi2c->XferSize--;
 8004708:	8521      	strh	r1, [r4, #40]	@ 0x28
        hi2c->XferCount--;
 800470a:	8563      	strh	r3, [r4, #42]	@ 0x2a
    while (hi2c->XferSize > 0U)
 800470c:	8d23      	ldrh	r3, [r4, #40]	@ 0x28
      if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 800470e:	462a      	mov	r2, r5
 8004710:	4631      	mov	r1, r6
 8004712:	4620      	mov	r0, r4
    while (hi2c->XferSize > 0U)
 8004714:	2b00      	cmp	r3, #0
 8004716:	d1d0      	bne.n	80046ba <HAL_I2C_Mem_Write+0x96>
    if (I2C_WaitOnBTFFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8004718:	f7ff fe7e 	bl	8004418 <I2C_WaitOnBTFFlagUntilTimeout>
 800471c:	2800      	cmp	r0, #0
 800471e:	d1cf      	bne.n	80046c0 <HAL_I2C_Mem_Write+0x9c>
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8004720:	6822      	ldr	r2, [r4, #0]
 8004722:	6813      	ldr	r3, [r2, #0]
 8004724:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 8004728:	6013      	str	r3, [r2, #0]
    hi2c->State = HAL_I2C_STATE_READY;
 800472a:	2320      	movs	r3, #32
 800472c:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
    __HAL_UNLOCK(hi2c);
 8004730:	f884 003c 	strb.w	r0, [r4, #60]	@ 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 8004734:	f884 003e 	strb.w	r0, [r4, #62]	@ 0x3e
    return HAL_OK;
 8004738:	e783      	b.n	8004642 <HAL_I2C_Mem_Write+0x1e>
 800473a:	bf00      	nop
 800473c:	00100002 	.word	0x00100002
 8004740:	ffff0000 	.word	0xffff0000

08004744 <HAL_I2C_Mem_Read>:
{
 8004744:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8004748:	4604      	mov	r4, r0
 800474a:	b087      	sub	sp, #28
 800474c:	4699      	mov	r9, r3
 800474e:	9f10      	ldr	r7, [sp, #64]	@ 0x40
 8004750:	460d      	mov	r5, r1
 8004752:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 8004754:	f7ff fa50 	bl	8003bf8 <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 8004758:	f894 303d 	ldrb.w	r3, [r4, #61]	@ 0x3d
 800475c:	2b20      	cmp	r3, #32
  uint32_t tickstart = HAL_GetTick();
 800475e:	4606      	mov	r6, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 8004760:	d004      	beq.n	800476c <HAL_I2C_Mem_Read+0x28>
      return HAL_BUSY;
 8004762:	2502      	movs	r5, #2
}
 8004764:	4628      	mov	r0, r5
 8004766:	b007      	add	sp, #28
 8004768:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 800476c:	9000      	str	r0, [sp, #0]
 800476e:	497a      	ldr	r1, [pc, #488]	@ (8004958 <HAL_I2C_Mem_Read+0x214>)
 8004770:	2319      	movs	r3, #25
 8004772:	2201      	movs	r2, #1
 8004774:	4620      	mov	r0, r4
 8004776:	f7ff fcc7 	bl	8004108 <I2C_WaitOnFlagUntilTimeout>
 800477a:	2800      	cmp	r0, #0
 800477c:	d1f1      	bne.n	8004762 <HAL_I2C_Mem_Read+0x1e>
    __HAL_LOCK(hi2c);
 800477e:	f894 303c 	ldrb.w	r3, [r4, #60]	@ 0x3c
 8004782:	2b01      	cmp	r3, #1
 8004784:	d0ed      	beq.n	8004762 <HAL_I2C_Mem_Read+0x1e>
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8004786:	6820      	ldr	r0, [r4, #0]
    __HAL_LOCK(hi2c);
 8004788:	2301      	movs	r3, #1
 800478a:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 800478e:	6803      	ldr	r3, [r0, #0]
 8004790:	07db      	lsls	r3, r3, #31
      __HAL_I2C_ENABLE(hi2c);
 8004792:	bf5e      	ittt	pl
 8004794:	6803      	ldrpl	r3, [r0, #0]
 8004796:	f043 0301 	orrpl.w	r3, r3, #1
 800479a:	6003      	strpl	r3, [r0, #0]
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 800479c:	6803      	ldr	r3, [r0, #0]
 800479e:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 80047a2:	6003      	str	r3, [r0, #0]
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 80047a4:	2322      	movs	r3, #34	@ 0x22
 80047a6:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 80047aa:	2340      	movs	r3, #64	@ 0x40
 80047ac:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 80047b0:	2300      	movs	r3, #0
 80047b2:	6423      	str	r3, [r4, #64]	@ 0x40
    hi2c->pBuffPtr    = pData;
 80047b4:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80047b6:	6263      	str	r3, [r4, #36]	@ 0x24
    hi2c->XferCount   = Size;
 80047b8:	f8bd 303c 	ldrh.w	r3, [sp, #60]	@ 0x3c
 80047bc:	8563      	strh	r3, [r4, #42]	@ 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 80047be:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 80047c0:	8523      	strh	r3, [r4, #40]	@ 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 80047c2:	4b66      	ldr	r3, [pc, #408]	@ (800495c <HAL_I2C_Mem_Read+0x218>)
 80047c4:	62e3      	str	r3, [r4, #44]	@ 0x2c
    if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 80047c6:	4629      	mov	r1, r5
 80047c8:	e9cd 7600 	strd	r7, r6, [sp]
 80047cc:	464b      	mov	r3, r9
 80047ce:	4642      	mov	r2, r8
 80047d0:	4620      	mov	r0, r4
 80047d2:	f7ff fd9f 	bl	8004314 <I2C_RequestMemoryRead>
 80047d6:	4605      	mov	r5, r0
 80047d8:	b108      	cbz	r0, 80047de <HAL_I2C_Mem_Read+0x9a>
      return HAL_ERROR;
 80047da:	2501      	movs	r5, #1
 80047dc:	e7c2      	b.n	8004764 <HAL_I2C_Mem_Read+0x20>
    if (hi2c->XferSize == 0U)
 80047de:	8d22      	ldrh	r2, [r4, #40]	@ 0x28
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 80047e0:	6823      	ldr	r3, [r4, #0]
    if (hi2c->XferSize == 0U)
 80047e2:	b9b2      	cbnz	r2, 8004812 <HAL_I2C_Mem_Read+0xce>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 80047e4:	9002      	str	r0, [sp, #8]
 80047e6:	695a      	ldr	r2, [r3, #20]
 80047e8:	9202      	str	r2, [sp, #8]
 80047ea:	699a      	ldr	r2, [r3, #24]
 80047ec:	9202      	str	r2, [sp, #8]
 80047ee:	9a02      	ldr	r2, [sp, #8]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80047f0:	681a      	ldr	r2, [r3, #0]
 80047f2:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 80047f6:	601a      	str	r2, [r3, #0]
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 80047f8:	f8df 8164 	ldr.w	r8, [pc, #356]	@ 8004960 <HAL_I2C_Mem_Read+0x21c>
    while (hi2c->XferSize > 0U)
 80047fc:	8d23      	ldrh	r3, [r4, #40]	@ 0x28
 80047fe:	2b00      	cmp	r3, #0
 8004800:	d12c      	bne.n	800485c <HAL_I2C_Mem_Read+0x118>
    hi2c->State = HAL_I2C_STATE_READY;
 8004802:	2220      	movs	r2, #32
 8004804:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
    __HAL_UNLOCK(hi2c);
 8004808:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 800480c:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
    return HAL_OK;
 8004810:	e7a8      	b.n	8004764 <HAL_I2C_Mem_Read+0x20>
    else if (hi2c->XferSize == 1U)
 8004812:	2a01      	cmp	r2, #1
 8004814:	d10a      	bne.n	800482c <HAL_I2C_Mem_Read+0xe8>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8004816:	681a      	ldr	r2, [r3, #0]
 8004818:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 800481c:	601a      	str	r2, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800481e:	9003      	str	r0, [sp, #12]
 8004820:	695a      	ldr	r2, [r3, #20]
 8004822:	9203      	str	r2, [sp, #12]
 8004824:	699a      	ldr	r2, [r3, #24]
 8004826:	9203      	str	r2, [sp, #12]
 8004828:	9a03      	ldr	r2, [sp, #12]
 800482a:	e7e1      	b.n	80047f0 <HAL_I2C_Mem_Read+0xac>
    else if (hi2c->XferSize == 2U)
 800482c:	2a02      	cmp	r2, #2
 800482e:	d10e      	bne.n	800484e <HAL_I2C_Mem_Read+0x10a>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8004830:	681a      	ldr	r2, [r3, #0]
 8004832:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 8004836:	601a      	str	r2, [r3, #0]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8004838:	681a      	ldr	r2, [r3, #0]
 800483a:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 800483e:	601a      	str	r2, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8004840:	9004      	str	r0, [sp, #16]
 8004842:	695a      	ldr	r2, [r3, #20]
 8004844:	9204      	str	r2, [sp, #16]
 8004846:	699b      	ldr	r3, [r3, #24]
 8004848:	9304      	str	r3, [sp, #16]
 800484a:	9b04      	ldr	r3, [sp, #16]
 800484c:	e7d4      	b.n	80047f8 <HAL_I2C_Mem_Read+0xb4>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800484e:	9005      	str	r0, [sp, #20]
 8004850:	695a      	ldr	r2, [r3, #20]
 8004852:	9205      	str	r2, [sp, #20]
 8004854:	699b      	ldr	r3, [r3, #24]
 8004856:	9305      	str	r3, [sp, #20]
 8004858:	9b05      	ldr	r3, [sp, #20]
 800485a:	e7cd      	b.n	80047f8 <HAL_I2C_Mem_Read+0xb4>
      if (hi2c->XferSize <= 3U)
 800485c:	2b03      	cmp	r3, #3
 800485e:	d856      	bhi.n	800490e <HAL_I2C_Mem_Read+0x1ca>
        if (hi2c->XferSize == 1U)
 8004860:	2b01      	cmp	r3, #1
 8004862:	d115      	bne.n	8004890 <HAL_I2C_Mem_Read+0x14c>
          if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8004864:	4632      	mov	r2, r6
 8004866:	4639      	mov	r1, r7
 8004868:	4620      	mov	r0, r4
 800486a:	f7ff fdff 	bl	800446c <I2C_WaitOnRXNEFlagUntilTimeout>
 800486e:	2800      	cmp	r0, #0
 8004870:	d1b3      	bne.n	80047da <HAL_I2C_Mem_Read+0x96>
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8004872:	6823      	ldr	r3, [r4, #0]
 8004874:	691a      	ldr	r2, [r3, #16]
 8004876:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8004878:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 800487a:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 800487c:	3301      	adds	r3, #1
 800487e:	6263      	str	r3, [r4, #36]	@ 0x24
          hi2c->XferSize--;
 8004880:	8d23      	ldrh	r3, [r4, #40]	@ 0x28
 8004882:	3b01      	subs	r3, #1
 8004884:	8523      	strh	r3, [r4, #40]	@ 0x28
          hi2c->XferCount--;
 8004886:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 8004888:	3b01      	subs	r3, #1
 800488a:	b29b      	uxth	r3, r3
 800488c:	8563      	strh	r3, [r4, #42]	@ 0x2a
 800488e:	e7b5      	b.n	80047fc <HAL_I2C_Mem_Read+0xb8>
        else if (hi2c->XferSize == 2U)
 8004890:	2b02      	cmp	r3, #2
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8004892:	9600      	str	r6, [sp, #0]
 8004894:	463b      	mov	r3, r7
 8004896:	f04f 0200 	mov.w	r2, #0
 800489a:	4641      	mov	r1, r8
 800489c:	4620      	mov	r0, r4
        else if (hi2c->XferSize == 2U)
 800489e:	d119      	bne.n	80048d4 <HAL_I2C_Mem_Read+0x190>
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 80048a0:	f7ff fc32 	bl	8004108 <I2C_WaitOnFlagUntilTimeout>
 80048a4:	2800      	cmp	r0, #0
 80048a6:	d198      	bne.n	80047da <HAL_I2C_Mem_Read+0x96>
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80048a8:	6823      	ldr	r3, [r4, #0]
 80048aa:	681a      	ldr	r2, [r3, #0]
 80048ac:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 80048b0:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 80048b2:	691a      	ldr	r2, [r3, #16]
 80048b4:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 80048b6:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 80048b8:	6a62      	ldr	r2, [r4, #36]	@ 0x24
 80048ba:	1c53      	adds	r3, r2, #1
 80048bc:	6263      	str	r3, [r4, #36]	@ 0x24
          hi2c->XferSize--;
 80048be:	8d23      	ldrh	r3, [r4, #40]	@ 0x28
 80048c0:	3b01      	subs	r3, #1
 80048c2:	8523      	strh	r3, [r4, #40]	@ 0x28
          hi2c->XferCount--;
 80048c4:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 80048c6:	3b01      	subs	r3, #1
 80048c8:	b29b      	uxth	r3, r3
 80048ca:	8563      	strh	r3, [r4, #42]	@ 0x2a
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 80048cc:	6823      	ldr	r3, [r4, #0]
 80048ce:	691b      	ldr	r3, [r3, #16]
 80048d0:	7053      	strb	r3, [r2, #1]
          hi2c->pBuffPtr++;
 80048d2:	e7d2      	b.n	800487a <HAL_I2C_Mem_Read+0x136>
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 80048d4:	f7ff fc18 	bl	8004108 <I2C_WaitOnFlagUntilTimeout>
 80048d8:	4602      	mov	r2, r0
 80048da:	2800      	cmp	r0, #0
 80048dc:	f47f af7d 	bne.w	80047da <HAL_I2C_Mem_Read+0x96>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 80048e0:	6823      	ldr	r3, [r4, #0]
 80048e2:	6819      	ldr	r1, [r3, #0]
 80048e4:	f421 6180 	bic.w	r1, r1, #1024	@ 0x400
 80048e8:	6019      	str	r1, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 80048ea:	6919      	ldr	r1, [r3, #16]
 80048ec:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 80048ee:	7019      	strb	r1, [r3, #0]
          hi2c->pBuffPtr++;
 80048f0:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 80048f2:	3301      	adds	r3, #1
 80048f4:	6263      	str	r3, [r4, #36]	@ 0x24
          hi2c->XferSize--;
 80048f6:	8d23      	ldrh	r3, [r4, #40]	@ 0x28
 80048f8:	3b01      	subs	r3, #1
 80048fa:	8523      	strh	r3, [r4, #40]	@ 0x28
          hi2c->XferCount--;
 80048fc:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 80048fe:	3b01      	subs	r3, #1
 8004900:	b29b      	uxth	r3, r3
 8004902:	8563      	strh	r3, [r4, #42]	@ 0x2a
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8004904:	4641      	mov	r1, r8
 8004906:	9600      	str	r6, [sp, #0]
 8004908:	463b      	mov	r3, r7
 800490a:	4620      	mov	r0, r4
 800490c:	e7c8      	b.n	80048a0 <HAL_I2C_Mem_Read+0x15c>
        if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 800490e:	4632      	mov	r2, r6
 8004910:	4639      	mov	r1, r7
 8004912:	4620      	mov	r0, r4
 8004914:	f7ff fdaa 	bl	800446c <I2C_WaitOnRXNEFlagUntilTimeout>
 8004918:	2800      	cmp	r0, #0
 800491a:	f47f af5e 	bne.w	80047da <HAL_I2C_Mem_Read+0x96>
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800491e:	6823      	ldr	r3, [r4, #0]
 8004920:	691a      	ldr	r2, [r3, #16]
 8004922:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8004924:	701a      	strb	r2, [r3, #0]
        hi2c->XferCount--;
 8004926:	8d62      	ldrh	r2, [r4, #42]	@ 0x2a
        hi2c->pBuffPtr++;
 8004928:	6a61      	ldr	r1, [r4, #36]	@ 0x24
        hi2c->XferCount--;
 800492a:	3a01      	subs	r2, #1
 800492c:	b292      	uxth	r2, r2
        hi2c->pBuffPtr++;
 800492e:	1c4b      	adds	r3, r1, #1
        hi2c->XferCount--;
 8004930:	8562      	strh	r2, [r4, #42]	@ 0x2a
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 8004932:	6822      	ldr	r2, [r4, #0]
        hi2c->pBuffPtr++;
 8004934:	6263      	str	r3, [r4, #36]	@ 0x24
        hi2c->XferSize--;
 8004936:	8d23      	ldrh	r3, [r4, #40]	@ 0x28
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 8004938:	6950      	ldr	r0, [r2, #20]
        hi2c->XferSize--;
 800493a:	3b01      	subs	r3, #1
 800493c:	b29b      	uxth	r3, r3
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 800493e:	0740      	lsls	r0, r0, #29
        hi2c->XferSize--;
 8004940:	8523      	strh	r3, [r4, #40]	@ 0x28
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 8004942:	f57f af5b 	bpl.w	80047fc <HAL_I2C_Mem_Read+0xb8>
          if (hi2c->XferSize == 3U)
 8004946:	2b03      	cmp	r3, #3
            CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8004948:	bf02      	ittt	eq
 800494a:	6813      	ldreq	r3, [r2, #0]
 800494c:	f423 6380 	biceq.w	r3, r3, #1024	@ 0x400
 8004950:	6013      	streq	r3, [r2, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8004952:	6913      	ldr	r3, [r2, #16]
 8004954:	704b      	strb	r3, [r1, #1]
 8004956:	e790      	b.n	800487a <HAL_I2C_Mem_Read+0x136>
 8004958:	00100002 	.word	0x00100002
 800495c:	ffff0000 	.word	0xffff0000
 8004960:	00010004 	.word	0x00010004

08004964 <HAL_I2CEx_ConfigAnalogFilter>:
  *                the configuration information for the specified I2Cx peripheral.
  * @param  AnalogFilter new state of the Analog filter.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2CEx_ConfigAnalogFilter(I2C_HandleTypeDef *hi2c, uint32_t AnalogFilter)
{
 8004964:	b510      	push	{r4, lr}
  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_ANALOG_FILTER(AnalogFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 8004966:	f890 303d 	ldrb.w	r3, [r0, #61]	@ 0x3d
 800496a:	2b20      	cmp	r3, #32
 800496c:	b2dc      	uxtb	r4, r3
 800496e:	d116      	bne.n	800499e <HAL_I2CEx_ConfigAnalogFilter+0x3a>
  {
    hi2c->State = HAL_I2C_STATE_BUSY;
 8004970:	2324      	movs	r3, #36	@ 0x24
 8004972:	f880 303d 	strb.w	r3, [r0, #61]	@ 0x3d

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
 8004976:	6803      	ldr	r3, [r0, #0]
 8004978:	681a      	ldr	r2, [r3, #0]
 800497a:	f022 0201 	bic.w	r2, r2, #1
 800497e:	601a      	str	r2, [r3, #0]

    /* Reset I2Cx ANOFF bit */
    hi2c->Instance->FLTR &= ~(I2C_FLTR_ANOFF);
 8004980:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 8004982:	f022 0210 	bic.w	r2, r2, #16
 8004986:	625a      	str	r2, [r3, #36]	@ 0x24

    /* Disable the analog filter */
    hi2c->Instance->FLTR |= AnalogFilter;
 8004988:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 800498a:	4311      	orrs	r1, r2
 800498c:	6259      	str	r1, [r3, #36]	@ 0x24

    __HAL_I2C_ENABLE(hi2c);
 800498e:	681a      	ldr	r2, [r3, #0]
 8004990:	f042 0201 	orr.w	r2, r2, #1
 8004994:	601a      	str	r2, [r3, #0]

    hi2c->State = HAL_I2C_STATE_READY;
 8004996:	f880 403d 	strb.w	r4, [r0, #61]	@ 0x3d

    return HAL_OK;
 800499a:	2000      	movs	r0, #0
  }
  else
  {
    return HAL_BUSY;
  }
}
 800499c:	bd10      	pop	{r4, pc}
    return HAL_BUSY;
 800499e:	2002      	movs	r0, #2
 80049a0:	e7fc      	b.n	800499c <HAL_I2CEx_ConfigAnalogFilter+0x38>

080049a2 <HAL_I2CEx_ConfigDigitalFilter>:
  *                the configuration information for the specified I2Cx peripheral.
  * @param  DigitalFilter Coefficient of digital noise filter between 0x00 and 0x0F.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2CEx_ConfigDigitalFilter(I2C_HandleTypeDef *hi2c, uint32_t DigitalFilter)
{
 80049a2:	b530      	push	{r4, r5, lr}

  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_DIGITAL_FILTER(DigitalFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 80049a4:	f890 303d 	ldrb.w	r3, [r0, #61]	@ 0x3d
 80049a8:	2b20      	cmp	r3, #32
 80049aa:	b2dc      	uxtb	r4, r3
 80049ac:	d116      	bne.n	80049dc <HAL_I2CEx_ConfigDigitalFilter+0x3a>
  {
    hi2c->State = HAL_I2C_STATE_BUSY;

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
 80049ae:	6802      	ldr	r2, [r0, #0]
    hi2c->State = HAL_I2C_STATE_BUSY;
 80049b0:	2324      	movs	r3, #36	@ 0x24
 80049b2:	f880 303d 	strb.w	r3, [r0, #61]	@ 0x3d
    __HAL_I2C_DISABLE(hi2c);
 80049b6:	6813      	ldr	r3, [r2, #0]
 80049b8:	f023 0301 	bic.w	r3, r3, #1
 80049bc:	6013      	str	r3, [r2, #0]

    /* Get the old register value */
    tmpreg = hi2c->Instance->FLTR;
 80049be:	6a55      	ldr	r5, [r2, #36]	@ 0x24

    /* Reset I2Cx DNF bit [3:0] */
    tmpreg &= ~(I2C_FLTR_DNF);
 80049c0:	f64f 73f0 	movw	r3, #65520	@ 0xfff0
 80049c4:	402b      	ands	r3, r5

    /* Set I2Cx DNF coefficient */
    tmpreg |= DigitalFilter;
 80049c6:	430b      	orrs	r3, r1

    /* Store the new register value */
    hi2c->Instance->FLTR = tmpreg;
 80049c8:	b29b      	uxth	r3, r3
 80049ca:	6253      	str	r3, [r2, #36]	@ 0x24

    __HAL_I2C_ENABLE(hi2c);
 80049cc:	6813      	ldr	r3, [r2, #0]
 80049ce:	f043 0301 	orr.w	r3, r3, #1
 80049d2:	6013      	str	r3, [r2, #0]

    hi2c->State = HAL_I2C_STATE_READY;
 80049d4:	f880 403d 	strb.w	r4, [r0, #61]	@ 0x3d

    return HAL_OK;
 80049d8:	2000      	movs	r0, #0
  }
  else
  {
    return HAL_BUSY;
  }
}
 80049da:	bd30      	pop	{r4, r5, pc}
    return HAL_BUSY;
 80049dc:	2002      	movs	r0, #2
 80049de:	e7fc      	b.n	80049da <HAL_I2CEx_ConfigDigitalFilter+0x38>

080049e0 <LTDC_SetConfig>:
  uint32_t tmp;
  uint32_t tmp1;
  uint32_t tmp2;

  /* Configure the horizontal start and stop position */
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 80049e0:	6800      	ldr	r0, [r0, #0]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 80049e2:	f8d1 c000 	ldr.w	ip, [r1]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 80049e6:	01d2      	lsls	r2, r2, #7
 80049e8:	3284      	adds	r2, #132	@ 0x84
 80049ea:	1883      	adds	r3, r0, r2
{
 80049ec:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 80049f0:	68c6      	ldr	r6, [r0, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 80049f2:	685d      	ldr	r5, [r3, #4]
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 80049f4:	684c      	ldr	r4, [r1, #4]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);

  /* Configure the default color values */
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
  tmp2 = (pLayerCfg->Alpha0 << 24U);
 80049f6:	f8d1 9018 	ldr.w	r9, [r1, #24]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 80049fa:	f405 4570 	and.w	r5, r5, #61440	@ 0xf000
 80049fe:	605d      	str	r5, [r3, #4]
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8004a00:	68c5      	ldr	r5, [r0, #12]
 8004a02:	f10c 0701 	add.w	r7, ip, #1
 8004a06:	f3c5 450b 	ubfx	r5, r5, #16, #12
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8004a0a:	f3c6 460b 	ubfx	r6, r6, #16, #12
 8004a0e:	4426      	add	r6, r4
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8004a10:	443d      	add	r5, r7
 8004a12:	ea45 4506 	orr.w	r5, r5, r6, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 8004a16:	605d      	str	r5, [r3, #4]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 8004a18:	68c6      	ldr	r6, [r0, #12]
 8004a1a:	68cd      	ldr	r5, [r1, #12]
 8004a1c:	f3c6 060a 	ubfx	r6, r6, #0, #11
 8004a20:	442e      	add	r6, r5
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
 8004a22:	689d      	ldr	r5, [r3, #8]
 8004a24:	f405 4570 	and.w	r5, r5, #61440	@ 0xf000
 8004a28:	609d      	str	r5, [r3, #8]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
 8004a2a:	68c7      	ldr	r7, [r0, #12]
 8004a2c:	688d      	ldr	r5, [r1, #8]
 8004a2e:	f3c7 070a 	ubfx	r7, r7, #0, #11
 8004a32:	3501      	adds	r5, #1
 8004a34:	443d      	add	r5, r7
 8004a36:	ea45 4506 	orr.w	r5, r5, r6, lsl #16
 8004a3a:	609d      	str	r5, [r3, #8]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 8004a3c:	691d      	ldr	r5, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 8004a3e:	690e      	ldr	r6, [r1, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 8004a40:	f025 0507 	bic.w	r5, r5, #7
 8004a44:	611d      	str	r5, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 8004a46:	f04f 0e00 	mov.w	lr, #0
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 8004a4a:	611e      	str	r6, [r3, #16]
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
 8004a4c:	f891 7032 	ldrb.w	r7, [r1, #50]	@ 0x32
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 8004a50:	699d      	ldr	r5, [r3, #24]
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
 8004a52:	f891 8031 	ldrb.w	r8, [r1, #49]	@ 0x31
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 8004a56:	f8c3 e018 	str.w	lr, [r3, #24]
                                         LTDC_LxDCCR_DCALPHA);
  LTDC_LAYER(hltdc, LayerIdx)->DCCR = (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2);
 8004a5a:	f891 5030 	ldrb.w	r5, [r1, #48]	@ 0x30
 8004a5e:	ea45 6509 	orr.w	r5, r5, r9, lsl #24
 8004a62:	ea45 2508 	orr.w	r5, r5, r8, lsl #8
 8004a66:	ea45 4507 	orr.w	r5, r5, r7, lsl #16
 8004a6a:	619d      	str	r5, [r3, #24]

  /* Specifies the constant alpha value */
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
 8004a6c:	695d      	ldr	r5, [r3, #20]
 8004a6e:	f025 05ff 	bic.w	r5, r5, #255	@ 0xff
 8004a72:	615d      	str	r5, [r3, #20]
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);
 8004a74:	694d      	ldr	r5, [r1, #20]
 8004a76:	615d      	str	r5, [r3, #20]

  /* Specifies the blending factors */
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
 8004a78:	69dd      	ldr	r5, [r3, #28]
 8004a7a:	f425 65e0 	bic.w	r5, r5, #1792	@ 0x700
 8004a7e:	f025 0507 	bic.w	r5, r5, #7
 8004a82:	61dd      	str	r5, [r3, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
 8004a84:	e9d1 5707 	ldrd	r5, r7, [r1, #28]
 8004a88:	433d      	orrs	r5, r7
 8004a8a:	61dd      	str	r5, [r3, #28]

  /* Configure the color frame buffer start address */
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 8004a8c:	6a9d      	ldr	r5, [r3, #40]	@ 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 8004a8e:	6a4d      	ldr	r5, [r1, #36]	@ 0x24
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 8004a90:	f8c3 e028 	str.w	lr, [r3, #40]	@ 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 8004a94:	2e07      	cmp	r6, #7
 8004a96:	629d      	str	r5, [r3, #40]	@ 0x28

  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 8004a98:	bf9c      	itt	ls
 8004a9a:	4d0e      	ldrls	r5, [pc, #56]	@ (8004ad4 <LTDC_SetConfig+0xf4>)
 8004a9c:	5dae      	ldrbls	r6, [r5, r6]
  {
    tmp = 1U;
  }

  /* Configure the color frame buffer pitch in byte */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 8004a9e:	6add      	ldr	r5, [r3, #44]	@ 0x2c
 8004aa0:	f005 25e0 	and.w	r5, r5, #3758153728	@ 0xe000e000
 8004aa4:	62dd      	str	r5, [r3, #44]	@ 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 8004aa6:	bf88      	it	hi
 8004aa8:	2601      	movhi	r6, #1
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 8004aaa:	6a8d      	ldr	r5, [r1, #40]	@ 0x28
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
  /* Configure the frame buffer line number */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 8004aac:	6ac9      	ldr	r1, [r1, #44]	@ 0x2c
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 8004aae:	eba4 040c 	sub.w	r4, r4, ip
 8004ab2:	4374      	muls	r4, r6
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 8004ab4:	4375      	muls	r5, r6
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 8004ab6:	3403      	adds	r4, #3
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 8004ab8:	ea44 4405 	orr.w	r4, r4, r5, lsl #16
 8004abc:	62dc      	str	r4, [r3, #44]	@ 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
 8004abe:	6b1c      	ldr	r4, [r3, #48]	@ 0x30
 8004ac0:	f36f 040a 	bfc	r4, #0, #11
 8004ac4:	631c      	str	r4, [r3, #48]	@ 0x30
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 8004ac6:	6319      	str	r1, [r3, #48]	@ 0x30

  /* Enable LTDC_Layer by setting LEN bit */
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
 8004ac8:	5883      	ldr	r3, [r0, r2]
 8004aca:	f043 0301 	orr.w	r3, r3, #1
 8004ace:	5083      	str	r3, [r0, r2]
}
 8004ad0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8004ad4:	08024ce0 	.word	0x08024ce0

08004ad8 <HAL_LTDC_Init>:
{
 8004ad8:	b538      	push	{r3, r4, r5, lr}
  if (hltdc == NULL)
 8004ada:	4604      	mov	r4, r0
 8004adc:	2800      	cmp	r0, #0
 8004ade:	d063      	beq.n	8004ba8 <HAL_LTDC_Init+0xd0>
  if (hltdc->State == HAL_LTDC_STATE_RESET)
 8004ae0:	f890 30a1 	ldrb.w	r3, [r0, #161]	@ 0xa1
 8004ae4:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 8004ae8:	b91b      	cbnz	r3, 8004af2 <HAL_LTDC_Init+0x1a>
    hltdc->Lock = HAL_UNLOCKED;
 8004aea:	f880 20a0 	strb.w	r2, [r0, #160]	@ 0xa0
    HAL_LTDC_MspInit(hltdc);
 8004aee:	f7fd fbbf 	bl	8002270 <HAL_LTDC_MspInit>
  hltdc->State = HAL_LTDC_STATE_BUSY;
 8004af2:	2302      	movs	r3, #2
 8004af4:	f884 30a1 	strb.w	r3, [r4, #161]	@ 0xa1
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 8004af8:	6823      	ldr	r3, [r4, #0]
 8004afa:	699a      	ldr	r2, [r3, #24]
 8004afc:	f022 4270 	bic.w	r2, r2, #4026531840	@ 0xf0000000
 8004b00:	619a      	str	r2, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 8004b02:	e9d4 2001 	ldrd	r2, r0, [r4, #4]
 8004b06:	4302      	orrs	r2, r0
 8004b08:	68e0      	ldr	r0, [r4, #12]
 8004b0a:	6999      	ldr	r1, [r3, #24]
 8004b0c:	4302      	orrs	r2, r0
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
 8004b0e:	6920      	ldr	r0, [r4, #16]
 8004b10:	4302      	orrs	r2, r0
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 8004b12:	430a      	orrs	r2, r1
 8004b14:	619a      	str	r2, [r3, #24]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 8004b16:	689a      	ldr	r2, [r3, #8]
 8004b18:	4924      	ldr	r1, [pc, #144]	@ (8004bac <HAL_LTDC_Init+0xd4>)
  tmp = (hltdc->Init.HorizontalSync << 16U);
 8004b1a:	6960      	ldr	r0, [r4, #20]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 8004b1c:	400a      	ands	r2, r1
 8004b1e:	609a      	str	r2, [r3, #8]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
 8004b20:	689a      	ldr	r2, [r3, #8]
 8004b22:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8004b26:	69a0      	ldr	r0, [r4, #24]
 8004b28:	4302      	orrs	r2, r0
 8004b2a:	609a      	str	r2, [r3, #8]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 8004b2c:	68da      	ldr	r2, [r3, #12]
  tmp = (hltdc->Init.AccumulatedHBP << 16U);
 8004b2e:	69e0      	ldr	r0, [r4, #28]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 8004b30:	400a      	ands	r2, r1
 8004b32:	60da      	str	r2, [r3, #12]
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
 8004b34:	68da      	ldr	r2, [r3, #12]
 8004b36:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8004b3a:	6a20      	ldr	r0, [r4, #32]
 8004b3c:	4302      	orrs	r2, r0
 8004b3e:	60da      	str	r2, [r3, #12]
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 8004b40:	691a      	ldr	r2, [r3, #16]
  tmp = (hltdc->Init.AccumulatedActiveW << 16U);
 8004b42:	6a60      	ldr	r0, [r4, #36]	@ 0x24
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 8004b44:	400a      	ands	r2, r1
 8004b46:	611a      	str	r2, [r3, #16]
  hltdc->Instance->AWCR |= (tmp | hltdc->Init.AccumulatedActiveH);
 8004b48:	691a      	ldr	r2, [r3, #16]
 8004b4a:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8004b4e:	6aa0      	ldr	r0, [r4, #40]	@ 0x28
 8004b50:	4302      	orrs	r2, r0
 8004b52:	611a      	str	r2, [r3, #16]
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
 8004b54:	695a      	ldr	r2, [r3, #20]
 8004b56:	400a      	ands	r2, r1
 8004b58:	615a      	str	r2, [r3, #20]
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 8004b5a:	695a      	ldr	r2, [r3, #20]
  tmp = (hltdc->Init.TotalWidth << 16U);
 8004b5c:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 8004b5e:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8004b62:	6b21      	ldr	r1, [r4, #48]	@ 0x30
 8004b64:	430a      	orrs	r2, r1
 8004b66:	615a      	str	r2, [r3, #20]
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 8004b68:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
 8004b6a:	f894 0035 	ldrb.w	r0, [r4, #53]	@ 0x35
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
 8004b6e:	f894 1036 	ldrb.w	r1, [r4, #54]	@ 0x36
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 8004b72:	f002 427f 	and.w	r2, r2, #4278190080	@ 0xff000000
 8004b76:	62da      	str	r2, [r3, #44]	@ 0x2c
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
 8004b78:	6add      	ldr	r5, [r3, #44]	@ 0x2c
 8004b7a:	f894 2034 	ldrb.w	r2, [r4, #52]	@ 0x34
 8004b7e:	432a      	orrs	r2, r5
 8004b80:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
 8004b84:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8004b88:	62da      	str	r2, [r3, #44]	@ 0x2c
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_TE | LTDC_IT_FU);
 8004b8a:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8004b8c:	f042 0206 	orr.w	r2, r2, #6
 8004b90:	635a      	str	r2, [r3, #52]	@ 0x34
  __HAL_LTDC_ENABLE(hltdc);
 8004b92:	699a      	ldr	r2, [r3, #24]
 8004b94:	f042 0201 	orr.w	r2, r2, #1
 8004b98:	619a      	str	r2, [r3, #24]
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 8004b9a:	2000      	movs	r0, #0
  hltdc->State = HAL_LTDC_STATE_READY;
 8004b9c:	2301      	movs	r3, #1
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 8004b9e:	f8c4 00a4 	str.w	r0, [r4, #164]	@ 0xa4
  hltdc->State = HAL_LTDC_STATE_READY;
 8004ba2:	f884 30a1 	strb.w	r3, [r4, #161]	@ 0xa1
}
 8004ba6:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 8004ba8:	2001      	movs	r0, #1
 8004baa:	e7fc      	b.n	8004ba6 <HAL_LTDC_Init+0xce>
 8004bac:	f000f800 	.word	0xf000f800

08004bb0 <HAL_LTDC_ErrorCallback>:
__weak void HAL_LTDC_ErrorCallback(LTDC_HandleTypeDef *hltdc)
 8004bb0:	4770      	bx	lr

08004bb2 <HAL_LTDC_ReloadEventCallback>:
__weak void HAL_LTDC_ReloadEventCallback(LTDC_HandleTypeDef *hltdc)
 8004bb2:	4770      	bx	lr

08004bb4 <HAL_LTDC_IRQHandler>:
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 8004bb4:	6803      	ldr	r3, [r0, #0]
{
 8004bb6:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 8004bb8:	6b9e      	ldr	r6, [r3, #56]	@ 0x38
  uint32_t itsources = READ_REG(hltdc->Instance->IER);
 8004bba:	6b5d      	ldr	r5, [r3, #52]	@ 0x34
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 8004bbc:	0772      	lsls	r2, r6, #29
{
 8004bbe:	4604      	mov	r4, r0
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 8004bc0:	d514      	bpl.n	8004bec <HAL_LTDC_IRQHandler+0x38>
 8004bc2:	0769      	lsls	r1, r5, #29
 8004bc4:	d512      	bpl.n	8004bec <HAL_LTDC_IRQHandler+0x38>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_TE);
 8004bc6:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8004bc8:	f022 0204 	bic.w	r2, r2, #4
 8004bcc:	635a      	str	r2, [r3, #52]	@ 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_TE);
 8004bce:	2204      	movs	r2, #4
 8004bd0:	63da      	str	r2, [r3, #60]	@ 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_TE;
 8004bd2:	f8d0 30a4 	ldr.w	r3, [r0, #164]	@ 0xa4
 8004bd6:	f043 0301 	orr.w	r3, r3, #1
 8004bda:	f8c0 30a4 	str.w	r3, [r0, #164]	@ 0xa4
    __HAL_UNLOCK(hltdc);
 8004bde:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
 8004be0:	f880 20a1 	strb.w	r2, [r0, #161]	@ 0xa1
    __HAL_UNLOCK(hltdc);
 8004be4:	f880 30a0 	strb.w	r3, [r0, #160]	@ 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 8004be8:	f7ff ffe2 	bl	8004bb0 <HAL_LTDC_ErrorCallback>
  if (((isrflags & LTDC_ISR_FUIF) != 0U) && ((itsources & LTDC_IER_FUIE) != 0U))
 8004bec:	07b2      	lsls	r2, r6, #30
 8004bee:	d516      	bpl.n	8004c1e <HAL_LTDC_IRQHandler+0x6a>
 8004bf0:	07ab      	lsls	r3, r5, #30
 8004bf2:	d514      	bpl.n	8004c1e <HAL_LTDC_IRQHandler+0x6a>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
 8004bf4:	6823      	ldr	r3, [r4, #0]
 8004bf6:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8004bf8:	f022 0202 	bic.w	r2, r2, #2
 8004bfc:	635a      	str	r2, [r3, #52]	@ 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_FU);
 8004bfe:	2202      	movs	r2, #2
 8004c00:	63da      	str	r2, [r3, #60]	@ 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_FU;
 8004c02:	f8d4 30a4 	ldr.w	r3, [r4, #164]	@ 0xa4
 8004c06:	4313      	orrs	r3, r2
 8004c08:	f8c4 30a4 	str.w	r3, [r4, #164]	@ 0xa4
    hltdc->State = HAL_LTDC_STATE_ERROR;
 8004c0c:	2304      	movs	r3, #4
 8004c0e:	f884 30a1 	strb.w	r3, [r4, #161]	@ 0xa1
    __HAL_UNLOCK(hltdc);
 8004c12:	2300      	movs	r3, #0
 8004c14:	f884 30a0 	strb.w	r3, [r4, #160]	@ 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 8004c18:	4620      	mov	r0, r4
 8004c1a:	f7ff ffc9 	bl	8004bb0 <HAL_LTDC_ErrorCallback>
  if (((isrflags & LTDC_ISR_LIF) != 0U) && ((itsources & LTDC_IER_LIE) != 0U))
 8004c1e:	07f0      	lsls	r0, r6, #31
 8004c20:	d510      	bpl.n	8004c44 <HAL_LTDC_IRQHandler+0x90>
 8004c22:	07e9      	lsls	r1, r5, #31
 8004c24:	d50e      	bpl.n	8004c44 <HAL_LTDC_IRQHandler+0x90>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 8004c26:	6823      	ldr	r3, [r4, #0]
 8004c28:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8004c2a:	f022 0201 	bic.w	r2, r2, #1
 8004c2e:	635a      	str	r2, [r3, #52]	@ 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_LI);
 8004c30:	2201      	movs	r2, #1
 8004c32:	63da      	str	r2, [r3, #60]	@ 0x3c
    __HAL_UNLOCK(hltdc);
 8004c34:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_READY;
 8004c36:	f884 20a1 	strb.w	r2, [r4, #161]	@ 0xa1
    __HAL_UNLOCK(hltdc);
 8004c3a:	f884 30a0 	strb.w	r3, [r4, #160]	@ 0xa0
    HAL_LTDC_LineEventCallback(hltdc);
 8004c3e:	4620      	mov	r0, r4
 8004c40:	f7fc fcf6 	bl	8001630 <HAL_LTDC_LineEventCallback>
  if (((isrflags & LTDC_ISR_RRIF) != 0U) && ((itsources & LTDC_IER_RRIE) != 0U))
 8004c44:	0732      	lsls	r2, r6, #28
 8004c46:	d511      	bpl.n	8004c6c <HAL_LTDC_IRQHandler+0xb8>
 8004c48:	072b      	lsls	r3, r5, #28
 8004c4a:	d50f      	bpl.n	8004c6c <HAL_LTDC_IRQHandler+0xb8>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 8004c4c:	6823      	ldr	r3, [r4, #0]
 8004c4e:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8004c50:	f022 0208 	bic.w	r2, r2, #8
 8004c54:	635a      	str	r2, [r3, #52]	@ 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
 8004c56:	2208      	movs	r2, #8
 8004c58:	63da      	str	r2, [r3, #60]	@ 0x3c
    hltdc->State = HAL_LTDC_STATE_READY;
 8004c5a:	2301      	movs	r3, #1
 8004c5c:	f884 30a1 	strb.w	r3, [r4, #161]	@ 0xa1
    __HAL_UNLOCK(hltdc);
 8004c60:	2300      	movs	r3, #0
 8004c62:	f884 30a0 	strb.w	r3, [r4, #160]	@ 0xa0
    HAL_LTDC_ReloadEventCallback(hltdc);
 8004c66:	4620      	mov	r0, r4
 8004c68:	f7ff ffa3 	bl	8004bb2 <HAL_LTDC_ReloadEventCallback>
}
 8004c6c:	bd70      	pop	{r4, r5, r6, pc}

08004c6e <HAL_LTDC_ConfigLayer>:
{
 8004c6e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  __HAL_LOCK(hltdc);
 8004c72:	f890 30a0 	ldrb.w	r3, [r0, #160]	@ 0xa0
 8004c76:	2b01      	cmp	r3, #1
{
 8004c78:	4606      	mov	r6, r0
 8004c7a:	460f      	mov	r7, r1
 8004c7c:	4694      	mov	ip, r2
 8004c7e:	f04f 0002 	mov.w	r0, #2
  __HAL_LOCK(hltdc);
 8004c82:	d01f      	beq.n	8004cc4 <HAL_LTDC_ConfigLayer+0x56>
 8004c84:	f04f 0801 	mov.w	r8, #1
 8004c88:	f886 80a0 	strb.w	r8, [r6, #160]	@ 0xa0
  hltdc->State = HAL_LTDC_STATE_BUSY;
 8004c8c:	f886 00a1 	strb.w	r0, [r6, #161]	@ 0xa1
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 8004c90:	2434      	movs	r4, #52	@ 0x34
 8004c92:	460d      	mov	r5, r1
 8004c94:	fb04 6402 	mla	r4, r4, r2, r6
 8004c98:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8004c9a:	3438      	adds	r4, #56	@ 0x38
 8004c9c:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8004c9e:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8004ca0:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8004ca2:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8004ca4:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8004ca6:	682b      	ldr	r3, [r5, #0]
 8004ca8:	6023      	str	r3, [r4, #0]
  LTDC_SetConfig(hltdc, pLayerCfg, LayerIdx);
 8004caa:	4630      	mov	r0, r6
 8004cac:	4662      	mov	r2, ip
 8004cae:	4639      	mov	r1, r7
 8004cb0:	f7ff fe96 	bl	80049e0 <LTDC_SetConfig>
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 8004cb4:	6833      	ldr	r3, [r6, #0]
  __HAL_UNLOCK(hltdc);
 8004cb6:	2000      	movs	r0, #0
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 8004cb8:	f8c3 8024 	str.w	r8, [r3, #36]	@ 0x24
  hltdc->State  = HAL_LTDC_STATE_READY;
 8004cbc:	f886 80a1 	strb.w	r8, [r6, #161]	@ 0xa1
  __HAL_UNLOCK(hltdc);
 8004cc0:	f886 00a0 	strb.w	r0, [r6, #160]	@ 0xa0
}
 8004cc4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08004cc8 <HAL_LTDC_ProgramLineEvent>:
  __HAL_LOCK(hltdc);
 8004cc8:	f890 20a0 	ldrb.w	r2, [r0, #160]	@ 0xa0
 8004ccc:	2a01      	cmp	r2, #1
{
 8004cce:	4603      	mov	r3, r0
 8004cd0:	f04f 0002 	mov.w	r0, #2
  __HAL_LOCK(hltdc);
 8004cd4:	d012      	beq.n	8004cfc <HAL_LTDC_ProgramLineEvent+0x34>
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 8004cd6:	681a      	ldr	r2, [r3, #0]
  hltdc->State = HAL_LTDC_STATE_BUSY;
 8004cd8:	f883 00a1 	strb.w	r0, [r3, #161]	@ 0xa1
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 8004cdc:	6b50      	ldr	r0, [r2, #52]	@ 0x34
 8004cde:	f020 0001 	bic.w	r0, r0, #1
 8004ce2:	6350      	str	r0, [r2, #52]	@ 0x34
  LTDC->LIPCR = (uint32_t)Line;
 8004ce4:	4806      	ldr	r0, [pc, #24]	@ (8004d00 <HAL_LTDC_ProgramLineEvent+0x38>)
 8004ce6:	6401      	str	r1, [r0, #64]	@ 0x40
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
 8004ce8:	6b51      	ldr	r1, [r2, #52]	@ 0x34
 8004cea:	f041 0101 	orr.w	r1, r1, #1
 8004cee:	6351      	str	r1, [r2, #52]	@ 0x34
  __HAL_UNLOCK(hltdc);
 8004cf0:	2000      	movs	r0, #0
  hltdc->State = HAL_LTDC_STATE_READY;
 8004cf2:	2201      	movs	r2, #1
 8004cf4:	f883 20a1 	strb.w	r2, [r3, #161]	@ 0xa1
  __HAL_UNLOCK(hltdc);
 8004cf8:	f883 00a0 	strb.w	r0, [r3, #160]	@ 0xa0
}
 8004cfc:	4770      	bx	lr
 8004cfe:	bf00      	nop
 8004d00:	40016800 	.word	0x40016800

08004d04 <HAL_PCD_Init>:
  *         parameters in the PCD_InitTypeDef and initialize the associated handle.
  * @param  hpcd PCD handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_PCD_Init(PCD_HandleTypeDef *hpcd)
{
 8004d04:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
  const USB_OTG_GlobalTypeDef *USBx;
#endif /* defined (USB_OTG_FS) */
  uint8_t i;

  /* Check the PCD handle allocation */
  if (hpcd == NULL)
 8004d06:	4604      	mov	r4, r0
 8004d08:	b310      	cbz	r0, 8004d50 <HAL_PCD_Init+0x4c>

#if defined (USB_OTG_FS)
  USBx = hpcd->Instance;
#endif /* defined (USB_OTG_FS) */

  if (hpcd->State == HAL_PCD_STATE_RESET)
 8004d0a:	f890 3495 	ldrb.w	r3, [r0, #1173]	@ 0x495
  USBx = hpcd->Instance;
 8004d0e:	6805      	ldr	r5, [r0, #0]
  if (hpcd->State == HAL_PCD_STATE_RESET)
 8004d10:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 8004d14:	b91b      	cbnz	r3, 8004d1e <HAL_PCD_Init+0x1a>
  {
    /* Allocate lock resource and initialize it */
    hpcd->Lock = HAL_UNLOCKED;
 8004d16:	f880 2494 	strb.w	r2, [r0, #1172]	@ 0x494

    /* Init the low level hardware */
    hpcd->MspInitCallback(hpcd);
#else
    /* Init the low level hardware : GPIO, CLOCK, NVIC... */
    HAL_PCD_MspInit(hpcd);
 8004d1a:	f7fc fd5b 	bl	80017d4 <HAL_PCD_MspInit>
#endif /* (USE_HAL_PCD_REGISTER_CALLBACKS) */
  }

  hpcd->State = HAL_PCD_STATE_BUSY;
 8004d1e:	2303      	movs	r3, #3

#if defined (USB_OTG_FS)
  /* Disable DMA mode for FS instance */
  if (USBx == USB_OTG_FS)
 8004d20:	f1b5 4fa0 	cmp.w	r5, #1342177280	@ 0x50000000
  hpcd->State = HAL_PCD_STATE_BUSY;
 8004d24:	f884 3495 	strb.w	r3, [r4, #1173]	@ 0x495
  {
    hpcd->Init.dma_enable = 0U;
 8004d28:	bf04      	itt	eq
 8004d2a:	2300      	moveq	r3, #0
 8004d2c:	71a3      	strbeq	r3, [r4, #6]
  }
#endif /* defined (USB_OTG_FS) */

  /* Disable the Interrupts */
  __HAL_PCD_DISABLE(hpcd);
 8004d2e:	6820      	ldr	r0, [r4, #0]
 8004d30:	f001 ffcc 	bl	8006ccc <USB_DisableGlobalInt>

  /*Init the Core (common init.) */
  if (USB_CoreInit(hpcd->Instance, hpcd->Init) != HAL_OK)
 8004d34:	7c23      	ldrb	r3, [r4, #16]
 8004d36:	f88d 3000 	strb.w	r3, [sp]
 8004d3a:	1d25      	adds	r5, r4, #4
 8004d3c:	e895 000e 	ldmia.w	r5, {r1, r2, r3}
 8004d40:	6820      	ldr	r0, [r4, #0]
 8004d42:	f001 ff08 	bl	8006b56 <USB_CoreInit>
 8004d46:	4601      	mov	r1, r0
 8004d48:	b130      	cbz	r0, 8004d58 <HAL_PCD_Init+0x54>
  {
    hpcd->State = HAL_PCD_STATE_ERROR;
 8004d4a:	2302      	movs	r3, #2
 8004d4c:	f884 3495 	strb.w	r3, [r4, #1173]	@ 0x495
    return HAL_ERROR;
 8004d50:	2501      	movs	r5, #1
          defined(STM32F412Vx) || defined(STM32F412Rx) || defined(STM32F412Cx) || defined(STM32F413xx) ||
          defined(STM32F423xx) */
  (void)USB_DevDisconnect(hpcd->Instance);

  return HAL_OK;
}
 8004d52:	4628      	mov	r0, r5
 8004d54:	b003      	add	sp, #12
 8004d56:	bdf0      	pop	{r4, r5, r6, r7, pc}
  if (USB_SetCurrentMode(hpcd->Instance, USB_DEVICE_MODE) != HAL_OK)
 8004d58:	6820      	ldr	r0, [r4, #0]
 8004d5a:	f001 ffbd 	bl	8006cd8 <USB_SetCurrentMode>
 8004d5e:	2800      	cmp	r0, #0
 8004d60:	d1f3      	bne.n	8004d4a <HAL_PCD_Init+0x46>
  for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
 8004d62:	7926      	ldrb	r6, [r4, #4]
 8004d64:	f104 0314 	add.w	r3, r4, #20
    hpcd->IN_ep[i].is_in = 1U;
 8004d68:	2701      	movs	r7, #1
    hpcd->IN_ep[i].type = EP_TYPE_CTRL;
 8004d6a:	4602      	mov	r2, r0
 8004d6c:	b2c1      	uxtb	r1, r0
  for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
 8004d6e:	428e      	cmp	r6, r1
 8004d70:	f103 0324 	add.w	r3, r3, #36	@ 0x24
 8004d74:	d81b      	bhi.n	8004dae <HAL_PCD_Init+0xaa>
 8004d76:	2100      	movs	r1, #0
 8004d78:	f504 7315 	add.w	r3, r4, #596	@ 0x254
    hpcd->OUT_ep[i].is_in = 0U;
 8004d7c:	460a      	mov	r2, r1
 8004d7e:	b2c8      	uxtb	r0, r1
  for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
 8004d80:	4286      	cmp	r6, r0
 8004d82:	f103 0324 	add.w	r3, r3, #36	@ 0x24
 8004d86:	d820      	bhi.n	8004dca <HAL_PCD_Init+0xc6>
  if (USB_DevInit(hpcd->Instance, hpcd->Init) != HAL_OK)
 8004d88:	7c23      	ldrb	r3, [r4, #16]
 8004d8a:	f88d 3000 	strb.w	r3, [sp]
 8004d8e:	e895 000e 	ldmia.w	r5, {r1, r2, r3}
 8004d92:	6820      	ldr	r0, [r4, #0]
 8004d94:	f002 f81c 	bl	8006dd0 <USB_DevInit>
 8004d98:	4605      	mov	r5, r0
 8004d9a:	2800      	cmp	r0, #0
 8004d9c:	d1d5      	bne.n	8004d4a <HAL_PCD_Init+0x46>
  hpcd->State = HAL_PCD_STATE_READY;
 8004d9e:	2301      	movs	r3, #1
  hpcd->USB_Address = 0U;
 8004da0:	7460      	strb	r0, [r4, #17]
  (void)USB_DevDisconnect(hpcd->Instance);
 8004da2:	6820      	ldr	r0, [r4, #0]
  hpcd->State = HAL_PCD_STATE_READY;
 8004da4:	f884 3495 	strb.w	r3, [r4, #1173]	@ 0x495
  (void)USB_DevDisconnect(hpcd->Instance);
 8004da8:	f002 fb56 	bl	8007458 <USB_DevDisconnect>
  return HAL_OK;
 8004dac:	e7d1      	b.n	8004d52 <HAL_PCD_Init+0x4e>
    hpcd->IN_ep[i].tx_fifo_num = i;
 8004dae:	f823 0c0a 	strh.w	r0, [r3, #-10]
    hpcd->IN_ep[i].xfer_buff = 0U;
 8004db2:	e943 2207 	strd	r2, r2, [r3, #-28]
    hpcd->IN_ep[i].is_in = 1U;
 8004db6:	f803 7c23 	strb.w	r7, [r3, #-35]
    hpcd->IN_ep[i].num = i;
 8004dba:	f803 1c24 	strb.w	r1, [r3, #-36]
    hpcd->IN_ep[i].type = EP_TYPE_CTRL;
 8004dbe:	f803 2c20 	strb.w	r2, [r3, #-32]
    hpcd->IN_ep[i].xfer_len = 0U;
 8004dc2:	f843 2c14 	str.w	r2, [r3, #-20]
  for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
 8004dc6:	3001      	adds	r0, #1
 8004dc8:	e7d0      	b.n	8004d6c <HAL_PCD_Init+0x68>
    hpcd->OUT_ep[i].xfer_buff = 0U;
 8004dca:	e943 2207 	strd	r2, r2, [r3, #-28]
    hpcd->OUT_ep[i].is_in = 0U;
 8004dce:	f803 2c23 	strb.w	r2, [r3, #-35]
    hpcd->OUT_ep[i].num = i;
 8004dd2:	f803 0c24 	strb.w	r0, [r3, #-36]
    hpcd->OUT_ep[i].type = EP_TYPE_CTRL;
 8004dd6:	f803 2c20 	strb.w	r2, [r3, #-32]
    hpcd->OUT_ep[i].xfer_len = 0U;
 8004dda:	f843 2c14 	str.w	r2, [r3, #-20]
  for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
 8004dde:	3101      	adds	r1, #1
 8004de0:	e7cd      	b.n	8004d7e <HAL_PCD_Init+0x7a>

08004de2 <HAL_PCD_Start>:
  * @brief  Start the USB device
  * @param  hpcd PCD handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_PCD_Start(PCD_HandleTypeDef *hpcd)
{
 8004de2:	b510      	push	{r4, lr}
 8004de4:	4604      	mov	r4, r0
  USB_OTG_GlobalTypeDef *USBx = hpcd->Instance;
 8004de6:	6800      	ldr	r0, [r0, #0]

  __HAL_LOCK(hpcd);
 8004de8:	f894 3494 	ldrb.w	r3, [r4, #1172]	@ 0x494
 8004dec:	2b01      	cmp	r3, #1
 8004dee:	d015      	beq.n	8004e1c <HAL_PCD_Start+0x3a>
 8004df0:	2301      	movs	r3, #1
 8004df2:	f884 3494 	strb.w	r3, [r4, #1172]	@ 0x494

  if (((USBx->GUSBCFG & USB_OTG_GUSBCFG_PHYSEL) != 0U) &&
 8004df6:	68c3      	ldr	r3, [r0, #12]
 8004df8:	065b      	lsls	r3, r3, #25
 8004dfa:	d506      	bpl.n	8004e0a <HAL_PCD_Start+0x28>
 8004dfc:	7b63      	ldrb	r3, [r4, #13]
 8004dfe:	2b01      	cmp	r3, #1
      (hpcd->Init.battery_charging_enable == 1U))
  {
    /* Enable USB Transceiver */
    USBx->GCCFG |= USB_OTG_GCCFG_PWRDWN;
 8004e00:	bf02      	ittt	eq
 8004e02:	6b83      	ldreq	r3, [r0, #56]	@ 0x38
 8004e04:	f443 3380 	orreq.w	r3, r3, #65536	@ 0x10000
 8004e08:	6383      	streq	r3, [r0, #56]	@ 0x38
  }

  __HAL_PCD_ENABLE(hpcd);
 8004e0a:	f001 ff59 	bl	8006cc0 <USB_EnableGlobalInt>
  (void)USB_DevConnect(hpcd->Instance);
 8004e0e:	6820      	ldr	r0, [r4, #0]
 8004e10:	f002 fb14 	bl	800743c <USB_DevConnect>
  __HAL_UNLOCK(hpcd);
 8004e14:	2000      	movs	r0, #0
 8004e16:	f884 0494 	strb.w	r0, [r4, #1172]	@ 0x494

  return HAL_OK;
}
 8004e1a:	bd10      	pop	{r4, pc}
  __HAL_LOCK(hpcd);
 8004e1c:	2002      	movs	r0, #2
 8004e1e:	e7fc      	b.n	8004e1a <HAL_PCD_Start+0x38>

08004e20 <HAL_PCD_SetAddress>:
  * @param  hpcd PCD handle
  * @param  address new device address
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_PCD_SetAddress(PCD_HandleTypeDef *hpcd, uint8_t address)
{
 8004e20:	b510      	push	{r4, lr}
  __HAL_LOCK(hpcd);
 8004e22:	f890 2494 	ldrb.w	r2, [r0, #1172]	@ 0x494
 8004e26:	2a01      	cmp	r2, #1
{
 8004e28:	4604      	mov	r4, r0
  __HAL_LOCK(hpcd);
 8004e2a:	d00a      	beq.n	8004e42 <HAL_PCD_SetAddress+0x22>
 8004e2c:	2201      	movs	r2, #1
 8004e2e:	f880 2494 	strb.w	r2, [r0, #1172]	@ 0x494
  hpcd->USB_Address = address;
 8004e32:	7441      	strb	r1, [r0, #17]
  (void)USB_SetDevAddress(hpcd->Instance, address);
 8004e34:	6800      	ldr	r0, [r0, #0]
 8004e36:	f002 faf1 	bl	800741c <USB_SetDevAddress>
  __HAL_UNLOCK(hpcd);
 8004e3a:	2000      	movs	r0, #0
 8004e3c:	f884 0494 	strb.w	r0, [r4, #1172]	@ 0x494

  return HAL_OK;
}
 8004e40:	bd10      	pop	{r4, pc}
  __HAL_LOCK(hpcd);
 8004e42:	2002      	movs	r0, #2
 8004e44:	e7fc      	b.n	8004e40 <HAL_PCD_SetAddress+0x20>

08004e46 <HAL_PCD_EP_Open>:
  * @param  ep_type endpoint type
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_PCD_EP_Open(PCD_HandleTypeDef *hpcd, uint8_t ep_addr,
                                  uint16_t ep_mps, uint8_t ep_type)
{
 8004e46:	b570      	push	{r4, r5, r6, lr}
 8004e48:	f001 060f 	and.w	r6, r1, #15
 8004e4c:	eb06 04c6 	add.w	r4, r6, r6, lsl #3
  HAL_StatusTypeDef ret = HAL_OK;
  PCD_EPTypeDef *ep;

  if ((ep_addr & 0x80U) == 0x80U)
 8004e50:	f011 0f80 	tst.w	r1, #128	@ 0x80
{
 8004e54:	4605      	mov	r5, r0
 8004e56:	ea4f 0484 	mov.w	r4, r4, lsl #2
 8004e5a:	f04f 0024 	mov.w	r0, #36	@ 0x24
  if ((ep_addr & 0x80U) == 0x80U)
 8004e5e:	d020      	beq.n	8004ea2 <HAL_PCD_EP_Open+0x5c>
  {
    ep = &hpcd->IN_ep[ep_addr & EP_ADDR_MSK];
    ep->is_in = 1U;
 8004e60:	fb00 5006 	mla	r0, r0, r6, r5
    ep = &hpcd->IN_ep[ep_addr & EP_ADDR_MSK];
 8004e64:	f104 0114 	add.w	r1, r4, #20
    ep->is_in = 1U;
 8004e68:	2401      	movs	r4, #1
    ep = &hpcd->IN_ep[ep_addr & EP_ADDR_MSK];
 8004e6a:	4429      	add	r1, r5
    ep->is_in = 1U;
 8004e6c:	7544      	strb	r4, [r0, #21]
    ep = &hpcd->OUT_ep[ep_addr & EP_ADDR_MSK];
    ep->is_in = 0U;
  }

  ep->num = ep_addr & EP_ADDR_MSK;
  ep->maxpacket = (uint32_t)ep_mps & 0x7FFU;
 8004e6e:	f3c2 020a 	ubfx	r2, r2, #0, #11
 8004e72:	608a      	str	r2, [r1, #8]
  ep->type = ep_type;

  if (ep->is_in != 0U)
 8004e74:	784a      	ldrb	r2, [r1, #1]
  ep->num = ep_addr & EP_ADDR_MSK;
 8004e76:	700e      	strb	r6, [r1, #0]
  ep->type = ep_type;
 8004e78:	710b      	strb	r3, [r1, #4]
  if (ep->is_in != 0U)
 8004e7a:	b102      	cbz	r2, 8004e7e <HAL_PCD_EP_Open+0x38>
  {
    /* Assign a Tx FIFO */
    ep->tx_fifo_num = ep->num;
 8004e7c:	834e      	strh	r6, [r1, #26]
  }

  /* Set initial data PID. */
  if (ep_type == EP_TYPE_BULK)
 8004e7e:	2b02      	cmp	r3, #2
  {
    ep->data_pid_start = 0U;
 8004e80:	bf04      	itt	eq
 8004e82:	2300      	moveq	r3, #0
 8004e84:	714b      	strbeq	r3, [r1, #5]
  }

  __HAL_LOCK(hpcd);
 8004e86:	f895 3494 	ldrb.w	r3, [r5, #1172]	@ 0x494
 8004e8a:	2b01      	cmp	r3, #1
 8004e8c:	d012      	beq.n	8004eb4 <HAL_PCD_EP_Open+0x6e>
 8004e8e:	2301      	movs	r3, #1
  (void)USB_ActivateEndpoint(hpcd->Instance, ep);
 8004e90:	6828      	ldr	r0, [r5, #0]
  __HAL_LOCK(hpcd);
 8004e92:	f885 3494 	strb.w	r3, [r5, #1172]	@ 0x494
  (void)USB_ActivateEndpoint(hpcd->Instance, ep);
 8004e96:	f002 f860 	bl	8006f5a <USB_ActivateEndpoint>
  __HAL_UNLOCK(hpcd);
 8004e9a:	2000      	movs	r0, #0
 8004e9c:	f885 0494 	strb.w	r0, [r5, #1172]	@ 0x494

  return ret;
}
 8004ea0:	bd70      	pop	{r4, r5, r6, pc}
    ep->is_in = 0U;
 8004ea2:	fb00 5006 	mla	r0, r0, r6, r5
    ep = &hpcd->OUT_ep[ep_addr & EP_ADDR_MSK];
 8004ea6:	f504 7115 	add.w	r1, r4, #596	@ 0x254
    ep->is_in = 0U;
 8004eaa:	2400      	movs	r4, #0
    ep = &hpcd->OUT_ep[ep_addr & EP_ADDR_MSK];
 8004eac:	4429      	add	r1, r5
    ep->is_in = 0U;
 8004eae:	f880 4255 	strb.w	r4, [r0, #597]	@ 0x255
 8004eb2:	e7dc      	b.n	8004e6e <HAL_PCD_EP_Open+0x28>
  __HAL_LOCK(hpcd);
 8004eb4:	2002      	movs	r0, #2
 8004eb6:	e7f3      	b.n	8004ea0 <HAL_PCD_EP_Open+0x5a>

08004eb8 <HAL_PCD_EP_Close>:
  * @param  hpcd PCD handle
  * @param  ep_addr endpoint address
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_PCD_EP_Close(PCD_HandleTypeDef *hpcd, uint8_t ep_addr)
{
 8004eb8:	b510      	push	{r4, lr}
 8004eba:	4604      	mov	r4, r0
 8004ebc:	f001 000f 	and.w	r0, r1, #15
 8004ec0:	eb00 03c0 	add.w	r3, r0, r0, lsl #3
  PCD_EPTypeDef *ep;

  if ((ep_addr & 0x80U) == 0x80U)
 8004ec4:	f011 0f80 	tst.w	r1, #128	@ 0x80
 8004ec8:	ea4f 0383 	mov.w	r3, r3, lsl #2
 8004ecc:	f04f 0224 	mov.w	r2, #36	@ 0x24
 8004ed0:	d015      	beq.n	8004efe <HAL_PCD_EP_Close+0x46>
  {
    ep = &hpcd->IN_ep[ep_addr & EP_ADDR_MSK];
    ep->is_in = 1U;
 8004ed2:	fb02 4200 	mla	r2, r2, r0, r4
    ep = &hpcd->IN_ep[ep_addr & EP_ADDR_MSK];
 8004ed6:	f103 0114 	add.w	r1, r3, #20
    ep->is_in = 1U;
 8004eda:	2301      	movs	r3, #1
    ep = &hpcd->IN_ep[ep_addr & EP_ADDR_MSK];
 8004edc:	4421      	add	r1, r4
    ep->is_in = 1U;
 8004ede:	7553      	strb	r3, [r2, #21]
  else
  {
    ep = &hpcd->OUT_ep[ep_addr & EP_ADDR_MSK];
    ep->is_in = 0U;
  }
  ep->num = ep_addr & EP_ADDR_MSK;
 8004ee0:	7008      	strb	r0, [r1, #0]

  __HAL_LOCK(hpcd);
 8004ee2:	f894 3494 	ldrb.w	r3, [r4, #1172]	@ 0x494
 8004ee6:	2b01      	cmp	r3, #1
 8004ee8:	d012      	beq.n	8004f10 <HAL_PCD_EP_Close+0x58>
 8004eea:	2301      	movs	r3, #1
  (void)USB_DeactivateEndpoint(hpcd->Instance, ep);
 8004eec:	6820      	ldr	r0, [r4, #0]
  __HAL_LOCK(hpcd);
 8004eee:	f884 3494 	strb.w	r3, [r4, #1172]	@ 0x494
  (void)USB_DeactivateEndpoint(hpcd->Instance, ep);
 8004ef2:	f002 f871 	bl	8006fd8 <USB_DeactivateEndpoint>
  __HAL_UNLOCK(hpcd);
 8004ef6:	2000      	movs	r0, #0
 8004ef8:	f884 0494 	strb.w	r0, [r4, #1172]	@ 0x494
  return HAL_OK;
}
 8004efc:	bd10      	pop	{r4, pc}
    ep->is_in = 0U;
 8004efe:	fb02 4200 	mla	r2, r2, r0, r4
    ep = &hpcd->OUT_ep[ep_addr & EP_ADDR_MSK];
 8004f02:	f503 7115 	add.w	r1, r3, #596	@ 0x254
    ep->is_in = 0U;
 8004f06:	2300      	movs	r3, #0
    ep = &hpcd->OUT_ep[ep_addr & EP_ADDR_MSK];
 8004f08:	4421      	add	r1, r4
    ep->is_in = 0U;
 8004f0a:	f882 3255 	strb.w	r3, [r2, #597]	@ 0x255
 8004f0e:	e7e7      	b.n	8004ee0 <HAL_PCD_EP_Close+0x28>
  __HAL_LOCK(hpcd);
 8004f10:	2002      	movs	r0, #2
 8004f12:	e7f3      	b.n	8004efc <HAL_PCD_EP_Close+0x44>

08004f14 <HAL_PCD_EP_Receive>:
  * @param  pBuf pointer to the reception buffer
  * @param  len amount of data to be received
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_PCD_EP_Receive(PCD_HandleTypeDef *hpcd, uint8_t ep_addr, uint8_t *pBuf, uint32_t len)
{
 8004f14:	b570      	push	{r4, r5, r6, lr}
 8004f16:	f001 050f 	and.w	r5, r1, #15
  PCD_EPTypeDef *ep;

  ep = &hpcd->OUT_ep[ep_addr & EP_ADDR_MSK];
 8004f1a:	2424      	movs	r4, #36	@ 0x24
 8004f1c:	fb04 0105 	mla	r1, r4, r5, r0

  /*setup and start the Xfer */
  ep->xfer_buff = pBuf;
 8004f20:	fb04 0405 	mla	r4, r4, r5, r0
  ep->xfer_len = len;
 8004f24:	e9c4 2398 	strd	r2, r3, [r4, #608]	@ 0x260
  ep->xfer_count = 0U;
 8004f28:	2300      	movs	r3, #0
 8004f2a:	f8c4 3268 	str.w	r3, [r4, #616]	@ 0x268
  ep->is_in = 0U;
 8004f2e:	f884 3255 	strb.w	r3, [r4, #597]	@ 0x255
  ep->num = ep_addr & EP_ADDR_MSK;
 8004f32:	f884 5254 	strb.w	r5, [r4, #596]	@ 0x254
{
 8004f36:	4616      	mov	r6, r2

  if (hpcd->Init.dma_enable == 1U)
 8004f38:	7982      	ldrb	r2, [r0, #6]
  {
    ep->dma_addr = (uint32_t)pBuf;
  }

  (void)USB_EPStartXfer(hpcd->Instance, ep, (uint8_t)hpcd->Init.dma_enable);
 8004f3a:	6800      	ldr	r0, [r0, #0]
  if (hpcd->Init.dma_enable == 1U)
 8004f3c:	2a01      	cmp	r2, #1
  ep = &hpcd->OUT_ep[ep_addr & EP_ADDR_MSK];
 8004f3e:	f501 7115 	add.w	r1, r1, #596	@ 0x254
    ep->dma_addr = (uint32_t)pBuf;
 8004f42:	bf08      	it	eq
 8004f44:	f8c4 6270 	streq.w	r6, [r4, #624]	@ 0x270
  (void)USB_EPStartXfer(hpcd->Instance, ep, (uint8_t)hpcd->Init.dma_enable);
 8004f48:	f002 f8f2 	bl	8007130 <USB_EPStartXfer>

  return HAL_OK;
}
 8004f4c:	2000      	movs	r0, #0
 8004f4e:	bd70      	pop	{r4, r5, r6, pc}

08004f50 <HAL_PCD_EP_Transmit>:
  * @param  pBuf pointer to the transmission buffer
  * @param  len amount of data to be sent
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_PCD_EP_Transmit(PCD_HandleTypeDef *hpcd, uint8_t ep_addr, uint8_t *pBuf, uint32_t len)
{
 8004f50:	b570      	push	{r4, r5, r6, lr}
 8004f52:	f001 050f 	and.w	r5, r1, #15
  PCD_EPTypeDef *ep;

  ep = &hpcd->IN_ep[ep_addr & EP_ADDR_MSK];
 8004f56:	2424      	movs	r4, #36	@ 0x24
 8004f58:	fb04 0105 	mla	r1, r4, r5, r0

  /*setup and start the Xfer */
  ep->xfer_buff = pBuf;
 8004f5c:	fb04 0405 	mla	r4, r4, r5, r0
  ep->xfer_len = len;
 8004f60:	e9c4 2308 	strd	r2, r3, [r4, #32]
  ep->xfer_count = 0U;
 8004f64:	2300      	movs	r3, #0
 8004f66:	62a3      	str	r3, [r4, #40]	@ 0x28
  ep->is_in = 1U;
 8004f68:	2301      	movs	r3, #1
 8004f6a:	7563      	strb	r3, [r4, #21]
  ep->num = ep_addr & EP_ADDR_MSK;
 8004f6c:	7525      	strb	r5, [r4, #20]
{
 8004f6e:	4616      	mov	r6, r2

  if (hpcd->Init.dma_enable == 1U)
 8004f70:	7982      	ldrb	r2, [r0, #6]
  {
    ep->dma_addr = (uint32_t)pBuf;
  }

  (void)USB_EPStartXfer(hpcd->Instance, ep, (uint8_t)hpcd->Init.dma_enable);
 8004f72:	6800      	ldr	r0, [r0, #0]
  if (hpcd->Init.dma_enable == 1U)
 8004f74:	429a      	cmp	r2, r3
  ep = &hpcd->IN_ep[ep_addr & EP_ADDR_MSK];
 8004f76:	f101 0114 	add.w	r1, r1, #20
    ep->dma_addr = (uint32_t)pBuf;
 8004f7a:	bf08      	it	eq
 8004f7c:	6326      	streq	r6, [r4, #48]	@ 0x30
  (void)USB_EPStartXfer(hpcd->Instance, ep, (uint8_t)hpcd->Init.dma_enable);
 8004f7e:	f002 f8d7 	bl	8007130 <USB_EPStartXfer>

  return HAL_OK;
}
 8004f82:	2000      	movs	r0, #0
 8004f84:	bd70      	pop	{r4, r5, r6, pc}

08004f86 <HAL_PCD_EP_SetStall>:
  * @param  hpcd PCD handle
  * @param  ep_addr endpoint address
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_PCD_EP_SetStall(PCD_HandleTypeDef *hpcd, uint8_t ep_addr)
{
 8004f86:	b538      	push	{r3, r4, r5, lr}
  PCD_EPTypeDef *ep;

  if (((uint32_t)ep_addr & EP_ADDR_MSK) > hpcd->Init.dev_endpoints)
 8004f88:	7903      	ldrb	r3, [r0, #4]
 8004f8a:	f001 050f 	and.w	r5, r1, #15
 8004f8e:	42ab      	cmp	r3, r5
{
 8004f90:	4604      	mov	r4, r0
  if (((uint32_t)ep_addr & EP_ADDR_MSK) > hpcd->Init.dev_endpoints)
 8004f92:	d32b      	bcc.n	8004fec <HAL_PCD_EP_SetStall+0x66>
  {
    return HAL_ERROR;
  }

  if ((0x80U & ep_addr) == 0x80U)
 8004f94:	f011 0f80 	tst.w	r1, #128	@ 0x80
 8004f98:	f04f 0024 	mov.w	r0, #36	@ 0x24
 8004f9c:	d01d      	beq.n	8004fda <HAL_PCD_EP_SetStall+0x54>
  {
    ep = &hpcd->IN_ep[ep_addr & EP_ADDR_MSK];
 8004f9e:	fb00 4105 	mla	r1, r0, r5, r4
    ep->is_in = 1U;
 8004fa2:	fb00 4005 	mla	r0, r0, r5, r4
 8004fa6:	2301      	movs	r3, #1
    ep = &hpcd->IN_ep[ep_addr & EP_ADDR_MSK];
 8004fa8:	3114      	adds	r1, #20
    ep->is_in = 1U;
 8004faa:	7543      	strb	r3, [r0, #21]
  {
    ep = &hpcd->OUT_ep[ep_addr];
    ep->is_in = 0U;
  }

  ep->is_stall = 1U;
 8004fac:	2301      	movs	r3, #1
 8004fae:	708b      	strb	r3, [r1, #2]
  ep->num = ep_addr & EP_ADDR_MSK;
 8004fb0:	700d      	strb	r5, [r1, #0]

  __HAL_LOCK(hpcd);
 8004fb2:	f894 2494 	ldrb.w	r2, [r4, #1172]	@ 0x494
 8004fb6:	429a      	cmp	r2, r3
 8004fb8:	d01a      	beq.n	8004ff0 <HAL_PCD_EP_SetStall+0x6a>

  (void)USB_EPSetStall(hpcd->Instance, ep);
 8004fba:	6820      	ldr	r0, [r4, #0]
  __HAL_LOCK(hpcd);
 8004fbc:	f884 3494 	strb.w	r3, [r4, #1172]	@ 0x494
  (void)USB_EPSetStall(hpcd->Instance, ep);
 8004fc0:	f002 f9d8 	bl	8007374 <USB_EPSetStall>

  if ((ep_addr & EP_ADDR_MSK) == 0U)
 8004fc4:	b92d      	cbnz	r5, 8004fd2 <HAL_PCD_EP_SetStall+0x4c>
  {
    (void)USB_EP0_OutStart(hpcd->Instance, (uint8_t)hpcd->Init.dma_enable, (uint8_t *)hpcd->Setup);
 8004fc6:	79a1      	ldrb	r1, [r4, #6]
 8004fc8:	6820      	ldr	r0, [r4, #0]
 8004fca:	f204 429c 	addw	r2, r4, #1180	@ 0x49c
 8004fce:	f002 fa91 	bl	80074f4 <USB_EP0_OutStart>
  }

  __HAL_UNLOCK(hpcd);
 8004fd2:	2000      	movs	r0, #0
 8004fd4:	f884 0494 	strb.w	r0, [r4, #1172]	@ 0x494

  return HAL_OK;
}
 8004fd8:	bd38      	pop	{r3, r4, r5, pc}
    ep = &hpcd->OUT_ep[ep_addr];
 8004fda:	fb00 4301 	mla	r3, r0, r1, r4
    ep->is_in = 0U;
 8004fde:	461a      	mov	r2, r3
    ep = &hpcd->OUT_ep[ep_addr];
 8004fe0:	f503 7115 	add.w	r1, r3, #596	@ 0x254
    ep->is_in = 0U;
 8004fe4:	2300      	movs	r3, #0
 8004fe6:	f882 3255 	strb.w	r3, [r2, #597]	@ 0x255
 8004fea:	e7df      	b.n	8004fac <HAL_PCD_EP_SetStall+0x26>
    return HAL_ERROR;
 8004fec:	2001      	movs	r0, #1
 8004fee:	e7f3      	b.n	8004fd8 <HAL_PCD_EP_SetStall+0x52>
  __HAL_LOCK(hpcd);
 8004ff0:	2002      	movs	r0, #2
 8004ff2:	e7f1      	b.n	8004fd8 <HAL_PCD_EP_SetStall+0x52>

08004ff4 <HAL_PCD_EP_ClrStall>:
  * @param  hpcd PCD handle
  * @param  ep_addr endpoint address
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_PCD_EP_ClrStall(PCD_HandleTypeDef *hpcd, uint8_t ep_addr)
{
 8004ff4:	b538      	push	{r3, r4, r5, lr}
  PCD_EPTypeDef *ep;

  if (((uint32_t)ep_addr & 0x0FU) > hpcd->Init.dev_endpoints)
 8004ff6:	7903      	ldrb	r3, [r0, #4]
 8004ff8:	f001 020f 	and.w	r2, r1, #15
 8004ffc:	4293      	cmp	r3, r2
{
 8004ffe:	4604      	mov	r4, r0
  if (((uint32_t)ep_addr & 0x0FU) > hpcd->Init.dev_endpoints)
 8005000:	d329      	bcc.n	8005056 <HAL_PCD_EP_ClrStall+0x62>
  {
    return HAL_ERROR;
  }

  if ((0x80U & ep_addr) == 0x80U)
 8005002:	eb02 03c2 	add.w	r3, r2, r2, lsl #3
 8005006:	f011 0f80 	tst.w	r1, #128	@ 0x80
 800500a:	ea4f 0383 	mov.w	r3, r3, lsl #2
 800500e:	f04f 0024 	mov.w	r0, #36	@ 0x24
 8005012:	d017      	beq.n	8005044 <HAL_PCD_EP_ClrStall+0x50>
  {
    ep = &hpcd->IN_ep[ep_addr & EP_ADDR_MSK];
    ep->is_in = 1U;
 8005014:	fb00 4002 	mla	r0, r0, r2, r4
    ep = &hpcd->IN_ep[ep_addr & EP_ADDR_MSK];
 8005018:	f103 0114 	add.w	r1, r3, #20
    ep->is_in = 1U;
 800501c:	2301      	movs	r3, #1
    ep = &hpcd->IN_ep[ep_addr & EP_ADDR_MSK];
 800501e:	4421      	add	r1, r4
    ep->is_in = 1U;
 8005020:	7543      	strb	r3, [r0, #21]
  {
    ep = &hpcd->OUT_ep[ep_addr & EP_ADDR_MSK];
    ep->is_in = 0U;
  }

  ep->is_stall = 0U;
 8005022:	2500      	movs	r5, #0
 8005024:	708d      	strb	r5, [r1, #2]
  ep->num = ep_addr & EP_ADDR_MSK;
 8005026:	700a      	strb	r2, [r1, #0]

  __HAL_LOCK(hpcd);
 8005028:	f894 3494 	ldrb.w	r3, [r4, #1172]	@ 0x494
 800502c:	2b01      	cmp	r3, #1
 800502e:	d014      	beq.n	800505a <HAL_PCD_EP_ClrStall+0x66>
 8005030:	2301      	movs	r3, #1
  (void)USB_EPClearStall(hpcd->Instance, ep);
 8005032:	6820      	ldr	r0, [r4, #0]
  __HAL_LOCK(hpcd);
 8005034:	f884 3494 	strb.w	r3, [r4, #1172]	@ 0x494
  (void)USB_EPClearStall(hpcd->Instance, ep);
 8005038:	f002 f9c7 	bl	80073ca <USB_EPClearStall>
  __HAL_UNLOCK(hpcd);
 800503c:	f884 5494 	strb.w	r5, [r4, #1172]	@ 0x494

  return HAL_OK;
 8005040:	4628      	mov	r0, r5
}
 8005042:	bd38      	pop	{r3, r4, r5, pc}
    ep->is_in = 0U;
 8005044:	fb00 4002 	mla	r0, r0, r2, r4
    ep = &hpcd->OUT_ep[ep_addr & EP_ADDR_MSK];
 8005048:	f503 7115 	add.w	r1, r3, #596	@ 0x254
    ep->is_in = 0U;
 800504c:	2300      	movs	r3, #0
    ep = &hpcd->OUT_ep[ep_addr & EP_ADDR_MSK];
 800504e:	4421      	add	r1, r4
    ep->is_in = 0U;
 8005050:	f880 3255 	strb.w	r3, [r0, #597]	@ 0x255
 8005054:	e7e5      	b.n	8005022 <HAL_PCD_EP_ClrStall+0x2e>
    return HAL_ERROR;
 8005056:	2001      	movs	r0, #1
 8005058:	e7f3      	b.n	8005042 <HAL_PCD_EP_ClrStall+0x4e>
  __HAL_LOCK(hpcd);
 800505a:	2002      	movs	r0, #2
 800505c:	e7f1      	b.n	8005042 <HAL_PCD_EP_ClrStall+0x4e>

0800505e <HAL_PCD_EP_Abort>:
HAL_StatusTypeDef HAL_PCD_EP_Abort(PCD_HandleTypeDef *hpcd, uint8_t ep_addr)
{
  HAL_StatusTypeDef ret;
  PCD_EPTypeDef *ep;

  if ((0x80U & ep_addr) == 0x80U)
 800505e:	f001 030f 	and.w	r3, r1, #15
 8005062:	eb03 03c3 	add.w	r3, r3, r3, lsl #3
 8005066:	060a      	lsls	r2, r1, #24
  {
    ep = &hpcd->IN_ep[ep_addr & EP_ADDR_MSK];
 8005068:	ea4f 0383 	mov.w	r3, r3, lsl #2
 800506c:	bf4c      	ite	mi
 800506e:	f103 0114 	addmi.w	r1, r3, #20
  }
  else
  {
    ep = &hpcd->OUT_ep[ep_addr & EP_ADDR_MSK];
 8005072:	f503 7115 	addpl.w	r1, r3, #596	@ 0x254
 8005076:	4401      	add	r1, r0
  }

  /* Stop Xfer */
  ret = USB_EPStopXfer(hpcd->Instance, ep);
 8005078:	6800      	ldr	r0, [r0, #0]
 800507a:	f002 b803 	b.w	8007084 <USB_EPStopXfer>
	...

08005080 <HAL_PCD_IRQHandler>:
{
 8005080:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  USB_OTG_GlobalTypeDef *USBx = hpcd->Instance;
 8005084:	6806      	ldr	r6, [r0, #0]
{
 8005086:	b089      	sub	sp, #36	@ 0x24
 8005088:	4604      	mov	r4, r0
  if (USB_GetMode(hpcd->Instance) == USB_OTG_MODE_DEVICE)
 800508a:	4630      	mov	r0, r6
 800508c:	f002 fa20 	bl	80074d0 <USB_GetMode>
 8005090:	9003      	str	r0, [sp, #12]
 8005092:	2800      	cmp	r0, #0
 8005094:	f040 8158 	bne.w	8005348 <HAL_PCD_IRQHandler+0x2c8>
    if (__HAL_PCD_IS_INVALID_INTERRUPT(hpcd))
 8005098:	6820      	ldr	r0, [r4, #0]
 800509a:	f002 f9eb 	bl	8007474 <USB_ReadInterrupts>
 800509e:	2800      	cmp	r0, #0
 80050a0:	f000 8152 	beq.w	8005348 <HAL_PCD_IRQHandler+0x2c8>
    hpcd->FrameNumber = (USBx_DEVICE->DSTS & USB_OTG_DSTS_FNSOF_Msk) >> USB_OTG_DSTS_FNSOF_Pos;
 80050a4:	f8d6 3808 	ldr.w	r3, [r6, #2056]	@ 0x808
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_MMIS))
 80050a8:	6820      	ldr	r0, [r4, #0]
    hpcd->FrameNumber = (USBx_DEVICE->DSTS & USB_OTG_DSTS_FNSOF_Msk) >> USB_OTG_DSTS_FNSOF_Pos;
 80050aa:	f3c3 230d 	ubfx	r3, r3, #8, #14
 80050ae:	f8c4 34d4 	str.w	r3, [r4, #1236]	@ 0x4d4
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_MMIS))
 80050b2:	f002 f9df 	bl	8007474 <USB_ReadInterrupts>
 80050b6:	0787      	lsls	r7, r0, #30
      __HAL_PCD_CLEAR_FLAG(hpcd, USB_OTG_GINTSTS_MMIS);
 80050b8:	bf48      	it	mi
 80050ba:	6822      	ldrmi	r2, [r4, #0]
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_RXFLVL))
 80050bc:	6820      	ldr	r0, [r4, #0]
      __HAL_PCD_CLEAR_FLAG(hpcd, USB_OTG_GINTSTS_MMIS);
 80050be:	bf42      	ittt	mi
 80050c0:	6953      	ldrmi	r3, [r2, #20]
 80050c2:	f003 0302 	andmi.w	r3, r3, #2
 80050c6:	6153      	strmi	r3, [r2, #20]
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_RXFLVL))
 80050c8:	f002 f9d4 	bl	8007474 <USB_ReadInterrupts>
 80050cc:	06c0      	lsls	r0, r0, #27
    hpcd->FrameNumber = (USBx_DEVICE->DSTS & USB_OTG_DSTS_FNSOF_Msk) >> USB_OTG_DSTS_FNSOF_Pos;
 80050ce:	f506 6500 	add.w	r5, r6, #2048	@ 0x800
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_RXFLVL))
 80050d2:	d52d      	bpl.n	8005130 <HAL_PCD_IRQHandler+0xb0>
      USB_MASK_INTERRUPT(hpcd->Instance, USB_OTG_GINTSTS_RXFLVL);
 80050d4:	6822      	ldr	r2, [r4, #0]
 80050d6:	6993      	ldr	r3, [r2, #24]
 80050d8:	f023 0310 	bic.w	r3, r3, #16
 80050dc:	6193      	str	r3, [r2, #24]
      RegVal = USBx->GRXSTSP;
 80050de:	f8d6 8020 	ldr.w	r8, [r6, #32]
      if (((RegVal & USB_OTG_GRXSTSP_PKTSTS) >> 17) ==  STS_DATA_UPDT)
 80050e2:	f408 13f0 	and.w	r3, r8, #1966080	@ 0x1e0000
 80050e6:	f5b3 2f80 	cmp.w	r3, #262144	@ 0x40000
      ep = &hpcd->OUT_ep[RegVal & USB_OTG_GRXSTSP_EPNUM];
 80050ea:	f008 070f 	and.w	r7, r8, #15
      if (((RegVal & USB_OTG_GRXSTSP_PKTSTS) >> 17) ==  STS_DATA_UPDT)
 80050ee:	f040 812e 	bne.w	800534e <HAL_PCD_IRQHandler+0x2ce>
        if ((RegVal & USB_OTG_GRXSTSP_BCNT) != 0U)
 80050f2:	f647 73f0 	movw	r3, #32752	@ 0x7ff0
 80050f6:	ea18 0f03 	tst.w	r8, r3
 80050fa:	d014      	beq.n	8005126 <HAL_PCD_IRQHandler+0xa6>
          (void)USB_ReadPacket(USBx, ep->xfer_buff,
 80050fc:	2324      	movs	r3, #36	@ 0x24
 80050fe:	fb03 4707 	mla	r7, r3, r7, r4
 8005102:	f3c8 190a 	ubfx	r9, r8, #4, #11
 8005106:	f8d7 1260 	ldr.w	r1, [r7, #608]	@ 0x260
 800510a:	464a      	mov	r2, r9
 800510c:	4630      	mov	r0, r6
 800510e:	f002 f911 	bl	8007334 <USB_ReadPacket>
          ep->xfer_buff += (RegVal & USB_OTG_GRXSTSP_BCNT) >> 4;
 8005112:	f8d7 3260 	ldr.w	r3, [r7, #608]	@ 0x260
 8005116:	444b      	add	r3, r9
 8005118:	f8c7 3260 	str.w	r3, [r7, #608]	@ 0x260
          ep->xfer_count += (RegVal & USB_OTG_GRXSTSP_BCNT) >> 4;
 800511c:	f8d7 3268 	ldr.w	r3, [r7, #616]	@ 0x268
 8005120:	444b      	add	r3, r9
        ep->xfer_count += (RegVal & USB_OTG_GRXSTSP_BCNT) >> 4;
 8005122:	f8c7 3268 	str.w	r3, [r7, #616]	@ 0x268
      USB_UNMASK_INTERRUPT(hpcd->Instance, USB_OTG_GINTSTS_RXFLVL);
 8005126:	6822      	ldr	r2, [r4, #0]
 8005128:	6993      	ldr	r3, [r2, #24]
 800512a:	f043 0310 	orr.w	r3, r3, #16
 800512e:	6193      	str	r3, [r2, #24]
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_OEPINT))
 8005130:	6820      	ldr	r0, [r4, #0]
 8005132:	f002 f99f 	bl	8007474 <USB_ReadInterrupts>
 8005136:	0301      	lsls	r1, r0, #12
 8005138:	f100 811c 	bmi.w	8005374 <HAL_PCD_IRQHandler+0x2f4>
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_IEPINT))
 800513c:	6820      	ldr	r0, [r4, #0]
 800513e:	f002 f999 	bl	8007474 <USB_ReadInterrupts>
 8005142:	0342      	lsls	r2, r0, #13
 8005144:	d50d      	bpl.n	8005162 <HAL_PCD_IRQHandler+0xe2>
      ep_intr = USB_ReadDevAllInEpInterrupt(hpcd->Instance);
 8005146:	6820      	ldr	r0, [r4, #0]
 8005148:	f002 f9a0 	bl	800748c <USB_ReadDevAllInEpInterrupt>
 800514c:	4627      	mov	r7, r4
 800514e:	9004      	str	r0, [sp, #16]
      while (ep_intr != 0U)
 8005150:	f506 6b10 	add.w	fp, r6, #2304	@ 0x900
      epnum = 0U;
 8005154:	f04f 0a00 	mov.w	sl, #0
      while (ep_intr != 0U)
 8005158:	9b04      	ldr	r3, [sp, #16]
          epint = USB_ReadDevInEPInterrupt(hpcd->Instance, (uint8_t)epnum);
 800515a:	6820      	ldr	r0, [r4, #0]
      while (ep_intr != 0U)
 800515c:	2b00      	cmp	r3, #0
 800515e:	f040 81d3 	bne.w	8005508 <HAL_PCD_IRQHandler+0x488>
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_WKUINT))
 8005162:	6820      	ldr	r0, [r4, #0]
 8005164:	f002 f986 	bl	8007474 <USB_ReadInterrupts>
 8005168:	2800      	cmp	r0, #0
 800516a:	da13      	bge.n	8005194 <HAL_PCD_IRQHandler+0x114>
      USBx_DEVICE->DCTL &= ~USB_OTG_DCTL_RWUSIG;
 800516c:	686b      	ldr	r3, [r5, #4]
 800516e:	f023 0301 	bic.w	r3, r3, #1
 8005172:	606b      	str	r3, [r5, #4]
      if (hpcd->LPM_State == LPM_L1)
 8005174:	f894 34cc 	ldrb.w	r3, [r4, #1228]	@ 0x4cc
 8005178:	2b01      	cmp	r3, #1
 800517a:	f040 826b 	bne.w	8005654 <HAL_PCD_IRQHandler+0x5d4>
        hpcd->LPM_State = LPM_L0;
 800517e:	2100      	movs	r1, #0
 8005180:	f884 14cc 	strb.w	r1, [r4, #1228]	@ 0x4cc
        HAL_PCDEx_LPM_Callback(hpcd, PCD_LPM_L0_ACTIVE);
 8005184:	4620      	mov	r0, r4
 8005186:	f000 fae6 	bl	8005756 <HAL_PCDEx_LPM_Callback>
      __HAL_PCD_CLEAR_FLAG(hpcd, USB_OTG_GINTSTS_WKUINT);
 800518a:	6822      	ldr	r2, [r4, #0]
 800518c:	6953      	ldr	r3, [r2, #20]
 800518e:	f003 4300 	and.w	r3, r3, #2147483648	@ 0x80000000
 8005192:	6153      	str	r3, [r2, #20]
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_USBSUSP))
 8005194:	6820      	ldr	r0, [r4, #0]
 8005196:	f002 f96d 	bl	8007474 <USB_ReadInterrupts>
 800519a:	0501      	lsls	r1, r0, #20
 800519c:	d50a      	bpl.n	80051b4 <HAL_PCD_IRQHandler+0x134>
      if ((USBx_DEVICE->DSTS & USB_OTG_DSTS_SUSPSTS) == USB_OTG_DSTS_SUSPSTS)
 800519e:	68ab      	ldr	r3, [r5, #8]
 80051a0:	07da      	lsls	r2, r3, #31
 80051a2:	d502      	bpl.n	80051aa <HAL_PCD_IRQHandler+0x12a>
        HAL_PCD_SuspendCallback(hpcd);
 80051a4:	4620      	mov	r0, r4
 80051a6:	f7fc fb8b 	bl	80018c0 <HAL_PCD_SuspendCallback>
      __HAL_PCD_CLEAR_FLAG(hpcd, USB_OTG_GINTSTS_USBSUSP);
 80051aa:	6822      	ldr	r2, [r4, #0]
 80051ac:	6953      	ldr	r3, [r2, #20]
 80051ae:	f403 6300 	and.w	r3, r3, #2048	@ 0x800
 80051b2:	6153      	str	r3, [r2, #20]
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_USBRST))
 80051b4:	6820      	ldr	r0, [r4, #0]
 80051b6:	f002 f95d 	bl	8007474 <USB_ReadInterrupts>
 80051ba:	04c3      	lsls	r3, r0, #19
 80051bc:	d533      	bpl.n	8005226 <HAL_PCD_IRQHandler+0x1a6>
      USBx_DEVICE->DCTL &= ~USB_OTG_DCTL_RWUSIG;
 80051be:	686b      	ldr	r3, [r5, #4]
      (void)USB_FlushTxFifo(hpcd->Instance, 0x10U);
 80051c0:	6820      	ldr	r0, [r4, #0]
      USBx_DEVICE->DCTL &= ~USB_OTG_DCTL_RWUSIG;
 80051c2:	f023 0301 	bic.w	r3, r3, #1
 80051c6:	606b      	str	r3, [r5, #4]
      (void)USB_FlushTxFifo(hpcd->Instance, 0x10U);
 80051c8:	2110      	movs	r1, #16
 80051ca:	f001 fdb5 	bl	8006d38 <USB_FlushTxFifo>
      for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
 80051ce:	7920      	ldrb	r0, [r4, #4]
 80051d0:	f506 6310 	add.w	r3, r6, #2304	@ 0x900
        USBx_INEP(i)->DIEPINT = 0xFB7FU;
 80051d4:	f64f 317f 	movw	r1, #64383	@ 0xfb7f
      for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
 80051d8:	9a03      	ldr	r2, [sp, #12]
 80051da:	4290      	cmp	r0, r2
 80051dc:	f200 823e 	bhi.w	800565c <HAL_PCD_IRQHandler+0x5dc>
      USBx_DEVICE->DAINTMSK |= 0x10001U;
 80051e0:	69eb      	ldr	r3, [r5, #28]
 80051e2:	f043 1301 	orr.w	r3, r3, #65537	@ 0x10001
 80051e6:	61eb      	str	r3, [r5, #28]
      if (hpcd->Init.use_dedicated_ep1 != 0U)
 80051e8:	7be3      	ldrb	r3, [r4, #15]
 80051ea:	2b00      	cmp	r3, #0
 80051ec:	f000 8252 	beq.w	8005694 <HAL_PCD_IRQHandler+0x614>
        USBx_DEVICE->DOUTEP1MSK |= USB_OTG_DOEPMSK_STUPM |
 80051f0:	f8d5 3084 	ldr.w	r3, [r5, #132]	@ 0x84
 80051f4:	f043 030b 	orr.w	r3, r3, #11
 80051f8:	f8c5 3084 	str.w	r3, [r5, #132]	@ 0x84
        USBx_DEVICE->DINEP1MSK |= USB_OTG_DIEPMSK_TOM |
 80051fc:	6c6b      	ldr	r3, [r5, #68]	@ 0x44
 80051fe:	f043 030b 	orr.w	r3, r3, #11
 8005202:	646b      	str	r3, [r5, #68]	@ 0x44
      USBx_DEVICE->DCFG &= ~USB_OTG_DCFG_DAD;
 8005204:	f8d6 3800 	ldr.w	r3, [r6, #2048]	@ 0x800
      (void)USB_EP0_OutStart(hpcd->Instance, (uint8_t)hpcd->Init.dma_enable,
 8005208:	6820      	ldr	r0, [r4, #0]
      USBx_DEVICE->DCFG &= ~USB_OTG_DCFG_DAD;
 800520a:	f423 63fe 	bic.w	r3, r3, #2032	@ 0x7f0
 800520e:	f8c6 3800 	str.w	r3, [r6, #2048]	@ 0x800
      (void)USB_EP0_OutStart(hpcd->Instance, (uint8_t)hpcd->Init.dma_enable,
 8005212:	f204 429c 	addw	r2, r4, #1180	@ 0x49c
 8005216:	79a1      	ldrb	r1, [r4, #6]
 8005218:	f002 f96c 	bl	80074f4 <USB_EP0_OutStart>
      __HAL_PCD_CLEAR_FLAG(hpcd, USB_OTG_GINTSTS_USBRST);
 800521c:	6822      	ldr	r2, [r4, #0]
 800521e:	6953      	ldr	r3, [r2, #20]
 8005220:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 8005224:	6153      	str	r3, [r2, #20]
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_ENUMDNE))
 8005226:	6820      	ldr	r0, [r4, #0]
 8005228:	f002 f924 	bl	8007474 <USB_ReadInterrupts>
 800522c:	0487      	lsls	r7, r0, #18
 800522e:	d516      	bpl.n	800525e <HAL_PCD_IRQHandler+0x1de>
      (void)USB_ActivateSetup(hpcd->Instance);
 8005230:	6820      	ldr	r0, [r4, #0]
 8005232:	f002 f951 	bl	80074d8 <USB_ActivateSetup>
      hpcd->Init.speed = USB_GetDevSpeed(hpcd->Instance);
 8005236:	6820      	ldr	r0, [r4, #0]
 8005238:	f001 fe84 	bl	8006f44 <USB_GetDevSpeed>
 800523c:	71e0      	strb	r0, [r4, #7]
      (void)USB_SetTurnaroundTime(hpcd->Instance,
 800523e:	6827      	ldr	r7, [r4, #0]
 8005240:	f000 fd00 	bl	8005c44 <HAL_RCC_GetHCLKFreq>
 8005244:	79e2      	ldrb	r2, [r4, #7]
 8005246:	4601      	mov	r1, r0
 8005248:	4638      	mov	r0, r7
 800524a:	f001 fcc9 	bl	8006be0 <USB_SetTurnaroundTime>
      HAL_PCD_ResetCallback(hpcd);
 800524e:	4620      	mov	r0, r4
 8005250:	f7fc fb23 	bl	800189a <HAL_PCD_ResetCallback>
      __HAL_PCD_CLEAR_FLAG(hpcd, USB_OTG_GINTSTS_ENUMDNE);
 8005254:	6822      	ldr	r2, [r4, #0]
 8005256:	6953      	ldr	r3, [r2, #20]
 8005258:	f403 5300 	and.w	r3, r3, #8192	@ 0x2000
 800525c:	6153      	str	r3, [r2, #20]
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_SOF))
 800525e:	6820      	ldr	r0, [r4, #0]
 8005260:	f002 f908 	bl	8007474 <USB_ReadInterrupts>
 8005264:	0700      	lsls	r0, r0, #28
 8005266:	d507      	bpl.n	8005278 <HAL_PCD_IRQHandler+0x1f8>
      HAL_PCD_SOFCallback(hpcd);
 8005268:	4620      	mov	r0, r4
 800526a:	f7fc fb12 	bl	8001892 <HAL_PCD_SOFCallback>
      __HAL_PCD_CLEAR_FLAG(hpcd, USB_OTG_GINTSTS_SOF);
 800526e:	6822      	ldr	r2, [r4, #0]
 8005270:	6953      	ldr	r3, [r2, #20]
 8005272:	f003 0308 	and.w	r3, r3, #8
 8005276:	6153      	str	r3, [r2, #20]
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_BOUTNAKEFF))
 8005278:	6820      	ldr	r0, [r4, #0]
 800527a:	f002 f8fb 	bl	8007474 <USB_ReadInterrupts>
 800527e:	0601      	lsls	r1, r0, #24
 8005280:	f100 8213 	bmi.w	80056aa <HAL_PCD_IRQHandler+0x62a>
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_IISOIXFR))
 8005284:	6820      	ldr	r0, [r4, #0]
 8005286:	f002 f8f5 	bl	8007474 <USB_ReadInterrupts>
 800528a:	02c2      	lsls	r2, r0, #11
 800528c:	d50c      	bpl.n	80052a8 <HAL_PCD_IRQHandler+0x228>
 800528e:	46a0      	mov	r8, r4
 8005290:	f506 6912 	add.w	r9, r6, #2336	@ 0x920
      for (epnum = 1U; epnum < hpcd->Init.dev_endpoints; epnum++)
 8005294:	2701      	movs	r7, #1
 8005296:	7923      	ldrb	r3, [r4, #4]
 8005298:	42bb      	cmp	r3, r7
 800529a:	f200 821f 	bhi.w	80056dc <HAL_PCD_IRQHandler+0x65c>
      __HAL_PCD_CLEAR_FLAG(hpcd, USB_OTG_GINTSTS_IISOIXFR);
 800529e:	6822      	ldr	r2, [r4, #0]
 80052a0:	6953      	ldr	r3, [r2, #20]
 80052a2:	f403 1380 	and.w	r3, r3, #1048576	@ 0x100000
 80052a6:	6153      	str	r3, [r2, #20]
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_PXFR_INCOMPISOOUT))
 80052a8:	6820      	ldr	r0, [r4, #0]
 80052aa:	f002 f8e3 	bl	8007474 <USB_ReadInterrupts>
 80052ae:	0283      	lsls	r3, r0, #10
 80052b0:	d52d      	bpl.n	800530e <HAL_PCD_IRQHandler+0x28e>
      for (epnum = 1U; epnum < hpcd->Init.dev_endpoints; epnum++)
 80052b2:	f894 e004 	ldrb.w	lr, [r4, #4]
 80052b6:	4623      	mov	r3, r4
 80052b8:	f506 6032 	add.w	r0, r6, #2848	@ 0xb20
 80052bc:	2101      	movs	r1, #1
 80052be:	458e      	cmp	lr, r1
 80052c0:	d920      	bls.n	8005304 <HAL_PCD_IRQHandler+0x284>
        if ((hpcd->OUT_ep[epnum].type == EP_TYPE_ISOC) &&
 80052c2:	f893 c27c 	ldrb.w	ip, [r3, #636]	@ 0x27c
        RegVal = USBx_OUTEP(epnum)->DOEPCTL;
 80052c6:	6802      	ldr	r2, [r0, #0]
        if ((hpcd->OUT_ep[epnum].type == EP_TYPE_ISOC) &&
 80052c8:	f1bc 0f01 	cmp.w	ip, #1
 80052cc:	f040 821c 	bne.w	8005708 <HAL_PCD_IRQHandler+0x688>
 80052d0:	2a00      	cmp	r2, #0
 80052d2:	f280 8219 	bge.w	8005708 <HAL_PCD_IRQHandler+0x688>
            ((RegVal & (0x1U << 16)) == (hpcd->FrameNumber & 0x1U)))
 80052d6:	f8d4 74d4 	ldr.w	r7, [r4, #1236]	@ 0x4d4
 80052da:	f402 3280 	and.w	r2, r2, #65536	@ 0x10000
 80052de:	f007 0701 	and.w	r7, r7, #1
            ((RegVal & USB_OTG_DOEPCTL_EPENA) == USB_OTG_DOEPCTL_EPENA) &&
 80052e2:	42ba      	cmp	r2, r7
 80052e4:	f040 8210 	bne.w	8005708 <HAL_PCD_IRQHandler+0x688>
          hpcd->OUT_ep[epnum].is_iso_incomplete = 1U;
 80052e8:	f883 c27b 	strb.w	ip, [r3, #635]	@ 0x27b
          USBx->GINTMSK |= USB_OTG_GINTMSK_GONAKEFFM;
 80052ec:	69b2      	ldr	r2, [r6, #24]
 80052ee:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
 80052f2:	61b2      	str	r2, [r6, #24]
          if ((USBx->GINTSTS & USB_OTG_GINTSTS_BOUTNAKEFF) == 0U)
 80052f4:	6972      	ldr	r2, [r6, #20]
 80052f6:	0617      	lsls	r7, r2, #24
 80052f8:	f100 8206 	bmi.w	8005708 <HAL_PCD_IRQHandler+0x688>
            USBx_DEVICE->DCTL |= USB_OTG_DCTL_SGONAK;
 80052fc:	686b      	ldr	r3, [r5, #4]
 80052fe:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 8005302:	606b      	str	r3, [r5, #4]
      __HAL_PCD_CLEAR_FLAG(hpcd, USB_OTG_GINTSTS_PXFR_INCOMPISOOUT);
 8005304:	6822      	ldr	r2, [r4, #0]
 8005306:	6953      	ldr	r3, [r2, #20]
 8005308:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 800530c:	6153      	str	r3, [r2, #20]
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_SRQINT))
 800530e:	6820      	ldr	r0, [r4, #0]
 8005310:	f002 f8b0 	bl	8007474 <USB_ReadInterrupts>
 8005314:	0041      	lsls	r1, r0, #1
 8005316:	d507      	bpl.n	8005328 <HAL_PCD_IRQHandler+0x2a8>
      HAL_PCD_ConnectCallback(hpcd);
 8005318:	4620      	mov	r0, r4
 800531a:	f7fc faf5 	bl	8001908 <HAL_PCD_ConnectCallback>
      __HAL_PCD_CLEAR_FLAG(hpcd, USB_OTG_GINTSTS_SRQINT);
 800531e:	6822      	ldr	r2, [r4, #0]
 8005320:	6953      	ldr	r3, [r2, #20]
 8005322:	f003 4380 	and.w	r3, r3, #1073741824	@ 0x40000000
 8005326:	6153      	str	r3, [r2, #20]
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_OTGINT))
 8005328:	6820      	ldr	r0, [r4, #0]
 800532a:	f002 f8a3 	bl	8007474 <USB_ReadInterrupts>
 800532e:	0742      	lsls	r2, r0, #29
 8005330:	d50a      	bpl.n	8005348 <HAL_PCD_IRQHandler+0x2c8>
      RegVal = hpcd->Instance->GOTGINT;
 8005332:	6823      	ldr	r3, [r4, #0]
 8005334:	685d      	ldr	r5, [r3, #4]
      if ((RegVal & USB_OTG_GOTGINT_SEDET) == USB_OTG_GOTGINT_SEDET)
 8005336:	076b      	lsls	r3, r5, #29
 8005338:	d502      	bpl.n	8005340 <HAL_PCD_IRQHandler+0x2c0>
        HAL_PCD_DisconnectCallback(hpcd);
 800533a:	4620      	mov	r0, r4
 800533c:	f7fc fae8 	bl	8001910 <HAL_PCD_DisconnectCallback>
      hpcd->Instance->GOTGINT |= RegVal;
 8005340:	6822      	ldr	r2, [r4, #0]
 8005342:	6853      	ldr	r3, [r2, #4]
 8005344:	432b      	orrs	r3, r5
 8005346:	6053      	str	r3, [r2, #4]
}
 8005348:	b009      	add	sp, #36	@ 0x24
 800534a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      else if (((RegVal & USB_OTG_GRXSTSP_PKTSTS) >> 17) == STS_SETUP_UPDT)
 800534e:	f5b3 2f40 	cmp.w	r3, #786432	@ 0xc0000
 8005352:	f47f aee8 	bne.w	8005126 <HAL_PCD_IRQHandler+0xa6>
        (void)USB_ReadPacket(USBx, (uint8_t *)hpcd->Setup, 8U);
 8005356:	2208      	movs	r2, #8
 8005358:	f204 419c 	addw	r1, r4, #1180	@ 0x49c
 800535c:	4630      	mov	r0, r6
 800535e:	f001 ffe9 	bl	8007334 <USB_ReadPacket>
        ep->xfer_count += (RegVal & USB_OTG_GRXSTSP_BCNT) >> 4;
 8005362:	2324      	movs	r3, #36	@ 0x24
 8005364:	fb03 4707 	mla	r7, r3, r7, r4
 8005368:	f3c8 180a 	ubfx	r8, r8, #4, #11
 800536c:	f8d7 3268 	ldr.w	r3, [r7, #616]	@ 0x268
 8005370:	4443      	add	r3, r8
 8005372:	e6d6      	b.n	8005122 <HAL_PCD_IRQHandler+0xa2>
      ep_intr = USB_ReadDevAllOutEpInterrupt(hpcd->Instance);
 8005374:	6820      	ldr	r0, [r4, #0]
 8005376:	f002 f881 	bl	800747c <USB_ReadDevAllOutEpInterrupt>
 800537a:	f506 6830 	add.w	r8, r6, #2816	@ 0xb00
 800537e:	9004      	str	r0, [sp, #16]
      while (ep_intr != 0U)
 8005380:	46a2      	mov	sl, r4
      epnum = 0U;
 8005382:	2700      	movs	r7, #0
      while (ep_intr != 0U)
 8005384:	9b04      	ldr	r3, [sp, #16]
          epint = USB_ReadDevOutEPInterrupt(hpcd->Instance, (uint8_t)epnum);
 8005386:	6820      	ldr	r0, [r4, #0]
      while (ep_intr != 0U)
 8005388:	2b00      	cmp	r3, #0
 800538a:	f43f aed7 	beq.w	800513c <HAL_PCD_IRQHandler+0xbc>
        if ((ep_intr & 0x1U) != 0U)
 800538e:	9b04      	ldr	r3, [sp, #16]
 8005390:	07db      	lsls	r3, r3, #31
 8005392:	d578      	bpl.n	8005486 <HAL_PCD_IRQHandler+0x406>
          epint = USB_ReadDevOutEPInterrupt(hpcd->Instance, (uint8_t)epnum);
 8005394:	fa5f fb87 	uxtb.w	fp, r7
 8005398:	4659      	mov	r1, fp
 800539a:	f002 f87f 	bl	800749c <USB_ReadDevOutEPInterrupt>
          if ((epint & USB_OTG_DOEPINT_XFRC) == USB_OTG_DOEPINT_XFRC)
 800539e:	f010 0f01 	tst.w	r0, #1
          epint = USB_ReadDevOutEPInterrupt(hpcd->Instance, (uint8_t)epnum);
 80053a2:	4681      	mov	r9, r0
          if ((epint & USB_OTG_DOEPINT_XFRC) == USB_OTG_DOEPINT_XFRC)
 80053a4:	d01f      	beq.n	80053e6 <HAL_PCD_IRQHandler+0x366>
  * @retval HAL status
  */
static HAL_StatusTypeDef PCD_EP_OutXfrComplete_int(PCD_HandleTypeDef *hpcd, uint32_t epnum)
{
  USB_OTG_EPTypeDef *ep;
  const USB_OTG_GlobalTypeDef *USBx = hpcd->Instance;
 80053a6:	6820      	ldr	r0, [r4, #0]
            CLEAR_OUT_EP_INTR(epnum, USB_OTG_DOEPINT_XFRC);
 80053a8:	2301      	movs	r3, #1
 80053aa:	f8c8 3008 	str.w	r3, [r8, #8]
  uint32_t USBx_BASE = (uint32_t)USBx;
  uint32_t gSNPSiD = *(__IO const uint32_t *)(&USBx->CID + 0x1U);
  uint32_t DoepintReg = USBx_OUTEP(epnum)->DOEPINT;

  if (hpcd->Init.dma_enable == 1U)
 80053ae:	f894 c006 	ldrb.w	ip, [r4, #6]
  uint32_t gSNPSiD = *(__IO const uint32_t *)(&USBx->CID + 0x1U);
 80053b2:	6c01      	ldr	r1, [r0, #64]	@ 0x40
  uint32_t DoepintReg = USBx_OUTEP(epnum)->DOEPINT;
 80053b4:	f500 6330 	add.w	r3, r0, #2816	@ 0xb00
 80053b8:	eb03 1347 	add.w	r3, r3, r7, lsl #5
  if (hpcd->Init.dma_enable == 1U)
 80053bc:	f1bc 0f01 	cmp.w	ip, #1
  uint32_t DoepintReg = USBx_OUTEP(epnum)->DOEPINT;
 80053c0:	689a      	ldr	r2, [r3, #8]
  if (hpcd->Init.dma_enable == 1U)
 80053c2:	f040 808b 	bne.w	80054dc <HAL_PCD_IRQHandler+0x45c>
  {
    if ((DoepintReg & USB_OTG_DOEPINT_STUP) == USB_OTG_DOEPINT_STUP) /* Class C */
 80053c6:	f012 0f08 	tst.w	r2, #8
 80053ca:	d007      	beq.n	80053dc <HAL_PCD_IRQHandler+0x35c>
    {
      /* StupPktRcvd = 1 this is a setup packet */
      if ((gSNPSiD > USB_OTG_CORE_ID_300A) &&
 80053cc:	48af      	ldr	r0, [pc, #700]	@ (800568c <HAL_PCD_IRQHandler+0x60c>)
 80053ce:	4281      	cmp	r1, r0
 80053d0:	d909      	bls.n	80053e6 <HAL_PCD_IRQHandler+0x366>
 80053d2:	0412      	lsls	r2, r2, #16
 80053d4:	d507      	bpl.n	80053e6 <HAL_PCD_IRQHandler+0x366>
    if (gSNPSiD == USB_OTG_CORE_ID_310A)
    {
      /* StupPktRcvd = 1 this is a setup packet */
      if ((DoepintReg & USB_OTG_DOEPINT_STPKTRX) == USB_OTG_DOEPINT_STPKTRX)
      {
        CLEAR_OUT_EP_INTR(epnum, USB_OTG_DOEPINT_STPKTRX);
 80053d6:	f44f 4200 	mov.w	r2, #32768	@ 0x8000
 80053da:	e003      	b.n	80053e4 <HAL_PCD_IRQHandler+0x364>
    else if ((DoepintReg & USB_OTG_DOEPINT_OTEPSPR) == USB_OTG_DOEPINT_OTEPSPR) /* Class E */
 80053dc:	f012 0f20 	tst.w	r2, #32
 80053e0:	d05a      	beq.n	8005498 <HAL_PCD_IRQHandler+0x418>
      CLEAR_OUT_EP_INTR(epnum, USB_OTG_DOEPINT_OTEPSPR);
 80053e2:	2220      	movs	r2, #32
        CLEAR_OUT_EP_INTR(epnum, USB_OTG_DOEPINT_STPKTRX);
 80053e4:	609a      	str	r2, [r3, #8]
          if ((epint & USB_OTG_DOEPINT_STUP) == USB_OTG_DOEPINT_STUP)
 80053e6:	f019 0f08 	tst.w	r9, #8
 80053ea:	d021      	beq.n	8005430 <HAL_PCD_IRQHandler+0x3b0>
            CLEAR_OUT_EP_INTR(epnum, USB_OTG_DOEPINT_STUP);
 80053ec:	2308      	movs	r3, #8
 80053ee:	f8c8 3008 	str.w	r3, [r8, #8]
  * @param  epnum endpoint number
  * @retval HAL status
  */
static HAL_StatusTypeDef PCD_EP_OutSetupPacket_int(PCD_HandleTypeDef *hpcd, uint32_t epnum)
{
  const USB_OTG_GlobalTypeDef *USBx = hpcd->Instance;
 80053f2:	6823      	ldr	r3, [r4, #0]
  uint32_t USBx_BASE = (uint32_t)USBx;
  uint32_t gSNPSiD = *(__IO const uint32_t *)(&USBx->CID + 0x1U);
  uint32_t DoepintReg = USBx_OUTEP(epnum)->DOEPINT;

  if ((gSNPSiD > USB_OTG_CORE_ID_300A) &&
 80053f4:	49a5      	ldr	r1, [pc, #660]	@ (800568c <HAL_PCD_IRQHandler+0x60c>)
  uint32_t gSNPSiD = *(__IO const uint32_t *)(&USBx->CID + 0x1U);
 80053f6:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
  uint32_t DoepintReg = USBx_OUTEP(epnum)->DOEPINT;
 80053f8:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 80053fc:	eb03 1347 	add.w	r3, r3, r7, lsl #5
  if ((gSNPSiD > USB_OTG_CORE_ID_300A) &&
 8005400:	428a      	cmp	r2, r1
  uint32_t DoepintReg = USBx_OUTEP(epnum)->DOEPINT;
 8005402:	6898      	ldr	r0, [r3, #8]
  if ((gSNPSiD > USB_OTG_CORE_ID_300A) &&
 8005404:	d904      	bls.n	8005410 <HAL_PCD_IRQHandler+0x390>
 8005406:	0401      	lsls	r1, r0, #16
      ((DoepintReg & USB_OTG_DOEPINT_STPKTRX) == USB_OTG_DOEPINT_STPKTRX))
  {
    CLEAR_OUT_EP_INTR(epnum, USB_OTG_DOEPINT_STPKTRX);
 8005408:	bf44      	itt	mi
 800540a:	f44f 4000 	movmi.w	r0, #32768	@ 0x8000
 800540e:	6098      	strmi	r0, [r3, #8]

  /* Inform the upper layer that a setup packet is available */
#if (USE_HAL_PCD_REGISTER_CALLBACKS == 1U)
  hpcd->SetupStageCallback(hpcd);
#else
  HAL_PCD_SetupStageCallback(hpcd);
 8005410:	4620      	mov	r0, r4
 8005412:	9205      	str	r2, [sp, #20]
 8005414:	f7fc fa26 	bl	8001864 <HAL_PCD_SetupStageCallback>
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */

  if ((gSNPSiD > USB_OTG_CORE_ID_300A) && (hpcd->Init.dma_enable == 1U))
 8005418:	9a05      	ldr	r2, [sp, #20]
 800541a:	499c      	ldr	r1, [pc, #624]	@ (800568c <HAL_PCD_IRQHandler+0x60c>)
 800541c:	428a      	cmp	r2, r1
 800541e:	d907      	bls.n	8005430 <HAL_PCD_IRQHandler+0x3b0>
 8005420:	79a1      	ldrb	r1, [r4, #6]
 8005422:	2901      	cmp	r1, #1
 8005424:	d104      	bne.n	8005430 <HAL_PCD_IRQHandler+0x3b0>
  {
    (void)USB_EP0_OutStart(hpcd->Instance, 1U, (uint8_t *)hpcd->Setup);
 8005426:	6820      	ldr	r0, [r4, #0]
 8005428:	f204 429c 	addw	r2, r4, #1180	@ 0x49c
 800542c:	f002 f862 	bl	80074f4 <USB_EP0_OutStart>
          if ((epint & USB_OTG_DOEPINT_OTEPDIS) == USB_OTG_DOEPINT_OTEPDIS)
 8005430:	f019 0f10 	tst.w	r9, #16
            CLEAR_OUT_EP_INTR(epnum, USB_OTG_DOEPINT_OTEPDIS);
 8005434:	bf1c      	itt	ne
 8005436:	2310      	movne	r3, #16
 8005438:	f8c8 3008 	strne.w	r3, [r8, #8]
          if ((epint & USB_OTG_DOEPINT_EPDISD) == USB_OTG_DOEPINT_EPDISD)
 800543c:	f019 0f02 	tst.w	r9, #2
 8005440:	d014      	beq.n	800546c <HAL_PCD_IRQHandler+0x3ec>
            if ((USBx->GINTSTS & USB_OTG_GINTSTS_BOUTNAKEFF) == USB_OTG_GINTSTS_BOUTNAKEFF)
 8005442:	6973      	ldr	r3, [r6, #20]
 8005444:	061a      	lsls	r2, r3, #24
              USBx_DEVICE->DCTL |= USB_OTG_DCTL_CGONAK;
 8005446:	bf42      	ittt	mi
 8005448:	686b      	ldrmi	r3, [r5, #4]
 800544a:	f443 6380 	orrmi.w	r3, r3, #1024	@ 0x400
 800544e:	606b      	strmi	r3, [r5, #4]
            if (ep->is_iso_incomplete == 1U)
 8005450:	f89a 3257 	ldrb.w	r3, [sl, #599]	@ 0x257
 8005454:	2b01      	cmp	r3, #1
 8005456:	d106      	bne.n	8005466 <HAL_PCD_IRQHandler+0x3e6>
              ep->is_iso_incomplete = 0U;
 8005458:	2300      	movs	r3, #0
 800545a:	f88a 3257 	strb.w	r3, [sl, #599]	@ 0x257
              HAL_PCD_ISOOUTIncompleteCallback(hpcd, (uint8_t)epnum);
 800545e:	4659      	mov	r1, fp
 8005460:	4620      	mov	r0, r4
 8005462:	f7fc fa49 	bl	80018f8 <HAL_PCD_ISOOUTIncompleteCallback>
            CLEAR_OUT_EP_INTR(epnum, USB_OTG_DOEPINT_EPDISD);
 8005466:	2302      	movs	r3, #2
 8005468:	f8c8 3008 	str.w	r3, [r8, #8]
          if ((epint & USB_OTG_DOEPINT_OTEPSPR) == USB_OTG_DOEPINT_OTEPSPR)
 800546c:	f019 0f20 	tst.w	r9, #32
            CLEAR_OUT_EP_INTR(epnum, USB_OTG_DOEPINT_OTEPSPR);
 8005470:	bf1c      	itt	ne
 8005472:	2320      	movne	r3, #32
 8005474:	f8c8 3008 	strne.w	r3, [r8, #8]
          if ((epint & USB_OTG_DOEPINT_NAK) == USB_OTG_DOEPINT_NAK)
 8005478:	f419 5f00 	tst.w	r9, #8192	@ 0x2000
            CLEAR_OUT_EP_INTR(epnum, USB_OTG_DOEPINT_NAK);
 800547c:	bf1c      	itt	ne
 800547e:	f44f 5300 	movne.w	r3, #8192	@ 0x2000
 8005482:	f8c8 3008 	strne.w	r3, [r8, #8]
        ep_intr >>= 1U;
 8005486:	9b04      	ldr	r3, [sp, #16]
 8005488:	085b      	lsrs	r3, r3, #1
        epnum++;
 800548a:	3701      	adds	r7, #1
        ep_intr >>= 1U;
 800548c:	9304      	str	r3, [sp, #16]
 800548e:	f108 0820 	add.w	r8, r8, #32
 8005492:	f10a 0a24 	add.w	sl, sl, #36	@ 0x24
 8005496:	e775      	b.n	8005384 <HAL_PCD_IRQHandler+0x304>
      if ((gSNPSiD > USB_OTG_CORE_ID_300A) &&
 8005498:	f8df c1f0 	ldr.w	ip, [pc, #496]	@ 800568c <HAL_PCD_IRQHandler+0x60c>
 800549c:	4561      	cmp	r1, ip
 800549e:	d901      	bls.n	80054a4 <HAL_PCD_IRQHandler+0x424>
 80054a0:	0412      	lsls	r2, r2, #16
 80054a2:	d498      	bmi.n	80053d6 <HAL_PCD_IRQHandler+0x356>
        ep->xfer_count = ep->xfer_size - (USBx_OUTEP(epnum)->DOEPTSIZ & USB_OTG_DOEPTSIZ_XFRSIZ);
 80054a4:	691a      	ldr	r2, [r3, #16]
 80054a6:	f8da 3274 	ldr.w	r3, [sl, #628]	@ 0x274
 80054aa:	f3c2 0212 	ubfx	r2, r2, #0, #19
 80054ae:	1a9b      	subs	r3, r3, r2
 80054b0:	f8ca 3268 	str.w	r3, [sl, #616]	@ 0x268
        if (epnum == 0U)
 80054b4:	b96f      	cbnz	r7, 80054d2 <HAL_PCD_IRQHandler+0x452>
          if (ep->xfer_len == 0U)
 80054b6:	f8d4 2264 	ldr.w	r2, [r4, #612]	@ 0x264
 80054ba:	b92a      	cbnz	r2, 80054c8 <HAL_PCD_IRQHandler+0x448>
            (void)USB_EP0_OutStart(hpcd->Instance, 1U, (uint8_t *)hpcd->Setup);
 80054bc:	f204 429c 	addw	r2, r4, #1180	@ 0x49c
 80054c0:	2101      	movs	r1, #1
        (void)USB_EP0_OutStart(hpcd->Instance, 0U, (uint8_t *)hpcd->Setup);
 80054c2:	f002 f817 	bl	80074f4 <USB_EP0_OutStart>
 80054c6:	e004      	b.n	80054d2 <HAL_PCD_IRQHandler+0x452>
            ep->xfer_buff += ep->xfer_count;
 80054c8:	f8d4 2260 	ldr.w	r2, [r4, #608]	@ 0x260
 80054cc:	441a      	add	r2, r3
 80054ce:	f8c4 2260 	str.w	r2, [r4, #608]	@ 0x260
      HAL_PCD_DataOutStageCallback(hpcd, (uint8_t)epnum);
 80054d2:	4659      	mov	r1, fp
 80054d4:	4620      	mov	r0, r4
 80054d6:	f7fc f9cb 	bl	8001870 <HAL_PCD_DataOutStageCallback>
 80054da:	e784      	b.n	80053e6 <HAL_PCD_IRQHandler+0x366>
    if (gSNPSiD == USB_OTG_CORE_ID_310A)
 80054dc:	f8df c1b0 	ldr.w	ip, [pc, #432]	@ 8005690 <HAL_PCD_IRQHandler+0x610>
 80054e0:	4561      	cmp	r1, ip
 80054e2:	d107      	bne.n	80054f4 <HAL_PCD_IRQHandler+0x474>
      if ((DoepintReg & USB_OTG_DOEPINT_STPKTRX) == USB_OTG_DOEPINT_STPKTRX)
 80054e4:	0411      	lsls	r1, r2, #16
 80054e6:	f53f af76 	bmi.w	80053d6 <HAL_PCD_IRQHandler+0x356>
        if ((DoepintReg & USB_OTG_DOEPINT_OTEPSPR) == USB_OTG_DOEPINT_OTEPSPR)
 80054ea:	0690      	lsls	r0, r2, #26
 80054ec:	d5f1      	bpl.n	80054d2 <HAL_PCD_IRQHandler+0x452>
          CLEAR_OUT_EP_INTR(epnum, USB_OTG_DOEPINT_OTEPSPR);
 80054ee:	2220      	movs	r2, #32
 80054f0:	609a      	str	r2, [r3, #8]
        HAL_PCD_DataOutStageCallback(hpcd, (uint8_t)epnum);
 80054f2:	e7ee      	b.n	80054d2 <HAL_PCD_IRQHandler+0x452>
      if ((epnum == 0U) && (hpcd->OUT_ep[epnum].xfer_len == 0U))
 80054f4:	2f00      	cmp	r7, #0
 80054f6:	d1ec      	bne.n	80054d2 <HAL_PCD_IRQHandler+0x452>
 80054f8:	f8d4 3264 	ldr.w	r3, [r4, #612]	@ 0x264
 80054fc:	2b00      	cmp	r3, #0
 80054fe:	d1e8      	bne.n	80054d2 <HAL_PCD_IRQHandler+0x452>
        (void)USB_EP0_OutStart(hpcd->Instance, 0U, (uint8_t *)hpcd->Setup);
 8005500:	f204 429c 	addw	r2, r4, #1180	@ 0x49c
 8005504:	4639      	mov	r1, r7
 8005506:	e7dc      	b.n	80054c2 <HAL_PCD_IRQHandler+0x442>
        if ((ep_intr & 0x1U) != 0U) /* In ITR */
 8005508:	9b04      	ldr	r3, [sp, #16]
 800550a:	07db      	lsls	r3, r3, #31
 800550c:	f140 8099 	bpl.w	8005642 <HAL_PCD_IRQHandler+0x5c2>
          epint = USB_ReadDevInEPInterrupt(hpcd->Instance, (uint8_t)epnum);
 8005510:	fa5f f38a 	uxtb.w	r3, sl
 8005514:	4619      	mov	r1, r3
 8005516:	9305      	str	r3, [sp, #20]
 8005518:	f001 ffc9 	bl	80074ae <USB_ReadDevInEPInterrupt>
          if ((epint & USB_OTG_DIEPINT_XFRC) == USB_OTG_DIEPINT_XFRC)
 800551c:	f010 0f01 	tst.w	r0, #1
          epint = USB_ReadDevInEPInterrupt(hpcd->Instance, (uint8_t)epnum);
 8005520:	4680      	mov	r8, r0
          if ((epint & USB_OTG_DIEPINT_XFRC) == USB_OTG_DIEPINT_XFRC)
 8005522:	d01f      	beq.n	8005564 <HAL_PCD_IRQHandler+0x4e4>
            USBx_DEVICE->DIEPEMPMSK &= ~fifoemptymsk;
 8005524:	6b6b      	ldr	r3, [r5, #52]	@ 0x34
            fifoemptymsk = (uint32_t)(0x1UL << (epnum & EP_ADDR_MSK));
 8005526:	2101      	movs	r1, #1
 8005528:	f00a 020f 	and.w	r2, sl, #15
 800552c:	fa01 f202 	lsl.w	r2, r1, r2
            USBx_DEVICE->DIEPEMPMSK &= ~fifoemptymsk;
 8005530:	ea23 0302 	bic.w	r3, r3, r2
 8005534:	636b      	str	r3, [r5, #52]	@ 0x34
            CLEAR_IN_EP_INTR(epnum, USB_OTG_DIEPINT_XFRC);
 8005536:	f8cb 1008 	str.w	r1, [fp, #8]
            if (hpcd->Init.dma_enable == 1U)
 800553a:	79a1      	ldrb	r1, [r4, #6]
 800553c:	2901      	cmp	r1, #1
 800553e:	d10d      	bne.n	800555c <HAL_PCD_IRQHandler+0x4dc>
              hpcd->IN_ep[epnum].xfer_buff += hpcd->IN_ep[epnum].maxpacket;
 8005540:	e9d7 2307 	ldrd	r2, r3, [r7, #28]
 8005544:	4413      	add	r3, r2
 8005546:	623b      	str	r3, [r7, #32]
              if ((epnum == 0U) && (hpcd->IN_ep[epnum].xfer_len == 0U))
 8005548:	f1ba 0f00 	cmp.w	sl, #0
 800554c:	d106      	bne.n	800555c <HAL_PCD_IRQHandler+0x4dc>
 800554e:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8005550:	b923      	cbnz	r3, 800555c <HAL_PCD_IRQHandler+0x4dc>
                (void)USB_EP0_OutStart(hpcd->Instance, 1U, (uint8_t *)hpcd->Setup);
 8005552:	6820      	ldr	r0, [r4, #0]
 8005554:	f204 429c 	addw	r2, r4, #1180	@ 0x49c
 8005558:	f001 ffcc 	bl	80074f4 <USB_EP0_OutStart>
            HAL_PCD_DataInStageCallback(hpcd, (uint8_t)epnum);
 800555c:	9905      	ldr	r1, [sp, #20]
 800555e:	4620      	mov	r0, r4
 8005560:	f7fc f98f 	bl	8001882 <HAL_PCD_DataInStageCallback>
          if ((epint & USB_OTG_DIEPINT_TOC) == USB_OTG_DIEPINT_TOC)
 8005564:	f018 0f08 	tst.w	r8, #8
            CLEAR_IN_EP_INTR(epnum, USB_OTG_DIEPINT_TOC);
 8005568:	bf1c      	itt	ne
 800556a:	2308      	movne	r3, #8
 800556c:	f8cb 3008 	strne.w	r3, [fp, #8]
          if ((epint & USB_OTG_DIEPINT_ITTXFE) == USB_OTG_DIEPINT_ITTXFE)
 8005570:	f018 0f10 	tst.w	r8, #16
            CLEAR_IN_EP_INTR(epnum, USB_OTG_DIEPINT_ITTXFE);
 8005574:	bf1c      	itt	ne
 8005576:	2310      	movne	r3, #16
 8005578:	f8cb 3008 	strne.w	r3, [fp, #8]
          if ((epint & USB_OTG_DIEPINT_INEPNE) == USB_OTG_DIEPINT_INEPNE)
 800557c:	f018 0f40 	tst.w	r8, #64	@ 0x40
            CLEAR_IN_EP_INTR(epnum, USB_OTG_DIEPINT_INEPNE);
 8005580:	bf1c      	itt	ne
 8005582:	2340      	movne	r3, #64	@ 0x40
 8005584:	f8cb 3008 	strne.w	r3, [fp, #8]
          if ((epint & USB_OTG_DIEPINT_EPDISD) == USB_OTG_DIEPINT_EPDISD)
 8005588:	f018 0f02 	tst.w	r8, #2
 800558c:	d00f      	beq.n	80055ae <HAL_PCD_IRQHandler+0x52e>
            (void)USB_FlushTxFifo(USBx, epnum);
 800558e:	4651      	mov	r1, sl
 8005590:	4630      	mov	r0, r6
 8005592:	f001 fbd1 	bl	8006d38 <USB_FlushTxFifo>
            if (ep->is_iso_incomplete == 1U)
 8005596:	7dfb      	ldrb	r3, [r7, #23]
 8005598:	2b01      	cmp	r3, #1
 800559a:	d105      	bne.n	80055a8 <HAL_PCD_IRQHandler+0x528>
              ep->is_iso_incomplete = 0U;
 800559c:	2300      	movs	r3, #0
              HAL_PCD_ISOINIncompleteCallback(hpcd, (uint8_t)epnum);
 800559e:	9905      	ldr	r1, [sp, #20]
              ep->is_iso_incomplete = 0U;
 80055a0:	75fb      	strb	r3, [r7, #23]
              HAL_PCD_ISOINIncompleteCallback(hpcd, (uint8_t)epnum);
 80055a2:	4620      	mov	r0, r4
 80055a4:	f7fc f9ac 	bl	8001900 <HAL_PCD_ISOINIncompleteCallback>
            CLEAR_IN_EP_INTR(epnum, USB_OTG_DIEPINT_EPDISD);
 80055a8:	2302      	movs	r3, #2
 80055aa:	f8cb 3008 	str.w	r3, [fp, #8]
  USB_OTG_GlobalTypeDef *USBx = hpcd->Instance;
 80055ae:	6823      	ldr	r3, [r4, #0]
 80055b0:	9306      	str	r3, [sp, #24]
          if ((epint & USB_OTG_DIEPINT_TXFE) == USB_OTG_DIEPINT_TXFE)
 80055b2:	f018 0f80 	tst.w	r8, #128	@ 0x80
 80055b6:	d044      	beq.n	8005642 <HAL_PCD_IRQHandler+0x5c2>
  if (ep->xfer_count > ep->xfer_len)
 80055b8:	e9d7 3209 	ldrd	r3, r2, [r7, #36]	@ 0x24
 80055bc:	429a      	cmp	r2, r3
 80055be:	d840      	bhi.n	8005642 <HAL_PCD_IRQHandler+0x5c2>
  len = ep->xfer_len - ep->xfer_count;
 80055c0:	eba3 0802 	sub.w	r8, r3, r2
  if (len > ep->maxpacket)
 80055c4:	69fb      	ldr	r3, [r7, #28]
 80055c6:	4598      	cmp	r8, r3
 80055c8:	bf28      	it	cs
 80055ca:	4698      	movcs	r8, r3
  while (((USBx_INEP(epnum)->DTXFSTS & USB_OTG_DTXFSTS_INEPTFSAV) >= len32b) &&
 80055cc:	9b06      	ldr	r3, [sp, #24]
 80055ce:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
  len32b = (len + 3U) / 4U;
 80055d2:	f108 0803 	add.w	r8, r8, #3
  while (((USBx_INEP(epnum)->DTXFSTS & USB_OTG_DTXFSTS_INEPTFSAV) >= len32b) &&
 80055d6:	eb03 134a 	add.w	r3, r3, sl, lsl #5
  len32b = (len + 3U) / 4U;
 80055da:	ea4f 0898 	mov.w	r8, r8, lsr #2
  while (((USBx_INEP(epnum)->DTXFSTS & USB_OTG_DTXFSTS_INEPTFSAV) >= len32b) &&
 80055de:	9307      	str	r3, [sp, #28]
 80055e0:	9b07      	ldr	r3, [sp, #28]
 80055e2:	6999      	ldr	r1, [r3, #24]
 80055e4:	b289      	uxth	r1, r1
         (ep->xfer_count < ep->xfer_len) && (ep->xfer_len != 0U))
 80055e6:	4541      	cmp	r1, r8
 80055e8:	e9d7 3209 	ldrd	r3, r2, [r7, #36]	@ 0x24
 80055ec:	d327      	bcc.n	800563e <HAL_PCD_IRQHandler+0x5be>
  while (((USBx_INEP(epnum)->DTXFSTS & USB_OTG_DTXFSTS_INEPTFSAV) >= len32b) &&
 80055ee:	4293      	cmp	r3, r2
 80055f0:	d80b      	bhi.n	800560a <HAL_PCD_IRQHandler+0x58a>
    USBx_DEVICE->DIEPEMPMSK &= ~fifoemptymsk;
 80055f2:	9b06      	ldr	r3, [sp, #24]
    fifoemptymsk = (uint32_t)(0x1UL << (epnum & EP_ADDR_MSK));
 80055f4:	f00a 000f 	and.w	r0, sl, #15
    USBx_DEVICE->DIEPEMPMSK &= ~fifoemptymsk;
 80055f8:	f8d3 2834 	ldr.w	r2, [r3, #2100]	@ 0x834
    fifoemptymsk = (uint32_t)(0x1UL << (epnum & EP_ADDR_MSK));
 80055fc:	2101      	movs	r1, #1
 80055fe:	4081      	lsls	r1, r0
    USBx_DEVICE->DIEPEMPMSK &= ~fifoemptymsk;
 8005600:	ea22 0201 	bic.w	r2, r2, r1
 8005604:	f8c3 2834 	str.w	r2, [r3, #2100]	@ 0x834
 8005608:	e01b      	b.n	8005642 <HAL_PCD_IRQHandler+0x5c2>
    len = ep->xfer_len - ep->xfer_count;
 800560a:	eba3 0902 	sub.w	r9, r3, r2
    if (len > ep->maxpacket)
 800560e:	69fb      	ldr	r3, [r7, #28]
    (void)USB_WritePacket(USBx, ep->xfer_buff, (uint8_t)epnum, (uint16_t)len,
 8005610:	9a05      	ldr	r2, [sp, #20]
 8005612:	9806      	ldr	r0, [sp, #24]
    if (len > ep->maxpacket)
 8005614:	4599      	cmp	r9, r3
 8005616:	bf28      	it	cs
 8005618:	4699      	movcs	r9, r3
    (void)USB_WritePacket(USBx, ep->xfer_buff, (uint8_t)epnum, (uint16_t)len,
 800561a:	79a3      	ldrb	r3, [r4, #6]
 800561c:	9300      	str	r3, [sp, #0]
 800561e:	6a39      	ldr	r1, [r7, #32]
 8005620:	fa1f f389 	uxth.w	r3, r9
 8005624:	f001 fd70 	bl	8007108 <USB_WritePacket>
    ep->xfer_buff  += len;
 8005628:	6a3b      	ldr	r3, [r7, #32]
 800562a:	444b      	add	r3, r9
 800562c:	623b      	str	r3, [r7, #32]
    ep->xfer_count += len;
 800562e:	6abb      	ldr	r3, [r7, #40]	@ 0x28
    len32b = (len + 3U) / 4U;
 8005630:	f109 0803 	add.w	r8, r9, #3
    ep->xfer_count += len;
 8005634:	444b      	add	r3, r9
    len32b = (len + 3U) / 4U;
 8005636:	ea4f 0898 	mov.w	r8, r8, lsr #2
    ep->xfer_count += len;
 800563a:	62bb      	str	r3, [r7, #40]	@ 0x28
 800563c:	e7d0      	b.n	80055e0 <HAL_PCD_IRQHandler+0x560>
  if (ep->xfer_len <= ep->xfer_count)
 800563e:	4293      	cmp	r3, r2
 8005640:	d9d7      	bls.n	80055f2 <HAL_PCD_IRQHandler+0x572>
        ep_intr >>= 1U;
 8005642:	9b04      	ldr	r3, [sp, #16]
 8005644:	085b      	lsrs	r3, r3, #1
        epnum++;
 8005646:	f10a 0a01 	add.w	sl, sl, #1
        ep_intr >>= 1U;
 800564a:	9304      	str	r3, [sp, #16]
 800564c:	3724      	adds	r7, #36	@ 0x24
 800564e:	f10b 0b20 	add.w	fp, fp, #32
 8005652:	e581      	b.n	8005158 <HAL_PCD_IRQHandler+0xd8>
        HAL_PCD_ResumeCallback(hpcd);
 8005654:	4620      	mov	r0, r4
 8005656:	f7fc f94b 	bl	80018f0 <HAL_PCD_ResumeCallback>
 800565a:	e596      	b.n	800518a <HAL_PCD_IRQHandler+0x10a>
        USBx_INEP(i)->DIEPINT = 0xFB7FU;
 800565c:	6099      	str	r1, [r3, #8]
        USBx_INEP(i)->DIEPCTL &= ~USB_OTG_DIEPCTL_STALL;
 800565e:	681a      	ldr	r2, [r3, #0]
 8005660:	f422 1200 	bic.w	r2, r2, #2097152	@ 0x200000
 8005664:	601a      	str	r2, [r3, #0]
        USBx_OUTEP(i)->DOEPINT = 0xFB7FU;
 8005666:	f8c3 1208 	str.w	r1, [r3, #520]	@ 0x208
        USBx_OUTEP(i)->DOEPCTL &= ~USB_OTG_DOEPCTL_STALL;
 800566a:	f8d3 2200 	ldr.w	r2, [r3, #512]	@ 0x200
 800566e:	f422 1200 	bic.w	r2, r2, #2097152	@ 0x200000
 8005672:	f8c3 2200 	str.w	r2, [r3, #512]	@ 0x200
        USBx_OUTEP(i)->DOEPCTL |= USB_OTG_DOEPCTL_SNAK;
 8005676:	f8d3 2200 	ldr.w	r2, [r3, #512]	@ 0x200
 800567a:	f042 6200 	orr.w	r2, r2, #134217728	@ 0x8000000
 800567e:	f8c3 2200 	str.w	r2, [r3, #512]	@ 0x200
      for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
 8005682:	9a03      	ldr	r2, [sp, #12]
 8005684:	3201      	adds	r2, #1
 8005686:	9203      	str	r2, [sp, #12]
 8005688:	3320      	adds	r3, #32
 800568a:	e5a5      	b.n	80051d8 <HAL_PCD_IRQHandler+0x158>
 800568c:	4f54300a 	.word	0x4f54300a
 8005690:	4f54310a 	.word	0x4f54310a
        USBx_DEVICE->DOEPMSK |= USB_OTG_DOEPMSK_STUPM |
 8005694:	696b      	ldr	r3, [r5, #20]
 8005696:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
 800569a:	f043 032b 	orr.w	r3, r3, #43	@ 0x2b
 800569e:	616b      	str	r3, [r5, #20]
        USBx_DEVICE->DIEPMSK |= USB_OTG_DIEPMSK_TOM |
 80056a0:	692b      	ldr	r3, [r5, #16]
 80056a2:	f043 030b 	orr.w	r3, r3, #11
 80056a6:	612b      	str	r3, [r5, #16]
 80056a8:	e5ac      	b.n	8005204 <HAL_PCD_IRQHandler+0x184>
      USBx->GINTMSK &= ~USB_OTG_GINTMSK_GONAKEFFM;
 80056aa:	69b3      	ldr	r3, [r6, #24]
 80056ac:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 80056b0:	61b3      	str	r3, [r6, #24]
      for (epnum = 1U; epnum < hpcd->Init.dev_endpoints; epnum++)
 80056b2:	2701      	movs	r7, #1
        if (hpcd->OUT_ep[epnum].is_iso_incomplete == 1U)
 80056b4:	f204 2857 	addw	r8, r4, #599	@ 0x257
 80056b8:	f04f 0924 	mov.w	r9, #36	@ 0x24
      for (epnum = 1U; epnum < hpcd->Init.dev_endpoints; epnum++)
 80056bc:	7923      	ldrb	r3, [r4, #4]
 80056be:	42bb      	cmp	r3, r7
 80056c0:	f67f ade0 	bls.w	8005284 <HAL_PCD_IRQHandler+0x204>
        if (hpcd->OUT_ep[epnum].is_iso_incomplete == 1U)
 80056c4:	fb09 f307 	mul.w	r3, r9, r7
 80056c8:	f818 3003 	ldrb.w	r3, [r8, r3]
 80056cc:	2b01      	cmp	r3, #1
 80056ce:	d103      	bne.n	80056d8 <HAL_PCD_IRQHandler+0x658>
          (void)HAL_PCD_EP_Abort(hpcd, (uint8_t)epnum);
 80056d0:	b2f9      	uxtb	r1, r7
 80056d2:	4620      	mov	r0, r4
 80056d4:	f7ff fcc3 	bl	800505e <HAL_PCD_EP_Abort>
      for (epnum = 1U; epnum < hpcd->Init.dev_endpoints; epnum++)
 80056d8:	3701      	adds	r7, #1
 80056da:	e7ef      	b.n	80056bc <HAL_PCD_IRQHandler+0x63c>
        if ((hpcd->IN_ep[epnum].type == EP_TYPE_ISOC) &&
 80056dc:	f898 303c 	ldrb.w	r3, [r8, #60]	@ 0x3c
        RegVal = USBx_INEP(epnum)->DIEPCTL;
 80056e0:	f8d9 2000 	ldr.w	r2, [r9]
        if ((hpcd->IN_ep[epnum].type == EP_TYPE_ISOC) &&
 80056e4:	2b01      	cmp	r3, #1
 80056e6:	d109      	bne.n	80056fc <HAL_PCD_IRQHandler+0x67c>
 80056e8:	2a00      	cmp	r2, #0
 80056ea:	da07      	bge.n	80056fc <HAL_PCD_IRQHandler+0x67c>
          (void)HAL_PCD_EP_Abort(hpcd, (uint8_t)(epnum | 0x80U));
 80056ec:	f067 017f 	orn	r1, r7, #127	@ 0x7f
          hpcd->IN_ep[epnum].is_iso_incomplete = 1U;
 80056f0:	f888 303b 	strb.w	r3, [r8, #59]	@ 0x3b
          (void)HAL_PCD_EP_Abort(hpcd, (uint8_t)(epnum | 0x80U));
 80056f4:	b2c9      	uxtb	r1, r1
 80056f6:	4620      	mov	r0, r4
 80056f8:	f7ff fcb1 	bl	800505e <HAL_PCD_EP_Abort>
      for (epnum = 1U; epnum < hpcd->Init.dev_endpoints; epnum++)
 80056fc:	3701      	adds	r7, #1
 80056fe:	f108 0824 	add.w	r8, r8, #36	@ 0x24
 8005702:	f109 0920 	add.w	r9, r9, #32
 8005706:	e5c6      	b.n	8005296 <HAL_PCD_IRQHandler+0x216>
      for (epnum = 1U; epnum < hpcd->Init.dev_endpoints; epnum++)
 8005708:	3101      	adds	r1, #1
 800570a:	3324      	adds	r3, #36	@ 0x24
 800570c:	3020      	adds	r0, #32
 800570e:	e5d6      	b.n	80052be <HAL_PCD_IRQHandler+0x23e>

08005710 <HAL_PCDEx_SetTxFiFo>:
         --> Txn should be configured with the minimum space of 16 words
     The FIFO is used optimally when used TxFIFOs are allocated in the top
         of the FIFO.Ex: use EP1 and EP2 as IN instead of EP1 and EP3 as IN ones.
     When DMA is used 3n * FIFO locations should be reserved for internal DMA registers */

  Tx_Offset = hpcd->Instance->GRXFSIZ;
 8005710:	6800      	ldr	r0, [r0, #0]
{
 8005712:	b570      	push	{r4, r5, r6, lr}
  Tx_Offset = hpcd->Instance->GRXFSIZ;
 8005714:	6a43      	ldr	r3, [r0, #36]	@ 0x24

  if (fifo == 0U)
  {
    hpcd->Instance->DIEPTXF0_HNPTXFSIZ = ((uint32_t)size << 16) | Tx_Offset;
 8005716:	0412      	lsls	r2, r2, #16
  if (fifo == 0U)
 8005718:	b919      	cbnz	r1, 8005722 <HAL_PCDEx_SetTxFiFo+0x12>
    hpcd->Instance->DIEPTXF0_HNPTXFSIZ = ((uint32_t)size << 16) | Tx_Offset;
 800571a:	4313      	orrs	r3, r2
 800571c:	6283      	str	r3, [r0, #40]	@ 0x28
    /* Multiply Tx_Size by 2 to get higher performance */
    hpcd->Instance->DIEPTXF[fifo - 1U] = ((uint32_t)size << 16) | Tx_Offset;
  }

  return HAL_OK;
}
 800571e:	2000      	movs	r0, #0
 8005720:	bd70      	pop	{r4, r5, r6, pc}
    Tx_Offset += (hpcd->Instance->DIEPTXF0_HNPTXFSIZ) >> 16;
 8005722:	6a84      	ldr	r4, [r0, #40]	@ 0x28
    for (i = 0U; i < (fifo - 1U); i++)
 8005724:	1e4e      	subs	r6, r1, #1
    Tx_Offset += (hpcd->Instance->DIEPTXF0_HNPTXFSIZ) >> 16;
 8005726:	eb03 4314 	add.w	r3, r3, r4, lsr #16
    for (i = 0U; i < (fifo - 1U); i++)
 800572a:	2400      	movs	r4, #0
 800572c:	42b4      	cmp	r4, r6
 800572e:	d305      	bcc.n	800573c <HAL_PCDEx_SetTxFiFo+0x2c>
    hpcd->Instance->DIEPTXF[fifo - 1U] = ((uint32_t)size << 16) | Tx_Offset;
 8005730:	313f      	adds	r1, #63	@ 0x3f
 8005732:	eb00 0081 	add.w	r0, r0, r1, lsl #2
 8005736:	4313      	orrs	r3, r2
 8005738:	6043      	str	r3, [r0, #4]
 800573a:	e7f0      	b.n	800571e <HAL_PCDEx_SetTxFiFo+0xe>
      Tx_Offset += (hpcd->Instance->DIEPTXF[i] >> 16);
 800573c:	f104 0540 	add.w	r5, r4, #64	@ 0x40
 8005740:	eb00 0585 	add.w	r5, r0, r5, lsl #2
 8005744:	3401      	adds	r4, #1
 8005746:	686d      	ldr	r5, [r5, #4]
 8005748:	eb03 4315 	add.w	r3, r3, r5, lsr #16
    for (i = 0U; i < (fifo - 1U); i++)
 800574c:	e7ee      	b.n	800572c <HAL_PCDEx_SetTxFiFo+0x1c>

0800574e <HAL_PCDEx_SetRxFiFo>:
  * @param  size Size of Rx fifo
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_PCDEx_SetRxFiFo(PCD_HandleTypeDef *hpcd, uint16_t size)
{
  hpcd->Instance->GRXFSIZ = size;
 800574e:	6803      	ldr	r3, [r0, #0]

  return HAL_OK;
}
 8005750:	2000      	movs	r0, #0
  hpcd->Instance->GRXFSIZ = size;
 8005752:	6259      	str	r1, [r3, #36]	@ 0x24
}
 8005754:	4770      	bx	lr

08005756 <HAL_PCDEx_LPM_Callback>:
  UNUSED(msg);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_PCDEx_LPM_Callback could be implemented in the user file
   */
}
 8005756:	4770      	bx	lr

08005758 <HAL_RCC_OscConfig>:
  *         supported by this API. User should request a transition to HSE Off
  *         first and then HSE On or HSE Bypass.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
 8005758:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
  uint32_t tickstart;
  uint32_t pll_config;
  /* Check Null pointer */
  if (RCC_OscInitStruct == NULL)
 800575c:	4604      	mov	r4, r0
 800575e:	b340      	cbz	r0, 80057b2 <HAL_RCC_OscConfig+0x5a>
  }

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
  /*------------------------------- HSE Configuration ------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 8005760:	6803      	ldr	r3, [r0, #0]
 8005762:	07de      	lsls	r6, r3, #31
 8005764:	d410      	bmi.n	8005788 <HAL_RCC_OscConfig+0x30>
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 8005766:	6823      	ldr	r3, [r4, #0]
 8005768:	079d      	lsls	r5, r3, #30
 800576a:	d45b      	bmi.n	8005824 <HAL_RCC_OscConfig+0xcc>
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 800576c:	6823      	ldr	r3, [r4, #0]
 800576e:	0719      	lsls	r1, r3, #28
 8005770:	f100 809d 	bmi.w	80058ae <HAL_RCC_OscConfig+0x156>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 8005774:	6823      	ldr	r3, [r4, #0]
 8005776:	075a      	lsls	r2, r3, #29
 8005778:	f100 80bd 	bmi.w	80058f6 <HAL_RCC_OscConfig+0x19e>
    }
  }
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 800577c:	69a3      	ldr	r3, [r4, #24]
 800577e:	2b00      	cmp	r3, #0
 8005780:	f040 8124 	bne.w	80059cc <HAL_RCC_OscConfig+0x274>
          return HAL_ERROR;
        }
      }
    }
  }
  return HAL_OK;
 8005784:	2000      	movs	r0, #0
 8005786:	e02c      	b.n	80057e2 <HAL_RCC_OscConfig+0x8a>
    if ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) || \
 8005788:	4b8d      	ldr	r3, [pc, #564]	@ (80059c0 <HAL_RCC_OscConfig+0x268>)
 800578a:	689a      	ldr	r2, [r3, #8]
 800578c:	f002 020c 	and.w	r2, r2, #12
 8005790:	2a04      	cmp	r2, #4
 8005792:	d007      	beq.n	80057a4 <HAL_RCC_OscConfig+0x4c>
        ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 8005794:	689a      	ldr	r2, [r3, #8]
 8005796:	f002 020c 	and.w	r2, r2, #12
    if ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) || \
 800579a:	2a08      	cmp	r2, #8
 800579c:	d10b      	bne.n	80057b6 <HAL_RCC_OscConfig+0x5e>
        ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 800579e:	685b      	ldr	r3, [r3, #4]
 80057a0:	0259      	lsls	r1, r3, #9
 80057a2:	d508      	bpl.n	80057b6 <HAL_RCC_OscConfig+0x5e>
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 80057a4:	4b86      	ldr	r3, [pc, #536]	@ (80059c0 <HAL_RCC_OscConfig+0x268>)
 80057a6:	681b      	ldr	r3, [r3, #0]
 80057a8:	039a      	lsls	r2, r3, #14
 80057aa:	d5dc      	bpl.n	8005766 <HAL_RCC_OscConfig+0xe>
 80057ac:	6863      	ldr	r3, [r4, #4]
 80057ae:	2b00      	cmp	r3, #0
 80057b0:	d1d9      	bne.n	8005766 <HAL_RCC_OscConfig+0xe>
    return HAL_ERROR;
 80057b2:	2001      	movs	r0, #1
 80057b4:	e015      	b.n	80057e2 <HAL_RCC_OscConfig+0x8a>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 80057b6:	6863      	ldr	r3, [r4, #4]
 80057b8:	4d81      	ldr	r5, [pc, #516]	@ (80059c0 <HAL_RCC_OscConfig+0x268>)
 80057ba:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 80057be:	d113      	bne.n	80057e8 <HAL_RCC_OscConfig+0x90>
 80057c0:	682b      	ldr	r3, [r5, #0]
 80057c2:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 80057c6:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
 80057c8:	f7fe fa16 	bl	8003bf8 <HAL_GetTick>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 80057cc:	4e7c      	ldr	r6, [pc, #496]	@ (80059c0 <HAL_RCC_OscConfig+0x268>)
        tickstart = HAL_GetTick();
 80057ce:	4605      	mov	r5, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 80057d0:	6833      	ldr	r3, [r6, #0]
 80057d2:	039b      	lsls	r3, r3, #14
 80057d4:	d4c7      	bmi.n	8005766 <HAL_RCC_OscConfig+0xe>
          if ((HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
 80057d6:	f7fe fa0f 	bl	8003bf8 <HAL_GetTick>
 80057da:	1b40      	subs	r0, r0, r5
 80057dc:	2864      	cmp	r0, #100	@ 0x64
 80057de:	d9f7      	bls.n	80057d0 <HAL_RCC_OscConfig+0x78>
            return HAL_TIMEOUT;
 80057e0:	2003      	movs	r0, #3
}
 80057e2:	b002      	add	sp, #8
 80057e4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 80057e8:	f5b3 2fa0 	cmp.w	r3, #327680	@ 0x50000
 80057ec:	d104      	bne.n	80057f8 <HAL_RCC_OscConfig+0xa0>
 80057ee:	682b      	ldr	r3, [r5, #0]
 80057f0:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 80057f4:	602b      	str	r3, [r5, #0]
 80057f6:	e7e3      	b.n	80057c0 <HAL_RCC_OscConfig+0x68>
 80057f8:	682a      	ldr	r2, [r5, #0]
 80057fa:	f422 3280 	bic.w	r2, r2, #65536	@ 0x10000
 80057fe:	602a      	str	r2, [r5, #0]
 8005800:	682a      	ldr	r2, [r5, #0]
 8005802:	f422 2280 	bic.w	r2, r2, #262144	@ 0x40000
 8005806:	602a      	str	r2, [r5, #0]
      if ((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 8005808:	2b00      	cmp	r3, #0
 800580a:	d1dd      	bne.n	80057c8 <HAL_RCC_OscConfig+0x70>
        tickstart = HAL_GetTick();
 800580c:	f7fe f9f4 	bl	8003bf8 <HAL_GetTick>
 8005810:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 8005812:	682b      	ldr	r3, [r5, #0]
 8005814:	039f      	lsls	r7, r3, #14
 8005816:	d5a6      	bpl.n	8005766 <HAL_RCC_OscConfig+0xe>
          if ((HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
 8005818:	f7fe f9ee 	bl	8003bf8 <HAL_GetTick>
 800581c:	1b80      	subs	r0, r0, r6
 800581e:	2864      	cmp	r0, #100	@ 0x64
 8005820:	d9f7      	bls.n	8005812 <HAL_RCC_OscConfig+0xba>
 8005822:	e7dd      	b.n	80057e0 <HAL_RCC_OscConfig+0x88>
    if ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) || \
 8005824:	4b66      	ldr	r3, [pc, #408]	@ (80059c0 <HAL_RCC_OscConfig+0x268>)
 8005826:	689a      	ldr	r2, [r3, #8]
 8005828:	f012 0f0c 	tst.w	r2, #12
 800582c:	d007      	beq.n	800583e <HAL_RCC_OscConfig+0xe6>
        ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 800582e:	689a      	ldr	r2, [r3, #8]
 8005830:	f002 020c 	and.w	r2, r2, #12
    if ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) || \
 8005834:	2a08      	cmp	r2, #8
 8005836:	d111      	bne.n	800585c <HAL_RCC_OscConfig+0x104>
        ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 8005838:	685b      	ldr	r3, [r3, #4]
 800583a:	025d      	lsls	r5, r3, #9
 800583c:	d40e      	bmi.n	800585c <HAL_RCC_OscConfig+0x104>
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 800583e:	4a60      	ldr	r2, [pc, #384]	@ (80059c0 <HAL_RCC_OscConfig+0x268>)
 8005840:	6813      	ldr	r3, [r2, #0]
 8005842:	0799      	lsls	r1, r3, #30
 8005844:	d502      	bpl.n	800584c <HAL_RCC_OscConfig+0xf4>
 8005846:	68e3      	ldr	r3, [r4, #12]
 8005848:	2b01      	cmp	r3, #1
 800584a:	d1b2      	bne.n	80057b2 <HAL_RCC_OscConfig+0x5a>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 800584c:	6813      	ldr	r3, [r2, #0]
 800584e:	6921      	ldr	r1, [r4, #16]
 8005850:	f023 03f8 	bic.w	r3, r3, #248	@ 0xf8
 8005854:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 8005858:	6013      	str	r3, [r2, #0]
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 800585a:	e787      	b.n	800576c <HAL_RCC_OscConfig+0x14>
      if ((RCC_OscInitStruct->HSIState) != RCC_HSI_OFF)
 800585c:	68e2      	ldr	r2, [r4, #12]
 800585e:	4b59      	ldr	r3, [pc, #356]	@ (80059c4 <HAL_RCC_OscConfig+0x26c>)
 8005860:	b1b2      	cbz	r2, 8005890 <HAL_RCC_OscConfig+0x138>
        __HAL_RCC_HSI_ENABLE();
 8005862:	2201      	movs	r2, #1
 8005864:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 8005866:	f7fe f9c7 	bl	8003bf8 <HAL_GetTick>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800586a:	4d55      	ldr	r5, [pc, #340]	@ (80059c0 <HAL_RCC_OscConfig+0x268>)
        tickstart = HAL_GetTick();
 800586c:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800586e:	682b      	ldr	r3, [r5, #0]
 8005870:	079b      	lsls	r3, r3, #30
 8005872:	d507      	bpl.n	8005884 <HAL_RCC_OscConfig+0x12c>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8005874:	682b      	ldr	r3, [r5, #0]
 8005876:	6922      	ldr	r2, [r4, #16]
 8005878:	f023 03f8 	bic.w	r3, r3, #248	@ 0xf8
 800587c:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 8005880:	602b      	str	r3, [r5, #0]
 8005882:	e773      	b.n	800576c <HAL_RCC_OscConfig+0x14>
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 8005884:	f7fe f9b8 	bl	8003bf8 <HAL_GetTick>
 8005888:	1b80      	subs	r0, r0, r6
 800588a:	2802      	cmp	r0, #2
 800588c:	d9ef      	bls.n	800586e <HAL_RCC_OscConfig+0x116>
 800588e:	e7a7      	b.n	80057e0 <HAL_RCC_OscConfig+0x88>
        __HAL_RCC_HSI_DISABLE();
 8005890:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 8005892:	f7fe f9b1 	bl	8003bf8 <HAL_GetTick>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 8005896:	4e4a      	ldr	r6, [pc, #296]	@ (80059c0 <HAL_RCC_OscConfig+0x268>)
        tickstart = HAL_GetTick();
 8005898:	4605      	mov	r5, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 800589a:	6833      	ldr	r3, [r6, #0]
 800589c:	079f      	lsls	r7, r3, #30
 800589e:	f57f af65 	bpl.w	800576c <HAL_RCC_OscConfig+0x14>
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 80058a2:	f7fe f9a9 	bl	8003bf8 <HAL_GetTick>
 80058a6:	1b40      	subs	r0, r0, r5
 80058a8:	2802      	cmp	r0, #2
 80058aa:	d9f6      	bls.n	800589a <HAL_RCC_OscConfig+0x142>
 80058ac:	e798      	b.n	80057e0 <HAL_RCC_OscConfig+0x88>
    if ((RCC_OscInitStruct->LSIState) != RCC_LSI_OFF)
 80058ae:	6962      	ldr	r2, [r4, #20]
 80058b0:	4b44      	ldr	r3, [pc, #272]	@ (80059c4 <HAL_RCC_OscConfig+0x26c>)
 80058b2:	b182      	cbz	r2, 80058d6 <HAL_RCC_OscConfig+0x17e>
      __HAL_RCC_LSI_ENABLE();
 80058b4:	2201      	movs	r2, #1
 80058b6:	f8c3 2e80 	str.w	r2, [r3, #3712]	@ 0xe80
      tickstart = HAL_GetTick();
 80058ba:	f7fe f99d 	bl	8003bf8 <HAL_GetTick>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 80058be:	4e40      	ldr	r6, [pc, #256]	@ (80059c0 <HAL_RCC_OscConfig+0x268>)
      tickstart = HAL_GetTick();
 80058c0:	4605      	mov	r5, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 80058c2:	6f73      	ldr	r3, [r6, #116]	@ 0x74
 80058c4:	079b      	lsls	r3, r3, #30
 80058c6:	f53f af55 	bmi.w	8005774 <HAL_RCC_OscConfig+0x1c>
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 80058ca:	f7fe f995 	bl	8003bf8 <HAL_GetTick>
 80058ce:	1b40      	subs	r0, r0, r5
 80058d0:	2802      	cmp	r0, #2
 80058d2:	d9f6      	bls.n	80058c2 <HAL_RCC_OscConfig+0x16a>
 80058d4:	e784      	b.n	80057e0 <HAL_RCC_OscConfig+0x88>
      __HAL_RCC_LSI_DISABLE();
 80058d6:	f8c3 2e80 	str.w	r2, [r3, #3712]	@ 0xe80
      tickstart = HAL_GetTick();
 80058da:	f7fe f98d 	bl	8003bf8 <HAL_GetTick>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 80058de:	4e38      	ldr	r6, [pc, #224]	@ (80059c0 <HAL_RCC_OscConfig+0x268>)
      tickstart = HAL_GetTick();
 80058e0:	4605      	mov	r5, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 80058e2:	6f73      	ldr	r3, [r6, #116]	@ 0x74
 80058e4:	079f      	lsls	r7, r3, #30
 80058e6:	f57f af45 	bpl.w	8005774 <HAL_RCC_OscConfig+0x1c>
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 80058ea:	f7fe f985 	bl	8003bf8 <HAL_GetTick>
 80058ee:	1b40      	subs	r0, r0, r5
 80058f0:	2802      	cmp	r0, #2
 80058f2:	d9f6      	bls.n	80058e2 <HAL_RCC_OscConfig+0x18a>
 80058f4:	e774      	b.n	80057e0 <HAL_RCC_OscConfig+0x88>
    if (__HAL_RCC_PWR_IS_CLK_DISABLED())
 80058f6:	4b32      	ldr	r3, [pc, #200]	@ (80059c0 <HAL_RCC_OscConfig+0x268>)
 80058f8:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 80058fa:	f012 5280 	ands.w	r2, r2, #268435456	@ 0x10000000
 80058fe:	d128      	bne.n	8005952 <HAL_RCC_OscConfig+0x1fa>
      __HAL_RCC_PWR_CLK_ENABLE();
 8005900:	9201      	str	r2, [sp, #4]
 8005902:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 8005904:	f042 5280 	orr.w	r2, r2, #268435456	@ 0x10000000
 8005908:	641a      	str	r2, [r3, #64]	@ 0x40
 800590a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800590c:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8005910:	9301      	str	r3, [sp, #4]
 8005912:	9b01      	ldr	r3, [sp, #4]
      pwrclkchanged = SET;
 8005914:	2701      	movs	r7, #1
    if (HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8005916:	4d2c      	ldr	r5, [pc, #176]	@ (80059c8 <HAL_RCC_OscConfig+0x270>)
 8005918:	682b      	ldr	r3, [r5, #0]
 800591a:	05d8      	lsls	r0, r3, #23
 800591c:	d51b      	bpl.n	8005956 <HAL_RCC_OscConfig+0x1fe>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 800591e:	68a3      	ldr	r3, [r4, #8]
 8005920:	4d27      	ldr	r5, [pc, #156]	@ (80059c0 <HAL_RCC_OscConfig+0x268>)
 8005922:	2b01      	cmp	r3, #1
 8005924:	d127      	bne.n	8005976 <HAL_RCC_OscConfig+0x21e>
 8005926:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
 8005928:	f043 0301 	orr.w	r3, r3, #1
 800592c:	672b      	str	r3, [r5, #112]	@ 0x70
      tickstart = HAL_GetTick();
 800592e:	f7fe f963 	bl	8003bf8 <HAL_GetTick>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8005932:	4e23      	ldr	r6, [pc, #140]	@ (80059c0 <HAL_RCC_OscConfig+0x268>)
      tickstart = HAL_GetTick();
 8005934:	4605      	mov	r5, r0
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8005936:	f241 3888 	movw	r8, #5000	@ 0x1388
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800593a:	6f33      	ldr	r3, [r6, #112]	@ 0x70
 800593c:	079a      	lsls	r2, r3, #30
 800593e:	d539      	bpl.n	80059b4 <HAL_RCC_OscConfig+0x25c>
    if (pwrclkchanged == SET)
 8005940:	2f00      	cmp	r7, #0
 8005942:	f43f af1b 	beq.w	800577c <HAL_RCC_OscConfig+0x24>
      __HAL_RCC_PWR_CLK_DISABLE();
 8005946:	4a1e      	ldr	r2, [pc, #120]	@ (80059c0 <HAL_RCC_OscConfig+0x268>)
 8005948:	6c13      	ldr	r3, [r2, #64]	@ 0x40
 800594a:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 800594e:	6413      	str	r3, [r2, #64]	@ 0x40
 8005950:	e714      	b.n	800577c <HAL_RCC_OscConfig+0x24>
    FlagStatus       pwrclkchanged = RESET;
 8005952:	2700      	movs	r7, #0
 8005954:	e7df      	b.n	8005916 <HAL_RCC_OscConfig+0x1be>
      SET_BIT(PWR->CR, PWR_CR_DBP);
 8005956:	682b      	ldr	r3, [r5, #0]
 8005958:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 800595c:	602b      	str	r3, [r5, #0]
      tickstart = HAL_GetTick();
 800595e:	f7fe f94b 	bl	8003bf8 <HAL_GetTick>
 8005962:	4606      	mov	r6, r0
      while (HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8005964:	682b      	ldr	r3, [r5, #0]
 8005966:	05d9      	lsls	r1, r3, #23
 8005968:	d4d9      	bmi.n	800591e <HAL_RCC_OscConfig+0x1c6>
        if ((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 800596a:	f7fe f945 	bl	8003bf8 <HAL_GetTick>
 800596e:	1b80      	subs	r0, r0, r6
 8005970:	2802      	cmp	r0, #2
 8005972:	d9f7      	bls.n	8005964 <HAL_RCC_OscConfig+0x20c>
 8005974:	e734      	b.n	80057e0 <HAL_RCC_OscConfig+0x88>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8005976:	2b05      	cmp	r3, #5
 8005978:	d104      	bne.n	8005984 <HAL_RCC_OscConfig+0x22c>
 800597a:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
 800597c:	f043 0304 	orr.w	r3, r3, #4
 8005980:	672b      	str	r3, [r5, #112]	@ 0x70
 8005982:	e7d0      	b.n	8005926 <HAL_RCC_OscConfig+0x1ce>
 8005984:	6f2a      	ldr	r2, [r5, #112]	@ 0x70
 8005986:	f022 0201 	bic.w	r2, r2, #1
 800598a:	672a      	str	r2, [r5, #112]	@ 0x70
 800598c:	6f2a      	ldr	r2, [r5, #112]	@ 0x70
 800598e:	f022 0204 	bic.w	r2, r2, #4
 8005992:	672a      	str	r2, [r5, #112]	@ 0x70
    if ((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 8005994:	2b00      	cmp	r3, #0
 8005996:	d1ca      	bne.n	800592e <HAL_RCC_OscConfig+0x1d6>
      tickstart = HAL_GetTick();
 8005998:	f7fe f92e 	bl	8003bf8 <HAL_GetTick>
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 800599c:	f241 3888 	movw	r8, #5000	@ 0x1388
      tickstart = HAL_GetTick();
 80059a0:	4606      	mov	r6, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 80059a2:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
 80059a4:	079b      	lsls	r3, r3, #30
 80059a6:	d5cb      	bpl.n	8005940 <HAL_RCC_OscConfig+0x1e8>
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 80059a8:	f7fe f926 	bl	8003bf8 <HAL_GetTick>
 80059ac:	1b80      	subs	r0, r0, r6
 80059ae:	4540      	cmp	r0, r8
 80059b0:	d9f7      	bls.n	80059a2 <HAL_RCC_OscConfig+0x24a>
 80059b2:	e715      	b.n	80057e0 <HAL_RCC_OscConfig+0x88>
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 80059b4:	f7fe f920 	bl	8003bf8 <HAL_GetTick>
 80059b8:	1b40      	subs	r0, r0, r5
 80059ba:	4540      	cmp	r0, r8
 80059bc:	d9bd      	bls.n	800593a <HAL_RCC_OscConfig+0x1e2>
 80059be:	e70f      	b.n	80057e0 <HAL_RCC_OscConfig+0x88>
 80059c0:	40023800 	.word	0x40023800
 80059c4:	42470000 	.word	0x42470000
 80059c8:	40007000 	.word	0x40007000
    if (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
 80059cc:	4d37      	ldr	r5, [pc, #220]	@ (8005aac <HAL_RCC_OscConfig+0x354>)
 80059ce:	68aa      	ldr	r2, [r5, #8]
 80059d0:	f002 020c 	and.w	r2, r2, #12
 80059d4:	2a08      	cmp	r2, #8
 80059d6:	d03e      	beq.n	8005a56 <HAL_RCC_OscConfig+0x2fe>
      if ((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 80059d8:	2b02      	cmp	r3, #2
 80059da:	4b35      	ldr	r3, [pc, #212]	@ (8005ab0 <HAL_RCC_OscConfig+0x358>)
 80059dc:	f04f 0200 	mov.w	r2, #0
        __HAL_RCC_PLL_DISABLE();
 80059e0:	661a      	str	r2, [r3, #96]	@ 0x60
      if ((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 80059e2:	d12b      	bne.n	8005a3c <HAL_RCC_OscConfig+0x2e4>
        tickstart = HAL_GetTick();
 80059e4:	f7fe f908 	bl	8003bf8 <HAL_GetTick>
 80059e8:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 80059ea:	682b      	ldr	r3, [r5, #0]
 80059ec:	0199      	lsls	r1, r3, #6
 80059ee:	d41f      	bmi.n	8005a30 <HAL_RCC_OscConfig+0x2d8>
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 80059f0:	e9d4 3207 	ldrd	r3, r2, [r4, #28]
 80059f4:	4313      	orrs	r3, r2
 80059f6:	6a62      	ldr	r2, [r4, #36]	@ 0x24
 80059f8:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 80059fc:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 80059fe:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 8005a02:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
 8005a04:	0852      	lsrs	r2, r2, #1
 8005a06:	3a01      	subs	r2, #1
 8005a08:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8005a0c:	606b      	str	r3, [r5, #4]
        __HAL_RCC_PLL_ENABLE();
 8005a0e:	4b28      	ldr	r3, [pc, #160]	@ (8005ab0 <HAL_RCC_OscConfig+0x358>)
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8005a10:	4d26      	ldr	r5, [pc, #152]	@ (8005aac <HAL_RCC_OscConfig+0x354>)
        __HAL_RCC_PLL_ENABLE();
 8005a12:	2201      	movs	r2, #1
 8005a14:	661a      	str	r2, [r3, #96]	@ 0x60
        tickstart = HAL_GetTick();
 8005a16:	f7fe f8ef 	bl	8003bf8 <HAL_GetTick>
 8005a1a:	4604      	mov	r4, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8005a1c:	682b      	ldr	r3, [r5, #0]
 8005a1e:	019a      	lsls	r2, r3, #6
 8005a20:	f53f aeb0 	bmi.w	8005784 <HAL_RCC_OscConfig+0x2c>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 8005a24:	f7fe f8e8 	bl	8003bf8 <HAL_GetTick>
 8005a28:	1b00      	subs	r0, r0, r4
 8005a2a:	2802      	cmp	r0, #2
 8005a2c:	d9f6      	bls.n	8005a1c <HAL_RCC_OscConfig+0x2c4>
 8005a2e:	e6d7      	b.n	80057e0 <HAL_RCC_OscConfig+0x88>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 8005a30:	f7fe f8e2 	bl	8003bf8 <HAL_GetTick>
 8005a34:	1b80      	subs	r0, r0, r6
 8005a36:	2802      	cmp	r0, #2
 8005a38:	d9d7      	bls.n	80059ea <HAL_RCC_OscConfig+0x292>
 8005a3a:	e6d1      	b.n	80057e0 <HAL_RCC_OscConfig+0x88>
        tickstart = HAL_GetTick();
 8005a3c:	f7fe f8dc 	bl	8003bf8 <HAL_GetTick>
 8005a40:	4604      	mov	r4, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8005a42:	682b      	ldr	r3, [r5, #0]
 8005a44:	019b      	lsls	r3, r3, #6
 8005a46:	f57f ae9d 	bpl.w	8005784 <HAL_RCC_OscConfig+0x2c>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 8005a4a:	f7fe f8d5 	bl	8003bf8 <HAL_GetTick>
 8005a4e:	1b00      	subs	r0, r0, r4
 8005a50:	2802      	cmp	r0, #2
 8005a52:	d9f6      	bls.n	8005a42 <HAL_RCC_OscConfig+0x2ea>
 8005a54:	e6c4      	b.n	80057e0 <HAL_RCC_OscConfig+0x88>
      if ((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 8005a56:	2b01      	cmp	r3, #1
 8005a58:	f43f aeab 	beq.w	80057b2 <HAL_RCC_OscConfig+0x5a>
        pll_config = RCC->PLLCFGR;
 8005a5c:	686b      	ldr	r3, [r5, #4]
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 8005a5e:	69e2      	ldr	r2, [r4, #28]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8005a60:	f403 0180 	and.w	r1, r3, #4194304	@ 0x400000
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 8005a64:	4291      	cmp	r1, r2
 8005a66:	f47f aea4 	bne.w	80057b2 <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8005a6a:	6a21      	ldr	r1, [r4, #32]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 8005a6c:	f003 023f 	and.w	r2, r3, #63	@ 0x3f
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8005a70:	428a      	cmp	r2, r1
 8005a72:	f47f ae9e 	bne.w	80057b2 <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 8005a76:	6a61      	ldr	r1, [r4, #36]	@ 0x24
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 8005a78:	f647 72c0 	movw	r2, #32704	@ 0x7fc0
 8005a7c:	401a      	ands	r2, r3
 8005a7e:	ebb2 1f81 	cmp.w	r2, r1, lsl #6
 8005a82:	f47f ae96 	bne.w	80057b2 <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 8005a86:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
 8005a88:	0852      	lsrs	r2, r2, #1
 8005a8a:	f403 3140 	and.w	r1, r3, #196608	@ 0x30000
 8005a8e:	3a01      	subs	r2, #1
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 8005a90:	ebb1 4f02 	cmp.w	r1, r2, lsl #16
 8005a94:	f47f ae8d 	bne.w	80057b2 <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)))
 8005a98:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 8005a9a:	f003 6370 	and.w	r3, r3, #251658240	@ 0xf000000
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 8005a9e:	ebb3 6f02 	cmp.w	r3, r2, lsl #24
 8005aa2:	bf14      	ite	ne
 8005aa4:	2001      	movne	r0, #1
 8005aa6:	2000      	moveq	r0, #0
 8005aa8:	e69b      	b.n	80057e2 <HAL_RCC_OscConfig+0x8a>
 8005aaa:	bf00      	nop
 8005aac:	40023800 	.word	0x40023800
 8005ab0:	42470000 	.word	0x42470000

08005ab4 <HAL_RCC_GetSysClockFreq>:
  uint32_t pllvco = 0U;
  uint32_t pllp = 0U;
  uint32_t sysclockfreq = 0U;

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (RCC->CFGR & RCC_CFGR_SWS)
 8005ab4:	4913      	ldr	r1, [pc, #76]	@ (8005b04 <HAL_RCC_GetSysClockFreq+0x50>)
{
 8005ab6:	b508      	push	{r3, lr}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 8005ab8:	688b      	ldr	r3, [r1, #8]
 8005aba:	f003 030c 	and.w	r3, r3, #12
 8005abe:	2b04      	cmp	r3, #4
 8005ac0:	d01c      	beq.n	8005afc <HAL_RCC_GetSysClockFreq+0x48>
 8005ac2:	2b08      	cmp	r3, #8
 8005ac4:	d11c      	bne.n	8005b00 <HAL_RCC_GetSysClockFreq+0x4c>
    }
    case RCC_CFGR_SWS_PLL:  /* PLL used as system clock  source */
    {
      /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLP */
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 8005ac6:	684a      	ldr	r2, [r1, #4]
      if (__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 8005ac8:	684b      	ldr	r3, [r1, #4]
      {
        /* HSE used as PLL clock source */
        pllvco = (uint32_t)((((uint64_t) HSE_VALUE * ((uint64_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8005aca:	6849      	ldr	r1, [r1, #4]
      if (__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 8005acc:	f413 0380 	ands.w	r3, r3, #4194304	@ 0x400000
        pllvco = (uint32_t)((((uint64_t) HSE_VALUE * ((uint64_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8005ad0:	bf14      	ite	ne
 8005ad2:	480d      	ldrne	r0, [pc, #52]	@ (8005b08 <HAL_RCC_GetSysClockFreq+0x54>)
      }
      else
      {
        /* HSI used as PLL clock source */
        pllvco = (uint32_t)((((uint64_t) HSI_VALUE * ((uint64_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8005ad4:	480d      	ldreq	r0, [pc, #52]	@ (8005b0c <HAL_RCC_GetSysClockFreq+0x58>)
        pllvco = (uint32_t)((((uint64_t) HSE_VALUE * ((uint64_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8005ad6:	f3c1 1188 	ubfx	r1, r1, #6, #9
 8005ada:	bf18      	it	ne
 8005adc:	2300      	movne	r3, #0
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 8005ade:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
        pllvco = (uint32_t)((((uint64_t) HSI_VALUE * ((uint64_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8005ae2:	fba1 0100 	umull	r0, r1, r1, r0
 8005ae6:	f7fa fc2b 	bl	8000340 <__aeabi_uldivmod>
      }
      pllp = ((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >> RCC_PLLCFGR_PLLP_Pos) + 1U) * 2U);
 8005aea:	4b06      	ldr	r3, [pc, #24]	@ (8005b04 <HAL_RCC_GetSysClockFreq+0x50>)
 8005aec:	685b      	ldr	r3, [r3, #4]
 8005aee:	f3c3 4301 	ubfx	r3, r3, #16, #2
 8005af2:	3301      	adds	r3, #1
 8005af4:	005b      	lsls	r3, r3, #1

      sysclockfreq = pllvco / pllp;
 8005af6:	fbb0 f0f3 	udiv	r0, r0, r3
      sysclockfreq = HSI_VALUE;
      break;
    }
  }
  return sysclockfreq;
}
 8005afa:	bd08      	pop	{r3, pc}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 8005afc:	4802      	ldr	r0, [pc, #8]	@ (8005b08 <HAL_RCC_GetSysClockFreq+0x54>)
 8005afe:	e7fc      	b.n	8005afa <HAL_RCC_GetSysClockFreq+0x46>
      sysclockfreq = HSI_VALUE;
 8005b00:	4802      	ldr	r0, [pc, #8]	@ (8005b0c <HAL_RCC_GetSysClockFreq+0x58>)
  return sysclockfreq;
 8005b02:	e7fa      	b.n	8005afa <HAL_RCC_GetSysClockFreq+0x46>
 8005b04:	40023800 	.word	0x40023800
 8005b08:	007a1200 	.word	0x007a1200
 8005b0c:	00f42400 	.word	0x00f42400

08005b10 <HAL_RCC_ClockConfig>:
{
 8005b10:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8005b14:	460d      	mov	r5, r1
  if (RCC_ClkInitStruct == NULL)
 8005b16:	4604      	mov	r4, r0
 8005b18:	b910      	cbnz	r0, 8005b20 <HAL_RCC_ClockConfig+0x10>
    return HAL_ERROR;
 8005b1a:	2001      	movs	r0, #1
}
 8005b1c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if (FLatency > __HAL_FLASH_GET_LATENCY())
 8005b20:	4b43      	ldr	r3, [pc, #268]	@ (8005c30 <HAL_RCC_ClockConfig+0x120>)
 8005b22:	681a      	ldr	r2, [r3, #0]
 8005b24:	f002 020f 	and.w	r2, r2, #15
 8005b28:	428a      	cmp	r2, r1
 8005b2a:	d328      	bcc.n	8005b7e <HAL_RCC_ClockConfig+0x6e>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 8005b2c:	6821      	ldr	r1, [r4, #0]
 8005b2e:	078f      	lsls	r7, r1, #30
 8005b30:	d42d      	bmi.n	8005b8e <HAL_RCC_ClockConfig+0x7e>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 8005b32:	07c8      	lsls	r0, r1, #31
 8005b34:	d440      	bmi.n	8005bb8 <HAL_RCC_ClockConfig+0xa8>
  if (FLatency < __HAL_FLASH_GET_LATENCY())
 8005b36:	4b3e      	ldr	r3, [pc, #248]	@ (8005c30 <HAL_RCC_ClockConfig+0x120>)
 8005b38:	681a      	ldr	r2, [r3, #0]
 8005b3a:	f002 020f 	and.w	r2, r2, #15
 8005b3e:	42aa      	cmp	r2, r5
 8005b40:	d865      	bhi.n	8005c0e <HAL_RCC_ClockConfig+0xfe>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8005b42:	6822      	ldr	r2, [r4, #0]
 8005b44:	0751      	lsls	r1, r2, #29
 8005b46:	d46b      	bmi.n	8005c20 <HAL_RCC_ClockConfig+0x110>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 8005b48:	0713      	lsls	r3, r2, #28
 8005b4a:	d507      	bpl.n	8005b5c <HAL_RCC_ClockConfig+0x4c>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
 8005b4c:	4a39      	ldr	r2, [pc, #228]	@ (8005c34 <HAL_RCC_ClockConfig+0x124>)
 8005b4e:	6921      	ldr	r1, [r4, #16]
 8005b50:	6893      	ldr	r3, [r2, #8]
 8005b52:	f423 4360 	bic.w	r3, r3, #57344	@ 0xe000
 8005b56:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 8005b5a:	6093      	str	r3, [r2, #8]
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE) >> RCC_CFGR_HPRE_Pos];
 8005b5c:	f7ff ffaa 	bl	8005ab4 <HAL_RCC_GetSysClockFreq>
 8005b60:	4b34      	ldr	r3, [pc, #208]	@ (8005c34 <HAL_RCC_ClockConfig+0x124>)
 8005b62:	4a35      	ldr	r2, [pc, #212]	@ (8005c38 <HAL_RCC_ClockConfig+0x128>)
 8005b64:	689b      	ldr	r3, [r3, #8]
 8005b66:	f3c3 1303 	ubfx	r3, r3, #4, #4
 8005b6a:	5cd3      	ldrb	r3, [r2, r3]
 8005b6c:	40d8      	lsrs	r0, r3
 8005b6e:	4b33      	ldr	r3, [pc, #204]	@ (8005c3c <HAL_RCC_ClockConfig+0x12c>)
 8005b70:	6018      	str	r0, [r3, #0]
  HAL_InitTick(uwTickPrio);
 8005b72:	4b33      	ldr	r3, [pc, #204]	@ (8005c40 <HAL_RCC_ClockConfig+0x130>)
 8005b74:	6818      	ldr	r0, [r3, #0]
 8005b76:	f7fc fd11 	bl	800259c <HAL_InitTick>
  return HAL_OK;
 8005b7a:	2000      	movs	r0, #0
 8005b7c:	e7ce      	b.n	8005b1c <HAL_RCC_ClockConfig+0xc>
    __HAL_FLASH_SET_LATENCY(FLatency);
 8005b7e:	b2ca      	uxtb	r2, r1
 8005b80:	701a      	strb	r2, [r3, #0]
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
 8005b82:	681b      	ldr	r3, [r3, #0]
 8005b84:	f003 030f 	and.w	r3, r3, #15
 8005b88:	428b      	cmp	r3, r1
 8005b8a:	d1c6      	bne.n	8005b1a <HAL_RCC_ClockConfig+0xa>
 8005b8c:	e7ce      	b.n	8005b2c <HAL_RCC_ClockConfig+0x1c>
    if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8005b8e:	4b29      	ldr	r3, [pc, #164]	@ (8005c34 <HAL_RCC_ClockConfig+0x124>)
 8005b90:	f011 0f04 	tst.w	r1, #4
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 8005b94:	bf1e      	ittt	ne
 8005b96:	689a      	ldrne	r2, [r3, #8]
 8005b98:	f442 52e0 	orrne.w	r2, r2, #7168	@ 0x1c00
 8005b9c:	609a      	strne	r2, [r3, #8]
    if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 8005b9e:	070e      	lsls	r6, r1, #28
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3));
 8005ba0:	bf42      	ittt	mi
 8005ba2:	689a      	ldrmi	r2, [r3, #8]
 8005ba4:	f442 4260 	orrmi.w	r2, r2, #57344	@ 0xe000
 8005ba8:	609a      	strmi	r2, [r3, #8]
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 8005baa:	689a      	ldr	r2, [r3, #8]
 8005bac:	68a0      	ldr	r0, [r4, #8]
 8005bae:	f022 02f0 	bic.w	r2, r2, #240	@ 0xf0
 8005bb2:	4302      	orrs	r2, r0
 8005bb4:	609a      	str	r2, [r3, #8]
 8005bb6:	e7bc      	b.n	8005b32 <HAL_RCC_ClockConfig+0x22>
    if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 8005bb8:	6862      	ldr	r2, [r4, #4]
 8005bba:	4b1e      	ldr	r3, [pc, #120]	@ (8005c34 <HAL_RCC_ClockConfig+0x124>)
 8005bbc:	2a01      	cmp	r2, #1
 8005bbe:	d11c      	bne.n	8005bfa <HAL_RCC_ClockConfig+0xea>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8005bc0:	681b      	ldr	r3, [r3, #0]
 8005bc2:	f413 3f00 	tst.w	r3, #131072	@ 0x20000
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8005bc6:	d0a8      	beq.n	8005b1a <HAL_RCC_ClockConfig+0xa>
    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 8005bc8:	4e1a      	ldr	r6, [pc, #104]	@ (8005c34 <HAL_RCC_ClockConfig+0x124>)
 8005bca:	68b3      	ldr	r3, [r6, #8]
 8005bcc:	f023 0303 	bic.w	r3, r3, #3
 8005bd0:	4313      	orrs	r3, r2
 8005bd2:	60b3      	str	r3, [r6, #8]
    tickstart = HAL_GetTick();
 8005bd4:	f7fe f810 	bl	8003bf8 <HAL_GetTick>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 8005bd8:	f241 3888 	movw	r8, #5000	@ 0x1388
    tickstart = HAL_GetTick();
 8005bdc:	4607      	mov	r7, r0
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 8005bde:	68b3      	ldr	r3, [r6, #8]
 8005be0:	6862      	ldr	r2, [r4, #4]
 8005be2:	f003 030c 	and.w	r3, r3, #12
 8005be6:	ebb3 0f82 	cmp.w	r3, r2, lsl #2
 8005bea:	d0a4      	beq.n	8005b36 <HAL_RCC_ClockConfig+0x26>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 8005bec:	f7fe f804 	bl	8003bf8 <HAL_GetTick>
 8005bf0:	1bc0      	subs	r0, r0, r7
 8005bf2:	4540      	cmp	r0, r8
 8005bf4:	d9f3      	bls.n	8005bde <HAL_RCC_ClockConfig+0xce>
        return HAL_TIMEOUT;
 8005bf6:	2003      	movs	r0, #3
 8005bf8:	e790      	b.n	8005b1c <HAL_RCC_ClockConfig+0xc>
    else if ((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 8005bfa:	1e91      	subs	r1, r2, #2
 8005bfc:	2901      	cmp	r1, #1
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8005bfe:	681b      	ldr	r3, [r3, #0]
    else if ((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 8005c00:	d802      	bhi.n	8005c08 <HAL_RCC_ClockConfig+0xf8>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8005c02:	f013 7f00 	tst.w	r3, #33554432	@ 0x2000000
 8005c06:	e7de      	b.n	8005bc6 <HAL_RCC_ClockConfig+0xb6>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8005c08:	f013 0f02 	tst.w	r3, #2
 8005c0c:	e7db      	b.n	8005bc6 <HAL_RCC_ClockConfig+0xb6>
    __HAL_FLASH_SET_LATENCY(FLatency);
 8005c0e:	b2ea      	uxtb	r2, r5
 8005c10:	701a      	strb	r2, [r3, #0]
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
 8005c12:	681b      	ldr	r3, [r3, #0]
 8005c14:	f003 030f 	and.w	r3, r3, #15
 8005c18:	42ab      	cmp	r3, r5
 8005c1a:	f47f af7e 	bne.w	8005b1a <HAL_RCC_ClockConfig+0xa>
 8005c1e:	e790      	b.n	8005b42 <HAL_RCC_ClockConfig+0x32>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 8005c20:	4904      	ldr	r1, [pc, #16]	@ (8005c34 <HAL_RCC_ClockConfig+0x124>)
 8005c22:	68e0      	ldr	r0, [r4, #12]
 8005c24:	688b      	ldr	r3, [r1, #8]
 8005c26:	f423 53e0 	bic.w	r3, r3, #7168	@ 0x1c00
 8005c2a:	4303      	orrs	r3, r0
 8005c2c:	608b      	str	r3, [r1, #8]
 8005c2e:	e78b      	b.n	8005b48 <HAL_RCC_ClockConfig+0x38>
 8005c30:	40023c00 	.word	0x40023c00
 8005c34:	40023800 	.word	0x40023800
 8005c38:	08024cd0 	.word	0x08024cd0
 8005c3c:	200000c4 	.word	0x200000c4
 8005c40:	200000cc 	.word	0x200000cc

08005c44 <HAL_RCC_GetHCLKFreq>:
  * @retval HCLK frequency
  */
uint32_t HAL_RCC_GetHCLKFreq(void)
{
  return SystemCoreClock;
}
 8005c44:	4b01      	ldr	r3, [pc, #4]	@ (8005c4c <HAL_RCC_GetHCLKFreq+0x8>)
 8005c46:	6818      	ldr	r0, [r3, #0]
 8005c48:	4770      	bx	lr
 8005c4a:	bf00      	nop
 8005c4c:	200000c4 	.word	0x200000c4

08005c50 <HAL_RCC_GetPCLK1Freq>:
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1) >> RCC_CFGR_PPRE1_Pos]);
 8005c50:	4b04      	ldr	r3, [pc, #16]	@ (8005c64 <HAL_RCC_GetPCLK1Freq+0x14>)
 8005c52:	4a05      	ldr	r2, [pc, #20]	@ (8005c68 <HAL_RCC_GetPCLK1Freq+0x18>)
 8005c54:	689b      	ldr	r3, [r3, #8]
 8005c56:	f3c3 2382 	ubfx	r3, r3, #10, #3
 8005c5a:	5cd3      	ldrb	r3, [r2, r3]
 8005c5c:	4a03      	ldr	r2, [pc, #12]	@ (8005c6c <HAL_RCC_GetPCLK1Freq+0x1c>)
 8005c5e:	6810      	ldr	r0, [r2, #0]
}
 8005c60:	40d8      	lsrs	r0, r3
 8005c62:	4770      	bx	lr
 8005c64:	40023800 	.word	0x40023800
 8005c68:	08024cc8 	.word	0x08024cc8
 8005c6c:	200000c4 	.word	0x200000c4

08005c70 <HAL_RCC_GetClockConfig>:
  * @retval None
  */
void HAL_RCC_GetClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t *pFLatency)
{
  /* Set all possible values for the Clock type parameter --------------------*/
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;
 8005c70:	230f      	movs	r3, #15
 8005c72:	6003      	str	r3, [r0, #0]

  /* Get the SYSCLK configuration --------------------------------------------*/
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 8005c74:	4b0b      	ldr	r3, [pc, #44]	@ (8005ca4 <HAL_RCC_GetClockConfig+0x34>)
 8005c76:	689a      	ldr	r2, [r3, #8]
 8005c78:	f002 0203 	and.w	r2, r2, #3
 8005c7c:	6042      	str	r2, [r0, #4]

  /* Get the HCLK configuration ----------------------------------------------*/
  RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_HPRE);
 8005c7e:	689a      	ldr	r2, [r3, #8]
 8005c80:	f002 02f0 	and.w	r2, r2, #240	@ 0xf0
 8005c84:	6082      	str	r2, [r0, #8]

  /* Get the APB1 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_PPRE1);
 8005c86:	689a      	ldr	r2, [r3, #8]
 8005c88:	f402 52e0 	and.w	r2, r2, #7168	@ 0x1c00
 8005c8c:	60c2      	str	r2, [r0, #12]

  /* Get the APB2 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 8005c8e:	689b      	ldr	r3, [r3, #8]
 8005c90:	08db      	lsrs	r3, r3, #3
 8005c92:	f403 53e0 	and.w	r3, r3, #7168	@ 0x1c00
 8005c96:	6103      	str	r3, [r0, #16]

  /* Get the Flash Wait State (Latency) configuration ------------------------*/
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 8005c98:	4b03      	ldr	r3, [pc, #12]	@ (8005ca8 <HAL_RCC_GetClockConfig+0x38>)
 8005c9a:	681b      	ldr	r3, [r3, #0]
 8005c9c:	f003 030f 	and.w	r3, r3, #15
 8005ca0:	600b      	str	r3, [r1, #0]
}
 8005ca2:	4770      	bx	lr
 8005ca4:	40023800 	.word	0x40023800
 8005ca8:	40023c00 	.word	0x40023c00

08005cac <HAL_RCCEx_PeriphCLKConfig>:
  /*----------------------- SAI/I2S Configuration (PLLI2S) -------------------*/
  /*----------------------- Common configuration SAI/I2S ---------------------*/
  /* In Case of SAI or I2S Clock Configuration through PLLI2S, PLLI2SN division
     factor is common parameters for both peripherals */
  if ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
      (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == RCC_PERIPHCLK_SAI_PLLI2S) ||
 8005cac:	6803      	ldr	r3, [r0, #0]
  if ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 8005cae:	f013 0f43 	tst.w	r3, #67	@ 0x43
{
 8005cb2:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8005cb4:	4604      	mov	r4, r0
  if ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 8005cb6:	f040 8088 	bne.w	8005dca <HAL_RCCEx_PeriphCLKConfig+0x11e>

  /*----------------------- SAI/LTDC Configuration (PLLSAI) ------------------*/
  /*----------------------- Common configuration SAI/LTDC --------------------*/
  /* In Case of SAI or LTDC Clock Configuration through PLLSAI, PLLSAIN division
     factor is common parameters for both peripherals */
  if ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == RCC_PERIPHCLK_SAI_PLLSAI) ||
 8005cba:	6823      	ldr	r3, [r4, #0]
 8005cbc:	f013 0f0c 	tst.w	r3, #12
 8005cc0:	d045      	beq.n	8005d4e <HAL_RCCEx_PeriphCLKConfig+0xa2>
  {
    /* Check the PLLSAI division factors */
    assert_param(IS_RCC_PLLSAIN_VALUE(PeriphClkInit->PLLSAI.PLLSAIN));

    /* Disable PLLSAI Clock */
    __HAL_RCC_PLLSAI_DISABLE();
 8005cc2:	4b8c      	ldr	r3, [pc, #560]	@ (8005ef4 <HAL_RCCEx_PeriphCLKConfig+0x248>)
    /* Get tick */
    tickstart = HAL_GetTick();
    /* Wait till PLLSAI is disabled */
    while (__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 8005cc4:	4d8c      	ldr	r5, [pc, #560]	@ (8005ef8 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    __HAL_RCC_PLLSAI_DISABLE();
 8005cc6:	2200      	movs	r2, #0
 8005cc8:	671a      	str	r2, [r3, #112]	@ 0x70
    tickstart = HAL_GetTick();
 8005cca:	f7fd ff95 	bl	8003bf8 <HAL_GetTick>
 8005cce:	4606      	mov	r6, r0
    while (__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 8005cd0:	682b      	ldr	r3, [r5, #0]
 8005cd2:	0099      	lsls	r1, r3, #2
 8005cd4:	f100 80cb 	bmi.w	8005e6e <HAL_RCCEx_PeriphCLKConfig+0x1c2>
    }

    /*---------------------------- SAI configuration -------------------------*/
    /* In Case of SAI Clock Configuration through PLLSAI, PLLSAIQ and PLLSAI_DIVQ must
       be added only for SAI configuration */
    if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == (RCC_PERIPHCLK_SAI_PLLSAI))
 8005cd8:	6821      	ldr	r1, [r4, #0]
 8005cda:	074a      	lsls	r2, r1, #29
 8005cdc:	d515      	bpl.n	8005d0a <HAL_RCCEx_PeriphCLKConfig+0x5e>
      /* Read PLLSAIR value from PLLSAICFGR register (this value is not need for SAI configuration) */
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* SAI_CLK(first level) = PLLSAI_VCO Output/PLLSAIQ */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN, PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 8005cde:	e9d4 0304 	ldrd	r0, r3, [r4, #16]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
 8005ce2:	f8d5 2088 	ldr.w	r2, [r5, #136]	@ 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN, PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 8005ce6:	061b      	lsls	r3, r3, #24
 8005ce8:	f002 42e0 	and.w	r2, r2, #1879048192	@ 0x70000000
 8005cec:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 8005cf0:	4313      	orrs	r3, r2
 8005cf2:	f8c5 3088 	str.w	r3, [r5, #136]	@ 0x88
      /* SAI_CLK_x = SAI_CLK(first level)/PLLSAIDIVQ */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLSAIDivQ);
 8005cf6:	f8d5 308c 	ldr.w	r3, [r5, #140]	@ 0x8c
 8005cfa:	6a22      	ldr	r2, [r4, #32]
 8005cfc:	f423 53f8 	bic.w	r3, r3, #7936	@ 0x1f00
 8005d00:	3a01      	subs	r2, #1
 8005d02:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8005d06:	f8c5 308c 	str.w	r3, [r5, #140]	@ 0x8c
    }

    /*---------------------------- LTDC configuration ------------------------*/
    if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == (RCC_PERIPHCLK_LTDC))
 8005d0a:	070b      	lsls	r3, r1, #28
 8005d0c:	d514      	bpl.n	8005d38 <HAL_RCCEx_PeriphCLKConfig+0x8c>
    {
      assert_param(IS_RCC_PLLSAIR_VALUE(PeriphClkInit->PLLSAI.PLLSAIR));
      assert_param(IS_RCC_PLLSAI_DIVR_VALUE(PeriphClkInit->PLLSAIDivR));

      /* Read PLLSAIR value from PLLSAICFGR register (this value is not need for SAI configuration) */
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 8005d0e:	4a7a      	ldr	r2, [pc, #488]	@ (8005ef8 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* LTDC_CLK(first level) = PLLSAI_VCO Output/PLLSAIR */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN, tmpreg1, PeriphClkInit->PLLSAI.PLLSAIR);
 8005d10:	69a3      	ldr	r3, [r4, #24]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 8005d12:	f8d2 1088 	ldr.w	r1, [r2, #136]	@ 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN, tmpreg1, PeriphClkInit->PLLSAI.PLLSAIR);
 8005d16:	6920      	ldr	r0, [r4, #16]
 8005d18:	071b      	lsls	r3, r3, #28
 8005d1a:	f001 6170 	and.w	r1, r1, #251658240	@ 0xf000000
 8005d1e:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 8005d22:	430b      	orrs	r3, r1
 8005d24:	f8c2 3088 	str.w	r3, [r2, #136]	@ 0x88
      /* LTDC_CLK = LTDC_CLK(first level)/PLLSAIDIVR */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVR_CONFIG(PeriphClkInit->PLLSAIDivR);
 8005d28:	f8d2 308c 	ldr.w	r3, [r2, #140]	@ 0x8c
 8005d2c:	6a61      	ldr	r1, [r4, #36]	@ 0x24
 8005d2e:	f423 3340 	bic.w	r3, r3, #196608	@ 0x30000
 8005d32:	430b      	orrs	r3, r1
 8005d34:	f8c2 308c 	str.w	r3, [r2, #140]	@ 0x8c
    }
    /* Enable PLLSAI Clock */
    __HAL_RCC_PLLSAI_ENABLE();
 8005d38:	4b6e      	ldr	r3, [pc, #440]	@ (8005ef4 <HAL_RCCEx_PeriphCLKConfig+0x248>)
    /* Get tick */
    tickstart = HAL_GetTick();
    /* Wait till PLLSAI is ready */
    while (__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 8005d3a:	4e6f      	ldr	r6, [pc, #444]	@ (8005ef8 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    __HAL_RCC_PLLSAI_ENABLE();
 8005d3c:	2201      	movs	r2, #1
 8005d3e:	671a      	str	r2, [r3, #112]	@ 0x70
    tickstart = HAL_GetTick();
 8005d40:	f7fd ff5a 	bl	8003bf8 <HAL_GetTick>
 8005d44:	4605      	mov	r5, r0
    while (__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 8005d46:	6833      	ldr	r3, [r6, #0]
 8005d48:	009f      	lsls	r7, r3, #2
 8005d4a:	f140 8097 	bpl.w	8005e7c <HAL_RCCEx_PeriphCLKConfig+0x1d0>
    }
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- RTC configuration ---------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 8005d4e:	6823      	ldr	r3, [r4, #0]
 8005d50:	0698      	lsls	r0, r3, #26
 8005d52:	d534      	bpl.n	8005dbe <HAL_RCCEx_PeriphCLKConfig+0x112>
  {
    /* Check for RTC Parameters used to output RTCCLK */
    assert_param(IS_RCC_RTCCLKSOURCE(PeriphClkInit->RTCClockSelection));

    /* Enable Power Clock*/
    __HAL_RCC_PWR_CLK_ENABLE();
 8005d54:	2300      	movs	r3, #0
 8005d56:	9301      	str	r3, [sp, #4]
 8005d58:	4b67      	ldr	r3, [pc, #412]	@ (8005ef8 <HAL_RCCEx_PeriphCLKConfig+0x24c>)

    /* Enable write access to Backup domain */
    PWR->CR |= PWR_CR_DBP;
 8005d5a:	4d68      	ldr	r5, [pc, #416]	@ (8005efc <HAL_RCCEx_PeriphCLKConfig+0x250>)
    __HAL_RCC_PWR_CLK_ENABLE();
 8005d5c:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 8005d5e:	f042 5280 	orr.w	r2, r2, #268435456	@ 0x10000000
 8005d62:	641a      	str	r2, [r3, #64]	@ 0x40
 8005d64:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8005d66:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8005d6a:	9301      	str	r3, [sp, #4]
 8005d6c:	9b01      	ldr	r3, [sp, #4]
    PWR->CR |= PWR_CR_DBP;
 8005d6e:	682b      	ldr	r3, [r5, #0]
 8005d70:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8005d74:	602b      	str	r3, [r5, #0]

    /* Get tick */
    tickstart = HAL_GetTick();
 8005d76:	f7fd ff3f 	bl	8003bf8 <HAL_GetTick>
 8005d7a:	4606      	mov	r6, r0

    while ((PWR->CR & PWR_CR_DBP) == RESET)
 8005d7c:	682b      	ldr	r3, [r5, #0]
 8005d7e:	05d8      	lsls	r0, r3, #23
 8005d80:	f140 8083 	bpl.w	8005e8a <HAL_RCCEx_PeriphCLKConfig+0x1de>
      {
        return HAL_TIMEOUT;
      }
    }
    /* Reset the Backup domain only if the RTC Clock source selection is modified from reset value */
    tmpreg1 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 8005d84:	4d5c      	ldr	r5, [pc, #368]	@ (8005ef8 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    if ((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 8005d86:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
    tmpreg1 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 8005d88:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
    if ((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 8005d8a:	f413 7340 	ands.w	r3, r3, #768	@ 0x300
 8005d8e:	f040 8083 	bne.w	8005e98 <HAL_RCCEx_PeriphCLKConfig+0x1ec>
            return HAL_TIMEOUT;
          }
        }
      }
    }
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 8005d92:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
 8005d94:	f403 7240 	and.w	r2, r3, #768	@ 0x300
 8005d98:	f5b2 7f40 	cmp.w	r2, #768	@ 0x300
 8005d9c:	4a56      	ldr	r2, [pc, #344]	@ (8005ef8 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
 8005d9e:	f040 809e 	bne.w	8005ede <HAL_RCCEx_PeriphCLKConfig+0x232>
 8005da2:	6891      	ldr	r1, [r2, #8]
 8005da4:	f023 4070 	bic.w	r0, r3, #4026531840	@ 0xf0000000
 8005da8:	f421 11f8 	bic.w	r1, r1, #2031616	@ 0x1f0000
 8005dac:	f420 7040 	bic.w	r0, r0, #768	@ 0x300
 8005db0:	4301      	orrs	r1, r0
 8005db2:	6091      	str	r1, [r2, #8]
 8005db4:	6f11      	ldr	r1, [r2, #112]	@ 0x70
 8005db6:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8005dba:	430b      	orrs	r3, r1
 8005dbc:	6713      	str	r3, [r2, #112]	@ 0x70
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- TIM configuration ---------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
 8005dbe:	6823      	ldr	r3, [r4, #0]
 8005dc0:	06db      	lsls	r3, r3, #27
 8005dc2:	f100 8090 	bmi.w	8005ee6 <HAL_RCCEx_PeriphCLKConfig+0x23a>
  {
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
  }
  return HAL_OK;
 8005dc6:	2000      	movs	r0, #0
 8005dc8:	e04f      	b.n	8005e6a <HAL_RCCEx_PeriphCLKConfig+0x1be>
    __HAL_RCC_PLLI2S_DISABLE();
 8005dca:	4b4a      	ldr	r3, [pc, #296]	@ (8005ef4 <HAL_RCCEx_PeriphCLKConfig+0x248>)
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 8005dcc:	4e4a      	ldr	r6, [pc, #296]	@ (8005ef8 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    __HAL_RCC_PLLI2S_DISABLE();
 8005dce:	2200      	movs	r2, #0
 8005dd0:	669a      	str	r2, [r3, #104]	@ 0x68
    tickstart = HAL_GetTick();
 8005dd2:	f7fd ff11 	bl	8003bf8 <HAL_GetTick>
 8005dd6:	4605      	mov	r5, r0
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 8005dd8:	6833      	ldr	r3, [r6, #0]
 8005dda:	011f      	lsls	r7, r3, #4
 8005ddc:	d43f      	bmi.n	8005e5e <HAL_RCCEx_PeriphCLKConfig+0x1b2>
    if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == (RCC_PERIPHCLK_I2S))
 8005dde:	6821      	ldr	r1, [r4, #0]
 8005de0:	07c8      	lsls	r0, r1, #31
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, PeriphClkInit->PLLI2S.PLLI2SR);
 8005de2:	bf41      	itttt	mi
 8005de4:	e9d4 2301 	ldrdmi	r2, r3, [r4, #4]
 8005de8:	071b      	lslmi	r3, r3, #28
 8005dea:	ea43 1382 	orrmi.w	r3, r3, r2, lsl #6
 8005dee:	f8c6 3084 	strmi.w	r3, [r6, #132]	@ 0x84
    if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == (RCC_PERIPHCLK_SAI_PLLI2S))
 8005df2:	078a      	lsls	r2, r1, #30
 8005df4:	d515      	bpl.n	8005e22 <HAL_RCCEx_PeriphCLKConfig+0x176>
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 8005df6:	4a40      	ldr	r2, [pc, #256]	@ (8005ef8 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, PeriphClkInit->PLLI2S.PLLI2SQ, tmpreg1);
 8005df8:	68e3      	ldr	r3, [r4, #12]
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 8005dfa:	f8d2 0084 	ldr.w	r0, [r2, #132]	@ 0x84
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, PeriphClkInit->PLLI2S.PLLI2SQ, tmpreg1);
 8005dfe:	6865      	ldr	r5, [r4, #4]
 8005e00:	061b      	lsls	r3, r3, #24
 8005e02:	f000 40e0 	and.w	r0, r0, #1879048192	@ 0x70000000
 8005e06:	ea43 1385 	orr.w	r3, r3, r5, lsl #6
 8005e0a:	4303      	orrs	r3, r0
 8005e0c:	f8c2 3084 	str.w	r3, [r2, #132]	@ 0x84
      __HAL_RCC_PLLI2S_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLI2SDivQ);
 8005e10:	f8d2 008c 	ldr.w	r0, [r2, #140]	@ 0x8c
 8005e14:	69e3      	ldr	r3, [r4, #28]
 8005e16:	f020 001f 	bic.w	r0, r0, #31
 8005e1a:	3b01      	subs	r3, #1
 8005e1c:	4303      	orrs	r3, r0
 8005e1e:	f8c2 308c 	str.w	r3, [r2, #140]	@ 0x8c
    if ((PeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_PLLI2S) == RCC_PERIPHCLK_PLLI2S)
 8005e22:	064b      	lsls	r3, r1, #25
 8005e24:	d50a      	bpl.n	8005e3c <HAL_RCCEx_PeriphCLKConfig+0x190>
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, PeriphClkInit->PLLI2S.PLLI2SQ,
 8005e26:	68e3      	ldr	r3, [r4, #12]
 8005e28:	6862      	ldr	r2, [r4, #4]
 8005e2a:	061b      	lsls	r3, r3, #24
 8005e2c:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 8005e30:	68a2      	ldr	r2, [r4, #8]
 8005e32:	ea43 7302 	orr.w	r3, r3, r2, lsl #28
 8005e36:	4a30      	ldr	r2, [pc, #192]	@ (8005ef8 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
 8005e38:	f8c2 3084 	str.w	r3, [r2, #132]	@ 0x84
    __HAL_RCC_PLLI2S_ENABLE();
 8005e3c:	4b2d      	ldr	r3, [pc, #180]	@ (8005ef4 <HAL_RCCEx_PeriphCLKConfig+0x248>)
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 8005e3e:	4e2e      	ldr	r6, [pc, #184]	@ (8005ef8 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    __HAL_RCC_PLLI2S_ENABLE();
 8005e40:	2201      	movs	r2, #1
 8005e42:	669a      	str	r2, [r3, #104]	@ 0x68
    tickstart = HAL_GetTick();
 8005e44:	f7fd fed8 	bl	8003bf8 <HAL_GetTick>
 8005e48:	4605      	mov	r5, r0
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 8005e4a:	6833      	ldr	r3, [r6, #0]
 8005e4c:	011f      	lsls	r7, r3, #4
 8005e4e:	f53f af34 	bmi.w	8005cba <HAL_RCCEx_PeriphCLKConfig+0xe>
      if ((HAL_GetTick() - tickstart) > PLLI2S_TIMEOUT_VALUE)
 8005e52:	f7fd fed1 	bl	8003bf8 <HAL_GetTick>
 8005e56:	1b40      	subs	r0, r0, r5
 8005e58:	2802      	cmp	r0, #2
 8005e5a:	d9f6      	bls.n	8005e4a <HAL_RCCEx_PeriphCLKConfig+0x19e>
 8005e5c:	e004      	b.n	8005e68 <HAL_RCCEx_PeriphCLKConfig+0x1bc>
      if ((HAL_GetTick() - tickstart) > PLLI2S_TIMEOUT_VALUE)
 8005e5e:	f7fd fecb 	bl	8003bf8 <HAL_GetTick>
 8005e62:	1b40      	subs	r0, r0, r5
 8005e64:	2802      	cmp	r0, #2
 8005e66:	d9b7      	bls.n	8005dd8 <HAL_RCCEx_PeriphCLKConfig+0x12c>
        return HAL_TIMEOUT;
 8005e68:	2003      	movs	r0, #3
}
 8005e6a:	b003      	add	sp, #12
 8005e6c:	bdf0      	pop	{r4, r5, r6, r7, pc}
      if ((HAL_GetTick() - tickstart) > PLLSAI_TIMEOUT_VALUE)
 8005e6e:	f7fd fec3 	bl	8003bf8 <HAL_GetTick>
 8005e72:	1b80      	subs	r0, r0, r6
 8005e74:	2802      	cmp	r0, #2
 8005e76:	f67f af2b 	bls.w	8005cd0 <HAL_RCCEx_PeriphCLKConfig+0x24>
 8005e7a:	e7f5      	b.n	8005e68 <HAL_RCCEx_PeriphCLKConfig+0x1bc>
      if ((HAL_GetTick() - tickstart) > PLLSAI_TIMEOUT_VALUE)
 8005e7c:	f7fd febc 	bl	8003bf8 <HAL_GetTick>
 8005e80:	1b40      	subs	r0, r0, r5
 8005e82:	2802      	cmp	r0, #2
 8005e84:	f67f af5f 	bls.w	8005d46 <HAL_RCCEx_PeriphCLKConfig+0x9a>
 8005e88:	e7ee      	b.n	8005e68 <HAL_RCCEx_PeriphCLKConfig+0x1bc>
      if ((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 8005e8a:	f7fd feb5 	bl	8003bf8 <HAL_GetTick>
 8005e8e:	1b80      	subs	r0, r0, r6
 8005e90:	2802      	cmp	r0, #2
 8005e92:	f67f af73 	bls.w	8005d7c <HAL_RCCEx_PeriphCLKConfig+0xd0>
 8005e96:	e7e7      	b.n	8005e68 <HAL_RCCEx_PeriphCLKConfig+0x1bc>
    if ((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 8005e98:	f402 7240 	and.w	r2, r2, #768	@ 0x300
 8005e9c:	4293      	cmp	r3, r2
 8005e9e:	f43f af78 	beq.w	8005d92 <HAL_RCCEx_PeriphCLKConfig+0xe6>
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 8005ea2:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
      __HAL_RCC_BACKUPRESET_FORCE();
 8005ea4:	4a13      	ldr	r2, [pc, #76]	@ (8005ef4 <HAL_RCCEx_PeriphCLKConfig+0x248>)
 8005ea6:	2101      	movs	r1, #1
 8005ea8:	f8c2 1e40 	str.w	r1, [r2, #3648]	@ 0xe40
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 8005eac:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
      __HAL_RCC_BACKUPRESET_RELEASE();
 8005eb0:	2100      	movs	r1, #0
 8005eb2:	f8c2 1e40 	str.w	r1, [r2, #3648]	@ 0xe40
      RCC->BDCR = tmpreg1;
 8005eb6:	672b      	str	r3, [r5, #112]	@ 0x70
      if (HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSEON))
 8005eb8:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
 8005eba:	07d9      	lsls	r1, r3, #31
 8005ebc:	f57f af69 	bpl.w	8005d92 <HAL_RCCEx_PeriphCLKConfig+0xe6>
        tickstart = HAL_GetTick();
 8005ec0:	f7fd fe9a 	bl	8003bf8 <HAL_GetTick>
          if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8005ec4:	f241 3788 	movw	r7, #5000	@ 0x1388
        tickstart = HAL_GetTick();
 8005ec8:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8005eca:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
 8005ecc:	079a      	lsls	r2, r3, #30
 8005ece:	f53f af60 	bmi.w	8005d92 <HAL_RCCEx_PeriphCLKConfig+0xe6>
          if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8005ed2:	f7fd fe91 	bl	8003bf8 <HAL_GetTick>
 8005ed6:	1b80      	subs	r0, r0, r6
 8005ed8:	42b8      	cmp	r0, r7
 8005eda:	d9f6      	bls.n	8005eca <HAL_RCCEx_PeriphCLKConfig+0x21e>
 8005edc:	e7c4      	b.n	8005e68 <HAL_RCCEx_PeriphCLKConfig+0x1bc>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 8005ede:	6891      	ldr	r1, [r2, #8]
 8005ee0:	f421 11f8 	bic.w	r1, r1, #2031616	@ 0x1f0000
 8005ee4:	e765      	b.n	8005db2 <HAL_RCCEx_PeriphCLKConfig+0x106>
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
 8005ee6:	4b06      	ldr	r3, [pc, #24]	@ (8005f00 <HAL_RCCEx_PeriphCLKConfig+0x254>)
 8005ee8:	f894 202c 	ldrb.w	r2, [r4, #44]	@ 0x2c
 8005eec:	f8c3 21e0 	str.w	r2, [r3, #480]	@ 0x1e0
 8005ef0:	e769      	b.n	8005dc6 <HAL_RCCEx_PeriphCLKConfig+0x11a>
 8005ef2:	bf00      	nop
 8005ef4:	42470000 	.word	0x42470000
 8005ef8:	40023800 	.word	0x40023800
 8005efc:	40007000 	.word	0x40007000
 8005f00:	42471000 	.word	0x42471000

08005f04 <HAL_RNG_Init>:
  * @param  hrng pointer to a RNG_HandleTypeDef structure that contains
  *                the configuration information for RNG.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RNG_Init(RNG_HandleTypeDef *hrng)
{
 8005f04:	b510      	push	{r4, lr}
  /* Check the RNG handle allocation */
  if (hrng == NULL)
 8005f06:	4604      	mov	r4, r0
 8005f08:	b190      	cbz	r0, 8005f30 <HAL_RNG_Init+0x2c>

    /* Init the low level hardware */
    hrng->MspInitCallback(hrng);
  }
#else
  if (hrng->State == HAL_RNG_STATE_RESET)
 8005f0a:	7943      	ldrb	r3, [r0, #5]
 8005f0c:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 8005f10:	b913      	cbnz	r3, 8005f18 <HAL_RNG_Init+0x14>
  {
    /* Allocate lock resource and initialize it */
    hrng->Lock = HAL_UNLOCKED;
 8005f12:	7102      	strb	r2, [r0, #4]

    /* Init the low level hardware */
    HAL_RNG_MspInit(hrng);
 8005f14:	f7fc fa88 	bl	8002428 <HAL_RNG_MspInit>
  /* Change RNG peripheral state */
  hrng->State = HAL_RNG_STATE_BUSY;


  /* Enable the RNG Peripheral */
  __HAL_RNG_ENABLE(hrng);
 8005f18:	6822      	ldr	r2, [r4, #0]
  hrng->State = HAL_RNG_STATE_BUSY;
 8005f1a:	2302      	movs	r3, #2
 8005f1c:	7163      	strb	r3, [r4, #5]
  __HAL_RNG_ENABLE(hrng);
 8005f1e:	6813      	ldr	r3, [r2, #0]
 8005f20:	f043 0304 	orr.w	r3, r3, #4
 8005f24:	6013      	str	r3, [r2, #0]

  /* Initialize the RNG state */
  hrng->State = HAL_RNG_STATE_READY;

  /* Initialise the error code */
  hrng->ErrorCode = HAL_RNG_ERROR_NONE;
 8005f26:	2000      	movs	r0, #0
  hrng->State = HAL_RNG_STATE_READY;
 8005f28:	2301      	movs	r3, #1
 8005f2a:	7163      	strb	r3, [r4, #5]
  hrng->ErrorCode = HAL_RNG_ERROR_NONE;
 8005f2c:	60a0      	str	r0, [r4, #8]

  /* Return function status */
  return HAL_OK;
}
 8005f2e:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8005f30:	2001      	movs	r0, #1
 8005f32:	e7fc      	b.n	8005f2e <HAL_RNG_Init+0x2a>

08005f34 <HAL_RNG_GenerateRandomNumber>:
  * @param  random32bit pointer to generated random number variable if successful.
  * @retval HAL status
  */

HAL_StatusTypeDef HAL_RNG_GenerateRandomNumber(RNG_HandleTypeDef *hrng, uint32_t *random32bit)
{
 8005f34:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  uint32_t tickstart;
  HAL_StatusTypeDef status = HAL_OK;

  /* Process Locked */
  __HAL_LOCK(hrng);
 8005f36:	7903      	ldrb	r3, [r0, #4]
 8005f38:	2b01      	cmp	r3, #1
{
 8005f3a:	4604      	mov	r4, r0
 8005f3c:	460e      	mov	r6, r1
  __HAL_LOCK(hrng);
 8005f3e:	d02b      	beq.n	8005f98 <HAL_RNG_GenerateRandomNumber+0x64>

  /* Check RNG peripheral state */
  if (hrng->State == HAL_RNG_STATE_READY)
 8005f40:	7942      	ldrb	r2, [r0, #5]
  __HAL_LOCK(hrng);
 8005f42:	2301      	movs	r3, #1
  if (hrng->State == HAL_RNG_STATE_READY)
 8005f44:	429a      	cmp	r2, r3
  __HAL_LOCK(hrng);
 8005f46:	7103      	strb	r3, [r0, #4]
  if (hrng->State == HAL_RNG_STATE_READY)
 8005f48:	b2d5      	uxtb	r5, r2
 8005f4a:	d121      	bne.n	8005f90 <HAL_RNG_GenerateRandomNumber+0x5c>
  {
    /* Change RNG peripheral state */
    hrng->State = HAL_RNG_STATE_BUSY;
 8005f4c:	2302      	movs	r3, #2
 8005f4e:	7143      	strb	r3, [r0, #5]

    /* Get tick */
    tickstart = HAL_GetTick();
 8005f50:	f7fd fe52 	bl	8003bf8 <HAL_GetTick>
 8005f54:	4607      	mov	r7, r0

    /* Check if data register contains valid random data */
    while (__HAL_RNG_GET_FLAG(hrng, RNG_FLAG_DRDY) == RESET)
 8005f56:	6823      	ldr	r3, [r4, #0]
 8005f58:	685a      	ldr	r2, [r3, #4]
 8005f5a:	07d2      	lsls	r2, r2, #31
 8005f5c:	d507      	bpl.n	8005f6e <HAL_RNG_GenerateRandomNumber+0x3a>
        }
      }
    }

    /* Get a 32bit Random number */
    hrng->RandomNumber = hrng->Instance->DR;
 8005f5e:	689b      	ldr	r3, [r3, #8]
 8005f60:	60e3      	str	r3, [r4, #12]
    *random32bit = hrng->RandomNumber;
 8005f62:	6033      	str	r3, [r6, #0]

    hrng->State = HAL_RNG_STATE_READY;
 8005f64:	2301      	movs	r3, #1
 8005f66:	7163      	strb	r3, [r4, #5]
  HAL_StatusTypeDef status = HAL_OK;
 8005f68:	2500      	movs	r5, #0
    hrng->ErrorCode = HAL_RNG_ERROR_BUSY;
    status = HAL_ERROR;
  }

  /* Process Unlocked */
  __HAL_UNLOCK(hrng);
 8005f6a:	2300      	movs	r3, #0
 8005f6c:	e00d      	b.n	8005f8a <HAL_RNG_GenerateRandomNumber+0x56>
      if ((HAL_GetTick() - tickstart) > RNG_TIMEOUT_VALUE)
 8005f6e:	f7fd fe43 	bl	8003bf8 <HAL_GetTick>
 8005f72:	1bc0      	subs	r0, r0, r7
 8005f74:	2802      	cmp	r0, #2
 8005f76:	d9ee      	bls.n	8005f56 <HAL_RNG_GenerateRandomNumber+0x22>
        if (__HAL_RNG_GET_FLAG(hrng, RNG_FLAG_DRDY) == RESET)
 8005f78:	6823      	ldr	r3, [r4, #0]
 8005f7a:	685b      	ldr	r3, [r3, #4]
 8005f7c:	f013 0301 	ands.w	r3, r3, #1
 8005f80:	d1e9      	bne.n	8005f56 <HAL_RNG_GenerateRandomNumber+0x22>
          hrng->State = HAL_RNG_STATE_READY;
 8005f82:	2201      	movs	r2, #1
 8005f84:	7162      	strb	r2, [r4, #5]
          hrng->ErrorCode = HAL_RNG_ERROR_TIMEOUT;
 8005f86:	2202      	movs	r2, #2
 8005f88:	60a2      	str	r2, [r4, #8]
  __HAL_UNLOCK(hrng);
 8005f8a:	7123      	strb	r3, [r4, #4]

  return status;
}
 8005f8c:	4628      	mov	r0, r5
 8005f8e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    hrng->ErrorCode = HAL_RNG_ERROR_BUSY;
 8005f90:	2204      	movs	r2, #4
 8005f92:	6082      	str	r2, [r0, #8]
    status = HAL_ERROR;
 8005f94:	461d      	mov	r5, r3
 8005f96:	e7e8      	b.n	8005f6a <HAL_RNG_GenerateRandomNumber+0x36>
  __HAL_LOCK(hrng);
 8005f98:	2502      	movs	r5, #2
 8005f9a:	e7f7      	b.n	8005f8c <HAL_RNG_GenerateRandomNumber+0x58>

08005f9c <HAL_SDRAM_Init>:
  *                the configuration information for SDRAM module.
  * @param  Timing Pointer to SDRAM control timing structure
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_Init(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_TimingTypeDef *Timing)
{
 8005f9c:	b538      	push	{r3, r4, r5, lr}
 8005f9e:	460d      	mov	r5, r1
  /* Check the SDRAM handle parameter */
  if (hsdram == NULL)
 8005fa0:	4604      	mov	r4, r0
 8005fa2:	b1c8      	cbz	r0, 8005fd8 <HAL_SDRAM_Init+0x3c>
  {
    return HAL_ERROR;
  }

  if (hsdram->State == HAL_SDRAM_STATE_RESET)
 8005fa4:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c
 8005fa8:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 8005fac:	b91b      	cbnz	r3, 8005fb6 <HAL_SDRAM_Init+0x1a>
  {
    /* Allocate lock resource and initialize it */
    hsdram->Lock = HAL_UNLOCKED;
 8005fae:	f880 202d 	strb.w	r2, [r0, #45]	@ 0x2d

    /* Init the low level hardware */
    hsdram->MspInitCallback(hsdram);
#else
    /* Initialize the low level hardware (MSP) */
    HAL_SDRAM_MspInit(hsdram);
 8005fb2:	f7fc fa87 	bl	80024c4 <HAL_SDRAM_MspInit>
#endif /* USE_HAL_SDRAM_REGISTER_CALLBACKS */
  }

  /* Initialize the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 8005fb6:	2302      	movs	r3, #2
 8005fb8:	f884 302c 	strb.w	r3, [r4, #44]	@ 0x2c

  /* Initialize SDRAM control Interface */
  (void)FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
 8005fbc:	1d21      	adds	r1, r4, #4
 8005fbe:	6820      	ldr	r0, [r4, #0]
 8005fc0:	f000 fd0e 	bl	80069e0 <FMC_SDRAM_Init>

  /* Initialize SDRAM timing Interface */
  (void)FMC_SDRAM_Timing_Init(hsdram->Instance, Timing, hsdram->Init.SDBank);
 8005fc4:	6862      	ldr	r2, [r4, #4]
 8005fc6:	6820      	ldr	r0, [r4, #0]
 8005fc8:	4629      	mov	r1, r5
 8005fca:	f000 fd3f 	bl	8006a4c <FMC_SDRAM_Timing_Init>
  /* Update the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_READY;
 8005fce:	2301      	movs	r3, #1
 8005fd0:	f884 302c 	strb.w	r3, [r4, #44]	@ 0x2c

  return HAL_OK;
 8005fd4:	2000      	movs	r0, #0
}
 8005fd6:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 8005fd8:	2001      	movs	r0, #1
 8005fda:	e7fc      	b.n	8005fd6 <HAL_SDRAM_Init+0x3a>

08005fdc <HAL_SDRAM_SendCommand>:
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_SendCommand(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_CommandTypeDef *Command,
                                        uint32_t Timeout)
{
 8005fdc:	b570      	push	{r4, r5, r6, lr}
  HAL_SDRAM_StateTypeDef state = hsdram->State;
 8005fde:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c

  /* Check the SDRAM controller state */
  if (state == HAL_SDRAM_STATE_BUSY)
 8005fe2:	2b02      	cmp	r3, #2
{
 8005fe4:	4605      	mov	r5, r0
 8005fe6:	460e      	mov	r6, r1
  HAL_SDRAM_StateTypeDef state = hsdram->State;
 8005fe8:	b2d8      	uxtb	r0, r3
  if (state == HAL_SDRAM_STATE_BUSY)
 8005fea:	d012      	beq.n	8006012 <HAL_SDRAM_SendCommand+0x36>
  {
    return HAL_BUSY;
  }
  else if ((state == HAL_SDRAM_STATE_READY) || (state == HAL_SDRAM_STATE_PRECHARGED))
 8005fec:	f000 04fb 	and.w	r4, r0, #251	@ 0xfb
 8005ff0:	2c01      	cmp	r4, #1
 8005ff2:	d10f      	bne.n	8006014 <HAL_SDRAM_SendCommand+0x38>
  {
    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 8005ff4:	2302      	movs	r3, #2
 8005ff6:	f885 302c 	strb.w	r3, [r5, #44]	@ 0x2c

    /* Send SDRAM command */
    (void)FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
 8005ffa:	6828      	ldr	r0, [r5, #0]
 8005ffc:	f000 fd5c 	bl	8006ab8 <FMC_SDRAM_SendCommand>

    /* Update the SDRAM controller state state */
    if (Command->CommandMode == FMC_SDRAM_CMD_PALL)
 8006000:	6833      	ldr	r3, [r6, #0]
 8006002:	2b02      	cmp	r3, #2
    {
      hsdram->State = HAL_SDRAM_STATE_PRECHARGED;
 8006004:	bf06      	itte	eq
 8006006:	2305      	moveq	r3, #5
 8006008:	f885 302c 	strbeq.w	r3, [r5, #44]	@ 0x2c
    }
    else
    {
      hsdram->State = HAL_SDRAM_STATE_READY;
 800600c:	f885 402c 	strbne.w	r4, [r5, #44]	@ 0x2c
  else
  {
    return HAL_ERROR;
  }

  return HAL_OK;
 8006010:	2000      	movs	r0, #0
}
 8006012:	bd70      	pop	{r4, r5, r6, pc}
    return HAL_ERROR;
 8006014:	2001      	movs	r0, #1
 8006016:	e7fc      	b.n	8006012 <HAL_SDRAM_SendCommand+0x36>

08006018 <HAL_SDRAM_ProgramRefreshRate>:
  *                the configuration information for SDRAM module.
  * @param  RefreshRate The SDRAM refresh rate value
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_ProgramRefreshRate(SDRAM_HandleTypeDef *hsdram, uint32_t RefreshRate)
{
 8006018:	b538      	push	{r3, r4, r5, lr}
  /* Check the SDRAM controller state */
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
 800601a:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c
 800601e:	2b02      	cmp	r3, #2
{
 8006020:	4604      	mov	r4, r0
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
 8006022:	b2d8      	uxtb	r0, r3
 8006024:	d00d      	beq.n	8006042 <HAL_SDRAM_ProgramRefreshRate+0x2a>
  {
    return HAL_BUSY;
  }
  else if (hsdram->State == HAL_SDRAM_STATE_READY)
 8006026:	f894 302c 	ldrb.w	r3, [r4, #44]	@ 0x2c
 800602a:	2b01      	cmp	r3, #1
 800602c:	b2dd      	uxtb	r5, r3
 800602e:	d109      	bne.n	8006044 <HAL_SDRAM_ProgramRefreshRate+0x2c>
  {
    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 8006030:	2302      	movs	r3, #2

    /* Program the refresh rate */
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
 8006032:	6820      	ldr	r0, [r4, #0]
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 8006034:	f884 302c 	strb.w	r3, [r4, #44]	@ 0x2c
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
 8006038:	f000 fd62 	bl	8006b00 <FMC_SDRAM_ProgramRefreshRate>

    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_READY;
 800603c:	f884 502c 	strb.w	r5, [r4, #44]	@ 0x2c
  else
  {
    return HAL_ERROR;
  }

  return HAL_OK;
 8006040:	2000      	movs	r0, #0
}
 8006042:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 8006044:	2001      	movs	r0, #1
 8006046:	e7fc      	b.n	8006042 <HAL_SDRAM_ProgramRefreshRate+0x2a>

08006048 <SPI_WaitFlagStateUntilTimeout>:
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_WaitFlagStateUntilTimeout(SPI_HandleTypeDef *hspi, uint32_t Flag, FlagStatus State,
                                                       uint32_t Timeout, uint32_t Tickstart)
{
 8006048:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 800604c:	461f      	mov	r7, r3
 800604e:	4689      	mov	r9, r1
 8006050:	4690      	mov	r8, r2
 8006052:	4604      	mov	r4, r0
  __IO uint32_t count;
  uint32_t tmp_timeout;
  uint32_t tmp_tickstart;

  /* Adjust Timeout value  in case of end of transfer */
  tmp_timeout   = Timeout - (HAL_GetTick() - Tickstart);
 8006054:	f7fd fdd0 	bl	8003bf8 <HAL_GetTick>
 8006058:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
 800605a:	443d      	add	r5, r7
 800605c:	1a2d      	subs	r5, r5, r0
  tmp_tickstart = HAL_GetTick();
 800605e:	f7fd fdcb 	bl	8003bf8 <HAL_GetTick>

  /* Calculate Timeout based on a software loop to avoid blocking issue if Systick is disabled */
  count = tmp_timeout * ((SystemCoreClock * 32U) >> 20U);
 8006062:	4b26      	ldr	r3, [pc, #152]	@ (80060fc <SPI_WaitFlagStateUntilTimeout+0xb4>)
 8006064:	681e      	ldr	r6, [r3, #0]
 8006066:	f3c6 36cb 	ubfx	r6, r6, #15, #12
 800606a:	436e      	muls	r6, r5
  tmp_tickstart = HAL_GetTick();
 800606c:	4682      	mov	sl, r0
  count = tmp_timeout * ((SystemCoreClock * 32U) >> 20U);
 800606e:	9601      	str	r6, [sp, #4]

  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 8006070:	6822      	ldr	r2, [r4, #0]
 8006072:	6893      	ldr	r3, [r2, #8]
 8006074:	ea39 0303 	bics.w	r3, r9, r3
 8006078:	bf0c      	ite	eq
 800607a:	2301      	moveq	r3, #1
 800607c:	2300      	movne	r3, #0
 800607e:	4543      	cmp	r3, r8
 8006080:	d101      	bne.n	8006086 <SPI_WaitFlagStateUntilTimeout+0x3e>
      }
      count--;
    }
  }

  return HAL_OK;
 8006082:	2000      	movs	r0, #0
 8006084:	e02e      	b.n	80060e4 <SPI_WaitFlagStateUntilTimeout+0x9c>
    if (Timeout != HAL_MAX_DELAY)
 8006086:	1c7b      	adds	r3, r7, #1
 8006088:	d0f3      	beq.n	8006072 <SPI_WaitFlagStateUntilTimeout+0x2a>
      if (((HAL_GetTick() - tmp_tickstart) >= tmp_timeout) || (tmp_timeout == 0U))
 800608a:	f7fd fdb5 	bl	8003bf8 <HAL_GetTick>
 800608e:	eba0 000a 	sub.w	r0, r0, sl
 8006092:	42a8      	cmp	r0, r5
 8006094:	d329      	bcc.n	80060ea <SPI_WaitFlagStateUntilTimeout+0xa2>
        __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
 8006096:	6823      	ldr	r3, [r4, #0]
 8006098:	685a      	ldr	r2, [r3, #4]
 800609a:	f022 02e0 	bic.w	r2, r2, #224	@ 0xe0
 800609e:	605a      	str	r2, [r3, #4]
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 80060a0:	6862      	ldr	r2, [r4, #4]
 80060a2:	f5b2 7f82 	cmp.w	r2, #260	@ 0x104
 80060a6:	d10a      	bne.n	80060be <SPI_WaitFlagStateUntilTimeout+0x76>
 80060a8:	68a2      	ldr	r2, [r4, #8]
 80060aa:	f5b2 4f00 	cmp.w	r2, #32768	@ 0x8000
 80060ae:	d002      	beq.n	80060b6 <SPI_WaitFlagStateUntilTimeout+0x6e>
                                                     || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 80060b0:	f5b2 6f80 	cmp.w	r2, #1024	@ 0x400
 80060b4:	d103      	bne.n	80060be <SPI_WaitFlagStateUntilTimeout+0x76>
          __HAL_SPI_DISABLE(hspi);
 80060b6:	681a      	ldr	r2, [r3, #0]
 80060b8:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 80060bc:	601a      	str	r2, [r3, #0]
        if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 80060be:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
 80060c0:	f5b2 5f00 	cmp.w	r2, #8192	@ 0x2000
 80060c4:	d107      	bne.n	80060d6 <SPI_WaitFlagStateUntilTimeout+0x8e>
          SPI_RESET_CRC(hspi);
 80060c6:	681a      	ldr	r2, [r3, #0]
 80060c8:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
 80060cc:	601a      	str	r2, [r3, #0]
 80060ce:	681a      	ldr	r2, [r3, #0]
 80060d0:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
 80060d4:	601a      	str	r2, [r3, #0]
        hspi->State = HAL_SPI_STATE_READY;
 80060d6:	2301      	movs	r3, #1
 80060d8:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
        __HAL_UNLOCK(hspi);
 80060dc:	2300      	movs	r3, #0
 80060de:	f884 3050 	strb.w	r3, [r4, #80]	@ 0x50
        return HAL_TIMEOUT;
 80060e2:	2003      	movs	r0, #3
}
 80060e4:	b002      	add	sp, #8
 80060e6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
      if (count == 0U)
 80060ea:	9a01      	ldr	r2, [sp, #4]
      count--;
 80060ec:	9b01      	ldr	r3, [sp, #4]
      if (count == 0U)
 80060ee:	2a00      	cmp	r2, #0
      count--;
 80060f0:	f103 33ff 	add.w	r3, r3, #4294967295
 80060f4:	9301      	str	r3, [sp, #4]
 80060f6:	bf08      	it	eq
 80060f8:	4615      	moveq	r5, r2
 80060fa:	e7b9      	b.n	8006070 <SPI_WaitFlagStateUntilTimeout+0x28>
 80060fc:	200000c4 	.word	0x200000c4

08006100 <SPI_EndRxTxTransaction>:
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_EndRxTxTransaction(SPI_HandleTypeDef *hspi, uint32_t Timeout, uint32_t Tickstart)
{
 8006100:	b5f0      	push	{r4, r5, r6, r7, lr}
 8006102:	b085      	sub	sp, #20
  /* Wait until TXE flag */
  if(SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_TXE, SET, Timeout, Tickstart) != HAL_OK)
 8006104:	460b      	mov	r3, r1
 8006106:	9200      	str	r2, [sp, #0]
{
 8006108:	460e      	mov	r6, r1
 800610a:	4617      	mov	r7, r2
  if(SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_TXE, SET, Timeout, Tickstart) != HAL_OK)
 800610c:	2102      	movs	r1, #2
 800610e:	2201      	movs	r2, #1
{
 8006110:	4604      	mov	r4, r0
  if(SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_TXE, SET, Timeout, Tickstart) != HAL_OK)
 8006112:	f7ff ff99 	bl	8006048 <SPI_WaitFlagStateUntilTimeout>
 8006116:	4605      	mov	r5, r0
 8006118:	b128      	cbz	r0, 8006126 <SPI_EndRxTxTransaction+0x26>
  if (hspi->Init.Mode == SPI_MODE_MASTER)
  {
    /* Control the BSY flag */
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800611a:	6d63      	ldr	r3, [r4, #84]	@ 0x54
 800611c:	f043 0320 	orr.w	r3, r3, #32
 8006120:	6563      	str	r3, [r4, #84]	@ 0x54
    return HAL_TIMEOUT;
 8006122:	2503      	movs	r5, #3
 8006124:	e015      	b.n	8006152 <SPI_EndRxTxTransaction+0x52>
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 8006126:	4b12      	ldr	r3, [pc, #72]	@ (8006170 <SPI_EndRxTxTransaction+0x70>)
 8006128:	6818      	ldr	r0, [r3, #0]
 800612a:	4b12      	ldr	r3, [pc, #72]	@ (8006174 <SPI_EndRxTxTransaction+0x74>)
 800612c:	fbb0 f0f3 	udiv	r0, r0, r3
 8006130:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 8006134:	4358      	muls	r0, r3
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 8006136:	6863      	ldr	r3, [r4, #4]
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 8006138:	9003      	str	r0, [sp, #12]
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800613a:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 800613e:	d10b      	bne.n	8006158 <SPI_EndRxTxTransaction+0x58>
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 8006140:	9700      	str	r7, [sp, #0]
 8006142:	4633      	mov	r3, r6
 8006144:	462a      	mov	r2, r5
 8006146:	2180      	movs	r1, #128	@ 0x80
 8006148:	4620      	mov	r0, r4
 800614a:	f7ff ff7d 	bl	8006048 <SPI_WaitFlagStateUntilTimeout>
 800614e:	2800      	cmp	r0, #0
 8006150:	d1e3      	bne.n	800611a <SPI_EndRxTxTransaction+0x1a>
      count--;
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
  }

  return HAL_OK;
}
 8006152:	4628      	mov	r0, r5
 8006154:	b005      	add	sp, #20
 8006156:	bdf0      	pop	{r4, r5, r6, r7, pc}
      if (count == 0U)
 8006158:	9b03      	ldr	r3, [sp, #12]
 800615a:	2b00      	cmp	r3, #0
 800615c:	d0f9      	beq.n	8006152 <SPI_EndRxTxTransaction+0x52>
      count--;
 800615e:	9b03      	ldr	r3, [sp, #12]
 8006160:	3b01      	subs	r3, #1
 8006162:	9303      	str	r3, [sp, #12]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 8006164:	6823      	ldr	r3, [r4, #0]
 8006166:	689b      	ldr	r3, [r3, #8]
 8006168:	061b      	lsls	r3, r3, #24
 800616a:	d4f5      	bmi.n	8006158 <SPI_EndRxTxTransaction+0x58>
 800616c:	e7f1      	b.n	8006152 <SPI_EndRxTxTransaction+0x52>
 800616e:	bf00      	nop
 8006170:	200000c4 	.word	0x200000c4
 8006174:	016e3600 	.word	0x016e3600

08006178 <SPI_EndRxTransaction>:
{
 8006178:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800617a:	460b      	mov	r3, r1
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800617c:	6841      	ldr	r1, [r0, #4]
 800617e:	f5b1 7f82 	cmp.w	r1, #260	@ 0x104
{
 8006182:	4604      	mov	r4, r0
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8006184:	d008      	beq.n	8006198 <SPI_EndRxTransaction+0x20>
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 8006186:	9200      	str	r2, [sp, #0]
 8006188:	2101      	movs	r1, #1
 800618a:	2200      	movs	r2, #0
 800618c:	f7ff ff5c 	bl	8006048 <SPI_WaitFlagStateUntilTimeout>
 8006190:	b9d0      	cbnz	r0, 80061c8 <SPI_EndRxTransaction+0x50>
  return HAL_OK;
 8006192:	2000      	movs	r0, #0
}
 8006194:	b003      	add	sp, #12
 8006196:	bd30      	pop	{r4, r5, pc}
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8006198:	6881      	ldr	r1, [r0, #8]
 800619a:	f5b1 4f00 	cmp.w	r1, #32768	@ 0x8000
 800619e:	d002      	beq.n	80061a6 <SPI_EndRxTransaction+0x2e>
                                               || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 80061a0:	f5b1 6f80 	cmp.w	r1, #1024	@ 0x400
 80061a4:	d107      	bne.n	80061b6 <SPI_EndRxTransaction+0x3e>
    __HAL_SPI_DISABLE(hspi);
 80061a6:	6825      	ldr	r5, [r4, #0]
 80061a8:	6828      	ldr	r0, [r5, #0]
    if (hspi->Init.Direction != SPI_DIRECTION_2LINES_RXONLY)
 80061aa:	f5b1 6f80 	cmp.w	r1, #1024	@ 0x400
    __HAL_SPI_DISABLE(hspi);
 80061ae:	f020 0040 	bic.w	r0, r0, #64	@ 0x40
 80061b2:	6028      	str	r0, [r5, #0]
    if (hspi->Init.Direction != SPI_DIRECTION_2LINES_RXONLY)
 80061b4:	d004      	beq.n	80061c0 <SPI_EndRxTransaction+0x48>
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 80061b6:	9200      	str	r2, [sp, #0]
 80061b8:	2180      	movs	r1, #128	@ 0x80
 80061ba:	2200      	movs	r2, #0
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 80061bc:	4620      	mov	r0, r4
 80061be:	e7e5      	b.n	800618c <SPI_EndRxTransaction+0x14>
 80061c0:	9200      	str	r2, [sp, #0]
 80061c2:	2101      	movs	r1, #1
 80061c4:	2200      	movs	r2, #0
 80061c6:	e7f9      	b.n	80061bc <SPI_EndRxTransaction+0x44>
        SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 80061c8:	6d63      	ldr	r3, [r4, #84]	@ 0x54
 80061ca:	f043 0320 	orr.w	r3, r3, #32
 80061ce:	6563      	str	r3, [r4, #84]	@ 0x54
        return HAL_TIMEOUT;
 80061d0:	2003      	movs	r0, #3
 80061d2:	e7df      	b.n	8006194 <SPI_EndRxTransaction+0x1c>

080061d4 <HAL_SPI_Init>:
{
 80061d4:	b510      	push	{r4, lr}
  if (hspi == NULL)
 80061d6:	4604      	mov	r4, r0
 80061d8:	2800      	cmp	r0, #0
 80061da:	d055      	beq.n	8006288 <HAL_SPI_Init+0xb4>
  if (hspi->Init.TIMode == SPI_TIMODE_DISABLE)
 80061dc:	6a43      	ldr	r3, [r0, #36]	@ 0x24
 80061de:	2b00      	cmp	r3, #0
 80061e0:	d14e      	bne.n	8006280 <HAL_SPI_Init+0xac>
    if (hspi->Init.Mode == SPI_MODE_MASTER)
 80061e2:	6842      	ldr	r2, [r0, #4]
 80061e4:	f5b2 7f82 	cmp.w	r2, #260	@ 0x104
 80061e8:	d000      	beq.n	80061ec <HAL_SPI_Init+0x18>
      hspi->Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 80061ea:	61c3      	str	r3, [r0, #28]
  hspi->Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 80061ec:	2300      	movs	r3, #0
 80061ee:	62a3      	str	r3, [r4, #40]	@ 0x28
  if (hspi->State == HAL_SPI_STATE_RESET)
 80061f0:	f894 3051 	ldrb.w	r3, [r4, #81]	@ 0x51
 80061f4:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 80061f8:	b923      	cbnz	r3, 8006204 <HAL_SPI_Init+0x30>
    hspi->Lock = HAL_UNLOCKED;
 80061fa:	f884 2050 	strb.w	r2, [r4, #80]	@ 0x50
    HAL_SPI_MspInit(hspi);
 80061fe:	4620      	mov	r0, r4
 8006200:	f7fc f92a 	bl	8002458 <HAL_SPI_MspInit>
  __HAL_SPI_DISABLE(hspi);
 8006204:	6821      	ldr	r1, [r4, #0]
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 8006206:	68a0      	ldr	r0, [r4, #8]
 8006208:	69a2      	ldr	r2, [r4, #24]
  hspi->State = HAL_SPI_STATE_BUSY;
 800620a:	2302      	movs	r3, #2
 800620c:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
  __HAL_SPI_DISABLE(hspi);
 8006210:	680b      	ldr	r3, [r1, #0]
 8006212:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 8006216:	600b      	str	r3, [r1, #0]
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 8006218:	6863      	ldr	r3, [r4, #4]
 800621a:	f400 4004 	and.w	r0, r0, #33792	@ 0x8400
 800621e:	f403 7382 	and.w	r3, r3, #260	@ 0x104
 8006222:	4303      	orrs	r3, r0
 8006224:	68e0      	ldr	r0, [r4, #12]
 8006226:	f400 6000 	and.w	r0, r0, #2048	@ 0x800
 800622a:	4303      	orrs	r3, r0
 800622c:	6920      	ldr	r0, [r4, #16]
 800622e:	f000 0002 	and.w	r0, r0, #2
 8006232:	4303      	orrs	r3, r0
 8006234:	6960      	ldr	r0, [r4, #20]
 8006236:	f000 0001 	and.w	r0, r0, #1
 800623a:	4303      	orrs	r3, r0
 800623c:	f402 7000 	and.w	r0, r2, #512	@ 0x200
 8006240:	4303      	orrs	r3, r0
 8006242:	69e0      	ldr	r0, [r4, #28]
 8006244:	f000 0038 	and.w	r0, r0, #56	@ 0x38
 8006248:	4303      	orrs	r3, r0
 800624a:	6a20      	ldr	r0, [r4, #32]
 800624c:	f000 0080 	and.w	r0, r0, #128	@ 0x80
 8006250:	4303      	orrs	r3, r0
 8006252:	6aa0      	ldr	r0, [r4, #40]	@ 0x28
 8006254:	f400 5000 	and.w	r0, r0, #8192	@ 0x2000
 8006258:	4303      	orrs	r3, r0
 800625a:	600b      	str	r3, [r1, #0]
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800625c:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 800625e:	0c12      	lsrs	r2, r2, #16
 8006260:	f003 0310 	and.w	r3, r3, #16
 8006264:	f002 0204 	and.w	r2, r2, #4
 8006268:	431a      	orrs	r2, r3
 800626a:	604a      	str	r2, [r1, #4]
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 800626c:	69cb      	ldr	r3, [r1, #28]
 800626e:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 8006272:	61cb      	str	r3, [r1, #28]
  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 8006274:	2000      	movs	r0, #0
  hspi->State     = HAL_SPI_STATE_READY;
 8006276:	2301      	movs	r3, #1
  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 8006278:	6560      	str	r0, [r4, #84]	@ 0x54
  hspi->State     = HAL_SPI_STATE_READY;
 800627a:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
}
 800627e:	bd10      	pop	{r4, pc}
    hspi->Init.CLKPolarity = SPI_POLARITY_LOW;
 8006280:	2300      	movs	r3, #0
    hspi->Init.CLKPhase    = SPI_PHASE_1EDGE;
 8006282:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8006286:	e7b1      	b.n	80061ec <HAL_SPI_Init+0x18>
    return HAL_ERROR;
 8006288:	2001      	movs	r0, #1
 800628a:	e7f8      	b.n	800627e <HAL_SPI_Init+0xaa>

0800628c <HAL_SPI_Transmit>:
{
 800628c:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8006290:	4604      	mov	r4, r0
 8006292:	461f      	mov	r7, r3
 8006294:	460d      	mov	r5, r1
 8006296:	4690      	mov	r8, r2
  tickstart = HAL_GetTick();
 8006298:	f7fd fcae 	bl	8003bf8 <HAL_GetTick>
  if (hspi->State != HAL_SPI_STATE_READY)
 800629c:	f894 3051 	ldrb.w	r3, [r4, #81]	@ 0x51
 80062a0:	2b01      	cmp	r3, #1
  tickstart = HAL_GetTick();
 80062a2:	4681      	mov	r9, r0
  if (hspi->State != HAL_SPI_STATE_READY)
 80062a4:	b2d8      	uxtb	r0, r3
 80062a6:	f040 809f 	bne.w	80063e8 <HAL_SPI_Transmit+0x15c>
  if ((pData == NULL) || (Size == 0U))
 80062aa:	2d00      	cmp	r5, #0
 80062ac:	d074      	beq.n	8006398 <HAL_SPI_Transmit+0x10c>
 80062ae:	f1b8 0f00 	cmp.w	r8, #0
 80062b2:	d071      	beq.n	8006398 <HAL_SPI_Transmit+0x10c>
  __HAL_LOCK(hspi);
 80062b4:	f894 3050 	ldrb.w	r3, [r4, #80]	@ 0x50
 80062b8:	2b01      	cmp	r3, #1
 80062ba:	f000 8095 	beq.w	80063e8 <HAL_SPI_Transmit+0x15c>
  hspi->State       = HAL_SPI_STATE_BUSY_TX;
 80062be:	2303      	movs	r3, #3
 80062c0:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 80062c4:	2300      	movs	r3, #0
 80062c6:	6563      	str	r3, [r4, #84]	@ 0x54
  hspi->RxISR       = NULL;
 80062c8:	e9c4 3310 	strd	r3, r3, [r4, #64]	@ 0x40
  hspi->TxXferCount = Size;
 80062cc:	f8a4 8036 	strh.w	r8, [r4, #54]	@ 0x36
  hspi->pRxBuffPtr  = (uint8_t *)NULL;
 80062d0:	63a3      	str	r3, [r4, #56]	@ 0x38
  hspi->RxXferSize  = 0U;
 80062d2:	87a3      	strh	r3, [r4, #60]	@ 0x3c
  hspi->RxXferCount = 0U;
 80062d4:	87e3      	strh	r3, [r4, #62]	@ 0x3e
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 80062d6:	68a3      	ldr	r3, [r4, #8]
    __HAL_SPI_DISABLE(hspi);
 80062d8:	6826      	ldr	r6, [r4, #0]
  __HAL_LOCK(hspi);
 80062da:	f884 0050 	strb.w	r0, [r4, #80]	@ 0x50
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 80062de:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
  hspi->pTxBuffPtr  = (const uint8_t *)pData;
 80062e2:	6325      	str	r5, [r4, #48]	@ 0x30
  hspi->TxXferSize  = Size;
 80062e4:	f8a4 8034 	strh.w	r8, [r4, #52]	@ 0x34
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 80062e8:	d107      	bne.n	80062fa <HAL_SPI_Transmit+0x6e>
    __HAL_SPI_DISABLE(hspi);
 80062ea:	6833      	ldr	r3, [r6, #0]
 80062ec:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 80062f0:	6033      	str	r3, [r6, #0]
    SPI_1LINE_TX(hspi);
 80062f2:	6833      	ldr	r3, [r6, #0]
 80062f4:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 80062f8:	6033      	str	r3, [r6, #0]
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 80062fa:	6833      	ldr	r3, [r6, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 80062fc:	68e2      	ldr	r2, [r4, #12]
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 80062fe:	065b      	lsls	r3, r3, #25
    __HAL_SPI_ENABLE(hspi);
 8006300:	bf5e      	ittt	pl
 8006302:	6833      	ldrpl	r3, [r6, #0]
 8006304:	f043 0340 	orrpl.w	r3, r3, #64	@ 0x40
 8006308:	6033      	strpl	r3, [r6, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 800630a:	f5b2 6f00 	cmp.w	r2, #2048	@ 0x800
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800630e:	6863      	ldr	r3, [r4, #4]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 8006310:	d145      	bne.n	800639e <HAL_SPI_Transmit+0x112>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 8006312:	b113      	cbz	r3, 800631a <HAL_SPI_Transmit+0x8e>
 8006314:	f1b8 0f01 	cmp.w	r8, #1
 8006318:	d107      	bne.n	800632a <HAL_SPI_Transmit+0x9e>
      hspi->Instance->DR = *((const uint16_t *)hspi->pTxBuffPtr);
 800631a:	f835 3b02 	ldrh.w	r3, [r5], #2
 800631e:	60f3      	str	r3, [r6, #12]
      hspi->pTxBuffPtr += sizeof(uint16_t);
 8006320:	6325      	str	r5, [r4, #48]	@ 0x30
        hspi->TxXferCount--;
 8006322:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 8006324:	3b01      	subs	r3, #1
 8006326:	b29b      	uxth	r3, r3
 8006328:	86e3      	strh	r3, [r4, #54]	@ 0x36
    while (hspi->TxXferCount > 0U)
 800632a:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 800632c:	b29b      	uxth	r3, r3
 800632e:	b9d3      	cbnz	r3, 8006366 <HAL_SPI_Transmit+0xda>
  if (SPI_EndRxTxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 8006330:	464a      	mov	r2, r9
 8006332:	4639      	mov	r1, r7
 8006334:	4620      	mov	r0, r4
 8006336:	f7ff fee3 	bl	8006100 <SPI_EndRxTxTransaction>
 800633a:	2800      	cmp	r0, #0
 800633c:	d151      	bne.n	80063e2 <HAL_SPI_Transmit+0x156>
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 800633e:	68a3      	ldr	r3, [r4, #8]
 8006340:	b933      	cbnz	r3, 8006350 <HAL_SPI_Transmit+0xc4>
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 8006342:	9301      	str	r3, [sp, #4]
 8006344:	6823      	ldr	r3, [r4, #0]
 8006346:	68da      	ldr	r2, [r3, #12]
 8006348:	9201      	str	r2, [sp, #4]
 800634a:	689b      	ldr	r3, [r3, #8]
 800634c:	9301      	str	r3, [sp, #4]
 800634e:	9b01      	ldr	r3, [sp, #4]
  hspi->State = HAL_SPI_STATE_READY;
 8006350:	2301      	movs	r3, #1
 8006352:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 8006356:	6d60      	ldr	r0, [r4, #84]	@ 0x54
  __HAL_UNLOCK(hspi);
 8006358:	2300      	movs	r3, #0
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 800635a:	1ac0      	subs	r0, r0, r3
  __HAL_UNLOCK(hspi);
 800635c:	f884 3050 	strb.w	r3, [r4, #80]	@ 0x50
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 8006360:	bf18      	it	ne
 8006362:	2001      	movne	r0, #1
 8006364:	e018      	b.n	8006398 <HAL_SPI_Transmit+0x10c>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 8006366:	6822      	ldr	r2, [r4, #0]
 8006368:	6893      	ldr	r3, [r2, #8]
 800636a:	0798      	lsls	r0, r3, #30
 800636c:	d505      	bpl.n	800637a <HAL_SPI_Transmit+0xee>
        hspi->Instance->DR = *((const uint16_t *)hspi->pTxBuffPtr);
 800636e:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8006370:	f833 1b02 	ldrh.w	r1, [r3], #2
 8006374:	60d1      	str	r1, [r2, #12]
        hspi->pTxBuffPtr += sizeof(uint16_t);
 8006376:	6323      	str	r3, [r4, #48]	@ 0x30
 8006378:	e7d3      	b.n	8006322 <HAL_SPI_Transmit+0x96>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800637a:	f7fd fc3d 	bl	8003bf8 <HAL_GetTick>
 800637e:	eba0 0009 	sub.w	r0, r0, r9
 8006382:	42b8      	cmp	r0, r7
 8006384:	d3d1      	bcc.n	800632a <HAL_SPI_Transmit+0x9e>
 8006386:	1c79      	adds	r1, r7, #1
 8006388:	d0cf      	beq.n	800632a <HAL_SPI_Transmit+0x9e>
          hspi->State = HAL_SPI_STATE_READY;
 800638a:	2301      	movs	r3, #1
 800638c:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
          __HAL_UNLOCK(hspi);
 8006390:	2300      	movs	r3, #0
 8006392:	f884 3050 	strb.w	r3, [r4, #80]	@ 0x50
          return HAL_TIMEOUT;
 8006396:	2003      	movs	r0, #3
}
 8006398:	b003      	add	sp, #12
 800639a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800639e:	b113      	cbz	r3, 80063a6 <HAL_SPI_Transmit+0x11a>
 80063a0:	f1b8 0f01 	cmp.w	r8, #1
 80063a4:	d108      	bne.n	80063b8 <HAL_SPI_Transmit+0x12c>
      *((__IO uint8_t *)&hspi->Instance->DR) = *((const uint8_t *)hspi->pTxBuffPtr);
 80063a6:	782b      	ldrb	r3, [r5, #0]
 80063a8:	7333      	strb	r3, [r6, #12]
        hspi->pTxBuffPtr += sizeof(uint8_t);
 80063aa:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 80063ac:	3301      	adds	r3, #1
 80063ae:	6323      	str	r3, [r4, #48]	@ 0x30
        hspi->TxXferCount--;
 80063b0:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 80063b2:	3b01      	subs	r3, #1
 80063b4:	b29b      	uxth	r3, r3
 80063b6:	86e3      	strh	r3, [r4, #54]	@ 0x36
    while (hspi->TxXferCount > 0U)
 80063b8:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 80063ba:	b29b      	uxth	r3, r3
 80063bc:	2b00      	cmp	r3, #0
 80063be:	d0b7      	beq.n	8006330 <HAL_SPI_Transmit+0xa4>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 80063c0:	6823      	ldr	r3, [r4, #0]
 80063c2:	689a      	ldr	r2, [r3, #8]
 80063c4:	0792      	lsls	r2, r2, #30
 80063c6:	d503      	bpl.n	80063d0 <HAL_SPI_Transmit+0x144>
        *((__IO uint8_t *)&hspi->Instance->DR) = *((const uint8_t *)hspi->pTxBuffPtr);
 80063c8:	6b22      	ldr	r2, [r4, #48]	@ 0x30
 80063ca:	7812      	ldrb	r2, [r2, #0]
 80063cc:	731a      	strb	r2, [r3, #12]
 80063ce:	e7ec      	b.n	80063aa <HAL_SPI_Transmit+0x11e>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 80063d0:	f7fd fc12 	bl	8003bf8 <HAL_GetTick>
 80063d4:	eba0 0009 	sub.w	r0, r0, r9
 80063d8:	42b8      	cmp	r0, r7
 80063da:	d3ed      	bcc.n	80063b8 <HAL_SPI_Transmit+0x12c>
 80063dc:	1c7b      	adds	r3, r7, #1
 80063de:	d0eb      	beq.n	80063b8 <HAL_SPI_Transmit+0x12c>
 80063e0:	e7d3      	b.n	800638a <HAL_SPI_Transmit+0xfe>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 80063e2:	2320      	movs	r3, #32
 80063e4:	6563      	str	r3, [r4, #84]	@ 0x54
 80063e6:	e7aa      	b.n	800633e <HAL_SPI_Transmit+0xb2>
    return HAL_BUSY;
 80063e8:	2002      	movs	r0, #2
 80063ea:	e7d5      	b.n	8006398 <HAL_SPI_Transmit+0x10c>

080063ec <HAL_SPI_TransmitReceive>:
{
 80063ec:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 80063f0:	4604      	mov	r4, r0
 80063f2:	460d      	mov	r5, r1
 80063f4:	4691      	mov	r9, r2
 80063f6:	461e      	mov	r6, r3
 80063f8:	f8dd 8028 	ldr.w	r8, [sp, #40]	@ 0x28
  tickstart = HAL_GetTick();
 80063fc:	f7fd fbfc 	bl	8003bf8 <HAL_GetTick>
  tmp_state           = hspi->State;
 8006400:	f894 3051 	ldrb.w	r3, [r4, #81]	@ 0x51
  tmp_mode            = hspi->Init.Mode;
 8006404:	6862      	ldr	r2, [r4, #4]
  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 8006406:	2b01      	cmp	r3, #1
  tickstart = HAL_GetTick();
 8006408:	4607      	mov	r7, r0
  tmp_state           = hspi->State;
 800640a:	b2d9      	uxtb	r1, r3
  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 800640c:	d00a      	beq.n	8006424 <HAL_SPI_TransmitReceive+0x38>
 800640e:	f5b2 7f82 	cmp.w	r2, #260	@ 0x104
 8006412:	f040 80e5 	bne.w	80065e0 <HAL_SPI_TransmitReceive+0x1f4>
        ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_state == HAL_SPI_STATE_BUSY_RX))))
 8006416:	68a3      	ldr	r3, [r4, #8]
 8006418:	2b00      	cmp	r3, #0
 800641a:	f040 80e1 	bne.w	80065e0 <HAL_SPI_TransmitReceive+0x1f4>
 800641e:	2904      	cmp	r1, #4
 8006420:	f040 80de 	bne.w	80065e0 <HAL_SPI_TransmitReceive+0x1f4>
  if ((pTxData == NULL) || (pRxData == NULL) || (Size == 0U))
 8006424:	2d00      	cmp	r5, #0
 8006426:	d04b      	beq.n	80064c0 <HAL_SPI_TransmitReceive+0xd4>
 8006428:	f1b9 0f00 	cmp.w	r9, #0
 800642c:	d048      	beq.n	80064c0 <HAL_SPI_TransmitReceive+0xd4>
 800642e:	2e00      	cmp	r6, #0
 8006430:	d046      	beq.n	80064c0 <HAL_SPI_TransmitReceive+0xd4>
  __HAL_LOCK(hspi);
 8006432:	f894 3050 	ldrb.w	r3, [r4, #80]	@ 0x50
 8006436:	2b01      	cmp	r3, #1
 8006438:	f000 80d2 	beq.w	80065e0 <HAL_SPI_TransmitReceive+0x1f4>
 800643c:	2301      	movs	r3, #1
 800643e:	f884 3050 	strb.w	r3, [r4, #80]	@ 0x50
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 8006442:	f894 3051 	ldrb.w	r3, [r4, #81]	@ 0x51
  hspi->pRxBuffPtr  = (uint8_t *)pRxData;
 8006446:	f8c4 9038 	str.w	r9, [r4, #56]	@ 0x38
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 800644a:	2b04      	cmp	r3, #4
    hspi->State = HAL_SPI_STATE_BUSY_TX_RX;
 800644c:	bf1c      	itt	ne
 800644e:	2305      	movne	r3, #5
 8006450:	f884 3051 	strbne.w	r3, [r4, #81]	@ 0x51
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 8006454:	2300      	movs	r3, #0
 8006456:	6563      	str	r3, [r4, #84]	@ 0x54
  hspi->TxISR       = NULL;
 8006458:	e9c4 3310 	strd	r3, r3, [r4, #64]	@ 0x40
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800645c:	6823      	ldr	r3, [r4, #0]
  hspi->RxXferCount = Size;
 800645e:	87e6      	strh	r6, [r4, #62]	@ 0x3e
  hspi->TxXferCount = Size;
 8006460:	86e6      	strh	r6, [r4, #54]	@ 0x36
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8006462:	6819      	ldr	r1, [r3, #0]
  hspi->RxXferSize  = Size;
 8006464:	87a6      	strh	r6, [r4, #60]	@ 0x3c
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8006466:	0649      	lsls	r1, r1, #25
    __HAL_SPI_ENABLE(hspi);
 8006468:	bf58      	it	pl
 800646a:	6819      	ldrpl	r1, [r3, #0]
  hspi->pTxBuffPtr  = (const uint8_t *)pTxData;
 800646c:	6325      	str	r5, [r4, #48]	@ 0x30
    __HAL_SPI_ENABLE(hspi);
 800646e:	bf58      	it	pl
 8006470:	f041 0140 	orrpl.w	r1, r1, #64	@ 0x40
  hspi->TxXferSize  = Size;
 8006474:	86a6      	strh	r6, [r4, #52]	@ 0x34
    __HAL_SPI_ENABLE(hspi);
 8006476:	bf58      	it	pl
 8006478:	6019      	strpl	r1, [r3, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 800647a:	68e1      	ldr	r1, [r4, #12]
 800647c:	f5b1 6f00 	cmp.w	r1, #2048	@ 0x800
 8006480:	d155      	bne.n	800652e <HAL_SPI_TransmitReceive+0x142>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 8006482:	b10a      	cbz	r2, 8006488 <HAL_SPI_TransmitReceive+0x9c>
 8006484:	2e01      	cmp	r6, #1
 8006486:	d107      	bne.n	8006498 <HAL_SPI_TransmitReceive+0xac>
      hspi->Instance->DR = *((const uint16_t *)hspi->pTxBuffPtr);
 8006488:	f835 2b02 	ldrh.w	r2, [r5], #2
 800648c:	60da      	str	r2, [r3, #12]
      hspi->TxXferCount--;
 800648e:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
      hspi->pTxBuffPtr += sizeof(uint16_t);
 8006490:	6325      	str	r5, [r4, #48]	@ 0x30
      hspi->TxXferCount--;
 8006492:	3b01      	subs	r3, #1
 8006494:	b29b      	uxth	r3, r3
 8006496:	86e3      	strh	r3, [r4, #54]	@ 0x36
        txallowed = 1U;
 8006498:	2501      	movs	r5, #1
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 800649a:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 800649c:	b29b      	uxth	r3, r3
 800649e:	b98b      	cbnz	r3, 80064c4 <HAL_SPI_TransmitReceive+0xd8>
 80064a0:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 80064a2:	b29b      	uxth	r3, r3
 80064a4:	b973      	cbnz	r3, 80064c4 <HAL_SPI_TransmitReceive+0xd8>
  if (SPI_EndRxTxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 80064a6:	463a      	mov	r2, r7
 80064a8:	4641      	mov	r1, r8
 80064aa:	4620      	mov	r0, r4
 80064ac:	f7ff fe28 	bl	8006100 <SPI_EndRxTxTransaction>
 80064b0:	2800      	cmp	r0, #0
 80064b2:	f000 8081 	beq.w	80065b8 <HAL_SPI_TransmitReceive+0x1cc>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 80064b6:	2320      	movs	r3, #32
 80064b8:	6563      	str	r3, [r4, #84]	@ 0x54
    __HAL_UNLOCK(hspi);
 80064ba:	2300      	movs	r3, #0
 80064bc:	f884 3050 	strb.w	r3, [r4, #80]	@ 0x50
    return HAL_ERROR;
 80064c0:	2001      	movs	r0, #1
 80064c2:	e031      	b.n	8006528 <HAL_SPI_TransmitReceive+0x13c>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 80064c4:	6821      	ldr	r1, [r4, #0]
 80064c6:	688b      	ldr	r3, [r1, #8]
 80064c8:	079a      	lsls	r2, r3, #30
 80064ca:	d50d      	bpl.n	80064e8 <HAL_SPI_TransmitReceive+0xfc>
 80064cc:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 80064ce:	b29b      	uxth	r3, r3
 80064d0:	b153      	cbz	r3, 80064e8 <HAL_SPI_TransmitReceive+0xfc>
 80064d2:	b145      	cbz	r5, 80064e6 <HAL_SPI_TransmitReceive+0xfa>
        hspi->Instance->DR = *((const uint16_t *)hspi->pTxBuffPtr);
 80064d4:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 80064d6:	f833 2b02 	ldrh.w	r2, [r3], #2
 80064da:	60ca      	str	r2, [r1, #12]
        hspi->pTxBuffPtr += sizeof(uint16_t);
 80064dc:	6323      	str	r3, [r4, #48]	@ 0x30
        hspi->TxXferCount--;
 80064de:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 80064e0:	3b01      	subs	r3, #1
 80064e2:	b29b      	uxth	r3, r3
 80064e4:	86e3      	strh	r3, [r4, #54]	@ 0x36
{
 80064e6:	2500      	movs	r5, #0
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 80064e8:	688a      	ldr	r2, [r1, #8]
 80064ea:	f012 0201 	ands.w	r2, r2, #1
 80064ee:	d00c      	beq.n	800650a <HAL_SPI_TransmitReceive+0x11e>
 80064f0:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 80064f2:	b29b      	uxth	r3, r3
 80064f4:	b14b      	cbz	r3, 800650a <HAL_SPI_TransmitReceive+0x11e>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 80064f6:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 80064f8:	68c9      	ldr	r1, [r1, #12]
 80064fa:	f823 1b02 	strh.w	r1, [r3], #2
        hspi->pRxBuffPtr += sizeof(uint16_t);
 80064fe:	63a3      	str	r3, [r4, #56]	@ 0x38
        hspi->RxXferCount--;
 8006500:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 8006502:	3b01      	subs	r3, #1
 8006504:	b29b      	uxth	r3, r3
 8006506:	87e3      	strh	r3, [r4, #62]	@ 0x3e
        txallowed = 1U;
 8006508:	4615      	mov	r5, r2
      if (((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY))
 800650a:	f7fd fb75 	bl	8003bf8 <HAL_GetTick>
 800650e:	1bc0      	subs	r0, r0, r7
 8006510:	4540      	cmp	r0, r8
 8006512:	d3c2      	bcc.n	800649a <HAL_SPI_TransmitReceive+0xae>
 8006514:	f1b8 3fff 	cmp.w	r8, #4294967295
 8006518:	d0bf      	beq.n	800649a <HAL_SPI_TransmitReceive+0xae>
        hspi->State = HAL_SPI_STATE_READY;
 800651a:	2301      	movs	r3, #1
 800651c:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
        __HAL_UNLOCK(hspi);
 8006520:	2300      	movs	r3, #0
 8006522:	f884 3050 	strb.w	r3, [r4, #80]	@ 0x50
        return HAL_TIMEOUT;
 8006526:	2003      	movs	r0, #3
}
 8006528:	b003      	add	sp, #12
 800652a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800652e:	b10a      	cbz	r2, 8006534 <HAL_SPI_TransmitReceive+0x148>
 8006530:	2e01      	cmp	r6, #1
 8006532:	d108      	bne.n	8006546 <HAL_SPI_TransmitReceive+0x15a>
      *((__IO uint8_t *)&hspi->Instance->DR) = *((const uint8_t *)hspi->pTxBuffPtr);
 8006534:	782a      	ldrb	r2, [r5, #0]
 8006536:	731a      	strb	r2, [r3, #12]
      hspi->pTxBuffPtr += sizeof(uint8_t);
 8006538:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 800653a:	3301      	adds	r3, #1
 800653c:	6323      	str	r3, [r4, #48]	@ 0x30
      hspi->TxXferCount--;
 800653e:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 8006540:	3b01      	subs	r3, #1
 8006542:	b29b      	uxth	r3, r3
 8006544:	86e3      	strh	r3, [r4, #54]	@ 0x36
        txallowed = 1U;
 8006546:	2501      	movs	r5, #1
 8006548:	e02d      	b.n	80065a6 <HAL_SPI_TransmitReceive+0x1ba>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 800654a:	6822      	ldr	r2, [r4, #0]
 800654c:	6893      	ldr	r3, [r2, #8]
 800654e:	079b      	lsls	r3, r3, #30
 8006550:	d50e      	bpl.n	8006570 <HAL_SPI_TransmitReceive+0x184>
 8006552:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 8006554:	b29b      	uxth	r3, r3
 8006556:	b15b      	cbz	r3, 8006570 <HAL_SPI_TransmitReceive+0x184>
 8006558:	b14d      	cbz	r5, 800656e <HAL_SPI_TransmitReceive+0x182>
        *(__IO uint8_t *)&hspi->Instance->DR = *((const uint8_t *)hspi->pTxBuffPtr);
 800655a:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 800655c:	781b      	ldrb	r3, [r3, #0]
 800655e:	7313      	strb	r3, [r2, #12]
        hspi->pTxBuffPtr++;
 8006560:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8006562:	3301      	adds	r3, #1
 8006564:	6323      	str	r3, [r4, #48]	@ 0x30
        hspi->TxXferCount--;
 8006566:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 8006568:	3b01      	subs	r3, #1
 800656a:	b29b      	uxth	r3, r3
 800656c:	86e3      	strh	r3, [r4, #54]	@ 0x36
        txallowed = 1U;
 800656e:	2500      	movs	r5, #0
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 8006570:	6822      	ldr	r2, [r4, #0]
 8006572:	6891      	ldr	r1, [r2, #8]
 8006574:	f011 0101 	ands.w	r1, r1, #1
 8006578:	d00d      	beq.n	8006596 <HAL_SPI_TransmitReceive+0x1aa>
 800657a:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 800657c:	b29b      	uxth	r3, r3
 800657e:	b153      	cbz	r3, 8006596 <HAL_SPI_TransmitReceive+0x1aa>
        (*(uint8_t *)hspi->pRxBuffPtr) = hspi->Instance->DR;
 8006580:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 8006582:	68d2      	ldr	r2, [r2, #12]
 8006584:	701a      	strb	r2, [r3, #0]
        hspi->pRxBuffPtr++;
 8006586:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 8006588:	3301      	adds	r3, #1
 800658a:	63a3      	str	r3, [r4, #56]	@ 0x38
        hspi->RxXferCount--;
 800658c:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 800658e:	3b01      	subs	r3, #1
 8006590:	b29b      	uxth	r3, r3
 8006592:	87e3      	strh	r3, [r4, #62]	@ 0x3e
        txallowed = 1U;
 8006594:	460d      	mov	r5, r1
      if ((((HAL_GetTick() - tickstart) >=  Timeout) && ((Timeout != HAL_MAX_DELAY))) || (Timeout == 0U))
 8006596:	f7fd fb2f 	bl	8003bf8 <HAL_GetTick>
 800659a:	1bc0      	subs	r0, r0, r7
 800659c:	4540      	cmp	r0, r8
 800659e:	d302      	bcc.n	80065a6 <HAL_SPI_TransmitReceive+0x1ba>
 80065a0:	f1b8 3fff 	cmp.w	r8, #4294967295
 80065a4:	d1b9      	bne.n	800651a <HAL_SPI_TransmitReceive+0x12e>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 80065a6:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 80065a8:	b29b      	uxth	r3, r3
 80065aa:	2b00      	cmp	r3, #0
 80065ac:	d1cd      	bne.n	800654a <HAL_SPI_TransmitReceive+0x15e>
 80065ae:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 80065b0:	b29b      	uxth	r3, r3
 80065b2:	2b00      	cmp	r3, #0
 80065b4:	d1c9      	bne.n	800654a <HAL_SPI_TransmitReceive+0x15e>
 80065b6:	e776      	b.n	80064a6 <HAL_SPI_TransmitReceive+0xba>
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 80065b8:	68a3      	ldr	r3, [r4, #8]
 80065ba:	b933      	cbnz	r3, 80065ca <HAL_SPI_TransmitReceive+0x1de>
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 80065bc:	9301      	str	r3, [sp, #4]
 80065be:	6823      	ldr	r3, [r4, #0]
 80065c0:	68da      	ldr	r2, [r3, #12]
 80065c2:	9201      	str	r2, [sp, #4]
 80065c4:	689b      	ldr	r3, [r3, #8]
 80065c6:	9301      	str	r3, [sp, #4]
 80065c8:	9b01      	ldr	r3, [sp, #4]
  hspi->State = HAL_SPI_STATE_READY;
 80065ca:	2301      	movs	r3, #1
 80065cc:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 80065d0:	6d60      	ldr	r0, [r4, #84]	@ 0x54
  __HAL_UNLOCK(hspi);
 80065d2:	2300      	movs	r3, #0
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 80065d4:	1ac0      	subs	r0, r0, r3
  __HAL_UNLOCK(hspi);
 80065d6:	f884 3050 	strb.w	r3, [r4, #80]	@ 0x50
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 80065da:	bf18      	it	ne
 80065dc:	2001      	movne	r0, #1
 80065de:	e7a3      	b.n	8006528 <HAL_SPI_TransmitReceive+0x13c>
    return HAL_BUSY;
 80065e0:	2002      	movs	r0, #2
 80065e2:	e7a1      	b.n	8006528 <HAL_SPI_TransmitReceive+0x13c>

080065e4 <HAL_SPI_Receive>:
{
 80065e4:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 80065e8:	461e      	mov	r6, r3
  if (hspi->State != HAL_SPI_STATE_READY)
 80065ea:	f890 3051 	ldrb.w	r3, [r0, #81]	@ 0x51
 80065ee:	2b01      	cmp	r3, #1
{
 80065f0:	4604      	mov	r4, r0
 80065f2:	4689      	mov	r9, r1
 80065f4:	4617      	mov	r7, r2
  if (hspi->State != HAL_SPI_STATE_READY)
 80065f6:	b2dd      	uxtb	r5, r3
 80065f8:	d004      	beq.n	8006604 <HAL_SPI_Receive+0x20>
    return HAL_BUSY;
 80065fa:	2502      	movs	r5, #2
}
 80065fc:	4628      	mov	r0, r5
 80065fe:	b003      	add	sp, #12
 8006600:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 8006604:	6843      	ldr	r3, [r0, #4]
 8006606:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 800660a:	d10b      	bne.n	8006624 <HAL_SPI_Receive+0x40>
 800660c:	6883      	ldr	r3, [r0, #8]
 800660e:	b94b      	cbnz	r3, 8006624 <HAL_SPI_Receive+0x40>
    hspi->State = HAL_SPI_STATE_BUSY_RX;
 8006610:	2304      	movs	r3, #4
 8006612:	f880 3051 	strb.w	r3, [r0, #81]	@ 0x51
    return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
 8006616:	4613      	mov	r3, r2
 8006618:	9600      	str	r6, [sp, #0]
 800661a:	460a      	mov	r2, r1
 800661c:	f7ff fee6 	bl	80063ec <HAL_SPI_TransmitReceive>
 8006620:	4605      	mov	r5, r0
 8006622:	e7eb      	b.n	80065fc <HAL_SPI_Receive+0x18>
  tickstart = HAL_GetTick();
 8006624:	f7fd fae8 	bl	8003bf8 <HAL_GetTick>
 8006628:	4680      	mov	r8, r0
  if ((pData == NULL) || (Size == 0U))
 800662a:	f1b9 0f00 	cmp.w	r9, #0
 800662e:	d0e5      	beq.n	80065fc <HAL_SPI_Receive+0x18>
 8006630:	2f00      	cmp	r7, #0
 8006632:	d0e3      	beq.n	80065fc <HAL_SPI_Receive+0x18>
  __HAL_LOCK(hspi);
 8006634:	f894 3050 	ldrb.w	r3, [r4, #80]	@ 0x50
 8006638:	2b01      	cmp	r3, #1
 800663a:	d0de      	beq.n	80065fa <HAL_SPI_Receive+0x16>
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800663c:	68a2      	ldr	r2, [r4, #8]
  hspi->pRxBuffPtr  = (uint8_t *)pData;
 800663e:	f8c4 9038 	str.w	r9, [r4, #56]	@ 0x38
  __HAL_LOCK(hspi);
 8006642:	2301      	movs	r3, #1
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 8006644:	2500      	movs	r5, #0
  __HAL_LOCK(hspi);
 8006646:	f884 3050 	strb.w	r3, [r4, #80]	@ 0x50
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800664a:	f5b2 4f00 	cmp.w	r2, #32768	@ 0x8000
  hspi->State       = HAL_SPI_STATE_BUSY_RX;
 800664e:	f04f 0304 	mov.w	r3, #4
 8006652:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
  hspi->TxISR       = NULL;
 8006656:	e9c4 5510 	strd	r5, r5, [r4, #64]	@ 0x40
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800665a:	6565      	str	r5, [r4, #84]	@ 0x54
    __HAL_SPI_DISABLE(hspi);
 800665c:	6823      	ldr	r3, [r4, #0]
  hspi->RxXferCount = Size;
 800665e:	87e7      	strh	r7, [r4, #62]	@ 0x3e
  hspi->RxXferSize  = Size;
 8006660:	87a7      	strh	r7, [r4, #60]	@ 0x3c
  hspi->pTxBuffPtr  = (uint8_t *)NULL;
 8006662:	6325      	str	r5, [r4, #48]	@ 0x30
  hspi->TxXferSize  = 0U;
 8006664:	86a5      	strh	r5, [r4, #52]	@ 0x34
  hspi->TxXferCount = 0U;
 8006666:	86e5      	strh	r5, [r4, #54]	@ 0x36
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8006668:	d107      	bne.n	800667a <HAL_SPI_Receive+0x96>
    __HAL_SPI_DISABLE(hspi);
 800666a:	681a      	ldr	r2, [r3, #0]
 800666c:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 8006670:	601a      	str	r2, [r3, #0]
    SPI_1LINE_RX(hspi);
 8006672:	681a      	ldr	r2, [r3, #0]
 8006674:	f422 4280 	bic.w	r2, r2, #16384	@ 0x4000
 8006678:	601a      	str	r2, [r3, #0]
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800667a:	681a      	ldr	r2, [r3, #0]
 800667c:	0655      	lsls	r5, r2, #25
    __HAL_SPI_ENABLE(hspi);
 800667e:	bf5e      	ittt	pl
 8006680:	681a      	ldrpl	r2, [r3, #0]
 8006682:	f042 0240 	orrpl.w	r2, r2, #64	@ 0x40
 8006686:	601a      	strpl	r2, [r3, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_8BIT)
 8006688:	68e3      	ldr	r3, [r4, #12]
 800668a:	b1f3      	cbz	r3, 80066ca <HAL_SPI_Receive+0xe6>
    while (hspi->RxXferCount > 0U)
 800668c:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 800668e:	b29b      	uxth	r3, r3
 8006690:	b1fb      	cbz	r3, 80066d2 <HAL_SPI_Receive+0xee>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 8006692:	6823      	ldr	r3, [r4, #0]
 8006694:	689a      	ldr	r2, [r3, #8]
 8006696:	07d2      	lsls	r2, r2, #31
 8006698:	d53c      	bpl.n	8006714 <HAL_SPI_Receive+0x130>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 800669a:	68da      	ldr	r2, [r3, #12]
 800669c:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 800669e:	f823 2b02 	strh.w	r2, [r3], #2
        hspi->pRxBuffPtr += sizeof(uint16_t);
 80066a2:	63a3      	str	r3, [r4, #56]	@ 0x38
        hspi->RxXferCount--;
 80066a4:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 80066a6:	3b01      	subs	r3, #1
 80066a8:	b29b      	uxth	r3, r3
 80066aa:	87e3      	strh	r3, [r4, #62]	@ 0x3e
 80066ac:	e7ee      	b.n	800668c <HAL_SPI_Receive+0xa8>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 80066ae:	6823      	ldr	r3, [r4, #0]
 80066b0:	689a      	ldr	r2, [r3, #8]
 80066b2:	07d0      	lsls	r0, r2, #31
 80066b4:	d51e      	bpl.n	80066f4 <HAL_SPI_Receive+0x110>
        (* (uint8_t *)hspi->pRxBuffPtr) = *(__IO uint8_t *)&hspi->Instance->DR;
 80066b6:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
 80066b8:	7b1b      	ldrb	r3, [r3, #12]
 80066ba:	7013      	strb	r3, [r2, #0]
        hspi->pRxBuffPtr += sizeof(uint8_t);
 80066bc:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 80066be:	3301      	adds	r3, #1
 80066c0:	63a3      	str	r3, [r4, #56]	@ 0x38
        hspi->RxXferCount--;
 80066c2:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 80066c4:	3b01      	subs	r3, #1
 80066c6:	b29b      	uxth	r3, r3
 80066c8:	87e3      	strh	r3, [r4, #62]	@ 0x3e
    while (hspi->RxXferCount > 0U)
 80066ca:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 80066cc:	b29b      	uxth	r3, r3
 80066ce:	2b00      	cmp	r3, #0
 80066d0:	d1ed      	bne.n	80066ae <HAL_SPI_Receive+0xca>
  if (SPI_EndRxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 80066d2:	4642      	mov	r2, r8
 80066d4:	4631      	mov	r1, r6
 80066d6:	4620      	mov	r0, r4
 80066d8:	f7ff fd4e 	bl	8006178 <SPI_EndRxTransaction>
 80066dc:	bb18      	cbnz	r0, 8006726 <HAL_SPI_Receive+0x142>
  hspi->State = HAL_SPI_STATE_READY;
 80066de:	2301      	movs	r3, #1
 80066e0:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 80066e4:	6d65      	ldr	r5, [r4, #84]	@ 0x54
  __HAL_UNLOCK(hspi);
 80066e6:	2300      	movs	r3, #0
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 80066e8:	1aed      	subs	r5, r5, r3
  __HAL_UNLOCK(hspi);
 80066ea:	f884 3050 	strb.w	r3, [r4, #80]	@ 0x50
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 80066ee:	bf18      	it	ne
 80066f0:	2501      	movne	r5, #1
 80066f2:	e783      	b.n	80065fc <HAL_SPI_Receive+0x18>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 80066f4:	f7fd fa80 	bl	8003bf8 <HAL_GetTick>
 80066f8:	eba0 0008 	sub.w	r0, r0, r8
 80066fc:	42b0      	cmp	r0, r6
 80066fe:	d3e4      	bcc.n	80066ca <HAL_SPI_Receive+0xe6>
 8006700:	1c71      	adds	r1, r6, #1
 8006702:	d0e2      	beq.n	80066ca <HAL_SPI_Receive+0xe6>
          hspi->State = HAL_SPI_STATE_READY;
 8006704:	2301      	movs	r3, #1
 8006706:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
          __HAL_UNLOCK(hspi);
 800670a:	2300      	movs	r3, #0
 800670c:	f884 3050 	strb.w	r3, [r4, #80]	@ 0x50
          return HAL_TIMEOUT;
 8006710:	2503      	movs	r5, #3
 8006712:	e773      	b.n	80065fc <HAL_SPI_Receive+0x18>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 8006714:	f7fd fa70 	bl	8003bf8 <HAL_GetTick>
 8006718:	eba0 0008 	sub.w	r0, r0, r8
 800671c:	42b0      	cmp	r0, r6
 800671e:	d3b5      	bcc.n	800668c <HAL_SPI_Receive+0xa8>
 8006720:	1c73      	adds	r3, r6, #1
 8006722:	d0b3      	beq.n	800668c <HAL_SPI_Receive+0xa8>
 8006724:	e7ee      	b.n	8006704 <HAL_SPI_Receive+0x120>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 8006726:	2320      	movs	r3, #32
 8006728:	6563      	str	r3, [r4, #84]	@ 0x54
 800672a:	e7d8      	b.n	80066de <HAL_SPI_Receive+0xfa>

0800672c <HAL_TIM_Base_MspInit>:
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_Base_MspInit could be implemented in the user file
   */
}
 800672c:	4770      	bx	lr
	...

08006730 <HAL_TIM_Base_Start_IT>:

  /* Check the parameters */
  assert_param(IS_TIM_INSTANCE(htim->Instance));

  /* Check the TIM state */
  if (htim->State != HAL_TIM_STATE_READY)
 8006730:	f890 303d 	ldrb.w	r3, [r0, #61]	@ 0x3d
 8006734:	2b01      	cmp	r3, #1
 8006736:	d130      	bne.n	800679a <HAL_TIM_Base_Start_IT+0x6a>
  {
    return HAL_ERROR;
  }

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_BUSY;
 8006738:	2302      	movs	r3, #2
 800673a:	f880 303d 	strb.w	r3, [r0, #61]	@ 0x3d

  /* Enable the TIM Update interrupt */
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 800673e:	6803      	ldr	r3, [r0, #0]
 8006740:	68da      	ldr	r2, [r3, #12]
 8006742:	f042 0201 	orr.w	r2, r2, #1
 8006746:	60da      	str	r2, [r3, #12]

  /* Enable the Peripheral, except in trigger mode where enable is automatically done with trigger */
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 8006748:	4a15      	ldr	r2, [pc, #84]	@ (80067a0 <HAL_TIM_Base_Start_IT+0x70>)
 800674a:	4293      	cmp	r3, r2
 800674c:	d01a      	beq.n	8006784 <HAL_TIM_Base_Start_IT+0x54>
 800674e:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8006752:	d017      	beq.n	8006784 <HAL_TIM_Base_Start_IT+0x54>
 8006754:	f5a2 427c 	sub.w	r2, r2, #64512	@ 0xfc00
 8006758:	4293      	cmp	r3, r2
 800675a:	d013      	beq.n	8006784 <HAL_TIM_Base_Start_IT+0x54>
 800675c:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 8006760:	4293      	cmp	r3, r2
 8006762:	d00f      	beq.n	8006784 <HAL_TIM_Base_Start_IT+0x54>
 8006764:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 8006768:	4293      	cmp	r3, r2
 800676a:	d00b      	beq.n	8006784 <HAL_TIM_Base_Start_IT+0x54>
 800676c:	f502 4278 	add.w	r2, r2, #63488	@ 0xf800
 8006770:	4293      	cmp	r3, r2
 8006772:	d007      	beq.n	8006784 <HAL_TIM_Base_Start_IT+0x54>
 8006774:	f502 5270 	add.w	r2, r2, #15360	@ 0x3c00
 8006778:	4293      	cmp	r3, r2
 800677a:	d003      	beq.n	8006784 <HAL_TIM_Base_Start_IT+0x54>
 800677c:	f5a2 3294 	sub.w	r2, r2, #75776	@ 0x12800
 8006780:	4293      	cmp	r3, r2
 8006782:	d104      	bne.n	800678e <HAL_TIM_Base_Start_IT+0x5e>
  {
    tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 8006784:	689a      	ldr	r2, [r3, #8]
 8006786:	f002 0207 	and.w	r2, r2, #7
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 800678a:	2a06      	cmp	r2, #6
 800678c:	d003      	beq.n	8006796 <HAL_TIM_Base_Start_IT+0x66>
    {
      __HAL_TIM_ENABLE(htim);
 800678e:	681a      	ldr	r2, [r3, #0]
 8006790:	f042 0201 	orr.w	r2, r2, #1
 8006794:	601a      	str	r2, [r3, #0]
  {
    __HAL_TIM_ENABLE(htim);
  }

  /* Return function status */
  return HAL_OK;
 8006796:	2000      	movs	r0, #0
 8006798:	4770      	bx	lr
    return HAL_ERROR;
 800679a:	2001      	movs	r0, #1
}
 800679c:	4770      	bx	lr
 800679e:	bf00      	nop
 80067a0:	40010000 	.word	0x40010000

080067a4 <HAL_TIM_OC_DelayElapsedCallback>:
/**
  * @brief  Output Compare callback in non-blocking mode
  * @param  htim TIM OC handle
  * @retval None
  */
__weak void HAL_TIM_OC_DelayElapsedCallback(TIM_HandleTypeDef *htim)
 80067a4:	4770      	bx	lr

080067a6 <HAL_TIM_IC_CaptureCallback>:
/**
  * @brief  Input Capture callback in non-blocking mode
  * @param  htim TIM IC handle
  * @retval None
  */
__weak void HAL_TIM_IC_CaptureCallback(TIM_HandleTypeDef *htim)
 80067a6:	4770      	bx	lr

080067a8 <HAL_TIM_PWM_PulseFinishedCallback>:
/**
  * @brief  PWM Pulse finished callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIM_PWM_PulseFinishedCallback(TIM_HandleTypeDef *htim)
 80067a8:	4770      	bx	lr

080067aa <HAL_TIM_TriggerCallback>:
/**
  * @brief  Hall Trigger detection callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIM_TriggerCallback(TIM_HandleTypeDef *htim)
 80067aa:	4770      	bx	lr

080067ac <HAL_TIM_IRQHandler>:
  uint32_t itsource = htim->Instance->DIER;
 80067ac:	6803      	ldr	r3, [r0, #0]
{
 80067ae:	b570      	push	{r4, r5, r6, lr}
  uint32_t itsource = htim->Instance->DIER;
 80067b0:	68dd      	ldr	r5, [r3, #12]
  uint32_t itflag   = htim->Instance->SR;
 80067b2:	691e      	ldr	r6, [r3, #16]
  if ((itflag & (TIM_FLAG_CC1)) == (TIM_FLAG_CC1))
 80067b4:	07b1      	lsls	r1, r6, #30
{
 80067b6:	4604      	mov	r4, r0
  if ((itflag & (TIM_FLAG_CC1)) == (TIM_FLAG_CC1))
 80067b8:	d50d      	bpl.n	80067d6 <HAL_TIM_IRQHandler+0x2a>
    if ((itsource & (TIM_IT_CC1)) == (TIM_IT_CC1))
 80067ba:	07aa      	lsls	r2, r5, #30
 80067bc:	d50b      	bpl.n	80067d6 <HAL_TIM_IRQHandler+0x2a>
        __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC1);
 80067be:	f06f 0202 	mvn.w	r2, #2
 80067c2:	611a      	str	r2, [r3, #16]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 80067c4:	2201      	movs	r2, #1
 80067c6:	7702      	strb	r2, [r0, #28]
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
 80067c8:	699b      	ldr	r3, [r3, #24]
 80067ca:	079b      	lsls	r3, r3, #30
 80067cc:	d069      	beq.n	80068a2 <HAL_TIM_IRQHandler+0xf6>
          HAL_TIM_IC_CaptureCallback(htim);
 80067ce:	f7ff ffea 	bl	80067a6 <HAL_TIM_IC_CaptureCallback>
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 80067d2:	2300      	movs	r3, #0
 80067d4:	7723      	strb	r3, [r4, #28]
  if ((itflag & (TIM_FLAG_CC2)) == (TIM_FLAG_CC2))
 80067d6:	0771      	lsls	r1, r6, #29
 80067d8:	d510      	bpl.n	80067fc <HAL_TIM_IRQHandler+0x50>
    if ((itsource & (TIM_IT_CC2)) == (TIM_IT_CC2))
 80067da:	076a      	lsls	r2, r5, #29
 80067dc:	d50e      	bpl.n	80067fc <HAL_TIM_IRQHandler+0x50>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC2);
 80067de:	6823      	ldr	r3, [r4, #0]
 80067e0:	f06f 0204 	mvn.w	r2, #4
 80067e4:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 80067e6:	2202      	movs	r2, #2
 80067e8:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 80067ea:	699b      	ldr	r3, [r3, #24]
 80067ec:	f413 7f40 	tst.w	r3, #768	@ 0x300
        HAL_TIM_IC_CaptureCallback(htim);
 80067f0:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 80067f2:	d05c      	beq.n	80068ae <HAL_TIM_IRQHandler+0x102>
        HAL_TIM_IC_CaptureCallback(htim);
 80067f4:	f7ff ffd7 	bl	80067a6 <HAL_TIM_IC_CaptureCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 80067f8:	2300      	movs	r3, #0
 80067fa:	7723      	strb	r3, [r4, #28]
  if ((itflag & (TIM_FLAG_CC3)) == (TIM_FLAG_CC3))
 80067fc:	0733      	lsls	r3, r6, #28
 80067fe:	d50f      	bpl.n	8006820 <HAL_TIM_IRQHandler+0x74>
    if ((itsource & (TIM_IT_CC3)) == (TIM_IT_CC3))
 8006800:	0728      	lsls	r0, r5, #28
 8006802:	d50d      	bpl.n	8006820 <HAL_TIM_IRQHandler+0x74>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC3);
 8006804:	6823      	ldr	r3, [r4, #0]
 8006806:	f06f 0208 	mvn.w	r2, #8
 800680a:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 800680c:	2204      	movs	r2, #4
 800680e:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 8006810:	69db      	ldr	r3, [r3, #28]
 8006812:	0799      	lsls	r1, r3, #30
        HAL_TIM_IC_CaptureCallback(htim);
 8006814:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 8006816:	d050      	beq.n	80068ba <HAL_TIM_IRQHandler+0x10e>
        HAL_TIM_IC_CaptureCallback(htim);
 8006818:	f7ff ffc5 	bl	80067a6 <HAL_TIM_IC_CaptureCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800681c:	2300      	movs	r3, #0
 800681e:	7723      	strb	r3, [r4, #28]
  if ((itflag & (TIM_FLAG_CC4)) == (TIM_FLAG_CC4))
 8006820:	06f2      	lsls	r2, r6, #27
 8006822:	d510      	bpl.n	8006846 <HAL_TIM_IRQHandler+0x9a>
    if ((itsource & (TIM_IT_CC4)) == (TIM_IT_CC4))
 8006824:	06eb      	lsls	r3, r5, #27
 8006826:	d50e      	bpl.n	8006846 <HAL_TIM_IRQHandler+0x9a>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC4);
 8006828:	6823      	ldr	r3, [r4, #0]
 800682a:	f06f 0210 	mvn.w	r2, #16
 800682e:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 8006830:	2208      	movs	r2, #8
 8006832:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 8006834:	69db      	ldr	r3, [r3, #28]
 8006836:	f413 7f40 	tst.w	r3, #768	@ 0x300
        HAL_TIM_IC_CaptureCallback(htim);
 800683a:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 800683c:	d043      	beq.n	80068c6 <HAL_TIM_IRQHandler+0x11a>
        HAL_TIM_IC_CaptureCallback(htim);
 800683e:	f7ff ffb2 	bl	80067a6 <HAL_TIM_IC_CaptureCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8006842:	2300      	movs	r3, #0
 8006844:	7723      	strb	r3, [r4, #28]
  if ((itflag & (TIM_FLAG_UPDATE)) == (TIM_FLAG_UPDATE))
 8006846:	07f0      	lsls	r0, r6, #31
 8006848:	d508      	bpl.n	800685c <HAL_TIM_IRQHandler+0xb0>
    if ((itsource & (TIM_IT_UPDATE)) == (TIM_IT_UPDATE))
 800684a:	07e9      	lsls	r1, r5, #31
 800684c:	d506      	bpl.n	800685c <HAL_TIM_IRQHandler+0xb0>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_UPDATE);
 800684e:	6823      	ldr	r3, [r4, #0]
 8006850:	f06f 0201 	mvn.w	r2, #1
 8006854:	611a      	str	r2, [r3, #16]
      HAL_TIM_PeriodElapsedCallback(htim);
 8006856:	4620      	mov	r0, r4
 8006858:	f7fb fc48 	bl	80020ec <HAL_TIM_PeriodElapsedCallback>
  if ((itflag & (TIM_FLAG_BREAK)) == (TIM_FLAG_BREAK))
 800685c:	0632      	lsls	r2, r6, #24
 800685e:	d508      	bpl.n	8006872 <HAL_TIM_IRQHandler+0xc6>
    if ((itsource & (TIM_IT_BREAK)) == (TIM_IT_BREAK))
 8006860:	062b      	lsls	r3, r5, #24
 8006862:	d506      	bpl.n	8006872 <HAL_TIM_IRQHandler+0xc6>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_BREAK);
 8006864:	6823      	ldr	r3, [r4, #0]
 8006866:	f06f 0280 	mvn.w	r2, #128	@ 0x80
 800686a:	611a      	str	r2, [r3, #16]
      HAL_TIMEx_BreakCallback(htim);
 800686c:	4620      	mov	r0, r4
 800686e:	f000 f8b6 	bl	80069de <HAL_TIMEx_BreakCallback>
  if ((itflag & (TIM_FLAG_TRIGGER)) == (TIM_FLAG_TRIGGER))
 8006872:	0670      	lsls	r0, r6, #25
 8006874:	d508      	bpl.n	8006888 <HAL_TIM_IRQHandler+0xdc>
    if ((itsource & (TIM_IT_TRIGGER)) == (TIM_IT_TRIGGER))
 8006876:	0669      	lsls	r1, r5, #25
 8006878:	d506      	bpl.n	8006888 <HAL_TIM_IRQHandler+0xdc>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_TRIGGER);
 800687a:	6823      	ldr	r3, [r4, #0]
 800687c:	f06f 0240 	mvn.w	r2, #64	@ 0x40
 8006880:	611a      	str	r2, [r3, #16]
      HAL_TIM_TriggerCallback(htim);
 8006882:	4620      	mov	r0, r4
 8006884:	f7ff ff91 	bl	80067aa <HAL_TIM_TriggerCallback>
  if ((itflag & (TIM_FLAG_COM)) == (TIM_FLAG_COM))
 8006888:	06b2      	lsls	r2, r6, #26
 800688a:	d522      	bpl.n	80068d2 <HAL_TIM_IRQHandler+0x126>
    if ((itsource & (TIM_IT_COM)) == (TIM_IT_COM))
 800688c:	06ab      	lsls	r3, r5, #26
 800688e:	d520      	bpl.n	80068d2 <HAL_TIM_IRQHandler+0x126>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_COM);
 8006890:	6823      	ldr	r3, [r4, #0]
 8006892:	f06f 0220 	mvn.w	r2, #32
      HAL_TIMEx_CommutCallback(htim);
 8006896:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_COM);
 8006898:	611a      	str	r2, [r3, #16]
}
 800689a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
      HAL_TIMEx_CommutCallback(htim);
 800689e:	f000 b89d 	b.w	80069dc <HAL_TIMEx_CommutCallback>
          HAL_TIM_OC_DelayElapsedCallback(htim);
 80068a2:	f7ff ff7f 	bl	80067a4 <HAL_TIM_OC_DelayElapsedCallback>
          HAL_TIM_PWM_PulseFinishedCallback(htim);
 80068a6:	4620      	mov	r0, r4
 80068a8:	f7ff ff7e 	bl	80067a8 <HAL_TIM_PWM_PulseFinishedCallback>
 80068ac:	e791      	b.n	80067d2 <HAL_TIM_IRQHandler+0x26>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 80068ae:	f7ff ff79 	bl	80067a4 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 80068b2:	4620      	mov	r0, r4
 80068b4:	f7ff ff78 	bl	80067a8 <HAL_TIM_PWM_PulseFinishedCallback>
 80068b8:	e79e      	b.n	80067f8 <HAL_TIM_IRQHandler+0x4c>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 80068ba:	f7ff ff73 	bl	80067a4 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 80068be:	4620      	mov	r0, r4
 80068c0:	f7ff ff72 	bl	80067a8 <HAL_TIM_PWM_PulseFinishedCallback>
 80068c4:	e7aa      	b.n	800681c <HAL_TIM_IRQHandler+0x70>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 80068c6:	f7ff ff6d 	bl	80067a4 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 80068ca:	4620      	mov	r0, r4
 80068cc:	f7ff ff6c 	bl	80067a8 <HAL_TIM_PWM_PulseFinishedCallback>
 80068d0:	e7b7      	b.n	8006842 <HAL_TIM_IRQHandler+0x96>
}
 80068d2:	bd70      	pop	{r4, r5, r6, pc}

080068d4 <TIM_Base_SetConfig>:
{
  uint32_t tmpcr1;
  tmpcr1 = TIMx->CR1;

  /* Set TIM Time Base Unit parameters ---------------------------------------*/
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 80068d4:	4a29      	ldr	r2, [pc, #164]	@ (800697c <TIM_Base_SetConfig+0xa8>)
  tmpcr1 = TIMx->CR1;
 80068d6:	6803      	ldr	r3, [r0, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 80068d8:	4290      	cmp	r0, r2
 80068da:	d012      	beq.n	8006902 <TIM_Base_SetConfig+0x2e>
 80068dc:	f1b0 4f80 	cmp.w	r0, #1073741824	@ 0x40000000
 80068e0:	d00f      	beq.n	8006902 <TIM_Base_SetConfig+0x2e>
 80068e2:	f5a2 427c 	sub.w	r2, r2, #64512	@ 0xfc00
 80068e6:	4290      	cmp	r0, r2
 80068e8:	d00b      	beq.n	8006902 <TIM_Base_SetConfig+0x2e>
 80068ea:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 80068ee:	4290      	cmp	r0, r2
 80068f0:	d007      	beq.n	8006902 <TIM_Base_SetConfig+0x2e>
 80068f2:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 80068f6:	4290      	cmp	r0, r2
 80068f8:	d003      	beq.n	8006902 <TIM_Base_SetConfig+0x2e>
 80068fa:	f502 4278 	add.w	r2, r2, #63488	@ 0xf800
 80068fe:	4290      	cmp	r0, r2
 8006900:	d108      	bne.n	8006914 <TIM_Base_SetConfig+0x40>
  {
    /* Select the Counter Mode */
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
    tmpcr1 |= Structure->CounterMode;
 8006902:	684a      	ldr	r2, [r1, #4]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 8006904:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
    tmpcr1 |= Structure->CounterMode;
 8006908:	4313      	orrs	r3, r2

  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
  {
    /* Set the clock division */
    tmpcr1 &= ~TIM_CR1_CKD;
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800690a:	68ca      	ldr	r2, [r1, #12]
    tmpcr1 &= ~TIM_CR1_CKD;
 800690c:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 8006910:	4313      	orrs	r3, r2
 8006912:	e016      	b.n	8006942 <TIM_Base_SetConfig+0x6e>
  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 8006914:	4a1a      	ldr	r2, [pc, #104]	@ (8006980 <TIM_Base_SetConfig+0xac>)
 8006916:	4290      	cmp	r0, r2
 8006918:	d0f7      	beq.n	800690a <TIM_Base_SetConfig+0x36>
 800691a:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 800691e:	4290      	cmp	r0, r2
 8006920:	d0f3      	beq.n	800690a <TIM_Base_SetConfig+0x36>
 8006922:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 8006926:	4290      	cmp	r0, r2
 8006928:	d0ef      	beq.n	800690a <TIM_Base_SetConfig+0x36>
 800692a:	f5a2 3298 	sub.w	r2, r2, #77824	@ 0x13000
 800692e:	4290      	cmp	r0, r2
 8006930:	d0eb      	beq.n	800690a <TIM_Base_SetConfig+0x36>
 8006932:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 8006936:	4290      	cmp	r0, r2
 8006938:	d0e7      	beq.n	800690a <TIM_Base_SetConfig+0x36>
 800693a:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 800693e:	4290      	cmp	r0, r2
 8006940:	d0e3      	beq.n	800690a <TIM_Base_SetConfig+0x36>
  }

  /* Set the auto-reload preload */
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 8006942:	694a      	ldr	r2, [r1, #20]
 8006944:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 8006948:	4313      	orrs	r3, r2

  TIMx->CR1 = tmpcr1;
 800694a:	6003      	str	r3, [r0, #0]

  /* Set the Autoreload value */
  TIMx->ARR = (uint32_t)Structure->Period ;
 800694c:	688b      	ldr	r3, [r1, #8]
 800694e:	62c3      	str	r3, [r0, #44]	@ 0x2c

  /* Set the Prescaler value */
  TIMx->PSC = Structure->Prescaler;
 8006950:	680b      	ldr	r3, [r1, #0]
 8006952:	6283      	str	r3, [r0, #40]	@ 0x28

  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
 8006954:	4b09      	ldr	r3, [pc, #36]	@ (800697c <TIM_Base_SetConfig+0xa8>)
 8006956:	4298      	cmp	r0, r3
 8006958:	d003      	beq.n	8006962 <TIM_Base_SetConfig+0x8e>
 800695a:	f503 6380 	add.w	r3, r3, #1024	@ 0x400
 800695e:	4298      	cmp	r0, r3
 8006960:	d101      	bne.n	8006966 <TIM_Base_SetConfig+0x92>
  {
    /* Set the Repetition Counter value */
    TIMx->RCR = Structure->RepetitionCounter;
 8006962:	690b      	ldr	r3, [r1, #16]
 8006964:	6303      	str	r3, [r0, #48]	@ 0x30
  }

  /* Generate an update event to reload the Prescaler
     and the repetition counter (only for advanced timer) value immediately */
  TIMx->EGR = TIM_EGR_UG;
 8006966:	2301      	movs	r3, #1
 8006968:	6143      	str	r3, [r0, #20]

  /* Check if the update flag is set after the Update Generation, if so clear the UIF flag */
  if (HAL_IS_BIT_SET(TIMx->SR, TIM_FLAG_UPDATE))
 800696a:	6903      	ldr	r3, [r0, #16]
 800696c:	07db      	lsls	r3, r3, #31
  {
    /* Clear the update flag */
    CLEAR_BIT(TIMx->SR, TIM_FLAG_UPDATE);
 800696e:	bf42      	ittt	mi
 8006970:	6903      	ldrmi	r3, [r0, #16]
 8006972:	f023 0301 	bicmi.w	r3, r3, #1
 8006976:	6103      	strmi	r3, [r0, #16]
  }
}
 8006978:	4770      	bx	lr
 800697a:	bf00      	nop
 800697c:	40010000 	.word	0x40010000
 8006980:	40014000 	.word	0x40014000

08006984 <HAL_TIM_Base_Init>:
{
 8006984:	b510      	push	{r4, lr}
  if (htim == NULL)
 8006986:	4604      	mov	r4, r0
 8006988:	b330      	cbz	r0, 80069d8 <HAL_TIM_Base_Init+0x54>
  if (htim->State == HAL_TIM_STATE_RESET)
 800698a:	f890 303d 	ldrb.w	r3, [r0, #61]	@ 0x3d
 800698e:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 8006992:	b91b      	cbnz	r3, 800699c <HAL_TIM_Base_Init+0x18>
    htim->Lock = HAL_UNLOCKED;
 8006994:	f880 203c 	strb.w	r2, [r0, #60]	@ 0x3c
    HAL_TIM_Base_MspInit(htim);
 8006998:	f7ff fec8 	bl	800672c <HAL_TIM_Base_MspInit>
  htim->State = HAL_TIM_STATE_BUSY;
 800699c:	2302      	movs	r3, #2
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 800699e:	6820      	ldr	r0, [r4, #0]
  htim->State = HAL_TIM_STATE_BUSY;
 80069a0:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 80069a4:	1d21      	adds	r1, r4, #4
 80069a6:	f7ff ff95 	bl	80068d4 <TIM_Base_SetConfig>
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 80069aa:	2301      	movs	r3, #1
 80069ac:	f884 3046 	strb.w	r3, [r4, #70]	@ 0x46
  return HAL_OK;
 80069b0:	2000      	movs	r0, #0
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 80069b2:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
 80069b6:	f884 303f 	strb.w	r3, [r4, #63]	@ 0x3f
 80069ba:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
 80069be:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 80069c2:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 80069c6:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 80069ca:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
 80069ce:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
  htim->State = HAL_TIM_STATE_READY;
 80069d2:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
}
 80069d6:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 80069d8:	2001      	movs	r0, #1
 80069da:	e7fc      	b.n	80069d6 <HAL_TIM_Base_Init+0x52>

080069dc <HAL_TIMEx_CommutCallback>:
/**
  * @brief  Commutation callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_CommutCallback(TIM_HandleTypeDef *htim)
 80069dc:	4770      	bx	lr

080069de <HAL_TIMEx_BreakCallback>:
/**
  * @brief  Break detection callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_BreakCallback(TIM_HandleTypeDef *htim)
 80069de:	4770      	bx	lr

080069e0 <FMC_SDRAM_Init>:
  * @param  Device Pointer to SDRAM device instance
  * @param  Init Pointer to SDRAM Initialization structure
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_Init(FMC_SDRAM_TypeDef *Device, FMC_SDRAM_InitTypeDef *Init)
{
 80069e0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  assert_param(IS_FMC_READPIPE_DELAY(Init->ReadPipeDelay));

  /* Set SDRAM bank configuration parameters */
  if (Init->SDBank == FMC_SDRAM_BANK1)
  {
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 80069e4:	e9d1 3807 	ldrd	r3, r8, [r1, #28]
 80069e8:	e9d1 2c01 	ldrd	r2, ip, [r1, #4]
 80069ec:	e9d1 7603 	ldrd	r7, r6, [r1, #12]
 80069f0:	e9d1 5405 	ldrd	r5, r4, [r1, #20]
 80069f4:	f8d1 e024 	ldr.w	lr, [r1, #36]	@ 0x24
  if (Init->SDBank == FMC_SDRAM_BANK1)
 80069f8:	6809      	ldr	r1, [r1, #0]
 80069fa:	ea43 0308 	orr.w	r3, r3, r8
 80069fe:	b981      	cbnz	r1, 8006a22 <FMC_SDRAM_Init+0x42>
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 8006a00:	ea43 030e 	orr.w	r3, r3, lr
 8006a04:	4313      	orrs	r3, r2
 8006a06:	ea43 030c 	orr.w	r3, r3, ip
 8006a0a:	433b      	orrs	r3, r7
 8006a0c:	6801      	ldr	r1, [r0, #0]
 8006a0e:	4333      	orrs	r3, r6
 8006a10:	432b      	orrs	r3, r5
 8006a12:	4323      	orrs	r3, r4
 8006a14:	f36f 010e 	bfc	r1, #0, #15
 8006a18:	430b      	orrs	r3, r1
 8006a1a:	6003      	str	r3, [r0, #0]
                Init->CASLatency         |
                Init->WriteProtection));
  }

  return HAL_OK;
}
 8006a1c:	2000      	movs	r0, #0
 8006a1e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 8006a22:	6801      	ldr	r1, [r0, #0]
 8006a24:	ea43 030e 	orr.w	r3, r3, lr
 8006a28:	f421 41f8 	bic.w	r1, r1, #31744	@ 0x7c00
 8006a2c:	430b      	orrs	r3, r1
 8006a2e:	6003      	str	r3, [r0, #0]
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
 8006a30:	ea42 030c 	orr.w	r3, r2, ip
 8006a34:	6841      	ldr	r1, [r0, #4]
 8006a36:	433b      	orrs	r3, r7
 8006a38:	4333      	orrs	r3, r6
 8006a3a:	432b      	orrs	r3, r5
 8006a3c:	f421 42ff 	bic.w	r2, r1, #32640	@ 0x7f80
 8006a40:	4323      	orrs	r3, r4
 8006a42:	f022 027f 	bic.w	r2, r2, #127	@ 0x7f
 8006a46:	4313      	orrs	r3, r2
 8006a48:	6043      	str	r3, [r0, #4]
 8006a4a:	e7e7      	b.n	8006a1c <FMC_SDRAM_Init+0x3c>

08006a4c <FMC_SDRAM_Timing_Init>:
  assert_param(IS_FMC_SDRAM_BANK(Bank));

  /* Set SDRAM device timing parameters */
  if (Bank == FMC_SDRAM_BANK1)
  {
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 8006a4c:	68cb      	ldr	r3, [r1, #12]
 8006a4e:	f103 3cff 	add.w	ip, r3, #4294967295
 8006a52:	694b      	ldr	r3, [r1, #20]
{
 8006a54:	b5f0      	push	{r4, r5, r6, r7, lr}
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 8006a56:	684c      	ldr	r4, [r1, #4]
 8006a58:	688f      	ldr	r7, [r1, #8]
 8006a5a:	690e      	ldr	r6, [r1, #16]
 8006a5c:	698d      	ldr	r5, [r1, #24]
 8006a5e:	6809      	ldr	r1, [r1, #0]
 8006a60:	3b01      	subs	r3, #1
 8006a62:	051b      	lsls	r3, r3, #20
 8006a64:	3c01      	subs	r4, #1
 8006a66:	3f01      	subs	r7, #1
 8006a68:	3e01      	subs	r6, #1
 8006a6a:	3d01      	subs	r5, #1
 8006a6c:	0124      	lsls	r4, r4, #4
 8006a6e:	023f      	lsls	r7, r7, #8
 8006a70:	0436      	lsls	r6, r6, #16
 8006a72:	062d      	lsls	r5, r5, #24
 8006a74:	3901      	subs	r1, #1
 8006a76:	ea43 330c 	orr.w	r3, r3, ip, lsl #12
  if (Bank == FMC_SDRAM_BANK1)
 8006a7a:	b95a      	cbnz	r2, 8006a94 <FMC_SDRAM_Timing_Init+0x48>
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 8006a7c:	430b      	orrs	r3, r1
 8006a7e:	4323      	orrs	r3, r4
 8006a80:	6882      	ldr	r2, [r0, #8]
 8006a82:	433b      	orrs	r3, r7
 8006a84:	4333      	orrs	r3, r6
 8006a86:	432b      	orrs	r3, r5
 8006a88:	f002 4270 	and.w	r2, r2, #4026531840	@ 0xf0000000
 8006a8c:	4313      	orrs	r3, r2
 8006a8e:	6083      	str	r3, [r0, #8]
                (((Timing->WriteRecoveryTime) - 1U)    << FMC_SDTR1_TWR_Pos)  |
                (((Timing->RCDDelay) - 1U)             << FMC_SDTR1_TRCD_Pos)));
  }

  return HAL_OK;
}
 8006a90:	2000      	movs	r0, #0
 8006a92:	bdf0      	pop	{r4, r5, r6, r7, pc}
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 8006a94:	6882      	ldr	r2, [r0, #8]
 8006a96:	f422 0270 	bic.w	r2, r2, #15728640	@ 0xf00000
 8006a9a:	f422 4270 	bic.w	r2, r2, #61440	@ 0xf000
 8006a9e:	4313      	orrs	r3, r2
 8006aa0:	6083      	str	r3, [r0, #8]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
 8006aa2:	ea44 0307 	orr.w	r3, r4, r7
 8006aa6:	68c2      	ldr	r2, [r0, #12]
 8006aa8:	430b      	orrs	r3, r1
 8006aaa:	4333      	orrs	r3, r6
 8006aac:	432b      	orrs	r3, r5
 8006aae:	f002 4270 	and.w	r2, r2, #4026531840	@ 0xf0000000
 8006ab2:	4313      	orrs	r3, r2
 8006ab4:	60c3      	str	r3, [r0, #12]
 8006ab6:	e7eb      	b.n	8006a90 <FMC_SDRAM_Timing_Init+0x44>

08006ab8 <FMC_SDRAM_SendCommand>:
  * @param  Timeout Timeout wait value
  * @retval HAL state
  */
HAL_StatusTypeDef FMC_SDRAM_SendCommand(FMC_SDRAM_TypeDef *Device,
                                        FMC_SDRAM_CommandTypeDef *Command, uint32_t Timeout)
{
 8006ab8:	b570      	push	{r4, r5, r6, lr}
 8006aba:	4604      	mov	r4, r0
 8006abc:	4615      	mov	r5, r2
  assert_param(IS_FMC_COMMAND_TARGET(Command->CommandTarget));
  assert_param(IS_FMC_AUTOREFRESH_NUMBER(Command->AutoRefreshNumber));
  assert_param(IS_FMC_MODE_REGISTER(Command->ModeRegisterDefinition));

  /* Set command register */
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
 8006abe:	6902      	ldr	r2, [r0, #16]
 8006ac0:	e9d1 3000 	ldrd	r3, r0, [r1]
 8006ac4:	4303      	orrs	r3, r0
 8006ac6:	68c8      	ldr	r0, [r1, #12]
 8006ac8:	f36f 0215 	bfc	r2, #0, #22
 8006acc:	ea43 2340 	orr.w	r3, r3, r0, lsl #9
 8006ad0:	4313      	orrs	r3, r2
 8006ad2:	688a      	ldr	r2, [r1, #8]
 8006ad4:	3a01      	subs	r2, #1
 8006ad6:	ea43 1342 	orr.w	r3, r3, r2, lsl #5
 8006ada:	6123      	str	r3, [r4, #16]
             ((Command->CommandMode) | (Command->CommandTarget) |
              (((Command->AutoRefreshNumber) - 1U) << FMC_SDCMR_NRFS_Pos) |
              ((Command->ModeRegisterDefinition) << FMC_SDCMR_MRD_Pos)));
  /* Get tick */
  tickstart = HAL_GetTick();
 8006adc:	f7fd f88c 	bl	8003bf8 <HAL_GetTick>
 8006ae0:	4606      	mov	r6, r0

  /* wait until command is send */
  while (HAL_IS_BIT_SET(Device->SDSR, FMC_SDSR_BUSY))
 8006ae2:	69a0      	ldr	r0, [r4, #24]
 8006ae4:	f010 0020 	ands.w	r0, r0, #32
 8006ae8:	d003      	beq.n	8006af2 <FMC_SDRAM_SendCommand+0x3a>
  {
    /* Check for the Timeout */
    if (Timeout != HAL_MAX_DELAY)
 8006aea:	1c6b      	adds	r3, r5, #1
 8006aec:	d0f9      	beq.n	8006ae2 <FMC_SDRAM_SendCommand+0x2a>
    {
      if ((Timeout == 0U) || ((HAL_GetTick() - tickstart) > Timeout))
 8006aee:	b90d      	cbnz	r5, 8006af4 <FMC_SDRAM_SendCommand+0x3c>
      {
        return HAL_TIMEOUT;
 8006af0:	2003      	movs	r0, #3
      }
    }
  }
  return HAL_OK;
}
 8006af2:	bd70      	pop	{r4, r5, r6, pc}
      if ((Timeout == 0U) || ((HAL_GetTick() - tickstart) > Timeout))
 8006af4:	f7fd f880 	bl	8003bf8 <HAL_GetTick>
 8006af8:	1b80      	subs	r0, r0, r6
 8006afa:	42a8      	cmp	r0, r5
 8006afc:	d9f1      	bls.n	8006ae2 <FMC_SDRAM_SendCommand+0x2a>
 8006afe:	e7f7      	b.n	8006af0 <FMC_SDRAM_SendCommand+0x38>

08006b00 <FMC_SDRAM_ProgramRefreshRate>:
  /* Check the parameters */
  assert_param(IS_FMC_SDRAM_DEVICE(Device));
  assert_param(IS_FMC_REFRESH_RATE(RefreshRate));

  /* Set the refresh rate in command register */
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
 8006b00:	6943      	ldr	r3, [r0, #20]
 8006b02:	f36f 034d 	bfc	r3, #1, #13
 8006b06:	ea43 0341 	orr.w	r3, r3, r1, lsl #1
 8006b0a:	6143      	str	r3, [r0, #20]

  return HAL_OK;
}
 8006b0c:	2000      	movs	r0, #0
 8006b0e:	4770      	bx	lr

08006b10 <USB_CoreReset>:
  * @brief  Reset the USB Core (needed after USB clock settings change)
  * @param  USBx  Selected device
  * @retval HAL status
  */
static HAL_StatusTypeDef USB_CoreReset(USB_OTG_GlobalTypeDef *USBx)
{
 8006b10:	b082      	sub	sp, #8
  __IO uint32_t count = 0U;
 8006b12:	2300      	movs	r3, #0
{
 8006b14:	4602      	mov	r2, r0
  __IO uint32_t count = 0U;
 8006b16:	9301      	str	r3, [sp, #4]

  /* Wait for AHB master IDLE state. */
  do
  {
    count++;
 8006b18:	9b01      	ldr	r3, [sp, #4]
 8006b1a:	3301      	adds	r3, #1
 8006b1c:	9301      	str	r3, [sp, #4]

    if (count > HAL_USB_TIMEOUT)
 8006b1e:	9b01      	ldr	r3, [sp, #4]
 8006b20:	f1b3 6f70 	cmp.w	r3, #251658240	@ 0xf000000
 8006b24:	d815      	bhi.n	8006b52 <USB_CoreReset+0x42>
    {
      return HAL_TIMEOUT;
    }
  } while ((USBx->GRSTCTL & USB_OTG_GRSTCTL_AHBIDL) == 0U);
 8006b26:	6913      	ldr	r3, [r2, #16]
 8006b28:	2b00      	cmp	r3, #0
 8006b2a:	daf5      	bge.n	8006b18 <USB_CoreReset+0x8>

  /* Core Soft Reset */
  count = 0U;
 8006b2c:	2300      	movs	r3, #0
 8006b2e:	9301      	str	r3, [sp, #4]
  USBx->GRSTCTL |= USB_OTG_GRSTCTL_CSRST;
 8006b30:	6913      	ldr	r3, [r2, #16]
 8006b32:	f043 0301 	orr.w	r3, r3, #1
 8006b36:	6113      	str	r3, [r2, #16]

  do
  {
    count++;
 8006b38:	9b01      	ldr	r3, [sp, #4]
 8006b3a:	3301      	adds	r3, #1
 8006b3c:	9301      	str	r3, [sp, #4]

    if (count > HAL_USB_TIMEOUT)
 8006b3e:	9b01      	ldr	r3, [sp, #4]
 8006b40:	f1b3 6f70 	cmp.w	r3, #251658240	@ 0xf000000
 8006b44:	d805      	bhi.n	8006b52 <USB_CoreReset+0x42>
    {
      return HAL_TIMEOUT;
    }
  } while ((USBx->GRSTCTL & USB_OTG_GRSTCTL_CSRST) == USB_OTG_GRSTCTL_CSRST);
 8006b46:	6910      	ldr	r0, [r2, #16]
 8006b48:	f010 0001 	ands.w	r0, r0, #1
 8006b4c:	d1f4      	bne.n	8006b38 <USB_CoreReset+0x28>

  return HAL_OK;
}
 8006b4e:	b002      	add	sp, #8
 8006b50:	4770      	bx	lr
      return HAL_TIMEOUT;
 8006b52:	2003      	movs	r0, #3
 8006b54:	e7fb      	b.n	8006b4e <USB_CoreReset+0x3e>

08006b56 <USB_CoreInit>:
{
 8006b56:	b084      	sub	sp, #16
 8006b58:	b538      	push	{r3, r4, r5, lr}
 8006b5a:	ad05      	add	r5, sp, #20
 8006b5c:	e885 000e 	stmia.w	r5, {r1, r2, r3}
  if (cfg.phy_itface == USB_OTG_ULPI_PHY)
 8006b60:	f89d 3019 	ldrb.w	r3, [sp, #25]
 8006b64:	2b01      	cmp	r3, #1
{
 8006b66:	4604      	mov	r4, r0
  if (cfg.phy_itface == USB_OTG_ULPI_PHY)
 8006b68:	d127      	bne.n	8006bba <USB_CoreInit+0x64>
    USBx->GCCFG &= ~(USB_OTG_GCCFG_PWRDWN);
 8006b6a:	6b83      	ldr	r3, [r0, #56]	@ 0x38
 8006b6c:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 8006b70:	6383      	str	r3, [r0, #56]	@ 0x38
    USBx->GUSBCFG &= ~(USB_OTG_GUSBCFG_TSDPS | USB_OTG_GUSBCFG_ULPIFSLS | USB_OTG_GUSBCFG_PHYSEL);
 8006b72:	68c3      	ldr	r3, [r0, #12]
 8006b74:	f423 0384 	bic.w	r3, r3, #4325376	@ 0x420000
 8006b78:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 8006b7c:	60c3      	str	r3, [r0, #12]
    USBx->GUSBCFG &= ~(USB_OTG_GUSBCFG_ULPIEVBUSD | USB_OTG_GUSBCFG_ULPIEVBUSI);
 8006b7e:	68c3      	ldr	r3, [r0, #12]
 8006b80:	f423 1340 	bic.w	r3, r3, #3145728	@ 0x300000
 8006b84:	60c3      	str	r3, [r0, #12]
    if (cfg.use_external_vbus == 1U)
 8006b86:	f89d 3020 	ldrb.w	r3, [sp, #32]
 8006b8a:	2b01      	cmp	r3, #1
      USBx->GUSBCFG |= USB_OTG_GUSBCFG_ULPIEVBUSD;
 8006b8c:	bf02      	ittt	eq
 8006b8e:	68c3      	ldreq	r3, [r0, #12]
 8006b90:	f443 1380 	orreq.w	r3, r3, #1048576	@ 0x100000
 8006b94:	60c3      	streq	r3, [r0, #12]
    ret = USB_CoreReset(USBx);
 8006b96:	f7ff ffbb 	bl	8006b10 <USB_CoreReset>
  if (cfg.dma_enable == 1U)
 8006b9a:	f89d 3016 	ldrb.w	r3, [sp, #22]
 8006b9e:	2b01      	cmp	r3, #1
 8006ba0:	d107      	bne.n	8006bb2 <USB_CoreInit+0x5c>
    USBx->GAHBCFG |= USB_OTG_GAHBCFG_HBSTLEN_2;
 8006ba2:	68a3      	ldr	r3, [r4, #8]
 8006ba4:	f043 0306 	orr.w	r3, r3, #6
 8006ba8:	60a3      	str	r3, [r4, #8]
    USBx->GAHBCFG |= USB_OTG_GAHBCFG_DMAEN;
 8006baa:	68a3      	ldr	r3, [r4, #8]
 8006bac:	f043 0320 	orr.w	r3, r3, #32
 8006bb0:	60a3      	str	r3, [r4, #8]
}
 8006bb2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8006bb6:	b004      	add	sp, #16
 8006bb8:	4770      	bx	lr
    USBx->GUSBCFG |= USB_OTG_GUSBCFG_PHYSEL;
 8006bba:	68c3      	ldr	r3, [r0, #12]
 8006bbc:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8006bc0:	60c3      	str	r3, [r0, #12]
    ret = USB_CoreReset(USBx);
 8006bc2:	f7ff ffa5 	bl	8006b10 <USB_CoreReset>
    if (cfg.battery_charging_enable == 0U)
 8006bc6:	f89d 301d 	ldrb.w	r3, [sp, #29]
 8006bca:	b923      	cbnz	r3, 8006bd6 <USB_CoreInit+0x80>
      USBx->GCCFG |= USB_OTG_GCCFG_PWRDWN;
 8006bcc:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 8006bce:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
      USBx->GCCFG &= ~(USB_OTG_GCCFG_PWRDWN);
 8006bd2:	63a3      	str	r3, [r4, #56]	@ 0x38
 8006bd4:	e7e1      	b.n	8006b9a <USB_CoreInit+0x44>
 8006bd6:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 8006bd8:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 8006bdc:	e7f9      	b.n	8006bd2 <USB_CoreInit+0x7c>
	...

08006be0 <USB_SetTurnaroundTime>:
  if (speed == USBD_FS_SPEED)
 8006be0:	2a02      	cmp	r2, #2
 8006be2:	d14a      	bne.n	8006c7a <USB_SetTurnaroundTime+0x9a>
    if ((hclk >= 14200000U) && (hclk < 15000000U))
 8006be4:	4b27      	ldr	r3, [pc, #156]	@ (8006c84 <USB_SetTurnaroundTime+0xa4>)
 8006be6:	4a28      	ldr	r2, [pc, #160]	@ (8006c88 <USB_SetTurnaroundTime+0xa8>)
 8006be8:	440b      	add	r3, r1
 8006bea:	4293      	cmp	r3, r2
 8006bec:	d939      	bls.n	8006c62 <USB_SetTurnaroundTime+0x82>
    else if ((hclk >= 15000000U) && (hclk < 16000000U))
 8006bee:	4b27      	ldr	r3, [pc, #156]	@ (8006c8c <USB_SetTurnaroundTime+0xac>)
 8006bf0:	4a27      	ldr	r2, [pc, #156]	@ (8006c90 <USB_SetTurnaroundTime+0xb0>)
 8006bf2:	440b      	add	r3, r1
 8006bf4:	4293      	cmp	r3, r2
 8006bf6:	d936      	bls.n	8006c66 <USB_SetTurnaroundTime+0x86>
    else if ((hclk >= 16000000U) && (hclk < 17200000U))
 8006bf8:	4a26      	ldr	r2, [pc, #152]	@ (8006c94 <USB_SetTurnaroundTime+0xb4>)
 8006bfa:	f5a1 0374 	sub.w	r3, r1, #15990784	@ 0xf40000
 8006bfe:	f5a3 5310 	sub.w	r3, r3, #9216	@ 0x2400
 8006c02:	4293      	cmp	r3, r2
 8006c04:	d931      	bls.n	8006c6a <USB_SetTurnaroundTime+0x8a>
    else if ((hclk >= 17200000U) && (hclk < 18500000U))
 8006c06:	4a24      	ldr	r2, [pc, #144]	@ (8006c98 <USB_SetTurnaroundTime+0xb8>)
 8006c08:	f1a1 7383 	sub.w	r3, r1, #17170432	@ 0x1060000
 8006c0c:	f5a3 43e7 	sub.w	r3, r3, #29568	@ 0x7380
 8006c10:	4293      	cmp	r3, r2
 8006c12:	d32c      	bcc.n	8006c6e <USB_SetTurnaroundTime+0x8e>
    else if ((hclk >= 18500000U) && (hclk < 20000000U))
 8006c14:	4b21      	ldr	r3, [pc, #132]	@ (8006c9c <USB_SetTurnaroundTime+0xbc>)
 8006c16:	4a22      	ldr	r2, [pc, #136]	@ (8006ca0 <USB_SetTurnaroundTime+0xc0>)
 8006c18:	440b      	add	r3, r1
 8006c1a:	4293      	cmp	r3, r2
 8006c1c:	d929      	bls.n	8006c72 <USB_SetTurnaroundTime+0x92>
    else if ((hclk >= 20000000U) && (hclk < 21800000U))
 8006c1e:	4b21      	ldr	r3, [pc, #132]	@ (8006ca4 <USB_SetTurnaroundTime+0xc4>)
 8006c20:	4a21      	ldr	r2, [pc, #132]	@ (8006ca8 <USB_SetTurnaroundTime+0xc8>)
 8006c22:	440b      	add	r3, r1
 8006c24:	4293      	cmp	r3, r2
 8006c26:	d326      	bcc.n	8006c76 <USB_SetTurnaroundTime+0x96>
    else if ((hclk >= 21800000U) && (hclk < 24000000U))
 8006c28:	4b20      	ldr	r3, [pc, #128]	@ (8006cac <USB_SetTurnaroundTime+0xcc>)
 8006c2a:	4a21      	ldr	r2, [pc, #132]	@ (8006cb0 <USB_SetTurnaroundTime+0xd0>)
 8006c2c:	440b      	add	r3, r1
 8006c2e:	4293      	cmp	r3, r2
 8006c30:	d323      	bcc.n	8006c7a <USB_SetTurnaroundTime+0x9a>
    else if ((hclk >= 24000000U) && (hclk < 27700000U))
 8006c32:	4a20      	ldr	r2, [pc, #128]	@ (8006cb4 <USB_SetTurnaroundTime+0xd4>)
 8006c34:	f1a1 73b7 	sub.w	r3, r1, #23986176	@ 0x16e0000
 8006c38:	f5a3 5358 	sub.w	r3, r3, #13824	@ 0x3600
 8006c3c:	4293      	cmp	r3, r2
 8006c3e:	d31e      	bcc.n	8006c7e <USB_SetTurnaroundTime+0x9e>
    else if ((hclk >= 27700000U) && (hclk < 32000000U))
 8006c40:	4b1d      	ldr	r3, [pc, #116]	@ (8006cb8 <USB_SetTurnaroundTime+0xd8>)
      UsbTrd = 0x7U;
 8006c42:	4a1e      	ldr	r2, [pc, #120]	@ (8006cbc <USB_SetTurnaroundTime+0xdc>)
    else if ((hclk >= 27700000U) && (hclk < 32000000U))
 8006c44:	440b      	add	r3, r1
      UsbTrd = 0x7U;
 8006c46:	4293      	cmp	r3, r2
 8006c48:	bf2c      	ite	cs
 8006c4a:	2306      	movcs	r3, #6
 8006c4c:	2307      	movcc	r3, #7
  USBx->GUSBCFG &= ~USB_OTG_GUSBCFG_TRDT;
 8006c4e:	68c2      	ldr	r2, [r0, #12]
 8006c50:	f422 5270 	bic.w	r2, r2, #15360	@ 0x3c00
 8006c54:	60c2      	str	r2, [r0, #12]
  USBx->GUSBCFG |= (uint32_t)((UsbTrd << 10) & USB_OTG_GUSBCFG_TRDT);
 8006c56:	68c2      	ldr	r2, [r0, #12]
 8006c58:	ea42 2383 	orr.w	r3, r2, r3, lsl #10
 8006c5c:	60c3      	str	r3, [r0, #12]
}
 8006c5e:	2000      	movs	r0, #0
 8006c60:	4770      	bx	lr
      UsbTrd = 0xFU;
 8006c62:	230f      	movs	r3, #15
 8006c64:	e7f3      	b.n	8006c4e <USB_SetTurnaroundTime+0x6e>
      UsbTrd = 0xEU;
 8006c66:	230e      	movs	r3, #14
 8006c68:	e7f1      	b.n	8006c4e <USB_SetTurnaroundTime+0x6e>
      UsbTrd = 0xDU;
 8006c6a:	230d      	movs	r3, #13
 8006c6c:	e7ef      	b.n	8006c4e <USB_SetTurnaroundTime+0x6e>
      UsbTrd = 0xCU;
 8006c6e:	230c      	movs	r3, #12
 8006c70:	e7ed      	b.n	8006c4e <USB_SetTurnaroundTime+0x6e>
      UsbTrd = 0xBU;
 8006c72:	230b      	movs	r3, #11
 8006c74:	e7eb      	b.n	8006c4e <USB_SetTurnaroundTime+0x6e>
      UsbTrd = 0xAU;
 8006c76:	230a      	movs	r3, #10
 8006c78:	e7e9      	b.n	8006c4e <USB_SetTurnaroundTime+0x6e>
    UsbTrd = USBD_HS_TRDT_VALUE;
 8006c7a:	2309      	movs	r3, #9
 8006c7c:	e7e7      	b.n	8006c4e <USB_SetTurnaroundTime+0x6e>
      UsbTrd = 0x8U;
 8006c7e:	2308      	movs	r3, #8
 8006c80:	e7e5      	b.n	8006c4e <USB_SetTurnaroundTime+0x6e>
 8006c82:	bf00      	nop
 8006c84:	ff275340 	.word	0xff275340
 8006c88:	000c34ff 	.word	0x000c34ff
 8006c8c:	ff1b1e40 	.word	0xff1b1e40
 8006c90:	000f423f 	.word	0x000f423f
 8006c94:	00124f7f 	.word	0x00124f7f
 8006c98:	0013d620 	.word	0x0013d620
 8006c9c:	fee5b660 	.word	0xfee5b660
 8006ca0:	0016e35f 	.word	0x0016e35f
 8006ca4:	feced300 	.word	0xfeced300
 8006ca8:	001b7740 	.word	0x001b7740
 8006cac:	feb35bc0 	.word	0xfeb35bc0
 8006cb0:	002191c0 	.word	0x002191c0
 8006cb4:	00387520 	.word	0x00387520
 8006cb8:	fe5954e0 	.word	0xfe5954e0
 8006cbc:	00419ce0 	.word	0x00419ce0

08006cc0 <USB_EnableGlobalInt>:
  USBx->GAHBCFG |= USB_OTG_GAHBCFG_GINT;
 8006cc0:	6883      	ldr	r3, [r0, #8]
 8006cc2:	f043 0301 	orr.w	r3, r3, #1
 8006cc6:	6083      	str	r3, [r0, #8]
}
 8006cc8:	2000      	movs	r0, #0
 8006cca:	4770      	bx	lr

08006ccc <USB_DisableGlobalInt>:
  USBx->GAHBCFG &= ~USB_OTG_GAHBCFG_GINT;
 8006ccc:	6883      	ldr	r3, [r0, #8]
 8006cce:	f023 0301 	bic.w	r3, r3, #1
 8006cd2:	6083      	str	r3, [r0, #8]
}
 8006cd4:	2000      	movs	r0, #0
 8006cd6:	4770      	bx	lr

08006cd8 <USB_SetCurrentMode>:
{
 8006cd8:	b538      	push	{r3, r4, r5, lr}
  USBx->GUSBCFG &= ~(USB_OTG_GUSBCFG_FHMOD | USB_OTG_GUSBCFG_FDMOD);
 8006cda:	68c3      	ldr	r3, [r0, #12]
  if (mode == USB_HOST_MODE)
 8006cdc:	2901      	cmp	r1, #1
  USBx->GUSBCFG &= ~(USB_OTG_GUSBCFG_FHMOD | USB_OTG_GUSBCFG_FDMOD);
 8006cde:	f023 43c0 	bic.w	r3, r3, #1610612736	@ 0x60000000
{
 8006ce2:	4605      	mov	r5, r0
 8006ce4:	460c      	mov	r4, r1
  USBx->GUSBCFG &= ~(USB_OTG_GUSBCFG_FHMOD | USB_OTG_GUSBCFG_FDMOD);
 8006ce6:	60c3      	str	r3, [r0, #12]
  if (mode == USB_HOST_MODE)
 8006ce8:	d114      	bne.n	8006d14 <USB_SetCurrentMode+0x3c>
    USBx->GUSBCFG |= USB_OTG_GUSBCFG_FHMOD;
 8006cea:	68c3      	ldr	r3, [r0, #12]
 8006cec:	f043 5300 	orr.w	r3, r3, #536870912	@ 0x20000000
 8006cf0:	60c3      	str	r3, [r0, #12]
  uint32_t ms = 0U;
 8006cf2:	2400      	movs	r4, #0
      HAL_Delay(10U);
 8006cf4:	200a      	movs	r0, #10
 8006cf6:	f7fc ff85 	bl	8003c04 <HAL_Delay>
  return ((USBx->GINTSTS) & 0x1U);
 8006cfa:	696b      	ldr	r3, [r5, #20]
    } while ((USB_GetMode(USBx) != (uint32_t)USB_HOST_MODE) && (ms < HAL_USB_CURRENT_MODE_MAX_DELAY_MS));
 8006cfc:	07d9      	lsls	r1, r3, #31
      ms += 10U;
 8006cfe:	f104 040a 	add.w	r4, r4, #10
    } while ((USB_GetMode(USBx) != (uint32_t)USB_HOST_MODE) && (ms < HAL_USB_CURRENT_MODE_MAX_DELAY_MS));
 8006d02:	d402      	bmi.n	8006d0a <USB_SetCurrentMode+0x32>
 8006d04:	2cc8      	cmp	r4, #200	@ 0xc8
 8006d06:	d1f5      	bne.n	8006cf4 <USB_SetCurrentMode+0x1c>
      ms += 10U;
 8006d08:	24c8      	movs	r4, #200	@ 0xc8
  if (ms == HAL_USB_CURRENT_MODE_MAX_DELAY_MS)
 8006d0a:	f1a4 03c8 	sub.w	r3, r4, #200	@ 0xc8
 8006d0e:	4258      	negs	r0, r3
 8006d10:	4158      	adcs	r0, r3
}
 8006d12:	bd38      	pop	{r3, r4, r5, pc}
  else if (mode == USB_DEVICE_MODE)
 8006d14:	b971      	cbnz	r1, 8006d34 <USB_SetCurrentMode+0x5c>
    USBx->GUSBCFG |= USB_OTG_GUSBCFG_FDMOD;
 8006d16:	68c3      	ldr	r3, [r0, #12]
 8006d18:	f043 4380 	orr.w	r3, r3, #1073741824	@ 0x40000000
 8006d1c:	60c3      	str	r3, [r0, #12]
      HAL_Delay(10U);
 8006d1e:	200a      	movs	r0, #10
 8006d20:	f7fc ff70 	bl	8003c04 <HAL_Delay>
  return ((USBx->GINTSTS) & 0x1U);
 8006d24:	696b      	ldr	r3, [r5, #20]
    } while ((USB_GetMode(USBx) != (uint32_t)USB_DEVICE_MODE) && (ms < HAL_USB_CURRENT_MODE_MAX_DELAY_MS));
 8006d26:	07da      	lsls	r2, r3, #31
      ms += 10U;
 8006d28:	f104 040a 	add.w	r4, r4, #10
    } while ((USB_GetMode(USBx) != (uint32_t)USB_DEVICE_MODE) && (ms < HAL_USB_CURRENT_MODE_MAX_DELAY_MS));
 8006d2c:	d5ed      	bpl.n	8006d0a <USB_SetCurrentMode+0x32>
 8006d2e:	2cc8      	cmp	r4, #200	@ 0xc8
 8006d30:	d1f5      	bne.n	8006d1e <USB_SetCurrentMode+0x46>
 8006d32:	e7e9      	b.n	8006d08 <USB_SetCurrentMode+0x30>
    return HAL_ERROR;
 8006d34:	2001      	movs	r0, #1
 8006d36:	e7ec      	b.n	8006d12 <USB_SetCurrentMode+0x3a>

08006d38 <USB_FlushTxFifo>:
{
 8006d38:	b082      	sub	sp, #8
  __IO uint32_t count = 0U;
 8006d3a:	2300      	movs	r3, #0
{
 8006d3c:	4602      	mov	r2, r0
  __IO uint32_t count = 0U;
 8006d3e:	9301      	str	r3, [sp, #4]
    count++;
 8006d40:	9b01      	ldr	r3, [sp, #4]
 8006d42:	3301      	adds	r3, #1
 8006d44:	9301      	str	r3, [sp, #4]
    if (count > HAL_USB_TIMEOUT)
 8006d46:	9b01      	ldr	r3, [sp, #4]
 8006d48:	f1b3 6f70 	cmp.w	r3, #251658240	@ 0xf000000
 8006d4c:	d815      	bhi.n	8006d7a <USB_FlushTxFifo+0x42>
  } while ((USBx->GRSTCTL & USB_OTG_GRSTCTL_AHBIDL) == 0U);
 8006d4e:	6913      	ldr	r3, [r2, #16]
 8006d50:	2b00      	cmp	r3, #0
 8006d52:	daf5      	bge.n	8006d40 <USB_FlushTxFifo+0x8>
  USBx->GRSTCTL = (USB_OTG_GRSTCTL_TXFFLSH | (num << 6));
 8006d54:	0189      	lsls	r1, r1, #6
  count = 0U;
 8006d56:	2300      	movs	r3, #0
  USBx->GRSTCTL = (USB_OTG_GRSTCTL_TXFFLSH | (num << 6));
 8006d58:	f041 0120 	orr.w	r1, r1, #32
  count = 0U;
 8006d5c:	9301      	str	r3, [sp, #4]
  USBx->GRSTCTL = (USB_OTG_GRSTCTL_TXFFLSH | (num << 6));
 8006d5e:	6111      	str	r1, [r2, #16]
    count++;
 8006d60:	9b01      	ldr	r3, [sp, #4]
 8006d62:	3301      	adds	r3, #1
 8006d64:	9301      	str	r3, [sp, #4]
    if (count > HAL_USB_TIMEOUT)
 8006d66:	9b01      	ldr	r3, [sp, #4]
 8006d68:	f1b3 6f70 	cmp.w	r3, #251658240	@ 0xf000000
 8006d6c:	d805      	bhi.n	8006d7a <USB_FlushTxFifo+0x42>
  } while ((USBx->GRSTCTL & USB_OTG_GRSTCTL_TXFFLSH) == USB_OTG_GRSTCTL_TXFFLSH);
 8006d6e:	6910      	ldr	r0, [r2, #16]
 8006d70:	f010 0020 	ands.w	r0, r0, #32
 8006d74:	d1f4      	bne.n	8006d60 <USB_FlushTxFifo+0x28>
}
 8006d76:	b002      	add	sp, #8
 8006d78:	4770      	bx	lr
      return HAL_TIMEOUT;
 8006d7a:	2003      	movs	r0, #3
 8006d7c:	e7fb      	b.n	8006d76 <USB_FlushTxFifo+0x3e>

08006d7e <USB_FlushRxFifo>:
{
 8006d7e:	b082      	sub	sp, #8
  __IO uint32_t count = 0U;
 8006d80:	2300      	movs	r3, #0
{
 8006d82:	4602      	mov	r2, r0
  __IO uint32_t count = 0U;
 8006d84:	9301      	str	r3, [sp, #4]
    count++;
 8006d86:	9b01      	ldr	r3, [sp, #4]
 8006d88:	3301      	adds	r3, #1
 8006d8a:	9301      	str	r3, [sp, #4]
    if (count > HAL_USB_TIMEOUT)
 8006d8c:	9b01      	ldr	r3, [sp, #4]
 8006d8e:	f1b3 6f70 	cmp.w	r3, #251658240	@ 0xf000000
 8006d92:	d813      	bhi.n	8006dbc <USB_FlushRxFifo+0x3e>
  } while ((USBx->GRSTCTL & USB_OTG_GRSTCTL_AHBIDL) == 0U);
 8006d94:	6913      	ldr	r3, [r2, #16]
 8006d96:	2b00      	cmp	r3, #0
 8006d98:	daf5      	bge.n	8006d86 <USB_FlushRxFifo+0x8>
  count = 0U;
 8006d9a:	2300      	movs	r3, #0
 8006d9c:	9301      	str	r3, [sp, #4]
  USBx->GRSTCTL = USB_OTG_GRSTCTL_RXFFLSH;
 8006d9e:	2310      	movs	r3, #16
 8006da0:	6113      	str	r3, [r2, #16]
    count++;
 8006da2:	9b01      	ldr	r3, [sp, #4]
 8006da4:	3301      	adds	r3, #1
 8006da6:	9301      	str	r3, [sp, #4]
    if (count > HAL_USB_TIMEOUT)
 8006da8:	9b01      	ldr	r3, [sp, #4]
 8006daa:	f1b3 6f70 	cmp.w	r3, #251658240	@ 0xf000000
 8006dae:	d805      	bhi.n	8006dbc <USB_FlushRxFifo+0x3e>
  } while ((USBx->GRSTCTL & USB_OTG_GRSTCTL_RXFFLSH) == USB_OTG_GRSTCTL_RXFFLSH);
 8006db0:	6910      	ldr	r0, [r2, #16]
 8006db2:	f010 0010 	ands.w	r0, r0, #16
 8006db6:	d1f4      	bne.n	8006da2 <USB_FlushRxFifo+0x24>
}
 8006db8:	b002      	add	sp, #8
 8006dba:	4770      	bx	lr
      return HAL_TIMEOUT;
 8006dbc:	2003      	movs	r0, #3
 8006dbe:	e7fb      	b.n	8006db8 <USB_FlushRxFifo+0x3a>

08006dc0 <USB_SetDevSpeed>:
  USBx_DEVICE->DCFG |= speed;
 8006dc0:	f8d0 3800 	ldr.w	r3, [r0, #2048]	@ 0x800
 8006dc4:	4319      	orrs	r1, r3
 8006dc6:	f8c0 1800 	str.w	r1, [r0, #2048]	@ 0x800
}
 8006dca:	2000      	movs	r0, #0
 8006dcc:	4770      	bx	lr
	...

08006dd0 <USB_DevInit>:
{
 8006dd0:	b084      	sub	sp, #16
 8006dd2:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8006dd6:	4604      	mov	r4, r0
 8006dd8:	a809      	add	r0, sp, #36	@ 0x24
 8006dda:	e880 000e 	stmia.w	r0, {r1, r2, r3}
  for (i = 0U; i < 15U; i++)
 8006dde:	2300      	movs	r3, #0
 8006de0:	f89d 6024 	ldrb.w	r6, [sp, #36]	@ 0x24
 8006de4:	f89d 502e 	ldrb.w	r5, [sp, #46]	@ 0x2e
    USBx->DIEPTXF[i] = 0U;
 8006de8:	4619      	mov	r1, r3
 8006dea:	f103 0240 	add.w	r2, r3, #64	@ 0x40
 8006dee:	eb04 0282 	add.w	r2, r4, r2, lsl #2
  for (i = 0U; i < 15U; i++)
 8006df2:	3301      	adds	r3, #1
 8006df4:	2b0f      	cmp	r3, #15
    USBx->DIEPTXF[i] = 0U;
 8006df6:	6051      	str	r1, [r2, #4]
  for (i = 0U; i < 15U; i++)
 8006df8:	d1f7      	bne.n	8006dea <USB_DevInit+0x1a>
    USBx_DEVICE->DCTL |= USB_OTG_DCTL_SDIS;
 8006dfa:	f504 6700 	add.w	r7, r4, #2048	@ 0x800
  if (cfg.vbus_sensing_enable == 0U)
 8006dfe:	2d00      	cmp	r5, #0
 8006e00:	d16c      	bne.n	8006edc <USB_DevInit+0x10c>
    USBx_DEVICE->DCTL |= USB_OTG_DCTL_SDIS;
 8006e02:	687b      	ldr	r3, [r7, #4]
 8006e04:	f043 0302 	orr.w	r3, r3, #2
 8006e08:	607b      	str	r3, [r7, #4]
    USBx->GCCFG |= USB_OTG_GCCFG_NOVBUSSENS;
 8006e0a:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 8006e0c:	f443 1300 	orr.w	r3, r3, #2097152	@ 0x200000
 8006e10:	63a3      	str	r3, [r4, #56]	@ 0x38
    USBx->GCCFG &= ~USB_OTG_GCCFG_VBUSBSEN;
 8006e12:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 8006e14:	f423 2300 	bic.w	r3, r3, #524288	@ 0x80000
 8006e18:	63a3      	str	r3, [r4, #56]	@ 0x38
    USBx->GCCFG &= ~USB_OTG_GCCFG_VBUSASEN;
 8006e1a:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 8006e1c:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
    USBx->GCCFG |= USB_OTG_GCCFG_VBUSBSEN;
 8006e20:	63a3      	str	r3, [r4, #56]	@ 0x38
  USBx_PCGCCTL = 0U;
 8006e22:	2300      	movs	r3, #0
 8006e24:	f8c4 3e00 	str.w	r3, [r4, #3584]	@ 0xe00
  if (cfg.phy_itface == USB_OTG_ULPI_PHY)
 8006e28:	f89d 3029 	ldrb.w	r3, [sp, #41]	@ 0x29
 8006e2c:	2b01      	cmp	r3, #1
 8006e2e:	d15f      	bne.n	8006ef0 <USB_DevInit+0x120>
    if (cfg.speed == USBD_HS_SPEED)
 8006e30:	f89d 1027 	ldrb.w	r1, [sp, #39]	@ 0x27
 8006e34:	2900      	cmp	r1, #0
 8006e36:	d159      	bne.n	8006eec <USB_DevInit+0x11c>
    (void)USB_SetDevSpeed(USBx, USB_OTG_SPEED_FULL);
 8006e38:	4620      	mov	r0, r4
 8006e3a:	f7ff ffc1 	bl	8006dc0 <USB_SetDevSpeed>
  if (USB_FlushTxFifo(USBx, 0x10U) != HAL_OK) /* all Tx FIFOs */
 8006e3e:	2110      	movs	r1, #16
 8006e40:	4620      	mov	r0, r4
 8006e42:	f7ff ff79 	bl	8006d38 <USB_FlushTxFifo>
 8006e46:	4601      	mov	r1, r0
  if (USB_FlushRxFifo(USBx) != HAL_OK)
 8006e48:	4620      	mov	r0, r4
 8006e4a:	f7ff ff98 	bl	8006d7e <USB_FlushRxFifo>
 8006e4e:	4308      	orrs	r0, r1
 8006e50:	b2c0      	uxtb	r0, r0
  USBx_DEVICE->DIEPMSK = 0U;
 8006e52:	2300      	movs	r3, #0
  if (USB_FlushRxFifo(USBx) != HAL_OK)
 8006e54:	3800      	subs	r0, #0
  USBx_DEVICE->DIEPMSK = 0U;
 8006e56:	613b      	str	r3, [r7, #16]
  if (USB_FlushRxFifo(USBx) != HAL_OK)
 8006e58:	bf18      	it	ne
 8006e5a:	2001      	movne	r0, #1
  USBx_DEVICE->DOEPMSK = 0U;
 8006e5c:	617b      	str	r3, [r7, #20]
  USBx_DEVICE->DAINTMSK = 0U;
 8006e5e:	f504 6210 	add.w	r2, r4, #2304	@ 0x900
 8006e62:	61fb      	str	r3, [r7, #28]
      USBx_INEP(i)->DIEPCTL = 0U;
 8006e64:	4619      	mov	r1, r3
        USBx_INEP(i)->DIEPCTL = USB_OTG_DIEPCTL_EPDIS | USB_OTG_DIEPCTL_SNAK;
 8006e66:	f04f 4c90 	mov.w	ip, #1207959552	@ 0x48000000
        USBx_INEP(i)->DIEPCTL = USB_OTG_DIEPCTL_SNAK;
 8006e6a:	f04f 6e00 	mov.w	lr, #134217728	@ 0x8000000
    USBx_INEP(i)->DIEPINT  = 0xFB7FU;
 8006e6e:	f64f 387f 	movw	r8, #64383	@ 0xfb7f
  for (i = 0U; i < cfg.dev_endpoints; i++)
 8006e72:	429e      	cmp	r6, r3
 8006e74:	d83e      	bhi.n	8006ef4 <USB_DevInit+0x124>
  for (i = 0U; i < cfg.dev_endpoints; i++)
 8006e76:	2200      	movs	r2, #0
 8006e78:	f504 6330 	add.w	r3, r4, #2816	@ 0xb00
      USBx_OUTEP(i)->DOEPCTL = 0U;
 8006e7c:	4611      	mov	r1, r2
        USBx_OUTEP(i)->DOEPCTL = USB_OTG_DOEPCTL_EPDIS | USB_OTG_DOEPCTL_SNAK;
 8006e7e:	f04f 4c90 	mov.w	ip, #1207959552	@ 0x48000000
        USBx_OUTEP(i)->DOEPCTL = USB_OTG_DOEPCTL_SNAK;
 8006e82:	f04f 6e00 	mov.w	lr, #134217728	@ 0x8000000
    USBx_OUTEP(i)->DOEPINT  = 0xFB7FU;
 8006e86:	f64f 387f 	movw	r8, #64383	@ 0xfb7f
  for (i = 0U; i < cfg.dev_endpoints; i++)
 8006e8a:	4296      	cmp	r6, r2
 8006e8c:	d845      	bhi.n	8006f1a <USB_DevInit+0x14a>
  USBx_DEVICE->DIEPMSK &= ~(USB_OTG_DIEPMSK_TXFURM);
 8006e8e:	693b      	ldr	r3, [r7, #16]
 8006e90:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 8006e94:	613b      	str	r3, [r7, #16]
  USBx->GINTMSK = 0U;
 8006e96:	2300      	movs	r3, #0
 8006e98:	61a3      	str	r3, [r4, #24]
  USBx->GINTSTS = 0xBFFFFFFFU;
 8006e9a:	f06f 4380 	mvn.w	r3, #1073741824	@ 0x40000000
 8006e9e:	6163      	str	r3, [r4, #20]
  if (cfg.dma_enable == 0U)
 8006ea0:	f89d 3026 	ldrb.w	r3, [sp, #38]	@ 0x26
 8006ea4:	b91b      	cbnz	r3, 8006eae <USB_DevInit+0xde>
    USBx->GINTMSK |= USB_OTG_GINTMSK_RXFLVLM;
 8006ea6:	69a3      	ldr	r3, [r4, #24]
 8006ea8:	f043 0310 	orr.w	r3, r3, #16
 8006eac:	61a3      	str	r3, [r4, #24]
  USBx->GINTMSK |= USB_OTG_GINTMSK_USBSUSPM | USB_OTG_GINTMSK_USBRST |
 8006eae:	69a2      	ldr	r2, [r4, #24]
 8006eb0:	4b23      	ldr	r3, [pc, #140]	@ (8006f40 <USB_DevInit+0x170>)
 8006eb2:	4313      	orrs	r3, r2
 8006eb4:	61a3      	str	r3, [r4, #24]
  if (cfg.Sof_enable != 0U)
 8006eb6:	f89d 302a 	ldrb.w	r3, [sp, #42]	@ 0x2a
 8006eba:	b11b      	cbz	r3, 8006ec4 <USB_DevInit+0xf4>
    USBx->GINTMSK |= USB_OTG_GINTMSK_SOFM;
 8006ebc:	69a3      	ldr	r3, [r4, #24]
 8006ebe:	f043 0308 	orr.w	r3, r3, #8
 8006ec2:	61a3      	str	r3, [r4, #24]
  if (cfg.vbus_sensing_enable == 1U)
 8006ec4:	2d01      	cmp	r5, #1
    USBx->GINTMSK |= (USB_OTG_GINTMSK_SRQIM | USB_OTG_GINTMSK_OTGINT);
 8006ec6:	bf01      	itttt	eq
 8006ec8:	69a3      	ldreq	r3, [r4, #24]
 8006eca:	f043 4380 	orreq.w	r3, r3, #1073741824	@ 0x40000000
 8006ece:	f043 0304 	orreq.w	r3, r3, #4
 8006ed2:	61a3      	streq	r3, [r4, #24]
}
 8006ed4:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8006ed8:	b004      	add	sp, #16
 8006eda:	4770      	bx	lr
    USBx->GCCFG &= ~USB_OTG_GCCFG_NOVBUSSENS;
 8006edc:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 8006ede:	f423 1300 	bic.w	r3, r3, #2097152	@ 0x200000
 8006ee2:	63a3      	str	r3, [r4, #56]	@ 0x38
    USBx->GCCFG |= USB_OTG_GCCFG_VBUSBSEN;
 8006ee4:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 8006ee6:	f443 2300 	orr.w	r3, r3, #524288	@ 0x80000
 8006eea:	e799      	b.n	8006e20 <USB_DevInit+0x50>
      (void)USB_SetDevSpeed(USBx, USB_OTG_SPEED_HIGH_IN_FULL);
 8006eec:	4619      	mov	r1, r3
 8006eee:	e7a3      	b.n	8006e38 <USB_DevInit+0x68>
    (void)USB_SetDevSpeed(USBx, USB_OTG_SPEED_FULL);
 8006ef0:	2103      	movs	r1, #3
 8006ef2:	e7a1      	b.n	8006e38 <USB_DevInit+0x68>
    if ((USBx_INEP(i)->DIEPCTL & USB_OTG_DIEPCTL_EPENA) == USB_OTG_DIEPCTL_EPENA)
 8006ef4:	f8d2 9000 	ldr.w	r9, [r2]
 8006ef8:	f1b9 0f00 	cmp.w	r9, #0
 8006efc:	da0b      	bge.n	8006f16 <USB_DevInit+0x146>
      if (i == 0U)
 8006efe:	b93b      	cbnz	r3, 8006f10 <USB_DevInit+0x140>
        USBx_INEP(i)->DIEPCTL = USB_OTG_DIEPCTL_SNAK;
 8006f00:	f8c2 e000 	str.w	lr, [r2]
    USBx_INEP(i)->DIEPTSIZ = 0U;
 8006f04:	6111      	str	r1, [r2, #16]
  for (i = 0U; i < cfg.dev_endpoints; i++)
 8006f06:	3301      	adds	r3, #1
    USBx_INEP(i)->DIEPINT  = 0xFB7FU;
 8006f08:	f8c2 8008 	str.w	r8, [r2, #8]
  for (i = 0U; i < cfg.dev_endpoints; i++)
 8006f0c:	3220      	adds	r2, #32
 8006f0e:	e7b0      	b.n	8006e72 <USB_DevInit+0xa2>
        USBx_INEP(i)->DIEPCTL = USB_OTG_DIEPCTL_EPDIS | USB_OTG_DIEPCTL_SNAK;
 8006f10:	f8c2 c000 	str.w	ip, [r2]
 8006f14:	e7f6      	b.n	8006f04 <USB_DevInit+0x134>
      USBx_INEP(i)->DIEPCTL = 0U;
 8006f16:	6011      	str	r1, [r2, #0]
 8006f18:	e7f4      	b.n	8006f04 <USB_DevInit+0x134>
    if ((USBx_OUTEP(i)->DOEPCTL & USB_OTG_DOEPCTL_EPENA) == USB_OTG_DOEPCTL_EPENA)
 8006f1a:	f8d3 9000 	ldr.w	r9, [r3]
 8006f1e:	f1b9 0f00 	cmp.w	r9, #0
 8006f22:	da0b      	bge.n	8006f3c <USB_DevInit+0x16c>
      if (i == 0U)
 8006f24:	b93a      	cbnz	r2, 8006f36 <USB_DevInit+0x166>
        USBx_OUTEP(i)->DOEPCTL = USB_OTG_DOEPCTL_SNAK;
 8006f26:	f8c3 e000 	str.w	lr, [r3]
    USBx_OUTEP(i)->DOEPTSIZ = 0U;
 8006f2a:	6119      	str	r1, [r3, #16]
  for (i = 0U; i < cfg.dev_endpoints; i++)
 8006f2c:	3201      	adds	r2, #1
    USBx_OUTEP(i)->DOEPINT  = 0xFB7FU;
 8006f2e:	f8c3 8008 	str.w	r8, [r3, #8]
  for (i = 0U; i < cfg.dev_endpoints; i++)
 8006f32:	3320      	adds	r3, #32
 8006f34:	e7a9      	b.n	8006e8a <USB_DevInit+0xba>
        USBx_OUTEP(i)->DOEPCTL = USB_OTG_DOEPCTL_EPDIS | USB_OTG_DOEPCTL_SNAK;
 8006f36:	f8c3 c000 	str.w	ip, [r3]
 8006f3a:	e7f6      	b.n	8006f2a <USB_DevInit+0x15a>
      USBx_OUTEP(i)->DOEPCTL = 0U;
 8006f3c:	6019      	str	r1, [r3, #0]
 8006f3e:	e7f4      	b.n	8006f2a <USB_DevInit+0x15a>
 8006f40:	803c3800 	.word	0x803c3800

08006f44 <USB_GetDevSpeed>:
  uint32_t DevEnumSpeed = USBx_DEVICE->DSTS & USB_OTG_DSTS_ENUMSPD;
 8006f44:	f8d0 3808 	ldr.w	r3, [r0, #2056]	@ 0x808
  if (DevEnumSpeed == DSTS_ENUMSPD_HS_PHY_30MHZ_OR_60MHZ)
 8006f48:	f013 0006 	ands.w	r0, r3, #6
 8006f4c:	d004      	beq.n	8006f58 <USB_GetDevSpeed+0x14>
    speed = 0xFU;
 8006f4e:	f013 0f02 	tst.w	r3, #2
 8006f52:	bf14      	ite	ne
 8006f54:	2002      	movne	r0, #2
 8006f56:	200f      	moveq	r0, #15
}
 8006f58:	4770      	bx	lr

08006f5a <USB_ActivateEndpoint>:
{
 8006f5a:	b530      	push	{r4, r5, lr}
  uint32_t epnum = (uint32_t)ep->num;
 8006f5c:	780c      	ldrb	r4, [r1, #0]
    USBx_DEVICE->DAINTMSK |= USB_OTG_DAINTMSK_IEPM & (uint32_t)(1UL << (ep->num & EP_ADDR_MSK));
 8006f5e:	2201      	movs	r2, #1
 8006f60:	f004 050f 	and.w	r5, r4, #15
 8006f64:	40aa      	lsls	r2, r5
  if (ep->is_in == 1U)
 8006f66:	784d      	ldrb	r5, [r1, #1]
 8006f68:	2d01      	cmp	r5, #1
    USBx_DEVICE->DAINTMSK |= USB_OTG_DAINTMSK_IEPM & (uint32_t)(1UL << (ep->num & EP_ADDR_MSK));
 8006f6a:	f500 6300 	add.w	r3, r0, #2048	@ 0x800
    if ((USBx_INEP(epnum)->DIEPCTL & USB_OTG_DIEPCTL_USBAEP) == 0U)
 8006f6e:	eb00 1044 	add.w	r0, r0, r4, lsl #5
  if (ep->is_in == 1U)
 8006f72:	d119      	bne.n	8006fa8 <USB_ActivateEndpoint+0x4e>
    USBx_DEVICE->DAINTMSK |= USB_OTG_DAINTMSK_IEPM & (uint32_t)(1UL << (ep->num & EP_ADDR_MSK));
 8006f74:	69dd      	ldr	r5, [r3, #28]
 8006f76:	432a      	orrs	r2, r5
 8006f78:	61da      	str	r2, [r3, #28]
    if ((USBx_INEP(epnum)->DIEPCTL & USB_OTG_DIEPCTL_USBAEP) == 0U)
 8006f7a:	f8d0 3900 	ldr.w	r3, [r0, #2304]	@ 0x900
 8006f7e:	041a      	lsls	r2, r3, #16
 8006f80:	d410      	bmi.n	8006fa4 <USB_ActivateEndpoint+0x4a>
      USBx_INEP(epnum)->DIEPCTL |= (ep->maxpacket & USB_OTG_DIEPCTL_MPSIZ) |
 8006f82:	688a      	ldr	r2, [r1, #8]
 8006f84:	f8d0 5900 	ldr.w	r5, [r0, #2304]	@ 0x900
 8006f88:	f3c2 030a 	ubfx	r3, r2, #0, #11
                                   ((uint32_t)ep->type << 18) | (epnum << 22) |
 8006f8c:	790a      	ldrb	r2, [r1, #4]
      USBx_INEP(epnum)->DIEPCTL |= (ep->maxpacket & USB_OTG_DIEPCTL_MPSIZ) |
 8006f8e:	432b      	orrs	r3, r5
 8006f90:	ea43 4382 	orr.w	r3, r3, r2, lsl #18
 8006f94:	ea43 5384 	orr.w	r3, r3, r4, lsl #22
 8006f98:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8006f9c:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 8006fa0:	f8c0 3900 	str.w	r3, [r0, #2304]	@ 0x900
}
 8006fa4:	2000      	movs	r0, #0
 8006fa6:	bd30      	pop	{r4, r5, pc}
    USBx_DEVICE->DAINTMSK |= USB_OTG_DAINTMSK_OEPM & ((uint32_t)(1UL << (ep->num & EP_ADDR_MSK)) << 16);
 8006fa8:	69dc      	ldr	r4, [r3, #28]
 8006faa:	ea44 4202 	orr.w	r2, r4, r2, lsl #16
 8006fae:	61da      	str	r2, [r3, #28]
    if (((USBx_OUTEP(epnum)->DOEPCTL) & USB_OTG_DOEPCTL_USBAEP) == 0U)
 8006fb0:	f8d0 3b00 	ldr.w	r3, [r0, #2816]	@ 0xb00
 8006fb4:	041b      	lsls	r3, r3, #16
 8006fb6:	d4f5      	bmi.n	8006fa4 <USB_ActivateEndpoint+0x4a>
      USBx_OUTEP(epnum)->DOEPCTL |= (ep->maxpacket & USB_OTG_DOEPCTL_MPSIZ) |
 8006fb8:	688b      	ldr	r3, [r1, #8]
 8006fba:	f8d0 2b00 	ldr.w	r2, [r0, #2816]	@ 0xb00
 8006fbe:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8006fc2:	4313      	orrs	r3, r2
                                    ((uint32_t)ep->type << 18) |
 8006fc4:	790a      	ldrb	r2, [r1, #4]
      USBx_OUTEP(epnum)->DOEPCTL |= (ep->maxpacket & USB_OTG_DOEPCTL_MPSIZ) |
 8006fc6:	ea43 4382 	orr.w	r3, r3, r2, lsl #18
 8006fca:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8006fce:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 8006fd2:	f8c0 3b00 	str.w	r3, [r0, #2816]	@ 0xb00
 8006fd6:	e7e5      	b.n	8006fa4 <USB_ActivateEndpoint+0x4a>

08006fd8 <USB_DeactivateEndpoint>:
{
 8006fd8:	b510      	push	{r4, lr}
  uint32_t epnum = (uint32_t)ep->num;
 8006fda:	780a      	ldrb	r2, [r1, #0]
  if (ep->is_in == 1U)
 8006fdc:	7849      	ldrb	r1, [r1, #1]
 8006fde:	2901      	cmp	r1, #1
    if ((USBx_INEP(epnum)->DIEPCTL & USB_OTG_DIEPCTL_EPENA) == USB_OTG_DIEPCTL_EPENA)
 8006fe0:	eb00 1342 	add.w	r3, r0, r2, lsl #5
 8006fe4:	f500 6000 	add.w	r0, r0, #2048	@ 0x800
 8006fe8:	f002 020f 	and.w	r2, r2, #15
  if (ep->is_in == 1U)
 8006fec:	d122      	bne.n	8007034 <USB_DeactivateEndpoint+0x5c>
    if ((USBx_INEP(epnum)->DIEPCTL & USB_OTG_DIEPCTL_EPENA) == USB_OTG_DIEPCTL_EPENA)
 8006fee:	f8d3 1900 	ldr.w	r1, [r3, #2304]	@ 0x900
 8006ff2:	2900      	cmp	r1, #0
 8006ff4:	da0b      	bge.n	800700e <USB_DeactivateEndpoint+0x36>
      USBx_INEP(epnum)->DIEPCTL |= USB_OTG_DIEPCTL_SNAK;
 8006ff6:	f8d3 1900 	ldr.w	r1, [r3, #2304]	@ 0x900
 8006ffa:	f041 6100 	orr.w	r1, r1, #134217728	@ 0x8000000
 8006ffe:	f8c3 1900 	str.w	r1, [r3, #2304]	@ 0x900
      USBx_INEP(epnum)->DIEPCTL |= USB_OTG_DIEPCTL_EPDIS;
 8007002:	f8d3 1900 	ldr.w	r1, [r3, #2304]	@ 0x900
 8007006:	f041 4180 	orr.w	r1, r1, #1073741824	@ 0x40000000
 800700a:	f8c3 1900 	str.w	r1, [r3, #2304]	@ 0x900
    USBx_DEVICE->DEACHMSK &= ~(USB_OTG_DAINTMSK_IEPM & (uint32_t)(1UL << (ep->num & EP_ADDR_MSK)));
 800700e:	6bc4      	ldr	r4, [r0, #60]	@ 0x3c
 8007010:	2101      	movs	r1, #1
 8007012:	fa01 f202 	lsl.w	r2, r1, r2
 8007016:	ea24 0402 	bic.w	r4, r4, r2
 800701a:	63c4      	str	r4, [r0, #60]	@ 0x3c
    USBx_DEVICE->DAINTMSK &= ~(USB_OTG_DAINTMSK_IEPM & (uint32_t)(1UL << (ep->num & EP_ADDR_MSK)));
 800701c:	69c1      	ldr	r1, [r0, #28]
 800701e:	ea21 0202 	bic.w	r2, r1, r2
 8007022:	61c2      	str	r2, [r0, #28]
    USBx_INEP(epnum)->DIEPCTL &= ~(USB_OTG_DIEPCTL_USBAEP |
 8007024:	f8d3 1900 	ldr.w	r1, [r3, #2304]	@ 0x900
 8007028:	4a14      	ldr	r2, [pc, #80]	@ (800707c <USB_DeactivateEndpoint+0xa4>)
 800702a:	400a      	ands	r2, r1
 800702c:	f8c3 2900 	str.w	r2, [r3, #2304]	@ 0x900
}
 8007030:	2000      	movs	r0, #0
 8007032:	bd10      	pop	{r4, pc}
    if ((USBx_OUTEP(epnum)->DOEPCTL & USB_OTG_DOEPCTL_EPENA) == USB_OTG_DOEPCTL_EPENA)
 8007034:	f8d3 1b00 	ldr.w	r1, [r3, #2816]	@ 0xb00
 8007038:	2900      	cmp	r1, #0
 800703a:	da0b      	bge.n	8007054 <USB_DeactivateEndpoint+0x7c>
      USBx_OUTEP(epnum)->DOEPCTL |= USB_OTG_DOEPCTL_SNAK;
 800703c:	f8d3 1b00 	ldr.w	r1, [r3, #2816]	@ 0xb00
 8007040:	f041 6100 	orr.w	r1, r1, #134217728	@ 0x8000000
 8007044:	f8c3 1b00 	str.w	r1, [r3, #2816]	@ 0xb00
      USBx_OUTEP(epnum)->DOEPCTL |= USB_OTG_DOEPCTL_EPDIS;
 8007048:	f8d3 1b00 	ldr.w	r1, [r3, #2816]	@ 0xb00
 800704c:	f041 4180 	orr.w	r1, r1, #1073741824	@ 0x40000000
 8007050:	f8c3 1b00 	str.w	r1, [r3, #2816]	@ 0xb00
    USBx_DEVICE->DEACHMSK &= ~(USB_OTG_DAINTMSK_OEPM & ((uint32_t)(1UL << (ep->num & EP_ADDR_MSK)) << 16));
 8007054:	6bc4      	ldr	r4, [r0, #60]	@ 0x3c
 8007056:	f44f 3180 	mov.w	r1, #65536	@ 0x10000
 800705a:	fa01 f202 	lsl.w	r2, r1, r2
 800705e:	ea24 0402 	bic.w	r4, r4, r2
 8007062:	63c4      	str	r4, [r0, #60]	@ 0x3c
    USBx_DEVICE->DAINTMSK &= ~(USB_OTG_DAINTMSK_OEPM & ((uint32_t)(1UL << (ep->num & EP_ADDR_MSK)) << 16));
 8007064:	69c1      	ldr	r1, [r0, #28]
 8007066:	ea21 0202 	bic.w	r2, r1, r2
 800706a:	61c2      	str	r2, [r0, #28]
    USBx_OUTEP(epnum)->DOEPCTL &= ~(USB_OTG_DOEPCTL_USBAEP |
 800706c:	f8d3 1b00 	ldr.w	r1, [r3, #2816]	@ 0xb00
 8007070:	4a03      	ldr	r2, [pc, #12]	@ (8007080 <USB_DeactivateEndpoint+0xa8>)
 8007072:	400a      	ands	r2, r1
 8007074:	f8c3 2b00 	str.w	r2, [r3, #2816]	@ 0xb00
 8007078:	e7da      	b.n	8007030 <USB_DeactivateEndpoint+0x58>
 800707a:	bf00      	nop
 800707c:	ec337800 	.word	0xec337800
 8007080:	eff37800 	.word	0xeff37800

08007084 <USB_EPStopXfer>:
{
 8007084:	b082      	sub	sp, #8
  __IO uint32_t count = 0U;
 8007086:	2300      	movs	r3, #0
  if (ep->is_in == 1U)
 8007088:	784a      	ldrb	r2, [r1, #1]
  __IO uint32_t count = 0U;
 800708a:	9301      	str	r3, [sp, #4]
    if (((USBx_INEP(ep->num)->DIEPCTL) & USB_OTG_DIEPCTL_EPENA) == USB_OTG_DIEPCTL_EPENA)
 800708c:	780b      	ldrb	r3, [r1, #0]
  if (ep->is_in == 1U)
 800708e:	2a01      	cmp	r2, #1
    if (((USBx_INEP(ep->num)->DIEPCTL) & USB_OTG_DIEPCTL_EPENA) == USB_OTG_DIEPCTL_EPENA)
 8007090:	ea4f 1343 	mov.w	r3, r3, lsl #5
  if (ep->is_in == 1U)
 8007094:	d11e      	bne.n	80070d4 <USB_EPStopXfer+0x50>
    if (((USBx_INEP(ep->num)->DIEPCTL) & USB_OTG_DIEPCTL_EPENA) == USB_OTG_DIEPCTL_EPENA)
 8007096:	f500 6010 	add.w	r0, r0, #2304	@ 0x900
 800709a:	18c1      	adds	r1, r0, r3
 800709c:	58c2      	ldr	r2, [r0, r3]
 800709e:	2a00      	cmp	r2, #0
 80070a0:	db02      	blt.n	80070a8 <USB_EPStopXfer+0x24>
  HAL_StatusTypeDef ret = HAL_OK;
 80070a2:	2000      	movs	r0, #0
}
 80070a4:	b002      	add	sp, #8
 80070a6:	4770      	bx	lr
      USBx_INEP(ep->num)->DIEPCTL |= (USB_OTG_DIEPCTL_SNAK);
 80070a8:	58c2      	ldr	r2, [r0, r3]
 80070aa:	f042 6200 	orr.w	r2, r2, #134217728	@ 0x8000000
 80070ae:	50c2      	str	r2, [r0, r3]
      USBx_INEP(ep->num)->DIEPCTL |= (USB_OTG_DIEPCTL_EPDIS);
 80070b0:	58c2      	ldr	r2, [r0, r3]
 80070b2:	f042 4280 	orr.w	r2, r2, #1073741824	@ 0x40000000
 80070b6:	50c2      	str	r2, [r0, r3]
        if (count > 10000U)
 80070b8:	f242 7210 	movw	r2, #10000	@ 0x2710
        count++;
 80070bc:	9b01      	ldr	r3, [sp, #4]
 80070be:	3301      	adds	r3, #1
 80070c0:	9301      	str	r3, [sp, #4]
        if (count > 10000U)
 80070c2:	9b01      	ldr	r3, [sp, #4]
 80070c4:	4293      	cmp	r3, r2
 80070c6:	d901      	bls.n	80070cc <USB_EPStopXfer+0x48>
          ret = HAL_ERROR;
 80070c8:	2001      	movs	r0, #1
 80070ca:	e7eb      	b.n	80070a4 <USB_EPStopXfer+0x20>
      } while (((USBx_INEP(ep->num)->DIEPCTL) & USB_OTG_DIEPCTL_EPENA) ==  USB_OTG_DIEPCTL_EPENA);
 80070cc:	680b      	ldr	r3, [r1, #0]
 80070ce:	2b00      	cmp	r3, #0
 80070d0:	dbf4      	blt.n	80070bc <USB_EPStopXfer+0x38>
 80070d2:	e7e6      	b.n	80070a2 <USB_EPStopXfer+0x1e>
    if (((USBx_OUTEP(ep->num)->DOEPCTL) & USB_OTG_DOEPCTL_EPENA) == USB_OTG_DOEPCTL_EPENA)
 80070d4:	f500 6030 	add.w	r0, r0, #2816	@ 0xb00
 80070d8:	18c1      	adds	r1, r0, r3
 80070da:	58c2      	ldr	r2, [r0, r3]
 80070dc:	2a00      	cmp	r2, #0
 80070de:	dae0      	bge.n	80070a2 <USB_EPStopXfer+0x1e>
      USBx_OUTEP(ep->num)->DOEPCTL |= (USB_OTG_DOEPCTL_SNAK);
 80070e0:	58c2      	ldr	r2, [r0, r3]
 80070e2:	f042 6200 	orr.w	r2, r2, #134217728	@ 0x8000000
 80070e6:	50c2      	str	r2, [r0, r3]
      USBx_OUTEP(ep->num)->DOEPCTL |= (USB_OTG_DOEPCTL_EPDIS);
 80070e8:	58c2      	ldr	r2, [r0, r3]
 80070ea:	f042 4280 	orr.w	r2, r2, #1073741824	@ 0x40000000
 80070ee:	50c2      	str	r2, [r0, r3]
        if (count > 10000U)
 80070f0:	f242 7210 	movw	r2, #10000	@ 0x2710
        count++;
 80070f4:	9b01      	ldr	r3, [sp, #4]
 80070f6:	3301      	adds	r3, #1
 80070f8:	9301      	str	r3, [sp, #4]
        if (count > 10000U)
 80070fa:	9b01      	ldr	r3, [sp, #4]
 80070fc:	4293      	cmp	r3, r2
 80070fe:	d8e3      	bhi.n	80070c8 <USB_EPStopXfer+0x44>
      } while (((USBx_OUTEP(ep->num)->DOEPCTL) & USB_OTG_DOEPCTL_EPENA) ==  USB_OTG_DOEPCTL_EPENA);
 8007100:	680b      	ldr	r3, [r1, #0]
 8007102:	2b00      	cmp	r3, #0
 8007104:	dbf6      	blt.n	80070f4 <USB_EPStopXfer+0x70>
 8007106:	e7cc      	b.n	80070a2 <USB_EPStopXfer+0x1e>

08007108 <USB_WritePacket>:
{
 8007108:	b510      	push	{r4, lr}
 800710a:	f89d 4008 	ldrb.w	r4, [sp, #8]
  if (dma == 0U)
 800710e:	b944      	cbnz	r4, 8007122 <USB_WritePacket+0x1a>
    count32b = ((uint32_t)len + 3U) / 4U;
 8007110:	3303      	adds	r3, #3
      USBx_DFIFO((uint32_t)ch_ep_num) = __UNALIGNED_UINT32_READ(pSrc);
 8007112:	3201      	adds	r2, #1
    count32b = ((uint32_t)len + 3U) / 4U;
 8007114:	089b      	lsrs	r3, r3, #2
      USBx_DFIFO((uint32_t)ch_ep_num) = __UNALIGNED_UINT32_READ(pSrc);
 8007116:	eb00 3002 	add.w	r0, r0, r2, lsl #12
 800711a:	eb01 0383 	add.w	r3, r1, r3, lsl #2
    for (i = 0U; i < count32b; i++)
 800711e:	4299      	cmp	r1, r3
 8007120:	d101      	bne.n	8007126 <USB_WritePacket+0x1e>
}
 8007122:	2000      	movs	r0, #0
 8007124:	bd10      	pop	{r4, pc}
      USBx_DFIFO((uint32_t)ch_ep_num) = __UNALIGNED_UINT32_READ(pSrc);
 8007126:	f851 2b04 	ldr.w	r2, [r1], #4
 800712a:	6002      	str	r2, [r0, #0]
    for (i = 0U; i < count32b; i++)
 800712c:	e7f7      	b.n	800711e <USB_WritePacket+0x16>
	...

08007130 <USB_EPStartXfer>:
{
 8007130:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
  if (ep->is_in == 1U)
 8007134:	784b      	ldrb	r3, [r1, #1]
    if (ep->xfer_len == 0U)
 8007136:	690c      	ldr	r4, [r1, #16]
        if (ep->type == EP_TYPE_ISOC)
 8007138:	790f      	ldrb	r7, [r1, #4]
 800713a:	f8df e1f0 	ldr.w	lr, [pc, #496]	@ 800732c <USB_EPStartXfer+0x1fc>
 800713e:	f8df 81f0 	ldr.w	r8, [pc, #496]	@ 8007330 <USB_EPStartXfer+0x200>
{
 8007142:	4616      	mov	r6, r2
  uint32_t epnum = (uint32_t)ep->num;
 8007144:	780a      	ldrb	r2, [r1, #0]
  if (ep->is_in == 1U)
 8007146:	2b01      	cmp	r3, #1
      USBx_INEP(epnum)->DIEPTSIZ &= ~(USB_OTG_DIEPTSIZ_PKTCNT);
 8007148:	eb00 1542 	add.w	r5, r0, r2, lsl #5
  if (ep->is_in == 1U)
 800714c:	f040 8097 	bne.w	800727e <USB_EPStartXfer+0x14e>
      USBx_INEP(epnum)->DIEPTSIZ &= ~(USB_OTG_DIEPTSIZ_PKTCNT);
 8007150:	f505 6c10 	add.w	ip, r5, #2304	@ 0x900
 8007154:	f8dc 3010 	ldr.w	r3, [ip, #16]
    if (ep->xfer_len == 0U)
 8007158:	bb74      	cbnz	r4, 80071b8 <USB_EPStartXfer+0x88>
      USBx_INEP(epnum)->DIEPTSIZ &= ~(USB_OTG_DIEPTSIZ_PKTCNT);
 800715a:	ea03 030e 	and.w	r3, r3, lr
 800715e:	f8cc 3010 	str.w	r3, [ip, #16]
      USBx_INEP(epnum)->DIEPTSIZ |= (USB_OTG_DIEPTSIZ_PKTCNT & (1U << 19));
 8007162:	f8dc 3010 	ldr.w	r3, [ip, #16]
 8007166:	f443 2300 	orr.w	r3, r3, #524288	@ 0x80000
 800716a:	f8cc 3010 	str.w	r3, [ip, #16]
      USBx_INEP(epnum)->DIEPTSIZ &= ~(USB_OTG_DIEPTSIZ_XFRSIZ);
 800716e:	f8dc 3010 	ldr.w	r3, [ip, #16]
 8007172:	ea03 0308 	and.w	r3, r3, r8
    if (dma == 1U)
 8007176:	2e01      	cmp	r6, #1
      USBx_INEP(epnum)->DIEPTSIZ |= (USB_OTG_DIEPTSIZ_XFRSIZ & ep->xfer_len);
 8007178:	f8cc 3010 	str.w	r3, [ip, #16]
    if (dma == 1U)
 800717c:	d157      	bne.n	800722e <USB_EPStartXfer+0xfe>
      if ((uint32_t)ep->dma_addr != 0U)
 800717e:	69cb      	ldr	r3, [r1, #28]
 8007180:	b10b      	cbz	r3, 8007186 <USB_EPStartXfer+0x56>
        USBx_INEP(epnum)->DIEPDMA = (uint32_t)(ep->dma_addr);
 8007182:	f8cc 3014 	str.w	r3, [ip, #20]
      if (ep->type == EP_TYPE_ISOC)
 8007186:	2f01      	cmp	r7, #1
 8007188:	d10c      	bne.n	80071a4 <USB_EPStartXfer+0x74>
        if ((USBx_DEVICE->DSTS & (1U << 8)) == 0U)
 800718a:	f8d0 3808 	ldr.w	r3, [r0, #2056]	@ 0x808
 800718e:	f413 7f80 	tst.w	r3, #256	@ 0x100
          USBx_INEP(epnum)->DIEPCTL |= USB_OTG_DIEPCTL_SODDFRM;
 8007192:	f8d5 3900 	ldr.w	r3, [r5, #2304]	@ 0x900
 8007196:	bf0c      	ite	eq
 8007198:	f043 5300 	orreq.w	r3, r3, #536870912	@ 0x20000000
          USBx_INEP(epnum)->DIEPCTL |= USB_OTG_DIEPCTL_SD0PID_SEVNFRM;
 800719c:	f043 5380 	orrne.w	r3, r3, #268435456	@ 0x10000000
 80071a0:	f8c5 3900 	str.w	r3, [r5, #2304]	@ 0x900
      USBx_INEP(epnum)->DIEPCTL |= (USB_OTG_DIEPCTL_CNAK | USB_OTG_DIEPCTL_EPENA);
 80071a4:	f8d5 3900 	ldr.w	r3, [r5, #2304]	@ 0x900
 80071a8:	f043 4304 	orr.w	r3, r3, #2214592512	@ 0x84000000
 80071ac:	f8c5 3900 	str.w	r3, [r5, #2304]	@ 0x900
}
 80071b0:	2000      	movs	r0, #0
 80071b2:	b002      	add	sp, #8
 80071b4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      USBx_INEP(epnum)->DIEPTSIZ &= ~(USB_OTG_DIEPTSIZ_XFRSIZ);
 80071b8:	ea03 0308 	and.w	r3, r3, r8
 80071bc:	f8cc 3010 	str.w	r3, [ip, #16]
      USBx_INEP(epnum)->DIEPTSIZ &= ~(USB_OTG_DIEPTSIZ_PKTCNT);
 80071c0:	f8dc 3010 	ldr.w	r3, [ip, #16]
 80071c4:	ea03 030e 	and.w	r3, r3, lr
 80071c8:	f8cc 3010 	str.w	r3, [ip, #16]
        if (ep->xfer_len > ep->maxpacket)
 80071cc:	688b      	ldr	r3, [r1, #8]
      if (epnum == 0U)
 80071ce:	b97a      	cbnz	r2, 80071f0 <USB_EPStartXfer+0xc0>
        if (ep->xfer_len > ep->maxpacket)
 80071d0:	42a3      	cmp	r3, r4
          ep->xfer_len = ep->maxpacket;
 80071d2:	bf38      	it	cc
 80071d4:	610b      	strcc	r3, [r1, #16]
        USBx_INEP(epnum)->DIEPTSIZ |= (USB_OTG_DIEPTSIZ_PKTCNT & (1U << 19));
 80071d6:	f8dc 3010 	ldr.w	r3, [ip, #16]
 80071da:	f443 2300 	orr.w	r3, r3, #524288	@ 0x80000
          USBx_INEP(epnum)->DIEPTSIZ |= (USB_OTG_DIEPTSIZ_MULCNT & (pktcnt << 29));
 80071de:	f8cc 3010 	str.w	r3, [ip, #16]
      USBx_INEP(epnum)->DIEPTSIZ |= (USB_OTG_DIEPTSIZ_XFRSIZ & ep->xfer_len);
 80071e2:	690b      	ldr	r3, [r1, #16]
 80071e4:	f8dc 4010 	ldr.w	r4, [ip, #16]
 80071e8:	f3c3 0312 	ubfx	r3, r3, #0, #19
 80071ec:	4323      	orrs	r3, r4
 80071ee:	e7c2      	b.n	8007176 <USB_EPStartXfer+0x46>
        pktcnt = (uint16_t)((ep->xfer_len + ep->maxpacket - 1U) / ep->maxpacket);
 80071f0:	441c      	add	r4, r3
 80071f2:	3c01      	subs	r4, #1
 80071f4:	fbb4 f4f3 	udiv	r4, r4, r3
        USBx_INEP(epnum)->DIEPTSIZ |= (USB_OTG_DIEPTSIZ_PKTCNT & (pktcnt << 19));
 80071f8:	4b4b      	ldr	r3, [pc, #300]	@ (8007328 <USB_EPStartXfer+0x1f8>)
 80071fa:	f8dc e010 	ldr.w	lr, [ip, #16]
 80071fe:	fa1f f884 	uxth.w	r8, r4
 8007202:	ea03 44c4 	and.w	r4, r3, r4, lsl #19
 8007206:	ea44 040e 	orr.w	r4, r4, lr
        if (ep->type == EP_TYPE_ISOC)
 800720a:	2f01      	cmp	r7, #1
        USBx_INEP(epnum)->DIEPTSIZ |= (USB_OTG_DIEPTSIZ_PKTCNT & (pktcnt << 19));
 800720c:	f8cc 4010 	str.w	r4, [ip, #16]
        if (ep->type == EP_TYPE_ISOC)
 8007210:	d1e7      	bne.n	80071e2 <USB_EPStartXfer+0xb2>
          USBx_INEP(epnum)->DIEPTSIZ &= ~(USB_OTG_DIEPTSIZ_MULCNT);
 8007212:	f8dc 3010 	ldr.w	r3, [ip, #16]
 8007216:	f023 43c0 	bic.w	r3, r3, #1610612736	@ 0x60000000
 800721a:	f8cc 3010 	str.w	r3, [ip, #16]
          USBx_INEP(epnum)->DIEPTSIZ |= (USB_OTG_DIEPTSIZ_MULCNT & (pktcnt << 29));
 800721e:	f8dc 4010 	ldr.w	r4, [ip, #16]
 8007222:	ea4f 7348 	mov.w	r3, r8, lsl #29
 8007226:	f003 43c0 	and.w	r3, r3, #1610612736	@ 0x60000000
 800722a:	4323      	orrs	r3, r4
 800722c:	e7d7      	b.n	80071de <USB_EPStartXfer+0xae>
      USBx_INEP(epnum)->DIEPCTL |= (USB_OTG_DIEPCTL_CNAK | USB_OTG_DIEPCTL_EPENA);
 800722e:	f8d5 3900 	ldr.w	r3, [r5, #2304]	@ 0x900
      if (ep->type != EP_TYPE_ISOC)
 8007232:	2f01      	cmp	r7, #1
      USBx_INEP(epnum)->DIEPCTL |= (USB_OTG_DIEPCTL_CNAK | USB_OTG_DIEPCTL_EPENA);
 8007234:	f043 4304 	orr.w	r3, r3, #2214592512	@ 0x84000000
 8007238:	f8c5 3900 	str.w	r3, [r5, #2304]	@ 0x900
        if (ep->xfer_len > 0U)
 800723c:	690b      	ldr	r3, [r1, #16]
      if (ep->type != EP_TYPE_ISOC)
 800723e:	d00b      	beq.n	8007258 <USB_EPStartXfer+0x128>
        if (ep->xfer_len > 0U)
 8007240:	2b00      	cmp	r3, #0
 8007242:	d0b5      	beq.n	80071b0 <USB_EPStartXfer+0x80>
          USBx_DEVICE->DIEPEMPMSK |= 1UL << (ep->num & EP_ADDR_MSK);
 8007244:	f8d0 1834 	ldr.w	r1, [r0, #2100]	@ 0x834
 8007248:	f002 020f 	and.w	r2, r2, #15
 800724c:	2301      	movs	r3, #1
 800724e:	4093      	lsls	r3, r2
 8007250:	430b      	orrs	r3, r1
 8007252:	f8c0 3834 	str.w	r3, [r0, #2100]	@ 0x834
 8007256:	e7ab      	b.n	80071b0 <USB_EPStartXfer+0x80>
        if ((USBx_DEVICE->DSTS & (1U << 8)) == 0U)
 8007258:	f8d0 4808 	ldr.w	r4, [r0, #2056]	@ 0x808
 800725c:	f414 7f80 	tst.w	r4, #256	@ 0x100
          USBx_INEP(epnum)->DIEPCTL |= USB_OTG_DIEPCTL_SODDFRM;
 8007260:	f8d5 4900 	ldr.w	r4, [r5, #2304]	@ 0x900
 8007264:	bf0c      	ite	eq
 8007266:	f044 5400 	orreq.w	r4, r4, #536870912	@ 0x20000000
          USBx_INEP(epnum)->DIEPCTL |= USB_OTG_DIEPCTL_SD0PID_SEVNFRM;
 800726a:	f044 5480 	orrne.w	r4, r4, #268435456	@ 0x10000000
 800726e:	f8c5 4900 	str.w	r4, [r5, #2304]	@ 0x900
        (void)USB_WritePacket(USBx, ep->xfer_buff, ep->num, (uint16_t)ep->xfer_len, dma);
 8007272:	9600      	str	r6, [sp, #0]
 8007274:	68c9      	ldr	r1, [r1, #12]
 8007276:	b29b      	uxth	r3, r3
 8007278:	f7ff ff46 	bl	8007108 <USB_WritePacket>
 800727c:	e798      	b.n	80071b0 <USB_EPStartXfer+0x80>
    USBx_OUTEP(epnum)->DOEPTSIZ &= ~(USB_OTG_DOEPTSIZ_XFRSIZ);
 800727e:	f8d5 3b10 	ldr.w	r3, [r5, #2832]	@ 0xb10
 8007282:	ea03 0308 	and.w	r3, r3, r8
 8007286:	f8c5 3b10 	str.w	r3, [r5, #2832]	@ 0xb10
    USBx_OUTEP(epnum)->DOEPTSIZ &= ~(USB_OTG_DOEPTSIZ_PKTCNT);
 800728a:	f8d5 3b10 	ldr.w	r3, [r5, #2832]	@ 0xb10
 800728e:	ea03 030e 	and.w	r3, r3, lr
    USBx_OUTEP(epnum)->DOEPTSIZ &= ~(USB_OTG_DOEPTSIZ_XFRSIZ);
 8007292:	f505 6c30 	add.w	ip, r5, #2816	@ 0xb00
    USBx_OUTEP(epnum)->DOEPTSIZ &= ~(USB_OTG_DOEPTSIZ_PKTCNT);
 8007296:	f8cc 3010 	str.w	r3, [ip, #16]
        ep->xfer_len = ep->maxpacket;
 800729a:	688b      	ldr	r3, [r1, #8]
    if (epnum == 0U)
 800729c:	bb5a      	cbnz	r2, 80072f6 <USB_EPStartXfer+0x1c6>
      if (ep->xfer_len > 0U)
 800729e:	b104      	cbz	r4, 80072a2 <USB_EPStartXfer+0x172>
        ep->xfer_len = ep->maxpacket;
 80072a0:	610b      	str	r3, [r1, #16]
      ep->xfer_size = ep->maxpacket;
 80072a2:	620b      	str	r3, [r1, #32]
        USBx_OUTEP(epnum)->DOEPTSIZ |= (USB_OTG_DOEPTSIZ_XFRSIZ & ep->maxpacket);
 80072a4:	f8dc 2010 	ldr.w	r2, [ip, #16]
 80072a8:	f3c3 0312 	ubfx	r3, r3, #0, #19
 80072ac:	4313      	orrs	r3, r2
 80072ae:	f8cc 3010 	str.w	r3, [ip, #16]
        USBx_OUTEP(epnum)->DOEPTSIZ |= (USB_OTG_DOEPTSIZ_PKTCNT & (1U << 19));
 80072b2:	f8dc 3010 	ldr.w	r3, [ip, #16]
 80072b6:	f443 2300 	orr.w	r3, r3, #524288	@ 0x80000
    if (dma == 1U)
 80072ba:	2e01      	cmp	r6, #1
        USBx_OUTEP(epnum)->DOEPTSIZ |= USB_OTG_DOEPTSIZ_XFRSIZ & ep->xfer_size;
 80072bc:	f8cc 3010 	str.w	r3, [ip, #16]
    if (dma == 1U)
 80072c0:	d103      	bne.n	80072ca <USB_EPStartXfer+0x19a>
      if ((uint32_t)ep->xfer_buff != 0U)
 80072c2:	68cb      	ldr	r3, [r1, #12]
 80072c4:	b10b      	cbz	r3, 80072ca <USB_EPStartXfer+0x19a>
        USBx_OUTEP(epnum)->DOEPDMA = (uint32_t)(ep->xfer_buff);
 80072c6:	f8cc 3014 	str.w	r3, [ip, #20]
    if (ep->type == EP_TYPE_ISOC)
 80072ca:	2f01      	cmp	r7, #1
 80072cc:	d10c      	bne.n	80072e8 <USB_EPStartXfer+0x1b8>
      if ((USBx_DEVICE->DSTS & (1U << 8)) == 0U)
 80072ce:	f8d0 3808 	ldr.w	r3, [r0, #2056]	@ 0x808
 80072d2:	f413 7f80 	tst.w	r3, #256	@ 0x100
        USBx_OUTEP(epnum)->DOEPCTL |= USB_OTG_DOEPCTL_SODDFRM;
 80072d6:	f8d5 3b00 	ldr.w	r3, [r5, #2816]	@ 0xb00
 80072da:	bf0c      	ite	eq
 80072dc:	f043 5300 	orreq.w	r3, r3, #536870912	@ 0x20000000
        USBx_OUTEP(epnum)->DOEPCTL |= USB_OTG_DOEPCTL_SD0PID_SEVNFRM;
 80072e0:	f043 5380 	orrne.w	r3, r3, #268435456	@ 0x10000000
 80072e4:	f8c5 3b00 	str.w	r3, [r5, #2816]	@ 0xb00
    USBx_OUTEP(epnum)->DOEPCTL |= (USB_OTG_DOEPCTL_CNAK | USB_OTG_DOEPCTL_EPENA);
 80072e8:	f8d5 3b00 	ldr.w	r3, [r5, #2816]	@ 0xb00
 80072ec:	f043 4304 	orr.w	r3, r3, #2214592512	@ 0x84000000
 80072f0:	f8c5 3b00 	str.w	r3, [r5, #2816]	@ 0xb00
 80072f4:	e75c      	b.n	80071b0 <USB_EPStartXfer+0x80>
      if (ep->xfer_len == 0U)
 80072f6:	2c00      	cmp	r4, #0
 80072f8:	d0d4      	beq.n	80072a4 <USB_EPStartXfer+0x174>
        pktcnt = (uint16_t)((ep->xfer_len + ep->maxpacket - 1U) / ep->maxpacket);
 80072fa:	441c      	add	r4, r3
        USBx_OUTEP(epnum)->DOEPTSIZ |= USB_OTG_DOEPTSIZ_PKTCNT & ((uint32_t)pktcnt << 19);
 80072fc:	4a0a      	ldr	r2, [pc, #40]	@ (8007328 <USB_EPStartXfer+0x1f8>)
 80072fe:	f8dc e010 	ldr.w	lr, [ip, #16]
        pktcnt = (uint16_t)((ep->xfer_len + ep->maxpacket - 1U) / ep->maxpacket);
 8007302:	3c01      	subs	r4, #1
 8007304:	fbb4 f4f3 	udiv	r4, r4, r3
 8007308:	b2a4      	uxth	r4, r4
        USBx_OUTEP(epnum)->DOEPTSIZ |= USB_OTG_DOEPTSIZ_PKTCNT & ((uint32_t)pktcnt << 19);
 800730a:	ea02 42c4 	and.w	r2, r2, r4, lsl #19
        ep->xfer_size = ep->maxpacket * pktcnt;
 800730e:	4363      	muls	r3, r4
        USBx_OUTEP(epnum)->DOEPTSIZ |= USB_OTG_DOEPTSIZ_PKTCNT & ((uint32_t)pktcnt << 19);
 8007310:	ea42 020e 	orr.w	r2, r2, lr
        ep->xfer_size = ep->maxpacket * pktcnt;
 8007314:	620b      	str	r3, [r1, #32]
        USBx_OUTEP(epnum)->DOEPTSIZ |= USB_OTG_DOEPTSIZ_PKTCNT & ((uint32_t)pktcnt << 19);
 8007316:	f8cc 2010 	str.w	r2, [ip, #16]
        USBx_OUTEP(epnum)->DOEPTSIZ |= USB_OTG_DOEPTSIZ_XFRSIZ & ep->xfer_size;
 800731a:	f8dc 2010 	ldr.w	r2, [ip, #16]
 800731e:	f3c3 0312 	ubfx	r3, r3, #0, #19
 8007322:	4313      	orrs	r3, r2
 8007324:	e7c9      	b.n	80072ba <USB_EPStartXfer+0x18a>
 8007326:	bf00      	nop
 8007328:	1ff80000 	.word	0x1ff80000
 800732c:	e007ffff 	.word	0xe007ffff
 8007330:	fff80000 	.word	0xfff80000

08007334 <USB_ReadPacket>:
{
 8007334:	4603      	mov	r3, r0
 8007336:	b570      	push	{r4, r5, r6, lr}
  for (i = 0U; i < count32b; i++)
 8007338:	2000      	movs	r0, #0
  uint32_t count32b = (uint32_t)len >> 2U;
 800733a:	0894      	lsrs	r4, r2, #2
    __UNALIGNED_UINT32_WRITE(pDest, USBx_DFIFO(0U));
 800733c:	f503 5580 	add.w	r5, r3, #4096	@ 0x1000
  uint16_t remaining_bytes = len % 4U;
 8007340:	f002 0203 	and.w	r2, r2, #3
  for (i = 0U; i < count32b; i++)
 8007344:	42a0      	cmp	r0, r4
 8007346:	d310      	bcc.n	800736a <USB_ReadPacket+0x36>
 8007348:	eb01 0084 	add.w	r0, r1, r4, lsl #2
  if (remaining_bytes != 0U)
 800734c:	b162      	cbz	r2, 8007368 <USB_ReadPacket+0x34>
    __UNALIGNED_UINT32_WRITE(&pData, USBx_DFIFO(0U));
 800734e:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 8007352:	681c      	ldr	r4, [r3, #0]
    i = 0U;
 8007354:	2300      	movs	r3, #0
      *(uint8_t *)pDest = (uint8_t)(pData >> (8U * (uint8_t)(i)));
 8007356:	00d9      	lsls	r1, r3, #3
 8007358:	fa24 f101 	lsr.w	r1, r4, r1
 800735c:	54c1      	strb	r1, [r0, r3]
      i++;
 800735e:	3301      	adds	r3, #1
    } while (remaining_bytes != 0U);
 8007360:	b299      	uxth	r1, r3
 8007362:	428a      	cmp	r2, r1
 8007364:	d1f7      	bne.n	8007356 <USB_ReadPacket+0x22>
 8007366:	4410      	add	r0, r2
}
 8007368:	bd70      	pop	{r4, r5, r6, pc}
    __UNALIGNED_UINT32_WRITE(pDest, USBx_DFIFO(0U));
 800736a:	682e      	ldr	r6, [r5, #0]
 800736c:	f841 6020 	str.w	r6, [r1, r0, lsl #2]
  for (i = 0U; i < count32b; i++)
 8007370:	3001      	adds	r0, #1
 8007372:	e7e7      	b.n	8007344 <USB_ReadPacket+0x10>

08007374 <USB_EPSetStall>:
  if (ep->is_in == 1U)
 8007374:	784a      	ldrb	r2, [r1, #1]
  uint32_t epnum = (uint32_t)ep->num;
 8007376:	780b      	ldrb	r3, [r1, #0]
  if (ep->is_in == 1U)
 8007378:	2a01      	cmp	r2, #1
    if (((USBx_INEP(epnum)->DIEPCTL & USB_OTG_DIEPCTL_EPENA) == 0U) && (epnum != 0U))
 800737a:	eb00 1043 	add.w	r0, r0, r3, lsl #5
  if (ep->is_in == 1U)
 800737e:	d112      	bne.n	80073a6 <USB_EPSetStall+0x32>
    if (((USBx_INEP(epnum)->DIEPCTL & USB_OTG_DIEPCTL_EPENA) == 0U) && (epnum != 0U))
 8007380:	f8d0 2900 	ldr.w	r2, [r0, #2304]	@ 0x900
 8007384:	2a00      	cmp	r2, #0
 8007386:	db06      	blt.n	8007396 <USB_EPSetStall+0x22>
 8007388:	b12b      	cbz	r3, 8007396 <USB_EPSetStall+0x22>
      USBx_INEP(epnum)->DIEPCTL &= ~(USB_OTG_DIEPCTL_EPDIS);
 800738a:	f8d0 3900 	ldr.w	r3, [r0, #2304]	@ 0x900
 800738e:	f023 4380 	bic.w	r3, r3, #1073741824	@ 0x40000000
 8007392:	f8c0 3900 	str.w	r3, [r0, #2304]	@ 0x900
    USBx_INEP(epnum)->DIEPCTL |= USB_OTG_DIEPCTL_STALL;
 8007396:	f8d0 3900 	ldr.w	r3, [r0, #2304]	@ 0x900
 800739a:	f443 1300 	orr.w	r3, r3, #2097152	@ 0x200000
 800739e:	f8c0 3900 	str.w	r3, [r0, #2304]	@ 0x900
}
 80073a2:	2000      	movs	r0, #0
 80073a4:	4770      	bx	lr
    if (((USBx_OUTEP(epnum)->DOEPCTL & USB_OTG_DOEPCTL_EPENA) == 0U) && (epnum != 0U))
 80073a6:	f8d0 2b00 	ldr.w	r2, [r0, #2816]	@ 0xb00
 80073aa:	2a00      	cmp	r2, #0
 80073ac:	db06      	blt.n	80073bc <USB_EPSetStall+0x48>
 80073ae:	b12b      	cbz	r3, 80073bc <USB_EPSetStall+0x48>
      USBx_OUTEP(epnum)->DOEPCTL &= ~(USB_OTG_DOEPCTL_EPDIS);
 80073b0:	f8d0 3b00 	ldr.w	r3, [r0, #2816]	@ 0xb00
 80073b4:	f023 4380 	bic.w	r3, r3, #1073741824	@ 0x40000000
 80073b8:	f8c0 3b00 	str.w	r3, [r0, #2816]	@ 0xb00
    USBx_OUTEP(epnum)->DOEPCTL |= USB_OTG_DOEPCTL_STALL;
 80073bc:	f8d0 3b00 	ldr.w	r3, [r0, #2816]	@ 0xb00
 80073c0:	f443 1300 	orr.w	r3, r3, #2097152	@ 0x200000
 80073c4:	f8c0 3b00 	str.w	r3, [r0, #2816]	@ 0xb00
 80073c8:	e7eb      	b.n	80073a2 <USB_EPSetStall+0x2e>

080073ca <USB_EPClearStall>:
    USBx_INEP(epnum)->DIEPCTL &= ~USB_OTG_DIEPCTL_STALL;
 80073ca:	780b      	ldrb	r3, [r1, #0]
  if (ep->is_in == 1U)
 80073cc:	784a      	ldrb	r2, [r1, #1]
    USBx_INEP(epnum)->DIEPCTL &= ~USB_OTG_DIEPCTL_STALL;
 80073ce:	eb00 1043 	add.w	r0, r0, r3, lsl #5
    if ((ep->type == EP_TYPE_INTR) || (ep->type == EP_TYPE_BULK))
 80073d2:	790b      	ldrb	r3, [r1, #4]
  if (ep->is_in == 1U)
 80073d4:	2a01      	cmp	r2, #1
    if ((ep->type == EP_TYPE_INTR) || (ep->type == EP_TYPE_BULK))
 80073d6:	f1a3 0302 	sub.w	r3, r3, #2
 80073da:	b2db      	uxtb	r3, r3
  if (ep->is_in == 1U)
 80073dc:	d10f      	bne.n	80073fe <USB_EPClearStall+0x34>
    USBx_INEP(epnum)->DIEPCTL &= ~USB_OTG_DIEPCTL_STALL;
 80073de:	f8d0 2900 	ldr.w	r2, [r0, #2304]	@ 0x900
    if ((ep->type == EP_TYPE_INTR) || (ep->type == EP_TYPE_BULK))
 80073e2:	2b01      	cmp	r3, #1
    USBx_INEP(epnum)->DIEPCTL &= ~USB_OTG_DIEPCTL_STALL;
 80073e4:	f422 1200 	bic.w	r2, r2, #2097152	@ 0x200000
 80073e8:	f8c0 2900 	str.w	r2, [r0, #2304]	@ 0x900
    if ((ep->type == EP_TYPE_INTR) || (ep->type == EP_TYPE_BULK))
 80073ec:	d805      	bhi.n	80073fa <USB_EPClearStall+0x30>
      USBx_INEP(epnum)->DIEPCTL |= USB_OTG_DIEPCTL_SD0PID_SEVNFRM; /* DATA0 */
 80073ee:	f8d0 3900 	ldr.w	r3, [r0, #2304]	@ 0x900
 80073f2:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 80073f6:	f8c0 3900 	str.w	r3, [r0, #2304]	@ 0x900
}
 80073fa:	2000      	movs	r0, #0
 80073fc:	4770      	bx	lr
    USBx_OUTEP(epnum)->DOEPCTL &= ~USB_OTG_DOEPCTL_STALL;
 80073fe:	f8d0 2b00 	ldr.w	r2, [r0, #2816]	@ 0xb00
 8007402:	f422 1200 	bic.w	r2, r2, #2097152	@ 0x200000
    if ((ep->type == EP_TYPE_INTR) || (ep->type == EP_TYPE_BULK))
 8007406:	2b01      	cmp	r3, #1
    USBx_OUTEP(epnum)->DOEPCTL &= ~USB_OTG_DOEPCTL_STALL;
 8007408:	f8c0 2b00 	str.w	r2, [r0, #2816]	@ 0xb00
      USBx_OUTEP(epnum)->DOEPCTL |= USB_OTG_DOEPCTL_SD0PID_SEVNFRM; /* DATA0 */
 800740c:	bf9e      	ittt	ls
 800740e:	f8d0 3b00 	ldrls.w	r3, [r0, #2816]	@ 0xb00
 8007412:	f043 5380 	orrls.w	r3, r3, #268435456	@ 0x10000000
 8007416:	f8c0 3b00 	strls.w	r3, [r0, #2816]	@ 0xb00
 800741a:	e7ee      	b.n	80073fa <USB_EPClearStall+0x30>

0800741c <USB_SetDevAddress>:
  USBx_DEVICE->DCFG &= ~(USB_OTG_DCFG_DAD);
 800741c:	f8d0 3800 	ldr.w	r3, [r0, #2048]	@ 0x800
 8007420:	f423 63fe 	bic.w	r3, r3, #2032	@ 0x7f0
 8007424:	f8c0 3800 	str.w	r3, [r0, #2048]	@ 0x800
  USBx_DEVICE->DCFG |= ((uint32_t)address << 4) & USB_OTG_DCFG_DAD;
 8007428:	f8d0 3800 	ldr.w	r3, [r0, #2048]	@ 0x800
 800742c:	0109      	lsls	r1, r1, #4
 800742e:	f401 61fe 	and.w	r1, r1, #2032	@ 0x7f0
 8007432:	4319      	orrs	r1, r3
 8007434:	f8c0 1800 	str.w	r1, [r0, #2048]	@ 0x800
}
 8007438:	2000      	movs	r0, #0
 800743a:	4770      	bx	lr

0800743c <USB_DevConnect>:
  USBx_PCGCCTL &= ~(USB_OTG_PCGCCTL_STOPCLK | USB_OTG_PCGCCTL_GATECLK);
 800743c:	f8d0 3e00 	ldr.w	r3, [r0, #3584]	@ 0xe00
 8007440:	f023 0303 	bic.w	r3, r3, #3
 8007444:	f8c0 3e00 	str.w	r3, [r0, #3584]	@ 0xe00
  USBx_DEVICE->DCTL &= ~USB_OTG_DCTL_SDIS;
 8007448:	f8d0 3804 	ldr.w	r3, [r0, #2052]	@ 0x804
 800744c:	f023 0302 	bic.w	r3, r3, #2
 8007450:	f8c0 3804 	str.w	r3, [r0, #2052]	@ 0x804
}
 8007454:	2000      	movs	r0, #0
 8007456:	4770      	bx	lr

08007458 <USB_DevDisconnect>:
  USBx_PCGCCTL &= ~(USB_OTG_PCGCCTL_STOPCLK | USB_OTG_PCGCCTL_GATECLK);
 8007458:	f8d0 3e00 	ldr.w	r3, [r0, #3584]	@ 0xe00
 800745c:	f023 0303 	bic.w	r3, r3, #3
 8007460:	f8c0 3e00 	str.w	r3, [r0, #3584]	@ 0xe00
  USBx_DEVICE->DCTL |= USB_OTG_DCTL_SDIS;
 8007464:	f8d0 3804 	ldr.w	r3, [r0, #2052]	@ 0x804
 8007468:	f043 0302 	orr.w	r3, r3, #2
 800746c:	f8c0 3804 	str.w	r3, [r0, #2052]	@ 0x804
}
 8007470:	2000      	movs	r0, #0
 8007472:	4770      	bx	lr

08007474 <USB_ReadInterrupts>:
  tmpreg = USBx->GINTSTS;
 8007474:	6942      	ldr	r2, [r0, #20]
  tmpreg &= USBx->GINTMSK;
 8007476:	6980      	ldr	r0, [r0, #24]
}
 8007478:	4010      	ands	r0, r2
 800747a:	4770      	bx	lr

0800747c <USB_ReadDevAllOutEpInterrupt>:
  tmpreg  = USBx_DEVICE->DAINT;
 800747c:	f8d0 3818 	ldr.w	r3, [r0, #2072]	@ 0x818
 8007480:	f500 6000 	add.w	r0, r0, #2048	@ 0x800
  tmpreg &= USBx_DEVICE->DAINTMSK;
 8007484:	69c0      	ldr	r0, [r0, #28]
 8007486:	4018      	ands	r0, r3
}
 8007488:	0c00      	lsrs	r0, r0, #16
 800748a:	4770      	bx	lr

0800748c <USB_ReadDevAllInEpInterrupt>:
  tmpreg  = USBx_DEVICE->DAINT;
 800748c:	f8d0 3818 	ldr.w	r3, [r0, #2072]	@ 0x818
 8007490:	f500 6000 	add.w	r0, r0, #2048	@ 0x800
  tmpreg &= USBx_DEVICE->DAINTMSK;
 8007494:	69c0      	ldr	r0, [r0, #28]
 8007496:	4018      	ands	r0, r3
}
 8007498:	b280      	uxth	r0, r0
 800749a:	4770      	bx	lr

0800749c <USB_ReadDevOutEPInterrupt>:
  tmpreg  = USBx_OUTEP((uint32_t)epnum)->DOEPINT;
 800749c:	eb00 1141 	add.w	r1, r0, r1, lsl #5
  tmpreg &= USBx_DEVICE->DOEPMSK;
 80074a0:	f500 6000 	add.w	r0, r0, #2048	@ 0x800
  tmpreg  = USBx_OUTEP((uint32_t)epnum)->DOEPINT;
 80074a4:	f8d1 2b08 	ldr.w	r2, [r1, #2824]	@ 0xb08
  tmpreg &= USBx_DEVICE->DOEPMSK;
 80074a8:	6940      	ldr	r0, [r0, #20]
}
 80074aa:	4010      	ands	r0, r2
 80074ac:	4770      	bx	lr

080074ae <USB_ReadDevInEPInterrupt>:
  msk = USBx_DEVICE->DIEPMSK;
 80074ae:	f8d0 2810 	ldr.w	r2, [r0, #2064]	@ 0x810
  emp = USBx_DEVICE->DIEPEMPMSK;
 80074b2:	f8d0 3834 	ldr.w	r3, [r0, #2100]	@ 0x834
  tmpreg = USBx_INEP((uint32_t)epnum)->DIEPINT & msk;
 80074b6:	eb00 1041 	add.w	r0, r0, r1, lsl #5
  msk |= ((emp >> (epnum & EP_ADDR_MSK)) & 0x1U) << 7;
 80074ba:	f001 010f 	and.w	r1, r1, #15
 80074be:	40cb      	lsrs	r3, r1
  tmpreg = USBx_INEP((uint32_t)epnum)->DIEPINT & msk;
 80074c0:	f500 6010 	add.w	r0, r0, #2304	@ 0x900
  msk |= ((emp >> (epnum & EP_ADDR_MSK)) & 0x1U) << 7;
 80074c4:	01db      	lsls	r3, r3, #7
  tmpreg = USBx_INEP((uint32_t)epnum)->DIEPINT & msk;
 80074c6:	6880      	ldr	r0, [r0, #8]
  msk |= ((emp >> (epnum & EP_ADDR_MSK)) & 0x1U) << 7;
 80074c8:	b2db      	uxtb	r3, r3
 80074ca:	4313      	orrs	r3, r2
}
 80074cc:	4018      	ands	r0, r3
 80074ce:	4770      	bx	lr

080074d0 <USB_GetMode>:
  return ((USBx->GINTSTS) & 0x1U);
 80074d0:	6940      	ldr	r0, [r0, #20]
}
 80074d2:	f000 0001 	and.w	r0, r0, #1
 80074d6:	4770      	bx	lr

080074d8 <USB_ActivateSetup>:
  USBx_INEP(0U)->DIEPCTL &= ~USB_OTG_DIEPCTL_MPSIZ;
 80074d8:	f8d0 3900 	ldr.w	r3, [r0, #2304]	@ 0x900
 80074dc:	f36f 030a 	bfc	r3, #0, #11
 80074e0:	f8c0 3900 	str.w	r3, [r0, #2304]	@ 0x900
  USBx_DEVICE->DCTL |= USB_OTG_DCTL_CGINAK;
 80074e4:	f8d0 3804 	ldr.w	r3, [r0, #2052]	@ 0x804
 80074e8:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 80074ec:	f8c0 3804 	str.w	r3, [r0, #2052]	@ 0x804
}
 80074f0:	2000      	movs	r0, #0
 80074f2:	4770      	bx	lr

080074f4 <USB_EP0_OutStart>:
{
 80074f4:	b530      	push	{r4, r5, lr}
  uint32_t gSNPSiD = *(__IO const uint32_t *)(&USBx->CID + 0x1U);
 80074f6:	6c05      	ldr	r5, [r0, #64]	@ 0x40
  if (gSNPSiD > USB_OTG_CORE_ID_300A)
 80074f8:	4c10      	ldr	r4, [pc, #64]	@ (800753c <USB_EP0_OutStart+0x48>)
 80074fa:	42a5      	cmp	r5, r4
    if ((USBx_OUTEP(0U)->DOEPCTL & USB_OTG_DOEPCTL_EPENA) == USB_OTG_DOEPCTL_EPENA)
 80074fc:	f500 6330 	add.w	r3, r0, #2816	@ 0xb00
  if (gSNPSiD > USB_OTG_CORE_ID_300A)
 8007500:	d903      	bls.n	800750a <USB_EP0_OutStart+0x16>
    if ((USBx_OUTEP(0U)->DOEPCTL & USB_OTG_DOEPCTL_EPENA) == USB_OTG_DOEPCTL_EPENA)
 8007502:	f8d0 4b00 	ldr.w	r4, [r0, #2816]	@ 0xb00
 8007506:	2c00      	cmp	r4, #0
 8007508:	db16      	blt.n	8007538 <USB_EP0_OutStart+0x44>
  USBx_OUTEP(0U)->DOEPTSIZ = 0U;
 800750a:	2400      	movs	r4, #0
 800750c:	611c      	str	r4, [r3, #16]
  USBx_OUTEP(0U)->DOEPTSIZ |= (USB_OTG_DOEPTSIZ_PKTCNT & (1U << 19));
 800750e:	691c      	ldr	r4, [r3, #16]
 8007510:	f444 2400 	orr.w	r4, r4, #524288	@ 0x80000
 8007514:	611c      	str	r4, [r3, #16]
  USBx_OUTEP(0U)->DOEPTSIZ |= (3U * 8U);
 8007516:	691c      	ldr	r4, [r3, #16]
 8007518:	f044 0418 	orr.w	r4, r4, #24
 800751c:	611c      	str	r4, [r3, #16]
  USBx_OUTEP(0U)->DOEPTSIZ |=  USB_OTG_DOEPTSIZ_STUPCNT;
 800751e:	691c      	ldr	r4, [r3, #16]
  if (dma == 1U)
 8007520:	2901      	cmp	r1, #1
  USBx_OUTEP(0U)->DOEPTSIZ |=  USB_OTG_DOEPTSIZ_STUPCNT;
 8007522:	f044 44c0 	orr.w	r4, r4, #1610612736	@ 0x60000000
 8007526:	611c      	str	r4, [r3, #16]
    USBx_OUTEP(0U)->DOEPDMA = (uint32_t)psetup;
 8007528:	bf01      	itttt	eq
 800752a:	615a      	streq	r2, [r3, #20]
    USBx_OUTEP(0U)->DOEPCTL |= USB_OTG_DOEPCTL_EPENA | USB_OTG_DOEPCTL_USBAEP;
 800752c:	f8d0 3b00 	ldreq.w	r3, [r0, #2816]	@ 0xb00
 8007530:	f043 2380 	orreq.w	r3, r3, #2147516416	@ 0x80008000
 8007534:	f8c0 3b00 	streq.w	r3, [r0, #2816]	@ 0xb00
}
 8007538:	2000      	movs	r0, #0
 800753a:	bd30      	pop	{r4, r5, pc}
 800753c:	4f54300a 	.word	0x4f54300a

08007540 <SysTick_Handler>:

/*
  SysTick handler implementation that also clears overflow flag.
*/
#if (USE_CUSTOM_SYSTICK_HANDLER_IMPLEMENTATION == 0)
void SysTick_Handler (void) {
 8007540:	b508      	push	{r3, lr}
  /* Clear overflow flag */
  SysTick->CTRL;
 8007542:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8007546:	691b      	ldr	r3, [r3, #16]

  if (xTaskGetSchedulerState() != taskSCHEDULER_NOT_STARTED) {
 8007548:	f001 fdf0 	bl	800912c <xTaskGetSchedulerState>
 800754c:	2801      	cmp	r0, #1
 800754e:	d003      	beq.n	8007558 <SysTick_Handler+0x18>
    /* Call tick handler */
    xPortSysTickHandler();
  }
}
 8007550:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    xPortSysTickHandler();
 8007554:	f000 bbde 	b.w	8007d14 <xPortSysTickHandler>
}
 8007558:	bd08      	pop	{r3, pc}
	...

0800755c <osKernelInitialize>:
 */
__STATIC_FORCEINLINE uint32_t __get_IPSR(void)
{
  uint32_t result;

  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 800755c:	f3ef 8305 	mrs	r3, IPSR
/*---------------------------------------------------------------------------*/

osStatus_t osKernelInitialize (void) {
  osStatus_t stat;

  if (IS_IRQ()) {
 8007560:	b92b      	cbnz	r3, 800756e <osKernelInitialize+0x12>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelInactive) {
 8007562:	4b06      	ldr	r3, [pc, #24]	@ (800757c <osKernelInitialize+0x20>)
 8007564:	6818      	ldr	r0, [r3, #0]
 8007566:	b928      	cbnz	r0, 8007574 <osKernelInitialize+0x18>
        EvrFreeRTOSSetup(0U);
      #endif
      #if defined(USE_FreeRTOS_HEAP_5) && (HEAP_5_REGION_SETUP == 1)
        vPortDefineHeapRegions (configHEAP_5_REGIONS);
      #endif
      KernelState = osKernelReady;
 8007568:	2201      	movs	r2, #1
 800756a:	601a      	str	r2, [r3, #0]
      stat = osOK;
 800756c:	4770      	bx	lr
    stat = osErrorISR;
 800756e:	f06f 0005 	mvn.w	r0, #5
 8007572:	4770      	bx	lr
    } else {
      stat = osError;
 8007574:	f04f 30ff 	mov.w	r0, #4294967295
    }
  }

  return (stat);
}
 8007578:	4770      	bx	lr
 800757a:	bf00      	nop
 800757c:	200039a0 	.word	0x200039a0

08007580 <osKernelStart>:
  }

  return (state);
}

osStatus_t osKernelStart (void) {
 8007580:	b510      	push	{r4, lr}
 8007582:	f3ef 8405 	mrs	r4, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 8007586:	b95c      	cbnz	r4, 80075a0 <osKernelStart+0x20>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelReady) {
 8007588:	4b08      	ldr	r3, [pc, #32]	@ (80075ac <osKernelStart+0x2c>)
 800758a:	681a      	ldr	r2, [r3, #0]
 800758c:	2a01      	cmp	r2, #1
 800758e:	d10a      	bne.n	80075a6 <osKernelStart+0x26>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8007590:	4a07      	ldr	r2, [pc, #28]	@ (80075b0 <osKernelStart+0x30>)
 8007592:	77d4      	strb	r4, [r2, #31]
      /* Ensure SVC priority is at the reset value */
      SVC_Setup();
      /* Change state to enable IRQ masking check */
      KernelState = osKernelRunning;
 8007594:	2202      	movs	r2, #2
 8007596:	601a      	str	r2, [r3, #0]
      /* Start the kernel scheduler */
      vTaskStartScheduler();
 8007598:	f001 fb46 	bl	8008c28 <vTaskStartScheduler>
      stat = osOK;
 800759c:	4620      	mov	r0, r4
      stat = osError;
    }
  }

  return (stat);
}
 800759e:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
 80075a0:	f06f 0005 	mvn.w	r0, #5
 80075a4:	e7fb      	b.n	800759e <osKernelStart+0x1e>
      stat = osError;
 80075a6:	f04f 30ff 	mov.w	r0, #4294967295
  return (stat);
 80075aa:	e7f8      	b.n	800759e <osKernelStart+0x1e>
 80075ac:	200039a0 	.word	0x200039a0
 80075b0:	e000ed00 	.word	0xe000ed00

080075b4 <osThreadNew>:
  return (configCPU_CLOCK_HZ);
}

/*---------------------------------------------------------------------------*/

osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 80075b4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80075b6:	b087      	sub	sp, #28
 80075b8:	4614      	mov	r4, r2
  uint32_t stack;
  TaskHandle_t hTask;
  UBaseType_t prio;
  int32_t mem;

  hTask = NULL;
 80075ba:	2200      	movs	r2, #0
osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 80075bc:	460b      	mov	r3, r1
  hTask = NULL;
 80075be:	9205      	str	r2, [sp, #20]
 80075c0:	f3ef 8205 	mrs	r2, IPSR

  if (!IS_IRQ() && (func != NULL)) {
 80075c4:	b9fa      	cbnz	r2, 8007606 <osThreadNew+0x52>
 80075c6:	b1f0      	cbz	r0, 8007606 <osThreadNew+0x52>
    prio  = (UBaseType_t)osPriorityNormal;

    name = NULL;
    mem  = -1;

    if (attr != NULL) {
 80075c8:	b354      	cbz	r4, 8007620 <osThreadNew+0x6c>
      if (attr->name != NULL) {
        name = attr->name;
      }
      if (attr->priority != osPriorityNone) {
 80075ca:	69a5      	ldr	r5, [r4, #24]
 80075cc:	b125      	cbz	r5, 80075d8 <osThreadNew+0x24>
        prio = (UBaseType_t)attr->priority;
      }

      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
 80075ce:	1e69      	subs	r1, r5, #1
 80075d0:	2937      	cmp	r1, #55	@ 0x37
 80075d2:	d902      	bls.n	80075da <osThreadNew+0x26>
        return (NULL);
 80075d4:	2000      	movs	r0, #0
 80075d6:	e017      	b.n	8007608 <osThreadNew+0x54>
    prio  = (UBaseType_t)osPriorityNormal;
 80075d8:	2518      	movs	r5, #24
      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
 80075da:	6862      	ldr	r2, [r4, #4]
 80075dc:	07d2      	lsls	r2, r2, #31
 80075de:	d4f9      	bmi.n	80075d4 <osThreadNew+0x20>
      }

      if (attr->stack_size > 0U) {
 80075e0:	6966      	ldr	r6, [r4, #20]
 80075e2:	b19e      	cbz	r6, 800760c <osThreadNew+0x58>
        /* In FreeRTOS stack is not in bytes, but in sizeof(StackType_t) which is 4 on ARM ports.       */
        /* Stack size should be therefore 4 byte aligned in order to avoid division caused side effects */
        stack = attr->stack_size / sizeof(StackType_t);
 80075e4:	08b2      	lsrs	r2, r6, #2
      }

      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 80075e6:	e9d4 7c02 	ldrd	r7, ip, [r4, #8]
      if (attr->name != NULL) {
 80075ea:	6821      	ldr	r1, [r4, #0]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 80075ec:	b187      	cbz	r7, 8007610 <osThreadNew+0x5c>
 80075ee:	f1bc 0f5f 	cmp.w	ip, #95	@ 0x5f
 80075f2:	d908      	bls.n	8007606 <osThreadNew+0x52>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 80075f4:	6924      	ldr	r4, [r4, #16]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 80075f6:	b134      	cbz	r4, 8007606 <osThreadNew+0x52>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 80075f8:	b12e      	cbz	r6, 8007606 <osThreadNew+0x52>
      mem = 0;
    }

    if (mem == 1) {
      #if (configSUPPORT_STATIC_ALLOCATION == 1)
        hTask = xTaskCreateStatic ((TaskFunction_t)func, name, stack, argument, prio, (StackType_t  *)attr->stack_mem,
 80075fa:	e9cd 4701 	strd	r4, r7, [sp, #4]
 80075fe:	9500      	str	r5, [sp, #0]
 8007600:	f001 faab 	bl	8008b5a <xTaskCreateStatic>
 8007604:	9005      	str	r0, [sp, #20]
        #endif
      }
    }
  }

  return ((osThreadId_t)hTask);
 8007606:	9805      	ldr	r0, [sp, #20]
}
 8007608:	b007      	add	sp, #28
 800760a:	bdf0      	pop	{r4, r5, r6, r7, pc}
    stack = configMINIMAL_STACK_SIZE;
 800760c:	2280      	movs	r2, #128	@ 0x80
 800760e:	e7ea      	b.n	80075e6 <osThreadNew+0x32>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) && (attr->stack_mem == NULL)) {
 8007610:	f1bc 0f00 	cmp.w	ip, #0
 8007614:	d1f7      	bne.n	8007606 <osThreadNew+0x52>
 8007616:	6924      	ldr	r4, [r4, #16]
 8007618:	2c00      	cmp	r4, #0
 800761a:	d1f4      	bne.n	8007606 <osThreadNew+0x52>
 800761c:	460c      	mov	r4, r1
 800761e:	e001      	b.n	8007624 <osThreadNew+0x70>
    prio  = (UBaseType_t)osPriorityNormal;
 8007620:	2518      	movs	r5, #24
    stack = configMINIMAL_STACK_SIZE;
 8007622:	2280      	movs	r2, #128	@ 0x80
          if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
 8007624:	a905      	add	r1, sp, #20
 8007626:	e9cd 5100 	strd	r5, r1, [sp]
 800762a:	b292      	uxth	r2, r2
 800762c:	4621      	mov	r1, r4
 800762e:	f001 facc 	bl	8008bca <xTaskCreate>
 8007632:	2801      	cmp	r0, #1
            hTask = NULL;
 8007634:	bf1c      	itt	ne
 8007636:	2300      	movne	r3, #0
 8007638:	9305      	strne	r3, [sp, #20]
 800763a:	e7e4      	b.n	8007606 <osThreadNew+0x52>

0800763c <osDelay>:
  /* Return flags before clearing */
  return (rflags);
}
#endif /* (configUSE_OS2_THREAD_FLAGS == 1) */

osStatus_t osDelay (uint32_t ticks) {
 800763c:	b508      	push	{r3, lr}
 800763e:	f3ef 8205 	mrs	r2, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 8007642:	b922      	cbnz	r2, 800764e <osDelay+0x12>
    stat = osErrorISR;
  }
  else {
    stat = osOK;

    if (ticks != 0U) {
 8007644:	b108      	cbz	r0, 800764a <osDelay+0xe>
      vTaskDelay(ticks);
 8007646:	f001 fc4d 	bl	8008ee4 <vTaskDelay>
    stat = osOK;
 800764a:	2000      	movs	r0, #0
    }
  }

  return (stat);
}
 800764c:	bd08      	pop	{r3, pc}
    stat = osErrorISR;
 800764e:	f06f 0005 	mvn.w	r0, #5
  return (stat);
 8007652:	e7fb      	b.n	800764c <osDelay+0x10>

08007654 <osSemaphoreNew>:
}
#endif /* (configUSE_OS2_MUTEX == 1) */

/*---------------------------------------------------------------------------*/

osSemaphoreId_t osSemaphoreNew (uint32_t max_count, uint32_t initial_count, const osSemaphoreAttr_t *attr) {
 8007654:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8007656:	4604      	mov	r4, r0
 8007658:	460e      	mov	r6, r1
 800765a:	4615      	mov	r5, r2
 800765c:	f3ef 8205 	mrs	r2, IPSR
  const char *name;
  #endif

  hSemaphore = NULL;

  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
 8007660:	b942      	cbnz	r2, 8007674 <osSemaphoreNew+0x20>
 8007662:	b138      	cbz	r0, 8007674 <osSemaphoreNew+0x20>
 8007664:	4288      	cmp	r0, r1
 8007666:	d305      	bcc.n	8007674 <osSemaphoreNew+0x20>
    mem = -1;

    if (attr != NULL) {
 8007668:	b155      	cbz	r5, 8007680 <osSemaphoreNew+0x2c>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticSemaphore_t))) {
 800766a:	e9d5 3702 	ldrd	r3, r7, [r5, #8]
 800766e:	b12b      	cbz	r3, 800767c <osSemaphoreNew+0x28>
 8007670:	2f4f      	cmp	r7, #79	@ 0x4f
 8007672:	d822      	bhi.n	80076ba <osSemaphoreNew+0x66>
  hSemaphore = NULL;
 8007674:	2400      	movs	r4, #0
      #endif
    }
  }

  return ((osSemaphoreId_t)hSemaphore);
}
 8007676:	4620      	mov	r0, r4
 8007678:	b003      	add	sp, #12
 800767a:	bdf0      	pop	{r4, r5, r6, r7, pc}
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U)) {
 800767c:	2f00      	cmp	r7, #0
 800767e:	d1f9      	bne.n	8007674 <osSemaphoreNew+0x20>
      if (max_count == 1U) {
 8007680:	2c01      	cmp	r4, #1
 8007682:	d00c      	beq.n	800769e <osSemaphoreNew+0x4a>
            hSemaphore = xSemaphoreCreateCounting (max_count, initial_count);
 8007684:	4620      	mov	r0, r4
 8007686:	4631      	mov	r1, r6
 8007688:	f000 fd7c 	bl	8008184 <xQueueCreateCountingSemaphore>
      if (hSemaphore != NULL) {
 800768c:	4604      	mov	r4, r0
 800768e:	2800      	cmp	r0, #0
 8007690:	d0f0      	beq.n	8007674 <osSemaphoreNew+0x20>
        if (attr != NULL) {
 8007692:	b985      	cbnz	r5, 80076b6 <osSemaphoreNew+0x62>
        vQueueAddToRegistry (hSemaphore, name);
 8007694:	4629      	mov	r1, r5
 8007696:	4620      	mov	r0, r4
 8007698:	f001 f89a 	bl	80087d0 <vQueueAddToRegistry>
  return ((osSemaphoreId_t)hSemaphore);
 800769c:	e7eb      	b.n	8007676 <osSemaphoreNew+0x22>
            hSemaphore = xSemaphoreCreateBinary();
 800769e:	2203      	movs	r2, #3
 80076a0:	2100      	movs	r1, #0
 80076a2:	2001      	movs	r0, #1
 80076a4:	f000 fd25 	bl	80080f2 <xQueueGenericCreate>
 80076a8:	e00e      	b.n	80076c8 <osSemaphoreNew+0x74>
            hSemaphore = xSemaphoreCreateCountingStatic (max_count, initial_count, (StaticSemaphore_t *)attr->cb_mem);
 80076aa:	461a      	mov	r2, r3
 80076ac:	f000 fd48 	bl	8008140 <xQueueCreateCountingSemaphoreStatic>
      if (hSemaphore != NULL) {
 80076b0:	4604      	mov	r4, r0
 80076b2:	2800      	cmp	r0, #0
 80076b4:	d0de      	beq.n	8007674 <osSemaphoreNew+0x20>
          name = attr->name;
 80076b6:	682d      	ldr	r5, [r5, #0]
 80076b8:	e7ec      	b.n	8007694 <osSemaphoreNew+0x40>
      if (max_count == 1U) {
 80076ba:	2801      	cmp	r0, #1
 80076bc:	d1f5      	bne.n	80076aa <osSemaphoreNew+0x56>
            hSemaphore = xSemaphoreCreateBinaryStatic ((StaticSemaphore_t *)attr->cb_mem);
 80076be:	2103      	movs	r1, #3
 80076c0:	9100      	str	r1, [sp, #0]
 80076c2:	4611      	mov	r1, r2
 80076c4:	f000 fcc7 	bl	8008056 <xQueueGenericCreateStatic>
            hSemaphore = xSemaphoreCreateBinary();
 80076c8:	4604      	mov	r4, r0
        if ((hSemaphore != NULL) && (initial_count != 0U)) {
 80076ca:	2800      	cmp	r0, #0
 80076cc:	d0d2      	beq.n	8007674 <osSemaphoreNew+0x20>
 80076ce:	2e00      	cmp	r6, #0
 80076d0:	d0df      	beq.n	8007692 <osSemaphoreNew+0x3e>
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
 80076d2:	2300      	movs	r3, #0
 80076d4:	461a      	mov	r2, r3
 80076d6:	4619      	mov	r1, r3
 80076d8:	f000 fd72 	bl	80081c0 <xQueueGenericSend>
 80076dc:	2801      	cmp	r0, #1
 80076de:	d0d8      	beq.n	8007692 <osSemaphoreNew+0x3e>
            vSemaphoreDelete (hSemaphore);
 80076e0:	4620      	mov	r0, r4
 80076e2:	f001 f89f 	bl	8008824 <vQueueDelete>
      if (hSemaphore != NULL) {
 80076e6:	e7c5      	b.n	8007674 <osSemaphoreNew+0x20>

080076e8 <osSemaphoreAcquire>:

osStatus_t osSemaphoreAcquire (osSemaphoreId_t semaphore_id, uint32_t timeout) {
 80076e8:	b513      	push	{r0, r1, r4, lr}
 80076ea:	460c      	mov	r4, r1
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 80076ec:	b328      	cbz	r0, 800773a <osSemaphoreAcquire+0x52>
 80076ee:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 80076f2:	b1cb      	cbz	r3, 8007728 <osSemaphoreAcquire+0x40>
    if (timeout != 0U) {
 80076f4:	bb09      	cbnz	r1, 800773a <osSemaphoreAcquire+0x52>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 80076f6:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 80076f8:	9101      	str	r1, [sp, #4]
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 80076fa:	f001 f81c 	bl	8008736 <xQueueReceiveFromISR>
 80076fe:	2801      	cmp	r0, #1
 8007700:	d003      	beq.n	800770a <osSemaphoreAcquire+0x22>
        stat = osErrorResource;
 8007702:	f06f 0002 	mvn.w	r0, #2
      }
    }
  }

  return (stat);
}
 8007706:	b002      	add	sp, #8
 8007708:	bd10      	pop	{r4, pc}
        portYIELD_FROM_ISR (yield);
 800770a:	9b01      	ldr	r3, [sp, #4]
 800770c:	b90b      	cbnz	r3, 8007712 <osSemaphoreAcquire+0x2a>
  stat = osOK;
 800770e:	2000      	movs	r0, #0
 8007710:	e7f9      	b.n	8007706 <osSemaphoreAcquire+0x1e>
        portYIELD_FROM_ISR (yield);
 8007712:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8007716:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800771a:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 800771e:	f3bf 8f4f 	dsb	sy
 8007722:	f3bf 8f6f 	isb	sy
 8007726:	e7f2      	b.n	800770e <osSemaphoreAcquire+0x26>
    if (xSemaphoreTake (hSemaphore, (TickType_t)timeout) != pdPASS) {
 8007728:	f000 ff48 	bl	80085bc <xQueueSemaphoreTake>
 800772c:	2801      	cmp	r0, #1
 800772e:	d0ee      	beq.n	800770e <osSemaphoreAcquire+0x26>
      if (timeout != 0U) {
 8007730:	2c00      	cmp	r4, #0
 8007732:	d0e6      	beq.n	8007702 <osSemaphoreAcquire+0x1a>
        stat = osErrorTimeout;
 8007734:	f06f 0001 	mvn.w	r0, #1
 8007738:	e7e5      	b.n	8007706 <osSemaphoreAcquire+0x1e>
    stat = osErrorParameter;
 800773a:	f06f 0003 	mvn.w	r0, #3
  return (stat);
 800773e:	e7e2      	b.n	8007706 <osSemaphoreAcquire+0x1e>

08007740 <osSemaphoreRelease>:

osStatus_t osSemaphoreRelease (osSemaphoreId_t semaphore_id) {
 8007740:	b507      	push	{r0, r1, r2, lr}
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 8007742:	b318      	cbz	r0, 800778c <osSemaphoreRelease+0x4c>
 8007744:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 8007748:	b1cb      	cbz	r3, 800777e <osSemaphoreRelease+0x3e>
    yield = pdFALSE;
 800774a:	2300      	movs	r3, #0

    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 800774c:	a901      	add	r1, sp, #4
    yield = pdFALSE;
 800774e:	9301      	str	r3, [sp, #4]
    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 8007750:	f000 fe45 	bl	80083de <xQueueGiveFromISR>
 8007754:	2801      	cmp	r0, #1
 8007756:	d004      	beq.n	8007762 <osSemaphoreRelease+0x22>
      portYIELD_FROM_ISR (yield);
    }
  }
  else {
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
      stat = osErrorResource;
 8007758:	f06f 0002 	mvn.w	r0, #2
    }
  }

  return (stat);
}
 800775c:	b003      	add	sp, #12
 800775e:	f85d fb04 	ldr.w	pc, [sp], #4
      portYIELD_FROM_ISR (yield);
 8007762:	9b01      	ldr	r3, [sp, #4]
 8007764:	b14b      	cbz	r3, 800777a <osSemaphoreRelease+0x3a>
 8007766:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800776a:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800776e:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8007772:	f3bf 8f4f 	dsb	sy
 8007776:	f3bf 8f6f 	isb	sy
  stat = osOK;
 800777a:	2000      	movs	r0, #0
 800777c:	e7ee      	b.n	800775c <osSemaphoreRelease+0x1c>
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
 800777e:	461a      	mov	r2, r3
 8007780:	4619      	mov	r1, r3
 8007782:	f000 fd1d 	bl	80081c0 <xQueueGenericSend>
 8007786:	2801      	cmp	r0, #1
 8007788:	d0f7      	beq.n	800777a <osSemaphoreRelease+0x3a>
 800778a:	e7e5      	b.n	8007758 <osSemaphoreRelease+0x18>
    stat = osErrorParameter;
 800778c:	f06f 0003 	mvn.w	r0, #3
  return (stat);
 8007790:	e7e4      	b.n	800775c <osSemaphoreRelease+0x1c>

08007792 <osMessageQueueNew>:
  return (stat);
}

/*---------------------------------------------------------------------------*/

osMessageQueueId_t osMessageQueueNew (uint32_t msg_count, uint32_t msg_size, const osMessageQueueAttr_t *attr) {
 8007792:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8007794:	4605      	mov	r5, r0
 8007796:	460e      	mov	r6, r1
 8007798:	4614      	mov	r4, r2
 800779a:	f3ef 8705 	mrs	r7, IPSR
  const char *name;
  #endif

  hQueue = NULL;

  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 800779e:	b11f      	cbz	r7, 80077a8 <osMessageQueueNew+0x16>
  hQueue = NULL;
 80077a0:	2500      	movs	r5, #0
    #endif

  }

  return ((osMessageQueueId_t)hQueue);
}
 80077a2:	4628      	mov	r0, r5
 80077a4:	b003      	add	sp, #12
 80077a6:	bdf0      	pop	{r4, r5, r6, r7, pc}
  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 80077a8:	2800      	cmp	r0, #0
 80077aa:	d0f9      	beq.n	80077a0 <osMessageQueueNew+0xe>
 80077ac:	2900      	cmp	r1, #0
 80077ae:	d0f7      	beq.n	80077a0 <osMessageQueueNew+0xe>
    if (attr != NULL) {
 80077b0:	b1da      	cbz	r2, 80077ea <osMessageQueueNew+0x58>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 80077b2:	e9d2 3202 	ldrd	r3, r2, [r2, #8]
 80077b6:	b183      	cbz	r3, 80077da <osMessageQueueNew+0x48>
 80077b8:	2a4f      	cmp	r2, #79	@ 0x4f
 80077ba:	d9f1      	bls.n	80077a0 <osMessageQueueNew+0xe>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 80077bc:	6922      	ldr	r2, [r4, #16]
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 80077be:	2a00      	cmp	r2, #0
 80077c0:	d0ee      	beq.n	80077a0 <osMessageQueueNew+0xe>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 80077c2:	6966      	ldr	r6, [r4, #20]
 80077c4:	434d      	muls	r5, r1
 80077c6:	42ae      	cmp	r6, r5
 80077c8:	d3ea      	bcc.n	80077a0 <osMessageQueueNew+0xe>
        hQueue = xQueueCreateStatic (msg_count, msg_size, attr->mq_mem, attr->cb_mem);
 80077ca:	9700      	str	r7, [sp, #0]
 80077cc:	f000 fc43 	bl	8008056 <xQueueGenericCreateStatic>
    if (hQueue != NULL) {
 80077d0:	4605      	mov	r5, r0
 80077d2:	2800      	cmp	r0, #0
 80077d4:	d0e4      	beq.n	80077a0 <osMessageQueueNew+0xe>
        name = attr->name;
 80077d6:	6824      	ldr	r4, [r4, #0]
 80077d8:	e011      	b.n	80077fe <osMessageQueueNew+0x6c>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) &&
 80077da:	2a00      	cmp	r2, #0
 80077dc:	d1e0      	bne.n	80077a0 <osMessageQueueNew+0xe>
 80077de:	6923      	ldr	r3, [r4, #16]
 80077e0:	2b00      	cmp	r3, #0
 80077e2:	d1dd      	bne.n	80077a0 <osMessageQueueNew+0xe>
            (attr->mq_mem == NULL) && (attr->mq_size == 0U)) {
 80077e4:	6963      	ldr	r3, [r4, #20]
 80077e6:	2b00      	cmp	r3, #0
 80077e8:	d1da      	bne.n	80077a0 <osMessageQueueNew+0xe>
          hQueue = xQueueCreate (msg_count, msg_size);
 80077ea:	4628      	mov	r0, r5
 80077ec:	2200      	movs	r2, #0
 80077ee:	4631      	mov	r1, r6
 80077f0:	f000 fc7f 	bl	80080f2 <xQueueGenericCreate>
    if (hQueue != NULL) {
 80077f4:	4605      	mov	r5, r0
 80077f6:	2800      	cmp	r0, #0
 80077f8:	d0d2      	beq.n	80077a0 <osMessageQueueNew+0xe>
      if (attr != NULL) {
 80077fa:	2c00      	cmp	r4, #0
 80077fc:	d1eb      	bne.n	80077d6 <osMessageQueueNew+0x44>
      vQueueAddToRegistry (hQueue, name);
 80077fe:	4621      	mov	r1, r4
 8007800:	4628      	mov	r0, r5
 8007802:	f000 ffe5 	bl	80087d0 <vQueueAddToRegistry>
  return ((osMessageQueueId_t)hQueue);
 8007806:	e7cc      	b.n	80077a2 <osMessageQueueNew+0x10>

08007808 <osMessageQueuePut>:

osStatus_t osMessageQueuePut (osMessageQueueId_t mq_id, const void *msg_ptr, uint8_t msg_prio, uint32_t timeout) {
 8007808:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800780a:	461c      	mov	r4, r3
 800780c:	f3ef 8605 	mrs	r6, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 8007810:	b1de      	cbz	r6, 800784a <osMessageQueuePut+0x42>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 8007812:	b338      	cbz	r0, 8007864 <osMessageQueuePut+0x5c>
 8007814:	b331      	cbz	r1, 8007864 <osMessageQueuePut+0x5c>
 8007816:	bb2b      	cbnz	r3, 8007864 <osMessageQueuePut+0x5c>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 8007818:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 800781a:	9301      	str	r3, [sp, #4]
      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 800781c:	f000 fd82 	bl	8008324 <xQueueGenericSendFromISR>
 8007820:	2801      	cmp	r0, #1
 8007822:	d003      	beq.n	800782c <osMessageQueuePut+0x24>
        stat = osErrorResource;
 8007824:	f06f 0002 	mvn.w	r0, #2
      }
    }
  }

  return (stat);
}
 8007828:	b002      	add	sp, #8
 800782a:	bd70      	pop	{r4, r5, r6, pc}
        portYIELD_FROM_ISR (yield);
 800782c:	9b01      	ldr	r3, [sp, #4]
 800782e:	b90b      	cbnz	r3, 8007834 <osMessageQueuePut+0x2c>
  stat = osOK;
 8007830:	2000      	movs	r0, #0
 8007832:	e7f9      	b.n	8007828 <osMessageQueuePut+0x20>
        portYIELD_FROM_ISR (yield);
 8007834:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8007838:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800783c:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8007840:	f3bf 8f4f 	dsb	sy
 8007844:	f3bf 8f6f 	isb	sy
 8007848:	e7f2      	b.n	8007830 <osMessageQueuePut+0x28>
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 800784a:	b158      	cbz	r0, 8007864 <osMessageQueuePut+0x5c>
 800784c:	b151      	cbz	r1, 8007864 <osMessageQueuePut+0x5c>
      if (xQueueSendToBack (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 800784e:	4633      	mov	r3, r6
 8007850:	4622      	mov	r2, r4
 8007852:	f000 fcb5 	bl	80081c0 <xQueueGenericSend>
 8007856:	2801      	cmp	r0, #1
 8007858:	d0ea      	beq.n	8007830 <osMessageQueuePut+0x28>
        if (timeout != 0U) {
 800785a:	2c00      	cmp	r4, #0
 800785c:	d0e2      	beq.n	8007824 <osMessageQueuePut+0x1c>
          stat = osErrorTimeout;
 800785e:	f06f 0001 	mvn.w	r0, #1
 8007862:	e7e1      	b.n	8007828 <osMessageQueuePut+0x20>
      stat = osErrorParameter;
 8007864:	f06f 0003 	mvn.w	r0, #3
  return (stat);
 8007868:	e7de      	b.n	8007828 <osMessageQueuePut+0x20>

0800786a <osMessageQueueGet>:

osStatus_t osMessageQueueGet (osMessageQueueId_t mq_id, void *msg_ptr, uint8_t *msg_prio, uint32_t timeout) {
 800786a:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800786c:	461c      	mov	r4, r3
 800786e:	f3ef 8305 	mrs	r3, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 8007872:	b1db      	cbz	r3, 80078ac <osMessageQueueGet+0x42>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 8007874:	b330      	cbz	r0, 80078c4 <osMessageQueueGet+0x5a>
 8007876:	b329      	cbz	r1, 80078c4 <osMessageQueueGet+0x5a>
 8007878:	bb24      	cbnz	r4, 80078c4 <osMessageQueueGet+0x5a>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 800787a:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 800787c:	9401      	str	r4, [sp, #4]
      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 800787e:	f000 ff5a 	bl	8008736 <xQueueReceiveFromISR>
 8007882:	2801      	cmp	r0, #1
 8007884:	d003      	beq.n	800788e <osMessageQueueGet+0x24>
        stat = osErrorResource;
 8007886:	f06f 0002 	mvn.w	r0, #2
      }
    }
  }

  return (stat);
}
 800788a:	b003      	add	sp, #12
 800788c:	bd30      	pop	{r4, r5, pc}
        portYIELD_FROM_ISR (yield);
 800788e:	9b01      	ldr	r3, [sp, #4]
 8007890:	b90b      	cbnz	r3, 8007896 <osMessageQueueGet+0x2c>
  stat = osOK;
 8007892:	2000      	movs	r0, #0
 8007894:	e7f9      	b.n	800788a <osMessageQueueGet+0x20>
        portYIELD_FROM_ISR (yield);
 8007896:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800789a:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800789e:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 80078a2:	f3bf 8f4f 	dsb	sy
 80078a6:	f3bf 8f6f 	isb	sy
 80078aa:	e7f2      	b.n	8007892 <osMessageQueueGet+0x28>
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 80078ac:	b150      	cbz	r0, 80078c4 <osMessageQueueGet+0x5a>
 80078ae:	b149      	cbz	r1, 80078c4 <osMessageQueueGet+0x5a>
      if (xQueueReceive (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 80078b0:	4622      	mov	r2, r4
 80078b2:	f000 fde5 	bl	8008480 <xQueueReceive>
 80078b6:	2801      	cmp	r0, #1
 80078b8:	d0eb      	beq.n	8007892 <osMessageQueueGet+0x28>
        if (timeout != 0U) {
 80078ba:	2c00      	cmp	r4, #0
 80078bc:	d0e3      	beq.n	8007886 <osMessageQueueGet+0x1c>
          stat = osErrorTimeout;
 80078be:	f06f 0001 	mvn.w	r0, #1
 80078c2:	e7e2      	b.n	800788a <osMessageQueueGet+0x20>
      stat = osErrorParameter;
 80078c4:	f06f 0003 	mvn.w	r0, #3
  return (stat);
 80078c8:	e7df      	b.n	800788a <osMessageQueueGet+0x20>
	...

080078cc <vApplicationGetIdleTaskMemory>:
__WEAK void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
  /* Idle task control block and stack */
  static StaticTask_t Idle_TCB;
  static StackType_t  Idle_Stack[configMINIMAL_STACK_SIZE];

  *ppxIdleTaskTCBBuffer   = &Idle_TCB;
 80078cc:	4b03      	ldr	r3, [pc, #12]	@ (80078dc <vApplicationGetIdleTaskMemory+0x10>)
 80078ce:	6003      	str	r3, [r0, #0]
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
 80078d0:	4b03      	ldr	r3, [pc, #12]	@ (80078e0 <vApplicationGetIdleTaskMemory+0x14>)
 80078d2:	600b      	str	r3, [r1, #0]
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
 80078d4:	2380      	movs	r3, #128	@ 0x80
 80078d6:	6013      	str	r3, [r2, #0]
}
 80078d8:	4770      	bx	lr
 80078da:	bf00      	nop
 80078dc:	20003940 	.word	0x20003940
 80078e0:	20003740 	.word	0x20003740

080078e4 <vApplicationGetTimerTaskMemory>:
__WEAK void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
  /* Timer task control block and stack */
  static StaticTask_t Timer_TCB;
  static StackType_t  Timer_Stack[configTIMER_TASK_STACK_DEPTH];

  *ppxTimerTaskTCBBuffer   = &Timer_TCB;
 80078e4:	4b03      	ldr	r3, [pc, #12]	@ (80078f4 <vApplicationGetTimerTaskMemory+0x10>)
 80078e6:	6003      	str	r3, [r0, #0]
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
 80078e8:	4b03      	ldr	r3, [pc, #12]	@ (80078f8 <vApplicationGetTimerTaskMemory+0x14>)
 80078ea:	600b      	str	r3, [r1, #0]
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
 80078ec:	f44f 7380 	mov.w	r3, #256	@ 0x100
 80078f0:	6013      	str	r3, [r2, #0]
}
 80078f2:	4770      	bx	lr
 80078f4:	200036e0 	.word	0x200036e0
 80078f8:	200032e0 	.word	0x200032e0

080078fc <prvInsertBlockIntoFreeList>:
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
}
/*-----------------------------------------------------------*/

static void prvInsertBlockIntoFreeList( BlockLink_t *pxBlockToInsert )
{
 80078fc:	b510      	push	{r4, lr}
BlockLink_t *pxIterator;
uint8_t *puc;

	/* Iterate through the list until a block is found that has a higher address
	than the block being inserted. */
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 80078fe:	4b10      	ldr	r3, [pc, #64]	@ (8007940 <prvInsertBlockIntoFreeList+0x44>)
 8007900:	461a      	mov	r2, r3
 8007902:	681b      	ldr	r3, [r3, #0]
 8007904:	4283      	cmp	r3, r0
 8007906:	d3fb      	bcc.n	8007900 <prvInsertBlockIntoFreeList+0x4>
	}

	/* Do the block being inserted, and the block it is being inserted after
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxIterator;
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
 8007908:	6854      	ldr	r4, [r2, #4]
 800790a:	1911      	adds	r1, r2, r4
 800790c:	4288      	cmp	r0, r1
	{
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800790e:	bf01      	itttt	eq
 8007910:	6841      	ldreq	r1, [r0, #4]
		pxBlockToInsert = pxIterator;
 8007912:	4610      	moveq	r0, r2
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 8007914:	1909      	addeq	r1, r1, r4
 8007916:	6051      	streq	r1, [r2, #4]
	}

	/* Do the block being inserted, and the block it is being inserted before
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxBlockToInsert;
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 8007918:	6844      	ldr	r4, [r0, #4]
 800791a:	1901      	adds	r1, r0, r4
 800791c:	428b      	cmp	r3, r1
 800791e:	d10c      	bne.n	800793a <prvInsertBlockIntoFreeList+0x3e>
	{
		if( pxIterator->pxNextFreeBlock != pxEnd )
 8007920:	4908      	ldr	r1, [pc, #32]	@ (8007944 <prvInsertBlockIntoFreeList+0x48>)
 8007922:	6809      	ldr	r1, [r1, #0]
 8007924:	428b      	cmp	r3, r1
 8007926:	d003      	beq.n	8007930 <prvInsertBlockIntoFreeList+0x34>
		{
			/* Form one big block from the two blocks. */
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 8007928:	6859      	ldr	r1, [r3, #4]
 800792a:	4421      	add	r1, r4
 800792c:	6041      	str	r1, [r0, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800792e:	6819      	ldr	r1, [r3, #0]
		}
		else
		{
			pxBlockToInsert->pxNextFreeBlock = pxEnd;
 8007930:	6001      	str	r1, [r0, #0]

	/* If the block being inserted plugged a gab, so was merged with the block
	before and the block after, then it's pxNextFreeBlock pointer will have
	already been set, and should not be set here as that would make it point
	to itself. */
	if( pxIterator != pxBlockToInsert )
 8007932:	4290      	cmp	r0, r2
	{
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
 8007934:	bf18      	it	ne
 8007936:	6010      	strne	r0, [r2, #0]
	}
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}
}
 8007938:	bd10      	pop	{r4, pc}
 800793a:	4619      	mov	r1, r3
 800793c:	e7f8      	b.n	8007930 <prvInsertBlockIntoFreeList+0x34>
 800793e:	bf00      	nop
 8007940:	200039bc 	.word	0x200039bc
 8007944:	200039b8 	.word	0x200039b8

08007948 <pvPortMalloc>:
{
 8007948:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800794c:	4604      	mov	r4, r0
	vTaskSuspendAll();
 800794e:	f001 f9b1 	bl	8008cb4 <vTaskSuspendAll>
		if( pxEnd == NULL )
 8007952:	4942      	ldr	r1, [pc, #264]	@ (8007a5c <pvPortMalloc+0x114>)
 8007954:	4d42      	ldr	r5, [pc, #264]	@ (8007a60 <pvPortMalloc+0x118>)
 8007956:	680b      	ldr	r3, [r1, #0]
 8007958:	bb0b      	cbnz	r3, 800799e <pvPortMalloc+0x56>
	uxAddress = ( size_t ) ucHeap;
 800795a:	4a42      	ldr	r2, [pc, #264]	@ (8007a64 <pvPortMalloc+0x11c>)
	if( ( uxAddress & portBYTE_ALIGNMENT_MASK ) != 0 )
 800795c:	0756      	lsls	r6, r2, #29
		uxAddress += ( portBYTE_ALIGNMENT - 1 );
 800795e:	bf1f      	itttt	ne
 8007960:	1dd0      	addne	r0, r2, #7
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 8007962:	f020 0007 	bicne.w	r0, r0, #7
		xTotalHeapSize -= uxAddress - ( size_t ) ucHeap;
 8007966:	f502 3280 	addne.w	r2, r2, #65536	@ 0x10000
 800796a:	1a13      	subne	r3, r2, r0
size_t xTotalHeapSize = configTOTAL_HEAP_SIZE;
 800796c:	bf0c      	ite	eq
 800796e:	f44f 3380 	moveq.w	r3, #65536	@ 0x10000
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 8007972:	4602      	movne	r2, r0
	uxAddress = ( ( size_t ) pucAlignedHeap ) + xTotalHeapSize;
 8007974:	4413      	add	r3, r2
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 8007976:	4e3c      	ldr	r6, [pc, #240]	@ (8007a68 <pvPortMalloc+0x120>)
	uxAddress -= xHeapStructSize;
 8007978:	3b08      	subs	r3, #8
	uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 800797a:	f023 0307 	bic.w	r3, r3, #7
	xStart.xBlockSize = ( size_t ) 0;
 800797e:	2000      	movs	r0, #0
 8007980:	6070      	str	r0, [r6, #4]
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 8007982:	6032      	str	r2, [r6, #0]
	pxEnd->pxNextFreeBlock = NULL;
 8007984:	e9c3 0000 	strd	r0, r0, [r3]
	pxFirstFreeBlock->xBlockSize = uxAddress - ( size_t ) pxFirstFreeBlock;
 8007988:	1a98      	subs	r0, r3, r2
	pxFirstFreeBlock->pxNextFreeBlock = pxEnd;
 800798a:	e9c2 3000 	strd	r3, r0, [r2]
	pxEnd = ( void * ) uxAddress;
 800798e:	600b      	str	r3, [r1, #0]
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 8007990:	4b36      	ldr	r3, [pc, #216]	@ (8007a6c <pvPortMalloc+0x124>)
 8007992:	6018      	str	r0, [r3, #0]
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 8007994:	4b36      	ldr	r3, [pc, #216]	@ (8007a70 <pvPortMalloc+0x128>)
 8007996:	6018      	str	r0, [r3, #0]
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 8007998:	f04f 4300 	mov.w	r3, #2147483648	@ 0x80000000
 800799c:	602b      	str	r3, [r5, #0]
		if( ( xWantedSize & xBlockAllocatedBit ) == 0 )
 800799e:	682e      	ldr	r6, [r5, #0]
 80079a0:	4226      	tst	r6, r4
 80079a2:	d155      	bne.n	8007a50 <pvPortMalloc+0x108>
			if( xWantedSize > 0 )
 80079a4:	2c00      	cmp	r4, #0
 80079a6:	d046      	beq.n	8007a36 <pvPortMalloc+0xee>
				xWantedSize += xHeapStructSize;
 80079a8:	f104 0308 	add.w	r3, r4, #8
				if( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) != 0x00 )
 80079ac:	0760      	lsls	r0, r4, #29
					xWantedSize += ( portBYTE_ALIGNMENT - ( xWantedSize & portBYTE_ALIGNMENT_MASK ) );
 80079ae:	bf1c      	itt	ne
 80079b0:	f023 0307 	bicne.w	r3, r3, #7
 80079b4:	3308      	addne	r3, #8
			if( ( xWantedSize > 0 ) && ( xWantedSize <= xFreeBytesRemaining ) )
 80079b6:	2b00      	cmp	r3, #0
 80079b8:	d04a      	beq.n	8007a50 <pvPortMalloc+0x108>
 80079ba:	4f2d      	ldr	r7, [pc, #180]	@ (8007a70 <pvPortMalloc+0x128>)
 80079bc:	683c      	ldr	r4, [r7, #0]
 80079be:	429c      	cmp	r4, r3
 80079c0:	d346      	bcc.n	8007a50 <pvPortMalloc+0x108>
				pxBlock = xStart.pxNextFreeBlock;
 80079c2:	4a29      	ldr	r2, [pc, #164]	@ (8007a68 <pvPortMalloc+0x120>)
 80079c4:	6815      	ldr	r5, [r2, #0]
				while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
 80079c6:	6868      	ldr	r0, [r5, #4]
 80079c8:	4298      	cmp	r0, r3
 80079ca:	d204      	bcs.n	80079d6 <pvPortMalloc+0x8e>
 80079cc:	f8d5 c000 	ldr.w	ip, [r5]
 80079d0:	f1bc 0f00 	cmp.w	ip, #0
 80079d4:	d115      	bne.n	8007a02 <pvPortMalloc+0xba>
				if( pxBlock != pxEnd )
 80079d6:	6809      	ldr	r1, [r1, #0]
 80079d8:	42a9      	cmp	r1, r5
 80079da:	d039      	beq.n	8007a50 <pvPortMalloc+0x108>
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 80079dc:	6829      	ldr	r1, [r5, #0]
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 80079de:	f8d2 8000 	ldr.w	r8, [r2]
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 80079e2:	6011      	str	r1, [r2, #0]
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 80079e4:	1ac2      	subs	r2, r0, r3
 80079e6:	2a10      	cmp	r2, #16
 80079e8:	d912      	bls.n	8007a10 <pvPortMalloc+0xc8>
						pxNewBlockLink = ( void * ) ( ( ( uint8_t * ) pxBlock ) + xWantedSize );
 80079ea:	18e8      	adds	r0, r5, r3
						configASSERT( ( ( ( size_t ) pxNewBlockLink ) & portBYTE_ALIGNMENT_MASK ) == 0 );
 80079ec:	0741      	lsls	r1, r0, #29
 80079ee:	d00b      	beq.n	8007a08 <pvPortMalloc+0xc0>

portFORCE_INLINE static void vPortRaiseBASEPRI( void )
{
uint32_t ulNewBASEPRI;

	__asm volatile
 80079f0:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80079f4:	f383 8811 	msr	BASEPRI, r3
 80079f8:	f3bf 8f6f 	isb	sy
 80079fc:	f3bf 8f4f 	dsb	sy
 8007a00:	e7fe      	b.n	8007a00 <pvPortMalloc+0xb8>
					pxPreviousBlock = pxBlock;
 8007a02:	462a      	mov	r2, r5
					pxBlock = pxBlock->pxNextFreeBlock;
 8007a04:	4665      	mov	r5, ip
 8007a06:	e7de      	b.n	80079c6 <pvPortMalloc+0x7e>
						pxNewBlockLink->xBlockSize = pxBlock->xBlockSize - xWantedSize;
 8007a08:	6042      	str	r2, [r0, #4]
						pxBlock->xBlockSize = xWantedSize;
 8007a0a:	606b      	str	r3, [r5, #4]
						prvInsertBlockIntoFreeList( pxNewBlockLink );
 8007a0c:	f7ff ff76 	bl	80078fc <prvInsertBlockIntoFreeList>
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 8007a10:	686a      	ldr	r2, [r5, #4]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 8007a12:	4916      	ldr	r1, [pc, #88]	@ (8007a6c <pvPortMalloc+0x124>)
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 8007a14:	1aa4      	subs	r4, r4, r2
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 8007a16:	4316      	orrs	r6, r2
					xNumberOfSuccessfulAllocations++;
 8007a18:	4a16      	ldr	r2, [pc, #88]	@ (8007a74 <pvPortMalloc+0x12c>)
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 8007a1a:	6808      	ldr	r0, [r1, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 8007a1c:	603c      	str	r4, [r7, #0]
					pxBlock->pxNextFreeBlock = NULL;
 8007a1e:	2300      	movs	r3, #0
 8007a20:	602b      	str	r3, [r5, #0]
					xNumberOfSuccessfulAllocations++;
 8007a22:	6813      	ldr	r3, [r2, #0]
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 8007a24:	606e      	str	r6, [r5, #4]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 8007a26:	4284      	cmp	r4, r0
					xNumberOfSuccessfulAllocations++;
 8007a28:	f103 0301 	add.w	r3, r3, #1
						xMinimumEverFreeBytesRemaining = xFreeBytesRemaining;
 8007a2c:	bf38      	it	cc
 8007a2e:	600c      	strcc	r4, [r1, #0]
					xNumberOfSuccessfulAllocations++;
 8007a30:	6013      	str	r3, [r2, #0]
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 8007a32:	f108 0408 	add.w	r4, r8, #8
	( void ) xTaskResumeAll();
 8007a36:	f001 f9e1 	bl	8008dfc <xTaskResumeAll>
	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
 8007a3a:	0763      	lsls	r3, r4, #29
 8007a3c:	d00a      	beq.n	8007a54 <pvPortMalloc+0x10c>
 8007a3e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007a42:	f383 8811 	msr	BASEPRI, r3
 8007a46:	f3bf 8f6f 	isb	sy
 8007a4a:	f3bf 8f4f 	dsb	sy
 8007a4e:	e7fe      	b.n	8007a4e <pvPortMalloc+0x106>
void *pvReturn = NULL;
 8007a50:	2400      	movs	r4, #0
 8007a52:	e7f0      	b.n	8007a36 <pvPortMalloc+0xee>
}
 8007a54:	4620      	mov	r0, r4
 8007a56:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8007a5a:	bf00      	nop
 8007a5c:	200039b8 	.word	0x200039b8
 8007a60:	200039a4 	.word	0x200039a4
 8007a64:	200039c4 	.word	0x200039c4
 8007a68:	200039bc 	.word	0x200039bc
 8007a6c:	200039b0 	.word	0x200039b0
 8007a70:	200039b4 	.word	0x200039b4
 8007a74:	200039ac 	.word	0x200039ac

08007a78 <vPortFree>:
{
 8007a78:	b510      	push	{r4, lr}
	if( pv != NULL )
 8007a7a:	4604      	mov	r4, r0
 8007a7c:	b390      	cbz	r0, 8007ae4 <vPortFree+0x6c>
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
 8007a7e:	4a1a      	ldr	r2, [pc, #104]	@ (8007ae8 <vPortFree+0x70>)
 8007a80:	f850 3c04 	ldr.w	r3, [r0, #-4]
 8007a84:	6812      	ldr	r2, [r2, #0]
 8007a86:	4213      	tst	r3, r2
 8007a88:	d108      	bne.n	8007a9c <vPortFree+0x24>
 8007a8a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007a8e:	f383 8811 	msr	BASEPRI, r3
 8007a92:	f3bf 8f6f 	isb	sy
 8007a96:	f3bf 8f4f 	dsb	sy
 8007a9a:	e7fe      	b.n	8007a9a <vPortFree+0x22>
		configASSERT( pxLink->pxNextFreeBlock == NULL );
 8007a9c:	f850 1c08 	ldr.w	r1, [r0, #-8]
 8007aa0:	b141      	cbz	r1, 8007ab4 <vPortFree+0x3c>
 8007aa2:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007aa6:	f383 8811 	msr	BASEPRI, r3
 8007aaa:	f3bf 8f6f 	isb	sy
 8007aae:	f3bf 8f4f 	dsb	sy
 8007ab2:	e7fe      	b.n	8007ab2 <vPortFree+0x3a>
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 8007ab4:	ea23 0302 	bic.w	r3, r3, r2
 8007ab8:	f840 3c04 	str.w	r3, [r0, #-4]
				vTaskSuspendAll();
 8007abc:	f001 f8fa 	bl	8008cb4 <vTaskSuspendAll>
					xFreeBytesRemaining += pxLink->xBlockSize;
 8007ac0:	4a0a      	ldr	r2, [pc, #40]	@ (8007aec <vPortFree+0x74>)
 8007ac2:	f854 3c04 	ldr.w	r3, [r4, #-4]
 8007ac6:	6811      	ldr	r1, [r2, #0]
					prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 8007ac8:	f1a4 0008 	sub.w	r0, r4, #8
					xFreeBytesRemaining += pxLink->xBlockSize;
 8007acc:	440b      	add	r3, r1
 8007ace:	6013      	str	r3, [r2, #0]
					prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 8007ad0:	f7ff ff14 	bl	80078fc <prvInsertBlockIntoFreeList>
					xNumberOfSuccessfulFrees++;
 8007ad4:	4a06      	ldr	r2, [pc, #24]	@ (8007af0 <vPortFree+0x78>)
 8007ad6:	6813      	ldr	r3, [r2, #0]
}
 8007ad8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
					xNumberOfSuccessfulFrees++;
 8007adc:	3301      	adds	r3, #1
 8007ade:	6013      	str	r3, [r2, #0]
				( void ) xTaskResumeAll();
 8007ae0:	f001 b98c 	b.w	8008dfc <xTaskResumeAll>
}
 8007ae4:	bd10      	pop	{r4, pc}
 8007ae6:	bf00      	nop
 8007ae8:	200039a4 	.word	0x200039a4
 8007aec:	200039b4 	.word	0x200039b4
 8007af0:	200039a8 	.word	0x200039a8

08007af4 <vListInitialise>:
void vListInitialise( List_t * const pxList )
{
	/* The list structure contains a list item which is used to mark the
	end of the list.  To initialise the list the list end is inserted
	as the only list entry. */
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8007af4:	f100 0308 	add.w	r3, r0, #8

	/* The list end value is the highest possible value in the list to
	ensure it remains at the end of the list. */
	pxList->xListEnd.xItemValue = portMAX_DELAY;
 8007af8:	f04f 32ff 	mov.w	r2, #4294967295

	/* The list end next and previous pointers point to itself so we know
	when the list is empty. */
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8007afc:	e9c0 2302 	strd	r2, r3, [r0, #8]
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8007b00:	6043      	str	r3, [r0, #4]
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8007b02:	6103      	str	r3, [r0, #16]

	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
 8007b04:	2300      	movs	r3, #0
 8007b06:	6003      	str	r3, [r0, #0]

	/* Write known values into the list if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_LIST_INTEGRITY_CHECK_1_VALUE( pxList );
	listSET_LIST_INTEGRITY_CHECK_2_VALUE( pxList );
}
 8007b08:	4770      	bx	lr

08007b0a <vListInitialiseItem>:
/*-----------------------------------------------------------*/

void vListInitialiseItem( ListItem_t * const pxItem )
{
	/* Make sure the list item is not recorded as being on a list. */
	pxItem->pxContainer = NULL;
 8007b0a:	2300      	movs	r3, #0
 8007b0c:	6103      	str	r3, [r0, #16]

	/* Write known values into the list item if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
	listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
}
 8007b0e:	4770      	bx	lr

08007b10 <vListInsertEnd>:
/*-----------------------------------------------------------*/

void vListInsertEnd( List_t * const pxList, ListItem_t * const pxNewListItem )
{
ListItem_t * const pxIndex = pxList->pxIndex;
 8007b10:	6843      	ldr	r3, [r0, #4]
	listTEST_LIST_ITEM_INTEGRITY( pxNewListItem );

	/* Insert a new list item into pxList, but rather than sort the list,
	makes the new list item the last item to be removed by a call to
	listGET_OWNER_OF_NEXT_ENTRY(). */
	pxNewListItem->pxNext = pxIndex;
 8007b12:	604b      	str	r3, [r1, #4]
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
 8007b14:	689a      	ldr	r2, [r3, #8]
 8007b16:	608a      	str	r2, [r1, #8]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	pxIndex->pxPrevious->pxNext = pxNewListItem;
 8007b18:	6051      	str	r1, [r2, #4]
	pxIndex->pxPrevious = pxNewListItem;
 8007b1a:	6099      	str	r1, [r3, #8]

	/* Remember which list the item is in. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 8007b1c:	6803      	ldr	r3, [r0, #0]
	pxNewListItem->pxContainer = pxList;
 8007b1e:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 8007b20:	3301      	adds	r3, #1
 8007b22:	6003      	str	r3, [r0, #0]
}
 8007b24:	4770      	bx	lr

08007b26 <vListInsert>:
/*-----------------------------------------------------------*/

void vListInsert( List_t * const pxList, ListItem_t * const pxNewListItem )
{
 8007b26:	b530      	push	{r4, r5, lr}
ListItem_t *pxIterator;
const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
 8007b28:	680c      	ldr	r4, [r1, #0]
	new list item should be placed after it.  This ensures that TCBs which are
	stored in ready lists (all of which have the same xItemValue value) get a
	share of the CPU.  However, if the xItemValue is the same as the back marker
	the iteration loop below will not end.  Therefore the value is checked
	first, and the algorithm slightly modified if necessary. */
	if( xValueOfInsertion == portMAX_DELAY )
 8007b2a:	1c63      	adds	r3, r4, #1
 8007b2c:	d10a      	bne.n	8007b44 <vListInsert+0x1e>
	{
		pxIterator = pxList->xListEnd.pxPrevious;
 8007b2e:	6903      	ldr	r3, [r0, #16]
			/* There is nothing to do here, just iterating to the wanted
			insertion position. */
		}
	}

	pxNewListItem->pxNext = pxIterator->pxNext;
 8007b30:	685a      	ldr	r2, [r3, #4]
 8007b32:	604a      	str	r2, [r1, #4]
	pxNewListItem->pxNext->pxPrevious = pxNewListItem;
 8007b34:	6091      	str	r1, [r2, #8]
	pxNewListItem->pxPrevious = pxIterator;
 8007b36:	608b      	str	r3, [r1, #8]
	pxIterator->pxNext = pxNewListItem;
 8007b38:	6059      	str	r1, [r3, #4]

	/* Remember which list the item is in.  This allows fast removal of the
	item later. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 8007b3a:	6803      	ldr	r3, [r0, #0]
	pxNewListItem->pxContainer = pxList;
 8007b3c:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 8007b3e:	3301      	adds	r3, #1
 8007b40:	6003      	str	r3, [r0, #0]
}
 8007b42:	bd30      	pop	{r4, r5, pc}
		for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValueOfInsertion; pxIterator = pxIterator->pxNext ) /*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. *//*lint !e440 The iterator moves to a different value, not xValueOfInsertion. */
 8007b44:	f100 0208 	add.w	r2, r0, #8
 8007b48:	4613      	mov	r3, r2
 8007b4a:	6852      	ldr	r2, [r2, #4]
 8007b4c:	6815      	ldr	r5, [r2, #0]
 8007b4e:	42a5      	cmp	r5, r4
 8007b50:	d9fa      	bls.n	8007b48 <vListInsert+0x22>
 8007b52:	e7ed      	b.n	8007b30 <vListInsert+0xa>

08007b54 <uxListRemove>:
{
/* The list item knows which list it is in.  Obtain the list from the list
item. */
List_t * const pxList = pxItemToRemove->pxContainer;

	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 8007b54:	e9d0 1201 	ldrd	r1, r2, [r0, #4]
List_t * const pxList = pxItemToRemove->pxContainer;
 8007b58:	6903      	ldr	r3, [r0, #16]
	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 8007b5a:	608a      	str	r2, [r1, #8]
	pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
 8007b5c:	6051      	str	r1, [r2, #4]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	/* Make sure the index is left pointing to a valid item. */
	if( pxList->pxIndex == pxItemToRemove )
 8007b5e:	6859      	ldr	r1, [r3, #4]
 8007b60:	4281      	cmp	r1, r0
	{
		pxList->pxIndex = pxItemToRemove->pxPrevious;
 8007b62:	bf08      	it	eq
 8007b64:	605a      	streq	r2, [r3, #4]
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}

	pxItemToRemove->pxContainer = NULL;
 8007b66:	2200      	movs	r2, #0
 8007b68:	6102      	str	r2, [r0, #16]
	( pxList->uxNumberOfItems )--;
 8007b6a:	681a      	ldr	r2, [r3, #0]
 8007b6c:	3a01      	subs	r2, #1
 8007b6e:	601a      	str	r2, [r3, #0]

	return pxList->uxNumberOfItems;
 8007b70:	6818      	ldr	r0, [r3, #0]
}
 8007b72:	4770      	bx	lr

08007b74 <prvPortStartFirstTask>:
{
	/* Start the first task.  This also clears the bit that indicates the FPU is
	in use in case the FPU was used before the scheduler was started - which
	would otherwise result in the unnecessary leaving of space in the SVC stack
	for lazy saving of FPU registers. */
	__asm volatile(
 8007b74:	4808      	ldr	r0, [pc, #32]	@ (8007b98 <prvPortStartFirstTask+0x24>)
 8007b76:	6800      	ldr	r0, [r0, #0]
 8007b78:	6800      	ldr	r0, [r0, #0]
 8007b7a:	f380 8808 	msr	MSP, r0
 8007b7e:	f04f 0000 	mov.w	r0, #0
 8007b82:	f380 8814 	msr	CONTROL, r0
 8007b86:	b662      	cpsie	i
 8007b88:	b661      	cpsie	f
 8007b8a:	f3bf 8f4f 	dsb	sy
 8007b8e:	f3bf 8f6f 	isb	sy
 8007b92:	df00      	svc	0
 8007b94:	bf00      	nop
					" dsb					\n"
					" isb					\n"
					" svc 0					\n" /* System call to start first task. */
					" nop					\n"
				);
}
 8007b96:	0000      	.short	0x0000
 8007b98:	e000ed08 	.word	0xe000ed08

08007b9c <vPortEnableVFP>:
/*-----------------------------------------------------------*/

/* This is a naked function. */
static void vPortEnableVFP( void )
{
	__asm volatile
 8007b9c:	f8df 000c 	ldr.w	r0, [pc, #12]	@ 8007bac <vPortEnableVFP+0x10>
 8007ba0:	6801      	ldr	r1, [r0, #0]
 8007ba2:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 8007ba6:	6001      	str	r1, [r0, #0]
 8007ba8:	4770      	bx	lr
		"								\n"
		"	orr r1, r1, #( 0xf << 20 )	\n" /* Enable CP10 and CP11 coprocessors, then save back. */
		"	str r1, [r0]				\n"
		"	bx r14						"
	);
}
 8007baa:	0000      	.short	0x0000
 8007bac:	e000ed88 	.word	0xe000ed88

08007bb0 <prvTaskExitError>:
{
 8007bb0:	b082      	sub	sp, #8
volatile uint32_t ulDummy = 0;
 8007bb2:	2300      	movs	r3, #0
 8007bb4:	9301      	str	r3, [sp, #4]
	configASSERT( uxCriticalNesting == ~0UL );
 8007bb6:	4b0d      	ldr	r3, [pc, #52]	@ (8007bec <prvTaskExitError+0x3c>)
 8007bb8:	681b      	ldr	r3, [r3, #0]
 8007bba:	3301      	adds	r3, #1
 8007bbc:	d008      	beq.n	8007bd0 <prvTaskExitError+0x20>
 8007bbe:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007bc2:	f383 8811 	msr	BASEPRI, r3
 8007bc6:	f3bf 8f6f 	isb	sy
 8007bca:	f3bf 8f4f 	dsb	sy
 8007bce:	e7fe      	b.n	8007bce <prvTaskExitError+0x1e>
 8007bd0:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007bd4:	f383 8811 	msr	BASEPRI, r3
 8007bd8:	f3bf 8f6f 	isb	sy
 8007bdc:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
 8007be0:	9b01      	ldr	r3, [sp, #4]
 8007be2:	2b00      	cmp	r3, #0
 8007be4:	d0fc      	beq.n	8007be0 <prvTaskExitError+0x30>
}
 8007be6:	b002      	add	sp, #8
 8007be8:	4770      	bx	lr
 8007bea:	bf00      	nop
 8007bec:	200000d0 	.word	0x200000d0

08007bf0 <pxPortInitialiseStack>:
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
 8007bf0:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
 8007bf4:	f840 3c04 	str.w	r3, [r0, #-4]
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
 8007bf8:	4b07      	ldr	r3, [pc, #28]	@ (8007c18 <pxPortInitialiseStack+0x28>)
 8007bfa:	f840 3c0c 	str.w	r3, [r0, #-12]
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 8007bfe:	f021 0101 	bic.w	r1, r1, #1
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 8007c02:	f06f 0302 	mvn.w	r3, #2
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 8007c06:	f840 1c08 	str.w	r1, [r0, #-8]
	*pxTopOfStack = ( StackType_t ) pvParameters;	/* R0 */
 8007c0a:	f840 2c20 	str.w	r2, [r0, #-32]
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 8007c0e:	f840 3c24 	str.w	r3, [r0, #-36]
}
 8007c12:	3844      	subs	r0, #68	@ 0x44
 8007c14:	4770      	bx	lr
 8007c16:	bf00      	nop
 8007c18:	08007bb1 	.word	0x08007bb1
 8007c1c:	00000000 	.word	0x00000000

08007c20 <SVC_Handler>:
	__asm volatile (
 8007c20:	4b07      	ldr	r3, [pc, #28]	@ (8007c40 <pxCurrentTCBConst2>)
 8007c22:	6819      	ldr	r1, [r3, #0]
 8007c24:	6808      	ldr	r0, [r1, #0]
 8007c26:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007c2a:	f380 8809 	msr	PSP, r0
 8007c2e:	f3bf 8f6f 	isb	sy
 8007c32:	f04f 0000 	mov.w	r0, #0
 8007c36:	f380 8811 	msr	BASEPRI, r0
 8007c3a:	4770      	bx	lr
 8007c3c:	f3af 8000 	nop.w

08007c40 <pxCurrentTCBConst2>:
 8007c40:	20013f04 	.word	0x20013f04

08007c44 <vPortEnterCritical>:
 8007c44:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007c48:	f383 8811 	msr	BASEPRI, r3
 8007c4c:	f3bf 8f6f 	isb	sy
 8007c50:	f3bf 8f4f 	dsb	sy
	uxCriticalNesting++;
 8007c54:	4a0a      	ldr	r2, [pc, #40]	@ (8007c80 <vPortEnterCritical+0x3c>)
 8007c56:	6813      	ldr	r3, [r2, #0]
 8007c58:	3301      	adds	r3, #1
	if( uxCriticalNesting == 1 )
 8007c5a:	2b01      	cmp	r3, #1
	uxCriticalNesting++;
 8007c5c:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 1 )
 8007c5e:	d10e      	bne.n	8007c7e <vPortEnterCritical+0x3a>
		configASSERT( ( portNVIC_INT_CTRL_REG & portVECTACTIVE_MASK ) == 0 );
 8007c60:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8007c64:	f8d3 3d04 	ldr.w	r3, [r3, #3332]	@ 0xd04
 8007c68:	b2db      	uxtb	r3, r3
 8007c6a:	b143      	cbz	r3, 8007c7e <vPortEnterCritical+0x3a>
 8007c6c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007c70:	f383 8811 	msr	BASEPRI, r3
 8007c74:	f3bf 8f6f 	isb	sy
 8007c78:	f3bf 8f4f 	dsb	sy
 8007c7c:	e7fe      	b.n	8007c7c <vPortEnterCritical+0x38>
}
 8007c7e:	4770      	bx	lr
 8007c80:	200000d0 	.word	0x200000d0

08007c84 <vPortExitCritical>:
	configASSERT( uxCriticalNesting );
 8007c84:	4a08      	ldr	r2, [pc, #32]	@ (8007ca8 <vPortExitCritical+0x24>)
 8007c86:	6813      	ldr	r3, [r2, #0]
 8007c88:	b943      	cbnz	r3, 8007c9c <vPortExitCritical+0x18>
 8007c8a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007c8e:	f383 8811 	msr	BASEPRI, r3
 8007c92:	f3bf 8f6f 	isb	sy
 8007c96:	f3bf 8f4f 	dsb	sy
 8007c9a:	e7fe      	b.n	8007c9a <vPortExitCritical+0x16>
	uxCriticalNesting--;
 8007c9c:	3b01      	subs	r3, #1
 8007c9e:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 0 )
 8007ca0:	b90b      	cbnz	r3, 8007ca6 <vPortExitCritical+0x22>
}
/*-----------------------------------------------------------*/

portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
{
	__asm volatile
 8007ca2:	f383 8811 	msr	BASEPRI, r3
}
 8007ca6:	4770      	bx	lr
 8007ca8:	200000d0 	.word	0x200000d0
 8007cac:	00000000 	.word	0x00000000

08007cb0 <PendSV_Handler>:
	__asm volatile
 8007cb0:	f3ef 8009 	mrs	r0, PSP
 8007cb4:	f3bf 8f6f 	isb	sy
 8007cb8:	4b15      	ldr	r3, [pc, #84]	@ (8007d10 <pxCurrentTCBConst>)
 8007cba:	681a      	ldr	r2, [r3, #0]
 8007cbc:	f01e 0f10 	tst.w	lr, #16
 8007cc0:	bf08      	it	eq
 8007cc2:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
 8007cc6:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007cca:	6010      	str	r0, [r2, #0]
 8007ccc:	e92d 0009 	stmdb	sp!, {r0, r3}
 8007cd0:	f04f 0050 	mov.w	r0, #80	@ 0x50
 8007cd4:	f380 8811 	msr	BASEPRI, r0
 8007cd8:	f3bf 8f4f 	dsb	sy
 8007cdc:	f3bf 8f6f 	isb	sy
 8007ce0:	f001 f924 	bl	8008f2c <vTaskSwitchContext>
 8007ce4:	f04f 0000 	mov.w	r0, #0
 8007ce8:	f380 8811 	msr	BASEPRI, r0
 8007cec:	bc09      	pop	{r0, r3}
 8007cee:	6819      	ldr	r1, [r3, #0]
 8007cf0:	6808      	ldr	r0, [r1, #0]
 8007cf2:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007cf6:	f01e 0f10 	tst.w	lr, #16
 8007cfa:	bf08      	it	eq
 8007cfc:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
 8007d00:	f380 8809 	msr	PSP, r0
 8007d04:	f3bf 8f6f 	isb	sy
 8007d08:	4770      	bx	lr
 8007d0a:	bf00      	nop
 8007d0c:	f3af 8000 	nop.w

08007d10 <pxCurrentTCBConst>:
 8007d10:	20013f04 	.word	0x20013f04

08007d14 <xPortSysTickHandler>:
{
 8007d14:	b508      	push	{r3, lr}
	__asm volatile
 8007d16:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007d1a:	f383 8811 	msr	BASEPRI, r3
 8007d1e:	f3bf 8f6f 	isb	sy
 8007d22:	f3bf 8f4f 	dsb	sy
		if( xTaskIncrementTick() != pdFALSE )
 8007d26:	f000 ffd3 	bl	8008cd0 <xTaskIncrementTick>
 8007d2a:	b128      	cbz	r0, 8007d38 <xPortSysTickHandler+0x24>
			portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
 8007d2c:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8007d30:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8007d34:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
	__asm volatile
 8007d38:	2300      	movs	r3, #0
 8007d3a:	f383 8811 	msr	BASEPRI, r3
}
 8007d3e:	bd08      	pop	{r3, pc}

08007d40 <vPortSetupTimerInterrupt>:
	portNVIC_SYSTICK_CTRL_REG = 0UL;
 8007d40:	f04f 22e0 	mov.w	r2, #3758153728	@ 0xe000e000
 8007d44:	2300      	movs	r3, #0
 8007d46:	6113      	str	r3, [r2, #16]
	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
 8007d48:	6193      	str	r3, [r2, #24]
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 8007d4a:	4b05      	ldr	r3, [pc, #20]	@ (8007d60 <vPortSetupTimerInterrupt+0x20>)
 8007d4c:	f44f 717a 	mov.w	r1, #1000	@ 0x3e8
 8007d50:	681b      	ldr	r3, [r3, #0]
 8007d52:	fbb3 f3f1 	udiv	r3, r3, r1
 8007d56:	3b01      	subs	r3, #1
 8007d58:	6153      	str	r3, [r2, #20]
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
 8007d5a:	2307      	movs	r3, #7
 8007d5c:	6113      	str	r3, [r2, #16]
}
 8007d5e:	4770      	bx	lr
 8007d60:	200000c4 	.word	0x200000c4

08007d64 <xPortStartScheduler>:
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 8007d64:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
{
 8007d68:	b537      	push	{r0, r1, r2, r4, r5, lr}
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 8007d6a:	f8d3 1d00 	ldr.w	r1, [r3, #3328]	@ 0xd00
 8007d6e:	4a38      	ldr	r2, [pc, #224]	@ (8007e50 <xPortStartScheduler+0xec>)
 8007d70:	4291      	cmp	r1, r2
 8007d72:	d108      	bne.n	8007d86 <xPortStartScheduler+0x22>
	__asm volatile
 8007d74:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007d78:	f383 8811 	msr	BASEPRI, r3
 8007d7c:	f3bf 8f6f 	isb	sy
 8007d80:	f3bf 8f4f 	dsb	sy
 8007d84:	e7fe      	b.n	8007d84 <xPortStartScheduler+0x20>
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
 8007d86:	f8d3 2d00 	ldr.w	r2, [r3, #3328]	@ 0xd00
 8007d8a:	4b32      	ldr	r3, [pc, #200]	@ (8007e54 <xPortStartScheduler+0xf0>)
 8007d8c:	429a      	cmp	r2, r3
 8007d8e:	d108      	bne.n	8007da2 <xPortStartScheduler+0x3e>
 8007d90:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007d94:	f383 8811 	msr	BASEPRI, r3
 8007d98:	f3bf 8f6f 	isb	sy
 8007d9c:	f3bf 8f4f 	dsb	sy
 8007da0:	e7fe      	b.n	8007da0 <xPortStartScheduler+0x3c>
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 8007da2:	4b2d      	ldr	r3, [pc, #180]	@ (8007e58 <xPortStartScheduler+0xf4>)
 8007da4:	781a      	ldrb	r2, [r3, #0]
 8007da6:	b2d2      	uxtb	r2, r2
 8007da8:	9201      	str	r2, [sp, #4]
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
 8007daa:	22ff      	movs	r2, #255	@ 0xff
 8007dac:	701a      	strb	r2, [r3, #0]
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 8007dae:	781b      	ldrb	r3, [r3, #0]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 8007db0:	4a2a      	ldr	r2, [pc, #168]	@ (8007e5c <xPortStartScheduler+0xf8>)
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 8007db2:	b2db      	uxtb	r3, r3
 8007db4:	f88d 3003 	strb.w	r3, [sp, #3]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 8007db8:	f89d 3003 	ldrb.w	r3, [sp, #3]
 8007dbc:	f003 0350 	and.w	r3, r3, #80	@ 0x50
 8007dc0:	7013      	strb	r3, [r2, #0]
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 8007dc2:	4a27      	ldr	r2, [pc, #156]	@ (8007e60 <xPortStartScheduler+0xfc>)
 8007dc4:	2307      	movs	r3, #7
 8007dc6:	6013      	str	r3, [r2, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 8007dc8:	f89d 1003 	ldrb.w	r1, [sp, #3]
			ulMaxPRIGROUPValue--;
 8007dcc:	6813      	ldr	r3, [r2, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 8007dce:	0609      	lsls	r1, r1, #24
 8007dd0:	d40a      	bmi.n	8007de8 <xPortStartScheduler+0x84>
			configASSERT( ( portMAX_PRIGROUP_BITS - ulMaxPRIGROUPValue ) == configPRIO_BITS );
 8007dd2:	2b03      	cmp	r3, #3
 8007dd4:	d011      	beq.n	8007dfa <xPortStartScheduler+0x96>
 8007dd6:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007dda:	f383 8811 	msr	BASEPRI, r3
 8007dde:	f3bf 8f6f 	isb	sy
 8007de2:	f3bf 8f4f 	dsb	sy
 8007de6:	e7fe      	b.n	8007de6 <xPortStartScheduler+0x82>
			ulMaxPRIGROUPValue--;
 8007de8:	3b01      	subs	r3, #1
 8007dea:	6013      	str	r3, [r2, #0]
			ucMaxPriorityValue <<= ( uint8_t ) 0x01;
 8007dec:	f89d 3003 	ldrb.w	r3, [sp, #3]
 8007df0:	005b      	lsls	r3, r3, #1
 8007df2:	b2db      	uxtb	r3, r3
 8007df4:	f88d 3003 	strb.w	r3, [sp, #3]
 8007df8:	e7e6      	b.n	8007dc8 <xPortStartScheduler+0x64>
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
 8007dfa:	f44f 7340 	mov.w	r3, #768	@ 0x300
 8007dfe:	6013      	str	r3, [r2, #0]
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 8007e00:	9b01      	ldr	r3, [sp, #4]
 8007e02:	4a15      	ldr	r2, [pc, #84]	@ (8007e58 <xPortStartScheduler+0xf4>)
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 8007e04:	f04f 24e0 	mov.w	r4, #3758153728	@ 0xe000e000
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 8007e08:	b2db      	uxtb	r3, r3
 8007e0a:	7013      	strb	r3, [r2, #0]
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 8007e0c:	f8d4 3d20 	ldr.w	r3, [r4, #3360]	@ 0xd20
 8007e10:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
 8007e14:	f8c4 3d20 	str.w	r3, [r4, #3360]	@ 0xd20
	portNVIC_SYSPRI2_REG |= portNVIC_SYSTICK_PRI;
 8007e18:	f8d4 3d20 	ldr.w	r3, [r4, #3360]	@ 0xd20
 8007e1c:	f043 4370 	orr.w	r3, r3, #4026531840	@ 0xf0000000
 8007e20:	f8c4 3d20 	str.w	r3, [r4, #3360]	@ 0xd20
	vPortSetupTimerInterrupt();
 8007e24:	f7ff ff8c 	bl	8007d40 <vPortSetupTimerInterrupt>
	uxCriticalNesting = 0;
 8007e28:	4b0e      	ldr	r3, [pc, #56]	@ (8007e64 <xPortStartScheduler+0x100>)
 8007e2a:	2500      	movs	r5, #0
 8007e2c:	601d      	str	r5, [r3, #0]
	vPortEnableVFP();
 8007e2e:	f7ff feb5 	bl	8007b9c <vPortEnableVFP>
	*( portFPCCR ) |= portASPEN_AND_LSPEN_BITS;
 8007e32:	f8d4 3f34 	ldr.w	r3, [r4, #3892]	@ 0xf34
 8007e36:	f043 4340 	orr.w	r3, r3, #3221225472	@ 0xc0000000
 8007e3a:	f8c4 3f34 	str.w	r3, [r4, #3892]	@ 0xf34
	prvPortStartFirstTask();
 8007e3e:	f7ff fe99 	bl	8007b74 <prvPortStartFirstTask>
	vTaskSwitchContext();
 8007e42:	f001 f873 	bl	8008f2c <vTaskSwitchContext>
	prvTaskExitError();
 8007e46:	f7ff feb3 	bl	8007bb0 <prvTaskExitError>
}
 8007e4a:	4628      	mov	r0, r5
 8007e4c:	b003      	add	sp, #12
 8007e4e:	bd30      	pop	{r4, r5, pc}
 8007e50:	410fc271 	.word	0x410fc271
 8007e54:	410fc270 	.word	0x410fc270
 8007e58:	e000e400 	.word	0xe000e400
 8007e5c:	200139c8 	.word	0x200139c8
 8007e60:	200139c4 	.word	0x200139c4
 8007e64:	200000d0 	.word	0x200000d0

08007e68 <vPortValidateInterruptPriority>:
	{
	uint32_t ulCurrentInterrupt;
	uint8_t ucCurrentPriority;

		/* Obtain the number of the currently executing interrupt. */
		__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 8007e68:	f3ef 8305 	mrs	r3, IPSR

		/* Is the interrupt number a user defined interrupt? */
		if( ulCurrentInterrupt >= portFIRST_USER_INTERRUPT_NUMBER )
 8007e6c:	2b0f      	cmp	r3, #15
 8007e6e:	d90e      	bls.n	8007e8e <vPortValidateInterruptPriority+0x26>
		{
			/* Look up the interrupt's priority. */
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
 8007e70:	4a11      	ldr	r2, [pc, #68]	@ (8007eb8 <vPortValidateInterruptPriority+0x50>)
 8007e72:	5c9b      	ldrb	r3, [r3, r2]
			interrupt entry is as fast and simple as possible.

			The following links provide detailed information:
			http://www.freertos.org/RTOS-Cortex-M3-M4.html
			http://www.freertos.org/FAQHelp.html */
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
 8007e74:	4a11      	ldr	r2, [pc, #68]	@ (8007ebc <vPortValidateInterruptPriority+0x54>)
 8007e76:	7812      	ldrb	r2, [r2, #0]
 8007e78:	429a      	cmp	r2, r3
 8007e7a:	d908      	bls.n	8007e8e <vPortValidateInterruptPriority+0x26>
 8007e7c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007e80:	f383 8811 	msr	BASEPRI, r3
 8007e84:	f3bf 8f6f 	isb	sy
 8007e88:	f3bf 8f4f 	dsb	sy
 8007e8c:	e7fe      	b.n	8007e8c <vPortValidateInterruptPriority+0x24>
		configuration then the correct setting can be achieved on all Cortex-M
		devices by calling NVIC_SetPriorityGrouping( 0 ); before starting the
		scheduler.  Note however that some vendor specific peripheral libraries
		assume a non-zero priority group setting, in which cases using a value
		of zero will result in unpredictable behaviour. */
		configASSERT( ( portAIRCR_REG & portPRIORITY_GROUP_MASK ) <= ulMaxPRIGROUPValue );
 8007e8e:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8007e92:	4a0b      	ldr	r2, [pc, #44]	@ (8007ec0 <vPortValidateInterruptPriority+0x58>)
 8007e94:	f8d3 3d0c 	ldr.w	r3, [r3, #3340]	@ 0xd0c
 8007e98:	6812      	ldr	r2, [r2, #0]
 8007e9a:	f403 63e0 	and.w	r3, r3, #1792	@ 0x700
 8007e9e:	4293      	cmp	r3, r2
 8007ea0:	d908      	bls.n	8007eb4 <vPortValidateInterruptPriority+0x4c>
 8007ea2:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007ea6:	f383 8811 	msr	BASEPRI, r3
 8007eaa:	f3bf 8f6f 	isb	sy
 8007eae:	f3bf 8f4f 	dsb	sy
 8007eb2:	e7fe      	b.n	8007eb2 <vPortValidateInterruptPriority+0x4a>
	}
 8007eb4:	4770      	bx	lr
 8007eb6:	bf00      	nop
 8007eb8:	e000e3f0 	.word	0xe000e3f0
 8007ebc:	200139c8 	.word	0x200139c8
 8007ec0:	200139c4 	.word	0x200139c4

08007ec4 <prvIsQueueEmpty>:
	taskEXIT_CRITICAL();
}
/*-----------------------------------------------------------*/

static BaseType_t prvIsQueueEmpty( const Queue_t *pxQueue )
{
 8007ec4:	b510      	push	{r4, lr}
 8007ec6:	4604      	mov	r4, r0
BaseType_t xReturn;

	taskENTER_CRITICAL();
 8007ec8:	f7ff febc 	bl	8007c44 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 8007ecc:	6ba4      	ldr	r4, [r4, #56]	@ 0x38
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 8007ece:	f7ff fed9 	bl	8007c84 <vPortExitCritical>

	return xReturn;
}
 8007ed2:	fab4 f084 	clz	r0, r4
 8007ed6:	0940      	lsrs	r0, r0, #5
 8007ed8:	bd10      	pop	{r4, pc}

08007eda <prvCopyDataToQueue>:
{
 8007eda:	b570      	push	{r4, r5, r6, lr}
 8007edc:	4616      	mov	r6, r2
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 8007ede:	6c02      	ldr	r2, [r0, #64]	@ 0x40
	uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 8007ee0:	6b85      	ldr	r5, [r0, #56]	@ 0x38
{
 8007ee2:	4604      	mov	r4, r0
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 8007ee4:	b942      	cbnz	r2, 8007ef8 <prvCopyDataToQueue+0x1e>
			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 8007ee6:	6806      	ldr	r6, [r0, #0]
 8007ee8:	b99e      	cbnz	r6, 8007f12 <prvCopyDataToQueue+0x38>
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
 8007eea:	6880      	ldr	r0, [r0, #8]
 8007eec:	f001 f96c 	bl	80091c8 <xTaskPriorityDisinherit>
				pxQueue->u.xSemaphore.xMutexHolder = NULL;
 8007ef0:	60a6      	str	r6, [r4, #8]
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 8007ef2:	3501      	adds	r5, #1
 8007ef4:	63a5      	str	r5, [r4, #56]	@ 0x38
}
 8007ef6:	bd70      	pop	{r4, r5, r6, pc}
	else if( xPosition == queueSEND_TO_BACK )
 8007ef8:	b96e      	cbnz	r6, 8007f16 <prvCopyDataToQueue+0x3c>
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 8007efa:	6840      	ldr	r0, [r0, #4]
 8007efc:	f01b f919 	bl	8023132 <memcpy>
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8007f00:	6863      	ldr	r3, [r4, #4]
 8007f02:	6c22      	ldr	r2, [r4, #64]	@ 0x40
 8007f04:	4413      	add	r3, r2
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 8007f06:	68a2      	ldr	r2, [r4, #8]
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8007f08:	6063      	str	r3, [r4, #4]
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 8007f0a:	4293      	cmp	r3, r2
			pxQueue->pcWriteTo = pxQueue->pcHead;
 8007f0c:	bf24      	itt	cs
 8007f0e:	6823      	ldrcs	r3, [r4, #0]
 8007f10:	6063      	strcs	r3, [r4, #4]
BaseType_t xReturn = pdFALSE;
 8007f12:	2000      	movs	r0, #0
 8007f14:	e7ed      	b.n	8007ef2 <prvCopyDataToQueue+0x18>
		( void ) memcpy( ( void * ) pxQueue->u.xQueue.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e9087 !e418 MISRA exception as the casts are only redundant for some ports.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes.  Assert checks null pointer only used when length is 0. */
 8007f16:	68c0      	ldr	r0, [r0, #12]
 8007f18:	f01b f90b 	bl	8023132 <memcpy>
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 8007f1c:	6c22      	ldr	r2, [r4, #64]	@ 0x40
 8007f1e:	68e3      	ldr	r3, [r4, #12]
 8007f20:	4251      	negs	r1, r2
 8007f22:	1a9b      	subs	r3, r3, r2
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 8007f24:	6822      	ldr	r2, [r4, #0]
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 8007f26:	60e3      	str	r3, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 8007f28:	4293      	cmp	r3, r2
			pxQueue->u.xQueue.pcReadFrom = ( pxQueue->u.xQueue.pcTail - pxQueue->uxItemSize );
 8007f2a:	bf3e      	ittt	cc
 8007f2c:	68a3      	ldrcc	r3, [r4, #8]
 8007f2e:	185b      	addcc	r3, r3, r1
 8007f30:	60e3      	strcc	r3, [r4, #12]
		if( xPosition == queueOVERWRITE )
 8007f32:	2e02      	cmp	r6, #2
 8007f34:	d1ed      	bne.n	8007f12 <prvCopyDataToQueue+0x38>
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 8007f36:	b10d      	cbz	r5, 8007f3c <prvCopyDataToQueue+0x62>
				--uxMessagesWaiting;
 8007f38:	3d01      	subs	r5, #1
 8007f3a:	e7ea      	b.n	8007f12 <prvCopyDataToQueue+0x38>
BaseType_t xReturn = pdFALSE;
 8007f3c:	4628      	mov	r0, r5
 8007f3e:	e7d8      	b.n	8007ef2 <prvCopyDataToQueue+0x18>

08007f40 <prvCopyDataFromQueue>:
{
 8007f40:	4603      	mov	r3, r0
 8007f42:	b410      	push	{r4}
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 8007f44:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
{
 8007f46:	4608      	mov	r0, r1
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 8007f48:	b16a      	cbz	r2, 8007f66 <prvCopyDataFromQueue+0x26>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8007f4a:	68dc      	ldr	r4, [r3, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 8007f4c:	6899      	ldr	r1, [r3, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8007f4e:	4414      	add	r4, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 8007f50:	428c      	cmp	r4, r1
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 8007f52:	bf28      	it	cs
 8007f54:	6819      	ldrcs	r1, [r3, #0]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8007f56:	60dc      	str	r4, [r3, #12]
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 8007f58:	bf28      	it	cs
 8007f5a:	60d9      	strcs	r1, [r3, #12]
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 8007f5c:	68d9      	ldr	r1, [r3, #12]
}
 8007f5e:	f85d 4b04 	ldr.w	r4, [sp], #4
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 8007f62:	f01b b8e6 	b.w	8023132 <memcpy>
}
 8007f66:	f85d 4b04 	ldr.w	r4, [sp], #4
 8007f6a:	4770      	bx	lr

08007f6c <prvUnlockQueue>:
{
 8007f6c:	b570      	push	{r4, r5, r6, lr}
 8007f6e:	4604      	mov	r4, r0
	taskENTER_CRITICAL();
 8007f70:	f7ff fe68 	bl	8007c44 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 8007f74:	f894 5045 	ldrb.w	r5, [r4, #69]	@ 0x45
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8007f78:	f104 0624 	add.w	r6, r4, #36	@ 0x24
		int8_t cTxLock = pxQueue->cTxLock;
 8007f7c:	b26d      	sxtb	r5, r5
		while( cTxLock > queueLOCKED_UNMODIFIED )
 8007f7e:	2d00      	cmp	r5, #0
 8007f80:	dd01      	ble.n	8007f86 <prvUnlockQueue+0x1a>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8007f82:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8007f84:	b9b3      	cbnz	r3, 8007fb4 <prvUnlockQueue+0x48>
		pxQueue->cTxLock = queueUNLOCKED;
 8007f86:	23ff      	movs	r3, #255	@ 0xff
 8007f88:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
	taskEXIT_CRITICAL();
 8007f8c:	f7ff fe7a 	bl	8007c84 <vPortExitCritical>
	taskENTER_CRITICAL();
 8007f90:	f7ff fe58 	bl	8007c44 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 8007f94:	f894 5044 	ldrb.w	r5, [r4, #68]	@ 0x44
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8007f98:	f104 0610 	add.w	r6, r4, #16
		int8_t cRxLock = pxQueue->cRxLock;
 8007f9c:	b26d      	sxtb	r5, r5
		while( cRxLock > queueLOCKED_UNMODIFIED )
 8007f9e:	2d00      	cmp	r5, #0
 8007fa0:	dd01      	ble.n	8007fa6 <prvUnlockQueue+0x3a>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8007fa2:	6923      	ldr	r3, [r4, #16]
 8007fa4:	b97b      	cbnz	r3, 8007fc6 <prvUnlockQueue+0x5a>
		pxQueue->cRxLock = queueUNLOCKED;
 8007fa6:	23ff      	movs	r3, #255	@ 0xff
 8007fa8:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
}
 8007fac:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	taskEXIT_CRITICAL();
 8007fb0:	f7ff be68 	b.w	8007c84 <vPortExitCritical>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8007fb4:	4630      	mov	r0, r6
 8007fb6:	f001 f82b 	bl	8009010 <xTaskRemoveFromEventList>
 8007fba:	b108      	cbz	r0, 8007fc0 <prvUnlockQueue+0x54>
						vTaskMissedYield();
 8007fbc:	f001 f8b0 	bl	8009120 <vTaskMissedYield>
			--cTxLock;
 8007fc0:	3d01      	subs	r5, #1
 8007fc2:	b26d      	sxtb	r5, r5
 8007fc4:	e7db      	b.n	8007f7e <prvUnlockQueue+0x12>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8007fc6:	4630      	mov	r0, r6
 8007fc8:	f001 f822 	bl	8009010 <xTaskRemoveFromEventList>
 8007fcc:	b108      	cbz	r0, 8007fd2 <prvUnlockQueue+0x66>
					vTaskMissedYield();
 8007fce:	f001 f8a7 	bl	8009120 <vTaskMissedYield>
				--cRxLock;
 8007fd2:	3d01      	subs	r5, #1
 8007fd4:	b26d      	sxtb	r5, r5
 8007fd6:	e7e2      	b.n	8007f9e <prvUnlockQueue+0x32>

08007fd8 <xQueueGenericReset>:
{
 8007fd8:	b538      	push	{r3, r4, r5, lr}
 8007fda:	460d      	mov	r5, r1
	configASSERT( pxQueue );
 8007fdc:	4604      	mov	r4, r0
 8007fde:	b940      	cbnz	r0, 8007ff2 <xQueueGenericReset+0x1a>
 8007fe0:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007fe4:	f383 8811 	msr	BASEPRI, r3
 8007fe8:	f3bf 8f6f 	isb	sy
 8007fec:	f3bf 8f4f 	dsb	sy
 8007ff0:	e7fe      	b.n	8007ff0 <xQueueGenericReset+0x18>
	taskENTER_CRITICAL();
 8007ff2:	f7ff fe27 	bl	8007c44 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8007ff6:	e9d4 310f 	ldrd	r3, r1, [r4, #60]	@ 0x3c
 8007ffa:	6822      	ldr	r2, [r4, #0]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 8007ffc:	6062      	str	r2, [r4, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8007ffe:	434b      	muls	r3, r1
 8008000:	18d0      	adds	r0, r2, r3
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8008002:	1a5b      	subs	r3, r3, r1
 8008004:	441a      	add	r2, r3
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8008006:	60a0      	str	r0, [r4, #8]
		pxQueue->cRxLock = queueUNLOCKED;
 8008008:	23ff      	movs	r3, #255	@ 0xff
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800800a:	2000      	movs	r0, #0
 800800c:	63a0      	str	r0, [r4, #56]	@ 0x38
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800800e:	60e2      	str	r2, [r4, #12]
		pxQueue->cRxLock = queueUNLOCKED;
 8008010:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
		pxQueue->cTxLock = queueUNLOCKED;
 8008014:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
		if( xNewQueue == pdFALSE )
 8008018:	b9a5      	cbnz	r5, 8008044 <xQueueGenericReset+0x6c>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800801a:	6923      	ldr	r3, [r4, #16]
 800801c:	b173      	cbz	r3, 800803c <xQueueGenericReset+0x64>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800801e:	f104 0010 	add.w	r0, r4, #16
 8008022:	f000 fff5 	bl	8009010 <xTaskRemoveFromEventList>
 8008026:	b148      	cbz	r0, 800803c <xQueueGenericReset+0x64>
					queueYIELD_IF_USING_PREEMPTION();
 8008028:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800802c:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8008030:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8008034:	f3bf 8f4f 	dsb	sy
 8008038:	f3bf 8f6f 	isb	sy
	taskEXIT_CRITICAL();
 800803c:	f7ff fe22 	bl	8007c84 <vPortExitCritical>
}
 8008040:	2001      	movs	r0, #1
 8008042:	bd38      	pop	{r3, r4, r5, pc}
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 8008044:	f104 0010 	add.w	r0, r4, #16
 8008048:	f7ff fd54 	bl	8007af4 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 800804c:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 8008050:	f7ff fd50 	bl	8007af4 <vListInitialise>
 8008054:	e7f2      	b.n	800803c <xQueueGenericReset+0x64>

08008056 <xQueueGenericCreateStatic>:
	{
 8008056:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8008058:	460d      	mov	r5, r1
 800805a:	461c      	mov	r4, r3
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 800805c:	b940      	cbnz	r0, 8008070 <xQueueGenericCreateStatic+0x1a>
 800805e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008062:	f383 8811 	msr	BASEPRI, r3
 8008066:	f3bf 8f6f 	isb	sy
 800806a:	f3bf 8f4f 	dsb	sy
 800806e:	e7fe      	b.n	800806e <xQueueGenericCreateStatic+0x18>
		configASSERT( pxStaticQueue != NULL );
 8008070:	b943      	cbnz	r3, 8008084 <xQueueGenericCreateStatic+0x2e>
 8008072:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008076:	f383 8811 	msr	BASEPRI, r3
 800807a:	f3bf 8f6f 	isb	sy
 800807e:	f3bf 8f4f 	dsb	sy
 8008082:	e7fe      	b.n	8008082 <xQueueGenericCreateStatic+0x2c>
		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
 8008084:	b14a      	cbz	r2, 800809a <xQueueGenericCreateStatic+0x44>
 8008086:	b991      	cbnz	r1, 80080ae <xQueueGenericCreateStatic+0x58>
 8008088:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800808c:	f383 8811 	msr	BASEPRI, r3
 8008090:	f3bf 8f6f 	isb	sy
 8008094:	f3bf 8f4f 	dsb	sy
 8008098:	e7fe      	b.n	8008098 <xQueueGenericCreateStatic+0x42>
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 800809a:	b141      	cbz	r1, 80080ae <xQueueGenericCreateStatic+0x58>
 800809c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80080a0:	f383 8811 	msr	BASEPRI, r3
 80080a4:	f3bf 8f6f 	isb	sy
 80080a8:	f3bf 8f4f 	dsb	sy
 80080ac:	e7fe      	b.n	80080ac <xQueueGenericCreateStatic+0x56>
			volatile size_t xSize = sizeof( StaticQueue_t );
 80080ae:	2350      	movs	r3, #80	@ 0x50
 80080b0:	9301      	str	r3, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
 80080b2:	9b01      	ldr	r3, [sp, #4]
 80080b4:	2b50      	cmp	r3, #80	@ 0x50
 80080b6:	d008      	beq.n	80080ca <xQueueGenericCreateStatic+0x74>
 80080b8:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80080bc:	f383 8811 	msr	BASEPRI, r3
 80080c0:	f3bf 8f6f 	isb	sy
 80080c4:	f3bf 8f4f 	dsb	sy
 80080c8:	e7fe      	b.n	80080c8 <xQueueGenericCreateStatic+0x72>
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 80080ca:	2101      	movs	r1, #1
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 80080cc:	2d00      	cmp	r5, #0
 80080ce:	bf08      	it	eq
 80080d0:	4622      	moveq	r2, r4
	pxNewQueue->uxItemSize = uxItemSize;
 80080d2:	e9c4 050f 	strd	r0, r5, [r4, #60]	@ 0x3c
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 80080d6:	f884 1046 	strb.w	r1, [r4, #70]	@ 0x46
 80080da:	6022      	str	r2, [r4, #0]
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 80080dc:	4620      	mov	r0, r4
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 80080de:	9b01      	ldr	r3, [sp, #4]
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 80080e0:	f7ff ff7a 	bl	8007fd8 <xQueueGenericReset>
		pxNewQueue->ucQueueType = ucQueueType;
 80080e4:	f89d 3018 	ldrb.w	r3, [sp, #24]
 80080e8:	f884 304c 	strb.w	r3, [r4, #76]	@ 0x4c
	}
 80080ec:	4620      	mov	r0, r4
 80080ee:	b003      	add	sp, #12
 80080f0:	bd30      	pop	{r4, r5, pc}

080080f2 <xQueueGenericCreate>:
	{
 80080f2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80080f4:	460d      	mov	r5, r1
 80080f6:	4617      	mov	r7, r2
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 80080f8:	4606      	mov	r6, r0
 80080fa:	b940      	cbnz	r0, 800810e <xQueueGenericCreate+0x1c>
 80080fc:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008100:	f383 8811 	msr	BASEPRI, r3
 8008104:	f3bf 8f6f 	isb	sy
 8008108:	f3bf 8f4f 	dsb	sy
 800810c:	e7fe      	b.n	800810c <xQueueGenericCreate+0x1a>
		xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800810e:	4348      	muls	r0, r1
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
 8008110:	3050      	adds	r0, #80	@ 0x50
 8008112:	f7ff fc19 	bl	8007948 <pvPortMalloc>
		if( pxNewQueue != NULL )
 8008116:	4604      	mov	r4, r0
 8008118:	b170      	cbz	r0, 8008138 <xQueueGenericCreate+0x46>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 800811a:	2300      	movs	r3, #0
 800811c:	f880 3046 	strb.w	r3, [r0, #70]	@ 0x46
	if( uxItemSize == ( UBaseType_t ) 0 )
 8008120:	b165      	cbz	r5, 800813c <xQueueGenericCreate+0x4a>
			pucQueueStorage += sizeof( Queue_t ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8008122:	f100 0350 	add.w	r3, r0, #80	@ 0x50
	pxNewQueue->uxItemSize = uxItemSize;
 8008126:	e9c4 650f 	strd	r6, r5, [r4, #60]	@ 0x3c
 800812a:	6023      	str	r3, [r4, #0]
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 800812c:	2101      	movs	r1, #1
 800812e:	4620      	mov	r0, r4
 8008130:	f7ff ff52 	bl	8007fd8 <xQueueGenericReset>
		pxNewQueue->ucQueueType = ucQueueType;
 8008134:	f884 704c 	strb.w	r7, [r4, #76]	@ 0x4c
	}
 8008138:	4620      	mov	r0, r4
 800813a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 800813c:	4603      	mov	r3, r0
 800813e:	e7f2      	b.n	8008126 <xQueueGenericCreate+0x34>

08008140 <xQueueCreateCountingSemaphoreStatic>:
	{
 8008140:	b513      	push	{r0, r1, r4, lr}
 8008142:	4613      	mov	r3, r2
 8008144:	460c      	mov	r4, r1
		configASSERT( uxMaxCount != 0 );
 8008146:	b940      	cbnz	r0, 800815a <xQueueCreateCountingSemaphoreStatic+0x1a>
 8008148:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800814c:	f383 8811 	msr	BASEPRI, r3
 8008150:	f3bf 8f6f 	isb	sy
 8008154:	f3bf 8f4f 	dsb	sy
 8008158:	e7fe      	b.n	8008158 <xQueueCreateCountingSemaphoreStatic+0x18>
		configASSERT( uxInitialCount <= uxMaxCount );
 800815a:	4288      	cmp	r0, r1
 800815c:	d208      	bcs.n	8008170 <xQueueCreateCountingSemaphoreStatic+0x30>
 800815e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008162:	f383 8811 	msr	BASEPRI, r3
 8008166:	f3bf 8f6f 	isb	sy
 800816a:	f3bf 8f4f 	dsb	sy
 800816e:	e7fe      	b.n	800816e <xQueueCreateCountingSemaphoreStatic+0x2e>
		xHandle = xQueueGenericCreateStatic( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, NULL, pxStaticQueue, queueQUEUE_TYPE_COUNTING_SEMAPHORE );
 8008170:	2202      	movs	r2, #2
 8008172:	9200      	str	r2, [sp, #0]
 8008174:	2200      	movs	r2, #0
 8008176:	4611      	mov	r1, r2
 8008178:	f7ff ff6d 	bl	8008056 <xQueueGenericCreateStatic>
		if( xHandle != NULL )
 800817c:	b100      	cbz	r0, 8008180 <xQueueCreateCountingSemaphoreStatic+0x40>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 800817e:	6384      	str	r4, [r0, #56]	@ 0x38
	}
 8008180:	b002      	add	sp, #8
 8008182:	bd10      	pop	{r4, pc}

08008184 <xQueueCreateCountingSemaphore>:
	{
 8008184:	b510      	push	{r4, lr}
 8008186:	460c      	mov	r4, r1
		configASSERT( uxMaxCount != 0 );
 8008188:	b940      	cbnz	r0, 800819c <xQueueCreateCountingSemaphore+0x18>
 800818a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800818e:	f383 8811 	msr	BASEPRI, r3
 8008192:	f3bf 8f6f 	isb	sy
 8008196:	f3bf 8f4f 	dsb	sy
 800819a:	e7fe      	b.n	800819a <xQueueCreateCountingSemaphore+0x16>
		configASSERT( uxInitialCount <= uxMaxCount );
 800819c:	4288      	cmp	r0, r1
 800819e:	d208      	bcs.n	80081b2 <xQueueCreateCountingSemaphore+0x2e>
 80081a0:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80081a4:	f383 8811 	msr	BASEPRI, r3
 80081a8:	f3bf 8f6f 	isb	sy
 80081ac:	f3bf 8f4f 	dsb	sy
 80081b0:	e7fe      	b.n	80081b0 <xQueueCreateCountingSemaphore+0x2c>
		xHandle = xQueueGenericCreate( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, queueQUEUE_TYPE_COUNTING_SEMAPHORE );
 80081b2:	2202      	movs	r2, #2
 80081b4:	2100      	movs	r1, #0
 80081b6:	f7ff ff9c 	bl	80080f2 <xQueueGenericCreate>
		if( xHandle != NULL )
 80081ba:	b100      	cbz	r0, 80081be <xQueueCreateCountingSemaphore+0x3a>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 80081bc:	6384      	str	r4, [r0, #56]	@ 0x38
	}
 80081be:	bd10      	pop	{r4, pc}

080081c0 <xQueueGenericSend>:
{
 80081c0:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 80081c4:	460f      	mov	r7, r1
 80081c6:	9201      	str	r2, [sp, #4]
 80081c8:	461e      	mov	r6, r3
	configASSERT( pxQueue );
 80081ca:	4604      	mov	r4, r0
 80081cc:	b940      	cbnz	r0, 80081e0 <xQueueGenericSend+0x20>
 80081ce:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80081d2:	f383 8811 	msr	BASEPRI, r3
 80081d6:	f3bf 8f6f 	isb	sy
 80081da:	f3bf 8f4f 	dsb	sy
 80081de:	e7fe      	b.n	80081de <xQueueGenericSend+0x1e>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 80081e0:	b951      	cbnz	r1, 80081f8 <xQueueGenericSend+0x38>
 80081e2:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 80081e4:	b143      	cbz	r3, 80081f8 <xQueueGenericSend+0x38>
 80081e6:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80081ea:	f383 8811 	msr	BASEPRI, r3
 80081ee:	f3bf 8f6f 	isb	sy
 80081f2:	f3bf 8f4f 	dsb	sy
 80081f6:	e7fe      	b.n	80081f6 <xQueueGenericSend+0x36>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 80081f8:	2e02      	cmp	r6, #2
 80081fa:	d10b      	bne.n	8008214 <xQueueGenericSend+0x54>
 80081fc:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 80081fe:	2b01      	cmp	r3, #1
 8008200:	d008      	beq.n	8008214 <xQueueGenericSend+0x54>
 8008202:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008206:	f383 8811 	msr	BASEPRI, r3
 800820a:	f3bf 8f6f 	isb	sy
 800820e:	f3bf 8f4f 	dsb	sy
 8008212:	e7fe      	b.n	8008212 <xQueueGenericSend+0x52>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8008214:	f000 ff8a 	bl	800912c <xTaskGetSchedulerState>
 8008218:	4605      	mov	r5, r0
 800821a:	b320      	cbz	r0, 8008266 <xQueueGenericSend+0xa6>
 800821c:	2500      	movs	r5, #0
		prvLockQueue( pxQueue );
 800821e:	f04f 0800 	mov.w	r8, #0
		taskENTER_CRITICAL();
 8008222:	f7ff fd0f 	bl	8007c44 <vPortEnterCritical>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 8008226:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
 8008228:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 800822a:	429a      	cmp	r2, r3
 800822c:	d227      	bcs.n	800827e <xQueueGenericSend+0xbe>
					xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800822e:	4632      	mov	r2, r6
 8008230:	4639      	mov	r1, r7
 8008232:	4620      	mov	r0, r4
 8008234:	f7ff fe51 	bl	8007eda <prvCopyDataToQueue>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8008238:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 800823a:	b11b      	cbz	r3, 8008244 <xQueueGenericSend+0x84>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800823c:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 8008240:	f000 fee6 	bl	8009010 <xTaskRemoveFromEventList>
					else if( xYieldRequired != pdFALSE )
 8008244:	b148      	cbz	r0, 800825a <xQueueGenericSend+0x9a>
						queueYIELD_IF_USING_PREEMPTION();
 8008246:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800824a:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800824e:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8008252:	f3bf 8f4f 	dsb	sy
 8008256:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 800825a:	f7ff fd13 	bl	8007c84 <vPortExitCritical>
				return pdPASS;
 800825e:	2001      	movs	r0, #1
}
 8008260:	b004      	add	sp, #16
 8008262:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8008266:	9b01      	ldr	r3, [sp, #4]
 8008268:	2b00      	cmp	r3, #0
 800826a:	d0d8      	beq.n	800821e <xQueueGenericSend+0x5e>
 800826c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008270:	f383 8811 	msr	BASEPRI, r3
 8008274:	f3bf 8f6f 	isb	sy
 8008278:	f3bf 8f4f 	dsb	sy
 800827c:	e7fe      	b.n	800827c <xQueueGenericSend+0xbc>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 800827e:	2e02      	cmp	r6, #2
 8008280:	d0d5      	beq.n	800822e <xQueueGenericSend+0x6e>
				if( xTicksToWait == ( TickType_t ) 0 )
 8008282:	9b01      	ldr	r3, [sp, #4]
 8008284:	b91b      	cbnz	r3, 800828e <xQueueGenericSend+0xce>
					taskEXIT_CRITICAL();
 8008286:	f7ff fcfd 	bl	8007c84 <vPortExitCritical>
					return errQUEUE_FULL;
 800828a:	2000      	movs	r0, #0
 800828c:	e7e8      	b.n	8008260 <xQueueGenericSend+0xa0>
				else if( xEntryTimeSet == pdFALSE )
 800828e:	b915      	cbnz	r5, 8008296 <xQueueGenericSend+0xd6>
					vTaskInternalSetTimeOutState( &xTimeOut );
 8008290:	a802      	add	r0, sp, #8
 8008292:	f000 fefd 	bl	8009090 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 8008296:	f7ff fcf5 	bl	8007c84 <vPortExitCritical>
		vTaskSuspendAll();
 800829a:	f000 fd0b 	bl	8008cb4 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 800829e:	f7ff fcd1 	bl	8007c44 <vPortEnterCritical>
 80082a2:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
 80082a6:	2bff      	cmp	r3, #255	@ 0xff
 80082a8:	bf08      	it	eq
 80082aa:	f884 8044 	strbeq.w	r8, [r4, #68]	@ 0x44
 80082ae:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
 80082b2:	2bff      	cmp	r3, #255	@ 0xff
 80082b4:	bf08      	it	eq
 80082b6:	f884 8045 	strbeq.w	r8, [r4, #69]	@ 0x45
 80082ba:	f7ff fce3 	bl	8007c84 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 80082be:	a901      	add	r1, sp, #4
 80082c0:	a802      	add	r0, sp, #8
 80082c2:	f000 fef1 	bl	80090a8 <xTaskCheckForTimeOut>
 80082c6:	bb38      	cbnz	r0, 8008318 <xQueueGenericSend+0x158>

static BaseType_t prvIsQueueFull( const Queue_t *pxQueue )
{
BaseType_t xReturn;

	taskENTER_CRITICAL();
 80082c8:	f7ff fcbc 	bl	8007c44 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
 80082cc:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
 80082ce:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 80082d0:	429a      	cmp	r2, r3
 80082d2:	d10e      	bne.n	80082f2 <xQueueGenericSend+0x132>
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 80082d4:	f7ff fcd6 	bl	8007c84 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 80082d8:	9901      	ldr	r1, [sp, #4]
 80082da:	f104 0010 	add.w	r0, r4, #16
 80082de:	f000 fe5f 	bl	8008fa0 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 80082e2:	4620      	mov	r0, r4
 80082e4:	f7ff fe42 	bl	8007f6c <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 80082e8:	f000 fd88 	bl	8008dfc <xTaskResumeAll>
 80082ec:	b148      	cbz	r0, 8008302 <xQueueGenericSend+0x142>
 80082ee:	2501      	movs	r5, #1
 80082f0:	e797      	b.n	8008222 <xQueueGenericSend+0x62>
	taskEXIT_CRITICAL();
 80082f2:	f7ff fcc7 	bl	8007c84 <vPortExitCritical>
				prvUnlockQueue( pxQueue );
 80082f6:	4620      	mov	r0, r4
 80082f8:	f7ff fe38 	bl	8007f6c <prvUnlockQueue>
				( void ) xTaskResumeAll();
 80082fc:	f000 fd7e 	bl	8008dfc <xTaskResumeAll>
 8008300:	e7f5      	b.n	80082ee <xQueueGenericSend+0x12e>
					portYIELD_WITHIN_API();
 8008302:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8008306:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800830a:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 800830e:	f3bf 8f4f 	dsb	sy
 8008312:	f3bf 8f6f 	isb	sy
 8008316:	e7ea      	b.n	80082ee <xQueueGenericSend+0x12e>
			prvUnlockQueue( pxQueue );
 8008318:	4620      	mov	r0, r4
 800831a:	f7ff fe27 	bl	8007f6c <prvUnlockQueue>
			( void ) xTaskResumeAll();
 800831e:	f000 fd6d 	bl	8008dfc <xTaskResumeAll>
			return errQUEUE_FULL;
 8008322:	e7b2      	b.n	800828a <xQueueGenericSend+0xca>

08008324 <xQueueGenericSendFromISR>:
{
 8008324:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8008328:	4689      	mov	r9, r1
 800832a:	4617      	mov	r7, r2
 800832c:	461e      	mov	r6, r3
	configASSERT( pxQueue );
 800832e:	4604      	mov	r4, r0
 8008330:	b940      	cbnz	r0, 8008344 <xQueueGenericSendFromISR+0x20>
 8008332:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008336:	f383 8811 	msr	BASEPRI, r3
 800833a:	f3bf 8f6f 	isb	sy
 800833e:	f3bf 8f4f 	dsb	sy
 8008342:	e7fe      	b.n	8008342 <xQueueGenericSendFromISR+0x1e>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8008344:	b951      	cbnz	r1, 800835c <xQueueGenericSendFromISR+0x38>
 8008346:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 8008348:	b143      	cbz	r3, 800835c <xQueueGenericSendFromISR+0x38>
 800834a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800834e:	f383 8811 	msr	BASEPRI, r3
 8008352:	f3bf 8f6f 	isb	sy
 8008356:	f3bf 8f4f 	dsb	sy
 800835a:	e7fe      	b.n	800835a <xQueueGenericSendFromISR+0x36>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 800835c:	2e02      	cmp	r6, #2
 800835e:	d10b      	bne.n	8008378 <xQueueGenericSendFromISR+0x54>
 8008360:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 8008362:	2b01      	cmp	r3, #1
 8008364:	d008      	beq.n	8008378 <xQueueGenericSendFromISR+0x54>
 8008366:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800836a:	f383 8811 	msr	BASEPRI, r3
 800836e:	f3bf 8f6f 	isb	sy
 8008372:	f3bf 8f4f 	dsb	sy
 8008376:	e7fe      	b.n	8008376 <xQueueGenericSendFromISR+0x52>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 8008378:	f7ff fd76 	bl	8007e68 <vPortValidateInterruptPriority>
	__asm volatile
 800837c:	f3ef 8811 	mrs	r8, BASEPRI
 8008380:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008384:	f383 8811 	msr	BASEPRI, r3
 8008388:	f3bf 8f6f 	isb	sy
 800838c:	f3bf 8f4f 	dsb	sy
		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 8008390:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
 8008392:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 8008394:	429a      	cmp	r2, r3
 8008396:	d301      	bcc.n	800839c <xQueueGenericSendFromISR+0x78>
 8008398:	2e02      	cmp	r6, #2
 800839a:	d11e      	bne.n	80083da <xQueueGenericSendFromISR+0xb6>
			const int8_t cTxLock = pxQueue->cTxLock;
 800839c:	f894 5045 	ldrb.w	r5, [r4, #69]	@ 0x45
			const UBaseType_t uxPreviousMessagesWaiting = pxQueue->uxMessagesWaiting;
 80083a0:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
			const int8_t cTxLock = pxQueue->cTxLock;
 80083a2:	b26d      	sxtb	r5, r5
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 80083a4:	4632      	mov	r2, r6
 80083a6:	4649      	mov	r1, r9
 80083a8:	4620      	mov	r0, r4
 80083aa:	f7ff fd96 	bl	8007eda <prvCopyDataToQueue>
			if( cTxLock == queueUNLOCKED )
 80083ae:	1c6b      	adds	r3, r5, #1
 80083b0:	d10e      	bne.n	80083d0 <xQueueGenericSendFromISR+0xac>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 80083b2:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 80083b4:	b13b      	cbz	r3, 80083c6 <xQueueGenericSendFromISR+0xa2>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 80083b6:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 80083ba:	f000 fe29 	bl	8009010 <xTaskRemoveFromEventList>
 80083be:	b110      	cbz	r0, 80083c6 <xQueueGenericSendFromISR+0xa2>
							if( pxHigherPriorityTaskWoken != NULL )
 80083c0:	b10f      	cbz	r7, 80083c6 <xQueueGenericSendFromISR+0xa2>
								*pxHigherPriorityTaskWoken = pdTRUE;
 80083c2:	2301      	movs	r3, #1
 80083c4:	603b      	str	r3, [r7, #0]
			xReturn = pdPASS;
 80083c6:	2001      	movs	r0, #1
	__asm volatile
 80083c8:	f388 8811 	msr	BASEPRI, r8
}
 80083cc:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 80083d0:	3501      	adds	r5, #1
 80083d2:	b26d      	sxtb	r5, r5
 80083d4:	f884 5045 	strb.w	r5, [r4, #69]	@ 0x45
 80083d8:	e7f5      	b.n	80083c6 <xQueueGenericSendFromISR+0xa2>
			xReturn = errQUEUE_FULL;
 80083da:	2000      	movs	r0, #0
 80083dc:	e7f4      	b.n	80083c8 <xQueueGenericSendFromISR+0xa4>

080083de <xQueueGiveFromISR>:
{
 80083de:	b570      	push	{r4, r5, r6, lr}
 80083e0:	460d      	mov	r5, r1
	configASSERT( pxQueue );
 80083e2:	4604      	mov	r4, r0
 80083e4:	b940      	cbnz	r0, 80083f8 <xQueueGiveFromISR+0x1a>
	__asm volatile
 80083e6:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80083ea:	f383 8811 	msr	BASEPRI, r3
 80083ee:	f3bf 8f6f 	isb	sy
 80083f2:	f3bf 8f4f 	dsb	sy
 80083f6:	e7fe      	b.n	80083f6 <xQueueGiveFromISR+0x18>
	configASSERT( pxQueue->uxItemSize == 0 );
 80083f8:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 80083fa:	b143      	cbz	r3, 800840e <xQueueGiveFromISR+0x30>
 80083fc:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008400:	f383 8811 	msr	BASEPRI, r3
 8008404:	f3bf 8f6f 	isb	sy
 8008408:	f3bf 8f4f 	dsb	sy
 800840c:	e7fe      	b.n	800840c <xQueueGiveFromISR+0x2e>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
 800840e:	6803      	ldr	r3, [r0, #0]
 8008410:	b953      	cbnz	r3, 8008428 <xQueueGiveFromISR+0x4a>
 8008412:	6883      	ldr	r3, [r0, #8]
 8008414:	b143      	cbz	r3, 8008428 <xQueueGiveFromISR+0x4a>
 8008416:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800841a:	f383 8811 	msr	BASEPRI, r3
 800841e:	f3bf 8f6f 	isb	sy
 8008422:	f3bf 8f4f 	dsb	sy
 8008426:	e7fe      	b.n	8008426 <xQueueGiveFromISR+0x48>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 8008428:	f7ff fd1e 	bl	8007e68 <vPortValidateInterruptPriority>
	__asm volatile
 800842c:	f3ef 8611 	mrs	r6, BASEPRI
 8008430:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008434:	f383 8811 	msr	BASEPRI, r3
 8008438:	f3bf 8f6f 	isb	sy
 800843c:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 8008440:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
		if( uxMessagesWaiting < pxQueue->uxLength )
 8008442:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 8008444:	4293      	cmp	r3, r2
 8008446:	d919      	bls.n	800847c <xQueueGiveFromISR+0x9e>
			const int8_t cTxLock = pxQueue->cTxLock;
 8008448:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800844c:	3201      	adds	r2, #1
			if( cTxLock == queueUNLOCKED )
 800844e:	29ff      	cmp	r1, #255	@ 0xff
			const int8_t cTxLock = pxQueue->cTxLock;
 8008450:	b24b      	sxtb	r3, r1
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 8008452:	63a2      	str	r2, [r4, #56]	@ 0x38
			if( cTxLock == queueUNLOCKED )
 8008454:	d10d      	bne.n	8008472 <xQueueGiveFromISR+0x94>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8008456:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8008458:	b13b      	cbz	r3, 800846a <xQueueGiveFromISR+0x8c>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800845a:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 800845e:	f000 fdd7 	bl	8009010 <xTaskRemoveFromEventList>
 8008462:	b110      	cbz	r0, 800846a <xQueueGiveFromISR+0x8c>
							if( pxHigherPriorityTaskWoken != NULL )
 8008464:	b10d      	cbz	r5, 800846a <xQueueGiveFromISR+0x8c>
								*pxHigherPriorityTaskWoken = pdTRUE;
 8008466:	2301      	movs	r3, #1
 8008468:	602b      	str	r3, [r5, #0]
			xReturn = pdPASS;
 800846a:	2001      	movs	r0, #1
	__asm volatile
 800846c:	f386 8811 	msr	BASEPRI, r6
}
 8008470:	bd70      	pop	{r4, r5, r6, pc}
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 8008472:	3301      	adds	r3, #1
 8008474:	b25b      	sxtb	r3, r3
 8008476:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
 800847a:	e7f6      	b.n	800846a <xQueueGiveFromISR+0x8c>
			xReturn = errQUEUE_FULL;
 800847c:	2000      	movs	r0, #0
 800847e:	e7f5      	b.n	800846c <xQueueGiveFromISR+0x8e>

08008480 <xQueueReceive>:
{
 8008480:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8008484:	460e      	mov	r6, r1
 8008486:	9201      	str	r2, [sp, #4]
	configASSERT( ( pxQueue ) );
 8008488:	4604      	mov	r4, r0
 800848a:	b940      	cbnz	r0, 800849e <xQueueReceive+0x1e>
	__asm volatile
 800848c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008490:	f383 8811 	msr	BASEPRI, r3
 8008494:	f3bf 8f6f 	isb	sy
 8008498:	f3bf 8f4f 	dsb	sy
 800849c:	e7fe      	b.n	800849c <xQueueReceive+0x1c>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800849e:	b951      	cbnz	r1, 80084b6 <xQueueReceive+0x36>
 80084a0:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 80084a2:	b143      	cbz	r3, 80084b6 <xQueueReceive+0x36>
 80084a4:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80084a8:	f383 8811 	msr	BASEPRI, r3
 80084ac:	f3bf 8f6f 	isb	sy
 80084b0:	f3bf 8f4f 	dsb	sy
 80084b4:	e7fe      	b.n	80084b4 <xQueueReceive+0x34>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 80084b6:	f000 fe39 	bl	800912c <xTaskGetSchedulerState>
 80084ba:	4605      	mov	r5, r0
 80084bc:	b318      	cbz	r0, 8008506 <xQueueReceive+0x86>
 80084be:	2500      	movs	r5, #0
		prvLockQueue( pxQueue );
 80084c0:	f04f 0800 	mov.w	r8, #0
		taskENTER_CRITICAL();
 80084c4:	f7ff fbbe 	bl	8007c44 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 80084c8:	6ba7      	ldr	r7, [r4, #56]	@ 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 80084ca:	b347      	cbz	r7, 800851e <xQueueReceive+0x9e>
				prvCopyDataFromQueue( pxQueue, pvBuffer );
 80084cc:	4631      	mov	r1, r6
 80084ce:	4620      	mov	r0, r4
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 80084d0:	3f01      	subs	r7, #1
				prvCopyDataFromQueue( pxQueue, pvBuffer );
 80084d2:	f7ff fd35 	bl	8007f40 <prvCopyDataFromQueue>
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 80084d6:	63a7      	str	r7, [r4, #56]	@ 0x38
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 80084d8:	6923      	ldr	r3, [r4, #16]
 80084da:	b173      	cbz	r3, 80084fa <xQueueReceive+0x7a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 80084dc:	f104 0010 	add.w	r0, r4, #16
 80084e0:	f000 fd96 	bl	8009010 <xTaskRemoveFromEventList>
 80084e4:	b148      	cbz	r0, 80084fa <xQueueReceive+0x7a>
						queueYIELD_IF_USING_PREEMPTION();
 80084e6:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 80084ea:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 80084ee:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 80084f2:	f3bf 8f4f 	dsb	sy
 80084f6:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 80084fa:	f7ff fbc3 	bl	8007c84 <vPortExitCritical>
				return pdPASS;
 80084fe:	2001      	movs	r0, #1
}
 8008500:	b004      	add	sp, #16
 8008502:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8008506:	9b01      	ldr	r3, [sp, #4]
 8008508:	2b00      	cmp	r3, #0
 800850a:	d0d9      	beq.n	80084c0 <xQueueReceive+0x40>
 800850c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008510:	f383 8811 	msr	BASEPRI, r3
 8008514:	f3bf 8f6f 	isb	sy
 8008518:	f3bf 8f4f 	dsb	sy
 800851c:	e7fe      	b.n	800851c <xQueueReceive+0x9c>
				if( xTicksToWait == ( TickType_t ) 0 )
 800851e:	9b01      	ldr	r3, [sp, #4]
 8008520:	b91b      	cbnz	r3, 800852a <xQueueReceive+0xaa>
					taskEXIT_CRITICAL();
 8008522:	f7ff fbaf 	bl	8007c84 <vPortExitCritical>
					return errQUEUE_EMPTY;
 8008526:	2000      	movs	r0, #0
 8008528:	e7ea      	b.n	8008500 <xQueueReceive+0x80>
				else if( xEntryTimeSet == pdFALSE )
 800852a:	b915      	cbnz	r5, 8008532 <xQueueReceive+0xb2>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800852c:	a802      	add	r0, sp, #8
 800852e:	f000 fdaf 	bl	8009090 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 8008532:	f7ff fba7 	bl	8007c84 <vPortExitCritical>
		vTaskSuspendAll();
 8008536:	f000 fbbd 	bl	8008cb4 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 800853a:	f7ff fb83 	bl	8007c44 <vPortEnterCritical>
 800853e:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
 8008542:	2bff      	cmp	r3, #255	@ 0xff
 8008544:	bf08      	it	eq
 8008546:	f884 8044 	strbeq.w	r8, [r4, #68]	@ 0x44
 800854a:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
 800854e:	2bff      	cmp	r3, #255	@ 0xff
 8008550:	bf08      	it	eq
 8008552:	f884 8045 	strbeq.w	r8, [r4, #69]	@ 0x45
 8008556:	f7ff fb95 	bl	8007c84 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 800855a:	a901      	add	r1, sp, #4
 800855c:	a802      	add	r0, sp, #8
 800855e:	f000 fda3 	bl	80090a8 <xTaskCheckForTimeOut>
 8008562:	bb00      	cbnz	r0, 80085a6 <xQueueReceive+0x126>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 8008564:	4620      	mov	r0, r4
 8008566:	f7ff fcad 	bl	8007ec4 <prvIsQueueEmpty>
 800856a:	b1b0      	cbz	r0, 800859a <xQueueReceive+0x11a>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 800856c:	9901      	ldr	r1, [sp, #4]
 800856e:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 8008572:	f000 fd15 	bl	8008fa0 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 8008576:	4620      	mov	r0, r4
 8008578:	f7ff fcf8 	bl	8007f6c <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 800857c:	f000 fc3e 	bl	8008dfc <xTaskResumeAll>
 8008580:	b948      	cbnz	r0, 8008596 <xQueueReceive+0x116>
					portYIELD_WITHIN_API();
 8008582:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8008586:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800858a:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 800858e:	f3bf 8f4f 	dsb	sy
 8008592:	f3bf 8f6f 	isb	sy
 8008596:	2501      	movs	r5, #1
 8008598:	e794      	b.n	80084c4 <xQueueReceive+0x44>
				prvUnlockQueue( pxQueue );
 800859a:	4620      	mov	r0, r4
 800859c:	f7ff fce6 	bl	8007f6c <prvUnlockQueue>
				( void ) xTaskResumeAll();
 80085a0:	f000 fc2c 	bl	8008dfc <xTaskResumeAll>
 80085a4:	e7f7      	b.n	8008596 <xQueueReceive+0x116>
			prvUnlockQueue( pxQueue );
 80085a6:	4620      	mov	r0, r4
 80085a8:	f7ff fce0 	bl	8007f6c <prvUnlockQueue>
			( void ) xTaskResumeAll();
 80085ac:	f000 fc26 	bl	8008dfc <xTaskResumeAll>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 80085b0:	4620      	mov	r0, r4
 80085b2:	f7ff fc87 	bl	8007ec4 <prvIsQueueEmpty>
 80085b6:	2800      	cmp	r0, #0
 80085b8:	d0ed      	beq.n	8008596 <xQueueReceive+0x116>
 80085ba:	e7b4      	b.n	8008526 <xQueueReceive+0xa6>

080085bc <xQueueSemaphoreTake>:
{
 80085bc:	b5f0      	push	{r4, r5, r6, r7, lr}
 80085be:	b085      	sub	sp, #20
	configASSERT( ( pxQueue ) );
 80085c0:	4604      	mov	r4, r0
{
 80085c2:	9101      	str	r1, [sp, #4]
	configASSERT( ( pxQueue ) );
 80085c4:	b940      	cbnz	r0, 80085d8 <xQueueSemaphoreTake+0x1c>
 80085c6:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80085ca:	f383 8811 	msr	BASEPRI, r3
 80085ce:	f3bf 8f6f 	isb	sy
 80085d2:	f3bf 8f4f 	dsb	sy
 80085d6:	e7fe      	b.n	80085d6 <xQueueSemaphoreTake+0x1a>
	configASSERT( pxQueue->uxItemSize == 0 );
 80085d8:	6c05      	ldr	r5, [r0, #64]	@ 0x40
 80085da:	b145      	cbz	r5, 80085ee <xQueueSemaphoreTake+0x32>
 80085dc:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80085e0:	f383 8811 	msr	BASEPRI, r3
 80085e4:	f3bf 8f6f 	isb	sy
 80085e8:	f3bf 8f4f 	dsb	sy
 80085ec:	e7fe      	b.n	80085ec <xQueueSemaphoreTake+0x30>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 80085ee:	f000 fd9d 	bl	800912c <xTaskGetSchedulerState>
 80085f2:	4606      	mov	r6, r0
 80085f4:	b320      	cbz	r0, 8008640 <xQueueSemaphoreTake+0x84>
 80085f6:	462e      	mov	r6, r5
		prvLockQueue( pxQueue );
 80085f8:	2700      	movs	r7, #0
		taskENTER_CRITICAL();
 80085fa:	f7ff fb23 	bl	8007c44 <vPortEnterCritical>
			const UBaseType_t uxSemaphoreCount = pxQueue->uxMessagesWaiting;
 80085fe:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
			if( uxSemaphoreCount > ( UBaseType_t ) 0 )
 8008600:	b353      	cbz	r3, 8008658 <xQueueSemaphoreTake+0x9c>
				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
 8008602:	3b01      	subs	r3, #1
 8008604:	63a3      	str	r3, [r4, #56]	@ 0x38
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 8008606:	6823      	ldr	r3, [r4, #0]
 8008608:	b913      	cbnz	r3, 8008610 <xQueueSemaphoreTake+0x54>
						pxQueue->u.xSemaphore.xMutexHolder = pvTaskIncrementMutexHeldCount();
 800860a:	f000 fe6d 	bl	80092e8 <pvTaskIncrementMutexHeldCount>
 800860e:	60a0      	str	r0, [r4, #8]
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8008610:	6923      	ldr	r3, [r4, #16]
 8008612:	b173      	cbz	r3, 8008632 <xQueueSemaphoreTake+0x76>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8008614:	f104 0010 	add.w	r0, r4, #16
 8008618:	f000 fcfa 	bl	8009010 <xTaskRemoveFromEventList>
 800861c:	b148      	cbz	r0, 8008632 <xQueueSemaphoreTake+0x76>
						queueYIELD_IF_USING_PREEMPTION();
 800861e:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8008622:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8008626:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 800862a:	f3bf 8f4f 	dsb	sy
 800862e:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 8008632:	f7ff fb27 	bl	8007c84 <vPortExitCritical>
				return pdPASS;
 8008636:	2001      	movs	r0, #1
}
 8008638:	b005      	add	sp, #20
 800863a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800863c:	4635      	mov	r5, r6
 800863e:	e7db      	b.n	80085f8 <xQueueSemaphoreTake+0x3c>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8008640:	9b01      	ldr	r3, [sp, #4]
 8008642:	2b00      	cmp	r3, #0
 8008644:	d0fa      	beq.n	800863c <xQueueSemaphoreTake+0x80>
 8008646:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800864a:	f383 8811 	msr	BASEPRI, r3
 800864e:	f3bf 8f6f 	isb	sy
 8008652:	f3bf 8f4f 	dsb	sy
 8008656:	e7fe      	b.n	8008656 <xQueueSemaphoreTake+0x9a>
				if( xTicksToWait == ( TickType_t ) 0 )
 8008658:	9b01      	ldr	r3, [sp, #4]
 800865a:	b953      	cbnz	r3, 8008672 <xQueueSemaphoreTake+0xb6>
						configASSERT( xInheritanceOccurred == pdFALSE );
 800865c:	2d00      	cmp	r5, #0
 800865e:	d066      	beq.n	800872e <xQueueSemaphoreTake+0x172>
 8008660:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008664:	f383 8811 	msr	BASEPRI, r3
 8008668:	f3bf 8f6f 	isb	sy
 800866c:	f3bf 8f4f 	dsb	sy
 8008670:	e7fe      	b.n	8008670 <xQueueSemaphoreTake+0xb4>
				else if( xEntryTimeSet == pdFALSE )
 8008672:	b916      	cbnz	r6, 800867a <xQueueSemaphoreTake+0xbe>
					vTaskInternalSetTimeOutState( &xTimeOut );
 8008674:	a802      	add	r0, sp, #8
 8008676:	f000 fd0b 	bl	8009090 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 800867a:	f7ff fb03 	bl	8007c84 <vPortExitCritical>
		vTaskSuspendAll();
 800867e:	f000 fb19 	bl	8008cb4 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 8008682:	f7ff fadf 	bl	8007c44 <vPortEnterCritical>
 8008686:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
 800868a:	2bff      	cmp	r3, #255	@ 0xff
 800868c:	bf08      	it	eq
 800868e:	f884 7044 	strbeq.w	r7, [r4, #68]	@ 0x44
 8008692:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
 8008696:	2bff      	cmp	r3, #255	@ 0xff
 8008698:	bf08      	it	eq
 800869a:	f884 7045 	strbeq.w	r7, [r4, #69]	@ 0x45
 800869e:	f7ff faf1 	bl	8007c84 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 80086a2:	a901      	add	r1, sp, #4
 80086a4:	a802      	add	r0, sp, #8
 80086a6:	f000 fcff 	bl	80090a8 <xTaskCheckForTimeOut>
 80086aa:	bb50      	cbnz	r0, 8008702 <xQueueSemaphoreTake+0x146>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 80086ac:	4620      	mov	r0, r4
 80086ae:	f7ff fc09 	bl	8007ec4 <prvIsQueueEmpty>
 80086b2:	b300      	cbz	r0, 80086f6 <xQueueSemaphoreTake+0x13a>
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 80086b4:	6823      	ldr	r3, [r4, #0]
 80086b6:	b93b      	cbnz	r3, 80086c8 <xQueueSemaphoreTake+0x10c>
						taskENTER_CRITICAL();
 80086b8:	f7ff fac4 	bl	8007c44 <vPortEnterCritical>
							xInheritanceOccurred = xTaskPriorityInherit( pxQueue->u.xSemaphore.xMutexHolder );
 80086bc:	68a0      	ldr	r0, [r4, #8]
 80086be:	f000 fd45 	bl	800914c <xTaskPriorityInherit>
 80086c2:	4605      	mov	r5, r0
						taskEXIT_CRITICAL();
 80086c4:	f7ff fade 	bl	8007c84 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 80086c8:	9901      	ldr	r1, [sp, #4]
 80086ca:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 80086ce:	f000 fc67 	bl	8008fa0 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 80086d2:	4620      	mov	r0, r4
 80086d4:	f7ff fc4a 	bl	8007f6c <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 80086d8:	f000 fb90 	bl	8008dfc <xTaskResumeAll>
 80086dc:	b948      	cbnz	r0, 80086f2 <xQueueSemaphoreTake+0x136>
					portYIELD_WITHIN_API();
 80086de:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 80086e2:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 80086e6:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 80086ea:	f3bf 8f4f 	dsb	sy
 80086ee:	f3bf 8f6f 	isb	sy
 80086f2:	2601      	movs	r6, #1
 80086f4:	e781      	b.n	80085fa <xQueueSemaphoreTake+0x3e>
				prvUnlockQueue( pxQueue );
 80086f6:	4620      	mov	r0, r4
 80086f8:	f7ff fc38 	bl	8007f6c <prvUnlockQueue>
				( void ) xTaskResumeAll();
 80086fc:	f000 fb7e 	bl	8008dfc <xTaskResumeAll>
 8008700:	e7f7      	b.n	80086f2 <xQueueSemaphoreTake+0x136>
			prvUnlockQueue( pxQueue );
 8008702:	4620      	mov	r0, r4
 8008704:	f7ff fc32 	bl	8007f6c <prvUnlockQueue>
			( void ) xTaskResumeAll();
 8008708:	f000 fb78 	bl	8008dfc <xTaskResumeAll>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 800870c:	4620      	mov	r0, r4
 800870e:	f7ff fbd9 	bl	8007ec4 <prvIsQueueEmpty>
 8008712:	2800      	cmp	r0, #0
 8008714:	d0ed      	beq.n	80086f2 <xQueueSemaphoreTake+0x136>
					if( xInheritanceOccurred != pdFALSE )
 8008716:	b165      	cbz	r5, 8008732 <xQueueSemaphoreTake+0x176>
						taskENTER_CRITICAL();
 8008718:	f7ff fa94 	bl	8007c44 <vPortEnterCritical>
		if( listCURRENT_LIST_LENGTH( &( pxQueue->xTasksWaitingToReceive ) ) > 0U )
 800871c:	6a61      	ldr	r1, [r4, #36]	@ 0x24
 800871e:	b119      	cbz	r1, 8008728 <xQueueSemaphoreTake+0x16c>
			uxHighestPriorityOfWaitingTasks = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) listGET_ITEM_VALUE_OF_HEAD_ENTRY( &( pxQueue->xTasksWaitingToReceive ) );
 8008720:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8008722:	6819      	ldr	r1, [r3, #0]
 8008724:	f1c1 0138 	rsb	r1, r1, #56	@ 0x38
							vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
 8008728:	68a0      	ldr	r0, [r4, #8]
 800872a:	f000 fd8f 	bl	800924c <vTaskPriorityDisinheritAfterTimeout>
						taskEXIT_CRITICAL();
 800872e:	f7ff faa9 	bl	8007c84 <vPortExitCritical>
					return errQUEUE_EMPTY;
 8008732:	2000      	movs	r0, #0
 8008734:	e780      	b.n	8008638 <xQueueSemaphoreTake+0x7c>

08008736 <xQueueReceiveFromISR>:
{
 8008736:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800873a:	4689      	mov	r9, r1
 800873c:	4690      	mov	r8, r2
	configASSERT( pxQueue );
 800873e:	4604      	mov	r4, r0
 8008740:	b940      	cbnz	r0, 8008754 <xQueueReceiveFromISR+0x1e>
 8008742:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008746:	f383 8811 	msr	BASEPRI, r3
 800874a:	f3bf 8f6f 	isb	sy
 800874e:	f3bf 8f4f 	dsb	sy
 8008752:	e7fe      	b.n	8008752 <xQueueReceiveFromISR+0x1c>
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8008754:	b951      	cbnz	r1, 800876c <xQueueReceiveFromISR+0x36>
 8008756:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 8008758:	b143      	cbz	r3, 800876c <xQueueReceiveFromISR+0x36>
 800875a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800875e:	f383 8811 	msr	BASEPRI, r3
 8008762:	f3bf 8f6f 	isb	sy
 8008766:	f3bf 8f4f 	dsb	sy
 800876a:	e7fe      	b.n	800876a <xQueueReceiveFromISR+0x34>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 800876c:	f7ff fb7c 	bl	8007e68 <vPortValidateInterruptPriority>
	__asm volatile
 8008770:	f3ef 8711 	mrs	r7, BASEPRI
 8008774:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008778:	f383 8811 	msr	BASEPRI, r3
 800877c:	f3bf 8f6f 	isb	sy
 8008780:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 8008784:	6ba5      	ldr	r5, [r4, #56]	@ 0x38
		if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 8008786:	b30d      	cbz	r5, 80087cc <xQueueReceiveFromISR+0x96>
			const int8_t cRxLock = pxQueue->cRxLock;
 8008788:	f894 6044 	ldrb.w	r6, [r4, #68]	@ 0x44
			prvCopyDataFromQueue( pxQueue, pvBuffer );
 800878c:	4649      	mov	r1, r9
			const int8_t cRxLock = pxQueue->cRxLock;
 800878e:	b276      	sxtb	r6, r6
			prvCopyDataFromQueue( pxQueue, pvBuffer );
 8008790:	4620      	mov	r0, r4
 8008792:	f7ff fbd5 	bl	8007f40 <prvCopyDataFromQueue>
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 8008796:	3d01      	subs	r5, #1
			if( cRxLock == queueUNLOCKED )
 8008798:	1c73      	adds	r3, r6, #1
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800879a:	63a5      	str	r5, [r4, #56]	@ 0x38
			if( cRxLock == queueUNLOCKED )
 800879c:	d111      	bne.n	80087c2 <xQueueReceiveFromISR+0x8c>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800879e:	6923      	ldr	r3, [r4, #16]
 80087a0:	b153      	cbz	r3, 80087b8 <xQueueReceiveFromISR+0x82>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 80087a2:	f104 0010 	add.w	r0, r4, #16
 80087a6:	f000 fc33 	bl	8009010 <xTaskRemoveFromEventList>
 80087aa:	b128      	cbz	r0, 80087b8 <xQueueReceiveFromISR+0x82>
						if( pxHigherPriorityTaskWoken != NULL )
 80087ac:	f1b8 0f00 	cmp.w	r8, #0
 80087b0:	d002      	beq.n	80087b8 <xQueueReceiveFromISR+0x82>
							*pxHigherPriorityTaskWoken = pdTRUE;
 80087b2:	2301      	movs	r3, #1
 80087b4:	f8c8 3000 	str.w	r3, [r8]
			xReturn = pdPASS;
 80087b8:	2001      	movs	r0, #1
	__asm volatile
 80087ba:	f387 8811 	msr	BASEPRI, r7
}
 80087be:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
 80087c2:	3601      	adds	r6, #1
 80087c4:	b276      	sxtb	r6, r6
 80087c6:	f884 6044 	strb.w	r6, [r4, #68]	@ 0x44
 80087ca:	e7f5      	b.n	80087b8 <xQueueReceiveFromISR+0x82>
			xReturn = pdFAIL;
 80087cc:	4628      	mov	r0, r5
 80087ce:	e7f4      	b.n	80087ba <xQueueReceiveFromISR+0x84>

080087d0 <vQueueAddToRegistry>:
/*-----------------------------------------------------------*/

#if ( configQUEUE_REGISTRY_SIZE > 0 )

	void vQueueAddToRegistry( QueueHandle_t xQueue, const char *pcQueueName ) /*lint !e971 Unqualified char types are allowed for strings and single characters only. */
	{
 80087d0:	b530      	push	{r4, r5, lr}

		/* See if there is an empty space in the registry.  A NULL name denotes
		a free slot. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 80087d2:	4a07      	ldr	r2, [pc, #28]	@ (80087f0 <vQueueAddToRegistry+0x20>)
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 80087d4:	2300      	movs	r3, #0
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 80087d6:	f852 5033 	ldr.w	r5, [r2, r3, lsl #3]
 80087da:	eb02 04c3 	add.w	r4, r2, r3, lsl #3
 80087de:	b91d      	cbnz	r5, 80087e8 <vQueueAddToRegistry+0x18>
			{
				/* Store the information on this queue. */
				xQueueRegistry[ ux ].pcQueueName = pcQueueName;
 80087e0:	f842 1033 	str.w	r1, [r2, r3, lsl #3]
				xQueueRegistry[ ux ].xHandle = xQueue;
 80087e4:	6060      	str	r0, [r4, #4]
			else
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}
	}
 80087e6:	bd30      	pop	{r4, r5, pc}
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 80087e8:	3301      	adds	r3, #1
 80087ea:	2b08      	cmp	r3, #8
 80087ec:	d1f3      	bne.n	80087d6 <vQueueAddToRegistry+0x6>
 80087ee:	e7fa      	b.n	80087e6 <vQueueAddToRegistry+0x16>
 80087f0:	200139cc 	.word	0x200139cc

080087f4 <vQueueUnregisterQueue>:
/*-----------------------------------------------------------*/

#if ( configQUEUE_REGISTRY_SIZE > 0 )

	void vQueueUnregisterQueue( QueueHandle_t xQueue )
	{
 80087f4:	b510      	push	{r4, lr}

		/* See if the handle of the queue being unregistered in actually in the
		registry. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 80087f6:	4a09      	ldr	r2, [pc, #36]	@ (800881c <vQueueUnregisterQueue+0x28>)
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 80087f8:	2300      	movs	r3, #0
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 80087fa:	f852 1033 	ldr.w	r1, [r2, r3, lsl #3]
 80087fe:	4281      	cmp	r1, r0
 8008800:	ea4f 04c3 	mov.w	r4, r3, lsl #3
 8008804:	d106      	bne.n	8008814 <vQueueUnregisterQueue+0x20>
			{
				/* Set the name to NULL to show that this slot if free again. */
				xQueueRegistry[ ux ].pcQueueName = NULL;
 8008806:	4a06      	ldr	r2, [pc, #24]	@ (8008820 <vQueueUnregisterQueue+0x2c>)
 8008808:	2100      	movs	r1, #0
 800880a:	f842 1033 	str.w	r1, [r2, r3, lsl #3]

				/* Set the handle to NULL to ensure the same queue handle cannot
				appear in the registry twice if it is added, removed, then
				added again. */
				xQueueRegistry[ ux ].xHandle = ( QueueHandle_t ) 0;
 800880e:	4422      	add	r2, r4
 8008810:	6051      	str	r1, [r2, #4]
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}

	} /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
 8008812:	bd10      	pop	{r4, pc}
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 8008814:	3301      	adds	r3, #1
 8008816:	2b08      	cmp	r3, #8
 8008818:	d1ef      	bne.n	80087fa <vQueueUnregisterQueue+0x6>
 800881a:	e7fa      	b.n	8008812 <vQueueUnregisterQueue+0x1e>
 800881c:	200139d0 	.word	0x200139d0
 8008820:	200139cc 	.word	0x200139cc

08008824 <vQueueDelete>:
{
 8008824:	b510      	push	{r4, lr}
	configASSERT( pxQueue );
 8008826:	b940      	cbnz	r0, 800883a <vQueueDelete+0x16>
	__asm volatile
 8008828:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800882c:	f383 8811 	msr	BASEPRI, r3
 8008830:	f3bf 8f6f 	isb	sy
 8008834:	f3bf 8f4f 	dsb	sy
 8008838:	e7fe      	b.n	8008838 <vQueueDelete+0x14>
		vQueueUnregisterQueue( pxQueue );
 800883a:	f7ff ffdb 	bl	80087f4 <vQueueUnregisterQueue>
		if( pxQueue->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
 800883e:	f890 3046 	ldrb.w	r3, [r0, #70]	@ 0x46
 8008842:	b91b      	cbnz	r3, 800884c <vQueueDelete+0x28>
}
 8008844:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
			vPortFree( pxQueue );
 8008848:	f7ff b916 	b.w	8007a78 <vPortFree>
}
 800884c:	bd10      	pop	{r4, pc}

0800884e <vQueueWaitForMessageRestricted>:
/*-----------------------------------------------------------*/

#if ( configUSE_TIMERS == 1 )

	void vQueueWaitForMessageRestricted( QueueHandle_t xQueue, TickType_t xTicksToWait, const BaseType_t xWaitIndefinitely )
	{
 800884e:	b570      	push	{r4, r5, r6, lr}
 8008850:	4604      	mov	r4, r0
 8008852:	460d      	mov	r5, r1
 8008854:	4616      	mov	r6, r2
		will not actually cause the task to block, just place it on a blocked
		list.  It will not block until the scheduler is unlocked - at which
		time a yield will be performed.  If an item is added to the queue while
		the queue is locked, and the calling task blocks on the queue, then the
		calling task will be immediately unblocked when the queue is unlocked. */
		prvLockQueue( pxQueue );
 8008856:	f7ff f9f5 	bl	8007c44 <vPortEnterCritical>
 800885a:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
 800885e:	2bff      	cmp	r3, #255	@ 0xff
 8008860:	bf04      	itt	eq
 8008862:	2300      	moveq	r3, #0
 8008864:	f884 3044 	strbeq.w	r3, [r4, #68]	@ 0x44
 8008868:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
 800886c:	2bff      	cmp	r3, #255	@ 0xff
 800886e:	bf04      	itt	eq
 8008870:	2300      	moveq	r3, #0
 8008872:	f884 3045 	strbeq.w	r3, [r4, #69]	@ 0x45
 8008876:	f7ff fa05 	bl	8007c84 <vPortExitCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0U )
 800887a:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 800887c:	b92b      	cbnz	r3, 800888a <vQueueWaitForMessageRestricted+0x3c>
		{
			/* There is nothing in the queue, block for the specified period. */
			vTaskPlaceOnEventListRestricted( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait, xWaitIndefinitely );
 800887e:	4632      	mov	r2, r6
 8008880:	4629      	mov	r1, r5
 8008882:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 8008886:	f000 fba5 	bl	8008fd4 <vTaskPlaceOnEventListRestricted>
		}
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
		prvUnlockQueue( pxQueue );
 800888a:	4620      	mov	r0, r4
	}
 800888c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
		prvUnlockQueue( pxQueue );
 8008890:	f7ff bb6c 	b.w	8007f6c <prvUnlockQueue>

08008894 <prvAddNewTaskToReadyList>:
	}
}
/*-----------------------------------------------------------*/

static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB )
{
 8008894:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8008898:	4604      	mov	r4, r0
	/* Ensure interrupts don't access the task lists while the lists are being
	updated. */
	taskENTER_CRITICAL();
 800889a:	f7ff f9d3 	bl	8007c44 <vPortEnterCritical>
	{
		uxCurrentNumberOfTasks++;
 800889e:	4b30      	ldr	r3, [pc, #192]	@ (8008960 <prvAddNewTaskToReadyList+0xcc>)
		if( pxCurrentTCB == NULL )
 80088a0:	4e30      	ldr	r6, [pc, #192]	@ (8008964 <prvAddNewTaskToReadyList+0xd0>)
		uxCurrentNumberOfTasks++;
 80088a2:	681a      	ldr	r2, [r3, #0]
 80088a4:	4f30      	ldr	r7, [pc, #192]	@ (8008968 <prvAddNewTaskToReadyList+0xd4>)
 80088a6:	3201      	adds	r2, #1
 80088a8:	601a      	str	r2, [r3, #0]
		if( pxCurrentTCB == NULL )
 80088aa:	6835      	ldr	r5, [r6, #0]
 80088ac:	2d00      	cmp	r5, #0
 80088ae:	d14b      	bne.n	8008948 <prvAddNewTaskToReadyList+0xb4>
		{
			/* There are no other tasks, or all the other tasks are in
			the suspended state - make this the current task. */
			pxCurrentTCB = pxNewTCB;
 80088b0:	6034      	str	r4, [r6, #0]

			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
 80088b2:	681b      	ldr	r3, [r3, #0]
 80088b4:	2b01      	cmp	r3, #1
 80088b6:	d11f      	bne.n	80088f8 <prvAddNewTaskToReadyList+0x64>
 80088b8:	46b8      	mov	r8, r7
{
UBaseType_t uxPriority;

	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
	{
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 80088ba:	4640      	mov	r0, r8
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 80088bc:	3501      	adds	r5, #1
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 80088be:	f7ff f919 	bl	8007af4 <vListInitialise>
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 80088c2:	2d38      	cmp	r5, #56	@ 0x38
 80088c4:	f108 0814 	add.w	r8, r8, #20
 80088c8:	d1f7      	bne.n	80088ba <prvAddNewTaskToReadyList+0x26>
	}

	vListInitialise( &xDelayedTaskList1 );
 80088ca:	f8df 80c4 	ldr.w	r8, [pc, #196]	@ 8008990 <prvAddNewTaskToReadyList+0xfc>
	vListInitialise( &xDelayedTaskList2 );
 80088ce:	4d27      	ldr	r5, [pc, #156]	@ (800896c <prvAddNewTaskToReadyList+0xd8>)
	vListInitialise( &xDelayedTaskList1 );
 80088d0:	4640      	mov	r0, r8
 80088d2:	f7ff f90f 	bl	8007af4 <vListInitialise>
	vListInitialise( &xDelayedTaskList2 );
 80088d6:	4628      	mov	r0, r5
 80088d8:	f7ff f90c 	bl	8007af4 <vListInitialise>
	vListInitialise( &xPendingReadyList );
 80088dc:	4824      	ldr	r0, [pc, #144]	@ (8008970 <prvAddNewTaskToReadyList+0xdc>)
 80088de:	f7ff f909 	bl	8007af4 <vListInitialise>

	#if ( INCLUDE_vTaskDelete == 1 )
	{
		vListInitialise( &xTasksWaitingTermination );
 80088e2:	4824      	ldr	r0, [pc, #144]	@ (8008974 <prvAddNewTaskToReadyList+0xe0>)
 80088e4:	f7ff f906 	bl	8007af4 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskDelete */

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		vListInitialise( &xSuspendedTaskList );
 80088e8:	4823      	ldr	r0, [pc, #140]	@ (8008978 <prvAddNewTaskToReadyList+0xe4>)
 80088ea:	f7ff f903 	bl	8007af4 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskSuspend */

	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
	using list2. */
	pxDelayedTaskList = &xDelayedTaskList1;
 80088ee:	4b23      	ldr	r3, [pc, #140]	@ (800897c <prvAddNewTaskToReadyList+0xe8>)
 80088f0:	f8c3 8000 	str.w	r8, [r3]
	pxOverflowDelayedTaskList = &xDelayedTaskList2;
 80088f4:	4b22      	ldr	r3, [pc, #136]	@ (8008980 <prvAddNewTaskToReadyList+0xec>)
 80088f6:	601d      	str	r5, [r3, #0]
		uxTaskNumber++;
 80088f8:	4a22      	ldr	r2, [pc, #136]	@ (8008984 <prvAddNewTaskToReadyList+0xf0>)
 80088fa:	6813      	ldr	r3, [r2, #0]
 80088fc:	3301      	adds	r3, #1
 80088fe:	6013      	str	r3, [r2, #0]
		prvAddTaskToReadyList( pxNewTCB );
 8008900:	4a21      	ldr	r2, [pc, #132]	@ (8008988 <prvAddNewTaskToReadyList+0xf4>)
			pxNewTCB->uxTCBNumber = uxTaskNumber;
 8008902:	6463      	str	r3, [r4, #68]	@ 0x44
		prvAddTaskToReadyList( pxNewTCB );
 8008904:	6811      	ldr	r1, [r2, #0]
 8008906:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 8008908:	2014      	movs	r0, #20
 800890a:	428b      	cmp	r3, r1
 800890c:	fb00 7003 	mla	r0, r0, r3, r7
 8008910:	f104 0104 	add.w	r1, r4, #4
 8008914:	bf88      	it	hi
 8008916:	6013      	strhi	r3, [r2, #0]
 8008918:	f7ff f8fa 	bl	8007b10 <vListInsertEnd>
	taskEXIT_CRITICAL();
 800891c:	f7ff f9b2 	bl	8007c84 <vPortExitCritical>
	if( xSchedulerRunning != pdFALSE )
 8008920:	4b1a      	ldr	r3, [pc, #104]	@ (800898c <prvAddNewTaskToReadyList+0xf8>)
 8008922:	681b      	ldr	r3, [r3, #0]
 8008924:	b173      	cbz	r3, 8008944 <prvAddNewTaskToReadyList+0xb0>
		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
 8008926:	6833      	ldr	r3, [r6, #0]
 8008928:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 800892a:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 800892c:	429a      	cmp	r2, r3
 800892e:	d209      	bcs.n	8008944 <prvAddNewTaskToReadyList+0xb0>
			taskYIELD_IF_USING_PREEMPTION();
 8008930:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8008934:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8008938:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 800893c:	f3bf 8f4f 	dsb	sy
 8008940:	f3bf 8f6f 	isb	sy
}
 8008944:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			if( xSchedulerRunning == pdFALSE )
 8008948:	4b10      	ldr	r3, [pc, #64]	@ (800898c <prvAddNewTaskToReadyList+0xf8>)
 800894a:	681a      	ldr	r2, [r3, #0]
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 800894c:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
			if( xSchedulerRunning == pdFALSE )
 800894e:	2a00      	cmp	r2, #0
 8008950:	d1d2      	bne.n	80088f8 <prvAddNewTaskToReadyList+0x64>
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 8008952:	6832      	ldr	r2, [r6, #0]
 8008954:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
 8008956:	429a      	cmp	r2, r3
					pxCurrentTCB = pxNewTCB;
 8008958:	bf98      	it	ls
 800895a:	6034      	strls	r4, [r6, #0]
 800895c:	e7cc      	b.n	80088f8 <prvAddNewTaskToReadyList+0x64>
 800895e:	bf00      	nop
 8008960:	20013a30 	.word	0x20013a30
 8008964:	20013f04 	.word	0x20013f04
 8008968:	20013aa4 	.word	0x20013aa4
 800896c:	20013a7c 	.word	0x20013a7c
 8008970:	20013a60 	.word	0x20013a60
 8008974:	20013a4c 	.word	0x20013a4c
 8008978:	20013a34 	.word	0x20013a34
 800897c:	20013a78 	.word	0x20013a78
 8008980:	20013a74 	.word	0x20013a74
 8008984:	20013a14 	.word	0x20013a14
 8008988:	20013a28 	.word	0x20013a28
 800898c:	20013a24 	.word	0x20013a24
 8008990:	20013a90 	.word	0x20013a90

08008994 <prvAddCurrentTaskToDelayedList>:

#endif
/*-----------------------------------------------------------*/

static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockIndefinitely )
{
 8008994:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
TickType_t xTimeToWake;
const TickType_t xConstTickCount = xTickCount;
 8008996:	4b15      	ldr	r3, [pc, #84]	@ (80089ec <prvAddCurrentTaskToDelayedList+0x58>)
	}
	#endif

	/* Remove the task from the ready list before adding it to the blocked list
	as the same list item is used for both lists. */
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8008998:	4d15      	ldr	r5, [pc, #84]	@ (80089f0 <prvAddCurrentTaskToDelayedList+0x5c>)
const TickType_t xConstTickCount = xTickCount;
 800899a:	681c      	ldr	r4, [r3, #0]
{
 800899c:	4606      	mov	r6, r0
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800899e:	6828      	ldr	r0, [r5, #0]
 80089a0:	3004      	adds	r0, #4
{
 80089a2:	460f      	mov	r7, r1
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 80089a4:	f7ff f8d6 	bl	8007b54 <uxListRemove>
		mtCOVERAGE_TEST_MARKER();
	}

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
 80089a8:	1c73      	adds	r3, r6, #1
 80089aa:	d107      	bne.n	80089bc <prvAddCurrentTaskToDelayedList+0x28>
 80089ac:	b137      	cbz	r7, 80089bc <prvAddCurrentTaskToDelayedList+0x28>
		{
			/* Add the task to the suspended task list instead of a delayed task
			list to ensure it is not woken by a timing event.  It will block
			indefinitely. */
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 80089ae:	6829      	ldr	r1, [r5, #0]
 80089b0:	4810      	ldr	r0, [pc, #64]	@ (80089f4 <prvAddCurrentTaskToDelayedList+0x60>)

		/* Avoid compiler warning when INCLUDE_vTaskSuspend is not 1. */
		( void ) xCanBlockIndefinitely;
	}
	#endif /* INCLUDE_vTaskSuspend */
}
 80089b2:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 80089b6:	3104      	adds	r1, #4
 80089b8:	f7ff b8aa 	b.w	8007b10 <vListInsertEnd>
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 80089bc:	682b      	ldr	r3, [r5, #0]
 80089be:	19a4      	adds	r4, r4, r6
 80089c0:	605c      	str	r4, [r3, #4]
			if( xTimeToWake < xConstTickCount )
 80089c2:	d307      	bcc.n	80089d4 <prvAddCurrentTaskToDelayedList+0x40>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 80089c4:	4b0c      	ldr	r3, [pc, #48]	@ (80089f8 <prvAddCurrentTaskToDelayedList+0x64>)
 80089c6:	6818      	ldr	r0, [r3, #0]
 80089c8:	6829      	ldr	r1, [r5, #0]
}
 80089ca:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 80089ce:	3104      	adds	r1, #4
 80089d0:	f7ff b8a9 	b.w	8007b26 <vListInsert>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 80089d4:	4b09      	ldr	r3, [pc, #36]	@ (80089fc <prvAddCurrentTaskToDelayedList+0x68>)
 80089d6:	6818      	ldr	r0, [r3, #0]
 80089d8:	6829      	ldr	r1, [r5, #0]
 80089da:	3104      	adds	r1, #4
 80089dc:	f7ff f8a3 	bl	8007b26 <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
 80089e0:	4b07      	ldr	r3, [pc, #28]	@ (8008a00 <prvAddCurrentTaskToDelayedList+0x6c>)
 80089e2:	681a      	ldr	r2, [r3, #0]
 80089e4:	42a2      	cmp	r2, r4
					xNextTaskUnblockTime = xTimeToWake;
 80089e6:	bf88      	it	hi
 80089e8:	601c      	strhi	r4, [r3, #0]
}
 80089ea:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80089ec:	20013a2c 	.word	0x20013a2c
 80089f0:	20013f04 	.word	0x20013f04
 80089f4:	20013a34 	.word	0x20013a34
 80089f8:	20013a74 	.word	0x20013a74
 80089fc:	20013a78 	.word	0x20013a78
 8008a00:	20013a10 	.word	0x20013a10

08008a04 <prvResetNextTaskUnblockTime>:
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 8008a04:	4a06      	ldr	r2, [pc, #24]	@ (8008a20 <prvResetNextTaskUnblockTime+0x1c>)
 8008a06:	6813      	ldr	r3, [r2, #0]
 8008a08:	6819      	ldr	r1, [r3, #0]
 8008a0a:	4b06      	ldr	r3, [pc, #24]	@ (8008a24 <prvResetNextTaskUnblockTime+0x20>)
 8008a0c:	b919      	cbnz	r1, 8008a16 <prvResetNextTaskUnblockTime+0x12>
		xNextTaskUnblockTime = portMAX_DELAY;
 8008a0e:	f04f 32ff 	mov.w	r2, #4294967295
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 8008a12:	601a      	str	r2, [r3, #0]
}
 8008a14:	4770      	bx	lr
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8008a16:	6812      	ldr	r2, [r2, #0]
 8008a18:	68d2      	ldr	r2, [r2, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 8008a1a:	68d2      	ldr	r2, [r2, #12]
 8008a1c:	6852      	ldr	r2, [r2, #4]
 8008a1e:	e7f8      	b.n	8008a12 <prvResetNextTaskUnblockTime+0xe>
 8008a20:	20013a78 	.word	0x20013a78
 8008a24:	20013a10 	.word	0x20013a10

08008a28 <prvDeleteTCB>:
	{
 8008a28:	b510      	push	{r4, lr}
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
 8008a2a:	f890 305d 	ldrb.w	r3, [r0, #93]	@ 0x5d
	{
 8008a2e:	4604      	mov	r4, r0
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
 8008a30:	b93b      	cbnz	r3, 8008a42 <prvDeleteTCB+0x1a>
				vPortFree( pxTCB->pxStack );
 8008a32:	6b00      	ldr	r0, [r0, #48]	@ 0x30
 8008a34:	f7ff f820 	bl	8007a78 <vPortFree>
				vPortFree( pxTCB );
 8008a38:	4620      	mov	r0, r4
	}
 8008a3a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
				vPortFree( pxTCB );
 8008a3e:	f7ff b81b 	b.w	8007a78 <vPortFree>
			else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
 8008a42:	2b01      	cmp	r3, #1
 8008a44:	d0f9      	beq.n	8008a3a <prvDeleteTCB+0x12>
				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	);
 8008a46:	2b02      	cmp	r3, #2
 8008a48:	d008      	beq.n	8008a5c <prvDeleteTCB+0x34>
 8008a4a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008a4e:	f383 8811 	msr	BASEPRI, r3
 8008a52:	f3bf 8f6f 	isb	sy
 8008a56:	f3bf 8f4f 	dsb	sy
 8008a5a:	e7fe      	b.n	8008a5a <prvDeleteTCB+0x32>
	}
 8008a5c:	bd10      	pop	{r4, pc}
	...

08008a60 <prvIdleTask>:
{
 8008a60:	b580      	push	{r7, lr}
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 8008a62:	4c13      	ldr	r4, [pc, #76]	@ (8008ab0 <prvIdleTask+0x50>)
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8008a64:	4f13      	ldr	r7, [pc, #76]	@ (8008ab4 <prvIdleTask+0x54>)
				--uxCurrentNumberOfTasks;
 8008a66:	4d14      	ldr	r5, [pc, #80]	@ (8008ab8 <prvIdleTask+0x58>)
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 8008a68:	6823      	ldr	r3, [r4, #0]
 8008a6a:	b973      	cbnz	r3, 8008a8a <prvIdleTask+0x2a>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
 8008a6c:	4b13      	ldr	r3, [pc, #76]	@ (8008abc <prvIdleTask+0x5c>)
 8008a6e:	681b      	ldr	r3, [r3, #0]
 8008a70:	2b01      	cmp	r3, #1
 8008a72:	d9f8      	bls.n	8008a66 <prvIdleTask+0x6>
				taskYIELD();
 8008a74:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8008a78:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8008a7c:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8008a80:	f3bf 8f4f 	dsb	sy
 8008a84:	f3bf 8f6f 	isb	sy
 8008a88:	e7ed      	b.n	8008a66 <prvIdleTask+0x6>
			taskENTER_CRITICAL();
 8008a8a:	f7ff f8db 	bl	8007c44 <vPortEnterCritical>
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8008a8e:	68fb      	ldr	r3, [r7, #12]
 8008a90:	68de      	ldr	r6, [r3, #12]
				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 8008a92:	1d30      	adds	r0, r6, #4
 8008a94:	f7ff f85e 	bl	8007b54 <uxListRemove>
				--uxCurrentNumberOfTasks;
 8008a98:	682b      	ldr	r3, [r5, #0]
 8008a9a:	3b01      	subs	r3, #1
 8008a9c:	602b      	str	r3, [r5, #0]
				--uxDeletedTasksWaitingCleanUp;
 8008a9e:	6823      	ldr	r3, [r4, #0]
 8008aa0:	3b01      	subs	r3, #1
 8008aa2:	6023      	str	r3, [r4, #0]
			taskEXIT_CRITICAL();
 8008aa4:	f7ff f8ee 	bl	8007c84 <vPortExitCritical>
			prvDeleteTCB( pxTCB );
 8008aa8:	4630      	mov	r0, r6
 8008aaa:	f7ff ffbd 	bl	8008a28 <prvDeleteTCB>
 8008aae:	e7db      	b.n	8008a68 <prvIdleTask+0x8>
 8008ab0:	20013a48 	.word	0x20013a48
 8008ab4:	20013a4c 	.word	0x20013a4c
 8008ab8:	20013a30 	.word	0x20013a30
 8008abc:	20013aa4 	.word	0x20013aa4

08008ac0 <prvInitialiseNewTask.constprop.0>:
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 8008ac0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8008ac4:	e9dd 9409 	ldrd	r9, r4, [sp, #36]	@ 0x24
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 8008ac8:	0096      	lsls	r6, r2, #2
 8008aca:	4632      	mov	r2, r6
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 8008acc:	4607      	mov	r7, r0
 8008ace:	460d      	mov	r5, r1
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 8008ad0:	6b20      	ldr	r0, [r4, #48]	@ 0x30
 8008ad2:	21a5      	movs	r1, #165	@ 0xa5
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 8008ad4:	4698      	mov	r8, r3
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 8008ad6:	f01a fa5c 	bl	8022f92 <memset>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
 8008ada:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8008adc:	3e04      	subs	r6, #4
 8008ade:	441e      	add	r6, r3
		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) ); /*lint !e923 !e9033 !e9078 MISRA exception.  Avoiding casts between pointers and integers is not practical.  Size differences accounted for using portPOINTER_SIZE_TYPE type.  Checked by assert(). */
 8008ae0:	f026 0607 	bic.w	r6, r6, #7
	if( pcName != NULL )
 8008ae4:	b3b5      	cbz	r5, 8008b54 <prvInitialiseNewTask.constprop.0+0x94>
 8008ae6:	1e6b      	subs	r3, r5, #1
 8008ae8:	f104 0233 	add.w	r2, r4, #51	@ 0x33
 8008aec:	350f      	adds	r5, #15
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 8008aee:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 8008af2:	f802 1f01 	strb.w	r1, [r2, #1]!
			if( pcName[ x ] == ( char ) 0x00 )
 8008af6:	b109      	cbz	r1, 8008afc <prvInitialiseNewTask.constprop.0+0x3c>
		for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
 8008af8:	42ab      	cmp	r3, r5
 8008afa:	d1f8      	bne.n	8008aee <prvInitialiseNewTask.constprop.0+0x2e>
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
 8008afc:	2300      	movs	r3, #0
 8008afe:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
 8008b02:	9d08      	ldr	r5, [sp, #32]
 8008b04:	2d37      	cmp	r5, #55	@ 0x37
 8008b06:	bf28      	it	cs
 8008b08:	2537      	movcs	r5, #55	@ 0x37
		pxNewTCB->uxMutexesHeld = 0;
 8008b0a:	f04f 0a00 	mov.w	sl, #0
	pxNewTCB->uxPriority = uxPriority;
 8008b0e:	62e5      	str	r5, [r4, #44]	@ 0x2c
		pxNewTCB->uxBasePriority = uxPriority;
 8008b10:	64e5      	str	r5, [r4, #76]	@ 0x4c
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 8008b12:	1d20      	adds	r0, r4, #4
		pxNewTCB->uxMutexesHeld = 0;
 8008b14:	f8c4 a050 	str.w	sl, [r4, #80]	@ 0x50
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 8008b18:	f7fe fff7 	bl	8007b0a <vListInitialiseItem>
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8008b1c:	f1c5 0538 	rsb	r5, r5, #56	@ 0x38
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 8008b20:	f104 0018 	add.w	r0, r4, #24
 8008b24:	f7fe fff1 	bl	8007b0a <vListInitialiseItem>
		pxNewTCB->ulNotifiedValue = 0;
 8008b28:	f8c4 a058 	str.w	sl, [r4, #88]	@ 0x58
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
 8008b2c:	6124      	str	r4, [r4, #16]
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8008b2e:	61a5      	str	r5, [r4, #24]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 8008b30:	6264      	str	r4, [r4, #36]	@ 0x24
		pxNewTCB->pxTaskTag = NULL;
 8008b32:	f8c4 a054 	str.w	sl, [r4, #84]	@ 0x54
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 8008b36:	f884 a05c 	strb.w	sl, [r4, #92]	@ 0x5c
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
 8008b3a:	4642      	mov	r2, r8
 8008b3c:	4639      	mov	r1, r7
 8008b3e:	4630      	mov	r0, r6
 8008b40:	f7ff f856 	bl	8007bf0 <pxPortInitialiseStack>
 8008b44:	6020      	str	r0, [r4, #0]
	if( pxCreatedTask != NULL )
 8008b46:	f1b9 0f00 	cmp.w	r9, #0
 8008b4a:	d001      	beq.n	8008b50 <prvInitialiseNewTask.constprop.0+0x90>
		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
 8008b4c:	f8c9 4000 	str.w	r4, [r9]
}
 8008b50:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		pxNewTCB->pcTaskName[ 0 ] = 0x00;
 8008b54:	f884 5034 	strb.w	r5, [r4, #52]	@ 0x34
 8008b58:	e7d3      	b.n	8008b02 <prvInitialiseNewTask.constprop.0+0x42>

08008b5a <xTaskCreateStatic>:
	{
 8008b5a:	b570      	push	{r4, r5, r6, lr}
 8008b5c:	b086      	sub	sp, #24
 8008b5e:	e9dd 540b 	ldrd	r5, r4, [sp, #44]	@ 0x2c
		configASSERT( puxStackBuffer != NULL );
 8008b62:	b945      	cbnz	r5, 8008b76 <xTaskCreateStatic+0x1c>
 8008b64:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008b68:	f383 8811 	msr	BASEPRI, r3
 8008b6c:	f3bf 8f6f 	isb	sy
 8008b70:	f3bf 8f4f 	dsb	sy
 8008b74:	e7fe      	b.n	8008b74 <xTaskCreateStatic+0x1a>
		configASSERT( pxTaskBuffer != NULL );
 8008b76:	b944      	cbnz	r4, 8008b8a <xTaskCreateStatic+0x30>
 8008b78:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008b7c:	f383 8811 	msr	BASEPRI, r3
 8008b80:	f3bf 8f6f 	isb	sy
 8008b84:	f3bf 8f4f 	dsb	sy
 8008b88:	e7fe      	b.n	8008b88 <xTaskCreateStatic+0x2e>
			volatile size_t xSize = sizeof( StaticTask_t );
 8008b8a:	2660      	movs	r6, #96	@ 0x60
 8008b8c:	9605      	str	r6, [sp, #20]
			configASSERT( xSize == sizeof( TCB_t ) );
 8008b8e:	9e05      	ldr	r6, [sp, #20]
 8008b90:	2e60      	cmp	r6, #96	@ 0x60
 8008b92:	d008      	beq.n	8008ba6 <xTaskCreateStatic+0x4c>
 8008b94:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008b98:	f383 8811 	msr	BASEPRI, r3
 8008b9c:	f3bf 8f6f 	isb	sy
 8008ba0:	f3bf 8f4f 	dsb	sy
 8008ba4:	e7fe      	b.n	8008ba4 <xTaskCreateStatic+0x4a>
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 8008ba6:	6325      	str	r5, [r4, #48]	@ 0x30
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 8008ba8:	2502      	movs	r5, #2
 8008baa:	f884 505d 	strb.w	r5, [r4, #93]	@ 0x5d
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 8008bae:	ad04      	add	r5, sp, #16
 8008bb0:	9501      	str	r5, [sp, #4]
 8008bb2:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
 8008bb4:	9402      	str	r4, [sp, #8]
 8008bb6:	9500      	str	r5, [sp, #0]
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 8008bb8:	9e05      	ldr	r6, [sp, #20]
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 8008bba:	f7ff ff81 	bl	8008ac0 <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 8008bbe:	4620      	mov	r0, r4
 8008bc0:	f7ff fe68 	bl	8008894 <prvAddNewTaskToReadyList>
	}
 8008bc4:	9804      	ldr	r0, [sp, #16]
 8008bc6:	b006      	add	sp, #24
 8008bc8:	bd70      	pop	{r4, r5, r6, pc}

08008bca <xTaskCreate>:
	{
 8008bca:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8008bce:	4607      	mov	r7, r0
 8008bd0:	b085      	sub	sp, #20
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 8008bd2:	0090      	lsls	r0, r2, #2
	{
 8008bd4:	4688      	mov	r8, r1
 8008bd6:	4616      	mov	r6, r2
 8008bd8:	4699      	mov	r9, r3
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 8008bda:	f7fe feb5 	bl	8007948 <pvPortMalloc>
			if( pxStack != NULL )
 8008bde:	4605      	mov	r5, r0
 8008be0:	b920      	cbnz	r0, 8008bec <xTaskCreate+0x22>
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 8008be2:	f04f 30ff 	mov.w	r0, #4294967295
	}
 8008be6:	b005      	add	sp, #20
 8008be8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e9087 !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack, and the first member of TCB_t is always a pointer to the task's stack. */
 8008bec:	2060      	movs	r0, #96	@ 0x60
 8008bee:	f7fe feab 	bl	8007948 <pvPortMalloc>
				if( pxNewTCB != NULL )
 8008bf2:	4604      	mov	r4, r0
 8008bf4:	b198      	cbz	r0, 8008c1e <xTaskCreate+0x54>
				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
 8008bf6:	2300      	movs	r3, #0
 8008bf8:	f880 305d 	strb.w	r3, [r0, #93]	@ 0x5d
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 8008bfc:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
					pxNewTCB->pxStack = pxStack;
 8008bfe:	6305      	str	r5, [r0, #48]	@ 0x30
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 8008c00:	9301      	str	r3, [sp, #4]
 8008c02:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8008c04:	9002      	str	r0, [sp, #8]
 8008c06:	9300      	str	r3, [sp, #0]
 8008c08:	4632      	mov	r2, r6
 8008c0a:	464b      	mov	r3, r9
 8008c0c:	4641      	mov	r1, r8
 8008c0e:	4638      	mov	r0, r7
 8008c10:	f7ff ff56 	bl	8008ac0 <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 8008c14:	4620      	mov	r0, r4
 8008c16:	f7ff fe3d 	bl	8008894 <prvAddNewTaskToReadyList>
			xReturn = pdPASS;
 8008c1a:	2001      	movs	r0, #1
 8008c1c:	e7e3      	b.n	8008be6 <xTaskCreate+0x1c>
					vPortFree( pxStack );
 8008c1e:	4628      	mov	r0, r5
 8008c20:	f7fe ff2a 	bl	8007a78 <vPortFree>
		if( pxNewTCB != NULL )
 8008c24:	e7dd      	b.n	8008be2 <xTaskCreate+0x18>
	...

08008c28 <vTaskStartScheduler>:
{
 8008c28:	b510      	push	{r4, lr}
 8008c2a:	b088      	sub	sp, #32
		StaticTask_t *pxIdleTaskTCBBuffer = NULL;
 8008c2c:	2400      	movs	r4, #0
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 8008c2e:	aa07      	add	r2, sp, #28
 8008c30:	a906      	add	r1, sp, #24
 8008c32:	a805      	add	r0, sp, #20
		StackType_t *pxIdleTaskStackBuffer = NULL;
 8008c34:	e9cd 4405 	strd	r4, r4, [sp, #20]
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 8008c38:	f7fe fe48 	bl	80078cc <vApplicationGetIdleTaskMemory>
		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
 8008c3c:	9b05      	ldr	r3, [sp, #20]
 8008c3e:	9302      	str	r3, [sp, #8]
 8008c40:	9b06      	ldr	r3, [sp, #24]
 8008c42:	9a07      	ldr	r2, [sp, #28]
 8008c44:	4916      	ldr	r1, [pc, #88]	@ (8008ca0 <vTaskStartScheduler+0x78>)
 8008c46:	4817      	ldr	r0, [pc, #92]	@ (8008ca4 <vTaskStartScheduler+0x7c>)
 8008c48:	e9cd 4300 	strd	r4, r3, [sp]
 8008c4c:	4623      	mov	r3, r4
 8008c4e:	f7ff ff84 	bl	8008b5a <xTaskCreateStatic>
		if( xIdleTaskHandle != NULL )
 8008c52:	b318      	cbz	r0, 8008c9c <vTaskStartScheduler+0x74>
			xReturn = xTimerCreateTimerTask();
 8008c54:	f000 fba6 	bl	80093a4 <xTimerCreateTimerTask>
	if( xReturn == pdPASS )
 8008c58:	2801      	cmp	r0, #1
 8008c5a:	d114      	bne.n	8008c86 <vTaskStartScheduler+0x5e>
 8008c5c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008c60:	f383 8811 	msr	BASEPRI, r3
 8008c64:	f3bf 8f6f 	isb	sy
 8008c68:	f3bf 8f4f 	dsb	sy
		xNextTaskUnblockTime = portMAX_DELAY;
 8008c6c:	4b0e      	ldr	r3, [pc, #56]	@ (8008ca8 <vTaskStartScheduler+0x80>)
 8008c6e:	f04f 32ff 	mov.w	r2, #4294967295
 8008c72:	601a      	str	r2, [r3, #0]
		xSchedulerRunning = pdTRUE;
 8008c74:	4b0d      	ldr	r3, [pc, #52]	@ (8008cac <vTaskStartScheduler+0x84>)
 8008c76:	6018      	str	r0, [r3, #0]
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 8008c78:	4b0d      	ldr	r3, [pc, #52]	@ (8008cb0 <vTaskStartScheduler+0x88>)
 8008c7a:	601c      	str	r4, [r3, #0]
}
 8008c7c:	b008      	add	sp, #32
 8008c7e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
		if( xPortStartScheduler() != pdFALSE )
 8008c82:	f7ff b86f 	b.w	8007d64 <xPortStartScheduler>
		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
 8008c86:	3001      	adds	r0, #1
 8008c88:	d108      	bne.n	8008c9c <vTaskStartScheduler+0x74>
 8008c8a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008c8e:	f383 8811 	msr	BASEPRI, r3
 8008c92:	f3bf 8f6f 	isb	sy
 8008c96:	f3bf 8f4f 	dsb	sy
 8008c9a:	e7fe      	b.n	8008c9a <vTaskStartScheduler+0x72>
}
 8008c9c:	b008      	add	sp, #32
 8008c9e:	bd10      	pop	{r4, pc}
 8008ca0:	0802462b 	.word	0x0802462b
 8008ca4:	08008a61 	.word	0x08008a61
 8008ca8:	20013a10 	.word	0x20013a10
 8008cac:	20013a24 	.word	0x20013a24
 8008cb0:	20013a2c 	.word	0x20013a2c

08008cb4 <vTaskSuspendAll>:
	++uxSchedulerSuspended;
 8008cb4:	4a02      	ldr	r2, [pc, #8]	@ (8008cc0 <vTaskSuspendAll+0xc>)
 8008cb6:	6813      	ldr	r3, [r2, #0]
 8008cb8:	3301      	adds	r3, #1
 8008cba:	6013      	str	r3, [r2, #0]
}
 8008cbc:	4770      	bx	lr
 8008cbe:	bf00      	nop
 8008cc0:	20013a0c 	.word	0x20013a0c

08008cc4 <xTaskGetTickCount>:
		xTicks = xTickCount;
 8008cc4:	4b01      	ldr	r3, [pc, #4]	@ (8008ccc <xTaskGetTickCount+0x8>)
 8008cc6:	6818      	ldr	r0, [r3, #0]
}
 8008cc8:	4770      	bx	lr
 8008cca:	bf00      	nop
 8008ccc:	20013a2c 	.word	0x20013a2c

08008cd0 <xTaskIncrementTick>:
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8008cd0:	4b3f      	ldr	r3, [pc, #252]	@ (8008dd0 <xTaskIncrementTick+0x100>)
 8008cd2:	681b      	ldr	r3, [r3, #0]
{
 8008cd4:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8008cd8:	2b00      	cmp	r3, #0
 8008cda:	d172      	bne.n	8008dc2 <xTaskIncrementTick+0xf2>
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
 8008cdc:	4b3d      	ldr	r3, [pc, #244]	@ (8008dd4 <xTaskIncrementTick+0x104>)
 8008cde:	681c      	ldr	r4, [r3, #0]
 8008ce0:	3401      	adds	r4, #1
		xTickCount = xConstTickCount;
 8008ce2:	601c      	str	r4, [r3, #0]
		if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to false as it is looking for an overflow. */
 8008ce4:	b9bc      	cbnz	r4, 8008d16 <xTaskIncrementTick+0x46>
			taskSWITCH_DELAYED_LISTS();
 8008ce6:	4b3c      	ldr	r3, [pc, #240]	@ (8008dd8 <xTaskIncrementTick+0x108>)
 8008ce8:	681a      	ldr	r2, [r3, #0]
 8008cea:	6812      	ldr	r2, [r2, #0]
 8008cec:	b142      	cbz	r2, 8008d00 <xTaskIncrementTick+0x30>
 8008cee:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008cf2:	f383 8811 	msr	BASEPRI, r3
 8008cf6:	f3bf 8f6f 	isb	sy
 8008cfa:	f3bf 8f4f 	dsb	sy
 8008cfe:	e7fe      	b.n	8008cfe <xTaskIncrementTick+0x2e>
 8008d00:	4a36      	ldr	r2, [pc, #216]	@ (8008ddc <xTaskIncrementTick+0x10c>)
 8008d02:	6819      	ldr	r1, [r3, #0]
 8008d04:	6810      	ldr	r0, [r2, #0]
 8008d06:	6018      	str	r0, [r3, #0]
 8008d08:	6011      	str	r1, [r2, #0]
 8008d0a:	4a35      	ldr	r2, [pc, #212]	@ (8008de0 <xTaskIncrementTick+0x110>)
 8008d0c:	6813      	ldr	r3, [r2, #0]
 8008d0e:	3301      	adds	r3, #1
 8008d10:	6013      	str	r3, [r2, #0]
 8008d12:	f7ff fe77 	bl	8008a04 <prvResetNextTaskUnblockTime>
		if( xConstTickCount >= xNextTaskUnblockTime )
 8008d16:	4d33      	ldr	r5, [pc, #204]	@ (8008de4 <xTaskIncrementTick+0x114>)
 8008d18:	4e33      	ldr	r6, [pc, #204]	@ (8008de8 <xTaskIncrementTick+0x118>)
 8008d1a:	682b      	ldr	r3, [r5, #0]
 8008d1c:	4f33      	ldr	r7, [pc, #204]	@ (8008dec <xTaskIncrementTick+0x11c>)
 8008d1e:	429c      	cmp	r4, r3
BaseType_t xSwitchRequired = pdFALSE;
 8008d20:	f04f 0b00 	mov.w	fp, #0
		if( xConstTickCount >= xNextTaskUnblockTime )
 8008d24:	d212      	bcs.n	8008d4c <xTaskIncrementTick+0x7c>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
 8008d26:	683a      	ldr	r2, [r7, #0]
 8008d28:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
 8008d2a:	2114      	movs	r1, #20
 8008d2c:	434a      	muls	r2, r1
 8008d2e:	58b2      	ldr	r2, [r6, r2]
				xSwitchRequired = pdTRUE;
 8008d30:	2a02      	cmp	r2, #2
			if( xYieldPending != pdFALSE )
 8008d32:	4a2f      	ldr	r2, [pc, #188]	@ (8008df0 <xTaskIncrementTick+0x120>)
 8008d34:	6812      	ldr	r2, [r2, #0]
				xSwitchRequired = pdTRUE;
 8008d36:	bf28      	it	cs
 8008d38:	f04f 0b01 	movcs.w	fp, #1
				xSwitchRequired = pdTRUE;
 8008d3c:	2a00      	cmp	r2, #0
 8008d3e:	bf18      	it	ne
 8008d40:	f04f 0b01 	movne.w	fp, #1
}
 8008d44:	4658      	mov	r0, fp
 8008d46:	b003      	add	sp, #12
 8008d48:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 8008d4c:	f8df 9088 	ldr.w	r9, [pc, #136]	@ 8008dd8 <xTaskIncrementTick+0x108>
					prvAddTaskToReadyList( pxTCB );
 8008d50:	f8df a0a4 	ldr.w	sl, [pc, #164]	@ 8008df8 <xTaskIncrementTick+0x128>
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 8008d54:	f8d9 2000 	ldr.w	r2, [r9]
 8008d58:	6812      	ldr	r2, [r2, #0]
 8008d5a:	b91a      	cbnz	r2, 8008d64 <xTaskIncrementTick+0x94>
					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8008d5c:	f04f 32ff 	mov.w	r2, #4294967295
 8008d60:	602a      	str	r2, [r5, #0]
					break;
 8008d62:	e7e0      	b.n	8008d26 <xTaskIncrementTick+0x56>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8008d64:	f8d9 2000 	ldr.w	r2, [r9]
 8008d68:	68d2      	ldr	r2, [r2, #12]
 8008d6a:	f8d2 800c 	ldr.w	r8, [r2, #12]
					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 8008d6e:	f8d8 1004 	ldr.w	r1, [r8, #4]
					if( xConstTickCount < xItemValue )
 8008d72:	428c      	cmp	r4, r1
 8008d74:	d201      	bcs.n	8008d7a <xTaskIncrementTick+0xaa>
						xNextTaskUnblockTime = xItemValue;
 8008d76:	6029      	str	r1, [r5, #0]
						break; /*lint !e9011 Code structure here is deedmed easier to understand with multiple breaks. */
 8008d78:	e7d5      	b.n	8008d26 <xTaskIncrementTick+0x56>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 8008d7a:	f108 0304 	add.w	r3, r8, #4
 8008d7e:	4618      	mov	r0, r3
 8008d80:	9301      	str	r3, [sp, #4]
 8008d82:	f7fe fee7 	bl	8007b54 <uxListRemove>
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
 8008d86:	f8d8 1028 	ldr.w	r1, [r8, #40]	@ 0x28
 8008d8a:	b119      	cbz	r1, 8008d94 <xTaskIncrementTick+0xc4>
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 8008d8c:	f108 0018 	add.w	r0, r8, #24
 8008d90:	f7fe fee0 	bl	8007b54 <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
 8008d94:	f8d8 002c 	ldr.w	r0, [r8, #44]	@ 0x2c
 8008d98:	f8da 1000 	ldr.w	r1, [sl]
 8008d9c:	2314      	movs	r3, #20
 8008d9e:	4288      	cmp	r0, r1
 8008da0:	bf88      	it	hi
 8008da2:	f8ca 0000 	strhi.w	r0, [sl]
 8008da6:	9901      	ldr	r1, [sp, #4]
 8008da8:	fb03 6000 	mla	r0, r3, r0, r6
 8008dac:	f7fe feb0 	bl	8007b10 <vListInsertEnd>
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 8008db0:	6838      	ldr	r0, [r7, #0]
 8008db2:	f8d8 102c 	ldr.w	r1, [r8, #44]	@ 0x2c
 8008db6:	6ac2      	ldr	r2, [r0, #44]	@ 0x2c
							xSwitchRequired = pdTRUE;
 8008db8:	4291      	cmp	r1, r2
 8008dba:	bf28      	it	cs
 8008dbc:	f04f 0b01 	movcs.w	fp, #1
 8008dc0:	e7c8      	b.n	8008d54 <xTaskIncrementTick+0x84>
		++xPendedTicks;
 8008dc2:	4a0c      	ldr	r2, [pc, #48]	@ (8008df4 <xTaskIncrementTick+0x124>)
 8008dc4:	6813      	ldr	r3, [r2, #0]
 8008dc6:	3301      	adds	r3, #1
 8008dc8:	6013      	str	r3, [r2, #0]
BaseType_t xSwitchRequired = pdFALSE;
 8008dca:	f04f 0b00 	mov.w	fp, #0
 8008dce:	e7b9      	b.n	8008d44 <xTaskIncrementTick+0x74>
 8008dd0:	20013a0c 	.word	0x20013a0c
 8008dd4:	20013a2c 	.word	0x20013a2c
 8008dd8:	20013a78 	.word	0x20013a78
 8008ddc:	20013a74 	.word	0x20013a74
 8008de0:	20013a18 	.word	0x20013a18
 8008de4:	20013a10 	.word	0x20013a10
 8008de8:	20013aa4 	.word	0x20013aa4
 8008dec:	20013f04 	.word	0x20013f04
 8008df0:	20013a1c 	.word	0x20013a1c
 8008df4:	20013a20 	.word	0x20013a20
 8008df8:	20013a28 	.word	0x20013a28

08008dfc <xTaskResumeAll>:
{
 8008dfc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
	configASSERT( uxSchedulerSuspended );
 8008e00:	4c30      	ldr	r4, [pc, #192]	@ (8008ec4 <xTaskResumeAll+0xc8>)
 8008e02:	6823      	ldr	r3, [r4, #0]
 8008e04:	b943      	cbnz	r3, 8008e18 <xTaskResumeAll+0x1c>
 8008e06:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008e0a:	f383 8811 	msr	BASEPRI, r3
 8008e0e:	f3bf 8f6f 	isb	sy
 8008e12:	f3bf 8f4f 	dsb	sy
 8008e16:	e7fe      	b.n	8008e16 <xTaskResumeAll+0x1a>
	taskENTER_CRITICAL();
 8008e18:	f7fe ff14 	bl	8007c44 <vPortEnterCritical>
		--uxSchedulerSuspended;
 8008e1c:	6823      	ldr	r3, [r4, #0]
 8008e1e:	3b01      	subs	r3, #1
 8008e20:	6023      	str	r3, [r4, #0]
		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8008e22:	6824      	ldr	r4, [r4, #0]
 8008e24:	b12c      	cbz	r4, 8008e32 <xTaskResumeAll+0x36>
BaseType_t xAlreadyYielded = pdFALSE;
 8008e26:	2400      	movs	r4, #0
	taskEXIT_CRITICAL();
 8008e28:	f7fe ff2c 	bl	8007c84 <vPortExitCritical>
}
 8008e2c:	4620      	mov	r0, r4
 8008e2e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
 8008e32:	4b25      	ldr	r3, [pc, #148]	@ (8008ec8 <xTaskResumeAll+0xcc>)
 8008e34:	681b      	ldr	r3, [r3, #0]
 8008e36:	2b00      	cmp	r3, #0
 8008e38:	d0f5      	beq.n	8008e26 <xTaskResumeAll+0x2a>
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 8008e3a:	4d24      	ldr	r5, [pc, #144]	@ (8008ecc <xTaskResumeAll+0xd0>)
					prvAddTaskToReadyList( pxTCB );
 8008e3c:	4e24      	ldr	r6, [pc, #144]	@ (8008ed0 <xTaskResumeAll+0xd4>)
 8008e3e:	f8df 80a0 	ldr.w	r8, [pc, #160]	@ 8008ee0 <xTaskResumeAll+0xe4>
 8008e42:	e01d      	b.n	8008e80 <xTaskResumeAll+0x84>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8008e44:	68eb      	ldr	r3, [r5, #12]
 8008e46:	68dc      	ldr	r4, [r3, #12]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 8008e48:	1d27      	adds	r7, r4, #4
					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 8008e4a:	f104 0018 	add.w	r0, r4, #24
 8008e4e:	f7fe fe81 	bl	8007b54 <uxListRemove>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 8008e52:	4638      	mov	r0, r7
 8008e54:	f7fe fe7e 	bl	8007b54 <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
 8008e58:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 8008e5a:	6832      	ldr	r2, [r6, #0]
 8008e5c:	2014      	movs	r0, #20
 8008e5e:	4293      	cmp	r3, r2
 8008e60:	fb00 8003 	mla	r0, r0, r3, r8
 8008e64:	4639      	mov	r1, r7
 8008e66:	bf88      	it	hi
 8008e68:	6033      	strhi	r3, [r6, #0]
 8008e6a:	f7fe fe51 	bl	8007b10 <vListInsertEnd>
					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 8008e6e:	4b19      	ldr	r3, [pc, #100]	@ (8008ed4 <xTaskResumeAll+0xd8>)
 8008e70:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 8008e72:	681b      	ldr	r3, [r3, #0]
 8008e74:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8008e76:	429a      	cmp	r2, r3
 8008e78:	d302      	bcc.n	8008e80 <xTaskResumeAll+0x84>
						xYieldPending = pdTRUE;
 8008e7a:	4b17      	ldr	r3, [pc, #92]	@ (8008ed8 <xTaskResumeAll+0xdc>)
 8008e7c:	2201      	movs	r2, #1
 8008e7e:	601a      	str	r2, [r3, #0]
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 8008e80:	682b      	ldr	r3, [r5, #0]
 8008e82:	2b00      	cmp	r3, #0
 8008e84:	d1de      	bne.n	8008e44 <xTaskResumeAll+0x48>
				if( pxTCB != NULL )
 8008e86:	b10c      	cbz	r4, 8008e8c <xTaskResumeAll+0x90>
					prvResetNextTaskUnblockTime();
 8008e88:	f7ff fdbc 	bl	8008a04 <prvResetNextTaskUnblockTime>
					TickType_t xPendedCounts = xPendedTicks; /* Non-volatile copy. */
 8008e8c:	4d13      	ldr	r5, [pc, #76]	@ (8008edc <xTaskResumeAll+0xe0>)
 8008e8e:	682c      	ldr	r4, [r5, #0]
					if( xPendedCounts > ( TickType_t ) 0U )
 8008e90:	b144      	cbz	r4, 8008ea4 <xTaskResumeAll+0xa8>
								xYieldPending = pdTRUE;
 8008e92:	4e11      	ldr	r6, [pc, #68]	@ (8008ed8 <xTaskResumeAll+0xdc>)
 8008e94:	2701      	movs	r7, #1
							if( xTaskIncrementTick() != pdFALSE )
 8008e96:	f7ff ff1b 	bl	8008cd0 <xTaskIncrementTick>
 8008e9a:	b100      	cbz	r0, 8008e9e <xTaskResumeAll+0xa2>
								xYieldPending = pdTRUE;
 8008e9c:	6037      	str	r7, [r6, #0]
						} while( xPendedCounts > ( TickType_t ) 0U );
 8008e9e:	3c01      	subs	r4, #1
 8008ea0:	d1f9      	bne.n	8008e96 <xTaskResumeAll+0x9a>
						xPendedTicks = 0;
 8008ea2:	602c      	str	r4, [r5, #0]
				if( xYieldPending != pdFALSE )
 8008ea4:	4b0c      	ldr	r3, [pc, #48]	@ (8008ed8 <xTaskResumeAll+0xdc>)
 8008ea6:	681b      	ldr	r3, [r3, #0]
 8008ea8:	2b00      	cmp	r3, #0
 8008eaa:	d0bc      	beq.n	8008e26 <xTaskResumeAll+0x2a>
					taskYIELD_IF_USING_PREEMPTION();
 8008eac:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8008eb0:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8008eb4:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8008eb8:	f3bf 8f4f 	dsb	sy
 8008ebc:	f3bf 8f6f 	isb	sy
						xAlreadyYielded = pdTRUE;
 8008ec0:	2401      	movs	r4, #1
 8008ec2:	e7b1      	b.n	8008e28 <xTaskResumeAll+0x2c>
 8008ec4:	20013a0c 	.word	0x20013a0c
 8008ec8:	20013a30 	.word	0x20013a30
 8008ecc:	20013a60 	.word	0x20013a60
 8008ed0:	20013a28 	.word	0x20013a28
 8008ed4:	20013f04 	.word	0x20013f04
 8008ed8:	20013a1c 	.word	0x20013a1c
 8008edc:	20013a20 	.word	0x20013a20
 8008ee0:	20013aa4 	.word	0x20013aa4

08008ee4 <vTaskDelay>:
	{
 8008ee4:	b508      	push	{r3, lr}
		if( xTicksToDelay > ( TickType_t ) 0U )
 8008ee6:	b950      	cbnz	r0, 8008efe <vTaskDelay+0x1a>
			portYIELD_WITHIN_API();
 8008ee8:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8008eec:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8008ef0:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8008ef4:	f3bf 8f4f 	dsb	sy
 8008ef8:	f3bf 8f6f 	isb	sy
	}
 8008efc:	bd08      	pop	{r3, pc}
			configASSERT( uxSchedulerSuspended == 0 );
 8008efe:	4b0a      	ldr	r3, [pc, #40]	@ (8008f28 <vTaskDelay+0x44>)
 8008f00:	6819      	ldr	r1, [r3, #0]
 8008f02:	b141      	cbz	r1, 8008f16 <vTaskDelay+0x32>
 8008f04:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008f08:	f383 8811 	msr	BASEPRI, r3
 8008f0c:	f3bf 8f6f 	isb	sy
 8008f10:	f3bf 8f4f 	dsb	sy
 8008f14:	e7fe      	b.n	8008f14 <vTaskDelay+0x30>
			vTaskSuspendAll();
 8008f16:	f7ff fecd 	bl	8008cb4 <vTaskSuspendAll>
				prvAddCurrentTaskToDelayedList( xTicksToDelay, pdFALSE );
 8008f1a:	f7ff fd3b 	bl	8008994 <prvAddCurrentTaskToDelayedList>
			xAlreadyYielded = xTaskResumeAll();
 8008f1e:	f7ff ff6d 	bl	8008dfc <xTaskResumeAll>
		if( xAlreadyYielded == pdFALSE )
 8008f22:	2800      	cmp	r0, #0
 8008f24:	d0e0      	beq.n	8008ee8 <vTaskDelay+0x4>
 8008f26:	e7e9      	b.n	8008efc <vTaskDelay+0x18>
 8008f28:	20013a0c 	.word	0x20013a0c

08008f2c <vTaskSwitchContext>:
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 8008f2c:	4b17      	ldr	r3, [pc, #92]	@ (8008f8c <vTaskSwitchContext+0x60>)
 8008f2e:	681a      	ldr	r2, [r3, #0]
 8008f30:	4b17      	ldr	r3, [pc, #92]	@ (8008f90 <vTaskSwitchContext+0x64>)
{
 8008f32:	b570      	push	{r4, r5, r6, lr}
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 8008f34:	b112      	cbz	r2, 8008f3c <vTaskSwitchContext+0x10>
		xYieldPending = pdTRUE;
 8008f36:	2201      	movs	r2, #1
 8008f38:	601a      	str	r2, [r3, #0]
}
 8008f3a:	bd70      	pop	{r4, r5, r6, pc}
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8008f3c:	4d15      	ldr	r5, [pc, #84]	@ (8008f94 <vTaskSwitchContext+0x68>)
		xYieldPending = pdFALSE;
 8008f3e:	601a      	str	r2, [r3, #0]
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8008f40:	682a      	ldr	r2, [r5, #0]
 8008f42:	4915      	ldr	r1, [pc, #84]	@ (8008f98 <vTaskSwitchContext+0x6c>)
 8008f44:	2614      	movs	r6, #20
 8008f46:	fb06 f302 	mul.w	r3, r6, r2
 8008f4a:	18c8      	adds	r0, r1, r3
 8008f4c:	58cc      	ldr	r4, [r1, r3]
 8008f4e:	b18c      	cbz	r4, 8008f74 <vTaskSwitchContext+0x48>
 8008f50:	6844      	ldr	r4, [r0, #4]
 8008f52:	3308      	adds	r3, #8
 8008f54:	6864      	ldr	r4, [r4, #4]
 8008f56:	6044      	str	r4, [r0, #4]
 8008f58:	440b      	add	r3, r1
 8008f5a:	429c      	cmp	r4, r3
 8008f5c:	bf04      	itt	eq
 8008f5e:	6863      	ldreq	r3, [r4, #4]
 8008f60:	6043      	streq	r3, [r0, #4]
 8008f62:	2314      	movs	r3, #20
 8008f64:	fb03 1102 	mla	r1, r3, r2, r1
 8008f68:	684b      	ldr	r3, [r1, #4]
 8008f6a:	68d9      	ldr	r1, [r3, #12]
 8008f6c:	4b0b      	ldr	r3, [pc, #44]	@ (8008f9c <vTaskSwitchContext+0x70>)
 8008f6e:	6019      	str	r1, [r3, #0]
 8008f70:	602a      	str	r2, [r5, #0]
}
 8008f72:	e7e2      	b.n	8008f3a <vTaskSwitchContext+0xe>
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8008f74:	b942      	cbnz	r2, 8008f88 <vTaskSwitchContext+0x5c>
 8008f76:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008f7a:	f383 8811 	msr	BASEPRI, r3
 8008f7e:	f3bf 8f6f 	isb	sy
 8008f82:	f3bf 8f4f 	dsb	sy
 8008f86:	e7fe      	b.n	8008f86 <vTaskSwitchContext+0x5a>
 8008f88:	3a01      	subs	r2, #1
 8008f8a:	e7dc      	b.n	8008f46 <vTaskSwitchContext+0x1a>
 8008f8c:	20013a0c 	.word	0x20013a0c
 8008f90:	20013a1c 	.word	0x20013a1c
 8008f94:	20013a28 	.word	0x20013a28
 8008f98:	20013aa4 	.word	0x20013aa4
 8008f9c:	20013f04 	.word	0x20013f04

08008fa0 <vTaskPlaceOnEventList>:
{
 8008fa0:	b510      	push	{r4, lr}
 8008fa2:	460c      	mov	r4, r1
	configASSERT( pxEventList );
 8008fa4:	b940      	cbnz	r0, 8008fb8 <vTaskPlaceOnEventList+0x18>
 8008fa6:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008faa:	f383 8811 	msr	BASEPRI, r3
 8008fae:	f3bf 8f6f 	isb	sy
 8008fb2:	f3bf 8f4f 	dsb	sy
 8008fb6:	e7fe      	b.n	8008fb6 <vTaskPlaceOnEventList+0x16>
	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 8008fb8:	4b05      	ldr	r3, [pc, #20]	@ (8008fd0 <vTaskPlaceOnEventList+0x30>)
 8008fba:	6819      	ldr	r1, [r3, #0]
 8008fbc:	3118      	adds	r1, #24
 8008fbe:	f7fe fdb2 	bl	8007b26 <vListInsert>
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 8008fc2:	4620      	mov	r0, r4
 8008fc4:	2101      	movs	r1, #1
}
 8008fc6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 8008fca:	f7ff bce3 	b.w	8008994 <prvAddCurrentTaskToDelayedList>
 8008fce:	bf00      	nop
 8008fd0:	20013f04 	.word	0x20013f04

08008fd4 <vTaskPlaceOnEventListRestricted>:
	{
 8008fd4:	b538      	push	{r3, r4, r5, lr}
 8008fd6:	460d      	mov	r5, r1
 8008fd8:	4614      	mov	r4, r2
		configASSERT( pxEventList );
 8008fda:	b940      	cbnz	r0, 8008fee <vTaskPlaceOnEventListRestricted+0x1a>
 8008fdc:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008fe0:	f383 8811 	msr	BASEPRI, r3
 8008fe4:	f3bf 8f6f 	isb	sy
 8008fe8:	f3bf 8f4f 	dsb	sy
 8008fec:	e7fe      	b.n	8008fec <vTaskPlaceOnEventListRestricted+0x18>
		vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 8008fee:	4b07      	ldr	r3, [pc, #28]	@ (800900c <vTaskPlaceOnEventListRestricted+0x38>)
 8008ff0:	6819      	ldr	r1, [r3, #0]
 8008ff2:	3118      	adds	r1, #24
 8008ff4:	f7fe fd8c 	bl	8007b10 <vListInsertEnd>
			xTicksToWait = portMAX_DELAY;
 8008ff8:	2c00      	cmp	r4, #0
		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
 8008ffa:	4621      	mov	r1, r4
 8008ffc:	bf0c      	ite	eq
 8008ffe:	4628      	moveq	r0, r5
 8009000:	f04f 30ff 	movne.w	r0, #4294967295
	}
 8009004:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
 8009008:	f7ff bcc4 	b.w	8008994 <prvAddCurrentTaskToDelayedList>
 800900c:	20013f04 	.word	0x20013f04

08009010 <xTaskRemoveFromEventList>:
{
 8009010:	b538      	push	{r3, r4, r5, lr}
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009012:	68c3      	ldr	r3, [r0, #12]
 8009014:	68dc      	ldr	r4, [r3, #12]
	configASSERT( pxUnblockedTCB );
 8009016:	b944      	cbnz	r4, 800902a <xTaskRemoveFromEventList+0x1a>
 8009018:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800901c:	f383 8811 	msr	BASEPRI, r3
 8009020:	f3bf 8f6f 	isb	sy
 8009024:	f3bf 8f4f 	dsb	sy
 8009028:	e7fe      	b.n	8009028 <xTaskRemoveFromEventList+0x18>
	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 800902a:	f104 0518 	add.w	r5, r4, #24
 800902e:	4628      	mov	r0, r5
 8009030:	f7fe fd90 	bl	8007b54 <uxListRemove>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8009034:	4b10      	ldr	r3, [pc, #64]	@ (8009078 <xTaskRemoveFromEventList+0x68>)
 8009036:	681b      	ldr	r3, [r3, #0]
 8009038:	b9db      	cbnz	r3, 8009072 <xTaskRemoveFromEventList+0x62>
		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
 800903a:	1d25      	adds	r5, r4, #4
 800903c:	4628      	mov	r0, r5
 800903e:	f7fe fd89 	bl	8007b54 <uxListRemove>
		prvAddTaskToReadyList( pxUnblockedTCB );
 8009042:	4a0e      	ldr	r2, [pc, #56]	@ (800907c <xTaskRemoveFromEventList+0x6c>)
 8009044:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 8009046:	6811      	ldr	r1, [r2, #0]
 8009048:	428b      	cmp	r3, r1
 800904a:	bf88      	it	hi
 800904c:	6013      	strhi	r3, [r2, #0]
 800904e:	4a0c      	ldr	r2, [pc, #48]	@ (8009080 <xTaskRemoveFromEventList+0x70>)
 8009050:	2014      	movs	r0, #20
 8009052:	4629      	mov	r1, r5
 8009054:	fb00 2003 	mla	r0, r0, r3, r2
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 8009058:	f7fe fd5a 	bl	8007b10 <vListInsertEnd>
	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
 800905c:	4b09      	ldr	r3, [pc, #36]	@ (8009084 <xTaskRemoveFromEventList+0x74>)
 800905e:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 8009060:	681b      	ldr	r3, [r3, #0]
 8009062:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8009064:	429a      	cmp	r2, r3
		xYieldPending = pdTRUE;
 8009066:	bf83      	ittte	hi
 8009068:	4b07      	ldrhi	r3, [pc, #28]	@ (8009088 <xTaskRemoveFromEventList+0x78>)
 800906a:	2001      	movhi	r0, #1
 800906c:	6018      	strhi	r0, [r3, #0]
		xReturn = pdFALSE;
 800906e:	2000      	movls	r0, #0
}
 8009070:	bd38      	pop	{r3, r4, r5, pc}
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 8009072:	4806      	ldr	r0, [pc, #24]	@ (800908c <xTaskRemoveFromEventList+0x7c>)
 8009074:	4629      	mov	r1, r5
 8009076:	e7ef      	b.n	8009058 <xTaskRemoveFromEventList+0x48>
 8009078:	20013a0c 	.word	0x20013a0c
 800907c:	20013a28 	.word	0x20013a28
 8009080:	20013aa4 	.word	0x20013aa4
 8009084:	20013f04 	.word	0x20013f04
 8009088:	20013a1c 	.word	0x20013a1c
 800908c:	20013a60 	.word	0x20013a60

08009090 <vTaskInternalSetTimeOutState>:
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 8009090:	4b03      	ldr	r3, [pc, #12]	@ (80090a0 <vTaskInternalSetTimeOutState+0x10>)
 8009092:	681b      	ldr	r3, [r3, #0]
 8009094:	6003      	str	r3, [r0, #0]
	pxTimeOut->xTimeOnEntering = xTickCount;
 8009096:	4b03      	ldr	r3, [pc, #12]	@ (80090a4 <vTaskInternalSetTimeOutState+0x14>)
 8009098:	681b      	ldr	r3, [r3, #0]
 800909a:	6043      	str	r3, [r0, #4]
}
 800909c:	4770      	bx	lr
 800909e:	bf00      	nop
 80090a0:	20013a18 	.word	0x20013a18
 80090a4:	20013a2c 	.word	0x20013a2c

080090a8 <xTaskCheckForTimeOut>:
{
 80090a8:	b570      	push	{r4, r5, r6, lr}
 80090aa:	460c      	mov	r4, r1
	configASSERT( pxTimeOut );
 80090ac:	4605      	mov	r5, r0
 80090ae:	b940      	cbnz	r0, 80090c2 <xTaskCheckForTimeOut+0x1a>
 80090b0:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80090b4:	f383 8811 	msr	BASEPRI, r3
 80090b8:	f3bf 8f6f 	isb	sy
 80090bc:	f3bf 8f4f 	dsb	sy
 80090c0:	e7fe      	b.n	80090c0 <xTaskCheckForTimeOut+0x18>
	configASSERT( pxTicksToWait );
 80090c2:	b941      	cbnz	r1, 80090d6 <xTaskCheckForTimeOut+0x2e>
 80090c4:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80090c8:	f383 8811 	msr	BASEPRI, r3
 80090cc:	f3bf 8f6f 	isb	sy
 80090d0:	f3bf 8f4f 	dsb	sy
 80090d4:	e7fe      	b.n	80090d4 <xTaskCheckForTimeOut+0x2c>
	taskENTER_CRITICAL();
 80090d6:	f7fe fdb5 	bl	8007c44 <vPortEnterCritical>
		const TickType_t xConstTickCount = xTickCount;
 80090da:	4b0f      	ldr	r3, [pc, #60]	@ (8009118 <xTaskCheckForTimeOut+0x70>)
 80090dc:	6819      	ldr	r1, [r3, #0]
			if( *pxTicksToWait == portMAX_DELAY )
 80090de:	6823      	ldr	r3, [r4, #0]
 80090e0:	1c5a      	adds	r2, r3, #1
 80090e2:	d010      	beq.n	8009106 <xTaskCheckForTimeOut+0x5e>
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 80090e4:	480d      	ldr	r0, [pc, #52]	@ (800911c <xTaskCheckForTimeOut+0x74>)
 80090e6:	682e      	ldr	r6, [r5, #0]
 80090e8:	6800      	ldr	r0, [r0, #0]
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 80090ea:	686a      	ldr	r2, [r5, #4]
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 80090ec:	4286      	cmp	r6, r0
 80090ee:	d001      	beq.n	80090f4 <xTaskCheckForTimeOut+0x4c>
 80090f0:	428a      	cmp	r2, r1
 80090f2:	d90f      	bls.n	8009114 <xTaskCheckForTimeOut+0x6c>
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 80090f4:	1a88      	subs	r0, r1, r2
		else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with some compilers, whereas others require it to prevent integer conversion errors. */
 80090f6:	4283      	cmp	r3, r0
 80090f8:	d90a      	bls.n	8009110 <xTaskCheckForTimeOut+0x68>
			*pxTicksToWait -= xElapsedTime;
 80090fa:	1a5b      	subs	r3, r3, r1
 80090fc:	4413      	add	r3, r2
 80090fe:	6023      	str	r3, [r4, #0]
			vTaskInternalSetTimeOutState( pxTimeOut );
 8009100:	4628      	mov	r0, r5
 8009102:	f7ff ffc5 	bl	8009090 <vTaskInternalSetTimeOutState>
				xReturn = pdFALSE;
 8009106:	2400      	movs	r4, #0
	taskEXIT_CRITICAL();
 8009108:	f7fe fdbc 	bl	8007c84 <vPortExitCritical>
}
 800910c:	4620      	mov	r0, r4
 800910e:	bd70      	pop	{r4, r5, r6, pc}
			*pxTicksToWait = 0;
 8009110:	2300      	movs	r3, #0
 8009112:	6023      	str	r3, [r4, #0]
			xReturn = pdTRUE;
 8009114:	2401      	movs	r4, #1
 8009116:	e7f7      	b.n	8009108 <xTaskCheckForTimeOut+0x60>
 8009118:	20013a2c 	.word	0x20013a2c
 800911c:	20013a18 	.word	0x20013a18

08009120 <vTaskMissedYield>:
	xYieldPending = pdTRUE;
 8009120:	4b01      	ldr	r3, [pc, #4]	@ (8009128 <vTaskMissedYield+0x8>)
 8009122:	2201      	movs	r2, #1
 8009124:	601a      	str	r2, [r3, #0]
}
 8009126:	4770      	bx	lr
 8009128:	20013a1c 	.word	0x20013a1c

0800912c <xTaskGetSchedulerState>:
		if( xSchedulerRunning == pdFALSE )
 800912c:	4b05      	ldr	r3, [pc, #20]	@ (8009144 <xTaskGetSchedulerState+0x18>)
 800912e:	681b      	ldr	r3, [r3, #0]
 8009130:	b133      	cbz	r3, 8009140 <xTaskGetSchedulerState+0x14>
			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8009132:	4b05      	ldr	r3, [pc, #20]	@ (8009148 <xTaskGetSchedulerState+0x1c>)
 8009134:	6818      	ldr	r0, [r3, #0]
 8009136:	fab0 f080 	clz	r0, r0
 800913a:	0940      	lsrs	r0, r0, #5
 800913c:	0040      	lsls	r0, r0, #1
 800913e:	4770      	bx	lr
			xReturn = taskSCHEDULER_NOT_STARTED;
 8009140:	2001      	movs	r0, #1
	}
 8009142:	4770      	bx	lr
 8009144:	20013a24 	.word	0x20013a24
 8009148:	20013a0c 	.word	0x20013a0c

0800914c <xTaskPriorityInherit>:
	{
 800914c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		if( pxMutexHolder != NULL )
 800914e:	4604      	mov	r4, r0
 8009150:	b338      	cbz	r0, 80091a2 <xTaskPriorityInherit+0x56>
			if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->uxPriority )
 8009152:	4d1a      	ldr	r5, [pc, #104]	@ (80091bc <xTaskPriorityInherit+0x70>)
 8009154:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 8009156:	682a      	ldr	r2, [r5, #0]
 8009158:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
 800915a:	4293      	cmp	r3, r2
 800915c:	d226      	bcs.n	80091ac <xTaskPriorityInherit+0x60>
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800915e:	6982      	ldr	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 8009160:	4e17      	ldr	r6, [pc, #92]	@ (80091c0 <xTaskPriorityInherit+0x74>)
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 8009162:	2a00      	cmp	r2, #0
					listSET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxCurrentTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8009164:	bfa1      	itttt	ge
 8009166:	682a      	ldrge	r2, [r5, #0]
 8009168:	6ad2      	ldrge	r2, [r2, #44]	@ 0x2c
 800916a:	f1c2 0238 	rsbge	r2, r2, #56	@ 0x38
 800916e:	6182      	strge	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 8009170:	2214      	movs	r2, #20
 8009172:	fb02 6303 	mla	r3, r2, r3, r6
 8009176:	6942      	ldr	r2, [r0, #20]
 8009178:	429a      	cmp	r2, r3
 800917a:	d113      	bne.n	80091a4 <xTaskPriorityInherit+0x58>
					if( uxListRemove( &( pxMutexHolderTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800917c:	1d07      	adds	r7, r0, #4
 800917e:	4638      	mov	r0, r7
 8009180:	f7fe fce8 	bl	8007b54 <uxListRemove>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 8009184:	682b      	ldr	r3, [r5, #0]
					prvAddTaskToReadyList( pxMutexHolderTCB );
 8009186:	4a0f      	ldr	r2, [pc, #60]	@ (80091c4 <xTaskPriorityInherit+0x78>)
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 8009188:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800918a:	6811      	ldr	r1, [r2, #0]
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800918c:	62e3      	str	r3, [r4, #44]	@ 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800918e:	2014      	movs	r0, #20
 8009190:	428b      	cmp	r3, r1
 8009192:	fb00 6003 	mla	r0, r0, r3, r6
 8009196:	4639      	mov	r1, r7
 8009198:	bf88      	it	hi
 800919a:	6013      	strhi	r3, [r2, #0]
 800919c:	f7fe fcb8 	bl	8007b10 <vListInsertEnd>
				xReturn = pdTRUE;
 80091a0:	2001      	movs	r0, #1
	}
 80091a2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 80091a4:	682b      	ldr	r3, [r5, #0]
 80091a6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80091a8:	62c3      	str	r3, [r0, #44]	@ 0x2c
 80091aa:	e7f9      	b.n	80091a0 <xTaskPriorityInherit+0x54>
				if( pxMutexHolderTCB->uxBasePriority < pxCurrentTCB->uxPriority )
 80091ac:	682b      	ldr	r3, [r5, #0]
 80091ae:	6cc0      	ldr	r0, [r0, #76]	@ 0x4c
 80091b0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80091b2:	4298      	cmp	r0, r3
 80091b4:	bf2c      	ite	cs
 80091b6:	2000      	movcs	r0, #0
 80091b8:	2001      	movcc	r0, #1
 80091ba:	e7f2      	b.n	80091a2 <xTaskPriorityInherit+0x56>
 80091bc:	20013f04 	.word	0x20013f04
 80091c0:	20013aa4 	.word	0x20013aa4
 80091c4:	20013a28 	.word	0x20013a28

080091c8 <xTaskPriorityDisinherit>:
	{
 80091c8:	b538      	push	{r3, r4, r5, lr}
		if( pxMutexHolder != NULL )
 80091ca:	b908      	cbnz	r0, 80091d0 <xTaskPriorityDisinherit+0x8>
	BaseType_t xReturn = pdFALSE;
 80091cc:	2000      	movs	r0, #0
	}
 80091ce:	bd38      	pop	{r3, r4, r5, pc}
			configASSERT( pxTCB == pxCurrentTCB );
 80091d0:	4b1b      	ldr	r3, [pc, #108]	@ (8009240 <xTaskPriorityDisinherit+0x78>)
 80091d2:	681c      	ldr	r4, [r3, #0]
 80091d4:	4284      	cmp	r4, r0
 80091d6:	d008      	beq.n	80091ea <xTaskPriorityDisinherit+0x22>
 80091d8:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80091dc:	f383 8811 	msr	BASEPRI, r3
 80091e0:	f3bf 8f6f 	isb	sy
 80091e4:	f3bf 8f4f 	dsb	sy
 80091e8:	e7fe      	b.n	80091e8 <xTaskPriorityDisinherit+0x20>
			configASSERT( pxTCB->uxMutexesHeld );
 80091ea:	6d23      	ldr	r3, [r4, #80]	@ 0x50
 80091ec:	b943      	cbnz	r3, 8009200 <xTaskPriorityDisinherit+0x38>
 80091ee:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80091f2:	f383 8811 	msr	BASEPRI, r3
 80091f6:	f3bf 8f6f 	isb	sy
 80091fa:	f3bf 8f4f 	dsb	sy
 80091fe:	e7fe      	b.n	80091fe <xTaskPriorityDisinherit+0x36>
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 8009200:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
 8009202:	6ce2      	ldr	r2, [r4, #76]	@ 0x4c
			( pxTCB->uxMutexesHeld )--;
 8009204:	3b01      	subs	r3, #1
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 8009206:	4291      	cmp	r1, r2
			( pxTCB->uxMutexesHeld )--;
 8009208:	6523      	str	r3, [r4, #80]	@ 0x50
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800920a:	d0df      	beq.n	80091cc <xTaskPriorityDisinherit+0x4>
				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
 800920c:	2b00      	cmp	r3, #0
 800920e:	d1dd      	bne.n	80091cc <xTaskPriorityDisinherit+0x4>
					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8009210:	1d25      	adds	r5, r4, #4
 8009212:	4628      	mov	r0, r5
 8009214:	f7fe fc9e 	bl	8007b54 <uxListRemove>
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 8009218:	6ce3      	ldr	r3, [r4, #76]	@ 0x4c
 800921a:	62e3      	str	r3, [r4, #44]	@ 0x2c
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800921c:	f1c3 0238 	rsb	r2, r3, #56	@ 0x38
 8009220:	61a2      	str	r2, [r4, #24]
					prvAddTaskToReadyList( pxTCB );
 8009222:	4a08      	ldr	r2, [pc, #32]	@ (8009244 <xTaskPriorityDisinherit+0x7c>)
 8009224:	6811      	ldr	r1, [r2, #0]
 8009226:	428b      	cmp	r3, r1
 8009228:	bf88      	it	hi
 800922a:	6013      	strhi	r3, [r2, #0]
 800922c:	4a06      	ldr	r2, [pc, #24]	@ (8009248 <xTaskPriorityDisinherit+0x80>)
 800922e:	2014      	movs	r0, #20
 8009230:	fb00 2003 	mla	r0, r0, r3, r2
 8009234:	4629      	mov	r1, r5
 8009236:	f7fe fc6b 	bl	8007b10 <vListInsertEnd>
					xReturn = pdTRUE;
 800923a:	2001      	movs	r0, #1
		return xReturn;
 800923c:	e7c7      	b.n	80091ce <xTaskPriorityDisinherit+0x6>
 800923e:	bf00      	nop
 8009240:	20013f04 	.word	0x20013f04
 8009244:	20013a28 	.word	0x20013a28
 8009248:	20013aa4 	.word	0x20013aa4

0800924c <vTaskPriorityDisinheritAfterTimeout>:
	{
 800924c:	b570      	push	{r4, r5, r6, lr}
		if( pxMutexHolder != NULL )
 800924e:	4604      	mov	r4, r0
 8009250:	2800      	cmp	r0, #0
 8009252:	d041      	beq.n	80092d8 <vTaskPriorityDisinheritAfterTimeout+0x8c>
			configASSERT( pxTCB->uxMutexesHeld );
 8009254:	6d02      	ldr	r2, [r0, #80]	@ 0x50
 8009256:	b942      	cbnz	r2, 800926a <vTaskPriorityDisinheritAfterTimeout+0x1e>
 8009258:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800925c:	f383 8811 	msr	BASEPRI, r3
 8009260:	f3bf 8f6f 	isb	sy
 8009264:	f3bf 8f4f 	dsb	sy
 8009268:	e7fe      	b.n	8009268 <vTaskPriorityDisinheritAfterTimeout+0x1c>
			if( pxTCB->uxBasePriority < uxHighestPriorityWaitingTask )
 800926a:	6cc3      	ldr	r3, [r0, #76]	@ 0x4c
 800926c:	4299      	cmp	r1, r3
 800926e:	bf38      	it	cc
 8009270:	4619      	movcc	r1, r3
			if( pxTCB->uxPriority != uxPriorityToUse )
 8009272:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 8009274:	428b      	cmp	r3, r1
 8009276:	d02f      	beq.n	80092d8 <vTaskPriorityDisinheritAfterTimeout+0x8c>
				if( pxTCB->uxMutexesHeld == uxOnlyOneMutexHeld )
 8009278:	2a01      	cmp	r2, #1
 800927a:	d12d      	bne.n	80092d8 <vTaskPriorityDisinheritAfterTimeout+0x8c>
					configASSERT( pxTCB != pxCurrentTCB );
 800927c:	4a17      	ldr	r2, [pc, #92]	@ (80092dc <vTaskPriorityDisinheritAfterTimeout+0x90>)
 800927e:	6812      	ldr	r2, [r2, #0]
 8009280:	4282      	cmp	r2, r0
 8009282:	d108      	bne.n	8009296 <vTaskPriorityDisinheritAfterTimeout+0x4a>
 8009284:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009288:	f383 8811 	msr	BASEPRI, r3
 800928c:	f3bf 8f6f 	isb	sy
 8009290:	f3bf 8f4f 	dsb	sy
 8009294:	e7fe      	b.n	8009294 <vTaskPriorityDisinheritAfterTimeout+0x48>
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 8009296:	6982      	ldr	r2, [r0, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 8009298:	4d11      	ldr	r5, [pc, #68]	@ (80092e0 <vTaskPriorityDisinheritAfterTimeout+0x94>)
					pxTCB->uxPriority = uxPriorityToUse;
 800929a:	62c1      	str	r1, [r0, #44]	@ 0x2c
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800929c:	2a00      	cmp	r2, #0
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800929e:	f04f 0214 	mov.w	r2, #20
 80092a2:	fb02 5303 	mla	r3, r2, r3, r5
 80092a6:	6942      	ldr	r2, [r0, #20]
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 80092a8:	bfa4      	itt	ge
 80092aa:	f1c1 0138 	rsbge	r1, r1, #56	@ 0x38
 80092ae:	6181      	strge	r1, [r0, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 80092b0:	429a      	cmp	r2, r3
 80092b2:	d111      	bne.n	80092d8 <vTaskPriorityDisinheritAfterTimeout+0x8c>
						if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 80092b4:	1d06      	adds	r6, r0, #4
 80092b6:	4630      	mov	r0, r6
 80092b8:	f7fe fc4c 	bl	8007b54 <uxListRemove>
						prvAddTaskToReadyList( pxTCB );
 80092bc:	4a09      	ldr	r2, [pc, #36]	@ (80092e4 <vTaskPriorityDisinheritAfterTimeout+0x98>)
 80092be:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 80092c0:	6811      	ldr	r1, [r2, #0]
 80092c2:	2014      	movs	r0, #20
 80092c4:	428b      	cmp	r3, r1
 80092c6:	fb00 5003 	mla	r0, r0, r3, r5
 80092ca:	4631      	mov	r1, r6
	}
 80092cc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
						prvAddTaskToReadyList( pxTCB );
 80092d0:	bf88      	it	hi
 80092d2:	6013      	strhi	r3, [r2, #0]
 80092d4:	f7fe bc1c 	b.w	8007b10 <vListInsertEnd>
	}
 80092d8:	bd70      	pop	{r4, r5, r6, pc}
 80092da:	bf00      	nop
 80092dc:	20013f04 	.word	0x20013f04
 80092e0:	20013aa4 	.word	0x20013aa4
 80092e4:	20013a28 	.word	0x20013a28

080092e8 <pvTaskIncrementMutexHeldCount>:
		if( pxCurrentTCB != NULL )
 80092e8:	4b04      	ldr	r3, [pc, #16]	@ (80092fc <pvTaskIncrementMutexHeldCount+0x14>)
 80092ea:	681a      	ldr	r2, [r3, #0]
 80092ec:	b11a      	cbz	r2, 80092f6 <pvTaskIncrementMutexHeldCount+0xe>
			( pxCurrentTCB->uxMutexesHeld )++;
 80092ee:	6819      	ldr	r1, [r3, #0]
 80092f0:	6d0a      	ldr	r2, [r1, #80]	@ 0x50
 80092f2:	3201      	adds	r2, #1
 80092f4:	650a      	str	r2, [r1, #80]	@ 0x50
		return pxCurrentTCB;
 80092f6:	6818      	ldr	r0, [r3, #0]
	}
 80092f8:	4770      	bx	lr
 80092fa:	bf00      	nop
 80092fc:	20013f04 	.word	0x20013f04

08009300 <prvInsertTimerInActiveList>:
BaseType_t xProcessTimerNow = pdFALSE;

	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );

	if( xNextExpiryTime <= xTimeNow )
 8009300:	4291      	cmp	r1, r2
{
 8009302:	b508      	push	{r3, lr}
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 8009304:	6041      	str	r1, [r0, #4]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 8009306:	6100      	str	r0, [r0, #16]
	if( xNextExpiryTime <= xTimeNow )
 8009308:	d80a      	bhi.n	8009320 <prvInsertTimerInActiveList+0x20>
	{
		/* Has the expiry time elapsed between the command to start/reset a
		timer was issued, and the time the command was processed? */
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800930a:	1ad2      	subs	r2, r2, r3
 800930c:	6983      	ldr	r3, [r0, #24]
 800930e:	429a      	cmp	r2, r3
 8009310:	d20d      	bcs.n	800932e <prvInsertTimerInActiveList+0x2e>
			processed actually exceeds the timers period.  */
			xProcessTimerNow = pdTRUE;
		}
		else
		{
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
 8009312:	4b08      	ldr	r3, [pc, #32]	@ (8009334 <prvInsertTimerInActiveList+0x34>)
 8009314:	1d01      	adds	r1, r0, #4
			its expiry time and should be processed immediately. */
			xProcessTimerNow = pdTRUE;
		}
		else
		{
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 8009316:	6818      	ldr	r0, [r3, #0]
 8009318:	f7fe fc05 	bl	8007b26 <vListInsert>
BaseType_t xProcessTimerNow = pdFALSE;
 800931c:	2000      	movs	r0, #0
		}
	}

	return xProcessTimerNow;
}
 800931e:	bd08      	pop	{r3, pc}
		if( ( xTimeNow < xCommandTime ) && ( xNextExpiryTime >= xCommandTime ) )
 8009320:	429a      	cmp	r2, r3
 8009322:	d201      	bcs.n	8009328 <prvInsertTimerInActiveList+0x28>
 8009324:	4299      	cmp	r1, r3
 8009326:	d202      	bcs.n	800932e <prvInsertTimerInActiveList+0x2e>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 8009328:	4b03      	ldr	r3, [pc, #12]	@ (8009338 <prvInsertTimerInActiveList+0x38>)
 800932a:	1d01      	adds	r1, r0, #4
 800932c:	e7f3      	b.n	8009316 <prvInsertTimerInActiveList+0x16>
			xProcessTimerNow = pdTRUE;
 800932e:	2001      	movs	r0, #1
	return xProcessTimerNow;
 8009330:	e7f5      	b.n	800931e <prvInsertTimerInActiveList+0x1e>
 8009332:	bf00      	nop
 8009334:	20014004 	.word	0x20014004
 8009338:	20014008 	.word	0x20014008

0800933c <prvCheckForValidListAndQueue>:
	pxOverflowTimerList = pxTemp;
}
/*-----------------------------------------------------------*/

static void prvCheckForValidListAndQueue( void )
{
 800933c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
	/* Check that the list from which active timers are referenced, and the
	queue used to communicate with the timer service, have been
	initialised. */
	taskENTER_CRITICAL();
	{
		if( xTimerQueue == NULL )
 800933e:	4c11      	ldr	r4, [pc, #68]	@ (8009384 <prvCheckForValidListAndQueue+0x48>)
	taskENTER_CRITICAL();
 8009340:	f7fe fc80 	bl	8007c44 <vPortEnterCritical>
		if( xTimerQueue == NULL )
 8009344:	6825      	ldr	r5, [r4, #0]
 8009346:	b9bd      	cbnz	r5, 8009378 <prvCheckForValidListAndQueue+0x3c>
		{
			vListInitialise( &xActiveTimerList1 );
 8009348:	4f0f      	ldr	r7, [pc, #60]	@ (8009388 <prvCheckForValidListAndQueue+0x4c>)
			vListInitialise( &xActiveTimerList2 );
 800934a:	4e10      	ldr	r6, [pc, #64]	@ (800938c <prvCheckForValidListAndQueue+0x50>)
			vListInitialise( &xActiveTimerList1 );
 800934c:	4638      	mov	r0, r7
 800934e:	f7fe fbd1 	bl	8007af4 <vListInitialise>
			vListInitialise( &xActiveTimerList2 );
 8009352:	4630      	mov	r0, r6
 8009354:	f7fe fbce 	bl	8007af4 <vListInitialise>
			pxCurrentTimerList = &xActiveTimerList1;
 8009358:	4b0d      	ldr	r3, [pc, #52]	@ (8009390 <prvCheckForValidListAndQueue+0x54>)
				/* The timer queue is allocated statically in case
				configSUPPORT_DYNAMIC_ALLOCATION is 0. */
				static StaticQueue_t xStaticTimerQueue; /*lint !e956 Ok to declare in this manner to prevent additional conditional compilation guards in other locations. */
				static uint8_t ucStaticTimerQueueStorage[ ( size_t ) configTIMER_QUEUE_LENGTH * sizeof( DaemonTaskMessage_t ) ]; /*lint !e956 Ok to declare in this manner to prevent additional conditional compilation guards in other locations. */

				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800935a:	4a0e      	ldr	r2, [pc, #56]	@ (8009394 <prvCheckForValidListAndQueue+0x58>)
			pxCurrentTimerList = &xActiveTimerList1;
 800935c:	601f      	str	r7, [r3, #0]
			pxOverflowTimerList = &xActiveTimerList2;
 800935e:	4b0e      	ldr	r3, [pc, #56]	@ (8009398 <prvCheckForValidListAndQueue+0x5c>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 8009360:	2110      	movs	r1, #16
			pxOverflowTimerList = &xActiveTimerList2;
 8009362:	601e      	str	r6, [r3, #0]
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 8009364:	200a      	movs	r0, #10
 8009366:	4b0d      	ldr	r3, [pc, #52]	@ (800939c <prvCheckForValidListAndQueue+0x60>)
 8009368:	9500      	str	r5, [sp, #0]
 800936a:	f7fe fe74 	bl	8008056 <xQueueGenericCreateStatic>
 800936e:	6020      	str	r0, [r4, #0]
			}
			#endif

			#if ( configQUEUE_REGISTRY_SIZE > 0 )
			{
				if( xTimerQueue != NULL )
 8009370:	b110      	cbz	r0, 8009378 <prvCheckForValidListAndQueue+0x3c>
				{
					vQueueAddToRegistry( xTimerQueue, "TmrQ" );
 8009372:	490b      	ldr	r1, [pc, #44]	@ (80093a0 <prvCheckForValidListAndQueue+0x64>)
 8009374:	f7ff fa2c 	bl	80087d0 <vQueueAddToRegistry>
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}
	taskEXIT_CRITICAL();
}
 8009378:	b003      	add	sp, #12
 800937a:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
	taskEXIT_CRITICAL();
 800937e:	f7fe bc81 	b.w	8007c84 <vPortExitCritical>
 8009382:	bf00      	nop
 8009384:	20014000 	.word	0x20014000
 8009388:	20014020 	.word	0x20014020
 800938c:	2001400c 	.word	0x2001400c
 8009390:	20014008 	.word	0x20014008
 8009394:	20013f58 	.word	0x20013f58
 8009398:	20014004 	.word	0x20014004
 800939c:	20013f08 	.word	0x20013f08
 80093a0:	08024630 	.word	0x08024630

080093a4 <xTimerCreateTimerTask>:
{
 80093a4:	b510      	push	{r4, lr}
 80093a6:	b088      	sub	sp, #32
	prvCheckForValidListAndQueue();
 80093a8:	f7ff ffc8 	bl	800933c <prvCheckForValidListAndQueue>
	if( xTimerQueue != NULL )
 80093ac:	4b12      	ldr	r3, [pc, #72]	@ (80093f8 <xTimerCreateTimerTask+0x54>)
 80093ae:	681b      	ldr	r3, [r3, #0]
 80093b0:	b1b3      	cbz	r3, 80093e0 <xTimerCreateTimerTask+0x3c>
			StaticTask_t *pxTimerTaskTCBBuffer = NULL;
 80093b2:	2400      	movs	r4, #0
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 80093b4:	aa07      	add	r2, sp, #28
 80093b6:	a906      	add	r1, sp, #24
 80093b8:	a805      	add	r0, sp, #20
			StackType_t *pxTimerTaskStackBuffer = NULL;
 80093ba:	e9cd 4405 	strd	r4, r4, [sp, #20]
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 80093be:	f7fe fa91 	bl	80078e4 <vApplicationGetTimerTaskMemory>
			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
 80093c2:	9b05      	ldr	r3, [sp, #20]
 80093c4:	9302      	str	r3, [sp, #8]
 80093c6:	9b06      	ldr	r3, [sp, #24]
 80093c8:	9301      	str	r3, [sp, #4]
 80093ca:	2302      	movs	r3, #2
 80093cc:	9300      	str	r3, [sp, #0]
 80093ce:	9a07      	ldr	r2, [sp, #28]
 80093d0:	490a      	ldr	r1, [pc, #40]	@ (80093fc <xTimerCreateTimerTask+0x58>)
 80093d2:	480b      	ldr	r0, [pc, #44]	@ (8009400 <xTimerCreateTimerTask+0x5c>)
 80093d4:	4623      	mov	r3, r4
 80093d6:	f7ff fbc0 	bl	8008b5a <xTaskCreateStatic>
 80093da:	4b0a      	ldr	r3, [pc, #40]	@ (8009404 <xTimerCreateTimerTask+0x60>)
 80093dc:	6018      	str	r0, [r3, #0]
			if( xTimerTaskHandle != NULL )
 80093de:	b940      	cbnz	r0, 80093f2 <xTimerCreateTimerTask+0x4e>
 80093e0:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80093e4:	f383 8811 	msr	BASEPRI, r3
 80093e8:	f3bf 8f6f 	isb	sy
 80093ec:	f3bf 8f4f 	dsb	sy
	configASSERT( xReturn );
 80093f0:	e7fe      	b.n	80093f0 <xTimerCreateTimerTask+0x4c>
}
 80093f2:	2001      	movs	r0, #1
 80093f4:	b008      	add	sp, #32
 80093f6:	bd10      	pop	{r4, pc}
 80093f8:	20014000 	.word	0x20014000
 80093fc:	08024635 	.word	0x08024635
 8009400:	08009505 	.word	0x08009505
 8009404:	20013ffc 	.word	0x20013ffc

08009408 <xTimerGenericCommand>:
{
 8009408:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800940a:	4616      	mov	r6, r2
	configASSERT( xTimer );
 800940c:	4604      	mov	r4, r0
{
 800940e:	461a      	mov	r2, r3
	configASSERT( xTimer );
 8009410:	b940      	cbnz	r0, 8009424 <xTimerGenericCommand+0x1c>
 8009412:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009416:	f383 8811 	msr	BASEPRI, r3
 800941a:	f3bf 8f6f 	isb	sy
 800941e:	f3bf 8f4f 	dsb	sy
 8009422:	e7fe      	b.n	8009422 <xTimerGenericCommand+0x1a>
	if( xTimerQueue != NULL )
 8009424:	4d0d      	ldr	r5, [pc, #52]	@ (800945c <xTimerGenericCommand+0x54>)
 8009426:	6828      	ldr	r0, [r5, #0]
 8009428:	b180      	cbz	r0, 800944c <xTimerGenericCommand+0x44>
		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 800942a:	2905      	cmp	r1, #5
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 800942c:	e9cd 1600 	strd	r1, r6, [sp]
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 8009430:	9402      	str	r4, [sp, #8]
		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 8009432:	dc0d      	bgt.n	8009450 <xTimerGenericCommand+0x48>
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 8009434:	f7ff fe7a 	bl	800912c <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 8009438:	2300      	movs	r3, #0
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 800943a:	2802      	cmp	r0, #2
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 800943c:	bf08      	it	eq
 800943e:	9a08      	ldreq	r2, [sp, #32]
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, tmrNO_DELAY );
 8009440:	6828      	ldr	r0, [r5, #0]
 8009442:	bf18      	it	ne
 8009444:	461a      	movne	r2, r3
 8009446:	4669      	mov	r1, sp
 8009448:	f7fe feba 	bl	80081c0 <xQueueGenericSend>
}
 800944c:	b004      	add	sp, #16
 800944e:	bd70      	pop	{r4, r5, r6, pc}
			xReturn = xQueueSendToBackFromISR( xTimerQueue, &xMessage, pxHigherPriorityTaskWoken );
 8009450:	2300      	movs	r3, #0
 8009452:	4669      	mov	r1, sp
 8009454:	f7fe ff66 	bl	8008324 <xQueueGenericSendFromISR>
 8009458:	e7f8      	b.n	800944c <xTimerGenericCommand+0x44>
 800945a:	bf00      	nop
 800945c:	20014000 	.word	0x20014000

08009460 <prvSampleTimeNow>:
{
 8009460:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
	if( xTimeNow < xLastTime )
 8009464:	f8df 8098 	ldr.w	r8, [pc, #152]	@ 8009500 <prvSampleTimeNow+0xa0>
{
 8009468:	4606      	mov	r6, r0
	xTimeNow = xTaskGetTickCount();
 800946a:	f7ff fc2b 	bl	8008cc4 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 800946e:	f8d8 3000 	ldr.w	r3, [r8]
 8009472:	4283      	cmp	r3, r0
	xTimeNow = xTaskGetTickCount();
 8009474:	4605      	mov	r5, r0
	if( xTimeNow < xLastTime )
 8009476:	d909      	bls.n	800948c <prvSampleTimeNow+0x2c>
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 8009478:	4f1f      	ldr	r7, [pc, #124]	@ (80094f8 <prvSampleTimeNow+0x98>)
 800947a:	683b      	ldr	r3, [r7, #0]
 800947c:	681a      	ldr	r2, [r3, #0]
 800947e:	b96a      	cbnz	r2, 800949c <prvSampleTimeNow+0x3c>
	pxCurrentTimerList = pxOverflowTimerList;
 8009480:	4a1e      	ldr	r2, [pc, #120]	@ (80094fc <prvSampleTimeNow+0x9c>)
 8009482:	6811      	ldr	r1, [r2, #0]
 8009484:	6039      	str	r1, [r7, #0]
	pxOverflowTimerList = pxTemp;
 8009486:	6013      	str	r3, [r2, #0]
		*pxTimerListsWereSwitched = pdTRUE;
 8009488:	2301      	movs	r3, #1
 800948a:	e000      	b.n	800948e <prvSampleTimeNow+0x2e>
 800948c:	2300      	movs	r3, #0
}
 800948e:	4628      	mov	r0, r5
		*pxTimerListsWereSwitched = pdTRUE;
 8009490:	6033      	str	r3, [r6, #0]
	xLastTime = xTimeNow;
 8009492:	f8c8 5000 	str.w	r5, [r8]
}
 8009496:	b002      	add	sp, #8
 8009498:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800949c:	68db      	ldr	r3, [r3, #12]
		pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800949e:	68dc      	ldr	r4, [r3, #12]
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 80094a0:	f8d3 9000 	ldr.w	r9, [r3]
		( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 80094a4:	f104 0a04 	add.w	sl, r4, #4
 80094a8:	4650      	mov	r0, sl
 80094aa:	f7fe fb53 	bl	8007b54 <uxListRemove>
		pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 80094ae:	6a23      	ldr	r3, [r4, #32]
 80094b0:	4620      	mov	r0, r4
 80094b2:	4798      	blx	r3
		if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 80094b4:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
 80094b8:	075b      	lsls	r3, r3, #29
 80094ba:	d5de      	bpl.n	800947a <prvSampleTimeNow+0x1a>
			xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
 80094bc:	69a3      	ldr	r3, [r4, #24]
 80094be:	444b      	add	r3, r9
			if( xReloadTime > xNextExpireTime )
 80094c0:	4599      	cmp	r9, r3
 80094c2:	d206      	bcs.n	80094d2 <prvSampleTimeNow+0x72>
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 80094c4:	6838      	ldr	r0, [r7, #0]
				listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xReloadTime );
 80094c6:	6063      	str	r3, [r4, #4]
				listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 80094c8:	6124      	str	r4, [r4, #16]
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 80094ca:	4651      	mov	r1, sl
 80094cc:	f7fe fb2b 	bl	8007b26 <vListInsert>
 80094d0:	e7d3      	b.n	800947a <prvSampleTimeNow+0x1a>
				xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 80094d2:	2300      	movs	r3, #0
 80094d4:	9300      	str	r3, [sp, #0]
 80094d6:	464a      	mov	r2, r9
 80094d8:	4619      	mov	r1, r3
 80094da:	4620      	mov	r0, r4
 80094dc:	f7ff ff94 	bl	8009408 <xTimerGenericCommand>
				configASSERT( xResult );
 80094e0:	2800      	cmp	r0, #0
 80094e2:	d1ca      	bne.n	800947a <prvSampleTimeNow+0x1a>
 80094e4:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80094e8:	f383 8811 	msr	BASEPRI, r3
 80094ec:	f3bf 8f6f 	isb	sy
 80094f0:	f3bf 8f4f 	dsb	sy
 80094f4:	e7fe      	b.n	80094f4 <prvSampleTimeNow+0x94>
 80094f6:	bf00      	nop
 80094f8:	20014008 	.word	0x20014008
 80094fc:	20014004 	.word	0x20014004
 8009500:	20013ff8 	.word	0x20013ff8

08009504 <prvTimerTask>:
{
 8009504:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 8009508:	4d6e      	ldr	r5, [pc, #440]	@ (80096c4 <prvTimerTask+0x1c0>)
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 800950a:	4e6f      	ldr	r6, [pc, #444]	@ (80096c8 <prvTimerTask+0x1c4>)
{
 800950c:	b089      	sub	sp, #36	@ 0x24
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800950e:	682b      	ldr	r3, [r5, #0]
 8009510:	f8d3 8000 	ldr.w	r8, [r3]
 8009514:	f1b8 0f00 	cmp.w	r8, #0
 8009518:	d035      	beq.n	8009586 <prvTimerTask+0x82>
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800951a:	68db      	ldr	r3, [r3, #12]
 800951c:	f8d3 8000 	ldr.w	r8, [r3]
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 8009520:	2400      	movs	r4, #0
	vTaskSuspendAll();
 8009522:	f7ff fbc7 	bl	8008cb4 <vTaskSuspendAll>
		xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 8009526:	a804      	add	r0, sp, #16
 8009528:	f7ff ff9a 	bl	8009460 <prvSampleTimeNow>
		if( xTimerListsWereSwitched == pdFALSE )
 800952c:	9b04      	ldr	r3, [sp, #16]
		xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 800952e:	4681      	mov	r9, r0
		if( xTimerListsWereSwitched == pdFALSE )
 8009530:	2b00      	cmp	r3, #0
 8009532:	d169      	bne.n	8009608 <prvTimerTask+0x104>
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 8009534:	2c00      	cmp	r4, #0
 8009536:	d14c      	bne.n	80095d2 <prvTimerTask+0xce>
 8009538:	4540      	cmp	r0, r8
 800953a:	d350      	bcc.n	80095de <prvTimerTask+0xda>
				( void ) xTaskResumeAll();
 800953c:	f7ff fc5e 	bl	8008dfc <xTaskResumeAll>
Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009540:	682b      	ldr	r3, [r5, #0]
 8009542:	68db      	ldr	r3, [r3, #12]
 8009544:	68df      	ldr	r7, [r3, #12]
	( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 8009546:	1d38      	adds	r0, r7, #4
 8009548:	f7fe fb04 	bl	8007b54 <uxListRemove>
	if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800954c:	f897 3028 	ldrb.w	r3, [r7, #40]	@ 0x28
 8009550:	0758      	lsls	r0, r3, #29
 8009552:	d51a      	bpl.n	800958a <prvTimerTask+0x86>
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
 8009554:	69b9      	ldr	r1, [r7, #24]
 8009556:	4643      	mov	r3, r8
 8009558:	464a      	mov	r2, r9
 800955a:	4441      	add	r1, r8
 800955c:	4638      	mov	r0, r7
 800955e:	f7ff fecf 	bl	8009300 <prvInsertTimerInActiveList>
 8009562:	b1b0      	cbz	r0, 8009592 <prvTimerTask+0x8e>
			xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 8009564:	9400      	str	r4, [sp, #0]
 8009566:	4623      	mov	r3, r4
 8009568:	4642      	mov	r2, r8
 800956a:	4621      	mov	r1, r4
 800956c:	4638      	mov	r0, r7
 800956e:	f7ff ff4b 	bl	8009408 <xTimerGenericCommand>
			configASSERT( xResult );
 8009572:	b970      	cbnz	r0, 8009592 <prvTimerTask+0x8e>
 8009574:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009578:	f383 8811 	msr	BASEPRI, r3
 800957c:	f3bf 8f6f 	isb	sy
 8009580:	f3bf 8f4f 	dsb	sy
 8009584:	e7fe      	b.n	8009584 <prvTimerTask+0x80>
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 8009586:	2401      	movs	r4, #1
 8009588:	e7cb      	b.n	8009522 <prvTimerTask+0x1e>
		pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800958a:	f023 0301 	bic.w	r3, r3, #1
 800958e:	f887 3028 	strb.w	r3, [r7, #40]	@ 0x28
	pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 8009592:	6a3b      	ldr	r3, [r7, #32]
 8009594:	4638      	mov	r0, r7
 8009596:	4798      	blx	r3
	while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does not have to be initialised as it is passed out, not in, and it is not used unless xQueueReceive() returns pdTRUE. */
 8009598:	6830      	ldr	r0, [r6, #0]
 800959a:	2200      	movs	r2, #0
 800959c:	a904      	add	r1, sp, #16
 800959e:	f7fe ff6f 	bl	8008480 <xQueueReceive>
 80095a2:	2800      	cmp	r0, #0
 80095a4:	d0b3      	beq.n	800950e <prvTimerTask+0xa>
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 80095a6:	9b04      	ldr	r3, [sp, #16]
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 80095a8:	9806      	ldr	r0, [sp, #24]
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 80095aa:	2b00      	cmp	r3, #0
 80095ac:	db2f      	blt.n	800960e <prvTimerTask+0x10a>
			pxTimer = xMessage.u.xTimerParameters.pxTimer;
 80095ae:	9c06      	ldr	r4, [sp, #24]
			if( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListItem ) ) == pdFALSE ) /*lint !e961. The cast is only redundant when NULL is passed into the macro. */
 80095b0:	6963      	ldr	r3, [r4, #20]
 80095b2:	2b00      	cmp	r3, #0
 80095b4:	d132      	bne.n	800961c <prvTimerTask+0x118>
			xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 80095b6:	a803      	add	r0, sp, #12
 80095b8:	f7ff ff52 	bl	8009460 <prvSampleTimeNow>
			switch( xMessage.xMessageID )
 80095bc:	9b04      	ldr	r3, [sp, #16]
			xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 80095be:	4602      	mov	r2, r0
			switch( xMessage.xMessageID )
 80095c0:	2b09      	cmp	r3, #9
 80095c2:	d8e9      	bhi.n	8009598 <prvTimerTask+0x94>
 80095c4:	e8df f003 	tbb	[pc, r3]
 80095c8:	572e2e2e 	.word	0x572e2e2e
 80095cc:	2e2e765e 	.word	0x2e2e765e
 80095d0:	5e57      	.short	0x5e57
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
 80095d2:	4b3e      	ldr	r3, [pc, #248]	@ (80096cc <prvTimerTask+0x1c8>)
 80095d4:	681b      	ldr	r3, [r3, #0]
 80095d6:	681c      	ldr	r4, [r3, #0]
 80095d8:	fab4 f484 	clz	r4, r4
 80095dc:	0964      	lsrs	r4, r4, #5
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 80095de:	6830      	ldr	r0, [r6, #0]
 80095e0:	4622      	mov	r2, r4
 80095e2:	eba8 0109 	sub.w	r1, r8, r9
 80095e6:	f7ff f932 	bl	800884e <vQueueWaitForMessageRestricted>
				if( xTaskResumeAll() == pdFALSE )
 80095ea:	f7ff fc07 	bl	8008dfc <xTaskResumeAll>
 80095ee:	2800      	cmp	r0, #0
 80095f0:	d1d2      	bne.n	8009598 <prvTimerTask+0x94>
					portYIELD_WITHIN_API();
 80095f2:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 80095f6:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 80095fa:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 80095fe:	f3bf 8f4f 	dsb	sy
 8009602:	f3bf 8f6f 	isb	sy
 8009606:	e7c7      	b.n	8009598 <prvTimerTask+0x94>
			( void ) xTaskResumeAll();
 8009608:	f7ff fbf8 	bl	8008dfc <xTaskResumeAll>
}
 800960c:	e7c4      	b.n	8009598 <prvTimerTask+0x94>
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 800960e:	9b05      	ldr	r3, [sp, #20]
 8009610:	9907      	ldr	r1, [sp, #28]
 8009612:	4798      	blx	r3
		if( xMessage.xMessageID >= ( BaseType_t ) 0 )
 8009614:	9b04      	ldr	r3, [sp, #16]
 8009616:	2b00      	cmp	r3, #0
 8009618:	dbbe      	blt.n	8009598 <prvTimerTask+0x94>
 800961a:	e7c8      	b.n	80095ae <prvTimerTask+0xaa>
				( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800961c:	1d20      	adds	r0, r4, #4
 800961e:	f7fe fa99 	bl	8007b54 <uxListRemove>
 8009622:	e7c8      	b.n	80095b6 <prvTimerTask+0xb2>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 8009624:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 8009628:	69a1      	ldr	r1, [r4, #24]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800962a:	f043 0301 	orr.w	r3, r3, #1
 800962e:	f884 3028 	strb.w	r3, [r4, #40]	@ 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 8009632:	9b05      	ldr	r3, [sp, #20]
 8009634:	4620      	mov	r0, r4
 8009636:	4419      	add	r1, r3
 8009638:	f7ff fe62 	bl	8009300 <prvInsertTimerInActiveList>
 800963c:	2800      	cmp	r0, #0
 800963e:	d0ab      	beq.n	8009598 <prvTimerTask+0x94>
						pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 8009640:	6a23      	ldr	r3, [r4, #32]
 8009642:	4620      	mov	r0, r4
 8009644:	4798      	blx	r3
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 8009646:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
 800964a:	0759      	lsls	r1, r3, #29
 800964c:	d5a4      	bpl.n	8009598 <prvTimerTask+0x94>
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
 800964e:	69a2      	ldr	r2, [r4, #24]
 8009650:	9905      	ldr	r1, [sp, #20]
 8009652:	2300      	movs	r3, #0
 8009654:	440a      	add	r2, r1
 8009656:	9300      	str	r3, [sp, #0]
 8009658:	4619      	mov	r1, r3
 800965a:	4620      	mov	r0, r4
 800965c:	f7ff fed4 	bl	8009408 <xTimerGenericCommand>
							configASSERT( xResult );
 8009660:	2800      	cmp	r0, #0
 8009662:	d199      	bne.n	8009598 <prvTimerTask+0x94>
 8009664:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009668:	f383 8811 	msr	BASEPRI, r3
 800966c:	f3bf 8f6f 	isb	sy
 8009670:	f3bf 8f4f 	dsb	sy
 8009674:	e7fe      	b.n	8009674 <prvTimerTask+0x170>
					pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 8009676:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
							pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800967a:	f023 0301 	bic.w	r3, r3, #1
 800967e:	f884 3028 	strb.w	r3, [r4, #40]	@ 0x28
 8009682:	e789      	b.n	8009598 <prvTimerTask+0x94>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 8009684:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
 8009688:	f043 0301 	orr.w	r3, r3, #1
 800968c:	f884 3028 	strb.w	r3, [r4, #40]	@ 0x28
					pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
 8009690:	9905      	ldr	r1, [sp, #20]
 8009692:	61a1      	str	r1, [r4, #24]
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 8009694:	b941      	cbnz	r1, 80096a8 <prvTimerTask+0x1a4>
 8009696:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800969a:	f383 8811 	msr	BASEPRI, r3
 800969e:	f3bf 8f6f 	isb	sy
 80096a2:	f3bf 8f4f 	dsb	sy
 80096a6:	e7fe      	b.n	80096a6 <prvTimerTask+0x1a2>
					( void ) prvInsertTimerInActiveList( pxTimer, ( xTimeNow + pxTimer->xTimerPeriodInTicks ), xTimeNow, xTimeNow );
 80096a8:	4603      	mov	r3, r0
 80096aa:	4401      	add	r1, r0
 80096ac:	4620      	mov	r0, r4
 80096ae:	f7ff fe27 	bl	8009300 <prvInsertTimerInActiveList>
					break;
 80096b2:	e771      	b.n	8009598 <prvTimerTask+0x94>
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_STATICALLY_ALLOCATED ) == ( uint8_t ) 0 )
 80096b4:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
 80096b8:	079a      	lsls	r2, r3, #30
 80096ba:	d4de      	bmi.n	800967a <prvTimerTask+0x176>
							vPortFree( pxTimer );
 80096bc:	4620      	mov	r0, r4
 80096be:	f7fe f9db 	bl	8007a78 <vPortFree>
 80096c2:	e769      	b.n	8009598 <prvTimerTask+0x94>
 80096c4:	20014008 	.word	0x20014008
 80096c8:	20014000 	.word	0x20014000
 80096cc:	20014004 	.word	0x20014004

080096d0 <USBD_Init>:
                             USBD_DescriptorsTypeDef *pdesc, uint8_t id)
{
  USBD_StatusTypeDef ret;

  /* Check whether the USB Host handle is valid */
  if (pdev == NULL)
 80096d0:	b178      	cbz	r0, 80096f2 <USBD_Init+0x22>
    pdev->NumClasses = 0;
    pdev->classId = 0;
  }
#else
  /* Unlink previous class*/
  pdev->pClass[0] = NULL;
 80096d2:	2300      	movs	r3, #0
 80096d4:	f8c0 32b8 	str.w	r3, [r0, #696]	@ 0x2b8
  pdev->pUserData[0] = NULL;
 80096d8:	f8c0 32c4 	str.w	r3, [r0, #708]	@ 0x2c4
#endif /* USE_USBD_COMPOSITE */

  pdev->pConfDesc = NULL;
 80096dc:	f8c0 32d0 	str.w	r3, [r0, #720]	@ 0x2d0

  /* Assign USBD Descriptors */
  if (pdesc != NULL)
 80096e0:	b109      	cbz	r1, 80096e6 <USBD_Init+0x16>
  {
    pdev->pDesc = pdesc;
 80096e2:	f8c0 12b4 	str.w	r1, [r0, #692]	@ 0x2b4
  }

  /* Set Device initial State */
  pdev->dev_state = USBD_STATE_DEFAULT;
 80096e6:	2301      	movs	r3, #1
 80096e8:	f880 329c 	strb.w	r3, [r0, #668]	@ 0x29c
  pdev->id = id;
 80096ec:	7002      	strb	r2, [r0, #0]

  /* Initialize low level driver */
  ret = USBD_LL_Init(pdev);
 80096ee:	f7f8 b913 	b.w	8001918 <USBD_LL_Init>

  return ret;
}
 80096f2:	2003      	movs	r0, #3
 80096f4:	4770      	bx	lr

080096f6 <USBD_RegisterClass>:
  * @param  pdev: Device Handle
  * @param  pclass: Class handle
  * @retval USBD Status
  */
USBD_StatusTypeDef USBD_RegisterClass(USBD_HandleTypeDef *pdev, USBD_ClassTypeDef *pclass)
{
 80096f6:	b513      	push	{r0, r1, r4, lr}
  uint16_t len = 0U;
 80096f8:	2300      	movs	r3, #0
{
 80096fa:	4604      	mov	r4, r0
  uint16_t len = 0U;
 80096fc:	f8ad 3006 	strh.w	r3, [sp, #6]

  if (pclass == NULL)
 8009700:	b181      	cbz	r1, 8009724 <USBD_RegisterClass+0x2e>
  if (pdev->pClass[pdev->classId]->GetHSConfigDescriptor != NULL)
  {
    pdev->pConfDesc = (void *)pdev->pClass[pdev->classId]->GetHSConfigDescriptor(&len);
  }
#else /* Default USE_USB_FS */
  if (pdev->pClass[pdev->classId]->GetFSConfigDescriptor != NULL)
 8009702:	6acb      	ldr	r3, [r1, #44]	@ 0x2c
  pdev->pClass[0] = pclass;
 8009704:	f8c0 12b8 	str.w	r1, [r0, #696]	@ 0x2b8
  if (pdev->pClass[pdev->classId]->GetFSConfigDescriptor != NULL)
 8009708:	b123      	cbz	r3, 8009714 <USBD_RegisterClass+0x1e>
  {
    pdev->pConfDesc = (void *)pdev->pClass[pdev->classId]->GetFSConfigDescriptor(&len);
 800970a:	f10d 0006 	add.w	r0, sp, #6
 800970e:	4798      	blx	r3
 8009710:	f8c4 02d0 	str.w	r0, [r4, #720]	@ 0x2d0
  }
#endif /* USE_USB_FS */

  /* Increment the NumClasses */
  pdev->NumClasses++;
 8009714:	f8d4 32d8 	ldr.w	r3, [r4, #728]	@ 0x2d8
 8009718:	3301      	adds	r3, #1
 800971a:	f8c4 32d8 	str.w	r3, [r4, #728]	@ 0x2d8

  return USBD_OK;
 800971e:	2000      	movs	r0, #0
}
 8009720:	b002      	add	sp, #8
 8009722:	bd10      	pop	{r4, pc}
    return USBD_FAIL;
 8009724:	2003      	movs	r0, #3
 8009726:	e7fb      	b.n	8009720 <USBD_RegisterClass+0x2a>

08009728 <USBD_Start>:
#ifdef USE_USBD_COMPOSITE
  pdev->classId = 0U;
#endif /* USE_USBD_COMPOSITE */

  /* Start the low level driver  */
  return USBD_LL_Start(pdev);
 8009728:	f7f8 b947 	b.w	80019ba <USBD_LL_Start>

0800972c <USBD_SetClassConfig>:
        }
      }
    }
  }
#else
  if (pdev->pClass[0] != NULL)
 800972c:	f8d0 32b8 	ldr.w	r3, [r0, #696]	@ 0x2b8
 8009730:	b10b      	cbz	r3, 8009736 <USBD_SetClassConfig+0xa>
  {
    /* Set configuration and Start the Class */
    ret = (USBD_StatusTypeDef)pdev->pClass[0]->Init(pdev, cfgidx);
 8009732:	681b      	ldr	r3, [r3, #0]
 8009734:	4718      	bx	r3
  }
#endif /* USE_USBD_COMPOSITE */

  return ret;
}
 8009736:	4618      	mov	r0, r3
 8009738:	4770      	bx	lr

0800973a <USBD_ClrClassConfig>:
  * @param  pdev: device instance
  * @param  cfgidx: configuration index
  * @retval status
  */
USBD_StatusTypeDef USBD_ClrClassConfig(USBD_HandleTypeDef *pdev, uint8_t cfgidx)
{
 800973a:	b508      	push	{r3, lr}
      }
    }
  }
#else
  /* Clear configuration  and De-initialize the Class process */
  if (pdev->pClass[0]->DeInit(pdev, cfgidx) != 0U)
 800973c:	f8d0 32b8 	ldr.w	r3, [r0, #696]	@ 0x2b8
 8009740:	685b      	ldr	r3, [r3, #4]
 8009742:	4798      	blx	r3
  {
    ret = USBD_FAIL;
 8009744:	2800      	cmp	r0, #0
  }
#endif /* USE_USBD_COMPOSITE */

  return ret;
}
 8009746:	bf18      	it	ne
 8009748:	2003      	movne	r0, #3
 800974a:	bd08      	pop	{r3, pc}

0800974c <USBD_LL_SetupStage>:
  * @param  pdev: device instance
  * @param  psetup: setup packet buffer pointer
  * @retval status
  */
USBD_StatusTypeDef USBD_LL_SetupStage(USBD_HandleTypeDef *pdev, uint8_t *psetup)
{
 800974c:	b538      	push	{r3, r4, r5, lr}
 800974e:	4604      	mov	r4, r0
  USBD_StatusTypeDef ret;

  USBD_ParseSetupRequest(&pdev->request, psetup);
 8009750:	f200 25aa 	addw	r5, r0, #682	@ 0x2aa
 8009754:	4628      	mov	r0, r5
 8009756:	f000 fb97 	bl	8009e88 <USBD_ParseSetupRequest>

  pdev->ep0_state = USBD_EP0_SETUP;
 800975a:	2301      	movs	r3, #1

  pdev->ep0_data_len = pdev->request.wLength;

  switch (pdev->request.bmRequest & 0x1FU)
 800975c:	f894 12aa 	ldrb.w	r1, [r4, #682]	@ 0x2aa
  pdev->ep0_state = USBD_EP0_SETUP;
 8009760:	f8c4 3294 	str.w	r3, [r4, #660]	@ 0x294
  pdev->ep0_data_len = pdev->request.wLength;
 8009764:	f8b4 32b0 	ldrh.w	r3, [r4, #688]	@ 0x2b0
 8009768:	f8c4 3298 	str.w	r3, [r4, #664]	@ 0x298
  switch (pdev->request.bmRequest & 0x1FU)
 800976c:	f001 031f 	and.w	r3, r1, #31
 8009770:	2b01      	cmp	r3, #1
 8009772:	d008      	beq.n	8009786 <USBD_LL_SetupStage+0x3a>
 8009774:	2b02      	cmp	r3, #2
 8009776:	d00c      	beq.n	8009792 <USBD_LL_SetupStage+0x46>
 8009778:	b98b      	cbnz	r3, 800979e <USBD_LL_SetupStage+0x52>
  {
    case USB_REQ_RECIPIENT_DEVICE:
      ret = USBD_StdDevReq(pdev, &pdev->request);
 800977a:	4629      	mov	r1, r5
 800977c:	4620      	mov	r0, r4
      ret = USBD_LL_StallEP(pdev, (pdev->request.bmRequest & 0x80U));
      break;
  }

  return ret;
}
 800977e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
      ret = USBD_StdDevReq(pdev, &pdev->request);
 8009782:	f000 b94d 	b.w	8009a20 <USBD_StdDevReq>
      ret = USBD_StdItfReq(pdev, &pdev->request);
 8009786:	4629      	mov	r1, r5
 8009788:	4620      	mov	r0, r4
}
 800978a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
      ret = USBD_StdItfReq(pdev, &pdev->request);
 800978e:	f000 baab 	b.w	8009ce8 <USBD_StdItfReq>
      ret = USBD_StdEPReq(pdev, &pdev->request);
 8009792:	4629      	mov	r1, r5
 8009794:	4620      	mov	r0, r4
}
 8009796:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
      ret = USBD_StdEPReq(pdev, &pdev->request);
 800979a:	f000 bad4 	b.w	8009d46 <USBD_StdEPReq>
      ret = USBD_LL_StallEP(pdev, (pdev->request.bmRequest & 0x80U));
 800979e:	4620      	mov	r0, r4
 80097a0:	f001 0180 	and.w	r1, r1, #128	@ 0x80
}
 80097a4:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
      ret = USBD_LL_StallEP(pdev, (pdev->request.bmRequest & 0x80U));
 80097a8:	f7f8 b925 	b.w	80019f6 <USBD_LL_StallEP>

080097ac <USBD_LL_DataOutStage>:
  * @param  pdata: data pointer
  * @retval status
  */
USBD_StatusTypeDef USBD_LL_DataOutStage(USBD_HandleTypeDef *pdev,
                                        uint8_t epnum, uint8_t *pdata)
{
 80097ac:	b570      	push	{r4, r5, r6, lr}
 80097ae:	4604      	mov	r4, r0
 80097b0:	4616      	mov	r6, r2
  USBD_EndpointTypeDef *pep;
  USBD_StatusTypeDef ret = USBD_OK;
  uint8_t idx;

  if (epnum == 0U)
 80097b2:	bb09      	cbnz	r1, 80097f8 <USBD_LL_DataOutStage+0x4c>
  {
    pep = &pdev->ep_out[0];

    if (pdev->ep0_state == USBD_EP0_DATA_OUT)
 80097b4:	f8d0 3294 	ldr.w	r3, [r0, #660]	@ 0x294
 80097b8:	2b03      	cmp	r3, #3
 80097ba:	d10c      	bne.n	80097d6 <USBD_LL_DataOutStage+0x2a>
    {
      if (pep->rem_length > pep->maxpacket)
 80097bc:	e9d0 3257 	ldrd	r3, r2, [r0, #348]	@ 0x15c
 80097c0:	4293      	cmp	r3, r2
 80097c2:	d90a      	bls.n	80097da <USBD_LL_DataOutStage+0x2e>
      {
        pep->rem_length -= pep->maxpacket;
 80097c4:	1a9b      	subs	r3, r3, r2

        (void)USBD_CtlContinueRx(pdev, pdata, MIN(pep->rem_length, pep->maxpacket));
 80097c6:	429a      	cmp	r2, r3
        pep->rem_length -= pep->maxpacket;
 80097c8:	f8c0 315c 	str.w	r3, [r0, #348]	@ 0x15c
        (void)USBD_CtlContinueRx(pdev, pdata, MIN(pep->rem_length, pep->maxpacket));
 80097cc:	bf28      	it	cs
 80097ce:	461a      	movcs	r2, r3
 80097d0:	4631      	mov	r1, r6
 80097d2:	f000 fc9e 	bl	800a112 <USBD_CtlContinueRx>
      }
    }
  }

  return USBD_OK;
}
 80097d6:	2000      	movs	r0, #0
 80097d8:	bd70      	pop	{r4, r5, r6, pc}
          if (pdev->dev_state == USBD_STATE_CONFIGURED)
 80097da:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
 80097de:	2b03      	cmp	r3, #3
 80097e0:	d106      	bne.n	80097f0 <USBD_LL_DataOutStage+0x44>
            if (pdev->pClass[idx]->EP0_RxReady != NULL)
 80097e2:	f8d0 32b8 	ldr.w	r3, [r0, #696]	@ 0x2b8
 80097e6:	691b      	ldr	r3, [r3, #16]
 80097e8:	b113      	cbz	r3, 80097f0 <USBD_LL_DataOutStage+0x44>
              pdev->classId = idx;
 80097ea:	f8c0 12d4 	str.w	r1, [r0, #724]	@ 0x2d4
              pdev->pClass[idx]->EP0_RxReady(pdev);
 80097ee:	4798      	blx	r3
        (void)USBD_CtlSendStatus(pdev);
 80097f0:	4620      	mov	r0, r4
 80097f2:	f000 fc96 	bl	800a122 <USBD_CtlSendStatus>
 80097f6:	e7ee      	b.n	80097d6 <USBD_LL_DataOutStage+0x2a>
      if (pdev->dev_state == USBD_STATE_CONFIGURED)
 80097f8:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
 80097fc:	2b03      	cmp	r3, #3
 80097fe:	d1ea      	bne.n	80097d6 <USBD_LL_DataOutStage+0x2a>
        if (pdev->pClass[idx]->DataOut != NULL)
 8009800:	f8d0 32b8 	ldr.w	r3, [r0, #696]	@ 0x2b8
 8009804:	699b      	ldr	r3, [r3, #24]
 8009806:	2b00      	cmp	r3, #0
 8009808:	d0e5      	beq.n	80097d6 <USBD_LL_DataOutStage+0x2a>
          pdev->classId = idx;
 800980a:	2200      	movs	r2, #0
}
 800980c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
          pdev->classId = idx;
 8009810:	f8c0 22d4 	str.w	r2, [r0, #724]	@ 0x2d4
          ret = (USBD_StatusTypeDef)pdev->pClass[idx]->DataOut(pdev, epnum);
 8009814:	4718      	bx	r3

08009816 <USBD_LL_DataInStage>:
  * @param  pdata: data pointer
  * @retval status
  */
USBD_StatusTypeDef USBD_LL_DataInStage(USBD_HandleTypeDef *pdev,
                                       uint8_t epnum, uint8_t *pdata)
{
 8009816:	b570      	push	{r4, r5, r6, lr}
 8009818:	4604      	mov	r4, r0
 800981a:	4616      	mov	r6, r2
  USBD_EndpointTypeDef *pep;
  USBD_StatusTypeDef ret;
  uint8_t idx;

  if (epnum == 0U)
 800981c:	460d      	mov	r5, r1
 800981e:	2900      	cmp	r1, #0
 8009820:	d13d      	bne.n	800989e <USBD_LL_DataInStage+0x88>
  {
    pep = &pdev->ep_in[0];

    if (pdev->ep0_state == USBD_EP0_DATA_IN)
 8009822:	f8d0 3294 	ldr.w	r3, [r0, #660]	@ 0x294
 8009826:	2b02      	cmp	r3, #2
 8009828:	d10e      	bne.n	8009848 <USBD_LL_DataInStage+0x32>
    {
      if (pep->rem_length > pep->maxpacket)
 800982a:	e9d0 3207 	ldrd	r3, r2, [r0, #28]
 800982e:	4293      	cmp	r3, r2
 8009830:	d912      	bls.n	8009858 <USBD_LL_DataInStage+0x42>
      {
        pep->rem_length -= pep->maxpacket;
 8009832:	1a9a      	subs	r2, r3, r2
 8009834:	61c2      	str	r2, [r0, #28]

        (void)USBD_CtlContinueSendData(pdev, pdata, pep->rem_length);
 8009836:	4631      	mov	r1, r6
 8009838:	f000 fc63 	bl	800a102 <USBD_CtlContinueSendData>
        {
          (void)USBD_CtlContinueSendData(pdev, NULL, 0U);
          pdev->ep0_data_len = 0U;

          /* Prepare endpoint for premature end of transfer */
          (void)USBD_LL_PrepareReceive(pdev, 0U, NULL, 0U);
 800983c:	462b      	mov	r3, r5
 800983e:	462a      	mov	r2, r5
 8009840:	4629      	mov	r1, r5
 8009842:	4620      	mov	r0, r4
 8009844:	f7f8 f8fb 	bl	8001a3e <USBD_LL_PrepareReceive>
          (void)USBD_CtlReceiveStatus(pdev);
        }
      }
    }

    if (pdev->dev_test_mode != 0U)
 8009848:	f894 32a0 	ldrb.w	r3, [r4, #672]	@ 0x2a0
 800984c:	b113      	cbz	r3, 8009854 <USBD_LL_DataInStage+0x3e>
    {
      (void)USBD_RunTestMode(pdev);
      pdev->dev_test_mode = 0U;
 800984e:	2300      	movs	r3, #0
 8009850:	f884 32a0 	strb.w	r3, [r4, #672]	@ 0x2a0
      }
    }
  }

  return USBD_OK;
}
 8009854:	2000      	movs	r0, #0
 8009856:	bd70      	pop	{r4, r5, r6, pc}
        if ((pep->maxpacket == pep->rem_length) &&
 8009858:	d10c      	bne.n	8009874 <USBD_LL_DataInStage+0x5e>
            (pep->total_length >= pep->maxpacket) &&
 800985a:	6982      	ldr	r2, [r0, #24]
        if ((pep->maxpacket == pep->rem_length) &&
 800985c:	4293      	cmp	r3, r2
 800985e:	d809      	bhi.n	8009874 <USBD_LL_DataInStage+0x5e>
            (pep->total_length >= pep->maxpacket) &&
 8009860:	f8d0 3298 	ldr.w	r3, [r0, #664]	@ 0x298
 8009864:	429a      	cmp	r2, r3
 8009866:	d205      	bcs.n	8009874 <USBD_LL_DataInStage+0x5e>
          (void)USBD_CtlContinueSendData(pdev, NULL, 0U);
 8009868:	460a      	mov	r2, r1
 800986a:	f000 fc4a 	bl	800a102 <USBD_CtlContinueSendData>
          pdev->ep0_data_len = 0U;
 800986e:	f8c4 5298 	str.w	r5, [r4, #664]	@ 0x298
 8009872:	e7e3      	b.n	800983c <USBD_LL_DataInStage+0x26>
          if (pdev->dev_state == USBD_STATE_CONFIGURED)
 8009874:	f894 329c 	ldrb.w	r3, [r4, #668]	@ 0x29c
 8009878:	2b03      	cmp	r3, #3
 800987a:	d108      	bne.n	800988e <USBD_LL_DataInStage+0x78>
            if (pdev->pClass[0]->EP0_TxSent != NULL)
 800987c:	f8d4 32b8 	ldr.w	r3, [r4, #696]	@ 0x2b8
 8009880:	68db      	ldr	r3, [r3, #12]
 8009882:	b123      	cbz	r3, 800988e <USBD_LL_DataInStage+0x78>
              pdev->classId = 0U;
 8009884:	2200      	movs	r2, #0
 8009886:	f8c4 22d4 	str.w	r2, [r4, #724]	@ 0x2d4
              pdev->pClass[0]->EP0_TxSent(pdev);
 800988a:	4620      	mov	r0, r4
 800988c:	4798      	blx	r3
          (void)USBD_LL_StallEP(pdev, 0x80U);
 800988e:	2180      	movs	r1, #128	@ 0x80
 8009890:	4620      	mov	r0, r4
 8009892:	f7f8 f8b0 	bl	80019f6 <USBD_LL_StallEP>
          (void)USBD_CtlReceiveStatus(pdev);
 8009896:	4620      	mov	r0, r4
 8009898:	f000 fc4e 	bl	800a138 <USBD_CtlReceiveStatus>
 800989c:	e7d4      	b.n	8009848 <USBD_LL_DataInStage+0x32>
      if (pdev->dev_state == USBD_STATE_CONFIGURED)
 800989e:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
 80098a2:	2b03      	cmp	r3, #3
 80098a4:	d1d6      	bne.n	8009854 <USBD_LL_DataInStage+0x3e>
        if (pdev->pClass[idx]->DataIn != NULL)
 80098a6:	f8d0 32b8 	ldr.w	r3, [r0, #696]	@ 0x2b8
 80098aa:	695b      	ldr	r3, [r3, #20]
 80098ac:	2b00      	cmp	r3, #0
 80098ae:	d0d1      	beq.n	8009854 <USBD_LL_DataInStage+0x3e>
          pdev->classId = idx;
 80098b0:	2200      	movs	r2, #0
}
 80098b2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
          pdev->classId = idx;
 80098b6:	f8c0 22d4 	str.w	r2, [r0, #724]	@ 0x2d4
          ret = (USBD_StatusTypeDef)pdev->pClass[idx]->DataIn(pdev, epnum);
 80098ba:	4718      	bx	r3

080098bc <USBD_LL_Reset>:
  *         Handle Reset event
  * @param  pdev: device instance
  * @retval status
  */
USBD_StatusTypeDef USBD_LL_Reset(USBD_HandleTypeDef *pdev)
{
 80098bc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  USBD_StatusTypeDef ret = USBD_OK;

  /* Upon Reset call user call back */
  pdev->dev_state = USBD_STATE_DEFAULT;
 80098be:	2301      	movs	r3, #1
 80098c0:	f880 329c 	strb.w	r3, [r0, #668]	@ 0x29c
      }
    }
  }
#else

  if (pdev->pClass[0] != NULL)
 80098c4:	f8d0 32b8 	ldr.w	r3, [r0, #696]	@ 0x2b8
  pdev->ep0_state = USBD_EP0_IDLE;
 80098c8:	2100      	movs	r1, #0
{
 80098ca:	4604      	mov	r4, r0
  pdev->ep0_state = USBD_EP0_IDLE;
 80098cc:	f8c0 1294 	str.w	r1, [r0, #660]	@ 0x294
  pdev->dev_config = 0U;
 80098d0:	6041      	str	r1, [r0, #4]
  pdev->dev_remote_wakeup = 0U;
 80098d2:	f8c0 12a4 	str.w	r1, [r0, #676]	@ 0x2a4
  pdev->dev_test_mode = 0U;
 80098d6:	f880 12a0 	strb.w	r1, [r0, #672]	@ 0x2a0
  if (pdev->pClass[0] != NULL)
 80098da:	b9b3      	cbnz	r3, 800990a <USBD_LL_Reset+0x4e>
  USBD_StatusTypeDef ret = USBD_OK;
 80098dc:	2600      	movs	r6, #0
    }
  }
#endif /* USE_USBD_COMPOSITE */

  /* Open EP0 OUT */
  (void)USBD_LL_OpenEP(pdev, 0x00U, USBD_EP_TYPE_CTRL, USB_MAX_EP0_SIZE);
 80098de:	2200      	movs	r2, #0
  pdev->ep_out[0x00U & 0xFU].is_used = 1U;

  pdev->ep_out[0].maxpacket = USB_MAX_EP0_SIZE;
 80098e0:	2540      	movs	r5, #64	@ 0x40
  (void)USBD_LL_OpenEP(pdev, 0x00U, USBD_EP_TYPE_CTRL, USB_MAX_EP0_SIZE);
 80098e2:	4611      	mov	r1, r2
  pdev->ep_out[0x00U & 0xFU].is_used = 1U;
 80098e4:	2701      	movs	r7, #1
  (void)USBD_LL_OpenEP(pdev, 0x00U, USBD_EP_TYPE_CTRL, USB_MAX_EP0_SIZE);
 80098e6:	2340      	movs	r3, #64	@ 0x40
 80098e8:	4620      	mov	r0, r4
 80098ea:	f7f8 f86f 	bl	80019cc <USBD_LL_OpenEP>
  pdev->ep_out[0x00U & 0xFU].is_used = 1U;
 80098ee:	f8a4 7164 	strh.w	r7, [r4, #356]	@ 0x164
  pdev->ep_out[0].maxpacket = USB_MAX_EP0_SIZE;
 80098f2:	f8c4 5160 	str.w	r5, [r4, #352]	@ 0x160

  /* Open EP0 IN */
  (void)USBD_LL_OpenEP(pdev, 0x80U, USBD_EP_TYPE_CTRL, USB_MAX_EP0_SIZE);
 80098f6:	462b      	mov	r3, r5
 80098f8:	2200      	movs	r2, #0
 80098fa:	2180      	movs	r1, #128	@ 0x80
 80098fc:	4620      	mov	r0, r4
 80098fe:	f7f8 f865 	bl	80019cc <USBD_LL_OpenEP>
  pdev->ep_in[0x80U & 0xFU].is_used = 1U;
 8009902:	84a7      	strh	r7, [r4, #36]	@ 0x24

  pdev->ep_in[0].maxpacket = USB_MAX_EP0_SIZE;
 8009904:	6225      	str	r5, [r4, #32]

  return ret;
}
 8009906:	4630      	mov	r0, r6
 8009908:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    if (pdev->pClass[0]->DeInit != NULL)
 800990a:	685b      	ldr	r3, [r3, #4]
 800990c:	2b00      	cmp	r3, #0
 800990e:	d0e5      	beq.n	80098dc <USBD_LL_Reset+0x20>
      if (pdev->pClass[0]->DeInit(pdev, (uint8_t)pdev->dev_config) != USBD_OK)
 8009910:	4798      	blx	r3
 8009912:	2800      	cmp	r0, #0
 8009914:	d0e2      	beq.n	80098dc <USBD_LL_Reset+0x20>
        ret = USBD_FAIL;
 8009916:	2603      	movs	r6, #3
 8009918:	e7e1      	b.n	80098de <USBD_LL_Reset+0x22>

0800991a <USBD_LL_SetSpeed>:
  * @retval status
  */
USBD_StatusTypeDef USBD_LL_SetSpeed(USBD_HandleTypeDef *pdev,
                                    USBD_SpeedTypeDef speed)
{
  pdev->dev_speed = speed;
 800991a:	7401      	strb	r1, [r0, #16]

  return USBD_OK;
}
 800991c:	2000      	movs	r0, #0
 800991e:	4770      	bx	lr

08009920 <USBD_LL_Suspend>:
  * @param  pdev: device instance
  * @retval status
  */
USBD_StatusTypeDef USBD_LL_Suspend(USBD_HandleTypeDef *pdev)
{
  if (pdev->dev_state != USBD_STATE_SUSPENDED)
 8009920:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
 8009924:	2b04      	cmp	r3, #4
  {
    pdev->dev_old_state = pdev->dev_state;
 8009926:	bf1e      	ittt	ne
 8009928:	f890 329c 	ldrbne.w	r3, [r0, #668]	@ 0x29c
 800992c:	b2db      	uxtbne	r3, r3
 800992e:	f880 329d 	strbne.w	r3, [r0, #669]	@ 0x29d
  }

  pdev->dev_state = USBD_STATE_SUSPENDED;
 8009932:	2304      	movs	r3, #4
 8009934:	f880 329c 	strb.w	r3, [r0, #668]	@ 0x29c

  return USBD_OK;
}
 8009938:	2000      	movs	r0, #0
 800993a:	4770      	bx	lr

0800993c <USBD_LL_Resume>:
  * @param  pdev: device instance
  * @retval status
  */
USBD_StatusTypeDef USBD_LL_Resume(USBD_HandleTypeDef *pdev)
{
  if (pdev->dev_state == USBD_STATE_SUSPENDED)
 800993c:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
 8009940:	2b04      	cmp	r3, #4
  {
    pdev->dev_state = pdev->dev_old_state;
 8009942:	bf02      	ittt	eq
 8009944:	f890 329d 	ldrbeq.w	r3, [r0, #669]	@ 0x29d
 8009948:	b2db      	uxtbeq	r3, r3
 800994a:	f880 329c 	strbeq.w	r3, [r0, #668]	@ 0x29c
  }

  return USBD_OK;
}
 800994e:	2000      	movs	r0, #0
 8009950:	4770      	bx	lr

08009952 <USBD_LL_SOF>:
  *         Handle SOF event
  * @param  pdev: device instance
  * @retval status
  */
USBD_StatusTypeDef USBD_LL_SOF(USBD_HandleTypeDef *pdev)
{
 8009952:	b508      	push	{r3, lr}
  /* The SOF event can be distributed for all classes that support it */
  if (pdev->dev_state == USBD_STATE_CONFIGURED)
 8009954:	f890 229c 	ldrb.w	r2, [r0, #668]	@ 0x29c
 8009958:	2a03      	cmp	r2, #3
 800995a:	d105      	bne.n	8009968 <USBD_LL_SOF+0x16>
          }
        }
      }
    }
#else
    if (pdev->pClass[0] != NULL)
 800995c:	f8d0 32b8 	ldr.w	r3, [r0, #696]	@ 0x2b8
 8009960:	b113      	cbz	r3, 8009968 <USBD_LL_SOF+0x16>
    {
      if (pdev->pClass[0]->SOF != NULL)
 8009962:	69db      	ldr	r3, [r3, #28]
 8009964:	b103      	cbz	r3, 8009968 <USBD_LL_SOF+0x16>
      {
        (void)pdev->pClass[0]->SOF(pdev);
 8009966:	4798      	blx	r3
    }
#endif /* USE_USBD_COMPOSITE */
  }

  return USBD_OK;
}
 8009968:	2000      	movs	r0, #0
 800996a:	bd08      	pop	{r3, pc}

0800996c <USBD_LL_IsoINIncomplete>:
  * @retval status
  */
USBD_StatusTypeDef USBD_LL_IsoINIncomplete(USBD_HandleTypeDef *pdev,
                                           uint8_t epnum)
{
  if (pdev->pClass[pdev->classId] == NULL)
 800996c:	f8d0 22d4 	ldr.w	r2, [r0, #724]	@ 0x2d4
 8009970:	32ae      	adds	r2, #174	@ 0xae
{
 8009972:	b508      	push	{r3, lr}
  if (pdev->pClass[pdev->classId] == NULL)
 8009974:	f850 2022 	ldr.w	r2, [r0, r2, lsl #2]
 8009978:	b14a      	cbz	r2, 800998e <USBD_LL_IsoINIncomplete+0x22>
  {
    return USBD_FAIL;
  }

  if (pdev->dev_state == USBD_STATE_CONFIGURED)
 800997a:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
 800997e:	2b03      	cmp	r3, #3
 8009980:	d101      	bne.n	8009986 <USBD_LL_IsoINIncomplete+0x1a>
  {
    if (pdev->pClass[pdev->classId]->IsoINIncomplete != NULL)
 8009982:	6a13      	ldr	r3, [r2, #32]
 8009984:	b90b      	cbnz	r3, 800998a <USBD_LL_IsoINIncomplete+0x1e>
    {
      (void)pdev->pClass[pdev->classId]->IsoINIncomplete(pdev, epnum);
    }
  }

  return USBD_OK;
 8009986:	2000      	movs	r0, #0
}
 8009988:	bd08      	pop	{r3, pc}
      (void)pdev->pClass[pdev->classId]->IsoINIncomplete(pdev, epnum);
 800998a:	4798      	blx	r3
 800998c:	e7fb      	b.n	8009986 <USBD_LL_IsoINIncomplete+0x1a>
    return USBD_FAIL;
 800998e:	2003      	movs	r0, #3
 8009990:	e7fa      	b.n	8009988 <USBD_LL_IsoINIncomplete+0x1c>

08009992 <USBD_LL_IsoOUTIncomplete>:
  * @retval status
  */
USBD_StatusTypeDef USBD_LL_IsoOUTIncomplete(USBD_HandleTypeDef *pdev,
                                            uint8_t epnum)
{
  if (pdev->pClass[pdev->classId] == NULL)
 8009992:	f8d0 22d4 	ldr.w	r2, [r0, #724]	@ 0x2d4
 8009996:	32ae      	adds	r2, #174	@ 0xae
{
 8009998:	b508      	push	{r3, lr}
  if (pdev->pClass[pdev->classId] == NULL)
 800999a:	f850 2022 	ldr.w	r2, [r0, r2, lsl #2]
 800999e:	b14a      	cbz	r2, 80099b4 <USBD_LL_IsoOUTIncomplete+0x22>
  {
    return USBD_FAIL;
  }

  if (pdev->dev_state == USBD_STATE_CONFIGURED)
 80099a0:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
 80099a4:	2b03      	cmp	r3, #3
 80099a6:	d101      	bne.n	80099ac <USBD_LL_IsoOUTIncomplete+0x1a>
  {
    if (pdev->pClass[pdev->classId]->IsoOUTIncomplete != NULL)
 80099a8:	6a53      	ldr	r3, [r2, #36]	@ 0x24
 80099aa:	b90b      	cbnz	r3, 80099b0 <USBD_LL_IsoOUTIncomplete+0x1e>
    {
      (void)pdev->pClass[pdev->classId]->IsoOUTIncomplete(pdev, epnum);
    }
  }

  return USBD_OK;
 80099ac:	2000      	movs	r0, #0
}
 80099ae:	bd08      	pop	{r3, pc}
      (void)pdev->pClass[pdev->classId]->IsoOUTIncomplete(pdev, epnum);
 80099b0:	4798      	blx	r3
 80099b2:	e7fb      	b.n	80099ac <USBD_LL_IsoOUTIncomplete+0x1a>
    return USBD_FAIL;
 80099b4:	2003      	movs	r0, #3
 80099b6:	e7fa      	b.n	80099ae <USBD_LL_IsoOUTIncomplete+0x1c>

080099b8 <USBD_LL_DevConnected>:
  * @brief  USBD_LL_DevConnected
  *         Handle device connection event
  * @param  pdev: device instance
  * @retval status
  */
USBD_StatusTypeDef USBD_LL_DevConnected(USBD_HandleTypeDef *pdev)
 80099b8:	2000      	movs	r0, #0
 80099ba:	4770      	bx	lr

080099bc <USBD_LL_DevDisconnected>:
USBD_StatusTypeDef USBD_LL_DevDisconnected(USBD_HandleTypeDef *pdev)
{
  USBD_StatusTypeDef   ret = USBD_OK;

  /* Free Class Resources */
  pdev->dev_state = USBD_STATE_DEFAULT;
 80099bc:	2201      	movs	r2, #1
{
 80099be:	b508      	push	{r3, lr}
  pdev->dev_state = USBD_STATE_DEFAULT;
 80099c0:	f880 229c 	strb.w	r2, [r0, #668]	@ 0x29c
        }
      }
    }
  }
#else
  if (pdev->pClass[0] != NULL)
 80099c4:	f8d0 22b8 	ldr.w	r2, [r0, #696]	@ 0x2b8
 80099c8:	b90a      	cbnz	r2, 80099ce <USBD_LL_DevDisconnected+0x12>
  USBD_StatusTypeDef   ret = USBD_OK;
 80099ca:	2000      	movs	r0, #0
    }
  }
#endif /* USE_USBD_COMPOSITE */

  return ret;
}
 80099cc:	bd08      	pop	{r3, pc}
    if (pdev->pClass[0]->DeInit(pdev, (uint8_t)pdev->dev_config) != 0U)
 80099ce:	6852      	ldr	r2, [r2, #4]
 80099d0:	7901      	ldrb	r1, [r0, #4]
 80099d2:	4790      	blx	r2
 80099d4:	2800      	cmp	r0, #0
 80099d6:	d0f8      	beq.n	80099ca <USBD_LL_DevDisconnected+0xe>
      ret = USBD_FAIL;
 80099d8:	2003      	movs	r0, #3
 80099da:	e7f7      	b.n	80099cc <USBD_LL_DevDisconnected+0x10>

080099dc <USBD_CoreFindIF>:
  UNUSED(pdev);
  UNUSED(index);

  return 0x00U;
#endif /* USE_USBD_COMPOSITE */
}
 80099dc:	2000      	movs	r0, #0
 80099de:	4770      	bx	lr

080099e0 <USBD_CoreFindEP>:
  *         return the class index relative to the selected endpoint
  * @param  pdev: device instance
  * @param  index : selected endpoint number
  * @retval index of the class using the selected endpoint number. 0xFF if no class found.
  */
uint8_t USBD_CoreFindEP(USBD_HandleTypeDef *pdev, uint8_t index)
 80099e0:	2000      	movs	r0, #0
 80099e2:	4770      	bx	lr

080099e4 <USBD_GetEpDesc>:
  * @param  pConfDesc:  pointer to Bos descriptor
  * @param  EpAddr:  endpoint address
  * @retval pointer to video endpoint descriptor
  */
void *USBD_GetEpDesc(uint8_t *pConfDesc, uint8_t EpAddr)
{
 80099e4:	b510      	push	{r4, lr}
  USBD_DescHeaderTypeDef *pdesc = (USBD_DescHeaderTypeDef *)(void *)pConfDesc;
  USBD_ConfigDescTypeDef *desc = (USBD_ConfigDescTypeDef *)(void *)pConfDesc;
  USBD_EpDescTypeDef *pEpDesc = NULL;
  uint16_t ptr;

  if (desc->wTotalLength > desc->bLength)
 80099e6:	8842      	ldrh	r2, [r0, #2]
 80099e8:	7803      	ldrb	r3, [r0, #0]
 80099ea:	429a      	cmp	r2, r3
 80099ec:	d801      	bhi.n	80099f2 <USBD_GetEpDesc+0xe>
  USBD_EpDescTypeDef *pEpDesc = NULL;
 80099ee:	2000      	movs	r0, #0
      }
    }
  }

  return (void *)pEpDesc;
}
 80099f0:	bd10      	pop	{r4, pc}
  */
USBD_DescHeaderTypeDef *USBD_GetNextDesc(uint8_t *pbuf, uint16_t *ptr)
{
  USBD_DescHeaderTypeDef *pnext = (USBD_DescHeaderTypeDef *)(void *)pbuf;

  *ptr += pnext->bLength;
 80099f2:	7804      	ldrb	r4, [r0, #0]
  pnext = (USBD_DescHeaderTypeDef *)(void *)(pbuf + pnext->bLength);
 80099f4:	4420      	add	r0, r4
  *ptr += pnext->bLength;
 80099f6:	4423      	add	r3, r4
      if (pdesc->bDescriptorType == USB_DESC_TYPE_ENDPOINT)
 80099f8:	7844      	ldrb	r4, [r0, #1]
 80099fa:	2c05      	cmp	r4, #5
  *ptr += pnext->bLength;
 80099fc:	b29b      	uxth	r3, r3
      if (pdesc->bDescriptorType == USB_DESC_TYPE_ENDPOINT)
 80099fe:	d1f4      	bne.n	80099ea <USBD_GetEpDesc+0x6>
        if (pEpDesc->bEndpointAddress == EpAddr)
 8009a00:	7884      	ldrb	r4, [r0, #2]
 8009a02:	428c      	cmp	r4, r1
 8009a04:	d1f1      	bne.n	80099ea <USBD_GetEpDesc+0x6>
 8009a06:	e7f3      	b.n	80099f0 <USBD_GetEpDesc+0xc>

08009a08 <USBD_CtlError.constprop.0>:
  *         Handle USB low level Error
  * @param  pdev: device instance
  * @param  req: usb request
  * @retval None
  */
void USBD_CtlError(USBD_HandleTypeDef *pdev, USBD_SetupReqTypedef *req)
 8009a08:	b510      	push	{r4, lr}
{
  UNUSED(req);

  (void)USBD_LL_StallEP(pdev, 0x80U);
 8009a0a:	2180      	movs	r1, #128	@ 0x80
void USBD_CtlError(USBD_HandleTypeDef *pdev, USBD_SetupReqTypedef *req)
 8009a0c:	4604      	mov	r4, r0
  (void)USBD_LL_StallEP(pdev, 0x80U);
 8009a0e:	f7f7 fff2 	bl	80019f6 <USBD_LL_StallEP>
  (void)USBD_LL_StallEP(pdev, 0U);
 8009a12:	4620      	mov	r0, r4
 8009a14:	2100      	movs	r1, #0
}
 8009a16:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  (void)USBD_LL_StallEP(pdev, 0U);
 8009a1a:	f7f7 bfec 	b.w	80019f6 <USBD_LL_StallEP>
	...

08009a20 <USBD_StdDevReq>:
{
 8009a20:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8009a22:	780b      	ldrb	r3, [r1, #0]
 8009a24:	f003 0360 	and.w	r3, r3, #96	@ 0x60
  switch (req->bmRequest & USB_REQ_TYPE_MASK)
 8009a28:	2b20      	cmp	r3, #32
{
 8009a2a:	4604      	mov	r4, r0
 8009a2c:	460d      	mov	r5, r1
  switch (req->bmRequest & USB_REQ_TYPE_MASK)
 8009a2e:	d009      	beq.n	8009a44 <USBD_StdDevReq+0x24>
 8009a30:	2b40      	cmp	r3, #64	@ 0x40
 8009a32:	d007      	beq.n	8009a44 <USBD_StdDevReq+0x24>
 8009a34:	b193      	cbz	r3, 8009a5c <USBD_StdDevReq+0x3c>
      USBD_CtlError(pdev, req);
 8009a36:	4620      	mov	r0, r4
 8009a38:	f7ff ffe6 	bl	8009a08 <USBD_CtlError.constprop.0>
  USBD_StatusTypeDef ret = USBD_OK;
 8009a3c:	2500      	movs	r5, #0
}
 8009a3e:	4628      	mov	r0, r5
 8009a40:	b002      	add	sp, #8
 8009a42:	bd70      	pop	{r4, r5, r6, pc}
      ret = (USBD_StatusTypeDef)pdev->pClass[pdev->classId]->Setup(pdev, req);
 8009a44:	f8d4 32d4 	ldr.w	r3, [r4, #724]	@ 0x2d4
 8009a48:	33ae      	adds	r3, #174	@ 0xae
 8009a4a:	4629      	mov	r1, r5
 8009a4c:	f854 3023 	ldr.w	r3, [r4, r3, lsl #2]
 8009a50:	689b      	ldr	r3, [r3, #8]
 8009a52:	4620      	mov	r0, r4
}
 8009a54:	b002      	add	sp, #8
 8009a56:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
      ret = (USBD_StatusTypeDef)pdev->pClass[pdev->classId]->Setup(pdev, req);
 8009a5a:	4718      	bx	r3
      switch (req->bRequest)
 8009a5c:	784b      	ldrb	r3, [r1, #1]
 8009a5e:	2b09      	cmp	r3, #9
 8009a60:	d8e9      	bhi.n	8009a36 <USBD_StdDevReq+0x16>
 8009a62:	a201      	add	r2, pc, #4	@ (adr r2, 8009a68 <USBD_StdDevReq+0x48>)
 8009a64:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8009a68:	08009c89 	.word	0x08009c89
 8009a6c:	08009ccd 	.word	0x08009ccd
 8009a70:	08009a37 	.word	0x08009a37
 8009a74:	08009cb1 	.word	0x08009cb1
 8009a78:	08009a37 	.word	0x08009a37
 8009a7c:	08009b83 	.word	0x08009b83
 8009a80:	08009a91 	.word	0x08009a91
 8009a84:	08009a37 	.word	0x08009a37
 8009a88:	08009c5d 	.word	0x08009c5d
 8009a8c:	08009bc5 	.word	0x08009bc5
  uint16_t len = 0U;
 8009a90:	2300      	movs	r3, #0
 8009a92:	f8ad 3006 	strh.w	r3, [sp, #6]
  switch (req->wValue >> 8)
 8009a96:	884b      	ldrh	r3, [r1, #2]
 8009a98:	0a1a      	lsrs	r2, r3, #8
 8009a9a:	3a01      	subs	r2, #1
 8009a9c:	2a06      	cmp	r2, #6
 8009a9e:	d8ca      	bhi.n	8009a36 <USBD_StdDevReq+0x16>
 8009aa0:	a101      	add	r1, pc, #4	@ (adr r1, 8009aa8 <USBD_StdDevReq+0x88>)
 8009aa2:	f851 f022 	ldr.w	pc, [r1, r2, lsl #2]
 8009aa6:	bf00      	nop
 8009aa8:	08009ac5 	.word	0x08009ac5
 8009aac:	08009af7 	.word	0x08009af7
 8009ab0:	08009b11 	.word	0x08009b11
 8009ab4:	08009a37 	.word	0x08009a37
 8009ab8:	08009a37 	.word	0x08009a37
 8009abc:	08009b55 	.word	0x08009b55
 8009ac0:	08009b6b 	.word	0x08009b6b
      pbuf = pdev->pDesc->GetDeviceDescriptor(pdev->dev_speed, &len);
 8009ac4:	f8d0 32b4 	ldr.w	r3, [r0, #692]	@ 0x2b4
 8009ac8:	681b      	ldr	r3, [r3, #0]
            pbuf = pdev->pDesc->GetInterfaceStrDescriptor(pdev->dev_speed, &len);
 8009aca:	7c20      	ldrb	r0, [r4, #16]
 8009acc:	f10d 0106 	add.w	r1, sp, #6
 8009ad0:	4798      	blx	r3
  if (req->wLength != 0U)
 8009ad2:	88ea      	ldrh	r2, [r5, #6]
 8009ad4:	2a00      	cmp	r2, #0
 8009ad6:	f000 80a4 	beq.w	8009c22 <USBD_StdDevReq+0x202>
    if (len != 0U)
 8009ada:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8009ade:	2b00      	cmp	r3, #0
 8009ae0:	d0a9      	beq.n	8009a36 <USBD_StdDevReq+0x16>
      len = MIN(len, req->wLength);
 8009ae2:	429a      	cmp	r2, r3
 8009ae4:	bf28      	it	cs
 8009ae6:	461a      	movcs	r2, r3
 8009ae8:	f8ad 2006 	strh.w	r2, [sp, #6]
      (void)USBD_CtlSendData(pdev, pbuf, len);
 8009aec:	4601      	mov	r1, r0
      (void)USBD_CtlSendData(pdev, (uint8_t *)&pdev->dev_config_status, 2U);
 8009aee:	4620      	mov	r0, r4
 8009af0:	f000 fafa 	bl	800a0e8 <USBD_CtlSendData>
      break;
 8009af4:	e7a2      	b.n	8009a3c <USBD_StdDevReq+0x1c>
      if (pdev->dev_speed == USBD_SPEED_HIGH)
 8009af6:	7c02      	ldrb	r2, [r0, #16]
          pbuf = (uint8_t *)pdev->pClass[0]->GetHSConfigDescriptor(&len);
 8009af8:	f8d0 32b8 	ldr.w	r3, [r0, #696]	@ 0x2b8
      if (pdev->dev_speed == USBD_SPEED_HIGH)
 8009afc:	b932      	cbnz	r2, 8009b0c <USBD_StdDevReq+0xec>
          pbuf = (uint8_t *)pdev->pClass[0]->GetHSConfigDescriptor(&len);
 8009afe:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
          pbuf = (uint8_t *)pdev->pClass[0]->GetFSConfigDescriptor(&len);
 8009b00:	f10d 0006 	add.w	r0, sp, #6
 8009b04:	4798      	blx	r3
        pbuf[1] = USB_DESC_TYPE_CONFIGURATION;
 8009b06:	2302      	movs	r3, #2
        pbuf[1] = USB_DESC_TYPE_OTHER_SPEED_CONFIGURATION;
 8009b08:	7043      	strb	r3, [r0, #1]
  if (err != 0U)
 8009b0a:	e7e2      	b.n	8009ad2 <USBD_StdDevReq+0xb2>
          pbuf = (uint8_t *)pdev->pClass[0]->GetFSConfigDescriptor(&len);
 8009b0c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8009b0e:	e7f7      	b.n	8009b00 <USBD_StdDevReq+0xe0>
      switch ((uint8_t)(req->wValue))
 8009b10:	b2db      	uxtb	r3, r3
 8009b12:	2b05      	cmp	r3, #5
 8009b14:	d88f      	bhi.n	8009a36 <USBD_StdDevReq+0x16>
 8009b16:	e8df f003 	tbb	[pc, r3]
 8009b1a:	0903      	.short	0x0903
 8009b1c:	1915110d 	.word	0x1915110d
          if (pdev->pDesc->GetLangIDStrDescriptor != NULL)
 8009b20:	f8d0 32b4 	ldr.w	r3, [r0, #692]	@ 0x2b4
 8009b24:	685b      	ldr	r3, [r3, #4]
          if (pdev->pDesc->GetInterfaceStrDescriptor != NULL)
 8009b26:	2b00      	cmp	r3, #0
 8009b28:	d1cf      	bne.n	8009aca <USBD_StdDevReq+0xaa>
 8009b2a:	e784      	b.n	8009a36 <USBD_StdDevReq+0x16>
          if (pdev->pDesc->GetManufacturerStrDescriptor != NULL)
 8009b2c:	f8d0 32b4 	ldr.w	r3, [r0, #692]	@ 0x2b4
 8009b30:	689b      	ldr	r3, [r3, #8]
 8009b32:	e7f8      	b.n	8009b26 <USBD_StdDevReq+0x106>
          if (pdev->pDesc->GetProductStrDescriptor != NULL)
 8009b34:	f8d0 32b4 	ldr.w	r3, [r0, #692]	@ 0x2b4
 8009b38:	68db      	ldr	r3, [r3, #12]
 8009b3a:	e7f4      	b.n	8009b26 <USBD_StdDevReq+0x106>
          if (pdev->pDesc->GetSerialStrDescriptor != NULL)
 8009b3c:	f8d0 32b4 	ldr.w	r3, [r0, #692]	@ 0x2b4
 8009b40:	691b      	ldr	r3, [r3, #16]
 8009b42:	e7f0      	b.n	8009b26 <USBD_StdDevReq+0x106>
          if (pdev->pDesc->GetConfigurationStrDescriptor != NULL)
 8009b44:	f8d0 32b4 	ldr.w	r3, [r0, #692]	@ 0x2b4
 8009b48:	695b      	ldr	r3, [r3, #20]
 8009b4a:	e7ec      	b.n	8009b26 <USBD_StdDevReq+0x106>
          if (pdev->pDesc->GetInterfaceStrDescriptor != NULL)
 8009b4c:	f8d0 32b4 	ldr.w	r3, [r0, #692]	@ 0x2b4
 8009b50:	699b      	ldr	r3, [r3, #24]
 8009b52:	e7e8      	b.n	8009b26 <USBD_StdDevReq+0x106>
      if (pdev->dev_speed == USBD_SPEED_HIGH)
 8009b54:	7c03      	ldrb	r3, [r0, #16]
 8009b56:	2b00      	cmp	r3, #0
 8009b58:	f47f af6d 	bne.w	8009a36 <USBD_StdDevReq+0x16>
          pbuf = (uint8_t *)pdev->pClass[0]->GetDeviceQualifierDescriptor(&len);
 8009b5c:	f8d0 32b8 	ldr.w	r3, [r0, #696]	@ 0x2b8
 8009b60:	f10d 0006 	add.w	r0, sp, #6
 8009b64:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8009b66:	4798      	blx	r3
  if (err != 0U)
 8009b68:	e7b3      	b.n	8009ad2 <USBD_StdDevReq+0xb2>
      if (pdev->dev_speed == USBD_SPEED_HIGH)
 8009b6a:	7c03      	ldrb	r3, [r0, #16]
 8009b6c:	2b00      	cmp	r3, #0
 8009b6e:	f47f af62 	bne.w	8009a36 <USBD_StdDevReq+0x16>
          pbuf = (uint8_t *)pdev->pClass[0]->GetOtherSpeedConfigDescriptor(&len);
 8009b72:	f8d0 32b8 	ldr.w	r3, [r0, #696]	@ 0x2b8
 8009b76:	f10d 0006 	add.w	r0, sp, #6
 8009b7a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8009b7c:	4798      	blx	r3
        pbuf[1] = USB_DESC_TYPE_OTHER_SPEED_CONFIGURATION;
 8009b7e:	2307      	movs	r3, #7
 8009b80:	e7c2      	b.n	8009b08 <USBD_StdDevReq+0xe8>
  if ((req->wIndex == 0U) && (req->wLength == 0U) && (req->wValue < 128U))
 8009b82:	888b      	ldrh	r3, [r1, #4]
 8009b84:	2b00      	cmp	r3, #0
 8009b86:	f47f af56 	bne.w	8009a36 <USBD_StdDevReq+0x16>
 8009b8a:	88cb      	ldrh	r3, [r1, #6]
 8009b8c:	2b00      	cmp	r3, #0
 8009b8e:	f47f af52 	bne.w	8009a36 <USBD_StdDevReq+0x16>
 8009b92:	884d      	ldrh	r5, [r1, #2]
 8009b94:	2d7f      	cmp	r5, #127	@ 0x7f
 8009b96:	f63f af4e 	bhi.w	8009a36 <USBD_StdDevReq+0x16>
    if (pdev->dev_state == USBD_STATE_CONFIGURED)
 8009b9a:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
 8009b9e:	2b03      	cmp	r3, #3
 8009ba0:	f43f af49 	beq.w	8009a36 <USBD_StdDevReq+0x16>
    dev_addr = (uint8_t)(req->wValue) & 0x7FU;
 8009ba4:	b2ed      	uxtb	r5, r5
      pdev->dev_address = dev_addr;
 8009ba6:	f880 529e 	strb.w	r5, [r0, #670]	@ 0x29e
      (void)USBD_LL_SetUSBAddress(pdev, dev_addr);
 8009baa:	4629      	mov	r1, r5
 8009bac:	f7f7 ff35 	bl	8001a1a <USBD_LL_SetUSBAddress>
      (void)USBD_CtlSendStatus(pdev);
 8009bb0:	4620      	mov	r0, r4
 8009bb2:	f000 fab6 	bl	800a122 <USBD_CtlSendStatus>
      if (dev_addr != 0U)
 8009bb6:	b11d      	cbz	r5, 8009bc0 <USBD_StdDevReq+0x1a0>
        pdev->dev_state = USBD_STATE_ADDRESSED;
 8009bb8:	2302      	movs	r3, #2
          pdev->dev_state = USBD_STATE_CONFIGURED;
 8009bba:	f884 329c 	strb.w	r3, [r4, #668]	@ 0x29c
 8009bbe:	e73d      	b.n	8009a3c <USBD_StdDevReq+0x1c>
        pdev->dev_state = USBD_STATE_DEFAULT;
 8009bc0:	2301      	movs	r3, #1
 8009bc2:	e7fa      	b.n	8009bba <USBD_StdDevReq+0x19a>
  cfgidx = (uint8_t)(req->wValue);
 8009bc4:	7889      	ldrb	r1, [r1, #2]
 8009bc6:	4d47      	ldr	r5, [pc, #284]	@ (8009ce4 <USBD_StdDevReq+0x2c4>)
  if (cfgidx > USBD_MAX_NUM_CONFIGURATION)
 8009bc8:	2901      	cmp	r1, #1
  cfgidx = (uint8_t)(req->wValue);
 8009bca:	7029      	strb	r1, [r5, #0]
  if (cfgidx > USBD_MAX_NUM_CONFIGURATION)
 8009bcc:	d903      	bls.n	8009bd6 <USBD_StdDevReq+0x1b6>
    USBD_CtlError(pdev, req);
 8009bce:	f7ff ff1b 	bl	8009a08 <USBD_CtlError.constprop.0>
    return USBD_FAIL;
 8009bd2:	2503      	movs	r5, #3
 8009bd4:	e733      	b.n	8009a3e <USBD_StdDevReq+0x1e>
  switch (pdev->dev_state)
 8009bd6:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
 8009bda:	2b02      	cmp	r3, #2
 8009bdc:	b2de      	uxtb	r6, r3
 8009bde:	d008      	beq.n	8009bf2 <USBD_StdDevReq+0x1d2>
 8009be0:	2e03      	cmp	r6, #3
 8009be2:	d017      	beq.n	8009c14 <USBD_StdDevReq+0x1f4>
      USBD_CtlError(pdev, req);
 8009be4:	f7ff ff10 	bl	8009a08 <USBD_CtlError.constprop.0>
      (void)USBD_ClrClassConfig(pdev, cfgidx);
 8009be8:	7829      	ldrb	r1, [r5, #0]
 8009bea:	4620      	mov	r0, r4
 8009bec:	f7ff fda5 	bl	800973a <USBD_ClrClassConfig>
      break;
 8009bf0:	e7ef      	b.n	8009bd2 <USBD_StdDevReq+0x1b2>
      if (cfgidx != 0U)
 8009bf2:	b1b1      	cbz	r1, 8009c22 <USBD_StdDevReq+0x202>
        pdev->dev_config = cfgidx;
 8009bf4:	2101      	movs	r1, #1
 8009bf6:	6041      	str	r1, [r0, #4]
        ret = USBD_SetClassConfig(pdev, cfgidx);
 8009bf8:	f7ff fd98 	bl	800972c <USBD_SetClassConfig>
        if (ret != USBD_OK)
 8009bfc:	4605      	mov	r5, r0
          USBD_CtlError(pdev, req);
 8009bfe:	4620      	mov	r0, r4
        if (ret != USBD_OK)
 8009c00:	b125      	cbz	r5, 8009c0c <USBD_StdDevReq+0x1ec>
          USBD_CtlError(pdev, req);
 8009c02:	f7ff ff01 	bl	8009a08 <USBD_CtlError.constprop.0>
          pdev->dev_state = USBD_STATE_ADDRESSED;
 8009c06:	f884 629c 	strb.w	r6, [r4, #668]	@ 0x29c
 8009c0a:	e718      	b.n	8009a3e <USBD_StdDevReq+0x1e>
          (void)USBD_CtlSendStatus(pdev);
 8009c0c:	f000 fa89 	bl	800a122 <USBD_CtlSendStatus>
          pdev->dev_state = USBD_STATE_CONFIGURED;
 8009c10:	2303      	movs	r3, #3
 8009c12:	e7d2      	b.n	8009bba <USBD_StdDevReq+0x19a>
      if (cfgidx == 0U)
 8009c14:	b949      	cbnz	r1, 8009c2a <USBD_StdDevReq+0x20a>
        pdev->dev_state = USBD_STATE_ADDRESSED;
 8009c16:	2302      	movs	r3, #2
 8009c18:	f880 329c 	strb.w	r3, [r0, #668]	@ 0x29c
        pdev->dev_config = cfgidx;
 8009c1c:	6041      	str	r1, [r0, #4]
        (void)USBD_ClrClassConfig(pdev, cfgidx);
 8009c1e:	f7ff fd8c 	bl	800973a <USBD_ClrClassConfig>
        (void)USBD_CtlSendStatus(pdev);
 8009c22:	4620      	mov	r0, r4
 8009c24:	f000 fa7d 	bl	800a122 <USBD_CtlSendStatus>
 8009c28:	e708      	b.n	8009a3c <USBD_StdDevReq+0x1c>
      else if (cfgidx != pdev->dev_config)
 8009c2a:	6841      	ldr	r1, [r0, #4]
 8009c2c:	2901      	cmp	r1, #1
 8009c2e:	d0f8      	beq.n	8009c22 <USBD_StdDevReq+0x202>
        (void)USBD_ClrClassConfig(pdev, (uint8_t)pdev->dev_config);
 8009c30:	b2c9      	uxtb	r1, r1
 8009c32:	f7ff fd82 	bl	800973a <USBD_ClrClassConfig>
        pdev->dev_config = cfgidx;
 8009c36:	7829      	ldrb	r1, [r5, #0]
 8009c38:	6061      	str	r1, [r4, #4]
        ret = USBD_SetClassConfig(pdev, cfgidx);
 8009c3a:	4620      	mov	r0, r4
 8009c3c:	f7ff fd76 	bl	800972c <USBD_SetClassConfig>
        if (ret != USBD_OK)
 8009c40:	4605      	mov	r5, r0
 8009c42:	2800      	cmp	r0, #0
 8009c44:	d0ed      	beq.n	8009c22 <USBD_StdDevReq+0x202>
          USBD_CtlError(pdev, req);
 8009c46:	4620      	mov	r0, r4
 8009c48:	f7ff fede 	bl	8009a08 <USBD_CtlError.constprop.0>
          (void)USBD_ClrClassConfig(pdev, (uint8_t)pdev->dev_config);
 8009c4c:	7921      	ldrb	r1, [r4, #4]
 8009c4e:	4620      	mov	r0, r4
 8009c50:	f7ff fd73 	bl	800973a <USBD_ClrClassConfig>
          pdev->dev_state = USBD_STATE_ADDRESSED;
 8009c54:	2302      	movs	r3, #2
 8009c56:	f884 329c 	strb.w	r3, [r4, #668]	@ 0x29c
 8009c5a:	e6f0      	b.n	8009a3e <USBD_StdDevReq+0x1e>
  if (req->wLength != 1U)
 8009c5c:	88ca      	ldrh	r2, [r1, #6]
 8009c5e:	2a01      	cmp	r2, #1
 8009c60:	f47f aee9 	bne.w	8009a36 <USBD_StdDevReq+0x16>
    switch (pdev->dev_state)
 8009c64:	f890 129c 	ldrb.w	r1, [r0, #668]	@ 0x29c
 8009c68:	2902      	cmp	r1, #2
 8009c6a:	b2cb      	uxtb	r3, r1
 8009c6c:	d807      	bhi.n	8009c7e <USBD_StdDevReq+0x25e>
 8009c6e:	2b00      	cmp	r3, #0
 8009c70:	f43f aee1 	beq.w	8009a36 <USBD_StdDevReq+0x16>
        pdev->dev_default_config = 0U;
 8009c74:	4601      	mov	r1, r0
 8009c76:	2300      	movs	r3, #0
 8009c78:	f841 3f08 	str.w	r3, [r1, #8]!
        (void)USBD_CtlSendData(pdev, (uint8_t *)&pdev->dev_default_config, 1U);
 8009c7c:	e737      	b.n	8009aee <USBD_StdDevReq+0xce>
    switch (pdev->dev_state)
 8009c7e:	2b03      	cmp	r3, #3
 8009c80:	f47f aed9 	bne.w	8009a36 <USBD_StdDevReq+0x16>
        (void)USBD_CtlSendData(pdev, (uint8_t *)&pdev->dev_config, 1U);
 8009c84:	1d01      	adds	r1, r0, #4
 8009c86:	e732      	b.n	8009aee <USBD_StdDevReq+0xce>
  switch (pdev->dev_state)
 8009c88:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
 8009c8c:	3b01      	subs	r3, #1
 8009c8e:	2b02      	cmp	r3, #2
 8009c90:	f63f aed1 	bhi.w	8009a36 <USBD_StdDevReq+0x16>
      if (req->wLength != 0x2U)
 8009c94:	88ca      	ldrh	r2, [r1, #6]
 8009c96:	2a02      	cmp	r2, #2
 8009c98:	f47f aecd 	bne.w	8009a36 <USBD_StdDevReq+0x16>
      if (pdev->dev_remote_wakeup != 0U)
 8009c9c:	f8d0 32a4 	ldr.w	r3, [r0, #676]	@ 0x2a4
 8009ca0:	4601      	mov	r1, r0
        pdev->dev_config_status |= USB_CONFIG_REMOTE_WAKEUP;
 8009ca2:	2b00      	cmp	r3, #0
 8009ca4:	bf0c      	ite	eq
 8009ca6:	2301      	moveq	r3, #1
 8009ca8:	2303      	movne	r3, #3
 8009caa:	f841 3f0c 	str.w	r3, [r1, #12]!
 8009cae:	e71e      	b.n	8009aee <USBD_StdDevReq+0xce>
  if (req->wValue == USB_FEATURE_REMOTE_WAKEUP)
 8009cb0:	884b      	ldrh	r3, [r1, #2]
 8009cb2:	2b01      	cmp	r3, #1
 8009cb4:	d102      	bne.n	8009cbc <USBD_StdDevReq+0x29c>
        pdev->dev_remote_wakeup = 0U;
 8009cb6:	f8c4 32a4 	str.w	r3, [r4, #676]	@ 0x2a4
 8009cba:	e7b2      	b.n	8009c22 <USBD_StdDevReq+0x202>
  else if (req->wValue == USB_FEATURE_TEST_MODE)
 8009cbc:	2b02      	cmp	r3, #2
 8009cbe:	f47f aeba 	bne.w	8009a36 <USBD_StdDevReq+0x16>
    pdev->dev_test_mode = (uint8_t)(req->wIndex >> 8);
 8009cc2:	888b      	ldrh	r3, [r1, #4]
 8009cc4:	0a1b      	lsrs	r3, r3, #8
 8009cc6:	f880 32a0 	strb.w	r3, [r0, #672]	@ 0x2a0
    (void)USBD_CtlSendStatus(pdev);
 8009cca:	e7aa      	b.n	8009c22 <USBD_StdDevReq+0x202>
  switch (pdev->dev_state)
 8009ccc:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
 8009cd0:	3b01      	subs	r3, #1
 8009cd2:	2b02      	cmp	r3, #2
 8009cd4:	f63f aeaf 	bhi.w	8009a36 <USBD_StdDevReq+0x16>
      if (req->wValue == USB_FEATURE_REMOTE_WAKEUP)
 8009cd8:	884b      	ldrh	r3, [r1, #2]
 8009cda:	2b01      	cmp	r3, #1
 8009cdc:	f47f aeae 	bne.w	8009a3c <USBD_StdDevReq+0x1c>
        pdev->dev_remote_wakeup = 0U;
 8009ce0:	2300      	movs	r3, #0
 8009ce2:	e7e8      	b.n	8009cb6 <USBD_StdDevReq+0x296>
 8009ce4:	20014034 	.word	0x20014034

08009ce8 <USBD_StdItfReq>:
{
 8009ce8:	b570      	push	{r4, r5, r6, lr}
  switch (req->bmRequest & USB_REQ_TYPE_MASK)
 8009cea:	780b      	ldrb	r3, [r1, #0]
 8009cec:	f003 0260 	and.w	r2, r3, #96	@ 0x60
 8009cf0:	065b      	lsls	r3, r3, #25
{
 8009cf2:	4604      	mov	r4, r0
 8009cf4:	460e      	mov	r6, r1
  switch (req->bmRequest & USB_REQ_TYPE_MASK)
 8009cf6:	d501      	bpl.n	8009cfc <USBD_StdItfReq+0x14>
 8009cf8:	2a40      	cmp	r2, #64	@ 0x40
 8009cfa:	d11f      	bne.n	8009d3c <USBD_StdItfReq+0x54>
      switch (pdev->dev_state)
 8009cfc:	f894 329c 	ldrb.w	r3, [r4, #668]	@ 0x29c
 8009d00:	3b01      	subs	r3, #1
 8009d02:	2b02      	cmp	r3, #2
 8009d04:	d81a      	bhi.n	8009d3c <USBD_StdItfReq+0x54>
          if (LOBYTE(req->wIndex) <= USBD_MAX_NUM_INTERFACES)
 8009d06:	7931      	ldrb	r1, [r6, #4]
 8009d08:	2901      	cmp	r1, #1
            idx = USBD_CoreFindIF(pdev, LOBYTE(req->wIndex));
 8009d0a:	4620      	mov	r0, r4
          if (LOBYTE(req->wIndex) <= USBD_MAX_NUM_INTERFACES)
 8009d0c:	d817      	bhi.n	8009d3e <USBD_StdItfReq+0x56>
            idx = USBD_CoreFindIF(pdev, LOBYTE(req->wIndex));
 8009d0e:	f7ff fe65 	bl	80099dc <USBD_CoreFindIF>
            if (((uint8_t)idx != 0xFFU) && (idx < USBD_MAX_SUPPORTED_CLASS))
 8009d12:	b988      	cbnz	r0, 8009d38 <USBD_StdItfReq+0x50>
              if (pdev->pClass[idx]->Setup != NULL)
 8009d14:	f8d4 32b8 	ldr.w	r3, [r4, #696]	@ 0x2b8
 8009d18:	689b      	ldr	r3, [r3, #8]
 8009d1a:	b16b      	cbz	r3, 8009d38 <USBD_StdItfReq+0x50>
                pdev->classId = idx;
 8009d1c:	f8c4 02d4 	str.w	r0, [r4, #724]	@ 0x2d4
                ret = (USBD_StatusTypeDef)(pdev->pClass[idx]->Setup(pdev, req));
 8009d20:	4631      	mov	r1, r6
 8009d22:	4620      	mov	r0, r4
 8009d24:	4798      	blx	r3
 8009d26:	4605      	mov	r5, r0
            if ((req->wLength == 0U) && (ret == USBD_OK))
 8009d28:	88f3      	ldrh	r3, [r6, #6]
 8009d2a:	b91b      	cbnz	r3, 8009d34 <USBD_StdItfReq+0x4c>
 8009d2c:	b915      	cbnz	r5, 8009d34 <USBD_StdItfReq+0x4c>
              (void)USBD_CtlSendStatus(pdev);
 8009d2e:	4620      	mov	r0, r4
 8009d30:	f000 f9f7 	bl	800a122 <USBD_CtlSendStatus>
}
 8009d34:	4628      	mov	r0, r5
 8009d36:	bd70      	pop	{r4, r5, r6, pc}
                ret = USBD_FAIL;
 8009d38:	2503      	movs	r5, #3
 8009d3a:	e7f5      	b.n	8009d28 <USBD_StdItfReq+0x40>
          USBD_CtlError(pdev, req);
 8009d3c:	4620      	mov	r0, r4
            USBD_CtlError(pdev, req);
 8009d3e:	f7ff fe63 	bl	8009a08 <USBD_CtlError.constprop.0>
  USBD_StatusTypeDef ret = USBD_OK;
 8009d42:	2500      	movs	r5, #0
 8009d44:	e7f6      	b.n	8009d34 <USBD_StdItfReq+0x4c>

08009d46 <USBD_StdEPReq>:
{
 8009d46:	b570      	push	{r4, r5, r6, lr}
 8009d48:	780b      	ldrb	r3, [r1, #0]
  ep_addr = LOBYTE(req->wIndex);
 8009d4a:	888a      	ldrh	r2, [r1, #4]
 8009d4c:	790d      	ldrb	r5, [r1, #4]
 8009d4e:	f003 0360 	and.w	r3, r3, #96	@ 0x60
  switch (req->bmRequest & USB_REQ_TYPE_MASK)
 8009d52:	2b20      	cmp	r3, #32
{
 8009d54:	4604      	mov	r4, r0
 8009d56:	460e      	mov	r6, r1
  switch (req->bmRequest & USB_REQ_TYPE_MASK)
 8009d58:	d058      	beq.n	8009e0c <USBD_StdEPReq+0xc6>
 8009d5a:	2b40      	cmp	r3, #64	@ 0x40
 8009d5c:	d056      	beq.n	8009e0c <USBD_StdEPReq+0xc6>
 8009d5e:	b11b      	cbz	r3, 8009d68 <USBD_StdEPReq+0x22>
              USBD_CtlError(pdev, req);
 8009d60:	4620      	mov	r0, r4
 8009d62:	f7ff fe51 	bl	8009a08 <USBD_CtlError.constprop.0>
              break;
 8009d66:	e03d      	b.n	8009de4 <USBD_StdEPReq+0x9e>
      switch (req->bRequest)
 8009d68:	784b      	ldrb	r3, [r1, #1]
 8009d6a:	2b01      	cmp	r3, #1
 8009d6c:	d03c      	beq.n	8009de8 <USBD_StdEPReq+0xa2>
 8009d6e:	2b03      	cmp	r3, #3
 8009d70:	d025      	beq.n	8009dbe <USBD_StdEPReq+0x78>
 8009d72:	2b00      	cmp	r3, #0
 8009d74:	d1f4      	bne.n	8009d60 <USBD_StdEPReq+0x1a>
          switch (pdev->dev_state)
 8009d76:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
 8009d7a:	2b02      	cmp	r3, #2
 8009d7c:	b2d9      	uxtb	r1, r3
 8009d7e:	d061      	beq.n	8009e44 <USBD_StdEPReq+0xfe>
 8009d80:	2903      	cmp	r1, #3
 8009d82:	d1ed      	bne.n	8009d60 <USBD_StdEPReq+0x1a>
                if (pdev->ep_in[ep_addr & 0xFU].is_used == 0U)
 8009d84:	f005 030f 	and.w	r3, r5, #15
              if ((ep_addr & 0x80U) == 0x80U)
 8009d88:	f012 0f80 	tst.w	r2, #128	@ 0x80
 8009d8c:	f04f 0214 	mov.w	r2, #20
                if (pdev->ep_in[ep_addr & 0xFU].is_used == 0U)
 8009d90:	fb02 0303 	mla	r3, r2, r3, r0
              if ((ep_addr & 0x80U) == 0x80U)
 8009d94:	d065      	beq.n	8009e62 <USBD_StdEPReq+0x11c>
                if (pdev->ep_in[ep_addr & 0xFU].is_used == 0U)
 8009d96:	8c9b      	ldrh	r3, [r3, #36]	@ 0x24
 8009d98:	2b00      	cmp	r3, #0
 8009d9a:	d0e1      	beq.n	8009d60 <USBD_StdEPReq+0x1a>
              pep = ((ep_addr & 0x80U) == 0x80U) ? &pdev->ep_in[ep_addr & 0x7FU] : \
 8009d9c:	f005 067f 	and.w	r6, r5, #127	@ 0x7f
 8009da0:	3601      	adds	r6, #1
 8009da2:	eb06 0686 	add.w	r6, r6, r6, lsl #2
              if ((ep_addr == 0x00U) || (ep_addr == 0x80U))
 8009da6:	2d80      	cmp	r5, #128	@ 0x80
              pep = ((ep_addr & 0x80U) == 0x80U) ? &pdev->ep_in[ep_addr & 0x7FU] : \
 8009da8:	eb00 0686 	add.w	r6, r0, r6, lsl #2
              if ((ep_addr == 0x00U) || (ep_addr == 0x80U))
 8009dac:	d065      	beq.n	8009e7a <USBD_StdEPReq+0x134>
              else if (USBD_LL_IsStallEP(pdev, ep_addr) != 0U)
 8009dae:	4629      	mov	r1, r5
 8009db0:	4620      	mov	r0, r4
 8009db2:	f7f7 fde5 	bl	8001980 <USBD_LL_IsStallEP>
 8009db6:	2800      	cmp	r0, #0
 8009db8:	d064      	beq.n	8009e84 <USBD_StdEPReq+0x13e>
                pep->status = 0x0001U;
 8009dba:	2301      	movs	r3, #1
 8009dbc:	e05e      	b.n	8009e7c <USBD_StdEPReq+0x136>
          switch (pdev->dev_state)
 8009dbe:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
 8009dc2:	2b02      	cmp	r3, #2
 8009dc4:	b2da      	uxtb	r2, r3
 8009dc6:	d033      	beq.n	8009e30 <USBD_StdEPReq+0xea>
 8009dc8:	2a03      	cmp	r2, #3
 8009dca:	d1c9      	bne.n	8009d60 <USBD_StdEPReq+0x1a>
              if (req->wValue == USB_FEATURE_EP_HALT)
 8009dcc:	884b      	ldrh	r3, [r1, #2]
 8009dce:	b933      	cbnz	r3, 8009dde <USBD_StdEPReq+0x98>
                if ((ep_addr != 0x00U) && (ep_addr != 0x80U) && (req->wLength == 0x00U))
 8009dd0:	0669      	lsls	r1, r5, #25
 8009dd2:	d004      	beq.n	8009dde <USBD_StdEPReq+0x98>
 8009dd4:	88f3      	ldrh	r3, [r6, #6]
 8009dd6:	b913      	cbnz	r3, 8009dde <USBD_StdEPReq+0x98>
                  (void)USBD_LL_StallEP(pdev, ep_addr);
 8009dd8:	4629      	mov	r1, r5
 8009dda:	f7f7 fe0c 	bl	80019f6 <USBD_LL_StallEP>
              (void)USBD_CtlSendStatus(pdev);
 8009dde:	4620      	mov	r0, r4
 8009de0:	f000 f99f 	bl	800a122 <USBD_CtlSendStatus>
}
 8009de4:	2000      	movs	r0, #0
 8009de6:	bd70      	pop	{r4, r5, r6, pc}
          switch (pdev->dev_state)
 8009de8:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
 8009dec:	2b02      	cmp	r3, #2
 8009dee:	b2da      	uxtb	r2, r3
 8009df0:	d01e      	beq.n	8009e30 <USBD_StdEPReq+0xea>
 8009df2:	2a03      	cmp	r2, #3
 8009df4:	d1b4      	bne.n	8009d60 <USBD_StdEPReq+0x1a>
              if (req->wValue == USB_FEATURE_EP_HALT)
 8009df6:	884b      	ldrh	r3, [r1, #2]
 8009df8:	2b00      	cmp	r3, #0
 8009dfa:	d1f3      	bne.n	8009de4 <USBD_StdEPReq+0x9e>
                if ((ep_addr & 0x7FU) != 0x00U)
 8009dfc:	066b      	lsls	r3, r5, #25
 8009dfe:	d002      	beq.n	8009e06 <USBD_StdEPReq+0xc0>
                  (void)USBD_LL_ClearStallEP(pdev, ep_addr);
 8009e00:	4629      	mov	r1, r5
 8009e02:	f7f7 fe01 	bl	8001a08 <USBD_LL_ClearStallEP>
                (void)USBD_CtlSendStatus(pdev);
 8009e06:	4620      	mov	r0, r4
 8009e08:	f000 f98b 	bl	800a122 <USBD_CtlSendStatus>
                idx = USBD_CoreFindEP(pdev, ep_addr);
 8009e0c:	4629      	mov	r1, r5
 8009e0e:	4620      	mov	r0, r4
 8009e10:	f7ff fde6 	bl	80099e0 <USBD_CoreFindEP>
                if (((uint8_t)idx != 0xFFU) && (idx < USBD_MAX_SUPPORTED_CLASS))
 8009e14:	2800      	cmp	r0, #0
 8009e16:	d1e5      	bne.n	8009de4 <USBD_StdEPReq+0x9e>
                  if (pdev->pClass[idx]->Setup != NULL)
 8009e18:	f8d4 32b8 	ldr.w	r3, [r4, #696]	@ 0x2b8
                  pdev->classId = idx;
 8009e1c:	f8c4 02d4 	str.w	r0, [r4, #724]	@ 0x2d4
                  if (pdev->pClass[idx]->Setup != NULL)
 8009e20:	689b      	ldr	r3, [r3, #8]
 8009e22:	2b00      	cmp	r3, #0
 8009e24:	d0de      	beq.n	8009de4 <USBD_StdEPReq+0x9e>
                    ret = (USBD_StatusTypeDef)(pdev->pClass[idx]->Setup(pdev, req));
 8009e26:	4631      	mov	r1, r6
 8009e28:	4620      	mov	r0, r4
}
 8009e2a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
                    ret = (USBD_StatusTypeDef)(pdev->pClass[idx]->Setup(pdev, req));
 8009e2e:	4718      	bx	r3
              if ((ep_addr != 0x00U) && (ep_addr != 0x80U))
 8009e30:	066a      	lsls	r2, r5, #25
 8009e32:	d095      	beq.n	8009d60 <USBD_StdEPReq+0x1a>
                (void)USBD_LL_StallEP(pdev, ep_addr);
 8009e34:	4629      	mov	r1, r5
 8009e36:	f7f7 fdde 	bl	80019f6 <USBD_LL_StallEP>
                (void)USBD_LL_StallEP(pdev, 0x80U);
 8009e3a:	2180      	movs	r1, #128	@ 0x80
 8009e3c:	4620      	mov	r0, r4
 8009e3e:	f7f7 fdda 	bl	80019f6 <USBD_LL_StallEP>
 8009e42:	e7cf      	b.n	8009de4 <USBD_StdEPReq+0x9e>
              if ((ep_addr != 0x00U) && (ep_addr != 0x80U))
 8009e44:	0669      	lsls	r1, r5, #25
 8009e46:	d18b      	bne.n	8009d60 <USBD_StdEPReq+0x1a>
              pep = ((ep_addr & 0x80U) == 0x80U) ? &pdev->ep_in[ep_addr & 0x7FU] : \
 8009e48:	0613      	lsls	r3, r2, #24
 8009e4a:	bf4c      	ite	mi
 8009e4c:	f100 0114 	addmi.w	r1, r0, #20
 8009e50:	f500 71aa 	addpl.w	r1, r0, #340	@ 0x154
              pep->status = 0x0000U;
 8009e54:	2300      	movs	r3, #0
 8009e56:	600b      	str	r3, [r1, #0]
              (void)USBD_CtlSendData(pdev, (uint8_t *)&pep->status, 2U);
 8009e58:	2202      	movs	r2, #2
              (void)USBD_CtlSendData(pdev, (uint8_t *)&pep->status, 2U);
 8009e5a:	4620      	mov	r0, r4
 8009e5c:	f000 f944 	bl	800a0e8 <USBD_CtlSendData>
              break;
 8009e60:	e7c0      	b.n	8009de4 <USBD_StdEPReq+0x9e>
                if (pdev->ep_out[ep_addr & 0xFU].is_used == 0U)
 8009e62:	f8b3 3164 	ldrh.w	r3, [r3, #356]	@ 0x164
 8009e66:	2b00      	cmp	r3, #0
 8009e68:	f43f af7a 	beq.w	8009d60 <USBD_StdEPReq+0x1a>
              pep = ((ep_addr & 0x80U) == 0x80U) ? &pdev->ep_in[ep_addr & 0x7FU] : \
 8009e6c:	2614      	movs	r6, #20
 8009e6e:	fb06 0605 	mla	r6, r6, r5, r0
 8009e72:	f506 76aa 	add.w	r6, r6, #340	@ 0x154
              if ((ep_addr == 0x00U) || (ep_addr == 0x80U))
 8009e76:	2d00      	cmp	r5, #0
 8009e78:	d199      	bne.n	8009dae <USBD_StdEPReq+0x68>
                pep->status = 0x0000U;
 8009e7a:	2300      	movs	r3, #0
                pep->status = 0x0001U;
 8009e7c:	6033      	str	r3, [r6, #0]
              (void)USBD_CtlSendData(pdev, (uint8_t *)&pep->status, 2U);
 8009e7e:	2202      	movs	r2, #2
 8009e80:	4631      	mov	r1, r6
 8009e82:	e7ea      	b.n	8009e5a <USBD_StdEPReq+0x114>
                pep->status = 0x0000U;
 8009e84:	6030      	str	r0, [r6, #0]
 8009e86:	e7fa      	b.n	8009e7e <USBD_StdEPReq+0x138>

08009e88 <USBD_ParseSetupRequest>:
  req->bmRequest = *(uint8_t *)(pbuff);
 8009e88:	780b      	ldrb	r3, [r1, #0]
 8009e8a:	7003      	strb	r3, [r0, #0]
  req->bRequest = *(uint8_t *)(pbuff);
 8009e8c:	784b      	ldrb	r3, [r1, #1]
 8009e8e:	7043      	strb	r3, [r0, #1]
  req->wValue = SWAPBYTE(pbuff);
 8009e90:	884b      	ldrh	r3, [r1, #2]
 8009e92:	8043      	strh	r3, [r0, #2]
  req->wIndex = SWAPBYTE(pbuff);
 8009e94:	888b      	ldrh	r3, [r1, #4]
 8009e96:	8083      	strh	r3, [r0, #4]
  req->wLength = SWAPBYTE(pbuff);
 8009e98:	88cb      	ldrh	r3, [r1, #6]
 8009e9a:	80c3      	strh	r3, [r0, #6]
}
 8009e9c:	4770      	bx	lr

08009e9e <USBD_CtlError>:
{
 8009e9e:	b510      	push	{r4, lr}
  (void)USBD_LL_StallEP(pdev, 0x80U);
 8009ea0:	2180      	movs	r1, #128	@ 0x80
{
 8009ea2:	4604      	mov	r4, r0
  (void)USBD_LL_StallEP(pdev, 0x80U);
 8009ea4:	f7f7 fda7 	bl	80019f6 <USBD_LL_StallEP>
  (void)USBD_LL_StallEP(pdev, 0U);
 8009ea8:	4620      	mov	r0, r4
 8009eaa:	2100      	movs	r1, #0
}
 8009eac:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  (void)USBD_LL_StallEP(pdev, 0U);
 8009eb0:	f7f7 bda1 	b.w	80019f6 <USBD_LL_StallEP>

08009eb4 <USBD_GetString>:
  * @param  unicode : Formatted string buffer (unicode)
  * @param  len : descriptor length
  * @retval None
  */
void USBD_GetString(uint8_t *desc, uint8_t *unicode, uint16_t *len)
{
 8009eb4:	b570      	push	{r4, r5, r6, lr}
 8009eb6:	460d      	mov	r5, r1
 8009eb8:	4616      	mov	r6, r2
  uint8_t idx = 0U;
  uint8_t *pdesc;

  if (desc == NULL)
 8009eba:	4604      	mov	r4, r0
 8009ebc:	b170      	cbz	r0, 8009edc <USBD_GetString+0x28>
static uint8_t USBD_GetLen(uint8_t *buf)
{
  uint8_t  len = 0U;
  uint8_t *pbuff = buf;

  while (*pbuff != (uint8_t)'\0')
 8009ebe:	f7f6 f997 	bl	80001f0 <strlen>
  *len = MIN(USBD_MAX_STR_DESC_SIZ, ((uint16_t)USBD_GetLen(pdesc) * 2U) + 2U);
 8009ec2:	b2c3      	uxtb	r3, r0
 8009ec4:	3301      	adds	r3, #1
 8009ec6:	005b      	lsls	r3, r3, #1
 8009ec8:	8033      	strh	r3, [r6, #0]
  unicode[idx] = *(uint8_t *)len;
 8009eca:	702b      	strb	r3, [r5, #0]
  unicode[idx] = USB_DESC_TYPE_STRING;
 8009ecc:	2303      	movs	r3, #3
 8009ece:	706b      	strb	r3, [r5, #1]
  while (*pdesc != (uint8_t)'\0')
 8009ed0:	3c01      	subs	r4, #1
  idx++;
 8009ed2:	2302      	movs	r3, #2
    unicode[idx] = 0U;
 8009ed4:	2100      	movs	r1, #0
  while (*pdesc != (uint8_t)'\0')
 8009ed6:	f814 2f01 	ldrb.w	r2, [r4, #1]!
 8009eda:	b902      	cbnz	r2, 8009ede <USBD_GetString+0x2a>
}
 8009edc:	bd70      	pop	{r4, r5, r6, pc}
    unicode[idx] = *pdesc;
 8009ede:	54ea      	strb	r2, [r5, r3]
    idx++;
 8009ee0:	1c5a      	adds	r2, r3, #1
    unicode[idx] = 0U;
 8009ee2:	b2d2      	uxtb	r2, r2
    idx++;
 8009ee4:	3302      	adds	r3, #2
    unicode[idx] = 0U;
 8009ee6:	54a9      	strb	r1, [r5, r2]
    idx++;
 8009ee8:	b2db      	uxtb	r3, r3
 8009eea:	e7f4      	b.n	8009ed6 <USBD_GetString+0x22>

08009eec <USBD_HID_DataIn>:
static uint8_t USBD_HID_DataIn(USBD_HandleTypeDef *pdev, uint8_t epnum)
{
  UNUSED(epnum);
  /* Ensure that the FIFO is empty before a new transfer, this condition could
  be caused by  a new transfer before the end of the previous transfer */
  ((USBD_HID_HandleTypeDef *)pdev->pClassDataCmsit[pdev->classId])->state = USBD_HID_IDLE;
 8009eec:	f8d0 32d4 	ldr.w	r3, [r0, #724]	@ 0x2d4
 8009ef0:	33b0      	adds	r3, #176	@ 0xb0
 8009ef2:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 8009ef6:	2000      	movs	r0, #0
 8009ef8:	7318      	strb	r0, [r3, #12]

  return (uint8_t)USBD_OK;
}
 8009efa:	4770      	bx	lr

08009efc <USBD_HID_GetDeviceQualifierDesc>:
  * @param  length : pointer data length
  * @retval pointer to descriptor buffer
  */
static uint8_t *USBD_HID_GetDeviceQualifierDesc(uint16_t *length)
{
  *length = (uint16_t)sizeof(USBD_HID_DeviceQualifierDesc);
 8009efc:	230a      	movs	r3, #10
 8009efe:	8003      	strh	r3, [r0, #0]

  return USBD_HID_DeviceQualifierDesc;
}
 8009f00:	4800      	ldr	r0, [pc, #0]	@ (8009f04 <USBD_HID_GetDeviceQualifierDesc+0x8>)
 8009f02:	4770      	bx	lr
 8009f04:	20000120 	.word	0x20000120

08009f08 <USBD_HID_GetFSCfgDesc>:
{
 8009f08:	b510      	push	{r4, lr}
  USBD_EpDescTypeDef *pEpDesc = USBD_GetEpDesc(USBD_HID_CfgDesc, HID_EPIN_ADDR);
 8009f0a:	2181      	movs	r1, #129	@ 0x81
{
 8009f0c:	4604      	mov	r4, r0
  USBD_EpDescTypeDef *pEpDesc = USBD_GetEpDesc(USBD_HID_CfgDesc, HID_EPIN_ADDR);
 8009f0e:	4805      	ldr	r0, [pc, #20]	@ (8009f24 <USBD_HID_GetFSCfgDesc+0x1c>)
 8009f10:	f7ff fd68 	bl	80099e4 <USBD_GetEpDesc>
  if (pEpDesc != NULL)
 8009f14:	b108      	cbz	r0, 8009f1a <USBD_HID_GetFSCfgDesc+0x12>
    pEpDesc->bInterval = HID_FS_BINTERVAL;
 8009f16:	230a      	movs	r3, #10
 8009f18:	7183      	strb	r3, [r0, #6]
  *length = (uint16_t)sizeof(USBD_HID_CfgDesc);
 8009f1a:	2322      	movs	r3, #34	@ 0x22
}
 8009f1c:	4801      	ldr	r0, [pc, #4]	@ (8009f24 <USBD_HID_GetFSCfgDesc+0x1c>)
  *length = (uint16_t)sizeof(USBD_HID_CfgDesc);
 8009f1e:	8023      	strh	r3, [r4, #0]
}
 8009f20:	bd10      	pop	{r4, pc}
 8009f22:	bf00      	nop
 8009f24:	20000138 	.word	0x20000138

08009f28 <USBD_HID_GetOtherSpeedCfgDesc>:
static uint8_t *USBD_HID_GetOtherSpeedCfgDesc(uint16_t *length)
 8009f28:	f7ff bfee 	b.w	8009f08 <USBD_HID_GetFSCfgDesc>

08009f2c <USBD_HID_GetHSCfgDesc>:
{
 8009f2c:	b510      	push	{r4, lr}
  USBD_EpDescTypeDef *pEpDesc = USBD_GetEpDesc(USBD_HID_CfgDesc, HID_EPIN_ADDR);
 8009f2e:	2181      	movs	r1, #129	@ 0x81
{
 8009f30:	4604      	mov	r4, r0
  USBD_EpDescTypeDef *pEpDesc = USBD_GetEpDesc(USBD_HID_CfgDesc, HID_EPIN_ADDR);
 8009f32:	4805      	ldr	r0, [pc, #20]	@ (8009f48 <USBD_HID_GetHSCfgDesc+0x1c>)
 8009f34:	f7ff fd56 	bl	80099e4 <USBD_GetEpDesc>
  if (pEpDesc != NULL)
 8009f38:	b108      	cbz	r0, 8009f3e <USBD_HID_GetHSCfgDesc+0x12>
    pEpDesc->bInterval = HID_HS_BINTERVAL;
 8009f3a:	2307      	movs	r3, #7
 8009f3c:	7183      	strb	r3, [r0, #6]
  *length = (uint16_t)sizeof(USBD_HID_CfgDesc);
 8009f3e:	2322      	movs	r3, #34	@ 0x22
}
 8009f40:	4801      	ldr	r0, [pc, #4]	@ (8009f48 <USBD_HID_GetHSCfgDesc+0x1c>)
  *length = (uint16_t)sizeof(USBD_HID_CfgDesc);
 8009f42:	8023      	strh	r3, [r4, #0]
}
 8009f44:	bd10      	pop	{r4, pc}
 8009f46:	bf00      	nop
 8009f48:	20000138 	.word	0x20000138

08009f4c <USBD_HID_Setup>:
  USBD_HID_HandleTypeDef *hhid = (USBD_HID_HandleTypeDef *)pdev->pClassDataCmsit[pdev->classId];
 8009f4c:	f8d0 32d4 	ldr.w	r3, [r0, #724]	@ 0x2d4
{
 8009f50:	b513      	push	{r0, r1, r4, lr}
  USBD_HID_HandleTypeDef *hhid = (USBD_HID_HandleTypeDef *)pdev->pClassDataCmsit[pdev->classId];
 8009f52:	33b0      	adds	r3, #176	@ 0xb0
  uint16_t status_info = 0U;
 8009f54:	2200      	movs	r2, #0
  USBD_HID_HandleTypeDef *hhid = (USBD_HID_HandleTypeDef *)pdev->pClassDataCmsit[pdev->classId];
 8009f56:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
  uint16_t status_info = 0U;
 8009f5a:	f8ad 2006 	strh.w	r2, [sp, #6]
  if (hhid == NULL)
 8009f5e:	2b00      	cmp	r3, #0
 8009f60:	d04a      	beq.n	8009ff8 <USBD_HID_Setup+0xac>
  switch (req->bmRequest & USB_REQ_TYPE_MASK)
 8009f62:	780a      	ldrb	r2, [r1, #0]
 8009f64:	f012 0260 	ands.w	r2, r2, #96	@ 0x60
 8009f68:	d01d      	beq.n	8009fa6 <USBD_HID_Setup+0x5a>
 8009f6a:	2a20      	cmp	r2, #32
 8009f6c:	d142      	bne.n	8009ff4 <USBD_HID_Setup+0xa8>
      switch (req->bRequest)
 8009f6e:	784a      	ldrb	r2, [r1, #1]
 8009f70:	3a02      	subs	r2, #2
 8009f72:	2a09      	cmp	r2, #9
 8009f74:	d83e      	bhi.n	8009ff4 <USBD_HID_Setup+0xa8>
 8009f76:	e8df f002 	tbb	[pc, r2]
 8009f7a:	0a13      	.short	0x0a13
 8009f7c:	3d3d3d3d 	.word	0x3d3d3d3d
 8009f80:	050f3d3d 	.word	0x050f3d3d
          hhid->Protocol = (uint8_t)(req->wValue);
 8009f84:	788a      	ldrb	r2, [r1, #2]
 8009f86:	601a      	str	r2, [r3, #0]
  USBD_StatusTypeDef ret = USBD_OK;
 8009f88:	2000      	movs	r0, #0
}
 8009f8a:	b002      	add	sp, #8
 8009f8c:	bd10      	pop	{r4, pc}
          (void)USBD_CtlSendData(pdev, (uint8_t *)&hhid->Protocol, 1U);
 8009f8e:	2201      	movs	r2, #1
 8009f90:	4619      	mov	r1, r3
          (void)USBD_CtlSendData(pdev, pbuf, len);
 8009f92:	f000 f8a9 	bl	800a0e8 <USBD_CtlSendData>
          break;
 8009f96:	e7f7      	b.n	8009f88 <USBD_HID_Setup+0x3c>
          hhid->IdleState = (uint8_t)(req->wValue >> 8);
 8009f98:	884a      	ldrh	r2, [r1, #2]
 8009f9a:	0a12      	lsrs	r2, r2, #8
 8009f9c:	605a      	str	r2, [r3, #4]
          break;
 8009f9e:	e7f3      	b.n	8009f88 <USBD_HID_Setup+0x3c>
          (void)USBD_CtlSendData(pdev, (uint8_t *)&hhid->IdleState, 1U);
 8009fa0:	2201      	movs	r2, #1
 8009fa2:	1d19      	adds	r1, r3, #4
 8009fa4:	e7f5      	b.n	8009f92 <USBD_HID_Setup+0x46>
      switch (req->bRequest)
 8009fa6:	784a      	ldrb	r2, [r1, #1]
 8009fa8:	2a0b      	cmp	r2, #11
 8009faa:	d823      	bhi.n	8009ff4 <USBD_HID_Setup+0xa8>
 8009fac:	a401      	add	r4, pc, #4	@ (adr r4, 8009fb4 <USBD_HID_Setup+0x68>)
 8009fae:	f854 f022 	ldr.w	pc, [r4, r2, lsl #2]
 8009fb2:	bf00      	nop
 8009fb4:	08009fe5 	.word	0x08009fe5
 8009fb8:	08009f89 	.word	0x08009f89
 8009fbc:	08009ff5 	.word	0x08009ff5
 8009fc0:	08009ff5 	.word	0x08009ff5
 8009fc4:	08009ff5 	.word	0x08009ff5
 8009fc8:	08009ff5 	.word	0x08009ff5
 8009fcc:	08009ffd 	.word	0x08009ffd
 8009fd0:	08009ff5 	.word	0x08009ff5
 8009fd4:	08009ff5 	.word	0x08009ff5
 8009fd8:	08009ff5 	.word	0x08009ff5
 8009fdc:	0800a021 	.word	0x0800a021
 8009fe0:	0800a031 	.word	0x0800a031
          if (pdev->dev_state == USBD_STATE_CONFIGURED)
 8009fe4:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
 8009fe8:	2b03      	cmp	r3, #3
 8009fea:	d103      	bne.n	8009ff4 <USBD_HID_Setup+0xa8>
            (void)USBD_CtlSendData(pdev, (uint8_t *)&status_info, 2U);
 8009fec:	2202      	movs	r2, #2
 8009fee:	f10d 0106 	add.w	r1, sp, #6
 8009ff2:	e7ce      	b.n	8009f92 <USBD_HID_Setup+0x46>
            USBD_CtlError(pdev, req);
 8009ff4:	f7ff ff53 	bl	8009e9e <USBD_CtlError>
    return (uint8_t)USBD_FAIL;
 8009ff8:	2003      	movs	r0, #3
 8009ffa:	e7c6      	b.n	8009f8a <USBD_HID_Setup+0x3e>
          if ((req->wValue >> 8) == HID_REPORT_DESC)
 8009ffc:	884b      	ldrh	r3, [r1, #2]
 8009ffe:	0a1b      	lsrs	r3, r3, #8
 800a000:	2b22      	cmp	r3, #34	@ 0x22
 800a002:	d105      	bne.n	800a010 <USBD_HID_Setup+0xc4>
            len = MIN(HID_MOUSE_REPORT_DESC_SIZE, req->wLength);
 800a004:	88ca      	ldrh	r2, [r1, #6]
            pbuf = HID_MOUSE_ReportDesc;
 800a006:	490e      	ldr	r1, [pc, #56]	@ (800a040 <USBD_HID_Setup+0xf4>)
            len = MIN(HID_MOUSE_REPORT_DESC_SIZE, req->wLength);
 800a008:	2a4a      	cmp	r2, #74	@ 0x4a
 800a00a:	bf28      	it	cs
 800a00c:	224a      	movcs	r2, #74	@ 0x4a
            pbuf = HID_MOUSE_ReportDesc;
 800a00e:	e7c0      	b.n	8009f92 <USBD_HID_Setup+0x46>
          else if ((req->wValue >> 8) == HID_DESCRIPTOR_TYPE)
 800a010:	2b21      	cmp	r3, #33	@ 0x21
 800a012:	d1ef      	bne.n	8009ff4 <USBD_HID_Setup+0xa8>
            len = MIN(USB_HID_DESC_SIZ, req->wLength);
 800a014:	88ca      	ldrh	r2, [r1, #6]
            pbuf = USBD_HID_Desc;
 800a016:	490b      	ldr	r1, [pc, #44]	@ (800a044 <USBD_HID_Setup+0xf8>)
            len = MIN(USB_HID_DESC_SIZ, req->wLength);
 800a018:	2a09      	cmp	r2, #9
 800a01a:	bf28      	it	cs
 800a01c:	2209      	movcs	r2, #9
 800a01e:	e7b8      	b.n	8009f92 <USBD_HID_Setup+0x46>
          if (pdev->dev_state == USBD_STATE_CONFIGURED)
 800a020:	f890 229c 	ldrb.w	r2, [r0, #668]	@ 0x29c
 800a024:	2a03      	cmp	r2, #3
 800a026:	d1e5      	bne.n	8009ff4 <USBD_HID_Setup+0xa8>
            (void)USBD_CtlSendData(pdev, (uint8_t *)&hhid->AltSetting, 1U);
 800a028:	2201      	movs	r2, #1
 800a02a:	f103 0108 	add.w	r1, r3, #8
 800a02e:	e7b0      	b.n	8009f92 <USBD_HID_Setup+0x46>
          if (pdev->dev_state == USBD_STATE_CONFIGURED)
 800a030:	f890 229c 	ldrb.w	r2, [r0, #668]	@ 0x29c
 800a034:	2a03      	cmp	r2, #3
 800a036:	d1dd      	bne.n	8009ff4 <USBD_HID_Setup+0xa8>
            hhid->AltSetting = (uint8_t)(req->wValue);
 800a038:	788a      	ldrb	r2, [r1, #2]
 800a03a:	609a      	str	r2, [r3, #8]
 800a03c:	e7a4      	b.n	8009f88 <USBD_HID_Setup+0x3c>
 800a03e:	bf00      	nop
 800a040:	200000d4 	.word	0x200000d4
 800a044:	2000012c 	.word	0x2000012c

0800a048 <USBD_HID_DeInit>:
{
 800a048:	b538      	push	{r3, r4, r5, lr}
 800a04a:	4604      	mov	r4, r0
  (void)USBD_LL_CloseEP(pdev, HIDInEpAdd);
 800a04c:	2181      	movs	r1, #129	@ 0x81
 800a04e:	f7f7 fcc9 	bl	80019e4 <USBD_LL_CloseEP>
  if (pdev->pClassDataCmsit[pdev->classId] != NULL)
 800a052:	f8d4 32d4 	ldr.w	r3, [r4, #724]	@ 0x2d4
 800a056:	33b0      	adds	r3, #176	@ 0xb0
  pdev->ep_in[HIDInEpAdd & 0xFU].is_used = 0U;
 800a058:	2500      	movs	r5, #0
  if (pdev->pClassDataCmsit[pdev->classId] != NULL)
 800a05a:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
  pdev->ep_in[HIDInEpAdd & 0xFU].is_used = 0U;
 800a05e:	63a5      	str	r5, [r4, #56]	@ 0x38
  if (pdev->pClassDataCmsit[pdev->classId] != NULL)
 800a060:	b130      	cbz	r0, 800a070 <USBD_HID_DeInit+0x28>
    (void)USBD_free(pdev->pClassDataCmsit[pdev->classId]);
 800a062:	f7f7 fca3 	bl	80019ac <USBD_static_free>
    pdev->pClassDataCmsit[pdev->classId] = NULL;
 800a066:	f8d4 32d4 	ldr.w	r3, [r4, #724]	@ 0x2d4
 800a06a:	33b0      	adds	r3, #176	@ 0xb0
 800a06c:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
}
 800a070:	2000      	movs	r0, #0
 800a072:	bd38      	pop	{r3, r4, r5, pc}

0800a074 <USBD_HID_Init>:
{
 800a074:	b538      	push	{r3, r4, r5, lr}
 800a076:	4604      	mov	r4, r0
  hhid = (USBD_HID_HandleTypeDef *)USBD_malloc(sizeof(USBD_HID_HandleTypeDef));
 800a078:	2010      	movs	r0, #16
 800a07a:	f7f7 fc93 	bl	80019a4 <USBD_static_malloc>
  if (hhid == NULL)
 800a07e:	f8d4 32d4 	ldr.w	r3, [r4, #724]	@ 0x2d4
    pdev->pClassDataCmsit[pdev->classId] = NULL;
 800a082:	33b0      	adds	r3, #176	@ 0xb0
  if (hhid == NULL)
 800a084:	4605      	mov	r5, r0
    pdev->pClassDataCmsit[pdev->classId] = NULL;
 800a086:	f844 0023 	str.w	r0, [r4, r3, lsl #2]
  if (hhid == NULL)
 800a08a:	b908      	cbnz	r0, 800a090 <USBD_HID_Init+0x1c>
    return (uint8_t)USBD_EMEM;
 800a08c:	2002      	movs	r0, #2
}
 800a08e:	bd38      	pop	{r3, r4, r5, pc}
  if (pdev->dev_speed == USBD_SPEED_HIGH)
 800a090:	7c23      	ldrb	r3, [r4, #16]
  pdev->pClassData = pdev->pClassDataCmsit[pdev->classId];
 800a092:	f8c4 02bc 	str.w	r0, [r4, #700]	@ 0x2bc
    pdev->ep_in[HIDInEpAdd & 0xFU].bInterval = HID_HS_BINTERVAL;
 800a096:	2b00      	cmp	r3, #0
 800a098:	bf14      	ite	ne
 800a09a:	230a      	movne	r3, #10
 800a09c:	2307      	moveq	r3, #7
 800a09e:	8763      	strh	r3, [r4, #58]	@ 0x3a
  (void)USBD_LL_OpenEP(pdev, HIDInEpAdd, USBD_EP_TYPE_INTR, HID_EPIN_SIZE);
 800a0a0:	2203      	movs	r2, #3
 800a0a2:	2304      	movs	r3, #4
 800a0a4:	2181      	movs	r1, #129	@ 0x81
 800a0a6:	4620      	mov	r0, r4
 800a0a8:	f7f7 fc90 	bl	80019cc <USBD_LL_OpenEP>
  pdev->ep_in[HIDInEpAdd & 0xFU].is_used = 1U;
 800a0ac:	2301      	movs	r3, #1
  hhid->state = USBD_HID_IDLE;
 800a0ae:	2000      	movs	r0, #0
  pdev->ep_in[HIDInEpAdd & 0xFU].is_used = 1U;
 800a0b0:	8723      	strh	r3, [r4, #56]	@ 0x38
  hhid->state = USBD_HID_IDLE;
 800a0b2:	7328      	strb	r0, [r5, #12]
  return (uint8_t)USBD_OK;
 800a0b4:	e7eb      	b.n	800a08e <USBD_HID_Init+0x1a>

0800a0b6 <USBD_HID_SendReport>:
{
 800a0b6:	4613      	mov	r3, r2
  USBD_HID_HandleTypeDef *hhid = (USBD_HID_HandleTypeDef *)pdev->pClassDataCmsit[pdev->classId];
 800a0b8:	f8d0 22d4 	ldr.w	r2, [r0, #724]	@ 0x2d4
 800a0bc:	32b0      	adds	r2, #176	@ 0xb0
{
 800a0be:	b510      	push	{r4, lr}
  USBD_HID_HandleTypeDef *hhid = (USBD_HID_HandleTypeDef *)pdev->pClassDataCmsit[pdev->classId];
 800a0c0:	f850 2022 	ldr.w	r2, [r0, r2, lsl #2]
  if (hhid == NULL)
 800a0c4:	b172      	cbz	r2, 800a0e4 <USBD_HID_SendReport+0x2e>
  if (pdev->dev_state == USBD_STATE_CONFIGURED)
 800a0c6:	f890 429c 	ldrb.w	r4, [r0, #668]	@ 0x29c
 800a0ca:	2c03      	cmp	r4, #3
 800a0cc:	d101      	bne.n	800a0d2 <USBD_HID_SendReport+0x1c>
    if (hhid->state == USBD_HID_IDLE)
 800a0ce:	7b14      	ldrb	r4, [r2, #12]
 800a0d0:	b10c      	cbz	r4, 800a0d6 <USBD_HID_SendReport+0x20>
  return (uint8_t)USBD_OK;
 800a0d2:	2000      	movs	r0, #0
}
 800a0d4:	bd10      	pop	{r4, pc}
      hhid->state = USBD_HID_BUSY;
 800a0d6:	2401      	movs	r4, #1
 800a0d8:	7314      	strb	r4, [r2, #12]
      (void)USBD_LL_Transmit(pdev, HIDInEpAdd, report, len);
 800a0da:	460a      	mov	r2, r1
 800a0dc:	2181      	movs	r1, #129	@ 0x81
 800a0de:	f7f7 fca5 	bl	8001a2c <USBD_LL_Transmit>
 800a0e2:	e7f6      	b.n	800a0d2 <USBD_HID_SendReport+0x1c>
    return (uint8_t)USBD_FAIL;
 800a0e4:	2003      	movs	r0, #3
 800a0e6:	e7f5      	b.n	800a0d4 <USBD_HID_SendReport+0x1e>

0800a0e8 <USBD_CtlSendData>:
  * @param  len: length of data to be sent
  * @retval status
  */
USBD_StatusTypeDef USBD_CtlSendData(USBD_HandleTypeDef *pdev,
                                    uint8_t *pbuf, uint32_t len)
{
 800a0e8:	b510      	push	{r4, lr}
 800a0ea:	4613      	mov	r3, r2
  /* Set EP0 State */
  pdev->ep0_state = USBD_EP0_DATA_IN;
 800a0ec:	2202      	movs	r2, #2
  pdev->ep_in[0].total_length = len;

#ifdef USBD_AVOID_PACKET_SPLIT_MPS
  pdev->ep_in[0].rem_length = 0U;
#else
  pdev->ep_in[0].rem_length = len;
 800a0ee:	e9c0 3306 	strd	r3, r3, [r0, #24]
  pdev->ep0_state = USBD_EP0_DATA_IN;
 800a0f2:	f8c0 2294 	str.w	r2, [r0, #660]	@ 0x294
#endif /* USBD_AVOID_PACKET_SPLIT_MPS */

  /* Start the transfer */
  (void)USBD_LL_Transmit(pdev, 0x00U, pbuf, len);
 800a0f6:	460a      	mov	r2, r1
 800a0f8:	2100      	movs	r1, #0
 800a0fa:	f7f7 fc97 	bl	8001a2c <USBD_LL_Transmit>

  return USBD_OK;
}
 800a0fe:	2000      	movs	r0, #0
 800a100:	bd10      	pop	{r4, pc}

0800a102 <USBD_CtlContinueSendData>:
  * @param  len: length of data to be sent
  * @retval status
  */
USBD_StatusTypeDef USBD_CtlContinueSendData(USBD_HandleTypeDef *pdev,
                                            uint8_t *pbuf, uint32_t len)
{
 800a102:	b508      	push	{r3, lr}
 800a104:	4613      	mov	r3, r2
  /* Start the next transfer */
  (void)USBD_LL_Transmit(pdev, 0x00U, pbuf, len);
 800a106:	460a      	mov	r2, r1
 800a108:	2100      	movs	r1, #0
 800a10a:	f7f7 fc8f 	bl	8001a2c <USBD_LL_Transmit>

  return USBD_OK;
}
 800a10e:	2000      	movs	r0, #0
 800a110:	bd08      	pop	{r3, pc}

0800a112 <USBD_CtlContinueRx>:
  * @param  len: length of data to be received
  * @retval status
  */
USBD_StatusTypeDef USBD_CtlContinueRx(USBD_HandleTypeDef *pdev,
                                      uint8_t *pbuf, uint32_t len)
{
 800a112:	b508      	push	{r3, lr}
 800a114:	4613      	mov	r3, r2
  (void)USBD_LL_PrepareReceive(pdev, 0U, pbuf, len);
 800a116:	460a      	mov	r2, r1
 800a118:	2100      	movs	r1, #0
 800a11a:	f7f7 fc90 	bl	8001a3e <USBD_LL_PrepareReceive>

  return USBD_OK;
}
 800a11e:	2000      	movs	r0, #0
 800a120:	bd08      	pop	{r3, pc}

0800a122 <USBD_CtlSendStatus>:
  *         send zero lzngth packet on the ctl pipe
  * @param  pdev: device instance
  * @retval status
  */
USBD_StatusTypeDef USBD_CtlSendStatus(USBD_HandleTypeDef *pdev)
{
 800a122:	b508      	push	{r3, lr}
  /* Set EP0 State */
  pdev->ep0_state = USBD_EP0_STATUS_IN;
 800a124:	2204      	movs	r2, #4

  /* Start the transfer */
  (void)USBD_LL_Transmit(pdev, 0x00U, NULL, 0U);
 800a126:	2300      	movs	r3, #0
  pdev->ep0_state = USBD_EP0_STATUS_IN;
 800a128:	f8c0 2294 	str.w	r2, [r0, #660]	@ 0x294
  (void)USBD_LL_Transmit(pdev, 0x00U, NULL, 0U);
 800a12c:	4619      	mov	r1, r3
 800a12e:	461a      	mov	r2, r3
 800a130:	f7f7 fc7c 	bl	8001a2c <USBD_LL_Transmit>

  return USBD_OK;
}
 800a134:	2000      	movs	r0, #0
 800a136:	bd08      	pop	{r3, pc}

0800a138 <USBD_CtlReceiveStatus>:
  *         receive zero lzngth packet on the ctl pipe
  * @param  pdev: device instance
  * @retval status
  */
USBD_StatusTypeDef USBD_CtlReceiveStatus(USBD_HandleTypeDef *pdev)
{
 800a138:	b508      	push	{r3, lr}
  /* Set EP0 State */
  pdev->ep0_state = USBD_EP0_STATUS_OUT;
 800a13a:	2205      	movs	r2, #5

  /* Start the transfer */
  (void)USBD_LL_PrepareReceive(pdev, 0U, NULL, 0U);
 800a13c:	2300      	movs	r3, #0
  pdev->ep0_state = USBD_EP0_STATUS_OUT;
 800a13e:	f8c0 2294 	str.w	r2, [r0, #660]	@ 0x294
  (void)USBD_LL_PrepareReceive(pdev, 0U, NULL, 0U);
 800a142:	4619      	mov	r1, r3
 800a144:	461a      	mov	r2, r3
 800a146:	f7f7 fc7a 	bl	8001a3e <USBD_LL_PrepareReceive>

  return USBD_OK;
}
 800a14a:	2000      	movs	r0, #0
 800a14c:	bd08      	pop	{r3, pc}

0800a14e <_ZNK8touchgfx17AbstractPartition18getAllocationCountEv>:
 800a14e:	8880      	ldrh	r0, [r0, #4]
 800a150:	4770      	bx	lr

0800a152 <_ZN8touchgfx17AbstractPartition7indexOfEPKv>:
 800a152:	b570      	push	{r4, r5, r6, lr}
 800a154:	6803      	ldr	r3, [r0, #0]
 800a156:	4605      	mov	r5, r0
 800a158:	460c      	mov	r4, r1
 800a15a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800a15c:	2100      	movs	r1, #0
 800a15e:	4798      	blx	r3
 800a160:	682b      	ldr	r3, [r5, #0]
 800a162:	4606      	mov	r6, r0
 800a164:	6a1b      	ldr	r3, [r3, #32]
 800a166:	4628      	mov	r0, r5
 800a168:	4798      	blx	r3
 800a16a:	1ba4      	subs	r4, r4, r6
 800a16c:	b2a4      	uxth	r4, r4
 800a16e:	fbb4 f0f0 	udiv	r0, r4, r0
 800a172:	bd70      	pop	{r4, r5, r6, pc}

0800a174 <_ZN8touchgfx17AbstractPartition5clearEv>:
 800a174:	2300      	movs	r3, #0
 800a176:	8083      	strh	r3, [r0, #4]
 800a178:	4770      	bx	lr

0800a17a <_ZN8touchgfx17AbstractPartition8allocateEt>:
 800a17a:	b510      	push	{r4, lr}
 800a17c:	6803      	ldr	r3, [r0, #0]
 800a17e:	8881      	ldrh	r1, [r0, #4]
 800a180:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800a182:	4604      	mov	r4, r0
 800a184:	4798      	blx	r3
 800a186:	88a3      	ldrh	r3, [r4, #4]
 800a188:	3301      	adds	r3, #1
 800a18a:	80a3      	strh	r3, [r4, #4]
 800a18c:	bd10      	pop	{r4, pc}

0800a18e <_ZN8touchgfx17AbstractPartition10allocateAtEtt>:
 800a18e:	6803      	ldr	r3, [r0, #0]
 800a190:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800a192:	4718      	bx	r3

0800a194 <_ZN8touchgfx17AbstractPartitionD1Ev>:
 800a194:	4770      	bx	lr
	...

0800a198 <_ZN8touchgfx17AbstractPartitionC1Ev>:
 800a198:	4a02      	ldr	r2, [pc, #8]	@ (800a1a4 <_ZN8touchgfx17AbstractPartitionC1Ev+0xc>)
 800a19a:	6002      	str	r2, [r0, #0]
 800a19c:	2200      	movs	r2, #0
 800a19e:	8082      	strh	r2, [r0, #4]
 800a1a0:	4770      	bx	lr
 800a1a2:	bf00      	nop
 800a1a4:	08024cf0 	.word	0x08024cf0

0800a1a8 <_ZN8touchgfx9Container8containsERKNS_8DrawableE>:
 800a1a8:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 800a1aa:	2000      	movs	r0, #0
 800a1ac:	b12b      	cbz	r3, 800a1ba <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 800a1ae:	b920      	cbnz	r0, 800a1ba <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 800a1b0:	1a5a      	subs	r2, r3, r1
 800a1b2:	4250      	negs	r0, r2
 800a1b4:	4150      	adcs	r0, r2
 800a1b6:	699b      	ldr	r3, [r3, #24]
 800a1b8:	e7f8      	b.n	800a1ac <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x4>
 800a1ba:	4770      	bx	lr

0800a1bc <_ZN8touchgfx9Container3addERNS_8DrawableE>:
 800a1bc:	2300      	movs	r3, #0
 800a1be:	6148      	str	r0, [r1, #20]
 800a1c0:	618b      	str	r3, [r1, #24]
 800a1c2:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 800a1c4:	b913      	cbnz	r3, 800a1cc <_ZN8touchgfx9Container3addERNS_8DrawableE+0x10>
 800a1c6:	6281      	str	r1, [r0, #40]	@ 0x28
 800a1c8:	4770      	bx	lr
 800a1ca:	4613      	mov	r3, r2
 800a1cc:	699a      	ldr	r2, [r3, #24]
 800a1ce:	2a00      	cmp	r2, #0
 800a1d0:	d1fb      	bne.n	800a1ca <_ZN8touchgfx9Container3addERNS_8DrawableE+0xe>
 800a1d2:	6199      	str	r1, [r3, #24]
 800a1d4:	4770      	bx	lr

0800a1d6 <_ZN8touchgfx9Container9removeAllEv>:
 800a1d6:	2200      	movs	r2, #0
 800a1d8:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 800a1da:	b123      	cbz	r3, 800a1e6 <_ZN8touchgfx9Container9removeAllEv+0x10>
 800a1dc:	6999      	ldr	r1, [r3, #24]
 800a1de:	6281      	str	r1, [r0, #40]	@ 0x28
 800a1e0:	e9c3 2205 	strd	r2, r2, [r3, #20]
 800a1e4:	e7f8      	b.n	800a1d8 <_ZN8touchgfx9Container9removeAllEv+0x2>
 800a1e6:	4770      	bx	lr

0800a1e8 <_ZN8touchgfx9Container6unlinkEv>:
 800a1e8:	2300      	movs	r3, #0
 800a1ea:	6283      	str	r3, [r0, #40]	@ 0x28
 800a1ec:	4770      	bx	lr

0800a1ee <_ZNK8touchgfx9Container12getSolidRectEv>:
 800a1ee:	2200      	movs	r2, #0
 800a1f0:	8002      	strh	r2, [r0, #0]
 800a1f2:	8042      	strh	r2, [r0, #2]
 800a1f4:	8082      	strh	r2, [r0, #4]
 800a1f6:	80c2      	strh	r2, [r0, #6]
 800a1f8:	4770      	bx	lr

0800a1fa <_ZN8touchgfx9Container20moveChildrenRelativeEss>:
 800a1fa:	b570      	push	{r4, r5, r6, lr}
 800a1fc:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 800a1fe:	460d      	mov	r5, r1
 800a200:	4616      	mov	r6, r2
 800a202:	b13c      	cbz	r4, 800a214 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x1a>
 800a204:	6823      	ldr	r3, [r4, #0]
 800a206:	4620      	mov	r0, r4
 800a208:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800a20a:	4632      	mov	r2, r6
 800a20c:	4629      	mov	r1, r5
 800a20e:	4798      	blx	r3
 800a210:	69a4      	ldr	r4, [r4, #24]
 800a212:	e7f6      	b.n	800a202 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x8>
 800a214:	bd70      	pop	{r4, r5, r6, pc}

0800a216 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE>:
 800a216:	b538      	push	{r3, r4, r5, lr}
 800a218:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 800a21a:	460d      	mov	r5, r1
 800a21c:	b134      	cbz	r4, 800a22c <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x16>
 800a21e:	682b      	ldr	r3, [r5, #0]
 800a220:	4621      	mov	r1, r4
 800a222:	689b      	ldr	r3, [r3, #8]
 800a224:	4628      	mov	r0, r5
 800a226:	4798      	blx	r3
 800a228:	69a4      	ldr	r4, [r4, #24]
 800a22a:	e7f7      	b.n	800a21c <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x6>
 800a22c:	bd38      	pop	{r3, r4, r5, pc}

0800a22e <_ZN8touchgfx9ContainerD1Ev>:
 800a22e:	4770      	bx	lr

0800a230 <_ZN8touchgfx9ContainerD0Ev>:
 800a230:	b510      	push	{r4, lr}
 800a232:	212c      	movs	r1, #44	@ 0x2c
 800a234:	4604      	mov	r4, r0
 800a236:	f017 fd68 	bl	8021d0a <_ZdlPvj>
 800a23a:	4620      	mov	r0, r4
 800a23c:	bd10      	pop	{r4, pc}

0800a23e <_ZN8touchgfx9Container6removeERNS_8DrawableE>:
 800a23e:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 800a240:	b19b      	cbz	r3, 800a26a <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 800a242:	428b      	cmp	r3, r1
 800a244:	d109      	bne.n	800a25a <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x1c>
 800a246:	699a      	ldr	r2, [r3, #24]
 800a248:	2100      	movs	r1, #0
 800a24a:	6159      	str	r1, [r3, #20]
 800a24c:	6282      	str	r2, [r0, #40]	@ 0x28
 800a24e:	b902      	cbnz	r2, 800a252 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x14>
 800a250:	4770      	bx	lr
 800a252:	6199      	str	r1, [r3, #24]
 800a254:	4770      	bx	lr
 800a256:	4613      	mov	r3, r2
 800a258:	b13a      	cbz	r2, 800a26a <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 800a25a:	699a      	ldr	r2, [r3, #24]
 800a25c:	428a      	cmp	r2, r1
 800a25e:	d1fa      	bne.n	800a256 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x18>
 800a260:	698a      	ldr	r2, [r1, #24]
 800a262:	619a      	str	r2, [r3, #24]
 800a264:	2300      	movs	r3, #0
 800a266:	e9c1 3305 	strd	r3, r3, [r1, #20]
 800a26a:	4770      	bx	lr

0800a26c <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>:
 800a26c:	b410      	push	{r4}
 800a26e:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 800a270:	4604      	mov	r4, r0
 800a272:	b92b      	cbnz	r3, 800a280 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x14>
 800a274:	6803      	ldr	r3, [r0, #0]
 800a276:	f85d 4b04 	ldr.w	r4, [sp], #4
 800a27a:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 800a27c:	4611      	mov	r1, r2
 800a27e:	4718      	bx	r3
 800a280:	b941      	cbnz	r1, 800a294 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x28>
 800a282:	6193      	str	r3, [r2, #24]
 800a284:	6282      	str	r2, [r0, #40]	@ 0x28
 800a286:	6154      	str	r4, [r2, #20]
 800a288:	f85d 4b04 	ldr.w	r4, [sp], #4
 800a28c:	4770      	bx	lr
 800a28e:	4603      	mov	r3, r0
 800a290:	2800      	cmp	r0, #0
 800a292:	d0f9      	beq.n	800a288 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1c>
 800a294:	4299      	cmp	r1, r3
 800a296:	6998      	ldr	r0, [r3, #24]
 800a298:	d1f9      	bne.n	800a28e <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x22>
 800a29a:	6190      	str	r0, [r2, #24]
 800a29c:	618a      	str	r2, [r1, #24]
 800a29e:	e7f2      	b.n	800a286 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1a>

0800a2a0 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>:
 800a2a0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a2a4:	461f      	mov	r7, r3
 800a2a6:	f890 3024 	ldrb.w	r3, [r0, #36]	@ 0x24
 800a2aa:	460d      	mov	r5, r1
 800a2ac:	4616      	mov	r6, r2
 800a2ae:	b103      	cbz	r3, 800a2b2 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x12>
 800a2b0:	6038      	str	r0, [r7, #0]
 800a2b2:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 800a2b4:	b314      	cbz	r4, 800a2fc <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x5c>
 800a2b6:	f894 3025 	ldrb.w	r3, [r4, #37]	@ 0x25
 800a2ba:	b1eb      	cbz	r3, 800a2f8 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800a2bc:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 800a2c0:	428d      	cmp	r5, r1
 800a2c2:	db19      	blt.n	800a2f8 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800a2c4:	8923      	ldrh	r3, [r4, #8]
 800a2c6:	b289      	uxth	r1, r1
 800a2c8:	440b      	add	r3, r1
 800a2ca:	b21b      	sxth	r3, r3
 800a2cc:	429d      	cmp	r5, r3
 800a2ce:	da13      	bge.n	800a2f8 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800a2d0:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 800a2d4:	4296      	cmp	r6, r2
 800a2d6:	db0f      	blt.n	800a2f8 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800a2d8:	8963      	ldrh	r3, [r4, #10]
 800a2da:	b292      	uxth	r2, r2
 800a2dc:	4413      	add	r3, r2
 800a2de:	b21b      	sxth	r3, r3
 800a2e0:	429e      	cmp	r6, r3
 800a2e2:	da09      	bge.n	800a2f8 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800a2e4:	6823      	ldr	r3, [r4, #0]
 800a2e6:	1ab2      	subs	r2, r6, r2
 800a2e8:	1a69      	subs	r1, r5, r1
 800a2ea:	f8d3 8024 	ldr.w	r8, [r3, #36]	@ 0x24
 800a2ee:	b212      	sxth	r2, r2
 800a2f0:	463b      	mov	r3, r7
 800a2f2:	b209      	sxth	r1, r1
 800a2f4:	4620      	mov	r0, r4
 800a2f6:	47c0      	blx	r8
 800a2f8:	69a4      	ldr	r4, [r4, #24]
 800a2fa:	e7db      	b.n	800a2b4 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x14>
 800a2fc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800a300 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>:
 800a300:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a304:	4c6e      	ldr	r4, [pc, #440]	@ (800a4c0 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c0>)
 800a306:	b0a1      	sub	sp, #132	@ 0x84
 800a308:	6824      	ldr	r4, [r4, #0]
 800a30a:	9d2a      	ldr	r5, [sp, #168]	@ 0xa8
 800a30c:	f894 9049 	ldrb.w	r9, [r4, #73]	@ 0x49
 800a310:	9303      	str	r3, [sp, #12]
 800a312:	2400      	movs	r4, #0
 800a314:	802c      	strh	r4, [r5, #0]
 800a316:	9d2b      	ldr	r5, [sp, #172]	@ 0xac
 800a318:	802c      	strh	r4, [r5, #0]
 800a31a:	601c      	str	r4, [r3, #0]
 800a31c:	4606      	mov	r6, r0
 800a31e:	e9cd 1201 	strd	r1, r2, [sp, #4]
 800a322:	f7ff ffbd 	bl	800a2a0 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800a326:	f1b9 0f03 	cmp.w	r9, #3
 800a32a:	f340 80c2 	ble.w	800a4b2 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b2>
 800a32e:	4631      	mov	r1, r6
 800a330:	a80c      	add	r0, sp, #48	@ 0x30
 800a332:	f006 fca3 	bl	8010c7c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800a336:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	@ 0x30
 800a33a:	9306      	str	r3, [sp, #24]
 800a33c:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 800a340:	9307      	str	r3, [sp, #28]
 800a342:	9b03      	ldr	r3, [sp, #12]
 800a344:	f8d3 a000 	ldr.w	sl, [r3]
 800a348:	f1ba 0f00 	cmp.w	sl, #0
 800a34c:	f000 80b4 	beq.w	800a4b8 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b8>
 800a350:	4651      	mov	r1, sl
 800a352:	a810      	add	r0, sp, #64	@ 0x40
 800a354:	f006 fc92 	bl	8010c7c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800a358:	9b01      	ldr	r3, [sp, #4]
 800a35a:	9a06      	ldr	r2, [sp, #24]
 800a35c:	f9bd 1044 	ldrsh.w	r1, [sp, #68]	@ 0x44
 800a360:	189d      	adds	r5, r3, r2
 800a362:	f9bd 3040 	ldrsh.w	r3, [sp, #64]	@ 0x40
 800a366:	9a07      	ldr	r2, [sp, #28]
 800a368:	2002      	movs	r0, #2
 800a36a:	fb91 f1f0 	sdiv	r1, r1, r0
 800a36e:	4419      	add	r1, r3
 800a370:	1a6d      	subs	r5, r5, r1
 800a372:	9b02      	ldr	r3, [sp, #8]
 800a374:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	@ 0x42
 800a378:	4413      	add	r3, r2
 800a37a:	f9bd 2046 	ldrsh.w	r2, [sp, #70]	@ 0x46
 800a37e:	fb92 f2f0 	sdiv	r2, r2, r0
 800a382:	440a      	add	r2, r1
 800a384:	1a9b      	subs	r3, r3, r2
 800a386:	435b      	muls	r3, r3
 800a388:	fb05 3505 	mla	r5, r5, r5, r3
 800a38c:	4f4d      	ldr	r7, [pc, #308]	@ (800a4c4 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c4>)
 800a38e:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800a390:	ac10      	add	r4, sp, #64	@ 0x40
 800a392:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800a394:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800a396:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800a398:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800a39a:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800a39c:	e897 000f 	ldmia.w	r7, {r0, r1, r2, r3}
 800a3a0:	f1b9 0f0c 	cmp.w	r9, #12
 800a3a4:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 800a3a8:	f04f 0303 	mov.w	r3, #3
 800a3ac:	bfc8      	it	gt
 800a3ae:	4698      	movgt	r8, r3
 800a3b0:	f8cd 9000 	str.w	r9, [sp]
 800a3b4:	f04f 0400 	mov.w	r4, #0
 800a3b8:	bfdc      	itt	le
 800a3ba:	f109 32ff 	addle.w	r2, r9, #4294967295
 800a3be:	fb92 f8f3 	sdivle	r8, r2, r3
 800a3c2:	1c63      	adds	r3, r4, #1
 800a3c4:	aa10      	add	r2, sp, #64	@ 0x40
 800a3c6:	f004 0401 	and.w	r4, r4, #1
 800a3ca:	9308      	str	r3, [sp, #32]
 800a3cc:	eb02 1444 	add.w	r4, r2, r4, lsl #5
 800a3d0:	9b00      	ldr	r3, [sp, #0]
 800a3d2:	fb93 f3f8 	sdiv	r3, r3, r8
 800a3d6:	b29b      	uxth	r3, r3
 800a3d8:	3404      	adds	r4, #4
 800a3da:	f04f 0b00 	mov.w	fp, #0
 800a3de:	9304      	str	r3, [sp, #16]
 800a3e0:	9a04      	ldr	r2, [sp, #16]
 800a3e2:	f854 3c04 	ldr.w	r3, [r4, #-4]
 800a3e6:	fb13 f302 	smulbb	r3, r3, r2
 800a3ea:	9a01      	ldr	r2, [sp, #4]
 800a3ec:	b29b      	uxth	r3, r3
 800a3ee:	1899      	adds	r1, r3, r2
 800a3f0:	9305      	str	r3, [sp, #20]
 800a3f2:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 800a3f6:	b209      	sxth	r1, r1
 800a3f8:	4299      	cmp	r1, r3
 800a3fa:	db4d      	blt.n	800a498 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800a3fc:	8932      	ldrh	r2, [r6, #8]
 800a3fe:	4413      	add	r3, r2
 800a400:	b21b      	sxth	r3, r3
 800a402:	4299      	cmp	r1, r3
 800a404:	da48      	bge.n	800a498 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800a406:	9b04      	ldr	r3, [sp, #16]
 800a408:	6827      	ldr	r7, [r4, #0]
 800a40a:	fb17 f703 	smulbb	r7, r7, r3
 800a40e:	9b02      	ldr	r3, [sp, #8]
 800a410:	b2bf      	uxth	r7, r7
 800a412:	18fa      	adds	r2, r7, r3
 800a414:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 800a418:	b212      	sxth	r2, r2
 800a41a:	429a      	cmp	r2, r3
 800a41c:	db3c      	blt.n	800a498 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800a41e:	8970      	ldrh	r0, [r6, #10]
 800a420:	4403      	add	r3, r0
 800a422:	b21b      	sxth	r3, r3
 800a424:	429a      	cmp	r2, r3
 800a426:	da37      	bge.n	800a498 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800a428:	2300      	movs	r3, #0
 800a42a:	930b      	str	r3, [sp, #44]	@ 0x2c
 800a42c:	4630      	mov	r0, r6
 800a42e:	ab0b      	add	r3, sp, #44	@ 0x2c
 800a430:	f7ff ff36 	bl	800a2a0 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800a434:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 800a436:	b37a      	cbz	r2, 800a498 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800a438:	4552      	cmp	r2, sl
 800a43a:	d02d      	beq.n	800a498 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800a43c:	4611      	mov	r1, r2
 800a43e:	a80e      	add	r0, sp, #56	@ 0x38
 800a440:	9209      	str	r2, [sp, #36]	@ 0x24
 800a442:	f006 fc1b 	bl	8010c7c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800a446:	9a06      	ldr	r2, [sp, #24]
 800a448:	f9bd 0038 	ldrsh.w	r0, [sp, #56]	@ 0x38
 800a44c:	9b01      	ldr	r3, [sp, #4]
 800a44e:	f9bd 103c 	ldrsh.w	r1, [sp, #60]	@ 0x3c
 800a452:	f9bd c03e 	ldrsh.w	ip, [sp, #62]	@ 0x3e
 800a456:	4413      	add	r3, r2
 800a458:	f04f 0e02 	mov.w	lr, #2
 800a45c:	fb91 f1fe 	sdiv	r1, r1, lr
 800a460:	4401      	add	r1, r0
 800a462:	1a58      	subs	r0, r3, r1
 800a464:	9a07      	ldr	r2, [sp, #28]
 800a466:	9b02      	ldr	r3, [sp, #8]
 800a468:	f9bd 103a 	ldrsh.w	r1, [sp, #58]	@ 0x3a
 800a46c:	fb9c fcfe 	sdiv	ip, ip, lr
 800a470:	4413      	add	r3, r2
 800a472:	448c      	add	ip, r1
 800a474:	eba3 030c 	sub.w	r3, r3, ip
 800a478:	435b      	muls	r3, r3
 800a47a:	fb00 3300 	mla	r3, r0, r0, r3
 800a47e:	42ab      	cmp	r3, r5
 800a480:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 800a482:	d208      	bcs.n	800a496 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x196>
 800a484:	9803      	ldr	r0, [sp, #12]
 800a486:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 800a488:	6001      	str	r1, [r0, #0]
 800a48a:	992a      	ldr	r1, [sp, #168]	@ 0xa8
 800a48c:	9805      	ldr	r0, [sp, #20]
 800a48e:	8008      	strh	r0, [r1, #0]
 800a490:	992b      	ldr	r1, [sp, #172]	@ 0xac
 800a492:	461d      	mov	r5, r3
 800a494:	800f      	strh	r7, [r1, #0]
 800a496:	4692      	mov	sl, r2
 800a498:	f10b 0b01 	add.w	fp, fp, #1
 800a49c:	f1bb 0f04 	cmp.w	fp, #4
 800a4a0:	f104 0408 	add.w	r4, r4, #8
 800a4a4:	d19c      	bne.n	800a3e0 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xe0>
 800a4a6:	9b00      	ldr	r3, [sp, #0]
 800a4a8:	9c08      	ldr	r4, [sp, #32]
 800a4aa:	444b      	add	r3, r9
 800a4ac:	4544      	cmp	r4, r8
 800a4ae:	9300      	str	r3, [sp, #0]
 800a4b0:	d187      	bne.n	800a3c2 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xc2>
 800a4b2:	b021      	add	sp, #132	@ 0x84
 800a4b4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800a4b8:	f04f 35ff 	mov.w	r5, #4294967295
 800a4bc:	e766      	b.n	800a38c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x8c>
 800a4be:	bf00      	nop
 800a4c0:	20014044 	.word	0x20014044
 800a4c4:	08023bd8 	.word	0x08023bd8

0800a4c8 <_ZN8touchgfx4RectaNERKS0_>:
 800a4c8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800a4cc:	f9b1 7000 	ldrsh.w	r7, [r1]
 800a4d0:	888c      	ldrh	r4, [r1, #4]
 800a4d2:	f9b0 9000 	ldrsh.w	r9, [r0]
 800a4d6:	443c      	add	r4, r7
 800a4d8:	b2a4      	uxth	r4, r4
 800a4da:	fa0f f884 	sxth.w	r8, r4
 800a4de:	45c1      	cmp	r9, r8
 800a4e0:	da2f      	bge.n	800a542 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800a4e2:	8882      	ldrh	r2, [r0, #4]
 800a4e4:	444a      	add	r2, r9
 800a4e6:	b292      	uxth	r2, r2
 800a4e8:	fa0f fe82 	sxth.w	lr, r2
 800a4ec:	4577      	cmp	r7, lr
 800a4ee:	da28      	bge.n	800a542 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800a4f0:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 800a4f4:	88cb      	ldrh	r3, [r1, #6]
 800a4f6:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 800a4fa:	442b      	add	r3, r5
 800a4fc:	b21b      	sxth	r3, r3
 800a4fe:	429e      	cmp	r6, r3
 800a500:	da1f      	bge.n	800a542 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800a502:	88c3      	ldrh	r3, [r0, #6]
 800a504:	4433      	add	r3, r6
 800a506:	b29b      	uxth	r3, r3
 800a508:	fa0f fc83 	sxth.w	ip, r3
 800a50c:	4565      	cmp	r5, ip
 800a50e:	da18      	bge.n	800a542 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800a510:	454f      	cmp	r7, r9
 800a512:	bfb8      	it	lt
 800a514:	464f      	movlt	r7, r9
 800a516:	42b5      	cmp	r5, r6
 800a518:	bfb8      	it	lt
 800a51a:	4635      	movlt	r5, r6
 800a51c:	45f0      	cmp	r8, lr
 800a51e:	bfd8      	it	le
 800a520:	4622      	movle	r2, r4
 800a522:	1bd2      	subs	r2, r2, r7
 800a524:	8082      	strh	r2, [r0, #4]
 800a526:	884a      	ldrh	r2, [r1, #2]
 800a528:	88c9      	ldrh	r1, [r1, #6]
 800a52a:	8007      	strh	r7, [r0, #0]
 800a52c:	440a      	add	r2, r1
 800a52e:	b292      	uxth	r2, r2
 800a530:	b211      	sxth	r1, r2
 800a532:	458c      	cmp	ip, r1
 800a534:	bfa8      	it	ge
 800a536:	4613      	movge	r3, r2
 800a538:	1b5b      	subs	r3, r3, r5
 800a53a:	80c3      	strh	r3, [r0, #6]
 800a53c:	8045      	strh	r5, [r0, #2]
 800a53e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800a542:	2300      	movs	r3, #0
 800a544:	8003      	strh	r3, [r0, #0]
 800a546:	8043      	strh	r3, [r0, #2]
 800a548:	8083      	strh	r3, [r0, #4]
 800a54a:	80c3      	strh	r3, [r0, #6]
 800a54c:	e7f7      	b.n	800a53e <_ZN8touchgfx4RectaNERKS0_+0x76>

0800a54e <_ZNK8touchgfx4Rect7isEmptyEv>:
 800a54e:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800a552:	2b00      	cmp	r3, #0
 800a554:	dd06      	ble.n	800a564 <_ZNK8touchgfx4Rect7isEmptyEv+0x16>
 800a556:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
 800a55a:	2800      	cmp	r0, #0
 800a55c:	bfcc      	ite	gt
 800a55e:	2000      	movgt	r0, #0
 800a560:	2001      	movle	r0, #1
 800a562:	4770      	bx	lr
 800a564:	2001      	movs	r0, #1
 800a566:	4770      	bx	lr

0800a568 <_ZNK8touchgfx9Container16getContainedAreaEv>:
 800a568:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a56c:	2300      	movs	r3, #0
 800a56e:	6a8d      	ldr	r5, [r1, #40]	@ 0x28
 800a570:	8003      	strh	r3, [r0, #0]
 800a572:	4604      	mov	r4, r0
 800a574:	8043      	strh	r3, [r0, #2]
 800a576:	8083      	strh	r3, [r0, #4]
 800a578:	80c3      	strh	r3, [r0, #6]
 800a57a:	2d00      	cmp	r5, #0
 800a57c:	d040      	beq.n	800a600 <_ZNK8touchgfx9Container16getContainedAreaEv+0x98>
 800a57e:	1d28      	adds	r0, r5, #4
 800a580:	f7ff ffe5 	bl	800a54e <_ZNK8touchgfx4Rect7isEmptyEv>
 800a584:	b988      	cbnz	r0, 800a5aa <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 800a586:	4620      	mov	r0, r4
 800a588:	f7ff ffe1 	bl	800a54e <_ZNK8touchgfx4Rect7isEmptyEv>
 800a58c:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 800a590:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 800a594:	f9b5 e008 	ldrsh.w	lr, [r5, #8]
 800a598:	f9b5 c00a 	ldrsh.w	ip, [r5, #10]
 800a59c:	b138      	cbz	r0, 800a5ae <_ZNK8touchgfx9Container16getContainedAreaEv+0x46>
 800a59e:	8022      	strh	r2, [r4, #0]
 800a5a0:	8063      	strh	r3, [r4, #2]
 800a5a2:	f8a4 e004 	strh.w	lr, [r4, #4]
 800a5a6:	f8a4 c006 	strh.w	ip, [r4, #6]
 800a5aa:	69ad      	ldr	r5, [r5, #24]
 800a5ac:	e7e5      	b.n	800a57a <_ZNK8touchgfx9Container16getContainedAreaEv+0x12>
 800a5ae:	f9b4 0000 	ldrsh.w	r0, [r4]
 800a5b2:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 800a5b6:	f8b4 8004 	ldrh.w	r8, [r4, #4]
 800a5ba:	4290      	cmp	r0, r2
 800a5bc:	4607      	mov	r7, r0
 800a5be:	bfa8      	it	ge
 800a5c0:	4617      	movge	r7, r2
 800a5c2:	4472      	add	r2, lr
 800a5c4:	f8b4 e006 	ldrh.w	lr, [r4, #6]
 800a5c8:	8027      	strh	r7, [r4, #0]
 800a5ca:	4299      	cmp	r1, r3
 800a5cc:	460e      	mov	r6, r1
 800a5ce:	4440      	add	r0, r8
 800a5d0:	bfa8      	it	ge
 800a5d2:	461e      	movge	r6, r3
 800a5d4:	4471      	add	r1, lr
 800a5d6:	4463      	add	r3, ip
 800a5d8:	b200      	sxth	r0, r0
 800a5da:	b212      	sxth	r2, r2
 800a5dc:	b209      	sxth	r1, r1
 800a5de:	b21b      	sxth	r3, r3
 800a5e0:	4290      	cmp	r0, r2
 800a5e2:	bfac      	ite	ge
 800a5e4:	ebc7 0200 	rsbge	r2, r7, r0
 800a5e8:	ebc7 0202 	rsblt	r2, r7, r2
 800a5ec:	4299      	cmp	r1, r3
 800a5ee:	bfac      	ite	ge
 800a5f0:	ebc6 0301 	rsbge	r3, r6, r1
 800a5f4:	ebc6 0303 	rsblt	r3, r6, r3
 800a5f8:	8066      	strh	r6, [r4, #2]
 800a5fa:	80a2      	strh	r2, [r4, #4]
 800a5fc:	80e3      	strh	r3, [r4, #6]
 800a5fe:	e7d4      	b.n	800a5aa <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 800a600:	4620      	mov	r0, r4
 800a602:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800a606 <_ZNK8touchgfx9Container4drawERKNS_4RectE>:
 800a606:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800a60a:	f890 3025 	ldrb.w	r3, [r0, #37]	@ 0x25
 800a60e:	b383      	cbz	r3, 800a672 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 800a610:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 800a612:	b374      	cbz	r4, 800a672 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 800a614:	f9b1 5000 	ldrsh.w	r5, [r1]
 800a618:	f9b1 6002 	ldrsh.w	r6, [r1, #2]
 800a61c:	f9b1 7004 	ldrsh.w	r7, [r1, #4]
 800a620:	f9b1 8006 	ldrsh.w	r8, [r1, #6]
 800a624:	f894 3025 	ldrb.w	r3, [r4, #37]	@ 0x25
 800a628:	b303      	cbz	r3, 800a66c <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 800a62a:	4668      	mov	r0, sp
 800a62c:	1d21      	adds	r1, r4, #4
 800a62e:	f8ad 5000 	strh.w	r5, [sp]
 800a632:	f8ad 6002 	strh.w	r6, [sp, #2]
 800a636:	f8ad 7004 	strh.w	r7, [sp, #4]
 800a63a:	f8ad 8006 	strh.w	r8, [sp, #6]
 800a63e:	f7ff ff43 	bl	800a4c8 <_ZN8touchgfx4RectaNERKS0_>
 800a642:	4668      	mov	r0, sp
 800a644:	f7ff ff83 	bl	800a54e <_ZNK8touchgfx4Rect7isEmptyEv>
 800a648:	b980      	cbnz	r0, 800a66c <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 800a64a:	f8bd 3000 	ldrh.w	r3, [sp]
 800a64e:	88a2      	ldrh	r2, [r4, #4]
 800a650:	1a9b      	subs	r3, r3, r2
 800a652:	f8ad 3000 	strh.w	r3, [sp]
 800a656:	88e2      	ldrh	r2, [r4, #6]
 800a658:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800a65c:	1a9b      	subs	r3, r3, r2
 800a65e:	f8ad 3002 	strh.w	r3, [sp, #2]
 800a662:	6823      	ldr	r3, [r4, #0]
 800a664:	4669      	mov	r1, sp
 800a666:	689b      	ldr	r3, [r3, #8]
 800a668:	4620      	mov	r0, r4
 800a66a:	4798      	blx	r3
 800a66c:	69a4      	ldr	r4, [r4, #24]
 800a66e:	2c00      	cmp	r4, #0
 800a670:	d1d8      	bne.n	800a624 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x1e>
 800a672:	b002      	add	sp, #8
 800a674:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800a678 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>:
 800a678:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800a67a:	f890 3025 	ldrb.w	r3, [r0, #37]	@ 0x25
 800a67e:	460d      	mov	r5, r1
 800a680:	4616      	mov	r6, r2
 800a682:	b323      	cbz	r3, 800a6ce <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 800a684:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 800a686:	b314      	cbz	r4, 800a6ce <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 800a688:	f894 3025 	ldrb.w	r3, [r4, #37]	@ 0x25
 800a68c:	b1eb      	cbz	r3, 800a6ca <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 800a68e:	6828      	ldr	r0, [r5, #0]
 800a690:	6869      	ldr	r1, [r5, #4]
 800a692:	466b      	mov	r3, sp
 800a694:	c303      	stmia	r3!, {r0, r1}
 800a696:	4668      	mov	r0, sp
 800a698:	1d21      	adds	r1, r4, #4
 800a69a:	f7ff ff15 	bl	800a4c8 <_ZN8touchgfx4RectaNERKS0_>
 800a69e:	4668      	mov	r0, sp
 800a6a0:	f7ff ff55 	bl	800a54e <_ZNK8touchgfx4Rect7isEmptyEv>
 800a6a4:	b988      	cbnz	r0, 800a6ca <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 800a6a6:	f8bd 3000 	ldrh.w	r3, [sp]
 800a6aa:	88a2      	ldrh	r2, [r4, #4]
 800a6ac:	1a9b      	subs	r3, r3, r2
 800a6ae:	f8ad 3000 	strh.w	r3, [sp]
 800a6b2:	88e2      	ldrh	r2, [r4, #6]
 800a6b4:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800a6b8:	1a9b      	subs	r3, r3, r2
 800a6ba:	f8ad 3002 	strh.w	r3, [sp, #2]
 800a6be:	6823      	ldr	r3, [r4, #0]
 800a6c0:	4632      	mov	r2, r6
 800a6c2:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 800a6c4:	4669      	mov	r1, sp
 800a6c6:	4620      	mov	r0, r4
 800a6c8:	4798      	blx	r3
 800a6ca:	69a4      	ldr	r4, [r4, #24]
 800a6cc:	e7db      	b.n	800a686 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0xe>
 800a6ce:	b002      	add	sp, #8
 800a6d0:	bd70      	pop	{r4, r5, r6, pc}

0800a6d2 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt>:
 800a6d2:	b513      	push	{r0, r1, r4, lr}
 800a6d4:	6803      	ldr	r3, [r0, #0]
 800a6d6:	f8d3 40b4 	ldr.w	r4, [r3, #180]	@ 0xb4
 800a6da:	2300      	movs	r3, #0
 800a6dc:	e9cd 3300 	strd	r3, r3, [sp]
 800a6e0:	466b      	mov	r3, sp
 800a6e2:	47a0      	blx	r4
 800a6e4:	b002      	add	sp, #8
 800a6e6:	bd10      	pop	{r4, pc}

0800a6e8 <_ZN8touchgfx3HAL16flushFrameBufferEv>:
 800a6e8:	2301      	movs	r3, #1
 800a6ea:	f880 304b 	strb.w	r3, [r0, #75]	@ 0x4b
 800a6ee:	f880 306d 	strb.w	r3, [r0, #109]	@ 0x6d
 800a6f2:	4770      	bx	lr

0800a6f4 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>:
 800a6f4:	2301      	movs	r3, #1
 800a6f6:	f880 304b 	strb.w	r3, [r0, #75]	@ 0x4b
 800a6fa:	f880 306d 	strb.w	r3, [r0, #109]	@ 0x6d
 800a6fe:	4770      	bx	lr

0800a700 <_ZN8touchgfx3HAL17allowDMATransfersEv>:
 800a700:	6843      	ldr	r3, [r0, #4]
 800a702:	2201      	movs	r2, #1
 800a704:	725a      	strb	r2, [r3, #9]
 800a706:	6840      	ldr	r0, [r0, #4]
 800a708:	6803      	ldr	r3, [r0, #0]
 800a70a:	691b      	ldr	r3, [r3, #16]
 800a70c:	4718      	bx	r3

0800a70e <_ZN8touchgfx3HAL8flushDMAEv>:
 800a70e:	6840      	ldr	r0, [r0, #4]
 800a710:	6803      	ldr	r3, [r0, #0]
 800a712:	689b      	ldr	r3, [r3, #8]
 800a714:	4718      	bx	r3

0800a716 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_b>:
 800a716:	b530      	push	{r4, r5, lr}
 800a718:	b08b      	sub	sp, #44	@ 0x2c
 800a71a:	6804      	ldr	r4, [r0, #0]
 800a71c:	f89d 5058 	ldrb.w	r5, [sp, #88]	@ 0x58
 800a720:	9509      	str	r5, [sp, #36]	@ 0x24
 800a722:	f89d 5054 	ldrb.w	r5, [sp, #84]	@ 0x54
 800a726:	9508      	str	r5, [sp, #32]
 800a728:	f89d 5050 	ldrb.w	r5, [sp, #80]	@ 0x50
 800a72c:	9507      	str	r5, [sp, #28]
 800a72e:	f8bd 504c 	ldrh.w	r5, [sp, #76]	@ 0x4c
 800a732:	9506      	str	r5, [sp, #24]
 800a734:	f89d 5048 	ldrb.w	r5, [sp, #72]	@ 0x48
 800a738:	9505      	str	r5, [sp, #20]
 800a73a:	f89d 5044 	ldrb.w	r5, [sp, #68]	@ 0x44
 800a73e:	9504      	str	r5, [sp, #16]
 800a740:	f8bd 5040 	ldrh.w	r5, [sp, #64]	@ 0x40
 800a744:	9503      	str	r5, [sp, #12]
 800a746:	f8bd 503c 	ldrh.w	r5, [sp, #60]	@ 0x3c
 800a74a:	9502      	str	r5, [sp, #8]
 800a74c:	f8bd 5038 	ldrh.w	r5, [sp, #56]	@ 0x38
 800a750:	e9cd 3500 	strd	r3, r5, [sp]
 800a754:	4613      	mov	r3, r2
 800a756:	6c24      	ldr	r4, [r4, #64]	@ 0x40
 800a758:	2200      	movs	r2, #0
 800a75a:	47a0      	blx	r4
 800a75c:	b00b      	add	sp, #44	@ 0x2c
 800a75e:	bd30      	pop	{r4, r5, pc}

0800a760 <_ZN8touchgfx3HAL10beginFrameEv>:
 800a760:	4b04      	ldr	r3, [pc, #16]	@ (800a774 <_ZN8touchgfx3HAL10beginFrameEv+0x14>)
 800a762:	781b      	ldrb	r3, [r3, #0]
 800a764:	b123      	cbz	r3, 800a770 <_ZN8touchgfx3HAL10beginFrameEv+0x10>
 800a766:	f890 006e 	ldrb.w	r0, [r0, #110]	@ 0x6e
 800a76a:	f080 0001 	eor.w	r0, r0, #1
 800a76e:	4770      	bx	lr
 800a770:	2001      	movs	r0, #1
 800a772:	4770      	bx	lr
 800a774:	20014040 	.word	0x20014040

0800a778 <_ZN8touchgfx3HAL8endFrameEv>:
 800a778:	b510      	push	{r4, lr}
 800a77a:	4604      	mov	r4, r0
 800a77c:	6840      	ldr	r0, [r0, #4]
 800a77e:	6803      	ldr	r3, [r0, #0]
 800a780:	689b      	ldr	r3, [r3, #8]
 800a782:	4798      	blx	r3
 800a784:	f894 306d 	ldrb.w	r3, [r4, #109]	@ 0x6d
 800a788:	b113      	cbz	r3, 800a790 <_ZN8touchgfx3HAL8endFrameEv+0x18>
 800a78a:	2301      	movs	r3, #1
 800a78c:	f884 306e 	strb.w	r3, [r4, #110]	@ 0x6e
 800a790:	bd10      	pop	{r4, pc}

0800a792 <_ZN8touchgfx3HAL10initializeEv>:
 800a792:	b510      	push	{r4, lr}
 800a794:	4604      	mov	r4, r0
 800a796:	f7f6 f9d7 	bl	8000b48 <_ZN8touchgfx10OSWrappers10initializeEv>
 800a79a:	f7f6 f8df 	bl	800095c <_ZN8touchgfx4GPIO4initEv>
 800a79e:	6860      	ldr	r0, [r4, #4]
 800a7a0:	6803      	ldr	r3, [r0, #0]
 800a7a2:	68db      	ldr	r3, [r3, #12]
 800a7a4:	4798      	blx	r3
 800a7a6:	68e0      	ldr	r0, [r4, #12]
 800a7a8:	6803      	ldr	r3, [r0, #0]
 800a7aa:	689b      	ldr	r3, [r3, #8]
 800a7ac:	4798      	blx	r3
 800a7ae:	6823      	ldr	r3, [r4, #0]
 800a7b0:	4620      	mov	r0, r4
 800a7b2:	6f9b      	ldr	r3, [r3, #120]	@ 0x78
 800a7b4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800a7b8:	4718      	bx	r3
	...

0800a7bc <_ZN8touchgfx3HAL4tickEv>:
 800a7bc:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800a7be:	6803      	ldr	r3, [r0, #0]
 800a7c0:	4d62      	ldr	r5, [pc, #392]	@ (800a94c <_ZN8touchgfx3HAL4tickEv+0x190>)
 800a7c2:	f8d3 30c0 	ldr.w	r3, [r3, #192]	@ 0xc0
 800a7c6:	4604      	mov	r4, r0
 800a7c8:	4798      	blx	r3
 800a7ca:	2800      	cmp	r0, #0
 800a7cc:	f000 809e 	beq.w	800a90c <_ZN8touchgfx3HAL4tickEv+0x150>
 800a7d0:	f894 3048 	ldrb.w	r3, [r4, #72]	@ 0x48
 800a7d4:	2b02      	cmp	r3, #2
 800a7d6:	d002      	beq.n	800a7de <_ZN8touchgfx3HAL4tickEv+0x22>
 800a7d8:	2001      	movs	r0, #1
 800a7da:	f7f6 f83d 	bl	8000858 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 800a7de:	f894 306a 	ldrb.w	r3, [r4, #106]	@ 0x6a
 800a7e2:	f884 306b 	strb.w	r3, [r4, #107]	@ 0x6b
 800a7e6:	f894 3079 	ldrb.w	r3, [r4, #121]	@ 0x79
 800a7ea:	2600      	movs	r6, #0
 800a7ec:	f884 606a 	strb.w	r6, [r4, #106]	@ 0x6a
 800a7f0:	f884 604b 	strb.w	r6, [r4, #75]	@ 0x4b
 800a7f4:	b133      	cbz	r3, 800a804 <_ZN8touchgfx3HAL4tickEv+0x48>
 800a7f6:	6823      	ldr	r3, [r4, #0]
 800a7f8:	4620      	mov	r0, r4
 800a7fa:	f8d3 30d4 	ldr.w	r3, [r3, #212]	@ 0xd4
 800a7fe:	4798      	blx	r3
 800a800:	f884 6079 	strb.w	r6, [r4, #121]	@ 0x79
 800a804:	f894 304a 	ldrb.w	r3, [r4, #74]	@ 0x4a
 800a808:	6862      	ldr	r2, [r4, #4]
 800a80a:	f083 0301 	eor.w	r3, r3, #1
 800a80e:	7253      	strb	r3, [r2, #9]
 800a810:	2601      	movs	r6, #1
 800a812:	702e      	strb	r6, [r5, #0]
 800a814:	f004 ffe4 	bl	800f7e0 <_ZN8touchgfx11Application11getInstanceEv>
 800a818:	6803      	ldr	r3, [r0, #0]
 800a81a:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800a81c:	4798      	blx	r3
 800a81e:	f894 306b 	ldrb.w	r3, [r4, #107]	@ 0x6b
 800a822:	b90b      	cbnz	r3, 800a828 <_ZN8touchgfx3HAL4tickEv+0x6c>
 800a824:	f884 606b 	strb.w	r6, [r4, #107]	@ 0x6b
 800a828:	f004 ffda 	bl	800f7e0 <_ZN8touchgfx11Application11getInstanceEv>
 800a82c:	6803      	ldr	r3, [r0, #0]
 800a82e:	695b      	ldr	r3, [r3, #20]
 800a830:	4798      	blx	r3
 800a832:	6de0      	ldr	r0, [r4, #92]	@ 0x5c
 800a834:	6803      	ldr	r3, [r0, #0]
 800a836:	691b      	ldr	r3, [r3, #16]
 800a838:	4798      	blx	r3
 800a83a:	f894 306b 	ldrb.w	r3, [r4, #107]	@ 0x6b
 800a83e:	f894 206c 	ldrb.w	r2, [r4, #108]	@ 0x6c
 800a842:	3b01      	subs	r3, #1
 800a844:	b2db      	uxtb	r3, r3
 800a846:	f884 306b 	strb.w	r3, [r4, #107]	@ 0x6b
 800a84a:	b10a      	cbz	r2, 800a850 <_ZN8touchgfx3HAL4tickEv+0x94>
 800a84c:	2b00      	cmp	r3, #0
 800a84e:	d1eb      	bne.n	800a828 <_ZN8touchgfx3HAL4tickEv+0x6c>
 800a850:	4a3f      	ldr	r2, [pc, #252]	@ (800a950 <_ZN8touchgfx3HAL4tickEv+0x194>)
 800a852:	f994 1068 	ldrsb.w	r1, [r4, #104]	@ 0x68
 800a856:	7813      	ldrb	r3, [r2, #0]
 800a858:	3301      	adds	r3, #1
 800a85a:	b25b      	sxtb	r3, r3
 800a85c:	4299      	cmp	r1, r3
 800a85e:	7013      	strb	r3, [r2, #0]
 800a860:	dc10      	bgt.n	800a884 <_ZN8touchgfx3HAL4tickEv+0xc8>
 800a862:	68e0      	ldr	r0, [r4, #12]
 800a864:	2300      	movs	r3, #0
 800a866:	7013      	strb	r3, [r2, #0]
 800a868:	6803      	ldr	r3, [r0, #0]
 800a86a:	aa03      	add	r2, sp, #12
 800a86c:	68db      	ldr	r3, [r3, #12]
 800a86e:	a902      	add	r1, sp, #8
 800a870:	4798      	blx	r3
 800a872:	6823      	ldr	r3, [r4, #0]
 800a874:	2800      	cmp	r0, #0
 800a876:	d059      	beq.n	800a92c <_ZN8touchgfx3HAL4tickEv+0x170>
 800a878:	f8d3 30cc 	ldr.w	r3, [r3, #204]	@ 0xcc
 800a87c:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 800a880:	4620      	mov	r0, r4
 800a882:	4798      	blx	r3
 800a884:	6960      	ldr	r0, [r4, #20]
 800a886:	2300      	movs	r3, #0
 800a888:	f88d 3007 	strb.w	r3, [sp, #7]
 800a88c:	b158      	cbz	r0, 800a8a6 <_ZN8touchgfx3HAL4tickEv+0xea>
 800a88e:	6803      	ldr	r3, [r0, #0]
 800a890:	f10d 0107 	add.w	r1, sp, #7
 800a894:	68db      	ldr	r3, [r3, #12]
 800a896:	4798      	blx	r3
 800a898:	b128      	cbz	r0, 800a8a6 <_ZN8touchgfx3HAL4tickEv+0xea>
 800a89a:	6de0      	ldr	r0, [r4, #92]	@ 0x5c
 800a89c:	f89d 1007 	ldrb.w	r1, [sp, #7]
 800a8a0:	6803      	ldr	r3, [r0, #0]
 800a8a2:	68db      	ldr	r3, [r3, #12]
 800a8a4:	4798      	blx	r3
 800a8a6:	f104 001c 	add.w	r0, r4, #28
 800a8aa:	f016 fc2d 	bl	8021108 <_ZN8touchgfx8Gestures4tickEv>
 800a8ae:	f894 3070 	ldrb.w	r3, [r4, #112]	@ 0x70
 800a8b2:	b30b      	cbz	r3, 800a8f8 <_ZN8touchgfx3HAL4tickEv+0x13c>
 800a8b4:	6920      	ldr	r0, [r4, #16]
 800a8b6:	6803      	ldr	r3, [r0, #0]
 800a8b8:	691b      	ldr	r3, [r3, #16]
 800a8ba:	4798      	blx	r3
 800a8bc:	6f63      	ldr	r3, [r4, #116]	@ 0x74
 800a8be:	4606      	mov	r6, r0
 800a8c0:	b903      	cbnz	r3, 800a8c4 <_ZN8touchgfx3HAL4tickEv+0x108>
 800a8c2:	6760      	str	r0, [r4, #116]	@ 0x74
 800a8c4:	6f63      	ldr	r3, [r4, #116]	@ 0x74
 800a8c6:	4a23      	ldr	r2, [pc, #140]	@ (800a954 <_ZN8touchgfx3HAL4tickEv+0x198>)
 800a8c8:	1af3      	subs	r3, r6, r3
 800a8ca:	4293      	cmp	r3, r2
 800a8cc:	d914      	bls.n	800a8f8 <_ZN8touchgfx3HAL4tickEv+0x13c>
 800a8ce:	6920      	ldr	r0, [r4, #16]
 800a8d0:	6803      	ldr	r3, [r0, #0]
 800a8d2:	699b      	ldr	r3, [r3, #24]
 800a8d4:	4798      	blx	r3
 800a8d6:	6f63      	ldr	r3, [r4, #116]	@ 0x74
 800a8d8:	2264      	movs	r2, #100	@ 0x64
 800a8da:	1af3      	subs	r3, r6, r3
 800a8dc:	fbb3 f3f2 	udiv	r3, r3, r2
 800a8e0:	fbb0 f0f3 	udiv	r0, r0, r3
 800a8e4:	2800      	cmp	r0, #0
 800a8e6:	dc26      	bgt.n	800a936 <_ZN8touchgfx3HAL4tickEv+0x17a>
 800a8e8:	f884 2069 	strb.w	r2, [r4, #105]	@ 0x69
 800a8ec:	6920      	ldr	r0, [r4, #16]
 800a8ee:	6803      	ldr	r3, [r0, #0]
 800a8f0:	2100      	movs	r1, #0
 800a8f2:	69db      	ldr	r3, [r3, #28]
 800a8f4:	4798      	blx	r3
 800a8f6:	6766      	str	r6, [r4, #116]	@ 0x74
 800a8f8:	6823      	ldr	r3, [r4, #0]
 800a8fa:	4620      	mov	r0, r4
 800a8fc:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 800a900:	4798      	blx	r3
 800a902:	f004 ff6d 	bl	800f7e0 <_ZN8touchgfx11Application11getInstanceEv>
 800a906:	6803      	ldr	r3, [r0, #0]
 800a908:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800a90a:	4798      	blx	r3
 800a90c:	6823      	ldr	r3, [r4, #0]
 800a90e:	4620      	mov	r0, r4
 800a910:	f8d3 30c4 	ldr.w	r3, [r3, #196]	@ 0xc4
 800a914:	4798      	blx	r3
 800a916:	f894 3048 	ldrb.w	r3, [r4, #72]	@ 0x48
 800a91a:	2b02      	cmp	r3, #2
 800a91c:	d002      	beq.n	800a924 <_ZN8touchgfx3HAL4tickEv+0x168>
 800a91e:	2001      	movs	r0, #1
 800a920:	f7f5 ffc4 	bl	80008ac <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 800a924:	2300      	movs	r3, #0
 800a926:	702b      	strb	r3, [r5, #0]
 800a928:	b004      	add	sp, #16
 800a92a:	bd70      	pop	{r4, r5, r6, pc}
 800a92c:	f8d3 30d0 	ldr.w	r3, [r3, #208]	@ 0xd0
 800a930:	4620      	mov	r0, r4
 800a932:	4798      	blx	r3
 800a934:	e7a6      	b.n	800a884 <_ZN8touchgfx3HAL4tickEv+0xc8>
 800a936:	2863      	cmp	r0, #99	@ 0x63
 800a938:	bfcb      	itete	gt
 800a93a:	2300      	movgt	r3, #0
 800a93c:	f1c0 0064 	rsble	r0, r0, #100	@ 0x64
 800a940:	f884 3069 	strbgt.w	r3, [r4, #105]	@ 0x69
 800a944:	f884 0069 	strble.w	r0, [r4, #105]	@ 0x69
 800a948:	e7d0      	b.n	800a8ec <_ZN8touchgfx3HAL4tickEv+0x130>
 800a94a:	bf00      	nop
 800a94c:	20014048 	.word	0x20014048
 800a950:	20014049 	.word	0x20014049
 800a954:	05f5e100 	.word	0x05f5e100

0800a958 <_ZN8touchgfx3HAL17unlockFrameBufferEv>:
 800a958:	b510      	push	{r4, lr}
 800a95a:	4604      	mov	r4, r0
 800a95c:	f7f6 f924 	bl	8000ba8 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>
 800a960:	6863      	ldr	r3, [r4, #4]
 800a962:	2200      	movs	r2, #0
 800a964:	729a      	strb	r2, [r3, #10]
 800a966:	bd10      	pop	{r4, pc}

0800a968 <_ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE>:
 800a968:	65c1      	str	r1, [r0, #92]	@ 0x5c
 800a96a:	301c      	adds	r0, #28
 800a96c:	f016 bbca 	b.w	8021104 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>

0800a970 <_ZN8touchgfx3HAL5touchEll>:
 800a970:	b530      	push	{r4, r5, lr}
 800a972:	b087      	sub	sp, #28
 800a974:	4604      	mov	r4, r0
 800a976:	a804      	add	r0, sp, #16
 800a978:	e9cd 1204 	strd	r1, r2, [sp, #16]
 800a97c:	f004 fd18 	bl	800f3b0 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>
 800a980:	9b04      	ldr	r3, [sp, #16]
 800a982:	f8ad 300c 	strh.w	r3, [sp, #12]
 800a986:	a906      	add	r1, sp, #24
 800a988:	9b05      	ldr	r3, [sp, #20]
 800a98a:	f821 3d0a 	strh.w	r3, [r1, #-10]!
 800a98e:	a803      	add	r0, sp, #12
 800a990:	f004 fd60 	bl	800f454 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>
 800a994:	f894 106f 	ldrb.w	r1, [r4, #111]	@ 0x6f
 800a998:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 800a99c:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 800a9a0:	f104 001c 	add.w	r0, r4, #28
 800a9a4:	b189      	cbz	r1, 800a9ca <_ZN8touchgfx3HAL5touchEll+0x5a>
 800a9a6:	f8b4 5064 	ldrh.w	r5, [r4, #100]	@ 0x64
 800a9aa:	9300      	str	r3, [sp, #0]
 800a9ac:	f8b4 1060 	ldrh.w	r1, [r4, #96]	@ 0x60
 800a9b0:	4613      	mov	r3, r2
 800a9b2:	462a      	mov	r2, r5
 800a9b4:	f016 fbb6 	bl	8021124 <_ZN8touchgfx8Gestures17registerDragEventEtttt>
 800a9b8:	b128      	cbz	r0, 800a9c6 <_ZN8touchgfx3HAL5touchEll+0x56>
 800a9ba:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 800a9be:	6623      	str	r3, [r4, #96]	@ 0x60
 800a9c0:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 800a9c4:	6663      	str	r3, [r4, #100]	@ 0x64
 800a9c6:	b007      	add	sp, #28
 800a9c8:	bd30      	pop	{r4, r5, pc}
 800a9ca:	f016 fbeb 	bl	80211a4 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 800a9ce:	2301      	movs	r3, #1
 800a9d0:	f884 306f 	strb.w	r3, [r4, #111]	@ 0x6f
 800a9d4:	e7f1      	b.n	800a9ba <_ZN8touchgfx3HAL5touchEll+0x4a>

0800a9d6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm>:
 800a9d6:	b510      	push	{r4, lr}
 800a9d8:	2b00      	cmp	r3, #0
 800a9da:	d046      	beq.n	800aa6a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800a9dc:	ea81 0002 	eor.w	r0, r1, r2
 800a9e0:	07c4      	lsls	r4, r0, #31
 800a9e2:	d508      	bpl.n	800a9f6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x20>
 800a9e4:	440b      	add	r3, r1
 800a9e6:	3a01      	subs	r2, #1
 800a9e8:	428b      	cmp	r3, r1
 800a9ea:	d93e      	bls.n	800aa6a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800a9ec:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800a9f0:	f801 0b01 	strb.w	r0, [r1], #1
 800a9f4:	e7f8      	b.n	800a9e8 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x12>
 800a9f6:	07d0      	lsls	r0, r2, #31
 800a9f8:	bf42      	ittt	mi
 800a9fa:	f812 0b01 	ldrbmi.w	r0, [r2], #1
 800a9fe:	f801 0b01 	strbmi.w	r0, [r1], #1
 800aa02:	f103 33ff 	addmi.w	r3, r3, #4294967295
 800aa06:	2b01      	cmp	r3, #1
 800aa08:	d911      	bls.n	800aa2e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800aa0a:	ea81 0402 	eor.w	r4, r1, r2
 800aa0e:	07a4      	lsls	r4, r4, #30
 800aa10:	4610      	mov	r0, r2
 800aa12:	d022      	beq.n	800aa5a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x84>
 800aa14:	f023 0401 	bic.w	r4, r3, #1
 800aa18:	440c      	add	r4, r1
 800aa1a:	428c      	cmp	r4, r1
 800aa1c:	4602      	mov	r2, r0
 800aa1e:	d904      	bls.n	800aa2a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x54>
 800aa20:	8812      	ldrh	r2, [r2, #0]
 800aa22:	f821 2b02 	strh.w	r2, [r1], #2
 800aa26:	3002      	adds	r0, #2
 800aa28:	e7f7      	b.n	800aa1a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x44>
 800aa2a:	f003 0301 	and.w	r3, r3, #1
 800aa2e:	f023 0003 	bic.w	r0, r3, #3
 800aa32:	4408      	add	r0, r1
 800aa34:	4288      	cmp	r0, r1
 800aa36:	4614      	mov	r4, r2
 800aa38:	d904      	bls.n	800aa44 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x6e>
 800aa3a:	6824      	ldr	r4, [r4, #0]
 800aa3c:	f841 4b04 	str.w	r4, [r1], #4
 800aa40:	3204      	adds	r2, #4
 800aa42:	e7f7      	b.n	800aa34 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x5e>
 800aa44:	f003 0303 	and.w	r3, r3, #3
 800aa48:	440b      	add	r3, r1
 800aa4a:	3a01      	subs	r2, #1
 800aa4c:	428b      	cmp	r3, r1
 800aa4e:	d90c      	bls.n	800aa6a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800aa50:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800aa54:	f801 0b01 	strb.w	r0, [r1], #1
 800aa58:	e7f8      	b.n	800aa4c <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x76>
 800aa5a:	0790      	lsls	r0, r2, #30
 800aa5c:	d0e7      	beq.n	800aa2e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800aa5e:	f832 0b02 	ldrh.w	r0, [r2], #2
 800aa62:	f821 0b02 	strh.w	r0, [r1], #2
 800aa66:	3b02      	subs	r3, #2
 800aa68:	e7e1      	b.n	800aa2e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800aa6a:	2001      	movs	r0, #1
 800aa6c:	bd10      	pop	{r4, pc}

0800aa6e <_ZN8touchgfx3HAL7noTouchEv>:
 800aa6e:	b510      	push	{r4, lr}
 800aa70:	f890 306f 	ldrb.w	r3, [r0, #111]	@ 0x6f
 800aa74:	4604      	mov	r4, r0
 800aa76:	b153      	cbz	r3, 800aa8e <_ZN8touchgfx3HAL7noTouchEv+0x20>
 800aa78:	f8b0 3064 	ldrh.w	r3, [r0, #100]	@ 0x64
 800aa7c:	f8b0 2060 	ldrh.w	r2, [r0, #96]	@ 0x60
 800aa80:	2101      	movs	r1, #1
 800aa82:	301c      	adds	r0, #28
 800aa84:	f016 fb8e 	bl	80211a4 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 800aa88:	2300      	movs	r3, #0
 800aa8a:	f884 306f 	strb.w	r3, [r4, #111]	@ 0x6f
 800aa8e:	bd10      	pop	{r4, pc}

0800aa90 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt>:
 800aa90:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800aa94:	b085      	sub	sp, #20
 800aa96:	ad04      	add	r5, sp, #16
 800aa98:	4604      	mov	r4, r0
 800aa9a:	2000      	movs	r0, #0
 800aa9c:	f845 0d04 	str.w	r0, [r5, #-4]!
 800aaa0:	69a0      	ldr	r0, [r4, #24]
 800aaa2:	6806      	ldr	r6, [r0, #0]
 800aaa4:	9501      	str	r5, [sp, #4]
 800aaa6:	f8bd 5030 	ldrh.w	r5, [sp, #48]	@ 0x30
 800aaaa:	9500      	str	r5, [sp, #0]
 800aaac:	6835      	ldr	r5, [r6, #0]
 800aaae:	4699      	mov	r9, r3
 800aab0:	460f      	mov	r7, r1
 800aab2:	4690      	mov	r8, r2
 800aab4:	47a8      	blx	r5
 800aab6:	4d10      	ldr	r5, [pc, #64]	@ (800aaf8 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x68>)
 800aab8:	4606      	mov	r6, r0
 800aaba:	f8a5 9000 	strh.w	r9, [r5]
 800aabe:	f7f7 ff8d 	bl	80029dc <_ZN8touchgfx3HAL3lcdEv>
 800aac2:	6803      	ldr	r3, [r0, #0]
 800aac4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800aac6:	4798      	blx	r3
 800aac8:	b128      	cbz	r0, 800aad6 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x46>
 800aaca:	2801      	cmp	r0, #1
 800aacc:	d00b      	beq.n	800aae6 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x56>
 800aace:	4630      	mov	r0, r6
 800aad0:	b005      	add	sp, #20
 800aad2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800aad6:	882b      	ldrh	r3, [r5, #0]
 800aad8:	fb08 7203 	mla	r2, r8, r3, r7
 800aadc:	9b03      	ldr	r3, [sp, #12]
 800aade:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
 800aae2:	63e3      	str	r3, [r4, #60]	@ 0x3c
 800aae4:	e7f3      	b.n	800aace <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 800aae6:	882a      	ldrh	r2, [r5, #0]
 800aae8:	9b03      	ldr	r3, [sp, #12]
 800aaea:	fb08 7202 	mla	r2, r8, r2, r7
 800aaee:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 800aaf2:	1a9a      	subs	r2, r3, r2
 800aaf4:	63e2      	str	r2, [r4, #60]	@ 0x3c
 800aaf6:	e7ea      	b.n	800aace <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 800aaf8:	2001403c 	.word	0x2001403c

0800aafc <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs>:
 800aafc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800aafe:	4b15      	ldr	r3, [pc, #84]	@ (800ab54 <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x58>)
 800ab00:	f890 407d 	ldrb.w	r4, [r0, #125]	@ 0x7d
 800ab04:	881b      	ldrh	r3, [r3, #0]
 800ab06:	6bc5      	ldr	r5, [r0, #60]	@ 0x3c
 800ab08:	fb93 f4f4 	sdiv	r4, r3, r4
 800ab0c:	460f      	mov	r7, r1
 800ab0e:	4606      	mov	r6, r0
 800ab10:	f7f7 ff64 	bl	80029dc <_ZN8touchgfx3HAL3lcdEv>
 800ab14:	6803      	ldr	r3, [r0, #0]
 800ab16:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800ab18:	4798      	blx	r3
 800ab1a:	2801      	cmp	r0, #1
 800ab1c:	d00b      	beq.n	800ab36 <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x3a>
 800ab1e:	d303      	bcc.n	800ab28 <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x2c>
 800ab20:	2802      	cmp	r0, #2
 800ab22:	d010      	beq.n	800ab46 <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x4a>
 800ab24:	63f5      	str	r5, [r6, #60]	@ 0x3c
 800ab26:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800ab28:	4b0b      	ldr	r3, [pc, #44]	@ (800ab58 <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x5c>)
 800ab2a:	8819      	ldrh	r1, [r3, #0]
 800ab2c:	437c      	muls	r4, r7
 800ab2e:	434c      	muls	r4, r1
 800ab30:	eba5 0544 	sub.w	r5, r5, r4, lsl #1
 800ab34:	e7f6      	b.n	800ab24 <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x28>
 800ab36:	4b08      	ldr	r3, [pc, #32]	@ (800ab58 <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x5c>)
 800ab38:	8819      	ldrh	r1, [r3, #0]
 800ab3a:	437c      	muls	r4, r7
 800ab3c:	434c      	muls	r4, r1
 800ab3e:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 800ab42:	1b2d      	subs	r5, r5, r4
 800ab44:	e7ee      	b.n	800ab24 <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x28>
 800ab46:	4b04      	ldr	r3, [pc, #16]	@ (800ab58 <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x5c>)
 800ab48:	8819      	ldrh	r1, [r3, #0]
 800ab4a:	437c      	muls	r4, r7
 800ab4c:	434c      	muls	r4, r1
 800ab4e:	eba5 0584 	sub.w	r5, r5, r4, lsl #2
 800ab52:	e7e7      	b.n	800ab24 <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x28>
 800ab54:	2001403e 	.word	0x2001403e
 800ab58:	2001403c 	.word	0x2001403c

0800ab5c <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb>:
 800ab5c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800ab5e:	b08b      	sub	sp, #44	@ 0x2c
 800ab60:	4617      	mov	r7, r2
 800ab62:	4604      	mov	r4, r0
 800ab64:	460e      	mov	r6, r1
 800ab66:	461d      	mov	r5, r3
 800ab68:	f7f7 ff38 	bl	80029dc <_ZN8touchgfx3HAL3lcdEv>
 800ab6c:	6803      	ldr	r3, [r0, #0]
 800ab6e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800ab70:	4798      	blx	r3
 800ab72:	f89d 3054 	ldrb.w	r3, [sp, #84]	@ 0x54
 800ab76:	9007      	str	r0, [sp, #28]
 800ab78:	e9cd 0308 	strd	r0, r3, [sp, #32]
 800ab7c:	4b0d      	ldr	r3, [pc, #52]	@ (800abb4 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb+0x58>)
 800ab7e:	6822      	ldr	r2, [r4, #0]
 800ab80:	881b      	ldrh	r3, [r3, #0]
 800ab82:	9306      	str	r3, [sp, #24]
 800ab84:	f89d 3050 	ldrb.w	r3, [sp, #80]	@ 0x50
 800ab88:	9305      	str	r3, [sp, #20]
 800ab8a:	f89d 304c 	ldrb.w	r3, [sp, #76]	@ 0x4c
 800ab8e:	9304      	str	r3, [sp, #16]
 800ab90:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 800ab94:	9303      	str	r3, [sp, #12]
 800ab96:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 800ab9a:	9302      	str	r3, [sp, #8]
 800ab9c:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
 800aba0:	e9cd 5300 	strd	r5, r3, [sp]
 800aba4:	4631      	mov	r1, r6
 800aba6:	6c15      	ldr	r5, [r2, #64]	@ 0x40
 800aba8:	463b      	mov	r3, r7
 800abaa:	2200      	movs	r2, #0
 800abac:	4620      	mov	r0, r4
 800abae:	47a8      	blx	r5
 800abb0:	b00b      	add	sp, #44	@ 0x2c
 800abb2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800abb4:	2001403c 	.word	0x2001403c

0800abb8 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb>:
 800abb8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800abbc:	4698      	mov	r8, r3
 800abbe:	6803      	ldr	r3, [r0, #0]
 800abc0:	6c1d      	ldr	r5, [r3, #64]	@ 0x40
 800abc2:	4b15      	ldr	r3, [pc, #84]	@ (800ac18 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb+0x60>)
 800abc4:	b08b      	sub	sp, #44	@ 0x2c
 800abc6:	4617      	mov	r7, r2
 800abc8:	f8b3 9000 	ldrh.w	r9, [r3]
 800abcc:	460e      	mov	r6, r1
 800abce:	4604      	mov	r4, r0
 800abd0:	f7f7 ff04 	bl	80029dc <_ZN8touchgfx3HAL3lcdEv>
 800abd4:	6803      	ldr	r3, [r0, #0]
 800abd6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800abd8:	4798      	blx	r3
 800abda:	f89d 3058 	ldrb.w	r3, [sp, #88]	@ 0x58
 800abde:	e9cd 0308 	strd	r0, r3, [sp, #32]
 800abe2:	2302      	movs	r3, #2
 800abe4:	e9cd 9306 	strd	r9, r3, [sp, #24]
 800abe8:	2301      	movs	r3, #1
 800abea:	9305      	str	r3, [sp, #20]
 800abec:	f89d 3054 	ldrb.w	r3, [sp, #84]	@ 0x54
 800abf0:	9304      	str	r3, [sp, #16]
 800abf2:	f8bd 3050 	ldrh.w	r3, [sp, #80]	@ 0x50
 800abf6:	9303      	str	r3, [sp, #12]
 800abf8:	f8bd 304c 	ldrh.w	r3, [sp, #76]	@ 0x4c
 800abfc:	9302      	str	r3, [sp, #8]
 800abfe:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 800ac02:	2200      	movs	r2, #0
 800ac04:	e9cd 8300 	strd	r8, r3, [sp]
 800ac08:	4631      	mov	r1, r6
 800ac0a:	463b      	mov	r3, r7
 800ac0c:	4620      	mov	r0, r4
 800ac0e:	47a8      	blx	r5
 800ac10:	b00b      	add	sp, #44	@ 0x2c
 800ac12:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800ac16:	bf00      	nop
 800ac18:	2001403c 	.word	0x2001403c

0800ac1c <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb>:
 800ac1c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800ac20:	4698      	mov	r8, r3
 800ac22:	6803      	ldr	r3, [r0, #0]
 800ac24:	6ddd      	ldr	r5, [r3, #92]	@ 0x5c
 800ac26:	4b11      	ldr	r3, [pc, #68]	@ (800ac6c <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb+0x50>)
 800ac28:	b087      	sub	sp, #28
 800ac2a:	f8b3 9000 	ldrh.w	r9, [r3]
 800ac2e:	460e      	mov	r6, r1
 800ac30:	4617      	mov	r7, r2
 800ac32:	4604      	mov	r4, r0
 800ac34:	f7f7 fed2 	bl	80029dc <_ZN8touchgfx3HAL3lcdEv>
 800ac38:	6803      	ldr	r3, [r0, #0]
 800ac3a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800ac3c:	4798      	blx	r3
 800ac3e:	f89d 3044 	ldrb.w	r3, [sp, #68]	@ 0x44
 800ac42:	f8cd 900c 	str.w	r9, [sp, #12]
 800ac46:	e9cd 0304 	strd	r0, r3, [sp, #16]
 800ac4a:	f89d 3040 	ldrb.w	r3, [sp, #64]	@ 0x40
 800ac4e:	9302      	str	r3, [sp, #8]
 800ac50:	f8bd 303c 	ldrh.w	r3, [sp, #60]	@ 0x3c
 800ac54:	9301      	str	r3, [sp, #4]
 800ac56:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
 800ac5a:	9300      	str	r3, [sp, #0]
 800ac5c:	463a      	mov	r2, r7
 800ac5e:	4643      	mov	r3, r8
 800ac60:	4631      	mov	r1, r6
 800ac62:	4620      	mov	r0, r4
 800ac64:	47a8      	blx	r5
 800ac66:	b007      	add	sp, #28
 800ac68:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800ac6c:	2001403c 	.word	0x2001403c

0800ac70 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE>:
 800ac70:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ac74:	4604      	mov	r4, r0
 800ac76:	b08f      	sub	sp, #60	@ 0x3c
 800ac78:	4610      	mov	r0, r2
 800ac7a:	460d      	mov	r5, r1
 800ac7c:	4691      	mov	r9, r2
 800ac7e:	461e      	mov	r6, r3
 800ac80:	f007 ff30 	bl	8012ae4 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 800ac84:	2800      	cmp	r0, #0
 800ac86:	f000 809d 	beq.w	800adc4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x154>
 800ac8a:	6823      	ldr	r3, [r4, #0]
 800ac8c:	f8df b198 	ldr.w	fp, [pc, #408]	@ 800ae28 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>
 800ac90:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800ac92:	f8df a198 	ldr.w	sl, [pc, #408]	@ 800ae2c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>
 800ac96:	4f61      	ldr	r7, [pc, #388]	@ (800ae1c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800ac98:	4620      	mov	r0, r4
 800ac9a:	4798      	blx	r3
 800ac9c:	6823      	ldr	r3, [r4, #0]
 800ac9e:	4620      	mov	r0, r4
 800aca0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800aca2:	4798      	blx	r3
 800aca4:	f8bb 3000 	ldrh.w	r3, [fp]
 800aca8:	9301      	str	r3, [sp, #4]
 800acaa:	f10d 0838 	add.w	r8, sp, #56	@ 0x38
 800acae:	f8ba 3000 	ldrh.w	r3, [sl]
 800acb2:	9302      	str	r3, [sp, #8]
 800acb4:	883b      	ldrh	r3, [r7, #0]
 800acb6:	f828 9d1c 	strh.w	r9, [r8, #-28]!
 800acba:	9303      	str	r3, [sp, #12]
 800acbc:	4b58      	ldr	r3, [pc, #352]	@ (800ae20 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 800acbe:	9305      	str	r3, [sp, #20]
 800acc0:	881a      	ldrh	r2, [r3, #0]
 800acc2:	9204      	str	r2, [sp, #16]
 800acc4:	4640      	mov	r0, r8
 800acc6:	f007 ffa1 	bl	8012c0c <_ZNK8touchgfx6Bitmap8getWidthEv>
 800acca:	8038      	strh	r0, [r7, #0]
 800accc:	4640      	mov	r0, r8
 800acce:	f007 ffd1 	bl	8012c74 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800acd2:	9b05      	ldr	r3, [sp, #20]
 800acd4:	b280      	uxth	r0, r0
 800acd6:	8018      	strh	r0, [r3, #0]
 800acd8:	4b52      	ldr	r3, [pc, #328]	@ (800ae24 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b4>)
 800acda:	781b      	ldrb	r3, [r3, #0]
 800acdc:	2b00      	cmp	r3, #0
 800acde:	d174      	bne.n	800adca <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x15a>
 800ace0:	883b      	ldrh	r3, [r7, #0]
 800ace2:	f8ab 3000 	strh.w	r3, [fp]
 800ace6:	f8aa 0000 	strh.w	r0, [sl]
 800acea:	4648      	mov	r0, r9
 800acec:	e9d4 870f 	ldrd	r8, r7, [r4, #60]	@ 0x3c
 800acf0:	f007 fef8 	bl	8012ae4 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 800acf4:	e9c4 000f 	strd	r0, r0, [r4, #60]	@ 0x3c
 800acf8:	2200      	movs	r2, #0
 800acfa:	4611      	mov	r1, r2
 800acfc:	4628      	mov	r0, r5
 800acfe:	f9b5 9004 	ldrsh.w	r9, [r5, #4]
 800ad02:	f9b5 a006 	ldrsh.w	sl, [r5, #6]
 800ad06:	f7f7 ffcb 	bl	8002ca0 <_ZN8touchgfx8Drawable5setXYEss>
 800ad0a:	2301      	movs	r3, #1
 800ad0c:	f895 b025 	ldrb.w	fp, [r5, #37]	@ 0x25
 800ad10:	f885 3025 	strb.w	r3, [r5, #37]	@ 0x25
 800ad14:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 800ad18:	2b00      	cmp	r3, #0
 800ad1a:	dd5c      	ble.n	800add6 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 800ad1c:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 800ad20:	2b00      	cmp	r3, #0
 800ad22:	dd58      	ble.n	800add6 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 800ad24:	462a      	mov	r2, r5
 800ad26:	ab0a      	add	r3, sp, #40	@ 0x28
 800ad28:	f852 0f04 	ldr.w	r0, [r2, #4]!
 800ad2c:	6851      	ldr	r1, [r2, #4]
 800ad2e:	c303      	stmia	r3!, {r0, r1}
 800ad30:	4631      	mov	r1, r6
 800ad32:	a80a      	add	r0, sp, #40	@ 0x28
 800ad34:	f7ff fbc8 	bl	800a4c8 <_ZN8touchgfx4RectaNERKS0_>
 800ad38:	4b38      	ldr	r3, [pc, #224]	@ (800ae1c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800ad3a:	f9b3 2000 	ldrsh.w	r2, [r3]
 800ad3e:	f8ad 2034 	strh.w	r2, [sp, #52]	@ 0x34
 800ad42:	2100      	movs	r1, #0
 800ad44:	aa0a      	add	r2, sp, #40	@ 0x28
 800ad46:	4b36      	ldr	r3, [pc, #216]	@ (800ae20 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 800ad48:	910c      	str	r1, [sp, #48]	@ 0x30
 800ad4a:	e892 0003 	ldmia.w	r2, {r0, r1}
 800ad4e:	f9b3 3000 	ldrsh.w	r3, [r3]
 800ad52:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 800ad56:	ab08      	add	r3, sp, #32
 800ad58:	e883 0003 	stmia.w	r3, {r0, r1}
 800ad5c:	4618      	mov	r0, r3
 800ad5e:	a90c      	add	r1, sp, #48	@ 0x30
 800ad60:	f7ff fbb2 	bl	800a4c8 <_ZN8touchgfx4RectaNERKS0_>
 800ad64:	6ce3      	ldr	r3, [r4, #76]	@ 0x4c
 800ad66:	2b00      	cmp	r3, #0
 800ad68:	d13c      	bne.n	800ade4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x174>
 800ad6a:	2000      	movs	r0, #0
 800ad6c:	f884 0058 	strb.w	r0, [r4, #88]	@ 0x58
 800ad70:	2600      	movs	r6, #0
 800ad72:	682a      	ldr	r2, [r5, #0]
 800ad74:	696b      	ldr	r3, [r5, #20]
 800ad76:	616e      	str	r6, [r5, #20]
 800ad78:	9305      	str	r3, [sp, #20]
 800ad7a:	6892      	ldr	r2, [r2, #8]
 800ad7c:	a908      	add	r1, sp, #32
 800ad7e:	4628      	mov	r0, r5
 800ad80:	4790      	blx	r2
 800ad82:	9b05      	ldr	r3, [sp, #20]
 800ad84:	616b      	str	r3, [r5, #20]
 800ad86:	4652      	mov	r2, sl
 800ad88:	f884 6058 	strb.w	r6, [r4, #88]	@ 0x58
 800ad8c:	4649      	mov	r1, r9
 800ad8e:	4628      	mov	r0, r5
 800ad90:	f885 b025 	strb.w	fp, [r5, #37]	@ 0x25
 800ad94:	f7f7 ff84 	bl	8002ca0 <_ZN8touchgfx8Drawable5setXYEss>
 800ad98:	4b23      	ldr	r3, [pc, #140]	@ (800ae28 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>)
 800ad9a:	9a01      	ldr	r2, [sp, #4]
 800ad9c:	801a      	strh	r2, [r3, #0]
 800ad9e:	4b23      	ldr	r3, [pc, #140]	@ (800ae2c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>)
 800ada0:	9a02      	ldr	r2, [sp, #8]
 800ada2:	801a      	strh	r2, [r3, #0]
 800ada4:	4b1d      	ldr	r3, [pc, #116]	@ (800ae1c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800ada6:	9a03      	ldr	r2, [sp, #12]
 800ada8:	801a      	strh	r2, [r3, #0]
 800adaa:	4b1d      	ldr	r3, [pc, #116]	@ (800ae20 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 800adac:	9a04      	ldr	r2, [sp, #16]
 800adae:	801a      	strh	r2, [r3, #0]
 800adb0:	e9c4 870f 	strd	r8, r7, [r4, #60]	@ 0x3c
 800adb4:	6823      	ldr	r3, [r4, #0]
 800adb6:	4620      	mov	r0, r4
 800adb8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800adba:	4798      	blx	r3
 800adbc:	6823      	ldr	r3, [r4, #0]
 800adbe:	4620      	mov	r0, r4
 800adc0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800adc2:	4798      	blx	r3
 800adc4:	b00f      	add	sp, #60	@ 0x3c
 800adc6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800adca:	883b      	ldrh	r3, [r7, #0]
 800adcc:	f8ab 0000 	strh.w	r0, [fp]
 800add0:	f8aa 3000 	strh.w	r3, [sl]
 800add4:	e789      	b.n	800acea <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x7a>
 800add6:	462a      	mov	r2, r5
 800add8:	ab0a      	add	r3, sp, #40	@ 0x28
 800adda:	f852 0f04 	ldr.w	r0, [r2, #4]!
 800adde:	6851      	ldr	r1, [r2, #4]
 800ade0:	c303      	stmia	r3!, {r0, r1}
 800ade2:	e7a9      	b.n	800ad38 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xc8>
 800ade4:	a807      	add	r0, sp, #28
 800ade6:	f008 f887 	bl	8012ef8 <_ZNK8touchgfx6Bitmap9getFormatEv>
 800adea:	4606      	mov	r6, r0
 800adec:	6ce0      	ldr	r0, [r4, #76]	@ 0x4c
 800adee:	6803      	ldr	r3, [r0, #0]
 800adf0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800adf2:	4798      	blx	r3
 800adf4:	4286      	cmp	r6, r0
 800adf6:	d1b8      	bne.n	800ad6a <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfa>
 800adf8:	f7f7 fdf0 	bl	80029dc <_ZN8touchgfx3HAL3lcdEv>
 800adfc:	6803      	ldr	r3, [r0, #0]
 800adfe:	4606      	mov	r6, r0
 800ae00:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800ae02:	9305      	str	r3, [sp, #20]
 800ae04:	a807      	add	r0, sp, #28
 800ae06:	f008 f877 	bl	8012ef8 <_ZNK8touchgfx6Bitmap9getFormatEv>
 800ae0a:	9b05      	ldr	r3, [sp, #20]
 800ae0c:	4601      	mov	r1, r0
 800ae0e:	4630      	mov	r0, r6
 800ae10:	4798      	blx	r3
 800ae12:	f080 0001 	eor.w	r0, r0, #1
 800ae16:	b2c0      	uxtb	r0, r0
 800ae18:	e7a8      	b.n	800ad6c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfc>
 800ae1a:	bf00      	nop
 800ae1c:	20014036 	.word	0x20014036
 800ae20:	20014038 	.word	0x20014038
 800ae24:	2001403a 	.word	0x2001403a
 800ae28:	2001403c 	.word	0x2001403c
 800ae2c:	2001403e 	.word	0x2001403e

0800ae30 <_ZN8touchgfx3HAL20getClientFrameBufferEv>:
 800ae30:	b510      	push	{r4, lr}
 800ae32:	4b07      	ldr	r3, [pc, #28]	@ (800ae50 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x20>)
 800ae34:	781b      	ldrb	r3, [r3, #0]
 800ae36:	4604      	mov	r4, r0
 800ae38:	b13b      	cbz	r3, 800ae4a <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 800ae3a:	6803      	ldr	r3, [r0, #0]
 800ae3c:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800ae3e:	4798      	blx	r3
 800ae40:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 800ae42:	4283      	cmp	r3, r0
 800ae44:	d101      	bne.n	800ae4a <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 800ae46:	6c20      	ldr	r0, [r4, #64]	@ 0x40
 800ae48:	bd10      	pop	{r4, pc}
 800ae4a:	6be0      	ldr	r0, [r4, #60]	@ 0x3c
 800ae4c:	e7fc      	b.n	800ae48 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x18>
 800ae4e:	bf00      	nop
 800ae50:	20014040 	.word	0x20014040

0800ae54 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt>:
 800ae54:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ae58:	b08a      	sub	sp, #40	@ 0x28
 800ae5a:	461d      	mov	r5, r3
 800ae5c:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 800ae60:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800ae64:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
 800ae68:	f8ad 3018 	strh.w	r3, [sp, #24]
 800ae6c:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 800ae70:	f8ad 301a 	strh.w	r3, [sp, #26]
 800ae74:	2400      	movs	r4, #0
 800ae76:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 800ae7a:	f8bd 604c 	ldrh.w	r6, [sp, #76]	@ 0x4c
 800ae7e:	f8ad 301c 	strh.w	r3, [sp, #28]
 800ae82:	4690      	mov	r8, r2
 800ae84:	4607      	mov	r7, r0
 800ae86:	9404      	str	r4, [sp, #16]
 800ae88:	f88d 4020 	strb.w	r4, [sp, #32]
 800ae8c:	f7ff ffd0 	bl	800ae30 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800ae90:	fb06 8505 	mla	r5, r6, r5, r8
 800ae94:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 800ae98:	6878      	ldr	r0, [r7, #4]
 800ae9a:	9505      	str	r5, [sp, #20]
 800ae9c:	f8ad 601e 	strh.w	r6, [sp, #30]
 800aea0:	f88d 4022 	strb.w	r4, [sp, #34]	@ 0x22
 800aea4:	f88d 4021 	strb.w	r4, [sp, #33]	@ 0x21
 800aea8:	f88d 4023 	strb.w	r4, [sp, #35]	@ 0x23
 800aeac:	f88d 4024 	strb.w	r4, [sp, #36]	@ 0x24
 800aeb0:	6803      	ldr	r3, [r0, #0]
 800aeb2:	a901      	add	r1, sp, #4
 800aeb4:	685b      	ldr	r3, [r3, #4]
 800aeb6:	4798      	blx	r3
 800aeb8:	b00a      	add	sp, #40	@ 0x28
 800aeba:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800aebe <_ZN8touchgfx3HAL12blitFillWordEtttttt>:
 800aebe:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800aec2:	b08b      	sub	sp, #44	@ 0x2c
 800aec4:	2400      	movs	r4, #0
 800aec6:	461d      	mov	r5, r3
 800aec8:	f44f 6300 	mov.w	r3, #2048	@ 0x800
 800aecc:	4688      	mov	r8, r1
 800aece:	4691      	mov	r9, r2
 800aed0:	f8bd 6050 	ldrh.w	r6, [sp, #80]	@ 0x50
 800aed4:	9404      	str	r4, [sp, #16]
 800aed6:	4607      	mov	r7, r0
 800aed8:	e9cd 3401 	strd	r3, r4, [sp, #4]
 800aedc:	f7ff ffa8 	bl	800ae30 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800aee0:	fb06 9505 	mla	r5, r6, r5, r9
 800aee4:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 800aee8:	f8ad 3018 	strh.w	r3, [sp, #24]
 800aeec:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 800aef0:	f8bd 304c 	ldrh.w	r3, [sp, #76]	@ 0x4c
 800aef4:	6878      	ldr	r0, [r7, #4]
 800aef6:	9505      	str	r5, [sp, #20]
 800aef8:	f8ad 301a 	strh.w	r3, [sp, #26]
 800aefc:	f8ad 401c 	strh.w	r4, [sp, #28]
 800af00:	f8ad 601e 	strh.w	r6, [sp, #30]
 800af04:	f8cd 8010 	str.w	r8, [sp, #16]
 800af08:	f8ad 4020 	strh.w	r4, [sp, #32]
 800af0c:	f88d 4022 	strb.w	r4, [sp, #34]	@ 0x22
 800af10:	f88d 4023 	strb.w	r4, [sp, #35]	@ 0x23
 800af14:	f88d 4024 	strb.w	r4, [sp, #36]	@ 0x24
 800af18:	6803      	ldr	r3, [r0, #0]
 800af1a:	a901      	add	r1, sp, #4
 800af1c:	685b      	ldr	r3, [r3, #4]
 800af1e:	4798      	blx	r3
 800af20:	b00b      	add	sp, #44	@ 0x2c
 800af22:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	...

0800af28 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b>:
 800af28:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800af2c:	b08a      	sub	sp, #40	@ 0x28
 800af2e:	4698      	mov	r8, r3
 800af30:	f89d 505c 	ldrb.w	r5, [sp, #92]	@ 0x5c
 800af34:	f89d c054 	ldrb.w	ip, [sp, #84]	@ 0x54
 800af38:	f8bd 7058 	ldrh.w	r7, [sp, #88]	@ 0x58
 800af3c:	f89d 4060 	ldrb.w	r4, [sp, #96]	@ 0x60
 800af40:	2300      	movs	r3, #0
 800af42:	2d0b      	cmp	r5, #11
 800af44:	4606      	mov	r6, r0
 800af46:	9304      	str	r3, [sp, #16]
 800af48:	f89d 0050 	ldrb.w	r0, [sp, #80]	@ 0x50
 800af4c:	d138      	bne.n	800afc0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x98>
 800af4e:	2380      	movs	r3, #128	@ 0x80
 800af50:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800af54:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 800af58:	f8ad 3018 	strh.w	r3, [sp, #24]
 800af5c:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 800af60:	f8ad 301a 	strh.w	r3, [sp, #26]
 800af64:	f88d 0020 	strb.w	r0, [sp, #32]
 800af68:	f8bd 304c 	ldrh.w	r3, [sp, #76]	@ 0x4c
 800af6c:	f8ad 301c 	strh.w	r3, [sp, #28]
 800af70:	4630      	mov	r0, r6
 800af72:	9203      	str	r2, [sp, #12]
 800af74:	f7ff ff5c 	bl	800ae30 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800af78:	2c0b      	cmp	r4, #11
 800af7a:	bf98      	it	ls
 800af7c:	4b1b      	ldrls	r3, [pc, #108]	@ (800afec <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc4>)
 800af7e:	f8bd 2040 	ldrh.w	r2, [sp, #64]	@ 0x40
 800af82:	bf98      	it	ls
 800af84:	5d19      	ldrbls	r1, [r3, r4]
 800af86:	f8ad 701e 	strh.w	r7, [sp, #30]
 800af8a:	bf88      	it	hi
 800af8c:	2100      	movhi	r1, #0
 800af8e:	fb02 8307 	mla	r3, r2, r7, r8
 800af92:	10c9      	asrs	r1, r1, #3
 800af94:	fb01 0003 	mla	r0, r1, r3, r0
 800af98:	f89d 3064 	ldrb.w	r3, [sp, #100]	@ 0x64
 800af9c:	9005      	str	r0, [sp, #20]
 800af9e:	f88d 3023 	strb.w	r3, [sp, #35]	@ 0x23
 800afa2:	6870      	ldr	r0, [r6, #4]
 800afa4:	f88d 5021 	strb.w	r5, [sp, #33]	@ 0x21
 800afa8:	2300      	movs	r3, #0
 800afaa:	f88d 4022 	strb.w	r4, [sp, #34]	@ 0x22
 800afae:	f88d 3024 	strb.w	r3, [sp, #36]	@ 0x24
 800afb2:	6803      	ldr	r3, [r0, #0]
 800afb4:	a901      	add	r1, sp, #4
 800afb6:	685b      	ldr	r3, [r3, #4]
 800afb8:	4798      	blx	r3
 800afba:	b00a      	add	sp, #40	@ 0x28
 800afbc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800afc0:	2d02      	cmp	r5, #2
 800afc2:	d109      	bne.n	800afd8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xb0>
 800afc4:	28ff      	cmp	r0, #255	@ 0xff
 800afc6:	d105      	bne.n	800afd4 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xac>
 800afc8:	f1bc 0f00 	cmp.w	ip, #0
 800afcc:	bf14      	ite	ne
 800afce:	2340      	movne	r3, #64	@ 0x40
 800afd0:	2320      	moveq	r3, #32
 800afd2:	e7bd      	b.n	800af50 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800afd4:	2340      	movs	r3, #64	@ 0x40
 800afd6:	e7bb      	b.n	800af50 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800afd8:	28ff      	cmp	r0, #255	@ 0xff
 800afda:	d105      	bne.n	800afe8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc0>
 800afdc:	f1bc 0f00 	cmp.w	ip, #0
 800afe0:	bf14      	ite	ne
 800afe2:	2304      	movne	r3, #4
 800afe4:	2301      	moveq	r3, #1
 800afe6:	e7b3      	b.n	800af50 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800afe8:	2304      	movs	r3, #4
 800afea:	e7b1      	b.n	800af50 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800afec:	08024dac 	.word	0x08024dac

0800aff0 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb>:
 800aff0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800aff4:	b08b      	sub	sp, #44	@ 0x2c
 800aff6:	461d      	mov	r5, r3
 800aff8:	f89d 9058 	ldrb.w	r9, [sp, #88]	@ 0x58
 800affc:	f89d 6060 	ldrb.w	r6, [sp, #96]	@ 0x60
 800b000:	f8bd a05c 	ldrh.w	sl, [sp, #92]	@ 0x5c
 800b004:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 800b008:	bf14      	ite	ne
 800b00a:	2308      	movne	r3, #8
 800b00c:	2302      	moveq	r3, #2
 800b00e:	2400      	movs	r4, #0
 800b010:	e9cd 3401 	strd	r3, r4, [sp, #4]
 800b014:	4688      	mov	r8, r1
 800b016:	4693      	mov	fp, r2
 800b018:	9404      	str	r4, [sp, #16]
 800b01a:	4607      	mov	r7, r0
 800b01c:	f7ff ff08 	bl	800ae30 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800b020:	2e0b      	cmp	r6, #11
 800b022:	bf98      	it	ls
 800b024:	4b15      	ldrls	r3, [pc, #84]	@ (800b07c <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0x8c>)
 800b026:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 800b02a:	bf98      	it	ls
 800b02c:	5d9c      	ldrbls	r4, [r3, r6]
 800b02e:	f8bd 3050 	ldrh.w	r3, [sp, #80]	@ 0x50
 800b032:	f8ad 3018 	strh.w	r3, [sp, #24]
 800b036:	fb05 b50a 	mla	r5, r5, sl, fp
 800b03a:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
 800b03e:	f8ad 301a 	strh.w	r3, [sp, #26]
 800b042:	10e4      	asrs	r4, r4, #3
 800b044:	fb04 0405 	mla	r4, r4, r5, r0
 800b048:	2300      	movs	r3, #0
 800b04a:	6878      	ldr	r0, [r7, #4]
 800b04c:	9405      	str	r4, [sp, #20]
 800b04e:	f8ad 301c 	strh.w	r3, [sp, #28]
 800b052:	f8ad a01e 	strh.w	sl, [sp, #30]
 800b056:	f8cd 8010 	str.w	r8, [sp, #16]
 800b05a:	f88d 9020 	strb.w	r9, [sp, #32]
 800b05e:	f88d 2023 	strb.w	r2, [sp, #35]	@ 0x23
 800b062:	f88d 3024 	strb.w	r3, [sp, #36]	@ 0x24
 800b066:	f88d 6021 	strb.w	r6, [sp, #33]	@ 0x21
 800b06a:	f88d 6022 	strb.w	r6, [sp, #34]	@ 0x22
 800b06e:	6803      	ldr	r3, [r0, #0]
 800b070:	a901      	add	r1, sp, #4
 800b072:	685b      	ldr	r3, [r3, #4]
 800b074:	4798      	blx	r3
 800b076:	b00b      	add	sp, #44	@ 0x2c
 800b078:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800b07c:	08024dac 	.word	0x08024dac

0800b080 <_ZNK8touchgfx3HAL13getDstAddressEttPt>:
 800b080:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b084:	461e      	mov	r6, r3
 800b086:	4b0a      	ldr	r3, [pc, #40]	@ (800b0b0 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x30>)
 800b088:	460f      	mov	r7, r1
 800b08a:	881d      	ldrh	r5, [r3, #0]
 800b08c:	4690      	mov	r8, r2
 800b08e:	f7f7 fca5 	bl	80029dc <_ZN8touchgfx3HAL3lcdEv>
 800b092:	6803      	ldr	r3, [r0, #0]
 800b094:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800b096:	4798      	blx	r3
 800b098:	280b      	cmp	r0, #11
 800b09a:	bf9a      	itte	ls
 800b09c:	4b05      	ldrls	r3, [pc, #20]	@ (800b0b4 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x34>)
 800b09e:	5c1c      	ldrbls	r4, [r3, r0]
 800b0a0:	2400      	movhi	r4, #0
 800b0a2:	fb08 7005 	mla	r0, r8, r5, r7
 800b0a6:	10e4      	asrs	r4, r4, #3
 800b0a8:	fb04 6000 	mla	r0, r4, r0, r6
 800b0ac:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800b0b0:	2001403c 	.word	0x2001403c
 800b0b4:	08024dac 	.word	0x08024dac

0800b0b8 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb>:
 800b0b8:	b5f0      	push	{r4, r5, r6, r7, lr}
 800b0ba:	b08b      	sub	sp, #44	@ 0x2c
 800b0bc:	461f      	mov	r7, r3
 800b0be:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
 800b0c2:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800b0c6:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
 800b0ca:	f8ad 3018 	strh.w	r3, [sp, #24]
 800b0ce:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 800b0d2:	f8ad 301a 	strh.w	r3, [sp, #26]
 800b0d6:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 800b0da:	f8ad 301c 	strh.w	r3, [sp, #28]
 800b0de:	2500      	movs	r5, #0
 800b0e0:	f89d 3050 	ldrb.w	r3, [sp, #80]	@ 0x50
 800b0e4:	f88d 3020 	strb.w	r3, [sp, #32]
 800b0e8:	4604      	mov	r4, r0
 800b0ea:	4616      	mov	r6, r2
 800b0ec:	9504      	str	r5, [sp, #16]
 800b0ee:	f7ff fe9f 	bl	800ae30 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800b0f2:	463a      	mov	r2, r7
 800b0f4:	4631      	mov	r1, r6
 800b0f6:	4603      	mov	r3, r0
 800b0f8:	4620      	mov	r0, r4
 800b0fa:	f7ff ffc1 	bl	800b080 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800b0fe:	4b0e      	ldr	r3, [pc, #56]	@ (800b138 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x80>)
 800b100:	9005      	str	r0, [sp, #20]
 800b102:	881b      	ldrh	r3, [r3, #0]
 800b104:	f8ad 301e 	strh.w	r3, [sp, #30]
 800b108:	f7f7 fc68 	bl	80029dc <_ZN8touchgfx3HAL3lcdEv>
 800b10c:	6803      	ldr	r3, [r0, #0]
 800b10e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800b110:	4798      	blx	r3
 800b112:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 800b114:	f88d 0022 	strb.w	r0, [sp, #34]	@ 0x22
 800b118:	f88d 0021 	strb.w	r0, [sp, #33]	@ 0x21
 800b11c:	9304      	str	r3, [sp, #16]
 800b11e:	6860      	ldr	r0, [r4, #4]
 800b120:	f89d 3058 	ldrb.w	r3, [sp, #88]	@ 0x58
 800b124:	f88d 3023 	strb.w	r3, [sp, #35]	@ 0x23
 800b128:	f88d 5024 	strb.w	r5, [sp, #36]	@ 0x24
 800b12c:	6803      	ldr	r3, [r0, #0]
 800b12e:	a901      	add	r1, sp, #4
 800b130:	685b      	ldr	r3, [r3, #4]
 800b132:	4798      	blx	r3
 800b134:	b00b      	add	sp, #44	@ 0x2c
 800b136:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800b138:	2001403c 	.word	0x2001403c

0800b13c <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE>:
 800b13c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800b13e:	b08d      	sub	sp, #52	@ 0x34
 800b140:	466b      	mov	r3, sp
 800b142:	e883 0006 	stmia.w	r3, {r1, r2}
 800b146:	2300      	movs	r3, #0
 800b148:	9306      	str	r3, [sp, #24]
 800b14a:	6803      	ldr	r3, [r0, #0]
 800b14c:	f8bd 6000 	ldrh.w	r6, [sp]
 800b150:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800b152:	f8bd 7002 	ldrh.w	r7, [sp, #2]
 800b156:	2501      	movs	r5, #1
 800b158:	9503      	str	r5, [sp, #12]
 800b15a:	4604      	mov	r4, r0
 800b15c:	4798      	blx	r3
 800b15e:	463a      	mov	r2, r7
 800b160:	4631      	mov	r1, r6
 800b162:	4603      	mov	r3, r0
 800b164:	4620      	mov	r0, r4
 800b166:	f7ff ff8b 	bl	800b080 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800b16a:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 800b16c:	9307      	str	r3, [sp, #28]
 800b16e:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800b172:	f8ad 3020 	strh.w	r3, [sp, #32]
 800b176:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800b17a:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
 800b17e:	4b0f      	ldr	r3, [pc, #60]	@ (800b1bc <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x80>)
 800b180:	9004      	str	r0, [sp, #16]
 800b182:	881b      	ldrh	r3, [r3, #0]
 800b184:	f8ad 3024 	strh.w	r3, [sp, #36]	@ 0x24
 800b188:	f8ad 3026 	strh.w	r3, [sp, #38]	@ 0x26
 800b18c:	f7f7 fc26 	bl	80029dc <_ZN8touchgfx3HAL3lcdEv>
 800b190:	6803      	ldr	r3, [r0, #0]
 800b192:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800b194:	4798      	blx	r3
 800b196:	23ff      	movs	r3, #255	@ 0xff
 800b198:	f88d 0029 	strb.w	r0, [sp, #41]	@ 0x29
 800b19c:	f88d 002a 	strb.w	r0, [sp, #42]	@ 0x2a
 800b1a0:	6860      	ldr	r0, [r4, #4]
 800b1a2:	f88d 3028 	strb.w	r3, [sp, #40]	@ 0x28
 800b1a6:	f88d 502b 	strb.w	r5, [sp, #43]	@ 0x2b
 800b1aa:	f88d 502c 	strb.w	r5, [sp, #44]	@ 0x2c
 800b1ae:	6803      	ldr	r3, [r0, #0]
 800b1b0:	a903      	add	r1, sp, #12
 800b1b2:	685b      	ldr	r3, [r3, #4]
 800b1b4:	4798      	blx	r3
 800b1b6:	6c60      	ldr	r0, [r4, #68]	@ 0x44
 800b1b8:	b00d      	add	sp, #52	@ 0x34
 800b1ba:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800b1bc:	2001403c 	.word	0x2001403c

0800b1c0 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm>:
 800b1c0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b1c4:	b08c      	sub	sp, #48	@ 0x30
 800b1c6:	461e      	mov	r6, r3
 800b1c8:	466d      	mov	r5, sp
 800b1ca:	2300      	movs	r3, #0
 800b1cc:	e885 0006 	stmia.w	r5, {r1, r2}
 800b1d0:	9306      	str	r3, [sp, #24]
 800b1d2:	6803      	ldr	r3, [r0, #0]
 800b1d4:	f8bd 7000 	ldrh.w	r7, [sp]
 800b1d8:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800b1da:	f8bd 8002 	ldrh.w	r8, [sp, #2]
 800b1de:	2501      	movs	r5, #1
 800b1e0:	9503      	str	r5, [sp, #12]
 800b1e2:	4604      	mov	r4, r0
 800b1e4:	4798      	blx	r3
 800b1e6:	4642      	mov	r2, r8
 800b1e8:	4639      	mov	r1, r7
 800b1ea:	4603      	mov	r3, r0
 800b1ec:	4620      	mov	r0, r4
 800b1ee:	f7ff ff47 	bl	800b080 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800b1f2:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800b1f6:	f8ad 3020 	strh.w	r3, [sp, #32]
 800b1fa:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800b1fe:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
 800b202:	4b11      	ldr	r3, [pc, #68]	@ (800b248 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm+0x88>)
 800b204:	9004      	str	r0, [sp, #16]
 800b206:	881b      	ldrh	r3, [r3, #0]
 800b208:	f8ad 3024 	strh.w	r3, [sp, #36]	@ 0x24
 800b20c:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 800b20e:	f8ad 3026 	strh.w	r3, [sp, #38]	@ 0x26
 800b212:	9607      	str	r6, [sp, #28]
 800b214:	f7f7 fbe2 	bl	80029dc <_ZN8touchgfx3HAL3lcdEv>
 800b218:	6803      	ldr	r3, [r0, #0]
 800b21a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800b21c:	4798      	blx	r3
 800b21e:	23ff      	movs	r3, #255	@ 0xff
 800b220:	f88d 0029 	strb.w	r0, [sp, #41]	@ 0x29
 800b224:	f88d 002a 	strb.w	r0, [sp, #42]	@ 0x2a
 800b228:	6860      	ldr	r0, [r4, #4]
 800b22a:	f88d 3028 	strb.w	r3, [sp, #40]	@ 0x28
 800b22e:	f88d 502b 	strb.w	r5, [sp, #43]	@ 0x2b
 800b232:	f88d 502c 	strb.w	r5, [sp, #44]	@ 0x2c
 800b236:	6803      	ldr	r3, [r0, #0]
 800b238:	a903      	add	r1, sp, #12
 800b23a:	685b      	ldr	r3, [r3, #4]
 800b23c:	4798      	blx	r3
 800b23e:	4630      	mov	r0, r6
 800b240:	b00c      	add	sp, #48	@ 0x30
 800b242:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800b246:	bf00      	nop
 800b248:	2001403c 	.word	0x2001403c

0800b24c <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE>:
 800b24c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800b24e:	b085      	sub	sp, #20
 800b250:	ac02      	add	r4, sp, #8
 800b252:	e884 0006 	stmia.w	r4, {r1, r2}
 800b256:	4605      	mov	r5, r0
 800b258:	f8bd 6008 	ldrh.w	r6, [sp, #8]
 800b25c:	f8bd 700a 	ldrh.w	r7, [sp, #10]
 800b260:	f7ff fde6 	bl	800ae30 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800b264:	463a      	mov	r2, r7
 800b266:	4603      	mov	r3, r0
 800b268:	4631      	mov	r1, r6
 800b26a:	4628      	mov	r0, r5
 800b26c:	f7ff ff08 	bl	800b080 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800b270:	4a05      	ldr	r2, [pc, #20]	@ (800b288 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE+0x3c>)
 800b272:	682b      	ldr	r3, [r5, #0]
 800b274:	8812      	ldrh	r2, [r2, #0]
 800b276:	9200      	str	r2, [sp, #0]
 800b278:	6f1e      	ldr	r6, [r3, #112]	@ 0x70
 800b27a:	e894 0006 	ldmia.w	r4, {r1, r2}
 800b27e:	4603      	mov	r3, r0
 800b280:	4628      	mov	r0, r5
 800b282:	47b0      	blx	r6
 800b284:	b005      	add	sp, #20
 800b286:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800b288:	2001403c 	.word	0x2001403c

0800b28c <_ZN8touchgfx3HAL16swapFrameBuffersEv>:
 800b28c:	b570      	push	{r4, r5, r6, lr}
 800b28e:	f890 306e 	ldrb.w	r3, [r0, #110]	@ 0x6e
 800b292:	4604      	mov	r4, r0
 800b294:	b19b      	cbz	r3, 800b2be <_ZN8touchgfx3HAL16swapFrameBuffersEv+0x32>
 800b296:	2002      	movs	r0, #2
 800b298:	f7f5 fb32 	bl	8000900 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>
 800b29c:	2300      	movs	r3, #0
 800b29e:	f884 306e 	strb.w	r3, [r4, #110]	@ 0x6e
 800b2a2:	f884 306d 	strb.w	r3, [r4, #109]	@ 0x6d
 800b2a6:	6823      	ldr	r3, [r4, #0]
 800b2a8:	4620      	mov	r0, r4
 800b2aa:	f8d3 50c8 	ldr.w	r5, [r3, #200]	@ 0xc8
 800b2ae:	f7ff fdbf 	bl	800ae30 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800b2b2:	462b      	mov	r3, r5
 800b2b4:	4601      	mov	r1, r0
 800b2b6:	4620      	mov	r0, r4
 800b2b8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800b2bc:	4718      	bx	r3
 800b2be:	bd70      	pop	{r4, r5, r6, pc}

0800b2c0 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>:
 800b2c0:	b538      	push	{r3, r4, r5, lr}
 800b2c2:	f890 307b 	ldrb.w	r3, [r0, #123]	@ 0x7b
 800b2c6:	428b      	cmp	r3, r1
 800b2c8:	4604      	mov	r4, r0
 800b2ca:	460d      	mov	r5, r1
 800b2cc:	d006      	beq.n	800b2dc <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1c>
 800b2ce:	6803      	ldr	r3, [r0, #0]
 800b2d0:	b929      	cbnz	r1, 800b2de <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1e>
 800b2d2:	f8d3 30d8 	ldr.w	r3, [r3, #216]	@ 0xd8
 800b2d6:	4798      	blx	r3
 800b2d8:	f884 507b 	strb.w	r5, [r4, #123]	@ 0x7b
 800b2dc:	bd38      	pop	{r3, r4, r5, pc}
 800b2de:	f8d3 30dc 	ldr.w	r3, [r3, #220]	@ 0xdc
 800b2e2:	e7f8      	b.n	800b2d6 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x16>

0800b2e4 <_ZN8touchgfx3HAL15lockFrameBufferEv>:
 800b2e4:	b510      	push	{r4, lr}
 800b2e6:	4b0c      	ldr	r3, [pc, #48]	@ (800b318 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x34>)
 800b2e8:	781b      	ldrb	r3, [r3, #0]
 800b2ea:	4604      	mov	r4, r0
 800b2ec:	b953      	cbnz	r3, 800b304 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x20>
 800b2ee:	f890 3048 	ldrb.w	r3, [r0, #72]	@ 0x48
 800b2f2:	b93b      	cbnz	r3, 800b304 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x20>
 800b2f4:	6840      	ldr	r0, [r0, #4]
 800b2f6:	f000 f92b 	bl	800b550 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>
 800b2fa:	b118      	cbz	r0, 800b304 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x20>
 800b2fc:	6862      	ldr	r2, [r4, #4]
 800b2fe:	7a53      	ldrb	r3, [r2, #9]
 800b300:	2b00      	cmp	r3, #0
 800b302:	d0fc      	beq.n	800b2fe <_ZN8touchgfx3HAL15lockFrameBufferEv+0x1a>
 800b304:	f7f5 fc48 	bl	8000b98 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 800b308:	4620      	mov	r0, r4
 800b30a:	2100      	movs	r1, #0
 800b30c:	f7ff ffd8 	bl	800b2c0 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 800b310:	4620      	mov	r0, r4
 800b312:	f7ff fd8d 	bl	800ae30 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800b316:	bd10      	pop	{r4, pc}
 800b318:	20014040 	.word	0x20014040

0800b31c <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>:
 800b31c:	b570      	push	{r4, r5, r6, lr}
 800b31e:	4604      	mov	r4, r0
 800b320:	6803      	ldr	r3, [r0, #0]
 800b322:	b919      	cbnz	r1, 800b32c <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE+0x10>
 800b324:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800b326:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800b32a:	4718      	bx	r3
 800b32c:	2200      	movs	r2, #0
 800b32e:	f890 607b 	ldrb.w	r6, [r0, #123]	@ 0x7b
 800b332:	f880 207b 	strb.w	r2, [r0, #123]	@ 0x7b
 800b336:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800b338:	4798      	blx	r3
 800b33a:	6863      	ldr	r3, [r4, #4]
 800b33c:	2101      	movs	r1, #1
 800b33e:	4605      	mov	r5, r0
 800b340:	7299      	strb	r1, [r3, #10]
 800b342:	4620      	mov	r0, r4
 800b344:	f884 607b 	strb.w	r6, [r4, #123]	@ 0x7b
 800b348:	f7ff ffba 	bl	800b2c0 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 800b34c:	4628      	mov	r0, r5
 800b34e:	bd70      	pop	{r4, r5, r6, pc}

0800b350 <_ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv>:
 800b350:	e9d0 2003 	ldrd	r2, r0, [r0, #12]
 800b354:	1a13      	subs	r3, r2, r0
 800b356:	4258      	negs	r0, r3
 800b358:	4158      	adcs	r0, r3
 800b35a:	4770      	bx	lr

0800b35c <_ZN8touchgfx17LockFreeDMA_Queue6isFullEv>:
 800b35c:	e9d0 2303 	ldrd	r2, r3, [r0, #12]
 800b360:	1a9b      	subs	r3, r3, r2
 800b362:	2b00      	cmp	r3, #0
 800b364:	bfdc      	itt	le
 800b366:	6882      	ldrle	r2, [r0, #8]
 800b368:	189b      	addle	r3, r3, r2
 800b36a:	2b01      	cmp	r3, #1
 800b36c:	bfcc      	ite	gt
 800b36e:	2000      	movgt	r0, #0
 800b370:	2001      	movle	r0, #1
 800b372:	4770      	bx	lr

0800b374 <_ZN8touchgfx17LockFreeDMA_Queue5firstEv>:
 800b374:	6902      	ldr	r2, [r0, #16]
 800b376:	6843      	ldr	r3, [r0, #4]
 800b378:	2024      	movs	r0, #36	@ 0x24
 800b37a:	fb00 3002 	mla	r0, r0, r2, r3
 800b37e:	4770      	bx	lr

0800b380 <_ZN8touchgfx13DMA_Interface13seedExecutionEv>:
 800b380:	6803      	ldr	r3, [r0, #0]
 800b382:	691b      	ldr	r3, [r3, #16]
 800b384:	4718      	bx	r3

0800b386 <_ZN8touchgfx13DMA_Interface7executeEv>:
 800b386:	b570      	push	{r4, r5, r6, lr}
 800b388:	2301      	movs	r3, #1
 800b38a:	7203      	strb	r3, [r0, #8]
 800b38c:	4604      	mov	r4, r0
 800b38e:	6840      	ldr	r0, [r0, #4]
 800b390:	6803      	ldr	r3, [r0, #0]
 800b392:	699b      	ldr	r3, [r3, #24]
 800b394:	4798      	blx	r3
 800b396:	6803      	ldr	r3, [r0, #0]
 800b398:	2b40      	cmp	r3, #64	@ 0x40
 800b39a:	4605      	mov	r5, r0
 800b39c:	d00c      	beq.n	800b3b8 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800b39e:	d810      	bhi.n	800b3c2 <_ZN8touchgfx13DMA_Interface7executeEv+0x3c>
 800b3a0:	2b04      	cmp	r3, #4
 800b3a2:	d01d      	beq.n	800b3e0 <_ZN8touchgfx13DMA_Interface7executeEv+0x5a>
 800b3a4:	d804      	bhi.n	800b3b0 <_ZN8touchgfx13DMA_Interface7executeEv+0x2a>
 800b3a6:	2b01      	cmp	r3, #1
 800b3a8:	d006      	beq.n	800b3b8 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800b3aa:	2b02      	cmp	r3, #2
 800b3ac:	d02c      	beq.n	800b408 <_ZN8touchgfx13DMA_Interface7executeEv+0x82>
 800b3ae:	bd70      	pop	{r4, r5, r6, pc}
 800b3b0:	2b08      	cmp	r3, #8
 800b3b2:	d01d      	beq.n	800b3f0 <_ZN8touchgfx13DMA_Interface7executeEv+0x6a>
 800b3b4:	2b20      	cmp	r3, #32
 800b3b6:	d1fa      	bne.n	800b3ae <_ZN8touchgfx13DMA_Interface7executeEv+0x28>
 800b3b8:	6823      	ldr	r3, [r4, #0]
 800b3ba:	4620      	mov	r0, r4
 800b3bc:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800b3be:	4798      	blx	r3
 800b3c0:	e013      	b.n	800b3ea <_ZN8touchgfx13DMA_Interface7executeEv+0x64>
 800b3c2:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 800b3c6:	d0f7      	beq.n	800b3b8 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800b3c8:	d804      	bhi.n	800b3d4 <_ZN8touchgfx13DMA_Interface7executeEv+0x4e>
 800b3ca:	2b80      	cmp	r3, #128	@ 0x80
 800b3cc:	d0f4      	beq.n	800b3b8 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800b3ce:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 800b3d2:	e7f0      	b.n	800b3b6 <_ZN8touchgfx13DMA_Interface7executeEv+0x30>
 800b3d4:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 800b3d8:	d0ee      	beq.n	800b3b8 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800b3da:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
 800b3de:	e7e5      	b.n	800b3ac <_ZN8touchgfx13DMA_Interface7executeEv+0x26>
 800b3e0:	6823      	ldr	r3, [r4, #0]
 800b3e2:	7f01      	ldrb	r1, [r0, #28]
 800b3e4:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800b3e6:	4620      	mov	r0, r4
 800b3e8:	4798      	blx	r3
 800b3ea:	6823      	ldr	r3, [r4, #0]
 800b3ec:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800b3ee:	e006      	b.n	800b3fe <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
 800b3f0:	6823      	ldr	r3, [r4, #0]
 800b3f2:	7f01      	ldrb	r1, [r0, #28]
 800b3f4:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800b3f6:	4620      	mov	r0, r4
 800b3f8:	4798      	blx	r3
 800b3fa:	6823      	ldr	r3, [r4, #0]
 800b3fc:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800b3fe:	4629      	mov	r1, r5
 800b400:	4620      	mov	r0, r4
 800b402:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800b406:	4718      	bx	r3
 800b408:	6823      	ldr	r3, [r4, #0]
 800b40a:	4620      	mov	r0, r4
 800b40c:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800b40e:	4798      	blx	r3
 800b410:	e7f3      	b.n	800b3fa <_ZN8touchgfx13DMA_Interface7executeEv+0x74>

0800b412 <_ZN8touchgfx13DMA_Interface11enableAlphaEh>:
 800b412:	4770      	bx	lr

0800b414 <_ZN8touchgfx13DMA_Interface12disableAlphaEv>:
 800b414:	4770      	bx	lr

0800b416 <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>:
 800b416:	4770      	bx	lr

0800b418 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE>:
 800b418:	e9d0 3203 	ldrd	r3, r2, [r0, #12]
 800b41c:	1ad2      	subs	r2, r2, r3
 800b41e:	2a00      	cmp	r2, #0
 800b420:	b510      	push	{r4, lr}
 800b422:	bfdc      	itt	le
 800b424:	6884      	ldrle	r4, [r0, #8]
 800b426:	1912      	addle	r2, r2, r4
 800b428:	2a01      	cmp	r2, #1
 800b42a:	dd16      	ble.n	800b45a <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x42>
 800b42c:	6842      	ldr	r2, [r0, #4]
 800b42e:	2424      	movs	r4, #36	@ 0x24
 800b430:	fb04 2303 	mla	r3, r4, r3, r2
 800b434:	f101 0220 	add.w	r2, r1, #32
 800b438:	f851 4b04 	ldr.w	r4, [r1], #4
 800b43c:	f843 4b04 	str.w	r4, [r3], #4
 800b440:	4291      	cmp	r1, r2
 800b442:	d1f9      	bne.n	800b438 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x20>
 800b444:	780a      	ldrb	r2, [r1, #0]
 800b446:	701a      	strb	r2, [r3, #0]
 800b448:	68c3      	ldr	r3, [r0, #12]
 800b44a:	6882      	ldr	r2, [r0, #8]
 800b44c:	f3bf 8f5b 	dmb	ish
 800b450:	3301      	adds	r3, #1
 800b452:	429a      	cmp	r2, r3
 800b454:	bfd8      	it	le
 800b456:	1a9b      	suble	r3, r3, r2
 800b458:	60c3      	str	r3, [r0, #12]
 800b45a:	bd10      	pop	{r4, pc}

0800b45c <_ZN8touchgfx17LockFreeDMA_Queue3popEv>:
 800b45c:	6903      	ldr	r3, [r0, #16]
 800b45e:	6882      	ldr	r2, [r0, #8]
 800b460:	f3bf 8f5b 	dmb	ish
 800b464:	3301      	adds	r3, #1
 800b466:	429a      	cmp	r2, r3
 800b468:	bfd8      	it	le
 800b46a:	1a9b      	suble	r3, r3, r2
 800b46c:	6103      	str	r3, [r0, #16]
 800b46e:	4770      	bx	lr

0800b470 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE>:
 800b470:	b570      	push	{r4, r5, r6, lr}
 800b472:	4604      	mov	r4, r0
 800b474:	460e      	mov	r6, r1
 800b476:	6860      	ldr	r0, [r4, #4]
 800b478:	6803      	ldr	r3, [r0, #0]
 800b47a:	685b      	ldr	r3, [r3, #4]
 800b47c:	4798      	blx	r3
 800b47e:	2800      	cmp	r0, #0
 800b480:	d1f9      	bne.n	800b476 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x6>
 800b482:	4d0d      	ldr	r5, [pc, #52]	@ (800b4b8 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x48>)
 800b484:	6828      	ldr	r0, [r5, #0]
 800b486:	6803      	ldr	r3, [r0, #0]
 800b488:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 800b48c:	4798      	blx	r3
 800b48e:	f7f5 fb91 	bl	8000bb4 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>
 800b492:	6828      	ldr	r0, [r5, #0]
 800b494:	2101      	movs	r1, #1
 800b496:	f7ff ff13 	bl	800b2c0 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 800b49a:	6860      	ldr	r0, [r4, #4]
 800b49c:	6803      	ldr	r3, [r0, #0]
 800b49e:	4631      	mov	r1, r6
 800b4a0:	689b      	ldr	r3, [r3, #8]
 800b4a2:	4798      	blx	r3
 800b4a4:	6823      	ldr	r3, [r4, #0]
 800b4a6:	4620      	mov	r0, r4
 800b4a8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800b4aa:	4798      	blx	r3
 800b4ac:	6828      	ldr	r0, [r5, #0]
 800b4ae:	6803      	ldr	r3, [r0, #0]
 800b4b0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800b4b4:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 800b4b6:	4718      	bx	r3
 800b4b8:	20014044 	.word	0x20014044

0800b4bc <_ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv>:
 800b4bc:	b508      	push	{r3, lr}
 800b4be:	f7f5 fb6b 	bl	8000b98 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 800b4c2:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800b4c6:	f7f5 bb6f 	b.w	8000ba8 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

0800b4ca <_ZN8touchgfx17LockFreeDMA_QueueD0Ev>:
 800b4ca:	b510      	push	{r4, lr}
 800b4cc:	2114      	movs	r1, #20
 800b4ce:	4604      	mov	r4, r0
 800b4d0:	f016 fc1b 	bl	8021d0a <_ZdlPvj>
 800b4d4:	4620      	mov	r0, r4
 800b4d6:	bd10      	pop	{r4, pc}

0800b4d8 <_ZN8touchgfx13DMA_Interface5startEv>:
 800b4d8:	b510      	push	{r4, lr}
 800b4da:	4604      	mov	r4, r0
 800b4dc:	6840      	ldr	r0, [r0, #4]
 800b4de:	6803      	ldr	r3, [r0, #0]
 800b4e0:	681b      	ldr	r3, [r3, #0]
 800b4e2:	4798      	blx	r3
 800b4e4:	b948      	cbnz	r0, 800b4fa <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800b4e6:	7a63      	ldrb	r3, [r4, #9]
 800b4e8:	b13b      	cbz	r3, 800b4fa <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800b4ea:	7a23      	ldrb	r3, [r4, #8]
 800b4ec:	b92b      	cbnz	r3, 800b4fa <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800b4ee:	6823      	ldr	r3, [r4, #0]
 800b4f0:	4620      	mov	r0, r4
 800b4f2:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800b4f4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800b4f8:	4718      	bx	r3
 800b4fa:	bd10      	pop	{r4, pc}

0800b4fc <_ZN8touchgfx13DMA_Interface16executeCompletedEv>:
 800b4fc:	b570      	push	{r4, r5, r6, lr}
 800b4fe:	4604      	mov	r4, r0
 800b500:	6840      	ldr	r0, [r0, #4]
 800b502:	6803      	ldr	r3, [r0, #0]
 800b504:	681b      	ldr	r3, [r3, #0]
 800b506:	4798      	blx	r3
 800b508:	4605      	mov	r5, r0
 800b50a:	b930      	cbnz	r0, 800b51a <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 800b50c:	7a23      	ldrb	r3, [r4, #8]
 800b50e:	b123      	cbz	r3, 800b51a <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 800b510:	6860      	ldr	r0, [r4, #4]
 800b512:	6803      	ldr	r3, [r0, #0]
 800b514:	695b      	ldr	r3, [r3, #20]
 800b516:	4798      	blx	r3
 800b518:	7225      	strb	r5, [r4, #8]
 800b51a:	6860      	ldr	r0, [r4, #4]
 800b51c:	6803      	ldr	r3, [r0, #0]
 800b51e:	681b      	ldr	r3, [r3, #0]
 800b520:	4798      	blx	r3
 800b522:	b928      	cbnz	r0, 800b530 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x34>
 800b524:	6823      	ldr	r3, [r4, #0]
 800b526:	4620      	mov	r0, r4
 800b528:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800b52a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800b52e:	4718      	bx	r3
 800b530:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800b534:	f7f5 bb46 	b.w	8000bc4 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>

0800b538 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>:
 800b538:	b510      	push	{r4, lr}
 800b53a:	4c04      	ldr	r4, [pc, #16]	@ (800b54c <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi+0x14>)
 800b53c:	6082      	str	r2, [r0, #8]
 800b53e:	2200      	movs	r2, #0
 800b540:	e9c0 4100 	strd	r4, r1, [r0]
 800b544:	e9c0 2203 	strd	r2, r2, [r0, #12]
 800b548:	bd10      	pop	{r4, pc}
 800b54a:	bf00      	nop
 800b54c:	08024dc0 	.word	0x08024dc0

0800b550 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>:
 800b550:	6840      	ldr	r0, [r0, #4]
 800b552:	6803      	ldr	r3, [r0, #0]
 800b554:	681b      	ldr	r3, [r3, #0]
 800b556:	4718      	bx	r3

0800b558 <_ZN8touchgfxL10applyNoiseEiihhh>:
 800b558:	e92d 48f0 	stmdb	sp!, {r4, r5, r6, r7, fp, lr}
 800b55c:	4f20      	ldr	r7, [pc, #128]	@ (800b5e0 <_ZN8touchgfxL10applyNoiseEiihhh+0x88>)
 800b55e:	f89d 5018 	ldrb.w	r5, [sp, #24]
 800b562:	fb80 0101 	smull	r0, r1, r0, r1
 800b566:	fba0 bc07 	umull	fp, ip, r0, r7
 800b56a:	fb07 cc01 	mla	ip, r7, r1, ip
 800b56e:	fb0b f70c 	mul.w	r7, fp, ip
 800b572:	fbab 010b 	umull	r0, r1, fp, fp
 800b576:	461c      	mov	r4, r3
 800b578:	eb01 0147 	add.w	r1, r1, r7, lsl #1
 800b57c:	fb00 f30c 	mul.w	r3, r0, ip
 800b580:	fb0b 3301 	mla	r3, fp, r1, r3
 800b584:	fba0 010b 	umull	r0, r1, r0, fp
 800b588:	4616      	mov	r6, r2
 800b58a:	4419      	add	r1, r3
 800b58c:	a312      	add	r3, pc, #72	@ (adr r3, 800b5d8 <_ZN8touchgfxL10applyNoiseEiihhh+0x80>)
 800b58e:	e9d3 2300 	ldrd	r2, r3, [r3]
 800b592:	f7f4 fe85 	bl	80002a0 <__aeabi_ldivmod>
 800b596:	2ef7      	cmp	r6, #247	@ 0xf7
 800b598:	b290      	uxth	r0, r2
 800b59a:	bf9e      	ittt	ls
 800b59c:	f002 0207 	andls.w	r2, r2, #7
 800b5a0:	18b6      	addls	r6, r6, r2
 800b5a2:	b2f6      	uxtbls	r6, r6
 800b5a4:	2cfb      	cmp	r4, #251	@ 0xfb
 800b5a6:	bf9e      	ittt	ls
 800b5a8:	f3c0 03c1 	ubfxls	r3, r0, #3, #2
 800b5ac:	18e4      	addls	r4, r4, r3
 800b5ae:	b2e4      	uxtbls	r4, r4
 800b5b0:	2df7      	cmp	r5, #247	@ 0xf7
 800b5b2:	bf9c      	itt	ls
 800b5b4:	f3c0 1042 	ubfxls	r0, r0, #5, #3
 800b5b8:	182d      	addls	r5, r5, r0
 800b5ba:	480a      	ldr	r0, [pc, #40]	@ (800b5e4 <_ZN8touchgfxL10applyNoiseEiihhh+0x8c>)
 800b5bc:	ea4f 04c4 	mov.w	r4, r4, lsl #3
 800b5c0:	ea00 2006 	and.w	r0, r0, r6, lsl #8
 800b5c4:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 800b5c8:	bf98      	it	ls
 800b5ca:	b2ed      	uxtbls	r5, r5
 800b5cc:	4304      	orrs	r4, r0
 800b5ce:	ea44 00d5 	orr.w	r0, r4, r5, lsr #3
 800b5d2:	b280      	uxth	r0, r0
 800b5d4:	e8bd 88f0 	ldmia.w	sp!, {r4, r5, r6, r7, fp, pc}
 800b5d8:	797a8d77 	.word	0x797a8d77
 800b5dc:	00000000 	.word	0x00000000
 800b5e0:	00ec4ba7 	.word	0x00ec4ba7
 800b5e4:	fffff800 	.word	0xfffff800

0800b5e8 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh>:
 800b5e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b5ec:	ed2d 8b02 	vpush	{d8}
 800b5f0:	eb01 0442 	add.w	r4, r1, r2, lsl #1
 800b5f4:	b087      	sub	sp, #28
 800b5f6:	7c41      	ldrb	r1, [r0, #17]
 800b5f8:	f9bd 9048 	ldrsh.w	r9, [sp, #72]	@ 0x48
 800b5fc:	f9bd 604c 	ldrsh.w	r6, [sp, #76]	@ 0x4c
 800b600:	f89d a050 	ldrb.w	sl, [sp, #80]	@ 0x50
 800b604:	4605      	mov	r5, r0
 800b606:	2900      	cmp	r1, #0
 800b608:	f000 809a 	beq.w	800b740 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x158>
 800b60c:	f9b0 2008 	ldrsh.w	r2, [r0, #8]
 800b610:	ed90 7a08 	vldr	s14, [r0, #32]
 800b614:	68c0      	ldr	r0, [r0, #12]
 800b616:	454a      	cmp	r2, r9
 800b618:	db25      	blt.n	800b666 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x7e>
 800b61a:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 800b61e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800b622:	f640 72fc 	movw	r2, #4092	@ 0xffc
 800b626:	bfc8      	it	gt
 800b628:	2200      	movgt	r2, #0
 800b62a:	5882      	ldr	r2, [r0, r2]
 800b62c:	2100      	movs	r1, #0
 800b62e:	7c2d      	ldrb	r5, [r5, #16]
 800b630:	ea4f 2812 	mov.w	r8, r2, lsr #8
 800b634:	0950      	lsrs	r0, r2, #5
 800b636:	f408 4e78 	and.w	lr, r8, #63488	@ 0xf800
 800b63a:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 800b63e:	f3c2 0cc4 	ubfx	ip, r2, #3, #5
 800b642:	eb04 0746 	add.w	r7, r4, r6, lsl #1
 800b646:	2d00      	cmp	r5, #0
 800b648:	d044      	beq.n	800b6d4 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0xec>
 800b64a:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 800b64e:	d141      	bne.n	800b6d4 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0xec>
 800b650:	bb61      	cbnz	r1, 800b6ac <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0xc4>
 800b652:	ea4e 0000 	orr.w	r0, lr, r0
 800b656:	ea4c 0500 	orr.w	r5, ip, r0
 800b65a:	42bc      	cmp	r4, r7
 800b65c:	f080 8217 	bcs.w	800ba8e <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a6>
 800b660:	f824 5b02 	strh.w	r5, [r4], #2
 800b664:	e7f9      	b.n	800b65a <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x72>
 800b666:	f9b5 700a 	ldrsh.w	r7, [r5, #10]
 800b66a:	454f      	cmp	r7, r9
 800b66c:	dc08      	bgt.n	800b680 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x98>
 800b66e:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 800b672:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800b676:	f640 72fc 	movw	r2, #4092	@ 0xffc
 800b67a:	bfd8      	it	le
 800b67c:	2200      	movle	r2, #0
 800b67e:	e7d4      	b.n	800b62a <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x42>
 800b680:	eba9 0202 	sub.w	r2, r9, r2
 800b684:	ee07 2a90 	vmov	s15, r2
 800b688:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800b68c:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 800b690:	ee67 7a87 	vmul.f32	s15, s15, s14
 800b694:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800b698:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800b69c:	ee17 2a90 	vmov	r2, s15
 800b6a0:	bfd8      	it	le
 800b6a2:	f202 32ff 	addwle	r2, r2, #1023	@ 0x3ff
 800b6a6:	0092      	lsls	r2, r2, #2
 800b6a8:	5882      	ldr	r2, [r0, r2]
 800b6aa:	e7c0      	b.n	800b62e <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x46>
 800b6ac:	b2d5      	uxtb	r5, r2
 800b6ae:	fa5f f888 	uxtb.w	r8, r8
 800b6b2:	f3c2 4a07 	ubfx	sl, r2, #16, #8
 800b6b6:	461e      	mov	r6, r3
 800b6b8:	42bc      	cmp	r4, r7
 800b6ba:	f080 81e8 	bcs.w	800ba8e <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a6>
 800b6be:	4630      	mov	r0, r6
 800b6c0:	9500      	str	r5, [sp, #0]
 800b6c2:	4643      	mov	r3, r8
 800b6c4:	4652      	mov	r2, sl
 800b6c6:	4649      	mov	r1, r9
 800b6c8:	f7ff ff46 	bl	800b558 <_ZN8touchgfxL10applyNoiseEiihhh>
 800b6cc:	3601      	adds	r6, #1
 800b6ce:	f824 0b02 	strh.w	r0, [r4], #2
 800b6d2:	e7f1      	b.n	800b6b8 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0xd0>
 800b6d4:	0e12      	lsrs	r2, r2, #24
 800b6d6:	fb02 f20a 	mul.w	r2, r2, sl
 800b6da:	1c53      	adds	r3, r2, #1
 800b6dc:	eb03 2222 	add.w	r2, r3, r2, asr #8
 800b6e0:	1212      	asrs	r2, r2, #8
 800b6e2:	fb02 f50c 	mul.w	r5, r2, ip
 800b6e6:	fb02 f10e 	mul.w	r1, r2, lr
 800b6ea:	4350      	muls	r0, r2
 800b6ec:	f8df c3b0 	ldr.w	ip, [pc, #944]	@ 800baa0 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4b8>
 800b6f0:	43d2      	mvns	r2, r2
 800b6f2:	f002 02ff 	and.w	r2, r2, #255	@ 0xff
 800b6f6:	26ff      	movs	r6, #255	@ 0xff
 800b6f8:	42bc      	cmp	r4, r7
 800b6fa:	f080 81c8 	bcs.w	800ba8e <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a6>
 800b6fe:	f8b4 e000 	ldrh.w	lr, [r4]
 800b702:	ea0e 030c 	and.w	r3, lr, ip
 800b706:	f40e 68fc 	and.w	r8, lr, #2016	@ 0x7e0
 800b70a:	fb02 1303 	mla	r3, r2, r3, r1
 800b70e:	fb02 0808 	mla	r8, r2, r8, r0
 800b712:	fb93 f3f6 	sdiv	r3, r3, r6
 800b716:	fb98 f8f6 	sdiv	r8, r8, r6
 800b71a:	ea03 030c 	and.w	r3, r3, ip
 800b71e:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 800b722:	f00e 0e1f 	and.w	lr, lr, #31
 800b726:	ea43 0308 	orr.w	r3, r3, r8
 800b72a:	fb02 5e0e 	mla	lr, r2, lr, r5
 800b72e:	fb9e fef6 	sdiv	lr, lr, r6
 800b732:	f00e 0e1f 	and.w	lr, lr, #31
 800b736:	ea43 030e 	orr.w	r3, r3, lr
 800b73a:	f824 3b02 	strh.w	r3, [r4], #2
 800b73e:	e7db      	b.n	800b6f8 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x110>
 800b740:	7c82      	ldrb	r2, [r0, #18]
 800b742:	2a00      	cmp	r2, #0
 800b744:	d04f      	beq.n	800b7e6 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x1fe>
 800b746:	f9b0 2008 	ldrsh.w	r2, [r0, #8]
 800b74a:	ee07 2a90 	vmov	s15, r2
 800b74e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800b752:	ee07 3a10 	vmov	s14, r3
 800b756:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800b75a:	461f      	mov	r7, r3
 800b75c:	eef4 6ae7 	vcmpe.f32	s13, s15
 800b760:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800b764:	f200 8095 	bhi.w	800b892 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x2aa>
 800b768:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 800b76c:	ee37 7a87 	vadd.f32	s14, s15, s14
 800b770:	f640 71fc 	movw	r1, #4092	@ 0xffc
 800b774:	ee37 7a66 	vsub.f32	s14, s14, s13
 800b778:	ee06 6a90 	vmov	s13, r6
 800b77c:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 800b780:	68ea      	ldr	r2, [r5, #12]
 800b782:	f895 c010 	ldrb.w	ip, [r5, #16]
 800b786:	eeb4 7ae6 	vcmpe.f32	s14, s13
 800b78a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800b78e:	bf4a      	itet	mi
 800b790:	eebd 7ac7 	vcvtmi.s32.f32	s14, s14
 800b794:	9602      	strpl	r6, [sp, #8]
 800b796:	ed8d 7a02 	vstrmi	s14, [sp, #8]
 800b79a:	ed95 7a08 	vldr	s14, [r5, #32]
 800b79e:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 800b7a2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800b7a6:	bfc8      	it	gt
 800b7a8:	2100      	movgt	r1, #0
 800b7aa:	5852      	ldr	r2, [r2, r1]
 800b7ac:	9902      	ldr	r1, [sp, #8]
 800b7ae:	ea4f 2b12 	mov.w	fp, r2, lsr #8
 800b7b2:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 800b7b6:	0950      	lsrs	r0, r2, #5
 800b7b8:	9103      	str	r1, [sp, #12]
 800b7ba:	f40b 4b78 	and.w	fp, fp, #63488	@ 0xf800
 800b7be:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 800b7c2:	f3c2 01c4 	ubfx	r1, r2, #3, #5
 800b7c6:	f1bc 0f00 	cmp.w	ip, #0
 800b7ca:	d024      	beq.n	800b816 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x22e>
 800b7cc:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 800b7d0:	d121      	bne.n	800b816 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x22e>
 800b7d2:	ea4b 0b00 	orr.w	fp, fp, r0
 800b7d6:	ea41 010b 	orr.w	r1, r1, fp
 800b7da:	9a03      	ldr	r2, [sp, #12]
 800b7dc:	4294      	cmp	r4, r2
 800b7de:	d255      	bcs.n	800b88c <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x2a4>
 800b7e0:	f824 1b02 	strh.w	r1, [r4], #2
 800b7e4:	e7f9      	b.n	800b7da <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x1f2>
 800b7e6:	ee07 9a10 	vmov	s14, r9
 800b7ea:	edd0 7a06 	vldr	s15, [r0, #24]
 800b7ee:	edd0 6a05 	vldr	s13, [r0, #20]
 800b7f2:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800b7f6:	ee37 7a67 	vsub.f32	s14, s14, s15
 800b7fa:	eec7 7a26 	vdiv.f32	s15, s14, s13
 800b7fe:	ed90 7a08 	vldr	s14, [r0, #32]
 800b802:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 800b806:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800b80a:	bf44      	itt	mi
 800b80c:	ed90 7a07 	vldrmi	s14, [r0, #28]
 800b810:	ee77 7ac7 	vsubmi.f32	s15, s15, s14
 800b814:	e79d      	b.n	800b752 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x16a>
 800b816:	0e12      	lsrs	r2, r2, #24
 800b818:	fb02 f20a 	mul.w	r2, r2, sl
 800b81c:	f102 0c01 	add.w	ip, r2, #1
 800b820:	eb0c 2222 	add.w	r2, ip, r2, asr #8
 800b824:	1212      	asrs	r2, r2, #8
 800b826:	4350      	muls	r0, r2
 800b828:	4351      	muls	r1, r2
 800b82a:	fb02 fb0b 	mul.w	fp, r2, fp
 800b82e:	f8df 8270 	ldr.w	r8, [pc, #624]	@ 800baa0 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4b8>
 800b832:	9004      	str	r0, [sp, #16]
 800b834:	43d2      	mvns	r2, r2
 800b836:	9105      	str	r1, [sp, #20]
 800b838:	f002 02ff 	and.w	r2, r2, #255	@ 0xff
 800b83c:	f04f 0eff 	mov.w	lr, #255	@ 0xff
 800b840:	9903      	ldr	r1, [sp, #12]
 800b842:	428c      	cmp	r4, r1
 800b844:	d222      	bcs.n	800b88c <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x2a4>
 800b846:	8820      	ldrh	r0, [r4, #0]
 800b848:	f400 61fc 	and.w	r1, r0, #2016	@ 0x7e0
 800b84c:	460f      	mov	r7, r1
 800b84e:	9904      	ldr	r1, [sp, #16]
 800b850:	ea00 0c08 	and.w	ip, r0, r8
 800b854:	fb02 bc0c 	mla	ip, r2, ip, fp
 800b858:	fb02 1107 	mla	r1, r2, r7, r1
 800b85c:	fb9c fcfe 	sdiv	ip, ip, lr
 800b860:	fb91 f1fe 	sdiv	r1, r1, lr
 800b864:	ea0c 0c08 	and.w	ip, ip, r8
 800b868:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 800b86c:	ea4c 0101 	orr.w	r1, ip, r1
 800b870:	f000 0c1f 	and.w	ip, r0, #31
 800b874:	9805      	ldr	r0, [sp, #20]
 800b876:	fb02 0c0c 	mla	ip, r2, ip, r0
 800b87a:	fb9c fcfe 	sdiv	ip, ip, lr
 800b87e:	f00c 0c1f 	and.w	ip, ip, #31
 800b882:	ea41 010c 	orr.w	r1, r1, ip
 800b886:	f824 1b02 	strh.w	r1, [r4], #2
 800b88a:	e7d9      	b.n	800b840 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x258>
 800b88c:	9a02      	ldr	r2, [sp, #8]
 800b88e:	441a      	add	r2, r3
 800b890:	4617      	mov	r7, r2
 800b892:	441e      	add	r6, r3
 800b894:	b236      	sxth	r6, r6
 800b896:	42be      	cmp	r6, r7
 800b898:	f340 80f9 	ble.w	800ba8e <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a6>
 800b89c:	ed95 7a07 	vldr	s14, [r5, #28]
 800b8a0:	ee06 7a90 	vmov	s13, r7
 800b8a4:	ee37 7a87 	vadd.f32	s14, s15, s14
 800b8a8:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 800b8ac:	eeb4 7ae6 	vcmpe.f32	s14, s13
 800b8b0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800b8b4:	f340 80b5 	ble.w	800ba22 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x43a>
 800b8b8:	ee06 6a10 	vmov	s12, r6
 800b8bc:	eeb8 6ac6 	vcvt.f32.s32	s12, s12
 800b8c0:	ed9f 8a75 	vldr	s16, [pc, #468]	@ 800ba98 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4b0>
 800b8c4:	7c2b      	ldrb	r3, [r5, #16]
 800b8c6:	eeb4 7ac6 	vcmpe.f32	s14, s12
 800b8ca:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800b8ce:	bfd8      	it	le
 800b8d0:	eebd 7ac7 	vcvtle.s32.f32	s14, s14
 800b8d4:	ed9f 6a71 	vldr	s12, [pc, #452]	@ 800ba9c <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4b4>
 800b8d8:	bfd8      	it	le
 800b8da:	ee17 8a10 	vmovle	r8, s14
 800b8de:	ed95 7a08 	vldr	s14, [r5, #32]
 800b8e2:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 800b8e6:	bfc8      	it	gt
 800b8e8:	46b0      	movgt	r8, r6
 800b8ea:	ee76 7ae7 	vsub.f32	s15, s13, s15
 800b8ee:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800b8f2:	eba8 0707 	sub.w	r7, r8, r7
 800b8f6:	bfd8      	it	le
 800b8f8:	eeb0 8a46 	vmovle.f32	s16, s12
 800b8fc:	eb04 0747 	add.w	r7, r4, r7, lsl #1
 800b900:	eea7 8a27 	vfma.f32	s16, s14, s15
 800b904:	b1db      	cbz	r3, 800b93e <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x356>
 800b906:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 800b90a:	d118      	bne.n	800b93e <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x356>
 800b90c:	42bc      	cmp	r4, r7
 800b90e:	d262      	bcs.n	800b9d6 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x3ee>
 800b910:	eefd 7ac8 	vcvt.s32.f32	s15, s16
 800b914:	68eb      	ldr	r3, [r5, #12]
 800b916:	ee17 0a90 	vmov	r0, s15
 800b91a:	f853 2020 	ldr.w	r2, [r3, r0, lsl #2]
 800b91e:	b2d3      	uxtb	r3, r2
 800b920:	9300      	str	r3, [sp, #0]
 800b922:	4649      	mov	r1, r9
 800b924:	f3c2 2307 	ubfx	r3, r2, #8, #8
 800b928:	f3c2 4207 	ubfx	r2, r2, #16, #8
 800b92c:	f7ff fe14 	bl	800b558 <_ZN8touchgfxL10applyNoiseEiihhh>
 800b930:	f824 0b02 	strh.w	r0, [r4], #2
 800b934:	edd5 7a08 	vldr	s15, [r5, #32]
 800b938:	ee38 8a27 	vadd.f32	s16, s16, s15
 800b93c:	e7e6      	b.n	800b90c <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x324>
 800b93e:	f8df b160 	ldr.w	fp, [pc, #352]	@ 800baa0 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4b8>
 800b942:	f04f 09ff 	mov.w	r9, #255	@ 0xff
 800b946:	42bc      	cmp	r4, r7
 800b948:	d245      	bcs.n	800b9d6 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x3ee>
 800b94a:	eefd 7ac8 	vcvt.s32.f32	s15, s16
 800b94e:	68eb      	ldr	r3, [r5, #12]
 800b950:	f8b4 e000 	ldrh.w	lr, [r4]
 800b954:	ee17 2a90 	vmov	r2, s15
 800b958:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 800b95c:	0e13      	lsrs	r3, r2, #24
 800b95e:	fb03 f30a 	mul.w	r3, r3, sl
 800b962:	1c58      	adds	r0, r3, #1
 800b964:	eb00 2023 	add.w	r0, r0, r3, asr #8
 800b968:	1200      	asrs	r0, r0, #8
 800b96a:	ea6f 0c00 	mvn.w	ip, r0
 800b96e:	fa5f fc8c 	uxtb.w	ip, ip
 800b972:	ea0b 2112 	and.w	r1, fp, r2, lsr #8
 800b976:	ea0e 030b 	and.w	r3, lr, fp
 800b97a:	fb0c f303 	mul.w	r3, ip, r3
 800b97e:	b289      	uxth	r1, r1
 800b980:	fb00 3101 	mla	r1, r0, r1, r3
 800b984:	fb91 f1f9 	sdiv	r1, r1, r9
 800b988:	ea01 030b 	and.w	r3, r1, fp
 800b98c:	9302      	str	r3, [sp, #8]
 800b98e:	0953      	lsrs	r3, r2, #5
 800b990:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 800b994:	4619      	mov	r1, r3
 800b996:	f40e 63fc 	and.w	r3, lr, #2016	@ 0x7e0
 800b99a:	fb0c f303 	mul.w	r3, ip, r3
 800b99e:	fb00 3301 	mla	r3, r0, r1, r3
 800b9a2:	f00e 0e1f 	and.w	lr, lr, #31
 800b9a6:	9902      	ldr	r1, [sp, #8]
 800b9a8:	fb93 f3f9 	sdiv	r3, r3, r9
 800b9ac:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 800b9b0:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 800b9b4:	fb0c fc0e 	mul.w	ip, ip, lr
 800b9b8:	4319      	orrs	r1, r3
 800b9ba:	fb00 c002 	mla	r0, r0, r2, ip
 800b9be:	fb90 f0f9 	sdiv	r0, r0, r9
 800b9c2:	f000 001f 	and.w	r0, r0, #31
 800b9c6:	4301      	orrs	r1, r0
 800b9c8:	f824 1b02 	strh.w	r1, [r4], #2
 800b9cc:	edd5 7a08 	vldr	s15, [r5, #32]
 800b9d0:	ee38 8a27 	vadd.f32	s16, s16, s15
 800b9d4:	e7b7      	b.n	800b946 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x35e>
 800b9d6:	4546      	cmp	r6, r8
 800b9d8:	dd59      	ble.n	800ba8e <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a6>
 800b9da:	edd5 7a08 	vldr	s15, [r5, #32]
 800b9de:	68ea      	ldr	r2, [r5, #12]
 800b9e0:	7c29      	ldrb	r1, [r5, #16]
 800b9e2:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800b9e6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800b9ea:	f640 73fc 	movw	r3, #4092	@ 0xffc
 800b9ee:	bfd8      	it	le
 800b9f0:	2300      	movle	r3, #0
 800b9f2:	eba6 0608 	sub.w	r6, r6, r8
 800b9f6:	58d2      	ldr	r2, [r2, r3]
 800b9f8:	0a10      	lsrs	r0, r2, #8
 800b9fa:	0953      	lsrs	r3, r2, #5
 800b9fc:	eb04 0646 	add.w	r6, r4, r6, lsl #1
 800ba00:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
 800ba04:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 800ba08:	f3c2 07c4 	ubfx	r7, r2, #3, #5
 800ba0c:	b159      	cbz	r1, 800ba26 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x43e>
 800ba0e:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 800ba12:	d108      	bne.n	800ba26 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x43e>
 800ba14:	4318      	orrs	r0, r3
 800ba16:	4338      	orrs	r0, r7
 800ba18:	42b4      	cmp	r4, r6
 800ba1a:	d238      	bcs.n	800ba8e <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a6>
 800ba1c:	f824 0b02 	strh.w	r0, [r4], #2
 800ba20:	e7fa      	b.n	800ba18 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x430>
 800ba22:	46b8      	mov	r8, r7
 800ba24:	e7d9      	b.n	800b9da <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x3f2>
 800ba26:	0e12      	lsrs	r2, r2, #24
 800ba28:	fb02 f10a 	mul.w	r1, r2, sl
 800ba2c:	1c4a      	adds	r2, r1, #1
 800ba2e:	eb02 2221 	add.w	r2, r2, r1, asr #8
 800ba32:	1212      	asrs	r2, r2, #8
 800ba34:	fb02 f507 	mul.w	r5, r2, r7
 800ba38:	4350      	muls	r0, r2
 800ba3a:	4353      	muls	r3, r2
 800ba3c:	f8df c060 	ldr.w	ip, [pc, #96]	@ 800baa0 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4b8>
 800ba40:	43d2      	mvns	r2, r2
 800ba42:	f002 02ff 	and.w	r2, r2, #255	@ 0xff
 800ba46:	27ff      	movs	r7, #255	@ 0xff
 800ba48:	42b4      	cmp	r4, r6
 800ba4a:	d220      	bcs.n	800ba8e <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a6>
 800ba4c:	f8b4 e000 	ldrh.w	lr, [r4]
 800ba50:	ea0e 010c 	and.w	r1, lr, ip
 800ba54:	f40e 68fc 	and.w	r8, lr, #2016	@ 0x7e0
 800ba58:	fb02 0101 	mla	r1, r2, r1, r0
 800ba5c:	fb02 3808 	mla	r8, r2, r8, r3
 800ba60:	fb91 f1f7 	sdiv	r1, r1, r7
 800ba64:	fb98 f8f7 	sdiv	r8, r8, r7
 800ba68:	ea01 010c 	and.w	r1, r1, ip
 800ba6c:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 800ba70:	f00e 0e1f 	and.w	lr, lr, #31
 800ba74:	ea41 0108 	orr.w	r1, r1, r8
 800ba78:	fb02 5e0e 	mla	lr, r2, lr, r5
 800ba7c:	fb9e fef7 	sdiv	lr, lr, r7
 800ba80:	f00e 0e1f 	and.w	lr, lr, #31
 800ba84:	ea41 010e 	orr.w	r1, r1, lr
 800ba88:	f824 1b02 	strh.w	r1, [r4], #2
 800ba8c:	e7dc      	b.n	800ba48 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x460>
 800ba8e:	b007      	add	sp, #28
 800ba90:	ecbd 8b02 	vpop	{d8}
 800ba94:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ba98:	00000000 	.word	0x00000000
 800ba9c:	447ffffe 	.word	0x447ffffe
 800baa0:	fffff800 	.word	0xfffff800

0800baa4 <_ZNK8touchgfx27PainterRGB565LinearGradient8tearDownEv>:
 800baa4:	4770      	bx	lr

0800baa6 <_ZN8touchgfx27PainterRGB565LinearGradientD1Ev>:
 800baa6:	4770      	bx	lr

0800baa8 <_ZN8touchgfx27PainterRGB565LinearGradientD0Ev>:
 800baa8:	b510      	push	{r4, lr}
 800baaa:	2124      	movs	r1, #36	@ 0x24
 800baac:	4604      	mov	r4, r0
 800baae:	f016 f92c 	bl	8021d0a <_ZdlPvj>
 800bab2:	4620      	mov	r0, r4
 800bab4:	bd10      	pop	{r4, pc}
	...

0800bab8 <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv>:
 800bab8:	b508      	push	{r3, lr}
 800baba:	4b05      	ldr	r3, [pc, #20]	@ (800bad0 <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv+0x18>)
 800babc:	6818      	ldr	r0, [r3, #0]
 800babe:	6803      	ldr	r3, [r0, #0]
 800bac0:	f8d3 30ac 	ldr.w	r3, [r3, #172]	@ 0xac
 800bac4:	4798      	blx	r3
 800bac6:	1e43      	subs	r3, r0, #1
 800bac8:	4258      	negs	r0, r3
 800baca:	4158      	adcs	r0, r3
 800bacc:	bd08      	pop	{r3, pc}
 800bace:	bf00      	nop
 800bad0:	20014044 	.word	0x20014044

0800bad4 <_ZN8touchgfx13PainterRGB565D1Ev>:
 800bad4:	4770      	bx	lr

0800bad6 <_ZThn8_N8touchgfx13PainterRGB565D1Ev>:
 800bad6:	3808      	subs	r0, #8
 800bad8:	4770      	bx	lr

0800bada <_ZNK8touchgfx13PainterRGB5655paintEPhssssh>:
 800bada:	b430      	push	{r4, r5}
 800badc:	eb01 0442 	add.w	r4, r1, r2, lsl #1
 800bae0:	f9bd 500c 	ldrsh.w	r5, [sp, #12]
 800bae4:	8a02      	ldrh	r2, [r0, #16]
 800bae6:	9202      	str	r2, [sp, #8]
 800bae8:	f89d 3010 	ldrb.w	r3, [sp, #16]
 800baec:	68c2      	ldr	r2, [r0, #12]
 800baee:	4629      	mov	r1, r5
 800baf0:	4620      	mov	r0, r4
 800baf2:	bc30      	pop	{r4, r5}
 800baf4:	f7f5 ba2e 	b.w	8000f54 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>

0800baf8 <_ZNK8touchgfx13PainterRGB5658tearDownEv>:
 800baf8:	f7f5 ba20 	b.w	8000f3c <_ZN8touchgfx5paint8tearDownEv>

0800bafc <_ZN8touchgfx13PainterRGB565D0Ev>:
 800bafc:	b510      	push	{r4, lr}
 800bafe:	2114      	movs	r1, #20
 800bb00:	4604      	mov	r4, r0
 800bb02:	f016 f902 	bl	8021d0a <_ZdlPvj>
 800bb06:	4620      	mov	r0, r4
 800bb08:	bd10      	pop	{r4, pc}

0800bb0a <_ZThn8_N8touchgfx13PainterRGB565D0Ev>:
 800bb0a:	f1a0 0008 	sub.w	r0, r0, #8
 800bb0e:	e7f5      	b.n	800bafc <_ZN8touchgfx13PainterRGB565D0Ev>

0800bb10 <_ZN8touchgfx17CWRVectorRenderer8tearDownEv>:
 800bb10:	2300      	movs	r3, #0
 800bb12:	84c3      	strh	r3, [r0, #38]	@ 0x26
 800bb14:	8503      	strh	r3, [r0, #40]	@ 0x28
 800bb16:	8543      	strh	r3, [r0, #42]	@ 0x2a
 800bb18:	8583      	strh	r3, [r0, #44]	@ 0x2c
 800bb1a:	6980      	ldr	r0, [r0, #24]
 800bb1c:	b110      	cbz	r0, 800bb24 <_ZN8touchgfx17CWRVectorRenderer8tearDownEv+0x14>
 800bb1e:	6803      	ldr	r3, [r0, #0]
 800bb20:	691b      	ldr	r3, [r3, #16]
 800bb22:	4718      	bx	r3
 800bb24:	4770      	bx	lr

0800bb26 <_ZN8touchgfx17CWRVectorRenderer14setStrokeWidthEf>:
 800bb26:	ed80 0a0c 	vstr	s0, [r0, #48]	@ 0x30
 800bb2a:	4770      	bx	lr

0800bb2c <_ZN8touchgfx17CWRVectorRenderer8setColorENS_9colortypeE>:
 800bb2c:	b538      	push	{r3, r4, r5, lr}
 800bb2e:	0e0b      	lsrs	r3, r1, #24
 800bb30:	7783      	strb	r3, [r0, #30]
 800bb32:	6803      	ldr	r3, [r0, #0]
 800bb34:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800bb36:	4604      	mov	r4, r0
 800bb38:	460d      	mov	r5, r1
 800bb3a:	4798      	blx	r3
 800bb3c:	6803      	ldr	r3, [r0, #0]
 800bb3e:	4629      	mov	r1, r5
 800bb40:	689b      	ldr	r3, [r3, #8]
 800bb42:	4798      	blx	r3
 800bb44:	6823      	ldr	r3, [r4, #0]
 800bb46:	4620      	mov	r0, r4
 800bb48:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800bb4a:	4798      	blx	r3
 800bb4c:	61a0      	str	r0, [r4, #24]
 800bb4e:	bd38      	pop	{r3, r4, r5, pc}

0800bb50 <_ZN8touchgfx17CWRVectorRenderer8setAlphaEh>:
 800bb50:	7741      	strb	r1, [r0, #29]
 800bb52:	4770      	bx	lr

0800bb54 <_ZN8touchgfx17CWRVectorRenderer23setTransformationMatrixERKNS_9Matrix3x3E>:
 800bb54:	b530      	push	{r4, r5, lr}
 800bb56:	460d      	mov	r5, r1
 800bb58:	f100 0434 	add.w	r4, r0, #52	@ 0x34
 800bb5c:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800bb5e:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800bb60:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800bb62:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800bb64:	682b      	ldr	r3, [r5, #0]
 800bb66:	6023      	str	r3, [r4, #0]
 800bb68:	bd30      	pop	{r4, r5, pc}

0800bb6a <_ZN8touchgfx17CWRVectorRenderer5setupERKNS_4RectES3_>:
 800bb6a:	b538      	push	{r3, r4, r5, lr}
 800bb6c:	4604      	mov	r4, r0
 800bb6e:	1d03      	adds	r3, r0, #4
 800bb70:	6808      	ldr	r0, [r1, #0]
 800bb72:	6849      	ldr	r1, [r1, #4]
 800bb74:	c303      	stmia	r3!, {r0, r1}
 800bb76:	6813      	ldr	r3, [r2, #0]
 800bb78:	f8c4 3026 	str.w	r3, [r4, #38]	@ 0x26
 800bb7c:	6853      	ldr	r3, [r2, #4]
 800bb7e:	f8c4 302a 	str.w	r3, [r4, #42]	@ 0x2a
 800bb82:	2500      	movs	r5, #0
 800bb84:	61a5      	str	r5, [r4, #24]
 800bb86:	f104 0034 	add.w	r0, r4, #52	@ 0x34
 800bb8a:	f005 fb69 	bl	8011260 <_ZN8touchgfx9Matrix3x35resetEv>
 800bb8e:	23ff      	movs	r3, #255	@ 0xff
 800bb90:	7763      	strb	r3, [r4, #29]
 800bb92:	77a3      	strb	r3, [r4, #30]
 800bb94:	f04f 537e 	mov.w	r3, #1065353216	@ 0x3f800000
 800bb98:	6323      	str	r3, [r4, #48]	@ 0x30
 800bb9a:	2301      	movs	r3, #1
 800bb9c:	f884 3024 	strb.w	r3, [r4, #36]	@ 0x24
 800bba0:	f884 5025 	strb.w	r5, [r4, #37]	@ 0x25
 800bba4:	bd38      	pop	{r3, r4, r5, pc}
	...

0800bba8 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_>:
 800bba8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800bbac:	ed2d 8b0a 	vpush	{d8-d12}
 800bbb0:	ee70 7a41 	vsub.f32	s15, s0, s2
 800bbb4:	b087      	sub	sp, #28
 800bbb6:	eef5 7a40 	vcmp.f32	s15, #0.0
 800bbba:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800bbbe:	4605      	mov	r5, r0
 800bbc0:	eef0 9a40 	vmov.f32	s19, s0
 800bbc4:	eeb0 aa60 	vmov.f32	s20, s1
 800bbc8:	eeb0 9a41 	vmov.f32	s18, s2
 800bbcc:	eef0 8a61 	vmov.f32	s17, s3
 800bbd0:	eeb0 ca42 	vmov.f32	s24, s4
 800bbd4:	eef0 ca62 	vmov.f32	s25, s5
 800bbd8:	f89d 6060 	ldrb.w	r6, [sp, #96]	@ 0x60
 800bbdc:	9f19      	ldr	r7, [sp, #100]	@ 0x64
 800bbde:	6802      	ldr	r2, [r0, #0]
 800bbe0:	d112      	bne.n	800bc08 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x60>
 800bbe2:	ee70 7ae1 	vsub.f32	s15, s1, s3
 800bbe6:	eef5 7a40 	vcmp.f32	s15, #0.0
 800bbea:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800bbee:	d10b      	bne.n	800bc08 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x60>
 800bbf0:	f101 4180 	add.w	r1, r1, #1073741824	@ 0x40000000
 800bbf4:	3901      	subs	r1, #1
 800bbf6:	6a92      	ldr	r2, [r2, #40]	@ 0x28
 800bbf8:	f853 1021 	ldr.w	r1, [r3, r1, lsl #2]
 800bbfc:	b007      	add	sp, #28
 800bbfe:	ecbd 8b0a 	vpop	{d8-d12}
 800bc02:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800bc06:	4710      	bx	r2
 800bc08:	23ff      	movs	r3, #255	@ 0xff
 800bc0a:	77ab      	strb	r3, [r5, #30]
 800bc0c:	6b93      	ldr	r3, [r2, #56]	@ 0x38
 800bc0e:	f8df 92c4 	ldr.w	r9, [pc, #708]	@ 800bed4 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x32c>
 800bc12:	4628      	mov	r0, r5
 800bc14:	4798      	blx	r3
 800bc16:	f105 0834 	add.w	r8, r5, #52	@ 0x34
 800bc1a:	f9b5 3008 	ldrsh.w	r3, [r5, #8]
 800bc1e:	80c3      	strh	r3, [r0, #6]
 800bc20:	eef0 0a4a 	vmov.f32	s1, s20
 800bc24:	eeb0 0a69 	vmov.f32	s0, s19
 800bc28:	4604      	mov	r4, r0
 800bc2a:	4640      	mov	r0, r8
 800bc2c:	f005 fbc7 	bl	80113be <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 800bc30:	4640      	mov	r0, r8
 800bc32:	eeb0 ba40 	vmov.f32	s22, s0
 800bc36:	eef0 ba60 	vmov.f32	s23, s1
 800bc3a:	ed8d 0a00 	vstr	s0, [sp]
 800bc3e:	edcd 0a01 	vstr	s1, [sp, #4]
 800bc42:	eeb0 0a49 	vmov.f32	s0, s18
 800bc46:	eef0 0a68 	vmov.f32	s1, s17
 800bc4a:	f005 fbb8 	bl	80113be <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 800bc4e:	eeb4 ba40 	vcmp.f32	s22, s0
 800bc52:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800bc56:	eef4 ba60 	vcmp.f32	s23, s1
 800bc5a:	bf0c      	ite	eq
 800bc5c:	2301      	moveq	r3, #1
 800bc5e:	2300      	movne	r3, #0
 800bc60:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800bc64:	eeb4 ba40 	vcmp.f32	s22, s0
 800bc68:	7463      	strb	r3, [r4, #17]
 800bc6a:	bf0c      	ite	eq
 800bc6c:	2301      	moveq	r3, #1
 800bc6e:	2300      	movne	r3, #0
 800bc70:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800bc74:	eeb0 8a40 	vmov.f32	s16, s0
 800bc78:	eef0 aa60 	vmov.f32	s21, s1
 800bc7c:	ed8d 0a02 	vstr	s0, [sp, #8]
 800bc80:	edcd 0a03 	vstr	s1, [sp, #12]
 800bc84:	74a3      	strb	r3, [r4, #18]
 800bc86:	d030      	beq.n	800bcea <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x142>
 800bc88:	eef4 ba60 	vcmp.f32	s23, s1
 800bc8c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800bc90:	d02b      	beq.n	800bcea <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x142>
 800bc92:	ee39 9a69 	vsub.f32	s18, s18, s19
 800bc96:	ee78 8aca 	vsub.f32	s17, s17, s20
 800bc9a:	ee89 7a0c 	vdiv.f32	s14, s18, s24
 800bc9e:	4640      	mov	r0, r8
 800bca0:	eec8 7aac 	vdiv.f32	s15, s17, s25
 800bca4:	eef0 0a4a 	vmov.f32	s1, s20
 800bca8:	eeb0 0a69 	vmov.f32	s0, s19
 800bcac:	eea7 0acc 	vfms.f32	s0, s15, s24
 800bcb0:	eeec 0a87 	vfma.f32	s1, s25, s14
 800bcb4:	f005 fb83 	bl	80113be <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 800bcb8:	f899 3000 	ldrb.w	r3, [r9]
 800bcbc:	edcd 0a05 	vstr	s1, [sp, #20]
 800bcc0:	ee70 0aeb 	vsub.f32	s1, s1, s23
 800bcc4:	2b01      	cmp	r3, #1
 800bcc6:	ed8d 0a04 	vstr	s0, [sp, #16]
 800bcca:	ee30 0a4b 	vsub.f32	s0, s0, s22
 800bcce:	bf02      	ittt	eq
 800bcd0:	eef1 7a60 	vnegeq.f32	s15, s1
 800bcd4:	eef0 0a40 	vmoveq.f32	s1, s0
 800bcd8:	eeb0 0a67 	vmoveq.f32	s0, s15
 800bcdc:	eeb5 0a40 	vcmp.f32	s0, #0.0
 800bce0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800bce4:	d134      	bne.n	800bd50 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x1a8>
 800bce6:	2301      	movs	r3, #1
 800bce8:	74a3      	strb	r3, [r4, #18]
 800bcea:	f899 2000 	ldrb.w	r2, [r9]
 800bcee:	7c63      	ldrb	r3, [r4, #17]
 800bcf0:	2a01      	cmp	r2, #1
 800bcf2:	f040 80a3 	bne.w	800be3c <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x294>
 800bcf6:	2b00      	cmp	r3, #0
 800bcf8:	d072      	beq.n	800bde0 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x238>
 800bcfa:	ee3a 7aeb 	vsub.f32	s14, s21, s23
 800bcfe:	eddf 6a73 	vldr	s13, [pc, #460]	@ 800becc <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x324>
 800bd02:	eec6 7a87 	vdiv.f32	s15, s13, s14
 800bd06:	eef4 baea 	vcmpe.f32	s23, s21
 800bd0a:	edc4 7a08 	vstr	s15, [r4, #32]
 800bd0e:	eefd 7aea 	vcvt.s32.f32	s15, s21
 800bd12:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800bd16:	ee17 3a90 	vmov	r3, s15
 800bd1a:	eefd 7aeb 	vcvt.s32.f32	s15, s23
 800bd1e:	b21a      	sxth	r2, r3
 800bd20:	ee17 3a90 	vmov	r3, s15
 800bd24:	b21b      	sxth	r3, r3
 800bd26:	bf47      	ittee	mi
 800bd28:	8123      	strhmi	r3, [r4, #8]
 800bd2a:	8162      	strhmi	r2, [r4, #10]
 800bd2c:	8122      	strhpl	r2, [r4, #8]
 800bd2e:	8163      	strhpl	r3, [r4, #10]
 800bd30:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800bd34:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 800bd38:	1a9b      	subs	r3, r3, r2
 800bd3a:	ee07 3a90 	vmov	s15, r3
 800bd3e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800bd42:	2300      	movs	r3, #0
 800bd44:	7463      	strb	r3, [r4, #17]
 800bd46:	edc4 7a07 	vstr	s15, [r4, #28]
 800bd4a:	2301      	movs	r3, #1
 800bd4c:	74a3      	strb	r3, [r4, #18]
 800bd4e:	e03f      	b.n	800bdd0 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x228>
 800bd50:	ee80 7a80 	vdiv.f32	s14, s1, s0
 800bd54:	eeb5 7a40 	vcmp.f32	s14, #0.0
 800bd58:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800bd5c:	ed84 7a05 	vstr	s14, [r4, #20]
 800bd60:	d102      	bne.n	800bd68 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x1c0>
 800bd62:	2301      	movs	r3, #1
 800bd64:	7463      	strb	r3, [r4, #17]
 800bd66:	e7c0      	b.n	800bcea <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x142>
 800bd68:	2b01      	cmp	r3, #1
 800bd6a:	bf03      	ittte	eq
 800bd6c:	f9b4 2006 	ldrsheq.w	r2, [r4, #6]
 800bd70:	ee07 2a90 	vmoveq	s15, r2
 800bd74:	eef8 7ae7 	vcvteq.f32.s32	s15, s15
 800bd78:	eef0 7a6b 	vmovne.f32	s15, s23
 800bd7c:	bf0a      	itet	eq
 800bd7e:	ee77 7acb 	vsubeq.f32	s15, s15, s22
 800bd82:	eeeb 7a47 	vfmsne.f32	s15, s22, s14
 800bd86:	eeeb 7ac7 	vfmseq.f32	s15, s23, s14
 800bd8a:	2b01      	cmp	r3, #1
 800bd8c:	ee38 8a4b 	vsub.f32	s16, s16, s22
 800bd90:	ee7a aaeb 	vsub.f32	s21, s21, s23
 800bd94:	edc4 7a06 	vstr	s15, [r4, #24]
 800bd98:	bf02      	ittt	eq
 800bd9a:	eef1 7a48 	vnegeq.f32	s15, s16
 800bd9e:	eeb0 8a6a 	vmoveq.f32	s16, s21
 800bda2:	eef0 aa67 	vmoveq.f32	s21, s15
 800bda6:	eeca 7a87 	vdiv.f32	s15, s21, s14
 800bdaa:	ed9f 7a49 	vldr	s14, [pc, #292]	@ 800bed0 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x328>
 800bdae:	ee38 8a67 	vsub.f32	s16, s16, s15
 800bdb2:	eec7 7a08 	vdiv.f32	s15, s14, s16
 800bdb6:	eeb5 8ac0 	vcmpe.f32	s16, #0.0
 800bdba:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800bdbe:	ed84 8a07 	vstr	s16, [r4, #28]
 800bdc2:	edc4 7a08 	vstr	s15, [r4, #32]
 800bdc6:	d503      	bpl.n	800bdd0 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x228>
 800bdc8:	eeb1 8a48 	vneg.f32	s16, s16
 800bdcc:	ed84 8a07 	vstr	s16, [r4, #28]
 800bdd0:	60e7      	str	r7, [r4, #12]
 800bdd2:	7426      	strb	r6, [r4, #16]
 800bdd4:	61ac      	str	r4, [r5, #24]
 800bdd6:	b007      	add	sp, #28
 800bdd8:	ecbd 8b0a 	vpop	{d8-d12}
 800bddc:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800bde0:	7ca3      	ldrb	r3, [r4, #18]
 800bde2:	2b00      	cmp	r3, #0
 800bde4:	d0f4      	beq.n	800bdd0 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x228>
 800bde6:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 800bdea:	eddf 6a38 	vldr	s13, [pc, #224]	@ 800becc <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x324>
 800bdee:	ee00 3a10 	vmov	s0, r3
 800bdf2:	eeb8 0ac0 	vcvt.f32.s32	s0, s0
 800bdf6:	ee30 8a48 	vsub.f32	s16, s0, s16
 800bdfa:	ee30 0a4b 	vsub.f32	s0, s0, s22
 800bdfe:	ee38 7a40 	vsub.f32	s14, s16, s0
 800be02:	eeb4 8ac0 	vcmpe.f32	s16, s0
 800be06:	eec6 7a87 	vdiv.f32	s15, s13, s14
 800be0a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800be0e:	edc4 7a08 	vstr	s15, [r4, #32]
 800be12:	eefd 7ac8 	vcvt.s32.f32	s15, s16
 800be16:	ee17 3a90 	vmov	r3, s15
 800be1a:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 800be1e:	b21a      	sxth	r2, r3
 800be20:	ee17 3a90 	vmov	r3, s15
 800be24:	b21b      	sxth	r3, r3
 800be26:	bfcc      	ite	gt
 800be28:	8123      	strhgt	r3, [r4, #8]
 800be2a:	8163      	strhle	r3, [r4, #10]
 800be2c:	f04f 0301 	mov.w	r3, #1
 800be30:	7463      	strb	r3, [r4, #17]
 800be32:	bfcc      	ite	gt
 800be34:	8162      	strhgt	r2, [r4, #10]
 800be36:	8122      	strhle	r2, [r4, #8]
 800be38:	2300      	movs	r3, #0
 800be3a:	e787      	b.n	800bd4c <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x1a4>
 800be3c:	b1db      	cbz	r3, 800be76 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x2ce>
 800be3e:	ee3a 7aeb 	vsub.f32	s14, s21, s23
 800be42:	eddf 6a22 	vldr	s13, [pc, #136]	@ 800becc <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x324>
 800be46:	eec6 7a87 	vdiv.f32	s15, s13, s14
 800be4a:	eef4 baea 	vcmpe.f32	s23, s21
 800be4e:	edc4 7a08 	vstr	s15, [r4, #32]
 800be52:	eefd 7aea 	vcvt.s32.f32	s15, s21
 800be56:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800be5a:	ee17 3a90 	vmov	r3, s15
 800be5e:	eefd 7aeb 	vcvt.s32.f32	s15, s23
 800be62:	b21a      	sxth	r2, r3
 800be64:	ee17 3a90 	vmov	r3, s15
 800be68:	b21b      	sxth	r3, r3
 800be6a:	bf47      	ittee	mi
 800be6c:	8123      	strhmi	r3, [r4, #8]
 800be6e:	8162      	strhmi	r2, [r4, #10]
 800be70:	8122      	strhpl	r2, [r4, #8]
 800be72:	8163      	strhpl	r3, [r4, #10]
 800be74:	e7ac      	b.n	800bdd0 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x228>
 800be76:	7ca3      	ldrb	r3, [r4, #18]
 800be78:	2b00      	cmp	r3, #0
 800be7a:	d0a9      	beq.n	800bdd0 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x228>
 800be7c:	ee38 7a4b 	vsub.f32	s14, s16, s22
 800be80:	eddf 6a12 	vldr	s13, [pc, #72]	@ 800becc <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x324>
 800be84:	eec6 7a87 	vdiv.f32	s15, s13, s14
 800be88:	eeb4 bac8 	vcmpe.f32	s22, s16
 800be8c:	edc4 7a08 	vstr	s15, [r4, #32]
 800be90:	eefd 7ac8 	vcvt.s32.f32	s15, s16
 800be94:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800be98:	ee17 3a90 	vmov	r3, s15
 800be9c:	eefd 7acb 	vcvt.s32.f32	s15, s22
 800bea0:	b21a      	sxth	r2, r3
 800bea2:	ee17 3a90 	vmov	r3, s15
 800bea6:	b21b      	sxth	r3, r3
 800bea8:	bf47      	ittee	mi
 800beaa:	8123      	strhmi	r3, [r4, #8]
 800beac:	8162      	strhmi	r2, [r4, #10]
 800beae:	8122      	strhpl	r2, [r4, #8]
 800beb0:	8163      	strhpl	r3, [r4, #10]
 800beb2:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800beb6:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 800beba:	1a9b      	subs	r3, r3, r2
 800bebc:	ee07 3a90 	vmov	s15, r3
 800bec0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800bec4:	edc4 7a07 	vstr	s15, [r4, #28]
 800bec8:	e782      	b.n	800bdd0 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x228>
 800beca:	bf00      	nop
 800becc:	447ffffe 	.word	0x447ffffe
 800bed0:	44800000 	.word	0x44800000
 800bed4:	2001403a 	.word	0x2001403a

0800bed8 <_ZN8touchgfx6Canvas17quadraticBezierToEffffff>:
 800bed8:	b510      	push	{r4, lr}
 800beda:	2100      	movs	r1, #0
 800bedc:	ed2d 8b02 	vpush	{d8}
 800bee0:	eef0 8a62 	vmov.f32	s17, s5
 800bee4:	4604      	mov	r4, r0
 800bee6:	eeb0 8a42 	vmov.f32	s16, s4
 800beea:	f015 fc9d 	bl	8021828 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj>
 800beee:	eef0 7a68 	vmov.f32	s15, s17
 800bef2:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 800bef6:	6823      	ldr	r3, [r4, #0]
 800bef8:	ee17 2a90 	vmov	r2, s15
 800befc:	eef0 7a48 	vmov.f32	s15, s16
 800bf00:	ecbd 8b02 	vpop	{d8}
 800bf04:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 800bf08:	4620      	mov	r0, r4
 800bf0a:	689b      	ldr	r3, [r3, #8]
 800bf0c:	ee17 1a90 	vmov	r1, s15
 800bf10:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800bf14:	4718      	bx	r3

0800bf16 <_ZN8touchgfx6Canvas13cubicBezierToEffffffff>:
 800bf16:	b510      	push	{r4, lr}
 800bf18:	2100      	movs	r1, #0
 800bf1a:	ed2d 8b02 	vpush	{d8}
 800bf1e:	eef0 8a63 	vmov.f32	s17, s7
 800bf22:	4604      	mov	r4, r0
 800bf24:	eeb0 8a43 	vmov.f32	s16, s6
 800bf28:	f015 fd40 	bl	80219ac <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj>
 800bf2c:	eef0 7a68 	vmov.f32	s15, s17
 800bf30:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 800bf34:	6823      	ldr	r3, [r4, #0]
 800bf36:	ee17 2a90 	vmov	r2, s15
 800bf3a:	eef0 7a48 	vmov.f32	s15, s16
 800bf3e:	ecbd 8b02 	vpop	{d8}
 800bf42:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 800bf46:	4620      	mov	r0, r4
 800bf48:	689b      	ldr	r3, [r3, #8]
 800bf4a:	ee17 1a90 	vmov	r1, s15
 800bf4e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800bf52:	4718      	bx	r3

0800bf54 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19moveToWithTransformEff>:
 800bf54:	b513      	push	{r0, r1, r4, lr}
 800bf56:	4604      	mov	r4, r0
 800bf58:	6f40      	ldr	r0, [r0, #116]	@ 0x74
 800bf5a:	f005 fa30 	bl	80113be <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 800bf5e:	eef0 7a60 	vmov.f32	s15, s1
 800bf62:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 800bf66:	4620      	mov	r0, r4
 800bf68:	ee17 2a90 	vmov	r2, s15
 800bf6c:	eef0 7a40 	vmov.f32	s15, s0
 800bf70:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 800bf74:	ee17 1a90 	vmov	r1, s15
 800bf78:	b002      	add	sp, #8
 800bf7a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800bf7e:	f015 bbad 	b.w	80216dc <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>

0800bf82 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>:
 800bf82:	b513      	push	{r0, r1, r4, lr}
 800bf84:	4604      	mov	r4, r0
 800bf86:	6f40      	ldr	r0, [r0, #116]	@ 0x74
 800bf88:	f005 fa19 	bl	80113be <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 800bf8c:	eef0 7a60 	vmov.f32	s15, s1
 800bf90:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 800bf94:	4620      	mov	r0, r4
 800bf96:	ee17 2a90 	vmov	r2, s15
 800bf9a:	eef0 7a40 	vmov.f32	s15, s0
 800bf9e:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 800bfa2:	ee17 1a90 	vmov	r1, s15
 800bfa6:	b002      	add	sp, #8
 800bfa8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800bfac:	f015 bbe3 	b.w	8021776 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>

0800bfb0 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf>:
 800bfb0:	b5f0      	push	{r4, r5, r6, r7, lr}
 800bfb2:	e9dd 0c05 	ldrd	r0, ip, [sp, #20]
 800bfb6:	2400      	movs	r4, #0
 800bfb8:	9f07      	ldr	r7, [sp, #28]
 800bfba:	4463      	add	r3, ip
 800bfbc:	4626      	mov	r6, r4
 800bfbe:	f04f 0e01 	mov.w	lr, #1
 800bfc2:	4563      	cmp	r3, ip
 800bfc4:	d02d      	beq.n	800c022 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x72>
 800bfc6:	f813 5d01 	ldrb.w	r5, [r3, #-1]!
 800bfca:	2d06      	cmp	r5, #6
 800bfcc:	d8f9      	bhi.n	800bfc2 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x12>
 800bfce:	fa0e f505 	lsl.w	r5, lr, r5
 800bfd2:	f015 0f66 	tst.w	r5, #102	@ 0x66
 800bfd6:	d10d      	bne.n	800bff4 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x44>
 800bfd8:	f015 0f10 	tst.w	r5, #16
 800bfdc:	d117      	bne.n	800c00e <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x5e>
 800bfde:	072d      	lsls	r5, r5, #28
 800bfe0:	d5ef      	bpl.n	800bfc2 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x12>
 800bfe2:	3801      	subs	r0, #1
 800bfe4:	b91e      	cbnz	r6, 800bfee <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x3e>
 800bfe6:	eb07 0580 	add.w	r5, r7, r0, lsl #2
 800bfea:	682d      	ldr	r5, [r5, #0]
 800bfec:	600d      	str	r5, [r1, #0]
 800bfee:	b96c      	cbnz	r4, 800c00c <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x5c>
 800bff0:	2601      	movs	r6, #1
 800bff2:	e7e6      	b.n	800bfc2 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x12>
 800bff4:	b926      	cbnz	r6, 800c000 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x50>
 800bff6:	eb07 0380 	add.w	r3, r7, r0, lsl #2
 800bffa:	f853 3c08 	ldr.w	r3, [r3, #-8]
 800bffe:	600b      	str	r3, [r1, #0]
 800c000:	b924      	cbnz	r4, 800c00c <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x5c>
 800c002:	eb07 0080 	add.w	r0, r7, r0, lsl #2
 800c006:	f850 3c04 	ldr.w	r3, [r0, #-4]
 800c00a:	6013      	str	r3, [r2, #0]
 800c00c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800c00e:	3801      	subs	r0, #1
 800c010:	b91c      	cbnz	r4, 800c01a <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x6a>
 800c012:	eb07 0480 	add.w	r4, r7, r0, lsl #2
 800c016:	6824      	ldr	r4, [r4, #0]
 800c018:	6014      	str	r4, [r2, #0]
 800c01a:	2e00      	cmp	r6, #0
 800c01c:	d1f6      	bne.n	800c00c <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x5c>
 800c01e:	2401      	movs	r4, #1
 800c020:	e7cf      	b.n	800bfc2 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x12>
 800c022:	b90e      	cbnz	r6, 800c028 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x78>
 800c024:	2300      	movs	r3, #0
 800c026:	600b      	str	r3, [r1, #0]
 800c028:	2c00      	cmp	r4, #0
 800c02a:	d1ef      	bne.n	800c00c <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x5c>
 800c02c:	2300      	movs	r3, #0
 800c02e:	e7ec      	b.n	800c00a <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x5a>

0800c030 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi>:
 800c030:	b538      	push	{r3, r4, r5, lr}
 800c032:	4604      	mov	r4, r0
 800c034:	ed2d 8b0a 	vpush	{d8-d12}
 800c038:	460d      	mov	r5, r1
 800c03a:	eef0 ba40 	vmov.f32	s23, s0
 800c03e:	eeb0 ca60 	vmov.f32	s24, s1
 800c042:	eef0 aa41 	vmov.f32	s21, s2
 800c046:	eeb0 ba61 	vmov.f32	s22, s3
 800c04a:	eeb0 9a42 	vmov.f32	s18, s4
 800c04e:	eef0 9a62 	vmov.f32	s19, s5
 800c052:	eeb6 aa00 	vmov.f32	s20, #96	@ 0x3f000000  0.5
 800c056:	ee7b 8a29 	vadd.f32	s17, s22, s19
 800c05a:	ee3a 8a89 	vadd.f32	s16, s21, s18
 800c05e:	ee68 8a8a 	vmul.f32	s17, s17, s20
 800c062:	ee28 8a0a 	vmul.f32	s16, s16, s20
 800c066:	ee3c 0a68 	vsub.f32	s0, s24, s17
 800c06a:	ee7b 7ac8 	vsub.f32	s15, s23, s16
 800c06e:	ee20 0a00 	vmul.f32	s0, s0, s0
 800c072:	eea7 0aa7 	vfma.f32	s0, s15, s15
 800c076:	f015 fe73 	bl	8021d60 <sqrtf>
 800c07a:	eeb5 0a40 	vcmp.f32	s0, #0.0
 800c07e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c082:	d12e      	bne.n	800c0e2 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi+0xb2>
 800c084:	ee79 7a6a 	vsub.f32	s15, s18, s21
 800c088:	ee39 7acb 	vsub.f32	s14, s19, s22
 800c08c:	eeb0 8a6a 	vmov.f32	s16, s21
 800c090:	eef0 8a4b 	vmov.f32	s17, s22
 800c094:	eea7 8a8a 	vfma.f32	s16, s15, s20
 800c098:	eee7 8a0a 	vfma.f32	s17, s14, s20
 800c09c:	eea7 8a0a 	vfma.f32	s16, s14, s20
 800c0a0:	eee7 8aca 	vfms.f32	s17, s15, s20
 800c0a4:	2d02      	cmp	r5, #2
 800c0a6:	dc2f      	bgt.n	800c108 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi+0xd8>
 800c0a8:	3501      	adds	r5, #1
 800c0aa:	eef0 1a4b 	vmov.f32	s3, s22
 800c0ae:	eeb0 1a6a 	vmov.f32	s2, s21
 800c0b2:	4629      	mov	r1, r5
 800c0b4:	eef0 2a68 	vmov.f32	s5, s17
 800c0b8:	eeb0 2a48 	vmov.f32	s4, s16
 800c0bc:	eef0 0a4c 	vmov.f32	s1, s24
 800c0c0:	eeb0 0a6b 	vmov.f32	s0, s23
 800c0c4:	4620      	mov	r0, r4
 800c0c6:	f7ff ffb3 	bl	800c030 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi>
 800c0ca:	eef0 0a68 	vmov.f32	s1, s17
 800c0ce:	eeb0 0a48 	vmov.f32	s0, s16
 800c0d2:	4620      	mov	r0, r4
 800c0d4:	f7ff ff55 	bl	800bf82 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800c0d8:	eeb0 ba68 	vmov.f32	s22, s17
 800c0dc:	eef0 aa48 	vmov.f32	s21, s16
 800c0e0:	e7b9      	b.n	800c056 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi+0x26>
 800c0e2:	edd4 7a1f 	vldr	s15, [r4, #124]	@ 0x7c
 800c0e6:	ee38 8a6b 	vsub.f32	s16, s16, s23
 800c0ea:	ee78 8acc 	vsub.f32	s17, s17, s24
 800c0ee:	ee28 7a27 	vmul.f32	s14, s16, s15
 800c0f2:	ee68 7aa7 	vmul.f32	s15, s17, s15
 800c0f6:	ee87 8a00 	vdiv.f32	s16, s14, s0
 800c0fa:	eec7 8a80 	vdiv.f32	s17, s15, s0
 800c0fe:	ee3b 8a88 	vadd.f32	s16, s23, s16
 800c102:	ee7c 8a28 	vadd.f32	s17, s24, s17
 800c106:	e7cd      	b.n	800c0a4 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi+0x74>
 800c108:	eef0 0a68 	vmov.f32	s1, s17
 800c10c:	eeb0 0a48 	vmov.f32	s0, s16
 800c110:	4620      	mov	r0, r4
 800c112:	f7ff ff36 	bl	800bf82 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800c116:	ecbd 8b0a 	vpop	{d8-d12}
 800c11a:	bd38      	pop	{r3, r4, r5, pc}

0800c11c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff>:
 800c11c:	b510      	push	{r4, lr}
 800c11e:	ed2d 8b0a 	vpush	{d8-d12}
 800c122:	f890 3084 	ldrb.w	r3, [r0, #132]	@ 0x84
 800c126:	2b02      	cmp	r3, #2
 800c128:	4604      	mov	r4, r0
 800c12a:	eeb0 ca40 	vmov.f32	s24, s0
 800c12e:	eeb0 9a60 	vmov.f32	s18, s1
 800c132:	eef0 9a41 	vmov.f32	s19, s2
 800c136:	eef0 8a61 	vmov.f32	s17, s3
 800c13a:	eeb0 ba42 	vmov.f32	s22, s4
 800c13e:	eef0 ba62 	vmov.f32	s23, s5
 800c142:	eeb0 aa43 	vmov.f32	s20, s6
 800c146:	eef0 aa63 	vmov.f32	s21, s7
 800c14a:	eeb0 8a44 	vmov.f32	s16, s8
 800c14e:	eef0 ca64 	vmov.f32	s25, s9
 800c152:	d12c      	bne.n	800c1ae <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0x92>
 800c154:	eef0 0a62 	vmov.f32	s1, s5
 800c158:	eeb0 0a42 	vmov.f32	s0, s4
 800c15c:	f7ff ff11 	bl	800bf82 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800c160:	ee79 9acb 	vsub.f32	s19, s19, s22
 800c164:	ee7a caec 	vsub.f32	s25, s21, s25
 800c168:	ee78 8aeb 	vsub.f32	s17, s17, s23
 800c16c:	ee3a 8a48 	vsub.f32	s16, s20, s16
 800c170:	ee69 9aac 	vmul.f32	s19, s19, s25
 800c174:	ee28 8a88 	vmul.f32	s16, s17, s16
 800c178:	eef4 9ac8 	vcmpe.f32	s19, s16
 800c17c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c180:	db0f      	blt.n	800c1a2 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0x86>
 800c182:	2101      	movs	r1, #1
 800c184:	eef0 2a6a 	vmov.f32	s5, s21
 800c188:	eeb0 2a4a 	vmov.f32	s4, s20
 800c18c:	eef0 1a6b 	vmov.f32	s3, s23
 800c190:	eeb0 1a4b 	vmov.f32	s2, s22
 800c194:	eef0 0a49 	vmov.f32	s1, s18
 800c198:	eeb0 0a4c 	vmov.f32	s0, s24
 800c19c:	4620      	mov	r0, r4
 800c19e:	f7ff ff47 	bl	800c030 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi>
 800c1a2:	eef0 0a6a 	vmov.f32	s1, s21
 800c1a6:	eeb0 0a4a 	vmov.f32	s0, s20
 800c1aa:	4620      	mov	r0, r4
 800c1ac:	e035      	b.n	800c21a <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0xfe>
 800c1ae:	2b01      	cmp	r3, #1
 800c1b0:	d138      	bne.n	800c224 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0x108>
 800c1b2:	ee31 4ae2 	vsub.f32	s8, s3, s5
 800c1b6:	ee33 6a48 	vsub.f32	s12, s6, s16
 800c1ba:	ee71 7a42 	vsub.f32	s15, s2, s4
 800c1be:	ee73 6ae4 	vsub.f32	s13, s7, s9
 800c1c2:	ee26 7a44 	vnmul.f32	s14, s12, s8
 800c1c6:	eea7 7aa6 	vfma.f32	s14, s15, s13
 800c1ca:	eeb5 7a40 	vcmp.f32	s14, #0.0
 800c1ce:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c1d2:	d027      	beq.n	800c224 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0x108>
 800c1d4:	ee28 8a63 	vnmul.f32	s16, s16, s7
 800c1d8:	ee61 8ac2 	vnmul.f32	s17, s3, s4
 800c1dc:	eea4 8a83 	vfma.f32	s16, s9, s6
 800c1e0:	eee1 8a22 	vfma.f32	s17, s2, s5
 800c1e4:	ee68 7a67 	vnmul.f32	s15, s16, s15
 800c1e8:	ee28 8a44 	vnmul.f32	s16, s16, s8
 800c1ec:	eee6 7a28 	vfma.f32	s15, s12, s17
 800c1f0:	eea6 8aa8 	vfma.f32	s16, s13, s17
 800c1f4:	ee87 0a87 	vdiv.f32	s0, s15, s14
 800c1f8:	eec8 0a07 	vdiv.f32	s1, s16, s14
 800c1fc:	ee3c ca40 	vsub.f32	s24, s24, s0
 800c200:	ee39 9a60 	vsub.f32	s18, s18, s1
 800c204:	edd0 7a20 	vldr	s15, [r0, #128]	@ 0x80
 800c208:	ee29 9a09 	vmul.f32	s18, s18, s18
 800c20c:	eeac 9a0c 	vfma.f32	s18, s24, s24
 800c210:	eef4 7ac9 	vcmpe.f32	s15, s18
 800c214:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c218:	db04      	blt.n	800c224 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0x108>
 800c21a:	f7ff feb2 	bl	800bf82 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800c21e:	ecbd 8b0a 	vpop	{d8-d12}
 800c222:	bd10      	pop	{r4, pc}
 800c224:	eef0 0a6b 	vmov.f32	s1, s23
 800c228:	eeb0 0a4b 	vmov.f32	s0, s22
 800c22c:	4620      	mov	r0, r4
 800c22e:	f7ff fea8 	bl	800bf82 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800c232:	e7b6      	b.n	800c1a2 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0x86>

0800c234 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff>:
 800c234:	b510      	push	{r4, lr}
 800c236:	ed2d 8b0c 	vpush	{d8-d13}
 800c23a:	f890 3085 	ldrb.w	r3, [r0, #133]	@ 0x85
 800c23e:	4604      	mov	r4, r0
 800c240:	eeb0 9a40 	vmov.f32	s18, s0
 800c244:	eef0 9a60 	vmov.f32	s19, s1
 800c248:	eef0 aa41 	vmov.f32	s21, s2
 800c24c:	eeb0 ba61 	vmov.f32	s22, s3
 800c250:	b933      	cbnz	r3, 800c260 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x2c>
 800c252:	f7ff fe96 	bl	800bf82 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800c256:	eef0 0a4b 	vmov.f32	s1, s22
 800c25a:	eeb0 0a6a 	vmov.f32	s0, s21
 800c25e:	e015      	b.n	800c28c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x58>
 800c260:	ee71 8a40 	vsub.f32	s17, s2, s0
 800c264:	ee31 8ae0 	vsub.f32	s16, s3, s1
 800c268:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 800c26c:	2b02      	cmp	r3, #2
 800c26e:	ee68 8aa7 	vmul.f32	s17, s17, s15
 800c272:	ee28 8a27 	vmul.f32	s16, s16, s15
 800c276:	d10f      	bne.n	800c298 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x64>
 800c278:	ee70 0ae8 	vsub.f32	s1, s1, s17
 800c27c:	ee30 0a08 	vadd.f32	s0, s0, s16
 800c280:	f7ff fe7f 	bl	800bf82 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800c284:	ee7b 0a68 	vsub.f32	s1, s22, s17
 800c288:	ee3a 0a88 	vadd.f32	s0, s21, s16
 800c28c:	4620      	mov	r0, r4
 800c28e:	f7ff fe78 	bl	800bf82 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800c292:	ecbd 8b0c 	vpop	{d8-d13}
 800c296:	bd10      	pop	{r4, pc}
 800c298:	f7ff fe73 	bl	800bf82 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800c29c:	eddf 7a4d 	vldr	s15, [pc, #308]	@ 800c3d4 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1a0>
 800c2a0:	eddf ba4d 	vldr	s23, [pc, #308]	@ 800c3d8 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1a4>
 800c2a4:	ed9f ca4d 	vldr	s24, [pc, #308]	@ 800c3dc <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1a8>
 800c2a8:	eddf ca4d 	vldr	s25, [pc, #308]	@ 800c3e0 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1ac>
 800c2ac:	ed9f da4d 	vldr	s26, [pc, #308]	@ 800c3e4 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1b0>
 800c2b0:	eef0 0a69 	vmov.f32	s1, s19
 800c2b4:	eeb0 0a49 	vmov.f32	s0, s18
 800c2b8:	eee8 0a27 	vfma.f32	s1, s16, s15
 800c2bc:	4620      	mov	r0, r4
 800c2be:	eea8 0aa7 	vfma.f32	s0, s17, s15
 800c2c2:	eeb1 aa68 	vneg.f32	s20, s17
 800c2c6:	eeea 0a2b 	vfma.f32	s1, s20, s23
 800c2ca:	eea8 0a2b 	vfma.f32	s0, s16, s23
 800c2ce:	f7ff fe58 	bl	800bf82 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800c2d2:	eddf 7a45 	vldr	s15, [pc, #276]	@ 800c3e8 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1b4>
 800c2d6:	eef0 0a69 	vmov.f32	s1, s19
 800c2da:	eeb0 0a49 	vmov.f32	s0, s18
 800c2de:	eee8 0a27 	vfma.f32	s1, s16, s15
 800c2e2:	4620      	mov	r0, r4
 800c2e4:	eea8 0aa7 	vfma.f32	s0, s17, s15
 800c2e8:	eeea 0a0c 	vfma.f32	s1, s20, s24
 800c2ec:	eea8 0a0c 	vfma.f32	s0, s16, s24
 800c2f0:	f7ff fe47 	bl	800bf82 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800c2f4:	eddf 7a3d 	vldr	s15, [pc, #244]	@ 800c3ec <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1b8>
 800c2f8:	eef0 0a69 	vmov.f32	s1, s19
 800c2fc:	eeb0 0a49 	vmov.f32	s0, s18
 800c300:	eee8 0a27 	vfma.f32	s1, s16, s15
 800c304:	4620      	mov	r0, r4
 800c306:	eea8 0aa7 	vfma.f32	s0, s17, s15
 800c30a:	eeea 0a2c 	vfma.f32	s1, s20, s25
 800c30e:	eea8 0a2c 	vfma.f32	s0, s16, s25
 800c312:	f7ff fe36 	bl	800bf82 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800c316:	eddf 7a36 	vldr	s15, [pc, #216]	@ 800c3f0 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1bc>
 800c31a:	eef0 0a69 	vmov.f32	s1, s19
 800c31e:	eeb0 0a49 	vmov.f32	s0, s18
 800c322:	eee8 0a27 	vfma.f32	s1, s16, s15
 800c326:	4620      	mov	r0, r4
 800c328:	eea8 0aa7 	vfma.f32	s0, s17, s15
 800c32c:	eeea 0a0d 	vfma.f32	s1, s20, s26
 800c330:	eea8 0a0d 	vfma.f32	s0, s16, s26
 800c334:	f7ff fe25 	bl	800bf82 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800c338:	ee79 0a88 	vadd.f32	s1, s19, s16
 800c33c:	ee39 0a28 	vadd.f32	s0, s18, s17
 800c340:	ee70 0ae8 	vsub.f32	s1, s1, s17
 800c344:	ee30 0a08 	vadd.f32	s0, s0, s16
 800c348:	4620      	mov	r0, r4
 800c34a:	f7ff fe1a 	bl	800bf82 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800c34e:	eddf 7a29 	vldr	s15, [pc, #164]	@ 800c3f4 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1c0>
 800c352:	eef0 0a69 	vmov.f32	s1, s19
 800c356:	eeb0 0a49 	vmov.f32	s0, s18
 800c35a:	eee8 0a27 	vfma.f32	s1, s16, s15
 800c35e:	4620      	mov	r0, r4
 800c360:	eea8 0aa7 	vfma.f32	s0, s17, s15
 800c364:	eeea 0a0d 	vfma.f32	s1, s20, s26
 800c368:	eea8 0a0d 	vfma.f32	s0, s16, s26
 800c36c:	f7ff fe09 	bl	800bf82 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800c370:	eddf 7a21 	vldr	s15, [pc, #132]	@ 800c3f8 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1c4>
 800c374:	eef0 0a69 	vmov.f32	s1, s19
 800c378:	eeb0 0a49 	vmov.f32	s0, s18
 800c37c:	eee8 0a27 	vfma.f32	s1, s16, s15
 800c380:	4620      	mov	r0, r4
 800c382:	eea8 0aa7 	vfma.f32	s0, s17, s15
 800c386:	eeea 0a2c 	vfma.f32	s1, s20, s25
 800c38a:	eea8 0a2c 	vfma.f32	s0, s16, s25
 800c38e:	f7ff fdf8 	bl	800bf82 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800c392:	eddf 7a1a 	vldr	s15, [pc, #104]	@ 800c3fc <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1c8>
 800c396:	eef0 0a69 	vmov.f32	s1, s19
 800c39a:	eeb0 0a49 	vmov.f32	s0, s18
 800c39e:	eee8 0a27 	vfma.f32	s1, s16, s15
 800c3a2:	4620      	mov	r0, r4
 800c3a4:	eea8 0aa7 	vfma.f32	s0, s17, s15
 800c3a8:	eeea 0a0c 	vfma.f32	s1, s20, s24
 800c3ac:	eea8 0a0c 	vfma.f32	s0, s16, s24
 800c3b0:	f7ff fde7 	bl	800bf82 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800c3b4:	eddf 7a12 	vldr	s15, [pc, #72]	@ 800c400 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1cc>
 800c3b8:	eef0 0a69 	vmov.f32	s1, s19
 800c3bc:	eeb0 0a49 	vmov.f32	s0, s18
 800c3c0:	eee8 0a27 	vfma.f32	s1, s16, s15
 800c3c4:	4620      	mov	r0, r4
 800c3c6:	eea8 0aa7 	vfma.f32	s0, s17, s15
 800c3ca:	eeea 0a2b 	vfma.f32	s1, s20, s23
 800c3ce:	eea8 0a2b 	vfma.f32	s0, s16, s23
 800c3d2:	e73e      	b.n	800c252 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1e>
 800c3d4:	3d23d70a 	.word	0x3d23d70a
 800c3d8:	3e8f5c29 	.word	0x3e8f5c29
 800c3dc:	3f19999a 	.word	0x3f19999a
 800c3e0:	3f4ccccd 	.word	0x3f4ccccd
 800c3e4:	3f75c28f 	.word	0x3f75c28f
 800c3e8:	3e4ccccd 	.word	0x3e4ccccd
 800c3ec:	3ecccccd 	.word	0x3ecccccd
 800c3f0:	3f3851ec 	.word	0x3f3851ec
 800c3f4:	3fa3d70a 	.word	0x3fa3d70a
 800c3f8:	3fcccccd 	.word	0x3fcccccd
 800c3fc:	3fe66666 	.word	0x3fe66666
 800c400:	3ffae148 	.word	0x3ffae148

0800c404 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff>:
 800c404:	b570      	push	{r4, r5, r6, lr}
 800c406:	ed2d 8b06 	vpush	{d8-d10}
 800c40a:	ed90 8a23 	vldr	s16, [r0, #140]	@ 0x8c
 800c40e:	ed90 9a22 	vldr	s18, [r0, #136]	@ 0x88
 800c412:	ee30 8ac8 	vsub.f32	s16, s1, s16
 800c416:	ee30 9a49 	vsub.f32	s18, s0, s18
 800c41a:	eef0 aa40 	vmov.f32	s21, s0
 800c41e:	ee28 0a08 	vmul.f32	s0, s16, s16
 800c422:	4604      	mov	r4, r0
 800c424:	eea9 0a09 	vfma.f32	s0, s18, s18
 800c428:	eeb0 aa60 	vmov.f32	s20, s1
 800c42c:	f015 fc98 	bl	8021d60 <sqrtf>
 800c430:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 800c434:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c438:	dd36      	ble.n	800c4a8 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff+0xa4>
 800c43a:	edd4 7a1f 	vldr	s15, [r4, #124]	@ 0x7c
 800c43e:	edd4 0a23 	vldr	s1, [r4, #140]	@ 0x8c
 800c442:	f894 5078 	ldrb.w	r5, [r4, #120]	@ 0x78
 800c446:	eec0 6a27 	vdiv.f32	s13, s0, s15
 800c44a:	2600      	movs	r6, #0
 800c44c:	f884 6079 	strb.w	r6, [r4, #121]	@ 0x79
 800c450:	ed94 0a22 	vldr	s0, [r4, #136]	@ 0x88
 800c454:	eec8 8a26 	vdiv.f32	s17, s16, s13
 800c458:	ee89 8a26 	vdiv.f32	s16, s18, s13
 800c45c:	ee70 9a28 	vadd.f32	s19, s0, s17
 800c460:	ee30 9ac8 	vsub.f32	s18, s1, s16
 800c464:	ee78 8aaa 	vadd.f32	s17, s17, s21
 800c468:	ee3a 8a48 	vsub.f32	s16, s20, s16
 800c46c:	b1fd      	cbz	r5, 800c4ae <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff+0xaa>
 800c46e:	edc4 9a24 	vstr	s19, [r4, #144]	@ 0x90
 800c472:	ed84 9a25 	vstr	s18, [r4, #148]	@ 0x94
 800c476:	edc4 8a26 	vstr	s17, [r4, #152]	@ 0x98
 800c47a:	ed84 8a27 	vstr	s16, [r4, #156]	@ 0x9c
 800c47e:	eef0 0a49 	vmov.f32	s1, s18
 800c482:	eeb0 0a69 	vmov.f32	s0, s19
 800c486:	4620      	mov	r0, r4
 800c488:	f7ff fd64 	bl	800bf54 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19moveToWithTransformEff>
 800c48c:	f884 6078 	strb.w	r6, [r4, #120]	@ 0x78
 800c490:	edc4 9a28 	vstr	s19, [r4, #160]	@ 0xa0
 800c494:	ed84 9a29 	vstr	s18, [r4, #164]	@ 0xa4
 800c498:	edc4 8a2a 	vstr	s17, [r4, #168]	@ 0xa8
 800c49c:	ed84 8a2b 	vstr	s16, [r4, #172]	@ 0xac
 800c4a0:	edc4 aa22 	vstr	s21, [r4, #136]	@ 0x88
 800c4a4:	ed84 aa23 	vstr	s20, [r4, #140]	@ 0x8c
 800c4a8:	ecbd 8b06 	vpop	{d8-d10}
 800c4ac:	bd70      	pop	{r4, r5, r6, pc}
 800c4ae:	f894 307a 	ldrb.w	r3, [r4, #122]	@ 0x7a
 800c4b2:	ed94 2a2a 	vldr	s4, [r4, #168]	@ 0xa8
 800c4b6:	edd4 2a2b 	vldr	s5, [r4, #172]	@ 0xac
 800c4ba:	b16b      	cbz	r3, 800c4d8 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff+0xd4>
 800c4bc:	eef0 1a49 	vmov.f32	s3, s18
 800c4c0:	eeb0 1a69 	vmov.f32	s2, s19
 800c4c4:	eef0 0a62 	vmov.f32	s1, s5
 800c4c8:	eeb0 0a42 	vmov.f32	s0, s4
 800c4cc:	4620      	mov	r0, r4
 800c4ce:	f7ff feb1 	bl	800c234 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff>
 800c4d2:	f884 507a 	strb.w	r5, [r4, #122]	@ 0x7a
 800c4d6:	e7db      	b.n	800c490 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff+0x8c>
 800c4d8:	eef0 4a48 	vmov.f32	s9, s16
 800c4dc:	eeb0 4a68 	vmov.f32	s8, s17
 800c4e0:	eef0 3a49 	vmov.f32	s7, s18
 800c4e4:	eeb0 3a69 	vmov.f32	s6, s19
 800c4e8:	edd4 1a29 	vldr	s3, [r4, #164]	@ 0xa4
 800c4ec:	ed94 1a28 	vldr	s2, [r4, #160]	@ 0xa0
 800c4f0:	4620      	mov	r0, r4
 800c4f2:	f7ff fe13 	bl	800c11c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff>
 800c4f6:	e7cb      	b.n	800c490 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff+0x8c>

0800c4f8 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas6lineToENS_7CWRUtil2Q5ES3_>:
 800c4f8:	ee07 2a90 	vmov	s15, r2
 800c4fc:	ee07 1a10 	vmov	s14, r1
 800c500:	eef8 0ae7 	vcvt.f32.s32	s1, s15
 800c504:	eeb8 0ac7 	vcvt.f32.s32	s0, s14
 800c508:	eddf 7a03 	vldr	s15, [pc, #12]	@ 800c518 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas6lineToENS_7CWRUtil2Q5ES3_+0x20>
 800c50c:	ee60 0aa7 	vmul.f32	s1, s1, s15
 800c510:	ee20 0a27 	vmul.f32	s0, s0, s15
 800c514:	f7ff bf76 	b.w	800c404 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff>
 800c518:	3d000000 	.word	0x3d000000

0800c51c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawDoubleLineCapEv>:
 800c51c:	b538      	push	{r3, r4, r5, lr}
 800c51e:	ed2d 8b02 	vpush	{d8}
 800c522:	f890 5079 	ldrb.w	r5, [r0, #121]	@ 0x79
 800c526:	4604      	mov	r4, r0
 800c528:	b31d      	cbz	r5, 800c572 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawDoubleLineCapEv+0x56>
 800c52a:	edd0 7a1f 	vldr	s15, [r0, #124]	@ 0x7c
 800c52e:	ed90 8a23 	vldr	s16, [r0, #140]	@ 0x8c
 800c532:	ed90 0a22 	vldr	s0, [r0, #136]	@ 0x88
 800c536:	ee78 8a67 	vsub.f32	s17, s16, s15
 800c53a:	ee38 8a27 	vadd.f32	s16, s16, s15
 800c53e:	eef0 0a68 	vmov.f32	s1, s17
 800c542:	f7ff fd07 	bl	800bf54 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19moveToWithTransformEff>
 800c546:	ed94 1a22 	vldr	s2, [r4, #136]	@ 0x88
 800c54a:	eef0 1a48 	vmov.f32	s3, s16
 800c54e:	eeb0 0a41 	vmov.f32	s0, s2
 800c552:	eef0 0a68 	vmov.f32	s1, s17
 800c556:	4620      	mov	r0, r4
 800c558:	f7ff fe6c 	bl	800c234 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff>
 800c55c:	ed94 1a22 	vldr	s2, [r4, #136]	@ 0x88
 800c560:	eef0 1a68 	vmov.f32	s3, s17
 800c564:	eef0 0a48 	vmov.f32	s1, s16
 800c568:	eeb0 0a41 	vmov.f32	s0, s2
 800c56c:	4620      	mov	r0, r4
 800c56e:	f7ff fe61 	bl	800c234 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff>
 800c572:	ecbd 8b02 	vpop	{d8}
 800c576:	4628      	mov	r0, r5
 800c578:	bd38      	pop	{r3, r4, r5, pc}

0800c57a <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas11strokeCloseEff>:
 800c57a:	b510      	push	{r4, lr}
 800c57c:	ed2d 8b02 	vpush	{d8}
 800c580:	4604      	mov	r4, r0
 800c582:	eeb0 8a40 	vmov.f32	s16, s0
 800c586:	eef0 8a60 	vmov.f32	s17, s1
 800c58a:	f7ff ffc7 	bl	800c51c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawDoubleLineCapEv>
 800c58e:	b9d0      	cbnz	r0, 800c5c6 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas11strokeCloseEff+0x4c>
 800c590:	4620      	mov	r0, r4
 800c592:	edd4 4a27 	vldr	s9, [r4, #156]	@ 0x9c
 800c596:	ed94 4a26 	vldr	s8, [r4, #152]	@ 0x98
 800c59a:	edd4 3a25 	vldr	s7, [r4, #148]	@ 0x94
 800c59e:	ed94 3a24 	vldr	s6, [r4, #144]	@ 0x90
 800c5a2:	edd4 2a2b 	vldr	s5, [r4, #172]	@ 0xac
 800c5a6:	ed94 2a2a 	vldr	s4, [r4, #168]	@ 0xa8
 800c5aa:	edd4 1a29 	vldr	s3, [r4, #164]	@ 0xa4
 800c5ae:	ed94 1a28 	vldr	s2, [r4, #160]	@ 0xa0
 800c5b2:	eef0 0a68 	vmov.f32	s1, s17
 800c5b6:	eeb0 0a48 	vmov.f32	s0, s16
 800c5ba:	f7ff fdaf 	bl	800c11c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff>
 800c5be:	2001      	movs	r0, #1
 800c5c0:	ecbd 8b02 	vpop	{d8}
 800c5c4:	bd10      	pop	{r4, pc}
 800c5c6:	2000      	movs	r0, #0
 800c5c8:	e7fa      	b.n	800c5c0 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas11strokeCloseEff+0x46>

0800c5ca <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas16drawFinalLineCapEv>:
 800c5ca:	edd0 1a25 	vldr	s3, [r0, #148]	@ 0x94
 800c5ce:	ed90 1a24 	vldr	s2, [r0, #144]	@ 0x90
 800c5d2:	edd0 0a2b 	vldr	s1, [r0, #172]	@ 0xac
 800c5d6:	ed90 0a2a 	vldr	s0, [r0, #168]	@ 0xa8
 800c5da:	f7ff be2b 	b.w	800c234 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff>
	...

0800c5e0 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE>:
 800c5e0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c5e4:	b089      	sub	sp, #36	@ 0x24
 800c5e6:	461c      	mov	r4, r3
 800c5e8:	f10d 0820 	add.w	r8, sp, #32
 800c5ec:	f89d 3050 	ldrb.w	r3, [sp, #80]	@ 0x50
 800c5f0:	9304      	str	r3, [sp, #16]
 800c5f2:	9e15      	ldr	r6, [sp, #84]	@ 0x54
 800c5f4:	9105      	str	r1, [sp, #20]
 800c5f6:	2300      	movs	r3, #0
 800c5f8:	e9dd 9712 	ldrd	r9, r7, [sp, #72]	@ 0x48
 800c5fc:	9306      	str	r3, [sp, #24]
 800c5fe:	f848 3d04 	str.w	r3, [r8, #-4]!
 800c602:	9b04      	ldr	r3, [sp, #16]
 800c604:	f886 307a 	strb.w	r3, [r6, #122]	@ 0x7a
 800c608:	4682      	mov	sl, r0
 800c60a:	4615      	mov	r5, r2
 800c60c:	9b05      	ldr	r3, [sp, #20]
 800c60e:	429d      	cmp	r5, r3
 800c610:	d96d      	bls.n	800c6ee <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x10e>
 800c612:	3d01      	subs	r5, #1
 800c614:	f819 3005 	ldrb.w	r3, [r9, r5]
 800c618:	2b06      	cmp	r3, #6
 800c61a:	d8f7      	bhi.n	800c60c <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x2c>
 800c61c:	a201      	add	r2, pc, #4	@ (adr r2, 800c624 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x44>)
 800c61e:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800c622:	bf00      	nop
 800c624:	0800c643 	.word	0x0800c643
 800c628:	0800c60d 	.word	0x0800c60d
 800c62c:	0800c641 	.word	0x0800c641
 800c630:	0800c665 	.word	0x0800c665
 800c634:	0800c665 	.word	0x0800c665
 800c638:	0800c669 	.word	0x0800c669
 800c63c:	0800c6a9 	.word	0x0800c6a9
 800c640:	3c02      	subs	r4, #2
 800c642:	4650      	mov	r0, sl
 800c644:	e9cd 9701 	strd	r9, r7, [sp, #4]
 800c648:	9400      	str	r4, [sp, #0]
 800c64a:	462b      	mov	r3, r5
 800c64c:	4642      	mov	r2, r8
 800c64e:	a906      	add	r1, sp, #24
 800c650:	f7ff fcae 	bl	800bfb0 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf>
 800c654:	eddd 0a07 	vldr	s1, [sp, #28]
 800c658:	ed9d 0a06 	vldr	s0, [sp, #24]
 800c65c:	4630      	mov	r0, r6
 800c65e:	f7ff fed1 	bl	800c404 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff>
 800c662:	e7d3      	b.n	800c60c <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x2c>
 800c664:	3c01      	subs	r4, #1
 800c666:	e7ec      	b.n	800c642 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x62>
 800c668:	f1a4 0b04 	sub.w	fp, r4, #4
 800c66c:	3c02      	subs	r4, #2
 800c66e:	eb07 0484 	add.w	r4, r7, r4, lsl #2
 800c672:	4650      	mov	r0, sl
 800c674:	e9cd 9701 	strd	r9, r7, [sp, #4]
 800c678:	f8cd b000 	str.w	fp, [sp]
 800c67c:	462b      	mov	r3, r5
 800c67e:	4642      	mov	r2, r8
 800c680:	a906      	add	r1, sp, #24
 800c682:	f7ff fc95 	bl	800bfb0 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf>
 800c686:	eddd 2a07 	vldr	s5, [sp, #28]
 800c68a:	ed9d 2a06 	vldr	s4, [sp, #24]
 800c68e:	ed54 1a01 	vldr	s3, [r4, #-4]
 800c692:	ed14 1a02 	vldr	s2, [r4, #-8]
 800c696:	edd4 0a01 	vldr	s1, [r4, #4]
 800c69a:	ed94 0a00 	vldr	s0, [r4]
 800c69e:	4630      	mov	r0, r6
 800c6a0:	f7ff fc1a 	bl	800bed8 <_ZN8touchgfx6Canvas17quadraticBezierToEffffff>
 800c6a4:	465c      	mov	r4, fp
 800c6a6:	e7b1      	b.n	800c60c <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x2c>
 800c6a8:	f1a4 0b06 	sub.w	fp, r4, #6
 800c6ac:	3c02      	subs	r4, #2
 800c6ae:	eb07 0484 	add.w	r4, r7, r4, lsl #2
 800c6b2:	4650      	mov	r0, sl
 800c6b4:	e9cd 9701 	strd	r9, r7, [sp, #4]
 800c6b8:	f8cd b000 	str.w	fp, [sp]
 800c6bc:	462b      	mov	r3, r5
 800c6be:	4642      	mov	r2, r8
 800c6c0:	a906      	add	r1, sp, #24
 800c6c2:	f7ff fc75 	bl	800bfb0 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf>
 800c6c6:	eddd 3a07 	vldr	s7, [sp, #28]
 800c6ca:	ed9d 3a06 	vldr	s6, [sp, #24]
 800c6ce:	ed54 2a03 	vldr	s5, [r4, #-12]
 800c6d2:	ed14 2a04 	vldr	s4, [r4, #-16]
 800c6d6:	ed54 1a01 	vldr	s3, [r4, #-4]
 800c6da:	ed14 1a02 	vldr	s2, [r4, #-8]
 800c6de:	edd4 0a01 	vldr	s1, [r4, #4]
 800c6e2:	ed94 0a00 	vldr	s0, [r4]
 800c6e6:	4630      	mov	r0, r6
 800c6e8:	f7ff fc15 	bl	800bf16 <_ZN8touchgfx6Canvas13cubicBezierToEffffffff>
 800c6ec:	e7da      	b.n	800c6a4 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0xc4>
 800c6ee:	9b04      	ldr	r3, [sp, #16]
 800c6f0:	b113      	cbz	r3, 800c6f8 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x118>
 800c6f2:	4630      	mov	r0, r6
 800c6f4:	f7ff ff69 	bl	800c5ca <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas16drawFinalLineCapEv>
 800c6f8:	b009      	add	sp, #36	@ 0x24
 800c6fa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c6fe:	bf00      	nop

0800c700 <_ZN8touchgfx6Canvas6lineToIfEEvT_S2_>:
 800c700:	eef0 7a60 	vmov.f32	s15, s1
 800c704:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 800c708:	6803      	ldr	r3, [r0, #0]
 800c70a:	ee17 2a90 	vmov	r2, s15
 800c70e:	eef0 7a40 	vmov.f32	s15, s0
 800c712:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 800c716:	689b      	ldr	r3, [r3, #8]
 800c718:	ee17 1a90 	vmov	r1, s15
 800c71c:	4718      	bx	r3
	...

0800c720 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvasD1Ev>:
 800c720:	b510      	push	{r4, lr}
 800c722:	4b04      	ldr	r3, [pc, #16]	@ (800c734 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvasD1Ev+0x14>)
 800c724:	4604      	mov	r4, r0
 800c726:	f840 3b14 	str.w	r3, [r0], #20
 800c72a:	f001 f972 	bl	800da12 <_ZN8touchgfx7OutlineD1Ev>
 800c72e:	4620      	mov	r0, r4
 800c730:	bd10      	pop	{r4, pc}
 800c732:	bf00      	nop
 800c734:	08025558 	.word	0x08025558

0800c738 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE>:
 800c738:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c73c:	ed2d 8b04 	vpush	{d8-d9}
 800c740:	edd0 7a0c 	vldr	s15, [r0, #48]	@ 0x30
 800c744:	b0b5      	sub	sp, #212	@ 0xd4
 800c746:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800c74a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c74e:	4605      	mov	r5, r0
 800c750:	468b      	mov	fp, r1
 800c752:	9206      	str	r2, [sp, #24]
 800c754:	461e      	mov	r6, r3
 800c756:	f04f 0400 	mov.w	r4, #0
 800c75a:	f240 814e 	bls.w	800c9fa <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x2c2>
 800c75e:	23ff      	movs	r3, #255	@ 0xff
 800c760:	9300      	str	r3, [sp, #0]
 800c762:	1d02      	adds	r2, r0, #4
 800c764:	6981      	ldr	r1, [r0, #24]
 800c766:	9b43      	ldr	r3, [sp, #268]	@ 0x10c
 800c768:	ed9f 9aa5 	vldr	s18, [pc, #660]	@ 800ca00 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x2c8>
 800c76c:	a808      	add	r0, sp, #32
 800c76e:	f014 fe69 	bl	8021444 <_ZN8touchgfx6CanvasC1EPKNS_15AbstractPainterERKNS_4RectES6_h>
 800c772:	edd5 7a0c 	vldr	s15, [r5, #48]	@ 0x30
 800c776:	4ba3      	ldr	r3, [pc, #652]	@ (800ca04 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x2cc>)
 800c778:	edd5 6a08 	vldr	s13, [r5, #32]
 800c77c:	9308      	str	r3, [sp, #32]
 800c77e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800c782:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c786:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 800c78a:	bf48      	it	mi
 800c78c:	eef1 7a67 	vnegmi.f32	s15, s15
 800c790:	ee67 7a87 	vmul.f32	s15, s15, s14
 800c794:	f105 0334 	add.w	r3, r5, #52	@ 0x34
 800c798:	2201      	movs	r2, #1
 800c79a:	9325      	str	r3, [sp, #148]	@ 0x94
 800c79c:	2300      	movs	r3, #0
 800c79e:	ee26 7aa7 	vmul.f32	s14, s13, s15
 800c7a2:	f88d 3098 	strb.w	r3, [sp, #152]	@ 0x98
 800c7a6:	f88d 2099 	strb.w	r2, [sp, #153]	@ 0x99
 800c7aa:	f88d 309a 	strb.w	r3, [sp, #154]	@ 0x9a
 800c7ae:	f88d 3064 	strb.w	r3, [sp, #100]	@ 0x64
 800c7b2:	7f6a      	ldrb	r2, [r5, #29]
 800c7b4:	7fab      	ldrb	r3, [r5, #30]
 800c7b6:	edcd 7a27 	vstr	s15, [sp, #156]	@ 0x9c
 800c7ba:	435a      	muls	r2, r3
 800c7bc:	ee27 7a26 	vmul.f32	s14, s14, s13
 800c7c0:	1c53      	adds	r3, r2, #1
 800c7c2:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 800c7c6:	ee67 7a27 	vmul.f32	s15, s14, s15
 800c7ca:	f04f 0800 	mov.w	r8, #0
 800c7ce:	f895 0024 	ldrb.w	r0, [r5, #36]	@ 0x24
 800c7d2:	f895 1025 	ldrb.w	r1, [r5, #37]	@ 0x25
 800c7d6:	942a      	str	r4, [sp, #168]	@ 0xa8
 800c7d8:	f3c3 2307 	ubfx	r3, r3, #8, #8
 800c7dc:	942b      	str	r4, [sp, #172]	@ 0xac
 800c7de:	942c      	str	r4, [sp, #176]	@ 0xb0
 800c7e0:	942d      	str	r4, [sp, #180]	@ 0xb4
 800c7e2:	942e      	str	r4, [sp, #184]	@ 0xb8
 800c7e4:	942f      	str	r4, [sp, #188]	@ 0xbc
 800c7e6:	9430      	str	r4, [sp, #192]	@ 0xc0
 800c7e8:	9431      	str	r4, [sp, #196]	@ 0xc4
 800c7ea:	9432      	str	r4, [sp, #200]	@ 0xc8
 800c7ec:	9433      	str	r4, [sp, #204]	@ 0xcc
 800c7ee:	edcd 7a28 	vstr	s15, [sp, #160]	@ 0xa0
 800c7f2:	f88d 00a4 	strb.w	r0, [sp, #164]	@ 0xa4
 800c7f6:	f88d 10a5 	strb.w	r1, [sp, #165]	@ 0xa5
 800c7fa:	f88d 30a6 	strb.w	r3, [sp, #166]	@ 0xa6
 800c7fe:	eef0 9a49 	vmov.f32	s19, s18
 800c802:	eeb0 8a49 	vmov.f32	s16, s18
 800c806:	eef0 8a49 	vmov.f32	s17, s18
 800c80a:	4644      	mov	r4, r8
 800c80c:	46c1      	mov	r9, r8
 800c80e:	af08      	add	r7, sp, #32
 800c810:	f04f 0a01 	mov.w	sl, #1
 800c814:	9b06      	ldr	r3, [sp, #24]
 800c816:	454b      	cmp	r3, r9
 800c818:	f000 80cc 	beq.w	800c9b4 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x27c>
 800c81c:	f109 0301 	add.w	r3, r9, #1
 800c820:	9305      	str	r3, [sp, #20]
 800c822:	f81b 3009 	ldrb.w	r3, [fp, r9]
 800c826:	2b06      	cmp	r3, #6
 800c828:	d839      	bhi.n	800c89e <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x166>
 800c82a:	e8df f003 	tbb	[pc, r3]
 800c82e:	3b04      	.short	0x3b04
 800c830:	817c6f60 	.word	0x817c6f60
 800c834:	a0          	.byte	0xa0
 800c835:	00          	.byte	0x00
 800c836:	45c1      	cmp	r9, r8
 800c838:	d92b      	bls.n	800c892 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x15a>
 800c83a:	eef0 0a49 	vmov.f32	s1, s18
 800c83e:	eeb0 0a69 	vmov.f32	s0, s19
 800c842:	4638      	mov	r0, r7
 800c844:	f7ff fdde 	bl	800c404 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff>
 800c848:	4638      	mov	r0, r7
 800c84a:	f7ff fe67 	bl	800c51c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawDoubleLineCapEv>
 800c84e:	4681      	mov	r9, r0
 800c850:	b9f8      	cbnz	r0, 800c892 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x15a>
 800c852:	eef0 0a49 	vmov.f32	s1, s18
 800c856:	eeb0 0a69 	vmov.f32	s0, s19
 800c85a:	4638      	mov	r0, r7
 800c85c:	f7ff fe8d 	bl	800c57a <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas11strokeCloseEff>
 800c860:	4628      	mov	r0, r5
 800c862:	e9cd 9702 	strd	r9, r7, [sp, #8]
 800c866:	e9cd b600 	strd	fp, r6, [sp]
 800c86a:	4623      	mov	r3, r4
 800c86c:	9a05      	ldr	r2, [sp, #20]
 800c86e:	edcd 9a2a 	vstr	s19, [sp, #168]	@ 0xa8
 800c872:	4641      	mov	r1, r8
 800c874:	ed8d 9a2b 	vstr	s18, [sp, #172]	@ 0xac
 800c878:	f88d a098 	strb.w	sl, [sp, #152]	@ 0x98
 800c87c:	f88d a099 	strb.w	sl, [sp, #153]	@ 0x99
 800c880:	f7ff feae 	bl	800c5e0 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE>
 800c884:	eef0 0a49 	vmov.f32	s1, s18
 800c888:	eeb0 0a69 	vmov.f32	s0, s19
 800c88c:	4638      	mov	r0, r7
 800c88e:	f7ff fe74 	bl	800c57a <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas11strokeCloseEff>
 800c892:	f8dd 8014 	ldr.w	r8, [sp, #20]
 800c896:	eeb0 8a49 	vmov.f32	s16, s18
 800c89a:	eef0 8a69 	vmov.f32	s17, s19
 800c89e:	f8dd 9014 	ldr.w	r9, [sp, #20]
 800c8a2:	e7b7      	b.n	800c814 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0xdc>
 800c8a4:	45c1      	cmp	r9, r8
 800c8a6:	d90d      	bls.n	800c8c4 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x18c>
 800c8a8:	4638      	mov	r0, r7
 800c8aa:	f7ff fe37 	bl	800c51c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawDoubleLineCapEv>
 800c8ae:	b948      	cbnz	r0, 800c8c4 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x18c>
 800c8b0:	e9cd a702 	strd	sl, r7, [sp, #8]
 800c8b4:	e9cd b600 	strd	fp, r6, [sp]
 800c8b8:	4623      	mov	r3, r4
 800c8ba:	464a      	mov	r2, r9
 800c8bc:	4641      	mov	r1, r8
 800c8be:	4628      	mov	r0, r5
 800c8c0:	f7ff fe8e 	bl	800c5e0 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE>
 800c8c4:	eb06 0384 	add.w	r3, r6, r4, lsl #2
 800c8c8:	edd3 8a00 	vldr	s17, [r3]
 800c8cc:	ed93 8a01 	vldr	s16, [r3, #4]
 800c8d0:	edcd 8a2a 	vstr	s17, [sp, #168]	@ 0xa8
 800c8d4:	ed8d 8a2b 	vstr	s16, [sp, #172]	@ 0xac
 800c8d8:	f88d a098 	strb.w	sl, [sp, #152]	@ 0x98
 800c8dc:	f88d a099 	strb.w	sl, [sp, #153]	@ 0x99
 800c8e0:	3402      	adds	r4, #2
 800c8e2:	46c8      	mov	r8, r9
 800c8e4:	eeb0 9a48 	vmov.f32	s18, s16
 800c8e8:	eef0 9a68 	vmov.f32	s19, s17
 800c8ec:	e7d7      	b.n	800c89e <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x166>
 800c8ee:	eb06 0384 	add.w	r3, r6, r4, lsl #2
 800c8f2:	edd3 8a00 	vldr	s17, [r3]
 800c8f6:	ed93 8a01 	vldr	s16, [r3, #4]
 800c8fa:	eeb0 0a68 	vmov.f32	s0, s17
 800c8fe:	eef0 0a48 	vmov.f32	s1, s16
 800c902:	4638      	mov	r0, r7
 800c904:	f7ff fd7e 	bl	800c404 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff>
 800c908:	3402      	adds	r4, #2
 800c90a:	e7c8      	b.n	800c89e <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x166>
 800c90c:	eb06 0384 	add.w	r3, r6, r4, lsl #2
 800c910:	edd3 8a00 	vldr	s17, [r3]
 800c914:	eef0 0a48 	vmov.f32	s1, s16
 800c918:	eeb0 0a68 	vmov.f32	s0, s17
 800c91c:	4638      	mov	r0, r7
 800c91e:	f7ff fd71 	bl	800c404 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff>
 800c922:	3401      	adds	r4, #1
 800c924:	e7bb      	b.n	800c89e <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x166>
 800c926:	eb06 0384 	add.w	r3, r6, r4, lsl #2
 800c92a:	ed93 8a00 	vldr	s16, [r3]
 800c92e:	e7f1      	b.n	800c914 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x1dc>
 800c930:	00a3      	lsls	r3, r4, #2
 800c932:	f103 0208 	add.w	r2, r3, #8
 800c936:	f103 090c 	add.w	r9, r3, #12
 800c93a:	4432      	add	r2, r6
 800c93c:	4433      	add	r3, r6
 800c93e:	44b1      	add	r9, r6
 800c940:	ed92 2a00 	vldr	s4, [r2]
 800c944:	edd9 2a00 	vldr	s5, [r9]
 800c948:	edd3 1a01 	vldr	s3, [r3, #4]
 800c94c:	ed93 1a00 	vldr	s2, [r3]
 800c950:	9207      	str	r2, [sp, #28]
 800c952:	eef0 0a48 	vmov.f32	s1, s16
 800c956:	eeb0 0a68 	vmov.f32	s0, s17
 800c95a:	4638      	mov	r0, r7
 800c95c:	f7ff fabc 	bl	800bed8 <_ZN8touchgfx6Canvas17quadraticBezierToEffffff>
 800c960:	9a07      	ldr	r2, [sp, #28]
 800c962:	ed99 8a00 	vldr	s16, [r9]
 800c966:	edd2 8a00 	vldr	s17, [r2]
 800c96a:	3404      	adds	r4, #4
 800c96c:	e797      	b.n	800c89e <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x166>
 800c96e:	00a3      	lsls	r3, r4, #2
 800c970:	f103 0210 	add.w	r2, r3, #16
 800c974:	f103 0914 	add.w	r9, r3, #20
 800c978:	4432      	add	r2, r6
 800c97a:	4433      	add	r3, r6
 800c97c:	44b1      	add	r9, r6
 800c97e:	ed92 3a00 	vldr	s6, [r2]
 800c982:	edd9 3a00 	vldr	s7, [r9]
 800c986:	edd3 2a03 	vldr	s5, [r3, #12]
 800c98a:	ed93 2a02 	vldr	s4, [r3, #8]
 800c98e:	edd3 1a01 	vldr	s3, [r3, #4]
 800c992:	ed93 1a00 	vldr	s2, [r3]
 800c996:	9207      	str	r2, [sp, #28]
 800c998:	eef0 0a48 	vmov.f32	s1, s16
 800c99c:	eeb0 0a68 	vmov.f32	s0, s17
 800c9a0:	4638      	mov	r0, r7
 800c9a2:	f7ff fab8 	bl	800bf16 <_ZN8touchgfx6Canvas13cubicBezierToEffffffff>
 800c9a6:	9a07      	ldr	r2, [sp, #28]
 800c9a8:	ed99 8a00 	vldr	s16, [r9]
 800c9ac:	edd2 8a00 	vldr	s17, [r2]
 800c9b0:	3406      	adds	r4, #6
 800c9b2:	e774      	b.n	800c89e <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x166>
 800c9b4:	9b06      	ldr	r3, [sp, #24]
 800c9b6:	4543      	cmp	r3, r8
 800c9b8:	af08      	add	r7, sp, #32
 800c9ba:	d90f      	bls.n	800c9dc <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x2a4>
 800c9bc:	4638      	mov	r0, r7
 800c9be:	f7ff fdad 	bl	800c51c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawDoubleLineCapEv>
 800c9c2:	b958      	cbnz	r0, 800c9dc <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x2a4>
 800c9c4:	2301      	movs	r3, #1
 800c9c6:	e9cd 6301 	strd	r6, r3, [sp, #4]
 800c9ca:	9703      	str	r7, [sp, #12]
 800c9cc:	f8cd b000 	str.w	fp, [sp]
 800c9d0:	4623      	mov	r3, r4
 800c9d2:	9a06      	ldr	r2, [sp, #24]
 800c9d4:	4641      	mov	r1, r8
 800c9d6:	4628      	mov	r0, r5
 800c9d8:	f7ff fe02 	bl	800c5e0 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE>
 800c9dc:	f89d 10a6 	ldrb.w	r1, [sp, #166]	@ 0xa6
 800c9e0:	4638      	mov	r0, r7
 800c9e2:	f014 fdc3 	bl	802156c <_ZN8touchgfx6Canvas6renderEh>
 800c9e6:	4604      	mov	r4, r0
 800c9e8:	4638      	mov	r0, r7
 800c9ea:	f7ff fe99 	bl	800c720 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvasD1Ev>
 800c9ee:	4620      	mov	r0, r4
 800c9f0:	b035      	add	sp, #212	@ 0xd4
 800c9f2:	ecbd 8b04 	vpop	{d8-d9}
 800c9f6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c9fa:	2401      	movs	r4, #1
 800c9fc:	e7f7      	b.n	800c9ee <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x2b6>
 800c9fe:	bf00      	nop
 800ca00:	00000000 	.word	0x00000000
 800ca04:	08024e3c 	.word	0x08024e3c

0800ca08 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvasD0Ev>:
 800ca08:	b510      	push	{r4, lr}
 800ca0a:	4604      	mov	r4, r0
 800ca0c:	f7ff fe88 	bl	800c720 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvasD1Ev>
 800ca10:	4620      	mov	r0, r4
 800ca12:	21b0      	movs	r1, #176	@ 0xb0
 800ca14:	f015 f979 	bl	8021d0a <_ZdlPvj>
 800ca18:	4620      	mov	r0, r4
 800ca1a:	bd10      	pop	{r4, pc}

0800ca1c <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE>:
 800ca1c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800ca20:	ed2d 8b06 	vpush	{d8-d10}
 800ca24:	b0aa      	sub	sp, #168	@ 0xa8
 800ca26:	4698      	mov	r8, r3
 800ca28:	23ff      	movs	r3, #255	@ 0xff
 800ca2a:	4607      	mov	r7, r0
 800ca2c:	9300      	str	r3, [sp, #0]
 800ca2e:	4689      	mov	r9, r1
 800ca30:	4692      	mov	sl, r2
 800ca32:	6981      	ldr	r1, [r0, #24]
 800ca34:	9b39      	ldr	r3, [sp, #228]	@ 0xe4
 800ca36:	ed9f 8a82 	vldr	s16, [pc, #520]	@ 800cc40 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x224>
 800ca3a:	1d02      	adds	r2, r0, #4
 800ca3c:	a80d      	add	r0, sp, #52	@ 0x34
 800ca3e:	f014 fd01 	bl	8021444 <_ZN8touchgfx6CanvasC1EPKNS_15AbstractPainterERKNS_4RectES6_h>
 800ca42:	7f3b      	ldrb	r3, [r7, #28]
 800ca44:	eddf 0a7e 	vldr	s1, [pc, #504]	@ 800cc40 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x224>
 800ca48:	1e5a      	subs	r2, r3, #1
 800ca4a:	4253      	negs	r3, r2
 800ca4c:	f107 0534 	add.w	r5, r7, #52	@ 0x34
 800ca50:	4153      	adcs	r3, r2
 800ca52:	eeb0 0a60 	vmov.f32	s0, s1
 800ca56:	4628      	mov	r0, r5
 800ca58:	f88d 3078 	strb.w	r3, [sp, #120]	@ 0x78
 800ca5c:	f004 fcaf 	bl	80113be <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 800ca60:	44ca      	add	sl, r9
 800ca62:	eeb0 9a40 	vmov.f32	s18, s0
 800ca66:	eef0 9a60 	vmov.f32	s19, s1
 800ca6a:	eef0 8a48 	vmov.f32	s17, s16
 800ca6e:	2400      	movs	r4, #0
 800ca70:	45ca      	cmp	sl, r9
 800ca72:	f000 80cd 	beq.w	800cc10 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x1f4>
 800ca76:	f819 3b01 	ldrb.w	r3, [r9], #1
 800ca7a:	2b06      	cmp	r3, #6
 800ca7c:	d8f8      	bhi.n	800ca70 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x54>
 800ca7e:	e8df f003 	tbb	[pc, r3]
 800ca82:	0804      	.short	0x0804
 800ca84:	58533f2a 	.word	0x58533f2a
 800ca88:	8a          	.byte	0x8a
 800ca89:	00          	.byte	0x00
 800ca8a:	a80d      	add	r0, sp, #52	@ 0x34
 800ca8c:	f014 fd4c 	bl	8021528 <_ZN8touchgfx6Canvas5closeEv>
 800ca90:	e7ee      	b.n	800ca70 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x54>
 800ca92:	eb08 0384 	add.w	r3, r8, r4, lsl #2
 800ca96:	edd3 8a00 	vldr	s17, [r3]
 800ca9a:	ed93 8a01 	vldr	s16, [r3, #4]
 800ca9e:	eeb0 0a68 	vmov.f32	s0, s17
 800caa2:	eef0 0a48 	vmov.f32	s1, s16
 800caa6:	4628      	mov	r0, r5
 800caa8:	f004 fc89 	bl	80113be <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 800caac:	eef0 7a60 	vmov.f32	s15, s1
 800cab0:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 800cab4:	a80d      	add	r0, sp, #52	@ 0x34
 800cab6:	ee17 2a90 	vmov	r2, s15
 800caba:	eef0 7a40 	vmov.f32	s15, s0
 800cabe:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 800cac2:	eeb0 9a40 	vmov.f32	s18, s0
 800cac6:	ee17 1a90 	vmov	r1, s15
 800caca:	eef0 9a60 	vmov.f32	s19, s1
 800cace:	f014 fe05 	bl	80216dc <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
 800cad2:	3402      	adds	r4, #2
 800cad4:	e7cc      	b.n	800ca70 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x54>
 800cad6:	eb08 0384 	add.w	r3, r8, r4, lsl #2
 800cada:	edd3 8a00 	vldr	s17, [r3]
 800cade:	ed93 8a01 	vldr	s16, [r3, #4]
 800cae2:	eeb0 0a68 	vmov.f32	s0, s17
 800cae6:	eef0 0a48 	vmov.f32	s1, s16
 800caea:	4628      	mov	r0, r5
 800caec:	f004 fc67 	bl	80113be <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 800caf0:	a80d      	add	r0, sp, #52	@ 0x34
 800caf2:	eeb0 9a40 	vmov.f32	s18, s0
 800caf6:	eef0 9a60 	vmov.f32	s19, s1
 800cafa:	f7ff fe01 	bl	800c700 <_ZN8touchgfx6Canvas6lineToIfEEvT_S2_>
 800cafe:	e7e8      	b.n	800cad2 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0xb6>
 800cb00:	eb08 0384 	add.w	r3, r8, r4, lsl #2
 800cb04:	edd3 8a00 	vldr	s17, [r3]
 800cb08:	eef0 0a48 	vmov.f32	s1, s16
 800cb0c:	eeb0 0a68 	vmov.f32	s0, s17
 800cb10:	4628      	mov	r0, r5
 800cb12:	f004 fc54 	bl	80113be <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 800cb16:	a80d      	add	r0, sp, #52	@ 0x34
 800cb18:	eeb0 9a40 	vmov.f32	s18, s0
 800cb1c:	eef0 9a60 	vmov.f32	s19, s1
 800cb20:	3401      	adds	r4, #1
 800cb22:	f7ff fded 	bl	800c700 <_ZN8touchgfx6Canvas6lineToIfEEvT_S2_>
 800cb26:	e7a3      	b.n	800ca70 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x54>
 800cb28:	eb08 0384 	add.w	r3, r8, r4, lsl #2
 800cb2c:	ed93 8a00 	vldr	s16, [r3]
 800cb30:	e7ea      	b.n	800cb08 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0xec>
 800cb32:	1ca3      	adds	r3, r4, #2
 800cb34:	eb08 0383 	add.w	r3, r8, r3, lsl #2
 800cb38:	ed53 0a01 	vldr	s1, [r3, #-4]
 800cb3c:	ed13 0a02 	vldr	s0, [r3, #-8]
 800cb40:	edd3 8a00 	vldr	s17, [r3]
 800cb44:	ed93 8a01 	vldr	s16, [r3, #4]
 800cb48:	4628      	mov	r0, r5
 800cb4a:	f004 fc38 	bl	80113be <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 800cb4e:	4628      	mov	r0, r5
 800cb50:	ed8d 0a09 	vstr	s0, [sp, #36]	@ 0x24
 800cb54:	edcd 0a0a 	vstr	s1, [sp, #40]	@ 0x28
 800cb58:	eeb0 0a68 	vmov.f32	s0, s17
 800cb5c:	eef0 0a48 	vmov.f32	s1, s16
 800cb60:	f004 fc2d 	bl	80113be <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 800cb64:	eddd 1a0a 	vldr	s3, [sp, #40]	@ 0x28
 800cb68:	ed9d 1a09 	vldr	s2, [sp, #36]	@ 0x24
 800cb6c:	eef0 2a60 	vmov.f32	s5, s1
 800cb70:	eeb0 2a40 	vmov.f32	s4, s0
 800cb74:	eeb0 aa40 	vmov.f32	s20, s0
 800cb78:	eef0 aa60 	vmov.f32	s21, s1
 800cb7c:	eeb0 0a49 	vmov.f32	s0, s18
 800cb80:	eef0 0a69 	vmov.f32	s1, s19
 800cb84:	a80d      	add	r0, sp, #52	@ 0x34
 800cb86:	f7ff f9a7 	bl	800bed8 <_ZN8touchgfx6Canvas17quadraticBezierToEffffff>
 800cb8a:	3404      	adds	r4, #4
 800cb8c:	eef0 9a6a 	vmov.f32	s19, s21
 800cb90:	eeb0 9a4a 	vmov.f32	s18, s20
 800cb94:	e76c      	b.n	800ca70 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x54>
 800cb96:	1d26      	adds	r6, r4, #4
 800cb98:	eb08 0686 	add.w	r6, r8, r6, lsl #2
 800cb9c:	ed56 0a03 	vldr	s1, [r6, #-12]
 800cba0:	ed16 0a04 	vldr	s0, [r6, #-16]
 800cba4:	edd6 8a00 	vldr	s17, [r6]
 800cba8:	ed96 8a01 	vldr	s16, [r6, #4]
 800cbac:	4628      	mov	r0, r5
 800cbae:	f004 fc06 	bl	80113be <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 800cbb2:	4628      	mov	r0, r5
 800cbb4:	ed8d 0a07 	vstr	s0, [sp, #28]
 800cbb8:	edcd 0a08 	vstr	s1, [sp, #32]
 800cbbc:	ed16 0a02 	vldr	s0, [r6, #-8]
 800cbc0:	ed56 0a01 	vldr	s1, [r6, #-4]
 800cbc4:	f004 fbfb 	bl	80113be <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 800cbc8:	4628      	mov	r0, r5
 800cbca:	ed8d 0a09 	vstr	s0, [sp, #36]	@ 0x24
 800cbce:	edcd 0a0a 	vstr	s1, [sp, #40]	@ 0x28
 800cbd2:	eeb0 0a68 	vmov.f32	s0, s17
 800cbd6:	eef0 0a48 	vmov.f32	s1, s16
 800cbda:	f004 fbf0 	bl	80113be <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 800cbde:	eddd 2a0a 	vldr	s5, [sp, #40]	@ 0x28
 800cbe2:	ed9d 2a09 	vldr	s4, [sp, #36]	@ 0x24
 800cbe6:	eddd 1a08 	vldr	s3, [sp, #32]
 800cbea:	ed9d 1a07 	vldr	s2, [sp, #28]
 800cbee:	eef0 3a60 	vmov.f32	s7, s1
 800cbf2:	eeb0 3a40 	vmov.f32	s6, s0
 800cbf6:	eeb0 aa40 	vmov.f32	s20, s0
 800cbfa:	eef0 aa60 	vmov.f32	s21, s1
 800cbfe:	eeb0 0a49 	vmov.f32	s0, s18
 800cc02:	eef0 0a69 	vmov.f32	s1, s19
 800cc06:	a80d      	add	r0, sp, #52	@ 0x34
 800cc08:	f7ff f985 	bl	800bf16 <_ZN8touchgfx6Canvas13cubicBezierToEffffffff>
 800cc0c:	3406      	adds	r4, #6
 800cc0e:	e7bd      	b.n	800cb8c <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x170>
 800cc10:	7f7b      	ldrb	r3, [r7, #29]
 800cc12:	7fb9      	ldrb	r1, [r7, #30]
 800cc14:	4359      	muls	r1, r3
 800cc16:	1c4b      	adds	r3, r1, #1
 800cc18:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 800cc1c:	f3c1 2107 	ubfx	r1, r1, #8, #8
 800cc20:	a80d      	add	r0, sp, #52	@ 0x34
 800cc22:	f014 fca3 	bl	802156c <_ZN8touchgfx6Canvas6renderEh>
 800cc26:	4b07      	ldr	r3, [pc, #28]	@ (800cc44 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x228>)
 800cc28:	930d      	str	r3, [sp, #52]	@ 0x34
 800cc2a:	4604      	mov	r4, r0
 800cc2c:	a812      	add	r0, sp, #72	@ 0x48
 800cc2e:	f000 fef0 	bl	800da12 <_ZN8touchgfx7OutlineD1Ev>
 800cc32:	4620      	mov	r0, r4
 800cc34:	b02a      	add	sp, #168	@ 0xa8
 800cc36:	ecbd 8b06 	vpop	{d8-d10}
 800cc3a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800cc3e:	bf00      	nop
 800cc40:	00000000 	.word	0x00000000
 800cc44:	08025558 	.word	0x08025558

0800cc48 <_ZNK8touchgfx17CWRVectorRenderer12drawPathAreaEPKhmPKfmRKNS_4RectE>:
 800cc48:	b410      	push	{r4}
 800cc4a:	7f04      	ldrb	r4, [r0, #28]
 800cc4c:	b11c      	cbz	r4, 800cc56 <_ZNK8touchgfx17CWRVectorRenderer12drawPathAreaEPKhmPKfmRKNS_4RectE+0xe>
 800cc4e:	f85d 4b04 	ldr.w	r4, [sp], #4
 800cc52:	f7ff bee3 	b.w	800ca1c <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE>
 800cc56:	f85d 4b04 	ldr.w	r4, [sp], #4
 800cc5a:	f7ff bd6d 	b.w	800c738 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE>
	...

0800cc60 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_>:
 800cc60:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800cc64:	4691      	mov	r9, r2
 800cc66:	4602      	mov	r2, r0
 800cc68:	4605      	mov	r5, r0
 800cc6a:	f852 0f26 	ldr.w	r0, [r2, #38]!
 800cc6e:	b085      	sub	sp, #20
 800cc70:	4688      	mov	r8, r1
 800cc72:	6851      	ldr	r1, [r2, #4]
 800cc74:	f8dd b038 	ldr.w	fp, [sp, #56]	@ 0x38
 800cc78:	469a      	mov	sl, r3
 800cc7a:	ab02      	add	r3, sp, #8
 800cc7c:	c303      	stmia	r3!, {r0, r1}
 800cc7e:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 800cc82:	2b00      	cmp	r3, #0
 800cc84:	af02      	add	r7, sp, #8
 800cc86:	dd08      	ble.n	800cc9a <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x3a>
 800cc88:	f9bd 400e 	ldrsh.w	r4, [sp, #14]
 800cc8c:	2c00      	cmp	r4, #0
 800cc8e:	dd04      	ble.n	800cc9a <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x3a>
 800cc90:	4a2e      	ldr	r2, [pc, #184]	@ (800cd4c <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0xec>)
 800cc92:	7812      	ldrb	r2, [r2, #0]
 800cc94:	b122      	cbz	r2, 800cca0 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x40>
 800cc96:	2a01      	cmp	r2, #1
 800cc98:	d02d      	beq.n	800ccf6 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x96>
 800cc9a:	b005      	add	sp, #20
 800cc9c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800cca0:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 800cca4:	441c      	add	r4, r3
 800cca6:	b2a4      	uxth	r4, r4
 800cca8:	b226      	sxth	r6, r4
 800ccaa:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 800ccae:	42b3      	cmp	r3, r6
 800ccb0:	daf3      	bge.n	800cc9a <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x3a>
 800ccb2:	e9cd b700 	strd	fp, r7, [sp]
 800ccb6:	4653      	mov	r3, sl
 800ccb8:	464a      	mov	r2, r9
 800ccba:	4641      	mov	r1, r8
 800ccbc:	4628      	mov	r0, r5
 800ccbe:	f7ff ffc3 	bl	800cc48 <_ZNK8touchgfx17CWRVectorRenderer12drawPathAreaEPKhmPKfmRKNS_4RectE>
 800ccc2:	b940      	cbnz	r0, 800ccd6 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x76>
 800ccc4:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 800ccc8:	2b01      	cmp	r3, #1
 800ccca:	d004      	beq.n	800ccd6 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x76>
 800cccc:	3301      	adds	r3, #1
 800ccce:	105b      	asrs	r3, r3, #1
 800ccd0:	f8ad 300e 	strh.w	r3, [sp, #14]
 800ccd4:	e7ed      	b.n	800ccb2 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x52>
 800ccd6:	f8bd 200e 	ldrh.w	r2, [sp, #14]
 800ccda:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 800ccde:	4413      	add	r3, r2
 800cce0:	b29b      	uxth	r3, r3
 800cce2:	441a      	add	r2, r3
 800cce4:	b212      	sxth	r2, r2
 800cce6:	4296      	cmp	r6, r2
 800cce8:	f8ad 300a 	strh.w	r3, [sp, #10]
 800ccec:	dadd      	bge.n	800ccaa <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x4a>
 800ccee:	1ae3      	subs	r3, r4, r3
 800ccf0:	f8ad 300e 	strh.w	r3, [sp, #14]
 800ccf4:	e7d9      	b.n	800ccaa <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x4a>
 800ccf6:	f8bd 4008 	ldrh.w	r4, [sp, #8]
 800ccfa:	441c      	add	r4, r3
 800ccfc:	b2a4      	uxth	r4, r4
 800ccfe:	b226      	sxth	r6, r4
 800cd00:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
 800cd04:	42b3      	cmp	r3, r6
 800cd06:	dac8      	bge.n	800cc9a <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x3a>
 800cd08:	e9cd b700 	strd	fp, r7, [sp]
 800cd0c:	4653      	mov	r3, sl
 800cd0e:	464a      	mov	r2, r9
 800cd10:	4641      	mov	r1, r8
 800cd12:	4628      	mov	r0, r5
 800cd14:	f7ff ff98 	bl	800cc48 <_ZNK8touchgfx17CWRVectorRenderer12drawPathAreaEPKhmPKfmRKNS_4RectE>
 800cd18:	b940      	cbnz	r0, 800cd2c <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0xcc>
 800cd1a:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 800cd1e:	2b01      	cmp	r3, #1
 800cd20:	d004      	beq.n	800cd2c <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0xcc>
 800cd22:	3301      	adds	r3, #1
 800cd24:	105b      	asrs	r3, r3, #1
 800cd26:	f8ad 300c 	strh.w	r3, [sp, #12]
 800cd2a:	e7ed      	b.n	800cd08 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0xa8>
 800cd2c:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 800cd30:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 800cd34:	4413      	add	r3, r2
 800cd36:	b29b      	uxth	r3, r3
 800cd38:	441a      	add	r2, r3
 800cd3a:	b212      	sxth	r2, r2
 800cd3c:	4296      	cmp	r6, r2
 800cd3e:	f8ad 3008 	strh.w	r3, [sp, #8]
 800cd42:	dadd      	bge.n	800cd00 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0xa0>
 800cd44:	1ae3      	subs	r3, r4, r3
 800cd46:	f8ad 300c 	strh.w	r3, [sp, #12]
 800cd4a:	e7d9      	b.n	800cd00 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0xa0>
 800cd4c:	2001403a 	.word	0x2001403a

0800cd50 <_ZN8touchgfx6CircleD1Ev>:
 800cd50:	4770      	bx	lr

0800cd52 <_ZN8touchgfx6CircleD0Ev>:
 800cd52:	b510      	push	{r4, lr}
 800cd54:	2148      	movs	r1, #72	@ 0x48
 800cd56:	4604      	mov	r4, r0
 800cd58:	f014 ffd7 	bl	8021d0a <_ZdlPvj>
 800cd5c:	4620      	mov	r0, r4
 800cd5e:	bd10      	pop	{r4, pc}

0800cd60 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>:
 800cd60:	b507      	push	{r0, r1, r2, lr}
 800cd62:	f44f 4200 	mov.w	r2, #32768	@ 0x8000
 800cd66:	ab01      	add	r3, sp, #4
 800cd68:	6809      	ldr	r1, [r1, #0]
 800cd6a:	6800      	ldr	r0, [r0, #0]
 800cd6c:	f004 fc40 	bl	80115f0 <_ZN8touchgfx6muldivElllRl>
 800cd70:	b003      	add	sp, #12
 800cd72:	f85d fb04 	ldr.w	pc, [sp], #4
	...

0800cd78 <_ZN8touchgfx7CWRUtil4sineEi>:
 800cd78:	f44f 73b4 	mov.w	r3, #360	@ 0x168
 800cd7c:	fb90 f2f3 	sdiv	r2, r0, r3
 800cd80:	fb02 0013 	mls	r0, r2, r3, r0
 800cd84:	2800      	cmp	r0, #0
 800cd86:	bfb8      	it	lt
 800cd88:	18c0      	addlt	r0, r0, r3
 800cd8a:	285a      	cmp	r0, #90	@ 0x5a
 800cd8c:	4b09      	ldr	r3, [pc, #36]	@ (800cdb4 <_ZN8touchgfx7CWRUtil4sineEi+0x3c>)
 800cd8e:	dc02      	bgt.n	800cd96 <_ZN8touchgfx7CWRUtil4sineEi+0x1e>
 800cd90:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 800cd94:	4770      	bx	lr
 800cd96:	28b4      	cmp	r0, #180	@ 0xb4
 800cd98:	dc02      	bgt.n	800cda0 <_ZN8touchgfx7CWRUtil4sineEi+0x28>
 800cd9a:	f1c0 00b4 	rsb	r0, r0, #180	@ 0xb4
 800cd9e:	e7f7      	b.n	800cd90 <_ZN8touchgfx7CWRUtil4sineEi+0x18>
 800cda0:	f5b0 7f87 	cmp.w	r0, #270	@ 0x10e
 800cda4:	bfd4      	ite	le
 800cda6:	38b4      	suble	r0, #180	@ 0xb4
 800cda8:	f5c0 70b4 	rsbgt	r0, r0, #360	@ 0x168
 800cdac:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 800cdb0:	4240      	negs	r0, r0
 800cdb2:	4770      	bx	lr
 800cdb4:	08024e94 	.word	0x08024e94

0800cdb8 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>:
 800cdb8:	f44f 5334 	mov.w	r3, #11520	@ 0x2d00
 800cdbc:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800cdbe:	fb90 f2f3 	sdiv	r2, r0, r3
 800cdc2:	fb02 0013 	mls	r0, r2, r3, r0
 800cdc6:	2800      	cmp	r0, #0
 800cdc8:	bfb8      	it	lt
 800cdca:	18c0      	addlt	r0, r0, r3
 800cdcc:	1144      	asrs	r4, r0, #5
 800cdce:	f000 061f 	and.w	r6, r0, #31
 800cdd2:	4620      	mov	r0, r4
 800cdd4:	f7ff ffd0 	bl	800cd78 <_ZN8touchgfx7CWRUtil4sineEi>
 800cdd8:	4605      	mov	r5, r0
 800cdda:	b90e      	cbnz	r6, 800cde0 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E+0x28>
 800cddc:	b002      	add	sp, #8
 800cdde:	bd70      	pop	{r4, r5, r6, pc}
 800cde0:	1c60      	adds	r0, r4, #1
 800cde2:	f7ff ffc9 	bl	800cd78 <_ZN8touchgfx7CWRUtil4sineEi>
 800cde6:	ab01      	add	r3, sp, #4
 800cde8:	2220      	movs	r2, #32
 800cdea:	4631      	mov	r1, r6
 800cdec:	1b40      	subs	r0, r0, r5
 800cdee:	f004 fbff 	bl	80115f0 <_ZN8touchgfx6muldivElllRl>
 800cdf2:	4428      	add	r0, r5
 800cdf4:	e7f2      	b.n	800cddc <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E+0x24>

0800cdf6 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>:
 800cdf6:	b508      	push	{r3, lr}
 800cdf8:	f5c0 6034 	rsb	r0, r0, #2880	@ 0xb40
 800cdfc:	f7ff ffdc 	bl	800cdb8 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 800ce00:	bd08      	pop	{r3, pc}
	...

0800ce04 <_ZN8touchgfx6CircleC1Ev>:
 800ce04:	b510      	push	{r4, lr}
 800ce06:	4604      	mov	r4, r0
 800ce08:	f000 fd14 	bl	800d834 <_ZN8touchgfx12CanvasWidgetC1Ev>
 800ce0c:	4b08      	ldr	r3, [pc, #32]	@ (800ce30 <_ZN8touchgfx6CircleC1Ev+0x2c>)
 800ce0e:	6023      	str	r3, [r4, #0]
 800ce10:	f44f 5234 	mov.w	r2, #11520	@ 0x2d00
 800ce14:	2300      	movs	r3, #0
 800ce16:	e9c4 230f 	strd	r2, r3, [r4, #60]	@ 0x3c
 800ce1a:	f24b 4205 	movw	r2, #46085	@ 0xb405
 800ce1e:	e9c4 330b 	strd	r3, r3, [r4, #44]	@ 0x2c
 800ce22:	e9c4 330d 	strd	r3, r3, [r4, #52]	@ 0x34
 800ce26:	f8a4 2044 	strh.w	r2, [r4, #68]	@ 0x44
 800ce2a:	60a3      	str	r3, [r4, #8]
 800ce2c:	4620      	mov	r0, r4
 800ce2e:	bd10      	pop	{r4, pc}
 800ce30:	08024f54 	.word	0x08024f54

0800ce34 <_ZN8touchgfx6Circle15setCapPrecisionEi>:
 800ce34:	29b4      	cmp	r1, #180	@ 0xb4
 800ce36:	bfa8      	it	ge
 800ce38:	21b4      	movge	r1, #180	@ 0xb4
 800ce3a:	2901      	cmp	r1, #1
 800ce3c:	bfb8      	it	lt
 800ce3e:	2101      	movlt	r1, #1
 800ce40:	f880 1045 	strb.w	r1, [r0, #69]	@ 0x45
 800ce44:	4770      	bx	lr

0800ce46 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_>:
 800ce46:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ce4a:	428a      	cmp	r2, r1
 800ce4c:	4680      	mov	r8, r0
 800ce4e:	4610      	mov	r0, r2
 800ce50:	4699      	mov	r9, r3
 800ce52:	bfa6      	itte	ge
 800ce54:	460a      	movge	r2, r1
 800ce56:	4603      	movge	r3, r0
 800ce58:	460b      	movlt	r3, r1
 800ce5a:	1a99      	subs	r1, r3, r2
 800ce5c:	b085      	sub	sp, #20
 800ce5e:	f5b1 5f34 	cmp.w	r1, #11520	@ 0x2d00
 800ce62:	f8d8 4040 	ldr.w	r4, [r8, #64]	@ 0x40
 800ce66:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 800ce68:	bfa4      	itt	ge
 800ce6a:	f44f 5334 	movge.w	r3, #11520	@ 0x2d00
 800ce6e:	2200      	movge	r2, #0
 800ce70:	e9dd 760e 	ldrd	r7, r6, [sp, #56]	@ 0x38
 800ce74:	9300      	str	r3, [sp, #0]
 800ce76:	f108 0a34 	add.w	sl, r8, #52	@ 0x34
 800ce7a:	f102 0b01 	add.w	fp, r2, #1
 800ce7e:	2c00      	cmp	r4, #0
 800ce80:	f040 80af 	bne.w	800cfe2 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x19c>
 800ce84:	4610      	mov	r0, r2
 800ce86:	9201      	str	r2, [sp, #4]
 800ce88:	f7ff ff96 	bl	800cdb8 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 800ce8c:	a903      	add	r1, sp, #12
 800ce8e:	9003      	str	r0, [sp, #12]
 800ce90:	4650      	mov	r0, sl
 800ce92:	f7ff ff65 	bl	800cd60 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800ce96:	f8d8 102c 	ldr.w	r1, [r8, #44]	@ 0x2c
 800ce9a:	9a01      	ldr	r2, [sp, #4]
 800ce9c:	4408      	add	r0, r1
 800ce9e:	f8d9 1000 	ldr.w	r1, [r9]
 800cea2:	4281      	cmp	r1, r0
 800cea4:	bfc8      	it	gt
 800cea6:	f8c9 0000 	strgt.w	r0, [r9]
 800ceaa:	6839      	ldr	r1, [r7, #0]
 800ceac:	4288      	cmp	r0, r1
 800ceae:	bfc8      	it	gt
 800ceb0:	6038      	strgt	r0, [r7, #0]
 800ceb2:	4610      	mov	r0, r2
 800ceb4:	f7ff ff9f 	bl	800cdf6 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 800ceb8:	a903      	add	r1, sp, #12
 800ceba:	9003      	str	r0, [sp, #12]
 800cebc:	4650      	mov	r0, sl
 800cebe:	f7ff ff4f 	bl	800cd60 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800cec2:	f8d8 2030 	ldr.w	r2, [r8, #48]	@ 0x30
 800cec6:	1a10      	subs	r0, r2, r0
 800cec8:	6832      	ldr	r2, [r6, #0]
 800ceca:	4282      	cmp	r2, r0
 800cecc:	bfc8      	it	gt
 800cece:	6030      	strgt	r0, [r6, #0]
 800ced0:	682a      	ldr	r2, [r5, #0]
 800ced2:	f44f 6134 	mov.w	r1, #2880	@ 0xb40
 800ced6:	4290      	cmp	r0, r2
 800ced8:	fb9b f2f1 	sdiv	r2, fp, r1
 800cedc:	fb01 b212 	mls	r2, r1, r2, fp
 800cee0:	eba1 0202 	sub.w	r2, r1, r2
 800cee4:	bfc8      	it	gt
 800cee6:	6028      	strgt	r0, [r5, #0]
 800cee8:	fb92 f0f1 	sdiv	r0, r2, r1
 800ceec:	fb01 2210 	mls	r2, r1, r0, r2
 800cef0:	4493      	add	fp, r2
 800cef2:	9b00      	ldr	r3, [sp, #0]
 800cef4:	455b      	cmp	r3, fp
 800cef6:	db2a      	blt.n	800cf4e <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x108>
 800cef8:	4658      	mov	r0, fp
 800cefa:	f7ff ff5d 	bl	800cdb8 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 800cefe:	a903      	add	r1, sp, #12
 800cf00:	9003      	str	r0, [sp, #12]
 800cf02:	4650      	mov	r0, sl
 800cf04:	f7ff ff2c 	bl	800cd60 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800cf08:	f8d8 202c 	ldr.w	r2, [r8, #44]	@ 0x2c
 800cf0c:	4410      	add	r0, r2
 800cf0e:	f8d9 2000 	ldr.w	r2, [r9]
 800cf12:	4282      	cmp	r2, r0
 800cf14:	bfc8      	it	gt
 800cf16:	f8c9 0000 	strgt.w	r0, [r9]
 800cf1a:	683a      	ldr	r2, [r7, #0]
 800cf1c:	4290      	cmp	r0, r2
 800cf1e:	bfc8      	it	gt
 800cf20:	6038      	strgt	r0, [r7, #0]
 800cf22:	4658      	mov	r0, fp
 800cf24:	f7ff ff67 	bl	800cdf6 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 800cf28:	a903      	add	r1, sp, #12
 800cf2a:	9003      	str	r0, [sp, #12]
 800cf2c:	4650      	mov	r0, sl
 800cf2e:	f7ff ff17 	bl	800cd60 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800cf32:	f8d8 2030 	ldr.w	r2, [r8, #48]	@ 0x30
 800cf36:	1a10      	subs	r0, r2, r0
 800cf38:	6832      	ldr	r2, [r6, #0]
 800cf3a:	4282      	cmp	r2, r0
 800cf3c:	bfc8      	it	gt
 800cf3e:	6030      	strgt	r0, [r6, #0]
 800cf40:	682a      	ldr	r2, [r5, #0]
 800cf42:	4290      	cmp	r0, r2
 800cf44:	bfc8      	it	gt
 800cf46:	6028      	strgt	r0, [r5, #0]
 800cf48:	f50b 6b34 	add.w	fp, fp, #2880	@ 0xb40
 800cf4c:	e7d1      	b.n	800cef2 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0xac>
 800cf4e:	9b00      	ldr	r3, [sp, #0]
 800cf50:	f5ab 6b34 	sub.w	fp, fp, #2880	@ 0xb40
 800cf54:	455b      	cmp	r3, fp
 800cf56:	dd27      	ble.n	800cfa8 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x162>
 800cf58:	4618      	mov	r0, r3
 800cf5a:	f7ff ff2d 	bl	800cdb8 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 800cf5e:	a903      	add	r1, sp, #12
 800cf60:	9003      	str	r0, [sp, #12]
 800cf62:	4650      	mov	r0, sl
 800cf64:	f7ff fefc 	bl	800cd60 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800cf68:	f8d8 202c 	ldr.w	r2, [r8, #44]	@ 0x2c
 800cf6c:	4410      	add	r0, r2
 800cf6e:	f8d9 2000 	ldr.w	r2, [r9]
 800cf72:	4282      	cmp	r2, r0
 800cf74:	bfc8      	it	gt
 800cf76:	f8c9 0000 	strgt.w	r0, [r9]
 800cf7a:	683a      	ldr	r2, [r7, #0]
 800cf7c:	4290      	cmp	r0, r2
 800cf7e:	bfc8      	it	gt
 800cf80:	6038      	strgt	r0, [r7, #0]
 800cf82:	9800      	ldr	r0, [sp, #0]
 800cf84:	f7ff ff37 	bl	800cdf6 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 800cf88:	a903      	add	r1, sp, #12
 800cf8a:	9003      	str	r0, [sp, #12]
 800cf8c:	4650      	mov	r0, sl
 800cf8e:	f7ff fee7 	bl	800cd60 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800cf92:	f8d8 2030 	ldr.w	r2, [r8, #48]	@ 0x30
 800cf96:	1a10      	subs	r0, r2, r0
 800cf98:	6832      	ldr	r2, [r6, #0]
 800cf9a:	4282      	cmp	r2, r0
 800cf9c:	bfc8      	it	gt
 800cf9e:	6030      	strgt	r0, [r6, #0]
 800cfa0:	682a      	ldr	r2, [r5, #0]
 800cfa2:	4290      	cmp	r0, r2
 800cfa4:	bfc8      	it	gt
 800cfa6:	6028      	strgt	r0, [r5, #0]
 800cfa8:	f8d8 202c 	ldr.w	r2, [r8, #44]	@ 0x2c
 800cfac:	f8d9 1000 	ldr.w	r1, [r9]
 800cfb0:	4291      	cmp	r1, r2
 800cfb2:	bfc8      	it	gt
 800cfb4:	f8c9 2000 	strgt.w	r2, [r9]
 800cfb8:	683a      	ldr	r2, [r7, #0]
 800cfba:	f8d8 302c 	ldr.w	r3, [r8, #44]	@ 0x2c
 800cfbe:	429a      	cmp	r2, r3
 800cfc0:	bfb8      	it	lt
 800cfc2:	603b      	strlt	r3, [r7, #0]
 800cfc4:	6832      	ldr	r2, [r6, #0]
 800cfc6:	f8d8 3030 	ldr.w	r3, [r8, #48]	@ 0x30
 800cfca:	429a      	cmp	r2, r3
 800cfcc:	bfc8      	it	gt
 800cfce:	6033      	strgt	r3, [r6, #0]
 800cfd0:	682a      	ldr	r2, [r5, #0]
 800cfd2:	f8d8 3030 	ldr.w	r3, [r8, #48]	@ 0x30
 800cfd6:	429a      	cmp	r2, r3
 800cfd8:	da00      	bge.n	800cfdc <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x196>
 800cfda:	602b      	str	r3, [r5, #0]
 800cfdc:	b005      	add	sp, #20
 800cfde:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800cfe2:	2002      	movs	r0, #2
 800cfe4:	3401      	adds	r4, #1
 800cfe6:	fb94 f4f0 	sdiv	r4, r4, r0
 800cfea:	4610      	mov	r0, r2
 800cfec:	9201      	str	r2, [sp, #4]
 800cfee:	f7ff fee3 	bl	800cdb8 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 800cff2:	a903      	add	r1, sp, #12
 800cff4:	9003      	str	r0, [sp, #12]
 800cff6:	4650      	mov	r0, sl
 800cff8:	f7ff feb2 	bl	800cd60 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800cffc:	f8d8 102c 	ldr.w	r1, [r8, #44]	@ 0x2c
 800d000:	9a01      	ldr	r2, [sp, #4]
 800d002:	4408      	add	r0, r1
 800d004:	f8d9 1000 	ldr.w	r1, [r9]
 800d008:	1b03      	subs	r3, r0, r4
 800d00a:	4299      	cmp	r1, r3
 800d00c:	bfc8      	it	gt
 800d00e:	f8c9 3000 	strgt.w	r3, [r9]
 800d012:	6839      	ldr	r1, [r7, #0]
 800d014:	428b      	cmp	r3, r1
 800d016:	bfc8      	it	gt
 800d018:	603b      	strgt	r3, [r7, #0]
 800d01a:	f8d9 1000 	ldr.w	r1, [r9]
 800d01e:	4420      	add	r0, r4
 800d020:	4281      	cmp	r1, r0
 800d022:	bfc8      	it	gt
 800d024:	f8c9 0000 	strgt.w	r0, [r9]
 800d028:	6839      	ldr	r1, [r7, #0]
 800d02a:	4288      	cmp	r0, r1
 800d02c:	bfc8      	it	gt
 800d02e:	6038      	strgt	r0, [r7, #0]
 800d030:	4610      	mov	r0, r2
 800d032:	f7ff fee0 	bl	800cdf6 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 800d036:	a903      	add	r1, sp, #12
 800d038:	9003      	str	r0, [sp, #12]
 800d03a:	4650      	mov	r0, sl
 800d03c:	f7ff fe90 	bl	800cd60 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800d040:	f8d8 2030 	ldr.w	r2, [r8, #48]	@ 0x30
 800d044:	1a10      	subs	r0, r2, r0
 800d046:	6832      	ldr	r2, [r6, #0]
 800d048:	1b01      	subs	r1, r0, r4
 800d04a:	428a      	cmp	r2, r1
 800d04c:	bfc8      	it	gt
 800d04e:	6031      	strgt	r1, [r6, #0]
 800d050:	682a      	ldr	r2, [r5, #0]
 800d052:	4291      	cmp	r1, r2
 800d054:	bfc8      	it	gt
 800d056:	6029      	strgt	r1, [r5, #0]
 800d058:	6832      	ldr	r2, [r6, #0]
 800d05a:	4420      	add	r0, r4
 800d05c:	4282      	cmp	r2, r0
 800d05e:	bfc8      	it	gt
 800d060:	6030      	strgt	r0, [r6, #0]
 800d062:	682a      	ldr	r2, [r5, #0]
 800d064:	f44f 6134 	mov.w	r1, #2880	@ 0xb40
 800d068:	4290      	cmp	r0, r2
 800d06a:	fb9b f2f1 	sdiv	r2, fp, r1
 800d06e:	fb01 b212 	mls	r2, r1, r2, fp
 800d072:	eba1 0202 	sub.w	r2, r1, r2
 800d076:	bfc8      	it	gt
 800d078:	6028      	strgt	r0, [r5, #0]
 800d07a:	fb92 f0f1 	sdiv	r0, r2, r1
 800d07e:	fb01 2210 	mls	r2, r1, r0, r2
 800d082:	4493      	add	fp, r2
 800d084:	9b00      	ldr	r3, [sp, #0]
 800d086:	455b      	cmp	r3, fp
 800d088:	db40      	blt.n	800d10c <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x2c6>
 800d08a:	4658      	mov	r0, fp
 800d08c:	f7ff fe94 	bl	800cdb8 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 800d090:	a903      	add	r1, sp, #12
 800d092:	9003      	str	r0, [sp, #12]
 800d094:	4650      	mov	r0, sl
 800d096:	f7ff fe63 	bl	800cd60 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800d09a:	f8d8 202c 	ldr.w	r2, [r8, #44]	@ 0x2c
 800d09e:	4410      	add	r0, r2
 800d0a0:	f8d9 2000 	ldr.w	r2, [r9]
 800d0a4:	1b01      	subs	r1, r0, r4
 800d0a6:	428a      	cmp	r2, r1
 800d0a8:	bfc8      	it	gt
 800d0aa:	f8c9 1000 	strgt.w	r1, [r9]
 800d0ae:	683a      	ldr	r2, [r7, #0]
 800d0b0:	4291      	cmp	r1, r2
 800d0b2:	bfc8      	it	gt
 800d0b4:	6039      	strgt	r1, [r7, #0]
 800d0b6:	f8d9 2000 	ldr.w	r2, [r9]
 800d0ba:	4420      	add	r0, r4
 800d0bc:	4282      	cmp	r2, r0
 800d0be:	bfc8      	it	gt
 800d0c0:	f8c9 0000 	strgt.w	r0, [r9]
 800d0c4:	683a      	ldr	r2, [r7, #0]
 800d0c6:	4290      	cmp	r0, r2
 800d0c8:	bfc8      	it	gt
 800d0ca:	6038      	strgt	r0, [r7, #0]
 800d0cc:	4658      	mov	r0, fp
 800d0ce:	f7ff fe92 	bl	800cdf6 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 800d0d2:	a903      	add	r1, sp, #12
 800d0d4:	9003      	str	r0, [sp, #12]
 800d0d6:	4650      	mov	r0, sl
 800d0d8:	f7ff fe42 	bl	800cd60 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800d0dc:	f8d8 2030 	ldr.w	r2, [r8, #48]	@ 0x30
 800d0e0:	1a10      	subs	r0, r2, r0
 800d0e2:	6832      	ldr	r2, [r6, #0]
 800d0e4:	1b01      	subs	r1, r0, r4
 800d0e6:	428a      	cmp	r2, r1
 800d0e8:	bfc8      	it	gt
 800d0ea:	6031      	strgt	r1, [r6, #0]
 800d0ec:	682a      	ldr	r2, [r5, #0]
 800d0ee:	4291      	cmp	r1, r2
 800d0f0:	bfc8      	it	gt
 800d0f2:	6029      	strgt	r1, [r5, #0]
 800d0f4:	6832      	ldr	r2, [r6, #0]
 800d0f6:	4420      	add	r0, r4
 800d0f8:	4282      	cmp	r2, r0
 800d0fa:	bfc8      	it	gt
 800d0fc:	6030      	strgt	r0, [r6, #0]
 800d0fe:	682a      	ldr	r2, [r5, #0]
 800d100:	4290      	cmp	r0, r2
 800d102:	bfc8      	it	gt
 800d104:	6028      	strgt	r0, [r5, #0]
 800d106:	f50b 6b34 	add.w	fp, fp, #2880	@ 0xb40
 800d10a:	e7bb      	b.n	800d084 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x23e>
 800d10c:	9b00      	ldr	r3, [sp, #0]
 800d10e:	f5ab 6b34 	sub.w	fp, fp, #2880	@ 0xb40
 800d112:	455b      	cmp	r3, fp
 800d114:	f77f af62 	ble.w	800cfdc <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x196>
 800d118:	4618      	mov	r0, r3
 800d11a:	f7ff fe4d 	bl	800cdb8 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 800d11e:	a903      	add	r1, sp, #12
 800d120:	9003      	str	r0, [sp, #12]
 800d122:	4650      	mov	r0, sl
 800d124:	f7ff fe1c 	bl	800cd60 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800d128:	f8d8 202c 	ldr.w	r2, [r8, #44]	@ 0x2c
 800d12c:	4410      	add	r0, r2
 800d12e:	f8d9 2000 	ldr.w	r2, [r9]
 800d132:	1b01      	subs	r1, r0, r4
 800d134:	428a      	cmp	r2, r1
 800d136:	bfc8      	it	gt
 800d138:	f8c9 1000 	strgt.w	r1, [r9]
 800d13c:	683a      	ldr	r2, [r7, #0]
 800d13e:	4291      	cmp	r1, r2
 800d140:	bfc8      	it	gt
 800d142:	6039      	strgt	r1, [r7, #0]
 800d144:	f8d9 2000 	ldr.w	r2, [r9]
 800d148:	4420      	add	r0, r4
 800d14a:	4282      	cmp	r2, r0
 800d14c:	bfc8      	it	gt
 800d14e:	f8c9 0000 	strgt.w	r0, [r9]
 800d152:	683b      	ldr	r3, [r7, #0]
 800d154:	4298      	cmp	r0, r3
 800d156:	bfc8      	it	gt
 800d158:	6038      	strgt	r0, [r7, #0]
 800d15a:	9800      	ldr	r0, [sp, #0]
 800d15c:	f7ff fe4b 	bl	800cdf6 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 800d160:	a903      	add	r1, sp, #12
 800d162:	9003      	str	r0, [sp, #12]
 800d164:	4650      	mov	r0, sl
 800d166:	f7ff fdfb 	bl	800cd60 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800d16a:	f8d8 3030 	ldr.w	r3, [r8, #48]	@ 0x30
 800d16e:	6832      	ldr	r2, [r6, #0]
 800d170:	1a18      	subs	r0, r3, r0
 800d172:	1b03      	subs	r3, r0, r4
 800d174:	429a      	cmp	r2, r3
 800d176:	bfc8      	it	gt
 800d178:	6033      	strgt	r3, [r6, #0]
 800d17a:	682a      	ldr	r2, [r5, #0]
 800d17c:	4293      	cmp	r3, r2
 800d17e:	bfc8      	it	gt
 800d180:	602b      	strgt	r3, [r5, #0]
 800d182:	6833      	ldr	r3, [r6, #0]
 800d184:	4404      	add	r4, r0
 800d186:	42a3      	cmp	r3, r4
 800d188:	bfc8      	it	gt
 800d18a:	6034      	strgt	r4, [r6, #0]
 800d18c:	682b      	ldr	r3, [r5, #0]
 800d18e:	429c      	cmp	r4, r3
 800d190:	bfc8      	it	gt
 800d192:	602c      	strgt	r4, [r5, #0]
 800d194:	e722      	b.n	800cfdc <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x196>

0800d196 <_ZNK8touchgfx6Circle14getMinimalRectENS_7CWRUtil2Q5ES2_>:
 800d196:	b530      	push	{r4, r5, lr}
 800d198:	4604      	mov	r4, r0
 800d19a:	4608      	mov	r0, r1
 800d19c:	4611      	mov	r1, r2
 800d19e:	461a      	mov	r2, r3
 800d1a0:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 800d1a4:	b089      	sub	sp, #36	@ 0x24
 800d1a6:	015b      	lsls	r3, r3, #5
 800d1a8:	9304      	str	r3, [sp, #16]
 800d1aa:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 800d1ae:	2500      	movs	r5, #0
 800d1b0:	015b      	lsls	r3, r3, #5
 800d1b2:	e9cd 3506 	strd	r3, r5, [sp, #24]
 800d1b6:	ab07      	add	r3, sp, #28
 800d1b8:	9302      	str	r3, [sp, #8]
 800d1ba:	ab06      	add	r3, sp, #24
 800d1bc:	9301      	str	r3, [sp, #4]
 800d1be:	ab05      	add	r3, sp, #20
 800d1c0:	9300      	str	r3, [sp, #0]
 800d1c2:	ab04      	add	r3, sp, #16
 800d1c4:	9505      	str	r5, [sp, #20]
 800d1c6:	f7ff fe3e 	bl	800ce46 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_>
 800d1ca:	2520      	movs	r5, #32
 800d1cc:	9a04      	ldr	r2, [sp, #16]
 800d1ce:	9805      	ldr	r0, [sp, #20]
 800d1d0:	fb92 f2f5 	sdiv	r2, r2, r5
 800d1d4:	fb90 f0f5 	sdiv	r0, r0, r5
 800d1d8:	b292      	uxth	r2, r2
 800d1da:	3002      	adds	r0, #2
 800d1dc:	1a80      	subs	r0, r0, r2
 800d1de:	9b06      	ldr	r3, [sp, #24]
 800d1e0:	9907      	ldr	r1, [sp, #28]
 800d1e2:	fb93 f3f5 	sdiv	r3, r3, r5
 800d1e6:	fb91 f1f5 	sdiv	r1, r1, r5
 800d1ea:	b29b      	uxth	r3, r3
 800d1ec:	3102      	adds	r1, #2
 800d1ee:	1ac9      	subs	r1, r1, r3
 800d1f0:	3a01      	subs	r2, #1
 800d1f2:	3b01      	subs	r3, #1
 800d1f4:	80a0      	strh	r0, [r4, #4]
 800d1f6:	4620      	mov	r0, r4
 800d1f8:	8022      	strh	r2, [r4, #0]
 800d1fa:	8063      	strh	r3, [r4, #2]
 800d1fc:	80e1      	strh	r1, [r4, #6]
 800d1fe:	b009      	add	sp, #36	@ 0x24
 800d200:	bd30      	pop	{r4, r5, pc}

0800d202 <_ZNK8touchgfx6Circle14getMinimalRectEv>:
 800d202:	b510      	push	{r4, lr}
 800d204:	e9d1 230e 	ldrd	r2, r3, [r1, #56]	@ 0x38
 800d208:	4604      	mov	r4, r0
 800d20a:	f7ff ffc4 	bl	800d196 <_ZNK8touchgfx6Circle14getMinimalRectENS_7CWRUtil2Q5ES2_>
 800d20e:	4620      	mov	r0, r4
 800d210:	bd10      	pop	{r4, pc}
	...

0800d214 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE>:
 800d214:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d218:	e9d0 650e 	ldrd	r6, r5, [r0, #56]	@ 0x38
 800d21c:	42b5      	cmp	r5, r6
 800d21e:	bfa2      	ittt	ge
 800d220:	462b      	movge	r3, r5
 800d222:	4635      	movge	r5, r6
 800d224:	461e      	movge	r6, r3
 800d226:	1b73      	subs	r3, r6, r5
 800d228:	468a      	mov	sl, r1
 800d22a:	6c01      	ldr	r1, [r0, #64]	@ 0x40
 800d22c:	f9b0 902c 	ldrsh.w	r9, [r0, #44]	@ 0x2c
 800d230:	f9b0 b030 	ldrsh.w	fp, [r0, #48]	@ 0x30
 800d234:	6b42      	ldr	r2, [r0, #52]	@ 0x34
 800d236:	f5b3 5f34 	cmp.w	r3, #11520	@ 0x2d00
 800d23a:	b0af      	sub	sp, #188	@ 0xbc
 800d23c:	f04f 0320 	mov.w	r3, #32
 800d240:	4604      	mov	r4, r0
 800d242:	bfa4      	itt	ge
 800d244:	f44f 5634 	movge.w	r6, #11520	@ 0x2d00
 800d248:	2500      	movge	r5, #0
 800d24a:	fb99 f9f3 	sdiv	r9, r9, r3
 800d24e:	fb9b fbf3 	sdiv	fp, fp, r3
 800d252:	2900      	cmp	r1, #0
 800d254:	f000 80ff 	beq.w	800d456 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x242>
 800d258:	f9ba 0000 	ldrsh.w	r0, [sl]
 800d25c:	f9ba 3002 	ldrsh.w	r3, [sl, #2]
 800d260:	eba9 0700 	sub.w	r7, r9, r0
 800d264:	ea87 7ce7 	eor.w	ip, r7, r7, asr #31
 800d268:	ebac 7ce7 	sub.w	ip, ip, r7, asr #31
 800d26c:	f8ba 7004 	ldrh.w	r7, [sl, #4]
 800d270:	ebab 0803 	sub.w	r8, fp, r3
 800d274:	4407      	add	r7, r0
 800d276:	ea88 70e8 	eor.w	r0, r8, r8, asr #31
 800d27a:	eba0 70e8 	sub.w	r0, r0, r8, asr #31
 800d27e:	f8ba 8006 	ldrh.w	r8, [sl, #6]
 800d282:	b23f      	sxth	r7, r7
 800d284:	4498      	add	r8, r3
 800d286:	eba9 0707 	sub.w	r7, r9, r7
 800d28a:	fa0f f888 	sxth.w	r8, r8
 800d28e:	ebab 0808 	sub.w	r8, fp, r8
 800d292:	2f00      	cmp	r7, #0
 800d294:	bfb8      	it	lt
 800d296:	427f      	neglt	r7, r7
 800d298:	f1b8 0f00 	cmp.w	r8, #0
 800d29c:	bfb8      	it	lt
 800d29e:	f1c8 0800 	rsblt	r8, r8, #0
 800d2a2:	45bc      	cmp	ip, r7
 800d2a4:	bfcc      	ite	gt
 800d2a6:	f10c 0701 	addgt.w	r7, ip, #1
 800d2aa:	3701      	addle	r7, #1
 800d2ac:	4540      	cmp	r0, r8
 800d2ae:	bfc8      	it	gt
 800d2b0:	f100 0801 	addgt.w	r8, r0, #1
 800d2b4:	f894 0044 	ldrb.w	r0, [r4, #68]	@ 0x44
 800d2b8:	f100 0001 	add.w	r0, r0, #1
 800d2bc:	ea4f 0060 	mov.w	r0, r0, asr #1
 800d2c0:	f04f 0302 	mov.w	r3, #2
 800d2c4:	f1c0 005a 	rsb	r0, r0, #90	@ 0x5a
 800d2c8:	fb91 f1f3 	sdiv	r1, r1, r3
 800d2cc:	eba2 0201 	sub.w	r2, r2, r1
 800d2d0:	bfd8      	it	le
 800d2d2:	f108 0801 	addle.w	r8, r8, #1
 800d2d6:	9303      	str	r3, [sp, #12]
 800d2d8:	920f      	str	r2, [sp, #60]	@ 0x3c
 800d2da:	f7ff fd4d 	bl	800cd78 <_ZN8touchgfx7CWRUtil4sineEi>
 800d2de:	a92e      	add	r1, sp, #184	@ 0xb8
 800d2e0:	fb08 f808 	mul.w	r8, r8, r8
 800d2e4:	f841 0d74 	str.w	r0, [r1, #-116]!
 800d2e8:	a80f      	add	r0, sp, #60	@ 0x3c
 800d2ea:	f7ff fd39 	bl	800cd60 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800d2ee:	fb07 8707 	mla	r7, r7, r7, r8
 800d2f2:	f04f 0c20 	mov.w	ip, #32
 800d2f6:	fb90 f0fc 	sdiv	r0, r0, ip
 800d2fa:	4340      	muls	r0, r0
 800d2fc:	4287      	cmp	r7, r0
 800d2fe:	9b03      	ldr	r3, [sp, #12]
 800d300:	da04      	bge.n	800d30c <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xf8>
 800d302:	2401      	movs	r4, #1
 800d304:	4620      	mov	r0, r4
 800d306:	b02f      	add	sp, #188	@ 0xbc
 800d308:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d30c:	6b60      	ldr	r0, [r4, #52]	@ 0x34
 800d30e:	6c21      	ldr	r1, [r4, #64]	@ 0x40
 800d310:	fb91 f2f3 	sdiv	r2, r1, r3
 800d314:	4402      	add	r2, r0
 800d316:	fb92 f2fc 	sdiv	r2, r2, ip
 800d31a:	f9ba 1000 	ldrsh.w	r1, [sl]
 800d31e:	f8ba 3004 	ldrh.w	r3, [sl, #4]
 800d322:	440b      	add	r3, r1
 800d324:	b21b      	sxth	r3, r3
 800d326:	454b      	cmp	r3, r9
 800d328:	bfa8      	it	ge
 800d32a:	464b      	movge	r3, r9
 800d32c:	428b      	cmp	r3, r1
 800d32e:	bfac      	ite	ge
 800d330:	eba9 0903 	subge.w	r9, r9, r3
 800d334:	eba9 0901 	sublt.w	r9, r9, r1
 800d338:	f8ba 3006 	ldrh.w	r3, [sl, #6]
 800d33c:	f9ba 1002 	ldrsh.w	r1, [sl, #2]
 800d340:	440b      	add	r3, r1
 800d342:	b21b      	sxth	r3, r3
 800d344:	455b      	cmp	r3, fp
 800d346:	bfa8      	it	ge
 800d348:	465b      	movge	r3, fp
 800d34a:	428b      	cmp	r3, r1
 800d34c:	bfac      	ite	ge
 800d34e:	ebab 0b03 	subge.w	fp, fp, r3
 800d352:	ebab 0b01 	sublt.w	fp, fp, r1
 800d356:	3201      	adds	r2, #1
 800d358:	fb0b fb0b 	mul.w	fp, fp, fp
 800d35c:	fb09 b909 	mla	r9, r9, r9, fp
 800d360:	4352      	muls	r2, r2
 800d362:	4591      	cmp	r9, r2
 800d364:	dccd      	bgt.n	800d302 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xee>
 800d366:	f10d 093c 	add.w	r9, sp, #60	@ 0x3c
 800d36a:	4621      	mov	r1, r4
 800d36c:	4648      	mov	r0, r9
 800d36e:	6aa7      	ldr	r7, [r4, #40]	@ 0x28
 800d370:	f003 fc84 	bl	8010c7c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800d374:	6823      	ldr	r3, [r4, #0]
 800d376:	4620      	mov	r0, r4
 800d378:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
 800d37a:	4798      	blx	r3
 800d37c:	4653      	mov	r3, sl
 800d37e:	9000      	str	r0, [sp, #0]
 800d380:	464a      	mov	r2, r9
 800d382:	4639      	mov	r1, r7
 800d384:	a811      	add	r0, sp, #68	@ 0x44
 800d386:	f014 f85d 	bl	8021444 <_ZN8touchgfx6CanvasC1EPKNS_15AbstractPainterERKNS_4RectES6_h>
 800d38a:	6b62      	ldr	r2, [r4, #52]	@ 0x34
 800d38c:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 800d38e:	920b      	str	r2, [sp, #44]	@ 0x2c
 800d390:	ebb3 0f42 	cmp.w	r3, r2, lsl #1
 800d394:	930c      	str	r3, [sp, #48]	@ 0x30
 800d396:	dd07      	ble.n	800d3a8 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x194>
 800d398:	2102      	movs	r1, #2
 800d39a:	fb93 f3f1 	sdiv	r3, r3, r1
 800d39e:	4413      	add	r3, r2
 800d3a0:	930c      	str	r3, [sp, #48]	@ 0x30
 800d3a2:	fb93 f3f1 	sdiv	r3, r3, r1
 800d3a6:	930b      	str	r3, [sp, #44]	@ 0x2c
 800d3a8:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	@ 0x2c
 800d3ac:	4628      	mov	r0, r5
 800d3ae:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 800d3b2:	930d      	str	r3, [sp, #52]	@ 0x34
 800d3b4:	f894 7044 	ldrb.w	r7, [r4, #68]	@ 0x44
 800d3b8:	f7ff fcfe 	bl	800cdb8 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 800d3bc:	4649      	mov	r1, r9
 800d3be:	900f      	str	r0, [sp, #60]	@ 0x3c
 800d3c0:	a80d      	add	r0, sp, #52	@ 0x34
 800d3c2:	f7ff fccd 	bl	800cd60 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800d3c6:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 800d3c8:	f04f 0a02 	mov.w	sl, #2
 800d3cc:	fb90 f0fa 	sdiv	r0, r0, sl
 800d3d0:	eb00 0b03 	add.w	fp, r0, r3
 800d3d4:	4628      	mov	r0, r5
 800d3d6:	f7ff fd0e 	bl	800cdf6 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 800d3da:	f10d 08b8 	add.w	r8, sp, #184	@ 0xb8
 800d3de:	017f      	lsls	r7, r7, #5
 800d3e0:	f848 0d80 	str.w	r0, [r8, #-128]!
 800d3e4:	a80d      	add	r0, sp, #52	@ 0x34
 800d3e6:	4641      	mov	r1, r8
 800d3e8:	f7ff fcba 	bl	800cd60 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800d3ec:	6b22      	ldr	r2, [r4, #48]	@ 0x30
 800d3ee:	fb90 f0fa 	sdiv	r0, r0, sl
 800d3f2:	4659      	mov	r1, fp
 800d3f4:	1a12      	subs	r2, r2, r0
 800d3f6:	a811      	add	r0, sp, #68	@ 0x44
 800d3f8:	f014 f970 	bl	80216dc <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
 800d3fc:	f105 0a20 	add.w	sl, r5, #32
 800d400:	bb67      	cbnz	r7, 800d45c <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x248>
 800d402:	46ab      	mov	fp, r5
 800d404:	45b2      	cmp	sl, r6
 800d406:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 800d408:	dc33      	bgt.n	800d472 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x25e>
 800d40a:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 800d40c:	4650      	mov	r0, sl
 800d40e:	eb02 0241 	add.w	r2, r2, r1, lsl #1
 800d412:	920d      	str	r2, [sp, #52]	@ 0x34
 800d414:	f7ff fcd0 	bl	800cdb8 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 800d418:	4641      	mov	r1, r8
 800d41a:	900e      	str	r0, [sp, #56]	@ 0x38
 800d41c:	a80d      	add	r0, sp, #52	@ 0x34
 800d41e:	f7ff fc9f 	bl	800cd60 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800d422:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 800d424:	2302      	movs	r3, #2
 800d426:	fb90 f0f3 	sdiv	r0, r0, r3
 800d42a:	eb00 0b02 	add.w	fp, r0, r2
 800d42e:	4650      	mov	r0, sl
 800d430:	f7ff fce1 	bl	800cdf6 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 800d434:	4649      	mov	r1, r9
 800d436:	900f      	str	r0, [sp, #60]	@ 0x3c
 800d438:	a80d      	add	r0, sp, #52	@ 0x34
 800d43a:	f7ff fc91 	bl	800cd60 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800d43e:	6b22      	ldr	r2, [r4, #48]	@ 0x30
 800d440:	2302      	movs	r3, #2
 800d442:	4659      	mov	r1, fp
 800d444:	fb90 f0f3 	sdiv	r0, r0, r3
 800d448:	1a12      	subs	r2, r2, r0
 800d44a:	a811      	add	r0, sp, #68	@ 0x44
 800d44c:	46d3      	mov	fp, sl
 800d44e:	f014 f992 	bl	8021776 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 800d452:	44ba      	add	sl, r7
 800d454:	e7d6      	b.n	800d404 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x1f0>
 800d456:	fb92 f2f3 	sdiv	r2, r2, r3
 800d45a:	e75e      	b.n	800d31a <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x106>
 800d45c:	fb9a f2f7 	sdiv	r2, sl, r7
 800d460:	fb07 a212 	mls	r2, r7, r2, sl
 800d464:	1aba      	subs	r2, r7, r2
 800d466:	fb92 f1f7 	sdiv	r1, r2, r7
 800d46a:	fb07 2211 	mls	r2, r7, r1, r2
 800d46e:	4492      	add	sl, r2
 800d470:	e7c7      	b.n	800d402 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x1ee>
 800d472:	455e      	cmp	r6, fp
 800d474:	dd23      	ble.n	800d4be <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2aa>
 800d476:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 800d478:	4630      	mov	r0, r6
 800d47a:	eb02 0243 	add.w	r2, r2, r3, lsl #1
 800d47e:	920d      	str	r2, [sp, #52]	@ 0x34
 800d480:	f7ff fc9a 	bl	800cdb8 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 800d484:	4641      	mov	r1, r8
 800d486:	900e      	str	r0, [sp, #56]	@ 0x38
 800d488:	a80d      	add	r0, sp, #52	@ 0x34
 800d48a:	f7ff fc69 	bl	800cd60 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800d48e:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 800d490:	f04f 0a02 	mov.w	sl, #2
 800d494:	fb90 f0fa 	sdiv	r0, r0, sl
 800d498:	4403      	add	r3, r0
 800d49a:	4630      	mov	r0, r6
 800d49c:	9303      	str	r3, [sp, #12]
 800d49e:	f7ff fcaa 	bl	800cdf6 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 800d4a2:	4649      	mov	r1, r9
 800d4a4:	900f      	str	r0, [sp, #60]	@ 0x3c
 800d4a6:	a80d      	add	r0, sp, #52	@ 0x34
 800d4a8:	f7ff fc5a 	bl	800cd60 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800d4ac:	6b22      	ldr	r2, [r4, #48]	@ 0x30
 800d4ae:	9b03      	ldr	r3, [sp, #12]
 800d4b0:	fb90 f0fa 	sdiv	r0, r0, sl
 800d4b4:	4619      	mov	r1, r3
 800d4b6:	1a12      	subs	r2, r2, r0
 800d4b8:	a811      	add	r0, sp, #68	@ 0x44
 800d4ba:	f014 f95c 	bl	8021776 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 800d4be:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 800d4c0:	b99b      	cbnz	r3, 800d4ea <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2d6>
 800d4c2:	1b75      	subs	r5, r6, r5
 800d4c4:	f5b5 5f34 	cmp.w	r5, #11520	@ 0x2d00
 800d4c8:	da04      	bge.n	800d4d4 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2c0>
 800d4ca:	e9d4 120b 	ldrd	r1, r2, [r4, #44]	@ 0x2c
 800d4ce:	a811      	add	r0, sp, #68	@ 0x44
 800d4d0:	f014 f951 	bl	8021776 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 800d4d4:	21ff      	movs	r1, #255	@ 0xff
 800d4d6:	a811      	add	r0, sp, #68	@ 0x44
 800d4d8:	f014 f848 	bl	802156c <_ZN8touchgfx6Canvas6renderEh>
 800d4dc:	4604      	mov	r4, r0
 800d4de:	4b8a      	ldr	r3, [pc, #552]	@ (800d708 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x4f4>)
 800d4e0:	9311      	str	r3, [sp, #68]	@ 0x44
 800d4e2:	a816      	add	r0, sp, #88	@ 0x58
 800d4e4:	f000 fa95 	bl	800da12 <_ZN8touchgfx7OutlineD1Ev>
 800d4e8:	e70c      	b.n	800d304 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xf0>
 800d4ea:	e9dd 2317 	ldrd	r2, r3, [sp, #92]	@ 0x5c
 800d4ee:	429a      	cmp	r2, r3
 800d4f0:	f0c0 8107 	bcc.w	800d702 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x4ee>
 800d4f4:	1b73      	subs	r3, r6, r5
 800d4f6:	f894 a045 	ldrb.w	sl, [r4, #69]	@ 0x45
 800d4fa:	9303      	str	r3, [sp, #12]
 800d4fc:	f5b3 5f34 	cmp.w	r3, #11520	@ 0x2d00
 800d500:	ea4f 1a4a 	mov.w	sl, sl, lsl #5
 800d504:	da43      	bge.n	800d58e <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x37a>
 800d506:	4630      	mov	r0, r6
 800d508:	f7ff fc56 	bl	800cdb8 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 800d50c:	4649      	mov	r1, r9
 800d50e:	900f      	str	r0, [sp, #60]	@ 0x3c
 800d510:	a80b      	add	r0, sp, #44	@ 0x2c
 800d512:	f7ff fc25 	bl	800cd60 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800d516:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 800d518:	18c3      	adds	r3, r0, r3
 800d51a:	4630      	mov	r0, r6
 800d51c:	9305      	str	r3, [sp, #20]
 800d51e:	f7ff fc6a 	bl	800cdf6 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 800d522:	4649      	mov	r1, r9
 800d524:	900f      	str	r0, [sp, #60]	@ 0x3c
 800d526:	a80b      	add	r0, sp, #44	@ 0x2c
 800d528:	f7ff fc1a 	bl	800cd60 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800d52c:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 800d52e:	f506 52b4 	add.w	r2, r6, #5760	@ 0x1680
 800d532:	1a1b      	subs	r3, r3, r0
 800d534:	9304      	str	r3, [sp, #16]
 800d536:	9206      	str	r2, [sp, #24]
 800d538:	eb06 030a 	add.w	r3, r6, sl
 800d53c:	9a06      	ldr	r2, [sp, #24]
 800d53e:	4293      	cmp	r3, r2
 800d540:	da25      	bge.n	800d58e <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x37a>
 800d542:	4618      	mov	r0, r3
 800d544:	9308      	str	r3, [sp, #32]
 800d546:	f7ff fc37 	bl	800cdb8 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 800d54a:	4649      	mov	r1, r9
 800d54c:	900f      	str	r0, [sp, #60]	@ 0x3c
 800d54e:	a80c      	add	r0, sp, #48	@ 0x30
 800d550:	f7ff fc06 	bl	800cd60 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800d554:	9b05      	ldr	r3, [sp, #20]
 800d556:	2202      	movs	r2, #2
 800d558:	fb90 f0f2 	sdiv	r0, r0, r2
 800d55c:	18c3      	adds	r3, r0, r3
 800d55e:	9307      	str	r3, [sp, #28]
 800d560:	9b08      	ldr	r3, [sp, #32]
 800d562:	9209      	str	r2, [sp, #36]	@ 0x24
 800d564:	4618      	mov	r0, r3
 800d566:	f7ff fc46 	bl	800cdf6 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 800d56a:	a92e      	add	r1, sp, #184	@ 0xb8
 800d56c:	f841 0d80 	str.w	r0, [r1, #-128]!
 800d570:	a80c      	add	r0, sp, #48	@ 0x30
 800d572:	f7ff fbf5 	bl	800cd60 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800d576:	9b04      	ldr	r3, [sp, #16]
 800d578:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 800d57a:	9907      	ldr	r1, [sp, #28]
 800d57c:	fb90 f2f2 	sdiv	r2, r0, r2
 800d580:	a811      	add	r0, sp, #68	@ 0x44
 800d582:	1a9a      	subs	r2, r3, r2
 800d584:	f014 f8f7 	bl	8021776 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 800d588:	9b08      	ldr	r3, [sp, #32]
 800d58a:	4453      	add	r3, sl
 800d58c:	e7d6      	b.n	800d53c <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x328>
 800d58e:	455e      	cmp	r6, fp
 800d590:	dd25      	ble.n	800d5de <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x3ca>
 800d592:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	@ 0x2c
 800d596:	4630      	mov	r0, r6
 800d598:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
 800d59c:	930d      	str	r3, [sp, #52]	@ 0x34
 800d59e:	f7ff fc0b 	bl	800cdb8 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 800d5a2:	4641      	mov	r1, r8
 800d5a4:	900e      	str	r0, [sp, #56]	@ 0x38
 800d5a6:	a80d      	add	r0, sp, #52	@ 0x34
 800d5a8:	f7ff fbda 	bl	800cd60 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800d5ac:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 800d5ae:	2202      	movs	r2, #2
 800d5b0:	fb90 f0f2 	sdiv	r0, r0, r2
 800d5b4:	eb00 0903 	add.w	r9, r0, r3
 800d5b8:	4630      	mov	r0, r6
 800d5ba:	9204      	str	r2, [sp, #16]
 800d5bc:	f7ff fc1b 	bl	800cdf6 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 800d5c0:	a92e      	add	r1, sp, #184	@ 0xb8
 800d5c2:	f841 0d7c 	str.w	r0, [r1, #-124]!
 800d5c6:	a80d      	add	r0, sp, #52	@ 0x34
 800d5c8:	f7ff fbca 	bl	800cd60 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800d5cc:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 800d5ce:	9a04      	ldr	r2, [sp, #16]
 800d5d0:	fb90 f2f2 	sdiv	r2, r0, r2
 800d5d4:	4649      	mov	r1, r9
 800d5d6:	1a9a      	subs	r2, r3, r2
 800d5d8:	a811      	add	r0, sp, #68	@ 0x44
 800d5da:	f014 f8cc 	bl	8021776 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 800d5de:	46d9      	mov	r9, fp
 800d5e0:	2602      	movs	r6, #2
 800d5e2:	45a9      	cmp	r9, r5
 800d5e4:	db25      	blt.n	800d632 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x41e>
 800d5e6:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	@ 0x2c
 800d5ea:	4648      	mov	r0, r9
 800d5ec:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
 800d5f0:	930d      	str	r3, [sp, #52]	@ 0x34
 800d5f2:	f7ff fbe1 	bl	800cdb8 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 800d5f6:	4641      	mov	r1, r8
 800d5f8:	900e      	str	r0, [sp, #56]	@ 0x38
 800d5fa:	a80d      	add	r0, sp, #52	@ 0x34
 800d5fc:	f7ff fbb0 	bl	800cd60 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800d600:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 800d602:	fb90 f0f6 	sdiv	r0, r0, r6
 800d606:	eb00 0b03 	add.w	fp, r0, r3
 800d60a:	4648      	mov	r0, r9
 800d60c:	f7ff fbf3 	bl	800cdf6 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 800d610:	a90f      	add	r1, sp, #60	@ 0x3c
 800d612:	900f      	str	r0, [sp, #60]	@ 0x3c
 800d614:	a80d      	add	r0, sp, #52	@ 0x34
 800d616:	f7ff fba3 	bl	800cd60 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800d61a:	6b22      	ldr	r2, [r4, #48]	@ 0x30
 800d61c:	fb90 f0f6 	sdiv	r0, r0, r6
 800d620:	4659      	mov	r1, fp
 800d622:	1a12      	subs	r2, r2, r0
 800d624:	a811      	add	r0, sp, #68	@ 0x44
 800d626:	46cb      	mov	fp, r9
 800d628:	f014 f8a5 	bl	8021776 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 800d62c:	eba9 0907 	sub.w	r9, r9, r7
 800d630:	e7d7      	b.n	800d5e2 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x3ce>
 800d632:	455d      	cmp	r5, fp
 800d634:	da22      	bge.n	800d67c <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x468>
 800d636:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	@ 0x2c
 800d63a:	4628      	mov	r0, r5
 800d63c:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
 800d640:	930d      	str	r3, [sp, #52]	@ 0x34
 800d642:	f7ff fbb9 	bl	800cdb8 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 800d646:	4641      	mov	r1, r8
 800d648:	900e      	str	r0, [sp, #56]	@ 0x38
 800d64a:	a80d      	add	r0, sp, #52	@ 0x34
 800d64c:	f7ff fb88 	bl	800cd60 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800d650:	6ae7      	ldr	r7, [r4, #44]	@ 0x2c
 800d652:	2602      	movs	r6, #2
 800d654:	fb90 f0f6 	sdiv	r0, r0, r6
 800d658:	4407      	add	r7, r0
 800d65a:	4628      	mov	r0, r5
 800d65c:	f7ff fbcb 	bl	800cdf6 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 800d660:	a92e      	add	r1, sp, #184	@ 0xb8
 800d662:	f841 0d7c 	str.w	r0, [r1, #-124]!
 800d666:	a80d      	add	r0, sp, #52	@ 0x34
 800d668:	f7ff fb7a 	bl	800cd60 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800d66c:	6b22      	ldr	r2, [r4, #48]	@ 0x30
 800d66e:	fb90 f0f6 	sdiv	r0, r0, r6
 800d672:	4639      	mov	r1, r7
 800d674:	1a12      	subs	r2, r2, r0
 800d676:	a811      	add	r0, sp, #68	@ 0x44
 800d678:	f014 f87d 	bl	8021776 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 800d67c:	9b03      	ldr	r3, [sp, #12]
 800d67e:	f5b3 5f34 	cmp.w	r3, #11520	@ 0x2d00
 800d682:	f6bf af27 	bge.w	800d4d4 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2c0>
 800d686:	4628      	mov	r0, r5
 800d688:	f7ff fb96 	bl	800cdb8 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 800d68c:	ae2e      	add	r6, sp, #184	@ 0xb8
 800d68e:	f04f 0b02 	mov.w	fp, #2
 800d692:	f846 0d7c 	str.w	r0, [r6, #-124]!
 800d696:	a80b      	add	r0, sp, #44	@ 0x2c
 800d698:	4631      	mov	r1, r6
 800d69a:	f7ff fb61 	bl	800cd60 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800d69e:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 800d6a0:	eb00 0903 	add.w	r9, r0, r3
 800d6a4:	4628      	mov	r0, r5
 800d6a6:	f7ff fba6 	bl	800cdf6 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 800d6aa:	4631      	mov	r1, r6
 800d6ac:	900f      	str	r0, [sp, #60]	@ 0x3c
 800d6ae:	a80b      	add	r0, sp, #44	@ 0x2c
 800d6b0:	f7ff fb56 	bl	800cd60 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800d6b4:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 800d6b6:	f5a5 54b4 	sub.w	r4, r5, #5760	@ 0x1680
 800d6ba:	eba3 0800 	sub.w	r8, r3, r0
 800d6be:	4454      	add	r4, sl
 800d6c0:	42a5      	cmp	r5, r4
 800d6c2:	f77f af07 	ble.w	800d4d4 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2c0>
 800d6c6:	4620      	mov	r0, r4
 800d6c8:	f7ff fb76 	bl	800cdb8 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 800d6cc:	4631      	mov	r1, r6
 800d6ce:	900f      	str	r0, [sp, #60]	@ 0x3c
 800d6d0:	a80c      	add	r0, sp, #48	@ 0x30
 800d6d2:	f7ff fb45 	bl	800cd60 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800d6d6:	fb90 f0fb 	sdiv	r0, r0, fp
 800d6da:	eb00 0709 	add.w	r7, r0, r9
 800d6de:	4620      	mov	r0, r4
 800d6e0:	f7ff fb89 	bl	800cdf6 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 800d6e4:	a90e      	add	r1, sp, #56	@ 0x38
 800d6e6:	900e      	str	r0, [sp, #56]	@ 0x38
 800d6e8:	a80c      	add	r0, sp, #48	@ 0x30
 800d6ea:	f7ff fb39 	bl	800cd60 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800d6ee:	4639      	mov	r1, r7
 800d6f0:	fb90 f2fb 	sdiv	r2, r0, fp
 800d6f4:	a811      	add	r0, sp, #68	@ 0x44
 800d6f6:	eba8 0202 	sub.w	r2, r8, r2
 800d6fa:	f014 f83c 	bl	8021776 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 800d6fe:	4454      	add	r4, sl
 800d700:	e7de      	b.n	800d6c0 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x4ac>
 800d702:	2400      	movs	r4, #0
 800d704:	e6eb      	b.n	800d4de <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2ca>
 800d706:	bf00      	nop
 800d708:	08025558 	.word	0x08025558

0800d70c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE>:
 800d70c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800d70e:	6803      	ldr	r3, [r0, #0]
 800d710:	460d      	mov	r5, r1
 800d712:	4604      	mov	r4, r0
 800d714:	4601      	mov	r1, r0
 800d716:	6e9b      	ldr	r3, [r3, #104]	@ 0x68
 800d718:	a802      	add	r0, sp, #8
 800d71a:	4798      	blx	r3
 800d71c:	6828      	ldr	r0, [r5, #0]
 800d71e:	6869      	ldr	r1, [r5, #4]
 800d720:	466b      	mov	r3, sp
 800d722:	c303      	stmia	r3!, {r0, r1}
 800d724:	4668      	mov	r0, sp
 800d726:	4619      	mov	r1, r3
 800d728:	f7fc fece 	bl	800a4c8 <_ZN8touchgfx4RectaNERKS0_>
 800d72c:	6aa0      	ldr	r0, [r4, #40]	@ 0x28
 800d72e:	b188      	cbz	r0, 800d754 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 800d730:	6803      	ldr	r3, [r0, #0]
 800d732:	1d21      	adds	r1, r4, #4
 800d734:	68db      	ldr	r3, [r3, #12]
 800d736:	4798      	blx	r3
 800d738:	b160      	cbz	r0, 800d754 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 800d73a:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 800d73e:	2b00      	cmp	r3, #0
 800d740:	dd08      	ble.n	800d754 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 800d742:	f9bd 5006 	ldrsh.w	r5, [sp, #6]
 800d746:	2d00      	cmp	r5, #0
 800d748:	dd04      	ble.n	800d754 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 800d74a:	4a2b      	ldr	r2, [pc, #172]	@ (800d7f8 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xec>)
 800d74c:	7812      	ldrb	r2, [r2, #0]
 800d74e:	b11a      	cbz	r2, 800d758 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x4c>
 800d750:	2a01      	cmp	r2, #1
 800d752:	d029      	beq.n	800d7a8 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x9c>
 800d754:	b004      	add	sp, #16
 800d756:	bd70      	pop	{r4, r5, r6, pc}
 800d758:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800d75c:	441d      	add	r5, r3
 800d75e:	b2ad      	uxth	r5, r5
 800d760:	b22e      	sxth	r6, r5
 800d762:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 800d766:	42b3      	cmp	r3, r6
 800d768:	daf4      	bge.n	800d754 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 800d76a:	6823      	ldr	r3, [r4, #0]
 800d76c:	4669      	mov	r1, sp
 800d76e:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 800d770:	4620      	mov	r0, r4
 800d772:	4798      	blx	r3
 800d774:	b940      	cbnz	r0, 800d788 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x7c>
 800d776:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 800d77a:	2b01      	cmp	r3, #1
 800d77c:	d004      	beq.n	800d788 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x7c>
 800d77e:	3301      	adds	r3, #1
 800d780:	105b      	asrs	r3, r3, #1
 800d782:	f8ad 3006 	strh.w	r3, [sp, #6]
 800d786:	e7f0      	b.n	800d76a <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x5e>
 800d788:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 800d78c:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800d790:	4413      	add	r3, r2
 800d792:	b29b      	uxth	r3, r3
 800d794:	441a      	add	r2, r3
 800d796:	b212      	sxth	r2, r2
 800d798:	4296      	cmp	r6, r2
 800d79a:	f8ad 3002 	strh.w	r3, [sp, #2]
 800d79e:	dae0      	bge.n	800d762 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x56>
 800d7a0:	1aeb      	subs	r3, r5, r3
 800d7a2:	f8ad 3006 	strh.w	r3, [sp, #6]
 800d7a6:	e7dc      	b.n	800d762 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x56>
 800d7a8:	f8bd 5000 	ldrh.w	r5, [sp]
 800d7ac:	441d      	add	r5, r3
 800d7ae:	b2ad      	uxth	r5, r5
 800d7b0:	b22e      	sxth	r6, r5
 800d7b2:	f9bd 3000 	ldrsh.w	r3, [sp]
 800d7b6:	42b3      	cmp	r3, r6
 800d7b8:	dacc      	bge.n	800d754 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 800d7ba:	6823      	ldr	r3, [r4, #0]
 800d7bc:	4669      	mov	r1, sp
 800d7be:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 800d7c0:	4620      	mov	r0, r4
 800d7c2:	4798      	blx	r3
 800d7c4:	b940      	cbnz	r0, 800d7d8 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xcc>
 800d7c6:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 800d7ca:	2b01      	cmp	r3, #1
 800d7cc:	d004      	beq.n	800d7d8 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xcc>
 800d7ce:	3301      	adds	r3, #1
 800d7d0:	105b      	asrs	r3, r3, #1
 800d7d2:	f8ad 3004 	strh.w	r3, [sp, #4]
 800d7d6:	e7f0      	b.n	800d7ba <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xae>
 800d7d8:	f8bd 2004 	ldrh.w	r2, [sp, #4]
 800d7dc:	f8bd 3000 	ldrh.w	r3, [sp]
 800d7e0:	4413      	add	r3, r2
 800d7e2:	b29b      	uxth	r3, r3
 800d7e4:	441a      	add	r2, r3
 800d7e6:	b212      	sxth	r2, r2
 800d7e8:	4296      	cmp	r6, r2
 800d7ea:	f8ad 3000 	strh.w	r3, [sp]
 800d7ee:	dae0      	bge.n	800d7b2 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa6>
 800d7f0:	1aeb      	subs	r3, r5, r3
 800d7f2:	f8ad 3004 	strh.w	r3, [sp, #4]
 800d7f6:	e7dc      	b.n	800d7b2 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa6>
 800d7f8:	2001403a 	.word	0x2001403a

0800d7fc <_ZNK8touchgfx12CanvasWidget10invalidateEv>:
 800d7fc:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800d7fe:	6803      	ldr	r3, [r0, #0]
 800d800:	4604      	mov	r4, r0
 800d802:	4601      	mov	r1, r0
 800d804:	6e9b      	ldr	r3, [r3, #104]	@ 0x68
 800d806:	4668      	mov	r0, sp
 800d808:	4798      	blx	r3
 800d80a:	2100      	movs	r1, #0
 800d80c:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 800d810:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800d814:	9102      	str	r1, [sp, #8]
 800d816:	4668      	mov	r0, sp
 800d818:	a902      	add	r1, sp, #8
 800d81a:	f8ad 200c 	strh.w	r2, [sp, #12]
 800d81e:	f8ad 300e 	strh.w	r3, [sp, #14]
 800d822:	f7fc fe51 	bl	800a4c8 <_ZN8touchgfx4RectaNERKS0_>
 800d826:	6823      	ldr	r3, [r4, #0]
 800d828:	4669      	mov	r1, sp
 800d82a:	691b      	ldr	r3, [r3, #16]
 800d82c:	4620      	mov	r0, r4
 800d82e:	4798      	blx	r3
 800d830:	b004      	add	sp, #16
 800d832:	bd10      	pop	{r4, pc}

0800d834 <_ZN8touchgfx12CanvasWidgetC1Ev>:
 800d834:	2101      	movs	r1, #1
 800d836:	f880 1025 	strb.w	r1, [r0, #37]	@ 0x25
 800d83a:	490b      	ldr	r1, [pc, #44]	@ (800d868 <_ZN8touchgfx12CanvasWidgetC1Ev+0x34>)
 800d83c:	6001      	str	r1, [r0, #0]
 800d83e:	2200      	movs	r2, #0
 800d840:	21ff      	movs	r1, #255	@ 0xff
 800d842:	8082      	strh	r2, [r0, #4]
 800d844:	80c2      	strh	r2, [r0, #6]
 800d846:	8102      	strh	r2, [r0, #8]
 800d848:	8142      	strh	r2, [r0, #10]
 800d84a:	8182      	strh	r2, [r0, #12]
 800d84c:	81c2      	strh	r2, [r0, #14]
 800d84e:	8202      	strh	r2, [r0, #16]
 800d850:	8242      	strh	r2, [r0, #18]
 800d852:	e9c0 2205 	strd	r2, r2, [r0, #20]
 800d856:	61c2      	str	r2, [r0, #28]
 800d858:	8402      	strh	r2, [r0, #32]
 800d85a:	8442      	strh	r2, [r0, #34]	@ 0x22
 800d85c:	f880 2024 	strb.w	r2, [r0, #36]	@ 0x24
 800d860:	f880 1026 	strb.w	r1, [r0, #38]	@ 0x26
 800d864:	6282      	str	r2, [r0, #40]	@ 0x28
 800d866:	4770      	bx	lr
 800d868:	08024fcc 	.word	0x08024fcc

0800d86c <_ZNK8touchgfx3Box12getSolidRectEv>:
 800d86c:	2300      	movs	r3, #0
 800d86e:	8083      	strh	r3, [r0, #4]
 800d870:	80c3      	strh	r3, [r0, #6]
 800d872:	8003      	strh	r3, [r0, #0]
 800d874:	8043      	strh	r3, [r0, #2]
 800d876:	f891 3026 	ldrb.w	r3, [r1, #38]	@ 0x26
 800d87a:	2bff      	cmp	r3, #255	@ 0xff
 800d87c:	bf01      	itttt	eq
 800d87e:	890b      	ldrheq	r3, [r1, #8]
 800d880:	8083      	strheq	r3, [r0, #4]
 800d882:	894b      	ldrheq	r3, [r1, #10]
 800d884:	80c3      	strheq	r3, [r0, #6]
 800d886:	4770      	bx	lr

0800d888 <_ZNK8touchgfx3Box4drawERKNS_4RectE>:
 800d888:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800d88a:	4604      	mov	r4, r0
 800d88c:	6808      	ldr	r0, [r1, #0]
 800d88e:	6849      	ldr	r1, [r1, #4]
 800d890:	466b      	mov	r3, sp
 800d892:	c303      	stmia	r3!, {r0, r1}
 800d894:	6823      	ldr	r3, [r4, #0]
 800d896:	4669      	mov	r1, sp
 800d898:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800d89a:	4620      	mov	r0, r4
 800d89c:	4798      	blx	r3
 800d89e:	4b08      	ldr	r3, [pc, #32]	@ (800d8c0 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x38>)
 800d8a0:	681b      	ldr	r3, [r3, #0]
 800d8a2:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
 800d8a6:	b10a      	cbz	r2, 800d8ac <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x24>
 800d8a8:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 800d8aa:	b900      	cbnz	r0, 800d8ae <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x26>
 800d8ac:	6898      	ldr	r0, [r3, #8]
 800d8ae:	6803      	ldr	r3, [r0, #0]
 800d8b0:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
 800d8b2:	6a1d      	ldr	r5, [r3, #32]
 800d8b4:	f894 3026 	ldrb.w	r3, [r4, #38]	@ 0x26
 800d8b8:	4669      	mov	r1, sp
 800d8ba:	47a8      	blx	r5
 800d8bc:	b003      	add	sp, #12
 800d8be:	bd30      	pop	{r4, r5, pc}
 800d8c0:	20014044 	.word	0x20014044

0800d8c4 <_ZN8touchgfx3BoxD1Ev>:
 800d8c4:	4770      	bx	lr

0800d8c6 <_ZN8touchgfx3BoxD0Ev>:
 800d8c6:	b510      	push	{r4, lr}
 800d8c8:	212c      	movs	r1, #44	@ 0x2c
 800d8ca:	4604      	mov	r4, r0
 800d8cc:	f014 fa1d 	bl	8021d0a <_ZdlPvj>
 800d8d0:	4620      	mov	r0, r4
 800d8d2:	bd10      	pop	{r4, pc}

0800d8d4 <_ZNK8touchgfx3Box17invalidateContentEv>:
 800d8d4:	f890 2026 	ldrb.w	r2, [r0, #38]	@ 0x26
 800d8d8:	b12a      	cbz	r2, 800d8e6 <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 800d8da:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
 800d8de:	b112      	cbz	r2, 800d8e6 <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 800d8e0:	6803      	ldr	r3, [r0, #0]
 800d8e2:	695b      	ldr	r3, [r3, #20]
 800d8e4:	4718      	bx	r3
 800d8e6:	4770      	bx	lr

0800d8e8 <_ZN8touchgfx13BoxWithBorderD1Ev>:
 800d8e8:	4770      	bx	lr

0800d8ea <_ZN8touchgfx13BoxWithBorderD0Ev>:
 800d8ea:	b510      	push	{r4, lr}
 800d8ec:	2134      	movs	r1, #52	@ 0x34
 800d8ee:	4604      	mov	r4, r0
 800d8f0:	f014 fa0b 	bl	8021d0a <_ZdlPvj>
 800d8f4:	4620      	mov	r0, r4
 800d8f6:	bd10      	pop	{r4, pc}

0800d8f8 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE>:
 800d8f8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800d8fc:	4604      	mov	r4, r0
 800d8fe:	8e03      	ldrh	r3, [r0, #48]	@ 0x30
 800d900:	8962      	ldrh	r2, [r4, #10]
 800d902:	b218      	sxth	r0, r3
 800d904:	460e      	mov	r6, r1
 800d906:	005b      	lsls	r3, r3, #1
 800d908:	8921      	ldrh	r1, [r4, #8]
 800d90a:	b29b      	uxth	r3, r3
 800d90c:	1ac9      	subs	r1, r1, r3
 800d90e:	b08e      	sub	sp, #56	@ 0x38
 800d910:	b209      	sxth	r1, r1
 800d912:	1ad3      	subs	r3, r2, r3
 800d914:	b21b      	sxth	r3, r3
 800d916:	2900      	cmp	r1, #0
 800d918:	f8ad 0000 	strh.w	r0, [sp]
 800d91c:	f8ad 0002 	strh.w	r0, [sp, #2]
 800d920:	f8ad 1004 	strh.w	r1, [sp, #4]
 800d924:	f8ad 3006 	strh.w	r3, [sp, #6]
 800d928:	dd5e      	ble.n	800d9e8 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xf0>
 800d92a:	2b00      	cmp	r3, #0
 800d92c:	dd5c      	ble.n	800d9e8 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xf0>
 800d92e:	6830      	ldr	r0, [r6, #0]
 800d930:	6871      	ldr	r1, [r6, #4]
 800d932:	ab02      	add	r3, sp, #8
 800d934:	c303      	stmia	r3!, {r0, r1}
 800d936:	4669      	mov	r1, sp
 800d938:	a802      	add	r0, sp, #8
 800d93a:	f7fc fdc5 	bl	800a4c8 <_ZN8touchgfx4RectaNERKS0_>
 800d93e:	4620      	mov	r0, r4
 800d940:	a902      	add	r1, sp, #8
 800d942:	f7ff ffa1 	bl	800d888 <_ZNK8touchgfx3Box4drawERKNS_4RectE>
 800d946:	8e20      	ldrh	r0, [r4, #48]	@ 0x30
 800d948:	2800      	cmp	r0, #0
 800d94a:	d05f      	beq.n	800da0c <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0x114>
 800d94c:	8963      	ldrh	r3, [r4, #10]
 800d94e:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 800d952:	f8ad 101c 	strh.w	r1, [sp, #28]
 800d956:	1a1f      	subs	r7, r3, r0
 800d958:	eba3 0340 	sub.w	r3, r3, r0, lsl #1
 800d95c:	b202      	sxth	r2, r0
 800d95e:	2500      	movs	r5, #0
 800d960:	b21b      	sxth	r3, r3
 800d962:	f8ad 1024 	strh.w	r1, [sp, #36]	@ 0x24
 800d966:	1a09      	subs	r1, r1, r0
 800d968:	f8ad 7022 	strh.w	r7, [sp, #34]	@ 0x22
 800d96c:	9506      	str	r5, [sp, #24]
 800d96e:	f8ad 201e 	strh.w	r2, [sp, #30]
 800d972:	f8ad 5020 	strh.w	r5, [sp, #32]
 800d976:	f8ad 2026 	strh.w	r2, [sp, #38]	@ 0x26
 800d97a:	f8ad 5028 	strh.w	r5, [sp, #40]	@ 0x28
 800d97e:	f8ad 202a 	strh.w	r2, [sp, #42]	@ 0x2a
 800d982:	f8ad 202c 	strh.w	r2, [sp, #44]	@ 0x2c
 800d986:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
 800d98a:	f8ad 1030 	strh.w	r1, [sp, #48]	@ 0x30
 800d98e:	f8ad 2032 	strh.w	r2, [sp, #50]	@ 0x32
 800d992:	f8ad 2034 	strh.w	r2, [sp, #52]	@ 0x34
 800d996:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 800d99a:	af04      	add	r7, sp, #16
 800d99c:	ab06      	add	r3, sp, #24
 800d99e:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 800d9a2:	e893 0003 	ldmia.w	r3, {r0, r1}
 800d9a6:	e887 0003 	stmia.w	r7, {r0, r1}
 800d9aa:	4631      	mov	r1, r6
 800d9ac:	4638      	mov	r0, r7
 800d9ae:	f7fc fd8b 	bl	800a4c8 <_ZN8touchgfx4RectaNERKS0_>
 800d9b2:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 800d9b6:	2b00      	cmp	r3, #0
 800d9b8:	dd12      	ble.n	800d9e0 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xe8>
 800d9ba:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 800d9be:	2b00      	cmp	r3, #0
 800d9c0:	dd0e      	ble.n	800d9e0 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xe8>
 800d9c2:	6823      	ldr	r3, [r4, #0]
 800d9c4:	4639      	mov	r1, r7
 800d9c6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800d9c8:	4620      	mov	r0, r4
 800d9ca:	4798      	blx	r3
 800d9cc:	f7f5 f806 	bl	80029dc <_ZN8touchgfx3HAL3lcdEv>
 800d9d0:	6803      	ldr	r3, [r0, #0]
 800d9d2:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 800d9d4:	f8d3 8020 	ldr.w	r8, [r3, #32]
 800d9d8:	f894 3026 	ldrb.w	r3, [r4, #38]	@ 0x26
 800d9dc:	4639      	mov	r1, r7
 800d9de:	47c0      	blx	r8
 800d9e0:	3501      	adds	r5, #1
 800d9e2:	2d04      	cmp	r5, #4
 800d9e4:	d1da      	bne.n	800d99c <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xa4>
 800d9e6:	e011      	b.n	800da0c <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0x114>
 800d9e8:	6830      	ldr	r0, [r6, #0]
 800d9ea:	6871      	ldr	r1, [r6, #4]
 800d9ec:	ab06      	add	r3, sp, #24
 800d9ee:	c303      	stmia	r3!, {r0, r1}
 800d9f0:	6823      	ldr	r3, [r4, #0]
 800d9f2:	a906      	add	r1, sp, #24
 800d9f4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800d9f6:	4620      	mov	r0, r4
 800d9f8:	4798      	blx	r3
 800d9fa:	f7f4 ffef 	bl	80029dc <_ZN8touchgfx3HAL3lcdEv>
 800d9fe:	6803      	ldr	r3, [r0, #0]
 800da00:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 800da02:	6a1d      	ldr	r5, [r3, #32]
 800da04:	f894 3026 	ldrb.w	r3, [r4, #38]	@ 0x26
 800da08:	a906      	add	r1, sp, #24
 800da0a:	47a8      	blx	r5
 800da0c:	b00e      	add	sp, #56	@ 0x38
 800da0e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800da12 <_ZN8touchgfx7OutlineD1Ev>:
 800da12:	4770      	bx	lr

0800da14 <_ZN8touchgfx7OutlineD0Ev>:
 800da14:	b510      	push	{r4, lr}
 800da16:	2130      	movs	r1, #48	@ 0x30
 800da18:	4604      	mov	r4, r0
 800da1a:	f014 f976 	bl	8021d0a <_ZdlPvj>
 800da1e:	4620      	mov	r0, r4
 800da20:	bd10      	pop	{r4, pc}

0800da22 <_ZN8touchgfx7Outline5resetEv>:
 800da22:	b510      	push	{r4, lr}
 800da24:	4604      	mov	r4, r0
 800da26:	f000 fe95 	bl	800e754 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>
 800da2a:	60e0      	str	r0, [r4, #12]
 800da2c:	f000 fe98 	bl	800e760 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>
 800da30:	68e3      	ldr	r3, [r4, #12]
 800da32:	6123      	str	r3, [r4, #16]
 800da34:	08c0      	lsrs	r0, r0, #3
 800da36:	2200      	movs	r2, #0
 800da38:	f647 71ff 	movw	r1, #32767	@ 0x7fff
 800da3c:	3801      	subs	r0, #1
 800da3e:	6060      	str	r0, [r4, #4]
 800da40:	60a2      	str	r2, [r4, #8]
 800da42:	8019      	strh	r1, [r3, #0]
 800da44:	8059      	strh	r1, [r3, #2]
 800da46:	809a      	strh	r2, [r3, #4]
 800da48:	80da      	strh	r2, [r3, #6]
 800da4a:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 800da4c:	f023 0301 	bic.w	r3, r3, #1
 800da50:	f043 0302 	orr.w	r3, r3, #2
 800da54:	6263      	str	r3, [r4, #36]	@ 0x24
 800da56:	bd10      	pop	{r4, pc}

0800da58 <_ZN8touchgfx7OutlineC1Ev>:
 800da58:	b510      	push	{r4, lr}
 800da5a:	4b0a      	ldr	r3, [pc, #40]	@ (800da84 <_ZN8touchgfx7OutlineC1Ev+0x2c>)
 800da5c:	6003      	str	r3, [r0, #0]
 800da5e:	2300      	movs	r3, #0
 800da60:	e9c0 3301 	strd	r3, r3, [r0, #4]
 800da64:	e9c0 3303 	strd	r3, r3, [r0, #12]
 800da68:	e9c0 3305 	strd	r3, r3, [r0, #20]
 800da6c:	e9c0 3307 	strd	r3, r3, [r0, #28]
 800da70:	6243      	str	r3, [r0, #36]	@ 0x24
 800da72:	f06f 4300 	mvn.w	r3, #2147483648	@ 0x80000000
 800da76:	4604      	mov	r4, r0
 800da78:	e9c0 330a 	strd	r3, r3, [r0, #40]	@ 0x28
 800da7c:	f7ff ffd1 	bl	800da22 <_ZN8touchgfx7Outline5resetEv>
 800da80:	4620      	mov	r0, r4
 800da82:	bd10      	pop	{r4, pc}
 800da84:	08025114 	.word	0x08025114

0800da88 <_ZN8touchgfx7Outline10renderLineEiiii>:
 800da88:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800da8c:	b093      	sub	sp, #76	@ 0x4c
 800da8e:	1156      	asrs	r6, r2, #5
 800da90:	9c1c      	ldr	r4, [sp, #112]	@ 0x70
 800da92:	9305      	str	r3, [sp, #20]
 800da94:	f004 051f 	and.w	r5, r4, #31
 800da98:	1153      	asrs	r3, r2, #5
 800da9a:	9504      	str	r5, [sp, #16]
 800da9c:	1165      	asrs	r5, r4, #5
 800da9e:	9303      	str	r3, [sp, #12]
 800daa0:	42ae      	cmp	r6, r5
 800daa2:	ea4f 1364 	mov.w	r3, r4, asr #5
 800daa6:	9306      	str	r3, [sp, #24]
 800daa8:	f002 031f 	and.w	r3, r2, #31
 800daac:	f040 80f8 	bne.w	800dca0 <_ZN8touchgfx7Outline10renderLineEiiii+0x218>
 800dab0:	9c04      	ldr	r4, [sp, #16]
 800dab2:	9a05      	ldr	r2, [sp, #20]
 800dab4:	42a3      	cmp	r3, r4
 800dab6:	ea4f 1e62 	mov.w	lr, r2, asr #5
 800daba:	6902      	ldr	r2, [r0, #16]
 800dabc:	d125      	bne.n	800db0a <_ZN8touchgfx7Outline10renderLineEiiii+0x82>
 800dabe:	f9b2 3000 	ldrsh.w	r3, [r2]
 800dac2:	459e      	cmp	lr, r3
 800dac4:	d103      	bne.n	800dace <_ZN8touchgfx7Outline10renderLineEiiii+0x46>
 800dac6:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
 800daca:	429e      	cmp	r6, r3
 800dacc:	d035      	beq.n	800db3a <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 800dace:	88d1      	ldrh	r1, [r2, #6]
 800dad0:	8893      	ldrh	r3, [r2, #4]
 800dad2:	430b      	orrs	r3, r1
 800dad4:	d010      	beq.n	800daf8 <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 800dad6:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
 800dada:	2b00      	cmp	r3, #0
 800dadc:	db0c      	blt.n	800daf8 <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 800dade:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
 800dae0:	428b      	cmp	r3, r1
 800dae2:	da09      	bge.n	800daf8 <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 800dae4:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
 800dae8:	428b      	cmp	r3, r1
 800daea:	bf38      	it	cc
 800daec:	3208      	addcc	r2, #8
 800daee:	f103 0301 	add.w	r3, r3, #1
 800daf2:	bf38      	it	cc
 800daf4:	6102      	strcc	r2, [r0, #16]
 800daf6:	6083      	str	r3, [r0, #8]
 800daf8:	6903      	ldr	r3, [r0, #16]
 800dafa:	9a03      	ldr	r2, [sp, #12]
 800dafc:	f8a3 e000 	strh.w	lr, [r3]
 800db00:	805a      	strh	r2, [r3, #2]
 800db02:	2200      	movs	r2, #0
 800db04:	809a      	strh	r2, [r3, #4]
 800db06:	80da      	strh	r2, [r3, #6]
 800db08:	e017      	b.n	800db3a <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 800db0a:	9c05      	ldr	r4, [sp, #20]
 800db0c:	f8b2 8004 	ldrh.w	r8, [r2, #4]
 800db10:	f8b2 a006 	ldrh.w	sl, [r2, #6]
 800db14:	f004 041f 	and.w	r4, r4, #31
 800db18:	114e      	asrs	r6, r1, #5
 800db1a:	9402      	str	r4, [sp, #8]
 800db1c:	9c04      	ldr	r4, [sp, #16]
 800db1e:	4576      	cmp	r6, lr
 800db20:	f001 0c1f 	and.w	ip, r1, #31
 800db24:	eba4 0403 	sub.w	r4, r4, r3
 800db28:	d10a      	bne.n	800db40 <_ZN8touchgfx7Outline10renderLineEiiii+0xb8>
 800db2a:	9b02      	ldr	r3, [sp, #8]
 800db2c:	449c      	add	ip, r3
 800db2e:	44a0      	add	r8, r4
 800db30:	fb04 a40c 	mla	r4, r4, ip, sl
 800db34:	f8a2 8004 	strh.w	r8, [r2, #4]
 800db38:	80d4      	strh	r4, [r2, #6]
 800db3a:	b013      	add	sp, #76	@ 0x4c
 800db3c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800db40:	9d05      	ldr	r5, [sp, #20]
 800db42:	1a69      	subs	r1, r5, r1
 800db44:	bf5b      	ittet	pl
 800db46:	f1cc 0520 	rsbpl	r5, ip, #32
 800db4a:	436c      	mulpl	r4, r5
 800db4c:	2500      	movmi	r5, #0
 800db4e:	2520      	movpl	r5, #32
 800db50:	bf44      	itt	mi
 800db52:	fb04 f40c 	mulmi.w	r4, r4, ip
 800db56:	4249      	negmi	r1, r1
 800db58:	9501      	str	r5, [sp, #4]
 800db5a:	9f01      	ldr	r7, [sp, #4]
 800db5c:	fb94 f5f1 	sdiv	r5, r4, r1
 800db60:	fb01 4415 	mls	r4, r1, r5, r4
 800db64:	bf54      	ite	pl
 800db66:	f04f 0901 	movpl.w	r9, #1
 800db6a:	f04f 39ff 	movmi.w	r9, #4294967295
 800db6e:	2c00      	cmp	r4, #0
 800db70:	bfb8      	it	lt
 800db72:	f105 35ff 	addlt.w	r5, r5, #4294967295
 800db76:	44bc      	add	ip, r7
 800db78:	44a8      	add	r8, r5
 800db7a:	fb05 ac0c 	mla	ip, r5, ip, sl
 800db7e:	f8a2 8004 	strh.w	r8, [r2, #4]
 800db82:	f8a2 c006 	strh.w	ip, [r2, #6]
 800db86:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800db8a:	f8bc 8006 	ldrh.w	r8, [ip, #6]
 800db8e:	f8bc 2004 	ldrh.w	r2, [ip, #4]
 800db92:	bfb8      	it	lt
 800db94:	1864      	addlt	r4, r4, r1
 800db96:	ea58 0202 	orrs.w	r2, r8, r2
 800db9a:	444e      	add	r6, r9
 800db9c:	d011      	beq.n	800dbc2 <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 800db9e:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
 800dba2:	f1b8 0f00 	cmp.w	r8, #0
 800dba6:	db0c      	blt.n	800dbc2 <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 800dba8:	6ac2      	ldr	r2, [r0, #44]	@ 0x2c
 800dbaa:	4590      	cmp	r8, r2
 800dbac:	da09      	bge.n	800dbc2 <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 800dbae:	e9d0 2801 	ldrd	r2, r8, [r0, #4]
 800dbb2:	4590      	cmp	r8, r2
 800dbb4:	bf3c      	itt	cc
 800dbb6:	f10c 0208 	addcc.w	r2, ip, #8
 800dbba:	6102      	strcc	r2, [r0, #16]
 800dbbc:	f108 0201 	add.w	r2, r8, #1
 800dbc0:	6082      	str	r2, [r0, #8]
 800dbc2:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800dbc6:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 800dbca:	f8ac 6000 	strh.w	r6, [ip]
 800dbce:	2700      	movs	r7, #0
 800dbd0:	45b6      	cmp	lr, r6
 800dbd2:	f8ac 2002 	strh.w	r2, [ip, #2]
 800dbd6:	f8ac 7004 	strh.w	r7, [ip, #4]
 800dbda:	f8ac 7006 	strh.w	r7, [ip, #6]
 800dbde:	442b      	add	r3, r5
 800dbe0:	d04d      	beq.n	800dc7e <_ZN8touchgfx7Outline10renderLineEiiii+0x1f6>
 800dbe2:	9f04      	ldr	r7, [sp, #16]
 800dbe4:	1aff      	subs	r7, r7, r3
 800dbe6:	443d      	add	r5, r7
 800dbe8:	016d      	lsls	r5, r5, #5
 800dbea:	fb95 f8f1 	sdiv	r8, r5, r1
 800dbee:	fb01 5518 	mls	r5, r1, r8, r5
 800dbf2:	2d00      	cmp	r5, #0
 800dbf4:	bfb8      	it	lt
 800dbf6:	f108 38ff 	addlt.w	r8, r8, #4294967295
 800dbfa:	f108 0701 	add.w	r7, r8, #1
 800dbfe:	bfb8      	it	lt
 800dc00:	186d      	addlt	r5, r5, r1
 800dc02:	1a64      	subs	r4, r4, r1
 800dc04:	9703      	str	r7, [sp, #12]
 800dc06:	f04f 0a00 	mov.w	sl, #0
 800dc0a:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800dc0e:	1964      	adds	r4, r4, r5
 800dc10:	bf58      	it	pl
 800dc12:	9f03      	ldrpl	r7, [sp, #12]
 800dc14:	f8bc b004 	ldrh.w	fp, [ip, #4]
 800dc18:	bf48      	it	mi
 800dc1a:	4647      	movmi	r7, r8
 800dc1c:	44bb      	add	fp, r7
 800dc1e:	f8ac b004 	strh.w	fp, [ip, #4]
 800dc22:	f8bc b006 	ldrh.w	fp, [ip, #6]
 800dc26:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 800dc2a:	f8ac b006 	strh.w	fp, [ip, #6]
 800dc2e:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800dc32:	443b      	add	r3, r7
 800dc34:	f8bc b006 	ldrh.w	fp, [ip, #6]
 800dc38:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 800dc3c:	bf58      	it	pl
 800dc3e:	1a64      	subpl	r4, r4, r1
 800dc40:	ea5b 0707 	orrs.w	r7, fp, r7
 800dc44:	444e      	add	r6, r9
 800dc46:	d011      	beq.n	800dc6c <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 800dc48:	f9bc b002 	ldrsh.w	fp, [ip, #2]
 800dc4c:	f1bb 0f00 	cmp.w	fp, #0
 800dc50:	db0c      	blt.n	800dc6c <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 800dc52:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
 800dc54:	45bb      	cmp	fp, r7
 800dc56:	da09      	bge.n	800dc6c <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 800dc58:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 800dc5c:	45bb      	cmp	fp, r7
 800dc5e:	bf3c      	itt	cc
 800dc60:	f10c 0708 	addcc.w	r7, ip, #8
 800dc64:	6107      	strcc	r7, [r0, #16]
 800dc66:	f10b 0701 	add.w	r7, fp, #1
 800dc6a:	6087      	str	r7, [r0, #8]
 800dc6c:	6907      	ldr	r7, [r0, #16]
 800dc6e:	45b6      	cmp	lr, r6
 800dc70:	803e      	strh	r6, [r7, #0]
 800dc72:	807a      	strh	r2, [r7, #2]
 800dc74:	f8a7 a004 	strh.w	sl, [r7, #4]
 800dc78:	f8a7 a006 	strh.w	sl, [r7, #6]
 800dc7c:	d1c5      	bne.n	800dc0a <_ZN8touchgfx7Outline10renderLineEiiii+0x182>
 800dc7e:	9a04      	ldr	r2, [sp, #16]
 800dc80:	1ad3      	subs	r3, r2, r3
 800dc82:	6902      	ldr	r2, [r0, #16]
 800dc84:	8891      	ldrh	r1, [r2, #4]
 800dc86:	88d6      	ldrh	r6, [r2, #6]
 800dc88:	4419      	add	r1, r3
 800dc8a:	8091      	strh	r1, [r2, #4]
 800dc8c:	9902      	ldr	r1, [sp, #8]
 800dc8e:	f101 0c20 	add.w	ip, r1, #32
 800dc92:	9901      	ldr	r1, [sp, #4]
 800dc94:	ebac 0c01 	sub.w	ip, ip, r1
 800dc98:	fb03 630c 	mla	r3, r3, ip, r6
 800dc9c:	80d3      	strh	r3, [r2, #6]
 800dc9e:	e74c      	b.n	800db3a <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 800dca0:	9d05      	ldr	r5, [sp, #20]
 800dca2:	1aa2      	subs	r2, r4, r2
 800dca4:	eba5 0501 	sub.w	r5, r5, r1
 800dca8:	9508      	str	r5, [sp, #32]
 800dcaa:	9202      	str	r2, [sp, #8]
 800dcac:	f140 8128 	bpl.w	800df00 <_ZN8touchgfx7Outline10renderLineEiiii+0x478>
 800dcb0:	9a03      	ldr	r2, [sp, #12]
 800dcb2:	2a00      	cmp	r2, #0
 800dcb4:	f6ff af41 	blt.w	800db3a <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 800dcb8:	9a02      	ldr	r2, [sp, #8]
 800dcba:	4252      	negs	r2, r2
 800dcbc:	9202      	str	r2, [sp, #8]
 800dcbe:	9a06      	ldr	r2, [sp, #24]
 800dcc0:	ea42 72e2 	orr.w	r2, r2, r2, asr #31
 800dcc4:	f04f 34ff 	mov.w	r4, #4294967295
 800dcc8:	9206      	str	r2, [sp, #24]
 800dcca:	462a      	mov	r2, r5
 800dccc:	940b      	str	r4, [sp, #44]	@ 0x2c
 800dcce:	435a      	muls	r2, r3
 800dcd0:	2400      	movs	r4, #0
 800dcd2:	9d02      	ldr	r5, [sp, #8]
 800dcd4:	9401      	str	r4, [sp, #4]
 800dcd6:	9c02      	ldr	r4, [sp, #8]
 800dcd8:	fb92 f4f4 	sdiv	r4, r2, r4
 800dcdc:	fb05 2214 	mls	r2, r5, r4, r2
 800dce0:	2a00      	cmp	r2, #0
 800dce2:	9207      	str	r2, [sp, #28]
 800dce4:	bfbc      	itt	lt
 800dce6:	1952      	addlt	r2, r2, r5
 800dce8:	9207      	strlt	r2, [sp, #28]
 800dcea:	9a01      	ldr	r2, [sp, #4]
 800dcec:	6905      	ldr	r5, [r0, #16]
 800dcee:	bfb8      	it	lt
 800dcf0:	f104 34ff 	addlt.w	r4, r4, #4294967295
 800dcf4:	eb04 0901 	add.w	r9, r4, r1
 800dcf8:	429a      	cmp	r2, r3
 800dcfa:	ea4f 1669 	mov.w	r6, r9, asr #5
 800dcfe:	f040 8112 	bne.w	800df26 <_ZN8touchgfx7Outline10renderLineEiiii+0x49e>
 800dd02:	f9b5 3000 	ldrsh.w	r3, [r5]
 800dd06:	429e      	cmp	r6, r3
 800dd08:	d104      	bne.n	800dd14 <_ZN8touchgfx7Outline10renderLineEiiii+0x28c>
 800dd0a:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 800dd0e:	9a03      	ldr	r2, [sp, #12]
 800dd10:	429a      	cmp	r2, r3
 800dd12:	d01b      	beq.n	800dd4c <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 800dd14:	88ea      	ldrh	r2, [r5, #6]
 800dd16:	88ab      	ldrh	r3, [r5, #4]
 800dd18:	4313      	orrs	r3, r2
 800dd1a:	d010      	beq.n	800dd3e <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 800dd1c:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 800dd20:	2a00      	cmp	r2, #0
 800dd22:	db0c      	blt.n	800dd3e <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 800dd24:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 800dd26:	429a      	cmp	r2, r3
 800dd28:	da09      	bge.n	800dd3e <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 800dd2a:	e9d0 3201 	ldrd	r3, r2, [r0, #4]
 800dd2e:	429a      	cmp	r2, r3
 800dd30:	bf38      	it	cc
 800dd32:	3508      	addcc	r5, #8
 800dd34:	f102 0201 	add.w	r2, r2, #1
 800dd38:	bf38      	it	cc
 800dd3a:	6105      	strcc	r5, [r0, #16]
 800dd3c:	6082      	str	r2, [r0, #8]
 800dd3e:	6903      	ldr	r3, [r0, #16]
 800dd40:	9a03      	ldr	r2, [sp, #12]
 800dd42:	805a      	strh	r2, [r3, #2]
 800dd44:	2200      	movs	r2, #0
 800dd46:	801e      	strh	r6, [r3, #0]
 800dd48:	809a      	strh	r2, [r3, #4]
 800dd4a:	80da      	strh	r2, [r3, #6]
 800dd4c:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 800dd4e:	9a03      	ldr	r2, [sp, #12]
 800dd50:	6901      	ldr	r1, [r0, #16]
 800dd52:	441a      	add	r2, r3
 800dd54:	f9b1 3000 	ldrsh.w	r3, [r1]
 800dd58:	42b3      	cmp	r3, r6
 800dd5a:	d103      	bne.n	800dd64 <_ZN8touchgfx7Outline10renderLineEiiii+0x2dc>
 800dd5c:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 800dd60:	429a      	cmp	r2, r3
 800dd62:	d01a      	beq.n	800dd9a <_ZN8touchgfx7Outline10renderLineEiiii+0x312>
 800dd64:	88cc      	ldrh	r4, [r1, #6]
 800dd66:	888b      	ldrh	r3, [r1, #4]
 800dd68:	4323      	orrs	r3, r4
 800dd6a:	d010      	beq.n	800dd8e <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 800dd6c:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
 800dd70:	2c00      	cmp	r4, #0
 800dd72:	db0c      	blt.n	800dd8e <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 800dd74:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 800dd76:	429c      	cmp	r4, r3
 800dd78:	da09      	bge.n	800dd8e <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 800dd7a:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 800dd7e:	429c      	cmp	r4, r3
 800dd80:	bf38      	it	cc
 800dd82:	3108      	addcc	r1, #8
 800dd84:	f104 0401 	add.w	r4, r4, #1
 800dd88:	bf38      	it	cc
 800dd8a:	6101      	strcc	r1, [r0, #16]
 800dd8c:	6084      	str	r4, [r0, #8]
 800dd8e:	6903      	ldr	r3, [r0, #16]
 800dd90:	2100      	movs	r1, #0
 800dd92:	801e      	strh	r6, [r3, #0]
 800dd94:	805a      	strh	r2, [r3, #2]
 800dd96:	8099      	strh	r1, [r3, #4]
 800dd98:	80d9      	strh	r1, [r3, #6]
 800dd9a:	9b06      	ldr	r3, [sp, #24]
 800dd9c:	4293      	cmp	r3, r2
 800dd9e:	f000 8082 	beq.w	800dea6 <_ZN8touchgfx7Outline10renderLineEiiii+0x41e>
 800dda2:	9b08      	ldr	r3, [sp, #32]
 800dda4:	9c02      	ldr	r4, [sp, #8]
 800dda6:	9902      	ldr	r1, [sp, #8]
 800dda8:	015b      	lsls	r3, r3, #5
 800ddaa:	fb93 f1f1 	sdiv	r1, r3, r1
 800ddae:	fb04 3311 	mls	r3, r4, r1, r3
 800ddb2:	2b00      	cmp	r3, #0
 800ddb4:	9103      	str	r1, [sp, #12]
 800ddb6:	9308      	str	r3, [sp, #32]
 800ddb8:	da04      	bge.n	800ddc4 <_ZN8touchgfx7Outline10renderLineEiiii+0x33c>
 800ddba:	1e4b      	subs	r3, r1, #1
 800ddbc:	9303      	str	r3, [sp, #12]
 800ddbe:	9b08      	ldr	r3, [sp, #32]
 800ddc0:	4423      	add	r3, r4
 800ddc2:	9308      	str	r3, [sp, #32]
 800ddc4:	9b07      	ldr	r3, [sp, #28]
 800ddc6:	9902      	ldr	r1, [sp, #8]
 800ddc8:	1a5b      	subs	r3, r3, r1
 800ddca:	9307      	str	r3, [sp, #28]
 800ddcc:	9b01      	ldr	r3, [sp, #4]
 800ddce:	f1c3 0320 	rsb	r3, r3, #32
 800ddd2:	930e      	str	r3, [sp, #56]	@ 0x38
 800ddd4:	990e      	ldr	r1, [sp, #56]	@ 0x38
 800ddd6:	9b01      	ldr	r3, [sp, #4]
 800ddd8:	1a5b      	subs	r3, r3, r1
 800ddda:	464f      	mov	r7, r9
 800dddc:	930a      	str	r3, [sp, #40]	@ 0x28
 800ddde:	2600      	movs	r6, #0
 800dde0:	e9dd 3107 	ldrd	r3, r1, [sp, #28]
 800dde4:	185b      	adds	r3, r3, r1
 800dde6:	bf58      	it	pl
 800dde8:	9902      	ldrpl	r1, [sp, #8]
 800ddea:	9307      	str	r3, [sp, #28]
 800ddec:	bf5d      	ittte	pl
 800ddee:	1a5b      	subpl	r3, r3, r1
 800ddf0:	9307      	strpl	r3, [sp, #28]
 800ddf2:	9b03      	ldrpl	r3, [sp, #12]
 800ddf4:	9903      	ldrmi	r1, [sp, #12]
 800ddf6:	bf58      	it	pl
 800ddf8:	1c59      	addpl	r1, r3, #1
 800ddfa:	4489      	add	r9, r1
 800ddfc:	2a00      	cmp	r2, #0
 800ddfe:	ea4f 1a69 	mov.w	sl, r9, asr #5
 800de02:	db2e      	blt.n	800de62 <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 800de04:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 800de06:	4293      	cmp	r3, r2
 800de08:	dd2b      	ble.n	800de62 <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 800de0a:	9c01      	ldr	r4, [sp, #4]
 800de0c:	6905      	ldr	r5, [r0, #16]
 800de0e:	46a0      	mov	r8, r4
 800de10:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 800de12:	f9b5 c004 	ldrsh.w	ip, [r5, #4]
 800de16:	f9b5 e006 	ldrsh.w	lr, [r5, #6]
 800de1a:	45a0      	cmp	r8, r4
 800de1c:	f040 814f 	bne.w	800e0be <_ZN8touchgfx7Outline10renderLineEiiii+0x636>
 800de20:	f9b5 1000 	ldrsh.w	r1, [r5]
 800de24:	4551      	cmp	r1, sl
 800de26:	d103      	bne.n	800de30 <_ZN8touchgfx7Outline10renderLineEiiii+0x3a8>
 800de28:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
 800de2c:	4291      	cmp	r1, r2
 800de2e:	d018      	beq.n	800de62 <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 800de30:	ea5c 010e 	orrs.w	r1, ip, lr
 800de34:	d00f      	beq.n	800de56 <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 800de36:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
 800de3a:	2900      	cmp	r1, #0
 800de3c:	db0b      	blt.n	800de56 <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 800de3e:	428b      	cmp	r3, r1
 800de40:	dd09      	ble.n	800de56 <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 800de42:	e9d0 3101 	ldrd	r3, r1, [r0, #4]
 800de46:	4299      	cmp	r1, r3
 800de48:	bf38      	it	cc
 800de4a:	3508      	addcc	r5, #8
 800de4c:	f101 0101 	add.w	r1, r1, #1
 800de50:	bf38      	it	cc
 800de52:	6105      	strcc	r5, [r0, #16]
 800de54:	6081      	str	r1, [r0, #8]
 800de56:	6903      	ldr	r3, [r0, #16]
 800de58:	f8a3 a000 	strh.w	sl, [r3]
 800de5c:	805a      	strh	r2, [r3, #2]
 800de5e:	809e      	strh	r6, [r3, #4]
 800de60:	80de      	strh	r6, [r3, #6]
 800de62:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 800de64:	6901      	ldr	r1, [r0, #16]
 800de66:	441a      	add	r2, r3
 800de68:	88cc      	ldrh	r4, [r1, #6]
 800de6a:	888b      	ldrh	r3, [r1, #4]
 800de6c:	4323      	orrs	r3, r4
 800de6e:	d010      	beq.n	800de92 <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 800de70:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
 800de74:	2c00      	cmp	r4, #0
 800de76:	db0c      	blt.n	800de92 <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 800de78:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 800de7a:	429c      	cmp	r4, r3
 800de7c:	da09      	bge.n	800de92 <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 800de7e:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 800de82:	429c      	cmp	r4, r3
 800de84:	bf38      	it	cc
 800de86:	3108      	addcc	r1, #8
 800de88:	f104 0401 	add.w	r4, r4, #1
 800de8c:	bf38      	it	cc
 800de8e:	6101      	strcc	r1, [r0, #16]
 800de90:	6084      	str	r4, [r0, #8]
 800de92:	6903      	ldr	r3, [r0, #16]
 800de94:	f8a3 a000 	strh.w	sl, [r3]
 800de98:	805a      	strh	r2, [r3, #2]
 800de9a:	809e      	strh	r6, [r3, #4]
 800de9c:	80de      	strh	r6, [r3, #6]
 800de9e:	9b06      	ldr	r3, [sp, #24]
 800dea0:	4293      	cmp	r3, r2
 800dea2:	464f      	mov	r7, r9
 800dea4:	d19c      	bne.n	800dde0 <_ZN8touchgfx7Outline10renderLineEiiii+0x358>
 800dea6:	9b01      	ldr	r3, [sp, #4]
 800dea8:	6907      	ldr	r7, [r0, #16]
 800deaa:	f1c3 0620 	rsb	r6, r3, #32
 800deae:	9b05      	ldr	r3, [sp, #20]
 800deb0:	ea4f 1e63 	mov.w	lr, r3, asr #5
 800deb4:	9b04      	ldr	r3, [sp, #16]
 800deb6:	429e      	cmp	r6, r3
 800deb8:	f040 81cc 	bne.w	800e254 <_ZN8touchgfx7Outline10renderLineEiiii+0x7cc>
 800debc:	f9b7 3000 	ldrsh.w	r3, [r7]
 800dec0:	459e      	cmp	lr, r3
 800dec2:	d104      	bne.n	800dece <_ZN8touchgfx7Outline10renderLineEiiii+0x446>
 800dec4:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 800dec8:	429a      	cmp	r2, r3
 800deca:	f43f ae36 	beq.w	800db3a <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 800dece:	88f9      	ldrh	r1, [r7, #6]
 800ded0:	88bb      	ldrh	r3, [r7, #4]
 800ded2:	430b      	orrs	r3, r1
 800ded4:	d010      	beq.n	800def8 <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 800ded6:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 800deda:	2b00      	cmp	r3, #0
 800dedc:	db0c      	blt.n	800def8 <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 800dede:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
 800dee0:	428b      	cmp	r3, r1
 800dee2:	da09      	bge.n	800def8 <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 800dee4:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
 800dee8:	428b      	cmp	r3, r1
 800deea:	bf38      	it	cc
 800deec:	3708      	addcc	r7, #8
 800deee:	f103 0301 	add.w	r3, r3, #1
 800def2:	bf38      	it	cc
 800def4:	6107      	strcc	r7, [r0, #16]
 800def6:	6083      	str	r3, [r0, #8]
 800def8:	6903      	ldr	r3, [r0, #16]
 800defa:	f8a3 e000 	strh.w	lr, [r3]
 800defe:	e5ff      	b.n	800db00 <_ZN8touchgfx7Outline10renderLineEiiii+0x78>
 800df00:	6ac2      	ldr	r2, [r0, #44]	@ 0x2c
 800df02:	9c03      	ldr	r4, [sp, #12]
 800df04:	42a2      	cmp	r2, r4
 800df06:	f6ff ae18 	blt.w	800db3a <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 800df0a:	9c06      	ldr	r4, [sp, #24]
 800df0c:	42a2      	cmp	r2, r4
 800df0e:	bfb8      	it	lt
 800df10:	3201      	addlt	r2, #1
 800df12:	9c08      	ldr	r4, [sp, #32]
 800df14:	bfb8      	it	lt
 800df16:	9206      	strlt	r2, [sp, #24]
 800df18:	f1c3 0220 	rsb	r2, r3, #32
 800df1c:	4362      	muls	r2, r4
 800df1e:	2401      	movs	r4, #1
 800df20:	940b      	str	r4, [sp, #44]	@ 0x2c
 800df22:	2420      	movs	r4, #32
 800df24:	e6d5      	b.n	800dcd2 <_ZN8touchgfx7Outline10renderLineEiiii+0x24a>
 800df26:	f009 021f 	and.w	r2, r9, #31
 800df2a:	ea4f 1861 	mov.w	r8, r1, asr #5
 800df2e:	920c      	str	r2, [sp, #48]	@ 0x30
 800df30:	9a01      	ldr	r2, [sp, #4]
 800df32:	f8b5 e004 	ldrh.w	lr, [r5, #4]
 800df36:	f8b5 a006 	ldrh.w	sl, [r5, #6]
 800df3a:	45b0      	cmp	r8, r6
 800df3c:	f001 011f 	and.w	r1, r1, #31
 800df40:	eba2 0203 	sub.w	r2, r2, r3
 800df44:	d108      	bne.n	800df58 <_ZN8touchgfx7Outline10renderLineEiiii+0x4d0>
 800df46:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 800df48:	4419      	add	r1, r3
 800df4a:	4496      	add	lr, r2
 800df4c:	fb02 a101 	mla	r1, r2, r1, sl
 800df50:	f8a5 e004 	strh.w	lr, [r5, #4]
 800df54:	80e9      	strh	r1, [r5, #6]
 800df56:	e6f9      	b.n	800dd4c <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 800df58:	2c00      	cmp	r4, #0
 800df5a:	f2c0 80a9 	blt.w	800e0b0 <_ZN8touchgfx7Outline10renderLineEiiii+0x628>
 800df5e:	2701      	movs	r7, #1
 800df60:	f1c1 0c20 	rsb	ip, r1, #32
 800df64:	970a      	str	r7, [sp, #40]	@ 0x28
 800df66:	fb02 f20c 	mul.w	r2, r2, ip
 800df6a:	2720      	movs	r7, #32
 800df6c:	9709      	str	r7, [sp, #36]	@ 0x24
 800df6e:	fb92 fcf4 	sdiv	ip, r2, r4
 800df72:	9f09      	ldr	r7, [sp, #36]	@ 0x24
 800df74:	fb04 221c 	mls	r2, r4, ip, r2
 800df78:	2a00      	cmp	r2, #0
 800df7a:	bfb8      	it	lt
 800df7c:	f10c 3cff 	addlt.w	ip, ip, #4294967295
 800df80:	4439      	add	r1, r7
 800df82:	fb0c a101 	mla	r1, ip, r1, sl
 800df86:	80e9      	strh	r1, [r5, #6]
 800df88:	44e6      	add	lr, ip
 800df8a:	990a      	ldr	r1, [sp, #40]	@ 0x28
 800df8c:	f8a5 e004 	strh.w	lr, [r5, #4]
 800df90:	eb08 0501 	add.w	r5, r8, r1
 800df94:	6901      	ldr	r1, [r0, #16]
 800df96:	f8b1 8006 	ldrh.w	r8, [r1, #6]
 800df9a:	f8b1 e004 	ldrh.w	lr, [r1, #4]
 800df9e:	bfb8      	it	lt
 800dfa0:	1912      	addlt	r2, r2, r4
 800dfa2:	ea58 070e 	orrs.w	r7, r8, lr
 800dfa6:	d010      	beq.n	800dfca <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 800dfa8:	f9b1 e002 	ldrsh.w	lr, [r1, #2]
 800dfac:	f1be 0f00 	cmp.w	lr, #0
 800dfb0:	db0b      	blt.n	800dfca <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 800dfb2:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
 800dfb4:	45be      	cmp	lr, r7
 800dfb6:	da08      	bge.n	800dfca <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 800dfb8:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
 800dfbc:	45be      	cmp	lr, r7
 800dfbe:	bf3c      	itt	cc
 800dfc0:	3108      	addcc	r1, #8
 800dfc2:	6101      	strcc	r1, [r0, #16]
 800dfc4:	f10e 0101 	add.w	r1, lr, #1
 800dfc8:	6081      	str	r1, [r0, #8]
 800dfca:	6901      	ldr	r1, [r0, #16]
 800dfcc:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 800dfd0:	800d      	strh	r5, [r1, #0]
 800dfd2:	f04f 0e00 	mov.w	lr, #0
 800dfd6:	42ae      	cmp	r6, r5
 800dfd8:	f8a1 8002 	strh.w	r8, [r1, #2]
 800dfdc:	f8a1 e004 	strh.w	lr, [r1, #4]
 800dfe0:	f8a1 e006 	strh.w	lr, [r1, #6]
 800dfe4:	4463      	add	r3, ip
 800dfe6:	d054      	beq.n	800e092 <_ZN8touchgfx7Outline10renderLineEiiii+0x60a>
 800dfe8:	9901      	ldr	r1, [sp, #4]
 800dfea:	1ac9      	subs	r1, r1, r3
 800dfec:	4461      	add	r1, ip
 800dfee:	0149      	lsls	r1, r1, #5
 800dff0:	fb91 fef4 	sdiv	lr, r1, r4
 800dff4:	fb04 111e 	mls	r1, r4, lr, r1
 800dff8:	2900      	cmp	r1, #0
 800dffa:	bfb8      	it	lt
 800dffc:	f10e 3eff 	addlt.w	lr, lr, #4294967295
 800e000:	f10e 0701 	add.w	r7, lr, #1
 800e004:	bfb8      	it	lt
 800e006:	1909      	addlt	r1, r1, r4
 800e008:	1b12      	subs	r2, r2, r4
 800e00a:	970d      	str	r7, [sp, #52]	@ 0x34
 800e00c:	f8d0 a010 	ldr.w	sl, [r0, #16]
 800e010:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
 800e012:	f8ba b004 	ldrh.w	fp, [sl, #4]
 800e016:	1852      	adds	r2, r2, r1
 800e018:	bf54      	ite	pl
 800e01a:	f8dd c034 	ldrpl.w	ip, [sp, #52]	@ 0x34
 800e01e:	46f4      	movmi	ip, lr
 800e020:	44e3      	add	fp, ip
 800e022:	f8aa b004 	strh.w	fp, [sl, #4]
 800e026:	f8ba b006 	ldrh.w	fp, [sl, #6]
 800e02a:	eb0b 1b4c 	add.w	fp, fp, ip, lsl #5
 800e02e:	f8aa b006 	strh.w	fp, [sl, #6]
 800e032:	4463      	add	r3, ip
 800e034:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800e038:	f8bc b006 	ldrh.w	fp, [ip, #6]
 800e03c:	f8bc a004 	ldrh.w	sl, [ip, #4]
 800e040:	bf58      	it	pl
 800e042:	1b12      	subpl	r2, r2, r4
 800e044:	443d      	add	r5, r7
 800e046:	ea5b 070a 	orrs.w	r7, fp, sl
 800e04a:	d014      	beq.n	800e076 <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 800e04c:	f9bc a002 	ldrsh.w	sl, [ip, #2]
 800e050:	f1ba 0f00 	cmp.w	sl, #0
 800e054:	db0f      	blt.n	800e076 <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 800e056:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
 800e058:	45ba      	cmp	sl, r7
 800e05a:	da0c      	bge.n	800e076 <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 800e05c:	e9d0 7a01 	ldrd	r7, sl, [r0, #4]
 800e060:	45ba      	cmp	sl, r7
 800e062:	bf38      	it	cc
 800e064:	f10c 0c08 	addcc.w	ip, ip, #8
 800e068:	f10a 0a01 	add.w	sl, sl, #1
 800e06c:	bf38      	it	cc
 800e06e:	f8c0 c010 	strcc.w	ip, [r0, #16]
 800e072:	f8c0 a008 	str.w	sl, [r0, #8]
 800e076:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800e07a:	f04f 0700 	mov.w	r7, #0
 800e07e:	42ae      	cmp	r6, r5
 800e080:	f8ac 5000 	strh.w	r5, [ip]
 800e084:	f8ac 8002 	strh.w	r8, [ip, #2]
 800e088:	f8ac 7004 	strh.w	r7, [ip, #4]
 800e08c:	f8ac 7006 	strh.w	r7, [ip, #6]
 800e090:	d1bc      	bne.n	800e00c <_ZN8touchgfx7Outline10renderLineEiiii+0x584>
 800e092:	6904      	ldr	r4, [r0, #16]
 800e094:	9a01      	ldr	r2, [sp, #4]
 800e096:	990c      	ldr	r1, [sp, #48]	@ 0x30
 800e098:	1ad3      	subs	r3, r2, r3
 800e09a:	88a2      	ldrh	r2, [r4, #4]
 800e09c:	441a      	add	r2, r3
 800e09e:	80a2      	strh	r2, [r4, #4]
 800e0a0:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 800e0a2:	3120      	adds	r1, #32
 800e0a4:	1a89      	subs	r1, r1, r2
 800e0a6:	88e2      	ldrh	r2, [r4, #6]
 800e0a8:	fb03 2301 	mla	r3, r3, r1, r2
 800e0ac:	80e3      	strh	r3, [r4, #6]
 800e0ae:	e64d      	b.n	800dd4c <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 800e0b0:	f04f 37ff 	mov.w	r7, #4294967295
 800e0b4:	970a      	str	r7, [sp, #40]	@ 0x28
 800e0b6:	434a      	muls	r2, r1
 800e0b8:	4264      	negs	r4, r4
 800e0ba:	2700      	movs	r7, #0
 800e0bc:	e756      	b.n	800df6c <_ZN8touchgfx7Outline10renderLineEiiii+0x4e4>
 800e0be:	ea4f 1867 	mov.w	r8, r7, asr #5
 800e0c2:	f009 031f 	and.w	r3, r9, #31
 800e0c6:	45d0      	cmp	r8, sl
 800e0c8:	f007 071f 	and.w	r7, r7, #31
 800e0cc:	930f      	str	r3, [sp, #60]	@ 0x3c
 800e0ce:	fa1f fc8c 	uxth.w	ip, ip
 800e0d2:	fa1f fe8e 	uxth.w	lr, lr
 800e0d6:	d10a      	bne.n	800e0ee <_ZN8touchgfx7Outline10renderLineEiiii+0x666>
 800e0d8:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 800e0da:	449c      	add	ip, r3
 800e0dc:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800e0de:	f8a5 c004 	strh.w	ip, [r5, #4]
 800e0e2:	441f      	add	r7, r3
 800e0e4:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 800e0e6:	fb03 e707 	mla	r7, r3, r7, lr
 800e0ea:	80ef      	strh	r7, [r5, #6]
 800e0ec:	e6b9      	b.n	800de62 <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 800e0ee:	2900      	cmp	r1, #0
 800e0f0:	f2c0 80a8 	blt.w	800e244 <_ZN8touchgfx7Outline10renderLineEiiii+0x7bc>
 800e0f4:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 800e0f6:	f1c7 0320 	rsb	r3, r7, #32
 800e0fa:	4363      	muls	r3, r4
 800e0fc:	2401      	movs	r4, #1
 800e0fe:	940d      	str	r4, [sp, #52]	@ 0x34
 800e100:	2420      	movs	r4, #32
 800e102:	940c      	str	r4, [sp, #48]	@ 0x30
 800e104:	fb93 f4f1 	sdiv	r4, r3, r1
 800e108:	fb01 3b14 	mls	fp, r1, r4, r3
 800e10c:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 800e10e:	f1bb 0f00 	cmp.w	fp, #0
 800e112:	bfb8      	it	lt
 800e114:	f104 34ff 	addlt.w	r4, r4, #4294967295
 800e118:	441f      	add	r7, r3
 800e11a:	fb04 e707 	mla	r7, r4, r7, lr
 800e11e:	44a4      	add	ip, r4
 800e120:	f8a5 c004 	strh.w	ip, [r5, #4]
 800e124:	80ef      	strh	r7, [r5, #6]
 800e126:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800e12a:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 800e12c:	f8bc e006 	ldrh.w	lr, [ip, #6]
 800e130:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 800e134:	bfb8      	it	lt
 800e136:	448b      	addlt	fp, r1
 800e138:	eb08 0503 	add.w	r5, r8, r3
 800e13c:	ea5e 0307 	orrs.w	r3, lr, r7
 800e140:	d011      	beq.n	800e166 <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 800e142:	f9bc e002 	ldrsh.w	lr, [ip, #2]
 800e146:	f1be 0f00 	cmp.w	lr, #0
 800e14a:	db0c      	blt.n	800e166 <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 800e14c:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
 800e14e:	45be      	cmp	lr, r7
 800e150:	da09      	bge.n	800e166 <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 800e152:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
 800e156:	45be      	cmp	lr, r7
 800e158:	bf3c      	itt	cc
 800e15a:	f10c 0708 	addcc.w	r7, ip, #8
 800e15e:	6107      	strcc	r7, [r0, #16]
 800e160:	f10e 0701 	add.w	r7, lr, #1
 800e164:	6087      	str	r7, [r0, #8]
 800e166:	6907      	ldr	r7, [r0, #16]
 800e168:	b213      	sxth	r3, r2
 800e16a:	9310      	str	r3, [sp, #64]	@ 0x40
 800e16c:	807b      	strh	r3, [r7, #2]
 800e16e:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800e170:	803d      	strh	r5, [r7, #0]
 800e172:	4555      	cmp	r5, sl
 800e174:	80be      	strh	r6, [r7, #4]
 800e176:	80fe      	strh	r6, [r7, #6]
 800e178:	eb04 0c03 	add.w	ip, r4, r3
 800e17c:	d051      	beq.n	800e222 <_ZN8touchgfx7Outline10renderLineEiiii+0x79a>
 800e17e:	9b01      	ldr	r3, [sp, #4]
 800e180:	eba3 070c 	sub.w	r7, r3, ip
 800e184:	443c      	add	r4, r7
 800e186:	0164      	lsls	r4, r4, #5
 800e188:	fb94 f8f1 	sdiv	r8, r4, r1
 800e18c:	fb01 4418 	mls	r4, r1, r8, r4
 800e190:	2c00      	cmp	r4, #0
 800e192:	bfb8      	it	lt
 800e194:	f108 38ff 	addlt.w	r8, r8, #4294967295
 800e198:	ebab 0301 	sub.w	r3, fp, r1
 800e19c:	f108 0701 	add.w	r7, r8, #1
 800e1a0:	bfb8      	it	lt
 800e1a2:	1864      	addlt	r4, r4, r1
 800e1a4:	9309      	str	r3, [sp, #36]	@ 0x24
 800e1a6:	9711      	str	r7, [sp, #68]	@ 0x44
 800e1a8:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800e1aa:	f8d0 e010 	ldr.w	lr, [r0, #16]
 800e1ae:	191b      	adds	r3, r3, r4
 800e1b0:	bf58      	it	pl
 800e1b2:	9f11      	ldrpl	r7, [sp, #68]	@ 0x44
 800e1b4:	f8be b004 	ldrh.w	fp, [lr, #4]
 800e1b8:	9309      	str	r3, [sp, #36]	@ 0x24
 800e1ba:	bf48      	it	mi
 800e1bc:	4647      	movmi	r7, r8
 800e1be:	44bb      	add	fp, r7
 800e1c0:	f8ae b004 	strh.w	fp, [lr, #4]
 800e1c4:	f8be b006 	ldrh.w	fp, [lr, #6]
 800e1c8:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 800e1cc:	f8ae b006 	strh.w	fp, [lr, #6]
 800e1d0:	f8d0 e010 	ldr.w	lr, [r0, #16]
 800e1d4:	44bc      	add	ip, r7
 800e1d6:	9f0d      	ldr	r7, [sp, #52]	@ 0x34
 800e1d8:	f8be b006 	ldrh.w	fp, [lr, #6]
 800e1dc:	443d      	add	r5, r7
 800e1de:	f8be 7004 	ldrh.w	r7, [lr, #4]
 800e1e2:	bf5c      	itt	pl
 800e1e4:	1a5b      	subpl	r3, r3, r1
 800e1e6:	9309      	strpl	r3, [sp, #36]	@ 0x24
 800e1e8:	ea5b 0307 	orrs.w	r3, fp, r7
 800e1ec:	d011      	beq.n	800e212 <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 800e1ee:	f9be b002 	ldrsh.w	fp, [lr, #2]
 800e1f2:	f1bb 0f00 	cmp.w	fp, #0
 800e1f6:	db0c      	blt.n	800e212 <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 800e1f8:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
 800e1fa:	45bb      	cmp	fp, r7
 800e1fc:	da09      	bge.n	800e212 <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 800e1fe:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 800e202:	45bb      	cmp	fp, r7
 800e204:	bf3c      	itt	cc
 800e206:	f10e 0708 	addcc.w	r7, lr, #8
 800e20a:	6107      	strcc	r7, [r0, #16]
 800e20c:	f10b 0701 	add.w	r7, fp, #1
 800e210:	6087      	str	r7, [r0, #8]
 800e212:	6907      	ldr	r7, [r0, #16]
 800e214:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 800e216:	803d      	strh	r5, [r7, #0]
 800e218:	4555      	cmp	r5, sl
 800e21a:	807b      	strh	r3, [r7, #2]
 800e21c:	80be      	strh	r6, [r7, #4]
 800e21e:	80fe      	strh	r6, [r7, #6]
 800e220:	d1c2      	bne.n	800e1a8 <_ZN8touchgfx7Outline10renderLineEiiii+0x720>
 800e222:	9b01      	ldr	r3, [sp, #4]
 800e224:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 800e226:	eba3 0c0c 	sub.w	ip, r3, ip
 800e22a:	6903      	ldr	r3, [r0, #16]
 800e22c:	8899      	ldrh	r1, [r3, #4]
 800e22e:	4461      	add	r1, ip
 800e230:	8099      	strh	r1, [r3, #4]
 800e232:	990c      	ldr	r1, [sp, #48]	@ 0x30
 800e234:	3720      	adds	r7, #32
 800e236:	1a7f      	subs	r7, r7, r1
 800e238:	88d9      	ldrh	r1, [r3, #6]
 800e23a:	fb0c 1c07 	mla	ip, ip, r7, r1
 800e23e:	f8a3 c006 	strh.w	ip, [r3, #6]
 800e242:	e60e      	b.n	800de62 <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 800e244:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 800e246:	f04f 34ff 	mov.w	r4, #4294967295
 800e24a:	940d      	str	r4, [sp, #52]	@ 0x34
 800e24c:	437b      	muls	r3, r7
 800e24e:	4249      	negs	r1, r1
 800e250:	2400      	movs	r4, #0
 800e252:	e756      	b.n	800e102 <_ZN8touchgfx7Outline10renderLineEiiii+0x67a>
 800e254:	9905      	ldr	r1, [sp, #20]
 800e256:	f8b7 8004 	ldrh.w	r8, [r7, #4]
 800e25a:	f8b7 a006 	ldrh.w	sl, [r7, #6]
 800e25e:	f001 011f 	and.w	r1, r1, #31
 800e262:	ea4f 1b69 	mov.w	fp, r9, asr #5
 800e266:	9102      	str	r1, [sp, #8]
 800e268:	9904      	ldr	r1, [sp, #16]
 800e26a:	45f3      	cmp	fp, lr
 800e26c:	f009 0c1f 	and.w	ip, r9, #31
 800e270:	eba1 0406 	sub.w	r4, r1, r6
 800e274:	d108      	bne.n	800e288 <_ZN8touchgfx7Outline10renderLineEiiii+0x800>
 800e276:	9b02      	ldr	r3, [sp, #8]
 800e278:	449c      	add	ip, r3
 800e27a:	44a0      	add	r8, r4
 800e27c:	fb04 a40c 	mla	r4, r4, ip, sl
 800e280:	f8a7 8004 	strh.w	r8, [r7, #4]
 800e284:	80fc      	strh	r4, [r7, #6]
 800e286:	e458      	b.n	800db3a <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 800e288:	9905      	ldr	r1, [sp, #20]
 800e28a:	ebb1 0109 	subs.w	r1, r1, r9
 800e28e:	bf5b      	ittet	pl
 800e290:	f1cc 0520 	rsbpl	r5, ip, #32
 800e294:	436c      	mulpl	r4, r5
 800e296:	2500      	movmi	r5, #0
 800e298:	2520      	movpl	r5, #32
 800e29a:	bf44      	itt	mi
 800e29c:	fb04 f40c 	mulmi.w	r4, r4, ip
 800e2a0:	4249      	negmi	r1, r1
 800e2a2:	9501      	str	r5, [sp, #4]
 800e2a4:	9b01      	ldr	r3, [sp, #4]
 800e2a6:	fb94 f5f1 	sdiv	r5, r4, r1
 800e2aa:	fb01 4415 	mls	r4, r1, r5, r4
 800e2ae:	bf54      	ite	pl
 800e2b0:	f04f 0901 	movpl.w	r9, #1
 800e2b4:	f04f 39ff 	movmi.w	r9, #4294967295
 800e2b8:	2c00      	cmp	r4, #0
 800e2ba:	bfb8      	it	lt
 800e2bc:	f105 35ff 	addlt.w	r5, r5, #4294967295
 800e2c0:	449c      	add	ip, r3
 800e2c2:	44a8      	add	r8, r5
 800e2c4:	fb05 ac0c 	mla	ip, r5, ip, sl
 800e2c8:	f8a7 8004 	strh.w	r8, [r7, #4]
 800e2cc:	f8a7 c006 	strh.w	ip, [r7, #6]
 800e2d0:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800e2d4:	f8bc 8006 	ldrh.w	r8, [ip, #6]
 800e2d8:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 800e2dc:	bfb8      	it	lt
 800e2de:	1864      	addlt	r4, r4, r1
 800e2e0:	ea58 0707 	orrs.w	r7, r8, r7
 800e2e4:	eb0b 0309 	add.w	r3, fp, r9
 800e2e8:	d011      	beq.n	800e30e <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 800e2ea:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
 800e2ee:	f1b8 0f00 	cmp.w	r8, #0
 800e2f2:	db0c      	blt.n	800e30e <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 800e2f4:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
 800e2f6:	45b8      	cmp	r8, r7
 800e2f8:	da09      	bge.n	800e30e <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 800e2fa:	e9d0 7801 	ldrd	r7, r8, [r0, #4]
 800e2fe:	45b8      	cmp	r8, r7
 800e300:	bf3c      	itt	cc
 800e302:	f10c 0708 	addcc.w	r7, ip, #8
 800e306:	6107      	strcc	r7, [r0, #16]
 800e308:	f108 0701 	add.w	r7, r8, #1
 800e30c:	6087      	str	r7, [r0, #8]
 800e30e:	6907      	ldr	r7, [r0, #16]
 800e310:	f04f 0c00 	mov.w	ip, #0
 800e314:	b212      	sxth	r2, r2
 800e316:	459e      	cmp	lr, r3
 800e318:	803b      	strh	r3, [r7, #0]
 800e31a:	807a      	strh	r2, [r7, #2]
 800e31c:	f8a7 c004 	strh.w	ip, [r7, #4]
 800e320:	f8a7 c006 	strh.w	ip, [r7, #6]
 800e324:	442e      	add	r6, r5
 800e326:	d04d      	beq.n	800e3c4 <_ZN8touchgfx7Outline10renderLineEiiii+0x93c>
 800e328:	9f04      	ldr	r7, [sp, #16]
 800e32a:	1bbf      	subs	r7, r7, r6
 800e32c:	443d      	add	r5, r7
 800e32e:	016d      	lsls	r5, r5, #5
 800e330:	fb95 f8f1 	sdiv	r8, r5, r1
 800e334:	fb01 5518 	mls	r5, r1, r8, r5
 800e338:	4565      	cmp	r5, ip
 800e33a:	bfb8      	it	lt
 800e33c:	f108 38ff 	addlt.w	r8, r8, #4294967295
 800e340:	f108 0701 	add.w	r7, r8, #1
 800e344:	bfb8      	it	lt
 800e346:	186d      	addlt	r5, r5, r1
 800e348:	1a64      	subs	r4, r4, r1
 800e34a:	9703      	str	r7, [sp, #12]
 800e34c:	f04f 0a00 	mov.w	sl, #0
 800e350:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800e354:	1964      	adds	r4, r4, r5
 800e356:	bf58      	it	pl
 800e358:	9f03      	ldrpl	r7, [sp, #12]
 800e35a:	f8bc b004 	ldrh.w	fp, [ip, #4]
 800e35e:	bf48      	it	mi
 800e360:	4647      	movmi	r7, r8
 800e362:	44bb      	add	fp, r7
 800e364:	f8ac b004 	strh.w	fp, [ip, #4]
 800e368:	f8bc b006 	ldrh.w	fp, [ip, #6]
 800e36c:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 800e370:	f8ac b006 	strh.w	fp, [ip, #6]
 800e374:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800e378:	443e      	add	r6, r7
 800e37a:	f8bc b006 	ldrh.w	fp, [ip, #6]
 800e37e:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 800e382:	bf58      	it	pl
 800e384:	1a64      	subpl	r4, r4, r1
 800e386:	ea5b 0707 	orrs.w	r7, fp, r7
 800e38a:	444b      	add	r3, r9
 800e38c:	d011      	beq.n	800e3b2 <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 800e38e:	f9bc b002 	ldrsh.w	fp, [ip, #2]
 800e392:	f1bb 0f00 	cmp.w	fp, #0
 800e396:	db0c      	blt.n	800e3b2 <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 800e398:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
 800e39a:	45bb      	cmp	fp, r7
 800e39c:	da09      	bge.n	800e3b2 <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 800e39e:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 800e3a2:	45bb      	cmp	fp, r7
 800e3a4:	bf3c      	itt	cc
 800e3a6:	f10c 0708 	addcc.w	r7, ip, #8
 800e3aa:	6107      	strcc	r7, [r0, #16]
 800e3ac:	f10b 0701 	add.w	r7, fp, #1
 800e3b0:	6087      	str	r7, [r0, #8]
 800e3b2:	6907      	ldr	r7, [r0, #16]
 800e3b4:	459e      	cmp	lr, r3
 800e3b6:	803b      	strh	r3, [r7, #0]
 800e3b8:	807a      	strh	r2, [r7, #2]
 800e3ba:	f8a7 a004 	strh.w	sl, [r7, #4]
 800e3be:	f8a7 a006 	strh.w	sl, [r7, #6]
 800e3c2:	d1c5      	bne.n	800e350 <_ZN8touchgfx7Outline10renderLineEiiii+0x8c8>
 800e3c4:	9b04      	ldr	r3, [sp, #16]
 800e3c6:	1b9e      	subs	r6, r3, r6
 800e3c8:	6903      	ldr	r3, [r0, #16]
 800e3ca:	889a      	ldrh	r2, [r3, #4]
 800e3cc:	4432      	add	r2, r6
 800e3ce:	809a      	strh	r2, [r3, #4]
 800e3d0:	9a02      	ldr	r2, [sp, #8]
 800e3d2:	f102 0c20 	add.w	ip, r2, #32
 800e3d6:	9a01      	ldr	r2, [sp, #4]
 800e3d8:	ebac 0c02 	sub.w	ip, ip, r2
 800e3dc:	88da      	ldrh	r2, [r3, #6]
 800e3de:	fb06 260c 	mla	r6, r6, ip, r2
 800e3e2:	80de      	strh	r6, [r3, #6]
 800e3e4:	f7ff bba9 	b.w	800db3a <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>

0800e3e8 <_ZN8touchgfx7Outline6lineToEii>:
 800e3e8:	6a43      	ldr	r3, [r0, #36]	@ 0x24
 800e3ea:	079b      	lsls	r3, r3, #30
 800e3ec:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800e3ee:	460e      	mov	r6, r1
 800e3f0:	4615      	mov	r5, r2
 800e3f2:	d511      	bpl.n	800e418 <_ZN8touchgfx7Outline6lineToEii+0x30>
 800e3f4:	e9d0 1205 	ldrd	r1, r2, [r0, #20]
 800e3f8:	ea86 0701 	eor.w	r7, r6, r1
 800e3fc:	ea85 0302 	eor.w	r3, r5, r2
 800e400:	433b      	orrs	r3, r7
 800e402:	d009      	beq.n	800e418 <_ZN8touchgfx7Outline6lineToEii+0x30>
 800e404:	4633      	mov	r3, r6
 800e406:	9500      	str	r5, [sp, #0]
 800e408:	f7ff fb3e 	bl	800da88 <_ZN8touchgfx7Outline10renderLineEiiii>
 800e40c:	6a43      	ldr	r3, [r0, #36]	@ 0x24
 800e40e:	e9c0 6505 	strd	r6, r5, [r0, #20]
 800e412:	f043 0301 	orr.w	r3, r3, #1
 800e416:	6243      	str	r3, [r0, #36]	@ 0x24
 800e418:	b003      	add	sp, #12
 800e41a:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800e41c <_ZN8touchgfx7Outline6moveToEii>:
 800e41c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800e41e:	6a43      	ldr	r3, [r0, #36]	@ 0x24
 800e420:	4615      	mov	r5, r2
 800e422:	079a      	lsls	r2, r3, #30
 800e424:	4604      	mov	r4, r0
 800e426:	460e      	mov	r6, r1
 800e428:	d401      	bmi.n	800e42e <_ZN8touchgfx7Outline6moveToEii+0x12>
 800e42a:	f7ff fafa 	bl	800da22 <_ZN8touchgfx7Outline5resetEv>
 800e42e:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 800e430:	07db      	lsls	r3, r3, #31
 800e432:	d504      	bpl.n	800e43e <_ZN8touchgfx7Outline6moveToEii+0x22>
 800e434:	e9d4 1207 	ldrd	r1, r2, [r4, #28]
 800e438:	4620      	mov	r0, r4
 800e43a:	f7ff ffd5 	bl	800e3e8 <_ZN8touchgfx7Outline6lineToEii>
 800e43e:	6923      	ldr	r3, [r4, #16]
 800e440:	f9b3 2000 	ldrsh.w	r2, [r3]
 800e444:	1170      	asrs	r0, r6, #5
 800e446:	4290      	cmp	r0, r2
 800e448:	ea4f 1165 	mov.w	r1, r5, asr #5
 800e44c:	d103      	bne.n	800e456 <_ZN8touchgfx7Outline6moveToEii+0x3a>
 800e44e:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 800e452:	4291      	cmp	r1, r2
 800e454:	d01a      	beq.n	800e48c <_ZN8touchgfx7Outline6moveToEii+0x70>
 800e456:	88df      	ldrh	r7, [r3, #6]
 800e458:	889a      	ldrh	r2, [r3, #4]
 800e45a:	433a      	orrs	r2, r7
 800e45c:	d010      	beq.n	800e480 <_ZN8touchgfx7Outline6moveToEii+0x64>
 800e45e:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 800e462:	2a00      	cmp	r2, #0
 800e464:	db0c      	blt.n	800e480 <_ZN8touchgfx7Outline6moveToEii+0x64>
 800e466:	6ae7      	ldr	r7, [r4, #44]	@ 0x2c
 800e468:	42ba      	cmp	r2, r7
 800e46a:	da09      	bge.n	800e480 <_ZN8touchgfx7Outline6moveToEii+0x64>
 800e46c:	e9d4 7201 	ldrd	r7, r2, [r4, #4]
 800e470:	42ba      	cmp	r2, r7
 800e472:	bf38      	it	cc
 800e474:	3308      	addcc	r3, #8
 800e476:	f102 0201 	add.w	r2, r2, #1
 800e47a:	bf38      	it	cc
 800e47c:	6123      	strcc	r3, [r4, #16]
 800e47e:	60a2      	str	r2, [r4, #8]
 800e480:	6923      	ldr	r3, [r4, #16]
 800e482:	2200      	movs	r2, #0
 800e484:	8018      	strh	r0, [r3, #0]
 800e486:	8059      	strh	r1, [r3, #2]
 800e488:	809a      	strh	r2, [r3, #4]
 800e48a:	80da      	strh	r2, [r3, #6]
 800e48c:	6166      	str	r6, [r4, #20]
 800e48e:	e9c4 5606 	strd	r5, r6, [r4, #24]
 800e492:	6225      	str	r5, [r4, #32]
 800e494:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800e496 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>:
 800e496:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800e49a:	b0d0      	sub	sp, #320	@ 0x140
 800e49c:	466c      	mov	r4, sp
 800e49e:	eb00 01c1 	add.w	r1, r0, r1, lsl #3
 800e4a2:	4627      	mov	r7, r4
 800e4a4:	1a0d      	subs	r5, r1, r0
 800e4a6:	2d48      	cmp	r5, #72	@ 0x48
 800e4a8:	f100 0308 	add.w	r3, r0, #8
 800e4ac:	f340 80d5 	ble.w	800e65a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
 800e4b0:	112d      	asrs	r5, r5, #4
 800e4b2:	eb00 02c5 	add.w	r2, r0, r5, lsl #3
 800e4b6:	f9b0 9000 	ldrsh.w	r9, [r0]
 800e4ba:	6816      	ldr	r6, [r2, #0]
 800e4bc:	f9b0 8002 	ldrsh.w	r8, [r0, #2]
 800e4c0:	6006      	str	r6, [r0, #0]
 800e4c2:	6856      	ldr	r6, [r2, #4]
 800e4c4:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
 800e4c8:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
 800e4cc:	6046      	str	r6, [r0, #4]
 800e4ce:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
 800e4d2:	f8a2 8002 	strh.w	r8, [r2, #2]
 800e4d6:	f8a2 e004 	strh.w	lr, [r2, #4]
 800e4da:	f8a2 c006 	strh.w	ip, [r2, #6]
 800e4de:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
 800e4e2:	f9b0 c00a 	ldrsh.w	ip, [r0, #10]
 800e4e6:	4565      	cmp	r5, ip
 800e4e8:	f1a1 0208 	sub.w	r2, r1, #8
 800e4ec:	db06      	blt.n	800e4fc <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x66>
 800e4ee:	d119      	bne.n	800e524 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
 800e4f0:	f9b0 6008 	ldrsh.w	r6, [r0, #8]
 800e4f4:	f931 5c08 	ldrsh.w	r5, [r1, #-8]
 800e4f8:	42ae      	cmp	r6, r5
 800e4fa:	dd13      	ble.n	800e524 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
 800e4fc:	460e      	mov	r6, r1
 800e4fe:	f9b0 9008 	ldrsh.w	r9, [r0, #8]
 800e502:	f856 5d08 	ldr.w	r5, [r6, #-8]!
 800e506:	f9b0 800c 	ldrsh.w	r8, [r0, #12]
 800e50a:	f9b0 e00e 	ldrsh.w	lr, [r0, #14]
 800e50e:	601d      	str	r5, [r3, #0]
 800e510:	6875      	ldr	r5, [r6, #4]
 800e512:	605d      	str	r5, [r3, #4]
 800e514:	f821 9c08 	strh.w	r9, [r1, #-8]
 800e518:	f821 cc06 	strh.w	ip, [r1, #-6]
 800e51c:	f821 8c04 	strh.w	r8, [r1, #-4]
 800e520:	f821 ec02 	strh.w	lr, [r1, #-2]
 800e524:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 800e528:	f9b0 500a 	ldrsh.w	r5, [r0, #10]
 800e52c:	42ae      	cmp	r6, r5
 800e52e:	db06      	blt.n	800e53e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xa8>
 800e530:	d116      	bne.n	800e560 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
 800e532:	f9b0 c000 	ldrsh.w	ip, [r0]
 800e536:	f9b0 5008 	ldrsh.w	r5, [r0, #8]
 800e53a:	45ac      	cmp	ip, r5
 800e53c:	da10      	bge.n	800e560 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
 800e53e:	681d      	ldr	r5, [r3, #0]
 800e540:	f9b0 8000 	ldrsh.w	r8, [r0]
 800e544:	6005      	str	r5, [r0, #0]
 800e546:	685d      	ldr	r5, [r3, #4]
 800e548:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
 800e54c:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
 800e550:	f8a0 8008 	strh.w	r8, [r0, #8]
 800e554:	6045      	str	r5, [r0, #4]
 800e556:	8146      	strh	r6, [r0, #10]
 800e558:	f8a0 e00c 	strh.w	lr, [r0, #12]
 800e55c:	f8a0 c00e 	strh.w	ip, [r0, #14]
 800e560:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
 800e564:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
 800e568:	4565      	cmp	r5, ip
 800e56a:	db06      	blt.n	800e57a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe4>
 800e56c:	d119      	bne.n	800e5a2 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 800e56e:	f931 6c08 	ldrsh.w	r6, [r1, #-8]
 800e572:	f9b0 5000 	ldrsh.w	r5, [r0]
 800e576:	42ae      	cmp	r6, r5
 800e578:	da13      	bge.n	800e5a2 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 800e57a:	460e      	mov	r6, r1
 800e57c:	f9b0 9000 	ldrsh.w	r9, [r0]
 800e580:	f856 5d08 	ldr.w	r5, [r6, #-8]!
 800e584:	6005      	str	r5, [r0, #0]
 800e586:	f9b0 8004 	ldrsh.w	r8, [r0, #4]
 800e58a:	f9b0 e006 	ldrsh.w	lr, [r0, #6]
 800e58e:	6875      	ldr	r5, [r6, #4]
 800e590:	6045      	str	r5, [r0, #4]
 800e592:	f821 9c08 	strh.w	r9, [r1, #-8]
 800e596:	f821 cc06 	strh.w	ip, [r1, #-6]
 800e59a:	f821 8c04 	strh.w	r8, [r1, #-4]
 800e59e:	f821 ec02 	strh.w	lr, [r1, #-2]
 800e5a2:	3308      	adds	r3, #8
 800e5a4:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
 800e5a8:	f9b3 e002 	ldrsh.w	lr, [r3, #2]
 800e5ac:	45e6      	cmp	lr, ip
 800e5ae:	dbf8      	blt.n	800e5a2 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 800e5b0:	d105      	bne.n	800e5be <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 800e5b2:	f9b3 6000 	ldrsh.w	r6, [r3]
 800e5b6:	f9b0 5000 	ldrsh.w	r5, [r0]
 800e5ba:	42ae      	cmp	r6, r5
 800e5bc:	dbf1      	blt.n	800e5a2 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 800e5be:	4615      	mov	r5, r2
 800e5c0:	3a08      	subs	r2, #8
 800e5c2:	f9b2 6002 	ldrsh.w	r6, [r2, #2]
 800e5c6:	45b4      	cmp	ip, r6
 800e5c8:	dbf9      	blt.n	800e5be <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 800e5ca:	d105      	bne.n	800e5d8 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x142>
 800e5cc:	f9b0 8000 	ldrsh.w	r8, [r0]
 800e5d0:	f9b2 6000 	ldrsh.w	r6, [r2]
 800e5d4:	45b0      	cmp	r8, r6
 800e5d6:	dbf2      	blt.n	800e5be <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 800e5d8:	4293      	cmp	r3, r2
 800e5da:	f1a5 0608 	sub.w	r6, r5, #8
 800e5de:	d816      	bhi.n	800e60e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x178>
 800e5e0:	f8d6 c000 	ldr.w	ip, [r6]
 800e5e4:	f9b3 a000 	ldrsh.w	sl, [r3]
 800e5e8:	f8c3 c000 	str.w	ip, [r3]
 800e5ec:	f9b3 9004 	ldrsh.w	r9, [r3, #4]
 800e5f0:	f9b3 8006 	ldrsh.w	r8, [r3, #6]
 800e5f4:	f8d6 c004 	ldr.w	ip, [r6, #4]
 800e5f8:	f8c3 c004 	str.w	ip, [r3, #4]
 800e5fc:	f825 ac08 	strh.w	sl, [r5, #-8]
 800e600:	f825 ec06 	strh.w	lr, [r5, #-6]
 800e604:	f825 9c04 	strh.w	r9, [r5, #-4]
 800e608:	f825 8c02 	strh.w	r8, [r5, #-2]
 800e60c:	e7c9      	b.n	800e5a2 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 800e60e:	f8d6 e000 	ldr.w	lr, [r6]
 800e612:	f9b0 a000 	ldrsh.w	sl, [r0]
 800e616:	f8c0 e000 	str.w	lr, [r0]
 800e61a:	f9b0 9004 	ldrsh.w	r9, [r0, #4]
 800e61e:	f9b0 8006 	ldrsh.w	r8, [r0, #6]
 800e622:	f8d6 e004 	ldr.w	lr, [r6, #4]
 800e626:	f8c0 e004 	str.w	lr, [r0, #4]
 800e62a:	f825 ac08 	strh.w	sl, [r5, #-8]
 800e62e:	f825 cc06 	strh.w	ip, [r5, #-6]
 800e632:	f825 9c04 	strh.w	r9, [r5, #-4]
 800e636:	f825 8c02 	strh.w	r8, [r5, #-2]
 800e63a:	1acd      	subs	r5, r1, r3
 800e63c:	1a16      	subs	r6, r2, r0
 800e63e:	10ed      	asrs	r5, r5, #3
 800e640:	ebb5 0fe6 	cmp.w	r5, r6, asr #3
 800e644:	bfb5      	itete	lt
 800e646:	e9c4 0200 	strdlt	r0, r2, [r4]
 800e64a:	e9c4 3100 	strdge	r3, r1, [r4]
 800e64e:	460a      	movlt	r2, r1
 800e650:	4603      	movge	r3, r0
 800e652:	3408      	adds	r4, #8
 800e654:	4618      	mov	r0, r3
 800e656:	4611      	mov	r1, r2
 800e658:	e724      	b.n	800e4a4 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
 800e65a:	4299      	cmp	r1, r3
 800e65c:	d928      	bls.n	800e6b0 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x21a>
 800e65e:	f1a3 0210 	sub.w	r2, r3, #16
 800e662:	f9b2 c012 	ldrsh.w	ip, [r2, #18]
 800e666:	f9b2 500a 	ldrsh.w	r5, [r2, #10]
 800e66a:	45ac      	cmp	ip, r5
 800e66c:	db06      	blt.n	800e67c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1e6>
 800e66e:	d11d      	bne.n	800e6ac <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x216>
 800e670:	f9b2 6010 	ldrsh.w	r6, [r2, #16]
 800e674:	f9b2 5008 	ldrsh.w	r5, [r2, #8]
 800e678:	42ae      	cmp	r6, r5
 800e67a:	da17      	bge.n	800e6ac <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x216>
 800e67c:	4615      	mov	r5, r2
 800e67e:	f9b2 9010 	ldrsh.w	r9, [r2, #16]
 800e682:	f855 6f08 	ldr.w	r6, [r5, #8]!
 800e686:	6116      	str	r6, [r2, #16]
 800e688:	686e      	ldr	r6, [r5, #4]
 800e68a:	f9b2 8014 	ldrsh.w	r8, [r2, #20]
 800e68e:	f9b2 e016 	ldrsh.w	lr, [r2, #22]
 800e692:	f8a2 9008 	strh.w	r9, [r2, #8]
 800e696:	42a8      	cmp	r0, r5
 800e698:	6156      	str	r6, [r2, #20]
 800e69a:	f8a2 c00a 	strh.w	ip, [r2, #10]
 800e69e:	f8a2 800c 	strh.w	r8, [r2, #12]
 800e6a2:	f8a2 e00e 	strh.w	lr, [r2, #14]
 800e6a6:	f1a2 0208 	sub.w	r2, r2, #8
 800e6aa:	d1da      	bne.n	800e662 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1cc>
 800e6ac:	3308      	adds	r3, #8
 800e6ae:	e7d4      	b.n	800e65a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
 800e6b0:	42bc      	cmp	r4, r7
 800e6b2:	d903      	bls.n	800e6bc <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x226>
 800e6b4:	e954 0102 	ldrd	r0, r1, [r4, #-8]
 800e6b8:	3c08      	subs	r4, #8
 800e6ba:	e6f3      	b.n	800e4a4 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
 800e6bc:	b050      	add	sp, #320	@ 0x140
 800e6be:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

0800e6c2 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>:
 800e6c2:	b510      	push	{r4, lr}
 800e6c4:	6a43      	ldr	r3, [r0, #36]	@ 0x24
 800e6c6:	07da      	lsls	r2, r3, #31
 800e6c8:	4604      	mov	r4, r0
 800e6ca:	d507      	bpl.n	800e6dc <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x1a>
 800e6cc:	e9d0 1207 	ldrd	r1, r2, [r0, #28]
 800e6d0:	f7ff fe8a 	bl	800e3e8 <_ZN8touchgfx7Outline6lineToEii>
 800e6d4:	6a43      	ldr	r3, [r0, #36]	@ 0x24
 800e6d6:	f023 0301 	bic.w	r3, r3, #1
 800e6da:	6243      	str	r3, [r0, #36]	@ 0x24
 800e6dc:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 800e6de:	079b      	lsls	r3, r3, #30
 800e6e0:	d521      	bpl.n	800e726 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x64>
 800e6e2:	6923      	ldr	r3, [r4, #16]
 800e6e4:	88d9      	ldrh	r1, [r3, #6]
 800e6e6:	889a      	ldrh	r2, [r3, #4]
 800e6e8:	430a      	orrs	r2, r1
 800e6ea:	d010      	beq.n	800e70e <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 800e6ec:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 800e6f0:	2a00      	cmp	r2, #0
 800e6f2:	db0c      	blt.n	800e70e <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 800e6f4:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
 800e6f6:	428a      	cmp	r2, r1
 800e6f8:	da09      	bge.n	800e70e <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 800e6fa:	e9d4 1201 	ldrd	r1, r2, [r4, #4]
 800e6fe:	4291      	cmp	r1, r2
 800e700:	bf88      	it	hi
 800e702:	3308      	addhi	r3, #8
 800e704:	f102 0201 	add.w	r2, r2, #1
 800e708:	bf88      	it	hi
 800e70a:	6123      	strhi	r3, [r4, #16]
 800e70c:	60a2      	str	r2, [r4, #8]
 800e70e:	68a1      	ldr	r1, [r4, #8]
 800e710:	b129      	cbz	r1, 800e71e <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
 800e712:	6863      	ldr	r3, [r4, #4]
 800e714:	4299      	cmp	r1, r3
 800e716:	d802      	bhi.n	800e71e <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
 800e718:	68e0      	ldr	r0, [r4, #12]
 800e71a:	f7ff febc 	bl	800e496 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>
 800e71e:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 800e720:	f023 0302 	bic.w	r3, r3, #2
 800e724:	6263      	str	r3, [r4, #36]	@ 0x24
 800e726:	68e0      	ldr	r0, [r4, #12]
 800e728:	bd10      	pop	{r4, pc}
	...

0800e72c <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>:
 800e72c:	4b02      	ldr	r3, [pc, #8]	@ (800e738 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0xc>)
 800e72e:	6018      	str	r0, [r3, #0]
 800e730:	4b02      	ldr	r3, [pc, #8]	@ (800e73c <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0x10>)
 800e732:	6019      	str	r1, [r3, #0]
 800e734:	4770      	bx	lr
 800e736:	bf00      	nop
 800e738:	2001404c 	.word	0x2001404c
 800e73c:	20014050 	.word	0x20014050

0800e740 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>:
 800e740:	4a02      	ldr	r2, [pc, #8]	@ (800e74c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv+0xc>)
 800e742:	2300      	movs	r3, #0
 800e744:	6013      	str	r3, [r2, #0]
 800e746:	4a02      	ldr	r2, [pc, #8]	@ (800e750 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv+0x10>)
 800e748:	6013      	str	r3, [r2, #0]
 800e74a:	4770      	bx	lr
 800e74c:	2001404c 	.word	0x2001404c
 800e750:	20014050 	.word	0x20014050

0800e754 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>:
 800e754:	4b01      	ldr	r3, [pc, #4]	@ (800e75c <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv+0x8>)
 800e756:	6818      	ldr	r0, [r3, #0]
 800e758:	4770      	bx	lr
 800e75a:	bf00      	nop
 800e75c:	2001404c 	.word	0x2001404c

0800e760 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>:
 800e760:	4b01      	ldr	r3, [pc, #4]	@ (800e768 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv+0x8>)
 800e762:	6818      	ldr	r0, [r3, #0]
 800e764:	4770      	bx	lr
 800e766:	bf00      	nop
 800e768:	20014050 	.word	0x20014050

0800e76c <_ZN8touchgfx3LCD27supportDynamicBitmapDrawingENS_6Bitmap12BitmapFormatE>:
 800e76c:	b510      	push	{r4, lr}
 800e76e:	6803      	ldr	r3, [r0, #0]
 800e770:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800e772:	460c      	mov	r4, r1
 800e774:	4798      	blx	r3
 800e776:	1b03      	subs	r3, r0, r4
 800e778:	4258      	negs	r0, r3
 800e77a:	4158      	adcs	r0, r3
 800e77c:	bd10      	pop	{r4, pc}
	...

0800e780 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE>:
 800e780:	4b01      	ldr	r3, [pc, #4]	@ (800e788 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE+0x8>)
 800e782:	6019      	str	r1, [r3, #0]
 800e784:	4770      	bx	lr
 800e786:	bf00      	nop
 800e788:	20014054 	.word	0x20014054

0800e78c <_ZN8touchgfx3LCD18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 800e78c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e790:	4696      	mov	lr, r2
 800e792:	4605      	mov	r5, r0
 800e794:	4614      	mov	r4, r2
 800e796:	460e      	mov	r6, r1
 800e798:	461f      	mov	r7, r3
 800e79a:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800e79e:	b097      	sub	sp, #92	@ 0x5c
 800e7a0:	f10d 0c1c 	add.w	ip, sp, #28
 800e7a4:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800e7a8:	f8de 3000 	ldr.w	r3, [lr]
 800e7ac:	f8cc 3000 	str.w	r3, [ip]
 800e7b0:	f104 0e14 	add.w	lr, r4, #20
 800e7b4:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800e7b8:	f10d 0c30 	add.w	ip, sp, #48	@ 0x30
 800e7bc:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800e7c0:	f8de 3000 	ldr.w	r3, [lr]
 800e7c4:	f8cc 3000 	str.w	r3, [ip]
 800e7c8:	f104 0e28 	add.w	lr, r4, #40	@ 0x28
 800e7cc:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800e7d0:	f10d 0c44 	add.w	ip, sp, #68	@ 0x44
 800e7d4:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800e7d8:	f89d 908c 	ldrb.w	r9, [sp, #140]	@ 0x8c
 800e7dc:	f8bd a090 	ldrh.w	sl, [sp, #144]	@ 0x90
 800e7e0:	f8bd 8088 	ldrh.w	r8, [sp, #136]	@ 0x88
 800e7e4:	f8de 3000 	ldr.w	r3, [lr]
 800e7e8:	f8cc 3000 	str.w	r3, [ip]
 800e7ec:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 800e7ee:	682b      	ldr	r3, [r5, #0]
 800e7f0:	9201      	str	r2, [sp, #4]
 800e7f2:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 800e7f6:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 800e7f8:	9200      	str	r2, [sp, #0]
 800e7fa:	f8cd 8008 	str.w	r8, [sp, #8]
 800e7fe:	f8d3 b03c 	ldr.w	fp, [r3, #60]	@ 0x3c
 800e802:	aa07      	add	r2, sp, #28
 800e804:	463b      	mov	r3, r7
 800e806:	4631      	mov	r1, r6
 800e808:	4628      	mov	r0, r5
 800e80a:	47d8      	blx	fp
 800e80c:	46a6      	mov	lr, r4
 800e80e:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800e812:	f10d 0c1c 	add.w	ip, sp, #28
 800e816:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800e81a:	f8de 3000 	ldr.w	r3, [lr]
 800e81e:	f8cc 3000 	str.w	r3, [ip]
 800e822:	f104 0e28 	add.w	lr, r4, #40	@ 0x28
 800e826:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800e82a:	f10d 0c30 	add.w	ip, sp, #48	@ 0x30
 800e82e:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800e832:	343c      	adds	r4, #60	@ 0x3c
 800e834:	f8de 3000 	ldr.w	r3, [lr]
 800e838:	f8cc 3000 	str.w	r3, [ip]
 800e83c:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800e83e:	f10d 0c44 	add.w	ip, sp, #68	@ 0x44
 800e842:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800e846:	6823      	ldr	r3, [r4, #0]
 800e848:	f8cc 3000 	str.w	r3, [ip]
 800e84c:	682b      	ldr	r3, [r5, #0]
 800e84e:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 800e852:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 800e854:	9201      	str	r2, [sp, #4]
 800e856:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 800e858:	9200      	str	r2, [sp, #0]
 800e85a:	f8cd 8008 	str.w	r8, [sp, #8]
 800e85e:	6bdc      	ldr	r4, [r3, #60]	@ 0x3c
 800e860:	aa07      	add	r2, sp, #28
 800e862:	463b      	mov	r3, r7
 800e864:	4631      	mov	r1, r6
 800e866:	4628      	mov	r0, r5
 800e868:	47a0      	blx	r4
 800e86a:	b017      	add	sp, #92	@ 0x5c
 800e86c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800e870 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht>:
 800e870:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e874:	b08d      	sub	sp, #52	@ 0x34
 800e876:	4688      	mov	r8, r1
 800e878:	9916      	ldr	r1, [sp, #88]	@ 0x58
 800e87a:	f8d3 c000 	ldr.w	ip, [r3]
 800e87e:	680f      	ldr	r7, [r1, #0]
 800e880:	f8bd 4070 	ldrh.w	r4, [sp, #112]	@ 0x70
 800e884:	ed92 4a09 	vldr	s8, [r2, #36]	@ 0x24
 800e888:	edd2 4a0b 	vldr	s9, [r2, #44]	@ 0x2c
 800e88c:	edd3 6a07 	vldr	s13, [r3, #28]
 800e890:	9918      	ldr	r1, [sp, #96]	@ 0x60
 800e892:	f8dd a064 	ldr.w	sl, [sp, #100]	@ 0x64
 800e896:	f9b1 9000 	ldrsh.w	r9, [r1]
 800e89a:	f9ba 1000 	ldrsh.w	r1, [sl]
 800e89e:	edd3 1a0a 	vldr	s3, [r3, #40]	@ 0x28
 800e8a2:	ed93 2a0d 	vldr	s4, [r3, #52]	@ 0x34
 800e8a6:	eba7 070c 	sub.w	r7, r7, ip
 800e8aa:	42bc      	cmp	r4, r7
 800e8ac:	bfa8      	it	ge
 800e8ae:	463c      	movge	r4, r7
 800e8b0:	ee07 4a90 	vmov	s15, r4
 800e8b4:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
 800e8b8:	edd2 7a0d 	vldr	s15, [r2, #52]	@ 0x34
 800e8bc:	ee25 4a04 	vmul.f32	s8, s10, s8
 800e8c0:	ee65 4a24 	vmul.f32	s9, s10, s9
 800e8c4:	ee25 5a27 	vmul.f32	s10, s10, s15
 800e8c8:	eef7 7a00 	vmov.f32	s15, #112	@ 0x3f800000  1.0
 800e8cc:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 800e8d0:	eb09 0e0c 	add.w	lr, r9, ip
 800e8d4:	4571      	cmp	r1, lr
 800e8d6:	ee71 0aa4 	vadd.f32	s1, s3, s9
 800e8da:	ee32 1a05 	vadd.f32	s2, s4, s10
 800e8de:	ee36 0a84 	vadd.f32	s0, s13, s8
 800e8e2:	ee61 1a87 	vmul.f32	s3, s3, s14
 800e8e6:	ee22 2a07 	vmul.f32	s4, s4, s14
 800e8ea:	f340 808d 	ble.w	800ea08 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x198>
 800e8ee:	eba1 060e 	sub.w	r6, r1, lr
 800e8f2:	fb96 f5f4 	sdiv	r5, r6, r4
 800e8f6:	ee07 5a10 	vmov	s14, r5
 800e8fa:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800e8fe:	2d00      	cmp	r5, #0
 800e900:	fb04 6615 	mls	r6, r4, r5, r6
 800e904:	eea7 0a04 	vfma.f32	s0, s14, s8
 800e908:	eee7 0a24 	vfma.f32	s1, s14, s9
 800e90c:	eea7 1a05 	vfma.f32	s2, s14, s10
 800e910:	dd13      	ble.n	800e93a <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xca>
 800e912:	ee70 6a44 	vsub.f32	s13, s0, s8
 800e916:	ee70 1ae4 	vsub.f32	s3, s1, s9
 800e91a:	eef5 6a40 	vcmp.f32	s13, #0.0
 800e91e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800e922:	bf18      	it	ne
 800e924:	ee87 7aa6 	vdivne.f32	s14, s15, s13
 800e928:	ee31 2a45 	vsub.f32	s4, s2, s10
 800e92c:	bf08      	it	eq
 800e92e:	eeb0 7a67 	vmoveq.f32	s14, s15
 800e932:	ee61 1a87 	vmul.f32	s3, s3, s14
 800e936:	ee22 2a07 	vmul.f32	s4, s4, s14
 800e93a:	fb05 f204 	mul.w	r2, r5, r4
 800e93e:	1abf      	subs	r7, r7, r2
 800e940:	4494      	add	ip, r2
 800e942:	f8ba 2004 	ldrh.w	r2, [sl, #4]
 800e946:	4411      	add	r1, r2
 800e948:	eb09 020c 	add.w	r2, r9, ip
 800e94c:	443a      	add	r2, r7
 800e94e:	b209      	sxth	r1, r1
 800e950:	428a      	cmp	r2, r1
 800e952:	bfc4      	itt	gt
 800e954:	eba1 0209 	subgt.w	r2, r1, r9
 800e958:	eba2 070c 	subgt.w	r7, r2, ip
 800e95c:	2f00      	cmp	r7, #0
 800e95e:	dd50      	ble.n	800ea02 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x192>
 800e960:	fb97 f1f4 	sdiv	r1, r7, r4
 800e964:	fb04 7211 	mls	r2, r4, r1, r7
 800e968:	b90a      	cbnz	r2, 800e96e <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xfe>
 800e96a:	3901      	subs	r1, #1
 800e96c:	4622      	mov	r2, r4
 800e96e:	eec7 3a80 	vdiv.f32	s7, s15, s0
 800e972:	6840      	ldr	r0, [r0, #4]
 800e974:	900b      	str	r0, [sp, #44]	@ 0x2c
 800e976:	f8d0 a000 	ldr.w	sl, [r0]
 800e97a:	9817      	ldr	r0, [sp, #92]	@ 0x5c
 800e97c:	9008      	str	r0, [sp, #32]
 800e97e:	f89d b06c 	ldrb.w	fp, [sp, #108]	@ 0x6c
 800e982:	9818      	ldr	r0, [sp, #96]	@ 0x60
 800e984:	f8cd b024 	str.w	fp, [sp, #36]	@ 0x24
 800e988:	f9b0 b002 	ldrsh.w	fp, [r0, #2]
 800e98c:	695b      	ldr	r3, [r3, #20]
 800e98e:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 800e990:	445b      	add	r3, fp
 800e992:	eef0 6a42 	vmov.f32	s13, s4
 800e996:	ee60 2aa3 	vmul.f32	s5, s1, s7
 800e99a:	ee21 3a23 	vmul.f32	s6, s2, s7
 800e99e:	ee72 7ae1 	vsub.f32	s15, s5, s3
 800e9a2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 800e9a6:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 800e9aa:	9307      	str	r3, [sp, #28]
 800e9ac:	ee17 7a90 	vmov	r7, s15
 800e9b0:	ee73 7a42 	vsub.f32	s15, s6, s4
 800e9b4:	eeb0 7a61 	vmov.f32	s14, s3
 800e9b8:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 800e9bc:	ee16 3a90 	vmov	r3, s13
 800e9c0:	fb97 f7f4 	sdiv	r7, r7, r4
 800e9c4:	ee17 ca90 	vmov	ip, s15
 800e9c8:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 800e9cc:	fb9c fcf4 	sdiv	ip, ip, r4
 800e9d0:	fb0c 3306 	mla	r3, ip, r6, r3
 800e9d4:	9302      	str	r3, [sp, #8]
 800e9d6:	ee17 3a10 	vmov	r3, s14
 800e9da:	44b6      	add	lr, r6
 800e9dc:	fb04 e505 	mla	r5, r4, r5, lr
 800e9e0:	e9cd 7c03 	strd	r7, ip, [sp, #12]
 800e9e4:	fb07 3706 	mla	r7, r7, r6, r3
 800e9e8:	e9cd 8505 	strd	r8, r5, [sp, #20]
 800e9ec:	e9cd 4700 	strd	r4, r7, [sp]
 800e9f0:	2900      	cmp	r1, #0
 800e9f2:	bfcc      	ite	gt
 800e9f4:	46a1      	movgt	r9, r4
 800e9f6:	4691      	movle	r9, r2
 800e9f8:	eba9 0306 	sub.w	r3, r9, r6
 800e9fc:	f8da 4008 	ldr.w	r4, [sl, #8]
 800ea00:	47a0      	blx	r4
 800ea02:	b00d      	add	sp, #52	@ 0x34
 800ea04:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ea08:	2500      	movs	r5, #0
 800ea0a:	462e      	mov	r6, r5
 800ea0c:	e799      	b.n	800e942 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xd2>
	...

0800ea10 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 800ea10:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ea14:	b0db      	sub	sp, #364	@ 0x16c
 800ea16:	461d      	mov	r5, r3
 800ea18:	f8bd 3198 	ldrh.w	r3, [sp, #408]	@ 0x198
 800ea1c:	930a      	str	r3, [sp, #40]	@ 0x28
 800ea1e:	f89d 319c 	ldrb.w	r3, [sp, #412]	@ 0x19c
 800ea22:	930b      	str	r3, [sp, #44]	@ 0x2c
 800ea24:	f8bd 31a0 	ldrh.w	r3, [sp, #416]	@ 0x1a0
 800ea28:	9310      	str	r3, [sp, #64]	@ 0x40
 800ea2a:	6803      	ldr	r3, [r0, #0]
 800ea2c:	910f      	str	r1, [sp, #60]	@ 0x3c
 800ea2e:	6c5f      	ldr	r7, [r3, #68]	@ 0x44
 800ea30:	9009      	str	r0, [sp, #36]	@ 0x24
 800ea32:	4614      	mov	r4, r2
 800ea34:	4629      	mov	r1, r5
 800ea36:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	@ 0x28
 800ea3a:	f8dd b194 	ldr.w	fp, [sp, #404]	@ 0x194
 800ea3e:	47b8      	blx	r7
 800ea40:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800ea42:	6058      	str	r0, [r3, #4]
 800ea44:	2800      	cmp	r0, #0
 800ea46:	f000 83a1 	beq.w	800f18c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800ea4a:	682b      	ldr	r3, [r5, #0]
 800ea4c:	9314      	str	r3, [sp, #80]	@ 0x50
 800ea4e:	686b      	ldr	r3, [r5, #4]
 800ea50:	9315      	str	r3, [sp, #84]	@ 0x54
 800ea52:	4bc4      	ldr	r3, [pc, #784]	@ (800ed64 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x354>)
 800ea54:	ed94 7a02 	vldr	s14, [r4, #8]
 800ea58:	7819      	ldrb	r1, [r3, #0]
 800ea5a:	e9d5 2302 	ldrd	r2, r3, [r5, #8]
 800ea5e:	eef2 7a04 	vmov.f32	s15, #36	@ 0x41200000  10.0
 800ea62:	2900      	cmp	r1, #0
 800ea64:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800ea68:	bf16      	itet	ne
 800ea6a:	4619      	movne	r1, r3
 800ea6c:	4611      	moveq	r1, r2
 800ea6e:	4613      	movne	r3, r2
 800ea70:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800ea74:	9116      	str	r1, [sp, #88]	@ 0x58
 800ea76:	e9cd 3217 	strd	r3, r2, [sp, #92]	@ 0x5c
 800ea7a:	f240 8387 	bls.w	800f18c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800ea7e:	ed94 7a07 	vldr	s14, [r4, #28]
 800ea82:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800ea86:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800ea8a:	f240 837f 	bls.w	800f18c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800ea8e:	ed94 7a0c 	vldr	s14, [r4, #48]	@ 0x30
 800ea92:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800ea96:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800ea9a:	f240 8377 	bls.w	800f18c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800ea9e:	6822      	ldr	r2, [r4, #0]
 800eaa0:	4bb1      	ldr	r3, [pc, #708]	@ (800ed68 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x358>)
 800eaa2:	429a      	cmp	r2, r3
 800eaa4:	f2c0 8372 	blt.w	800f18c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800eaa8:	49b0      	ldr	r1, [pc, #704]	@ (800ed6c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x35c>)
 800eaaa:	6963      	ldr	r3, [r4, #20]
 800eaac:	428a      	cmp	r2, r1
 800eaae:	f300 836d 	bgt.w	800f18c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800eab2:	f503 331c 	add.w	r3, r3, #159744	@ 0x27000
 800eab6:	48ae      	ldr	r0, [pc, #696]	@ (800ed70 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x360>)
 800eab8:	33ff      	adds	r3, #255	@ 0xff
 800eaba:	4283      	cmp	r3, r0
 800eabc:	f200 8366 	bhi.w	800f18c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800eac0:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
 800eac2:	4dac      	ldr	r5, [pc, #688]	@ (800ed74 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x364>)
 800eac4:	f503 331c 	add.w	r3, r3, #159744	@ 0x27000
 800eac8:	33ff      	adds	r3, #255	@ 0xff
 800eaca:	42ab      	cmp	r3, r5
 800eacc:	f200 835e 	bhi.w	800f18c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800ead0:	6862      	ldr	r2, [r4, #4]
 800ead2:	f502 331c 	add.w	r3, r2, #159744	@ 0x27000
 800ead6:	33ff      	adds	r3, #255	@ 0xff
 800ead8:	4283      	cmp	r3, r0
 800eada:	f200 8357 	bhi.w	800f18c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800eade:	69a1      	ldr	r1, [r4, #24]
 800eae0:	f501 331c 	add.w	r3, r1, #159744	@ 0x27000
 800eae4:	33ff      	adds	r3, #255	@ 0xff
 800eae6:	4283      	cmp	r3, r0
 800eae8:	f200 8350 	bhi.w	800f18c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800eaec:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 800eaee:	f503 301c 	add.w	r0, r3, #159744	@ 0x27000
 800eaf2:	30ff      	adds	r0, #255	@ 0xff
 800eaf4:	42a8      	cmp	r0, r5
 800eaf6:	f200 8349 	bhi.w	800f18c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800eafa:	428a      	cmp	r2, r1
 800eafc:	f280 8110 	bge.w	800ed20 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x310>
 800eb00:	429a      	cmp	r2, r3
 800eb02:	f300 8119 	bgt.w	800ed38 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x328>
 800eb06:	4299      	cmp	r1, r3
 800eb08:	f280 811d 	bge.w	800ed46 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x336>
 800eb0c:	2502      	movs	r5, #2
 800eb0e:	2701      	movs	r7, #1
 800eb10:	46a9      	mov	r9, r5
 800eb12:	46b8      	mov	r8, r7
 800eb14:	f04f 0a00 	mov.w	sl, #0
 800eb18:	4621      	mov	r1, r4
 800eb1a:	a849      	add	r0, sp, #292	@ 0x124
 800eb1c:	f003 fdae 	bl	801267c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>
 800eb20:	4622      	mov	r2, r4
 800eb22:	4653      	mov	r3, sl
 800eb24:	a949      	add	r1, sp, #292	@ 0x124
 800eb26:	f8cd 9000 	str.w	r9, [sp]
 800eb2a:	a819      	add	r0, sp, #100	@ 0x64
 800eb2c:	f003 fed6 	bl	80128dc <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800eb30:	4622      	mov	r2, r4
 800eb32:	4653      	mov	r3, sl
 800eb34:	a949      	add	r1, sp, #292	@ 0x124
 800eb36:	f8cd 8000 	str.w	r8, [sp]
 800eb3a:	a829      	add	r0, sp, #164	@ 0xa4
 800eb3c:	f003 fece 	bl	80128dc <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800eb40:	4643      	mov	r3, r8
 800eb42:	4622      	mov	r2, r4
 800eb44:	a949      	add	r1, sp, #292	@ 0x124
 800eb46:	f8cd 9000 	str.w	r9, [sp]
 800eb4a:	a839      	add	r0, sp, #228	@ 0xe4
 800eb4c:	f003 fec6 	bl	80128dc <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800eb50:	42af      	cmp	r7, r5
 800eb52:	bfb5      	itete	lt
 800eb54:	2300      	movlt	r3, #0
 800eb56:	2301      	movge	r3, #1
 800eb58:	930e      	strlt	r3, [sp, #56]	@ 0x38
 800eb5a:	930e      	strge	r3, [sp, #56]	@ 0x38
 800eb5c:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800eb5e:	e893 0003 	ldmia.w	r3, {r0, r1}
 800eb62:	af12      	add	r7, sp, #72	@ 0x48
 800eb64:	bfb9      	ittee	lt
 800eb66:	ad29      	addlt	r5, sp, #164	@ 0xa4
 800eb68:	ac19      	addlt	r4, sp, #100	@ 0x64
 800eb6a:	ad19      	addge	r5, sp, #100	@ 0x64
 800eb6c:	ac29      	addge	r4, sp, #164	@ 0xa4
 800eb6e:	e887 0003 	stmia.w	r7, {r0, r1}
 800eb72:	b928      	cbnz	r0, 800eb80 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x170>
 800eb74:	4b80      	ldr	r3, [pc, #512]	@ (800ed78 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x368>)
 800eb76:	6818      	ldr	r0, [r3, #0]
 800eb78:	6803      	ldr	r3, [r0, #0]
 800eb7a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800eb7c:	4798      	blx	r3
 800eb7e:	6038      	str	r0, [r7, #0]
 800eb80:	9b64      	ldr	r3, [sp, #400]	@ 0x190
 800eb82:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 800eb86:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 800eb8a:	930c      	str	r3, [sp, #48]	@ 0x30
 800eb8c:	990c      	ldr	r1, [sp, #48]	@ 0x30
 800eb8e:	6963      	ldr	r3, [r4, #20]
 800eb90:	9a2f      	ldr	r2, [sp, #188]	@ 0xbc
 800eb92:	440b      	add	r3, r1
 800eb94:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 800eb98:	4408      	add	r0, r1
 800eb9a:	b200      	sxth	r0, r0
 800eb9c:	4283      	cmp	r3, r0
 800eb9e:	900d      	str	r0, [sp, #52]	@ 0x34
 800eba0:	f280 80dd 	bge.w	800ed5e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x34e>
 800eba4:	428b      	cmp	r3, r1
 800eba6:	da08      	bge.n	800ebba <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800eba8:	2a00      	cmp	r2, #0
 800ebaa:	dd06      	ble.n	800ebba <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800ebac:	1acb      	subs	r3, r1, r3
 800ebae:	429a      	cmp	r2, r3
 800ebb0:	f2c0 80e4 	blt.w	800ed7c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36c>
 800ebb4:	2b00      	cmp	r3, #0
 800ebb6:	f300 80e2 	bgt.w	800ed7e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36e>
 800ebba:	6967      	ldr	r7, [r4, #20]
 800ebbc:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 800ebbe:	443b      	add	r3, r7
 800ebc0:	461f      	mov	r7, r3
 800ebc2:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 800ebc4:	1bdf      	subs	r7, r3, r7
 800ebc6:	4297      	cmp	r7, r2
 800ebc8:	bfa8      	it	ge
 800ebca:	4617      	movge	r7, r2
 800ebcc:	f10d 0850 	add.w	r8, sp, #80	@ 0x50
 800ebd0:	2f00      	cmp	r7, #0
 800ebd2:	f340 8166 	ble.w	800eea2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x492>
 800ebd6:	9b64      	ldr	r3, [sp, #400]	@ 0x190
 800ebd8:	6829      	ldr	r1, [r5, #0]
 800ebda:	f9b3 2000 	ldrsh.w	r2, [r3]
 800ebde:	f9bb 3000 	ldrsh.w	r3, [fp]
 800ebe2:	6820      	ldr	r0, [r4, #0]
 800ebe4:	4411      	add	r1, r2
 800ebe6:	4299      	cmp	r1, r3
 800ebe8:	dd1a      	ble.n	800ec20 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 800ebea:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 800ebee:	440b      	add	r3, r1
 800ebf0:	4402      	add	r2, r0
 800ebf2:	b21b      	sxth	r3, r3
 800ebf4:	429a      	cmp	r2, r3
 800ebf6:	dc13      	bgt.n	800ec20 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 800ebf8:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800ebfa:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 800ebfc:	681b      	ldr	r3, [r3, #0]
 800ebfe:	9206      	str	r2, [sp, #24]
 800ec00:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 800ec02:	9205      	str	r2, [sp, #20]
 800ec04:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 800ec06:	9500      	str	r5, [sp, #0]
 800ec08:	e9cd b203 	strd	fp, r2, [sp, #12]
 800ec0c:	9a64      	ldr	r2, [sp, #400]	@ 0x190
 800ec0e:	9809      	ldr	r0, [sp, #36]	@ 0x24
 800ec10:	e9cd 8201 	strd	r8, r2, [sp, #4]
 800ec14:	a912      	add	r1, sp, #72	@ 0x48
 800ec16:	f8d3 9048 	ldr.w	r9, [r3, #72]	@ 0x48
 800ec1a:	aa49      	add	r2, sp, #292	@ 0x124
 800ec1c:	4623      	mov	r3, r4
 800ec1e:	47c8      	blx	r9
 800ec20:	e9d4 2300 	ldrd	r2, r3, [r4]
 800ec24:	441a      	add	r2, r3
 800ec26:	6963      	ldr	r3, [r4, #20]
 800ec28:	ed94 7a0a 	vldr	s14, [r4, #40]	@ 0x28
 800ec2c:	edd4 7a0b 	vldr	s15, [r4, #44]	@ 0x2c
 800ec30:	edd4 6a0e 	vldr	s13, [r4, #56]	@ 0x38
 800ec34:	68a1      	ldr	r1, [r4, #8]
 800ec36:	ed94 6a08 	vldr	s12, [r4, #32]
 800ec3a:	6022      	str	r2, [r4, #0]
 800ec3c:	3301      	adds	r3, #1
 800ec3e:	6163      	str	r3, [r4, #20]
 800ec40:	69a3      	ldr	r3, [r4, #24]
 800ec42:	ee37 7a27 	vadd.f32	s14, s14, s15
 800ec46:	3b01      	subs	r3, #1
 800ec48:	edd4 7a0d 	vldr	s15, [r4, #52]	@ 0x34
 800ec4c:	61a3      	str	r3, [r4, #24]
 800ec4e:	6923      	ldr	r3, [r4, #16]
 800ec50:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
 800ec54:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800ec58:	edd4 6a07 	vldr	s13, [r4, #28]
 800ec5c:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
 800ec60:	440b      	add	r3, r1
 800ec62:	68e1      	ldr	r1, [r4, #12]
 800ec64:	6123      	str	r3, [r4, #16]
 800ec66:	ee76 6a86 	vadd.f32	s13, s13, s12
 800ec6a:	428b      	cmp	r3, r1
 800ec6c:	edc4 6a07 	vstr	s13, [r4, #28]
 800ec70:	db15      	blt.n	800ec9e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x28e>
 800ec72:	ed94 6a09 	vldr	s12, [r4, #36]	@ 0x24
 800ec76:	ee76 6a26 	vadd.f32	s13, s12, s13
 800ec7a:	3201      	adds	r2, #1
 800ec7c:	edc4 6a07 	vstr	s13, [r4, #28]
 800ec80:	edd4 6a0c 	vldr	s13, [r4, #48]	@ 0x30
 800ec84:	6022      	str	r2, [r4, #0]
 800ec86:	ee36 7a87 	vadd.f32	s14, s13, s14
 800ec8a:	1a5b      	subs	r3, r3, r1
 800ec8c:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
 800ec90:	ed94 7a0f 	vldr	s14, [r4, #60]	@ 0x3c
 800ec94:	6123      	str	r3, [r4, #16]
 800ec96:	ee77 7a27 	vadd.f32	s15, s14, s15
 800ec9a:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
 800ec9e:	e9d5 2300 	ldrd	r2, r3, [r5]
 800eca2:	441a      	add	r2, r3
 800eca4:	696b      	ldr	r3, [r5, #20]
 800eca6:	ed95 7a0a 	vldr	s14, [r5, #40]	@ 0x28
 800ecaa:	edd5 7a0b 	vldr	s15, [r5, #44]	@ 0x2c
 800ecae:	edd5 6a0e 	vldr	s13, [r5, #56]	@ 0x38
 800ecb2:	68a9      	ldr	r1, [r5, #8]
 800ecb4:	ed95 6a08 	vldr	s12, [r5, #32]
 800ecb8:	602a      	str	r2, [r5, #0]
 800ecba:	3301      	adds	r3, #1
 800ecbc:	616b      	str	r3, [r5, #20]
 800ecbe:	69ab      	ldr	r3, [r5, #24]
 800ecc0:	ee37 7a27 	vadd.f32	s14, s14, s15
 800ecc4:	3b01      	subs	r3, #1
 800ecc6:	edd5 7a0d 	vldr	s15, [r5, #52]	@ 0x34
 800ecca:	61ab      	str	r3, [r5, #24]
 800eccc:	692b      	ldr	r3, [r5, #16]
 800ecce:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
 800ecd2:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800ecd6:	edd5 6a07 	vldr	s13, [r5, #28]
 800ecda:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
 800ecde:	440b      	add	r3, r1
 800ece0:	68e9      	ldr	r1, [r5, #12]
 800ece2:	612b      	str	r3, [r5, #16]
 800ece4:	ee76 6a86 	vadd.f32	s13, s13, s12
 800ece8:	428b      	cmp	r3, r1
 800ecea:	edc5 6a07 	vstr	s13, [r5, #28]
 800ecee:	db15      	blt.n	800ed1c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x30c>
 800ecf0:	ed95 6a09 	vldr	s12, [r5, #36]	@ 0x24
 800ecf4:	ee76 6a26 	vadd.f32	s13, s12, s13
 800ecf8:	3201      	adds	r2, #1
 800ecfa:	edc5 6a07 	vstr	s13, [r5, #28]
 800ecfe:	edd5 6a0c 	vldr	s13, [r5, #48]	@ 0x30
 800ed02:	602a      	str	r2, [r5, #0]
 800ed04:	ee36 7a87 	vadd.f32	s14, s13, s14
 800ed08:	1a5b      	subs	r3, r3, r1
 800ed0a:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
 800ed0e:	ed95 7a0f 	vldr	s14, [r5, #60]	@ 0x3c
 800ed12:	612b      	str	r3, [r5, #16]
 800ed14:	ee77 7a27 	vadd.f32	s15, s14, s15
 800ed18:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
 800ed1c:	3f01      	subs	r7, #1
 800ed1e:	e757      	b.n	800ebd0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1c0>
 800ed20:	4299      	cmp	r1, r3
 800ed22:	dc13      	bgt.n	800ed4c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x33c>
 800ed24:	429a      	cmp	r2, r3
 800ed26:	da14      	bge.n	800ed52 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x342>
 800ed28:	2502      	movs	r5, #2
 800ed2a:	2703      	movs	r7, #3
 800ed2c:	46a9      	mov	r9, r5
 800ed2e:	f04f 0800 	mov.w	r8, #0
 800ed32:	f04f 0a01 	mov.w	sl, #1
 800ed36:	e6ef      	b.n	800eb18 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 800ed38:	2501      	movs	r5, #1
 800ed3a:	2700      	movs	r7, #0
 800ed3c:	46a9      	mov	r9, r5
 800ed3e:	46b8      	mov	r8, r7
 800ed40:	f04f 0a02 	mov.w	sl, #2
 800ed44:	e6e8      	b.n	800eb18 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 800ed46:	2501      	movs	r5, #1
 800ed48:	2702      	movs	r7, #2
 800ed4a:	e6e1      	b.n	800eb10 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x100>
 800ed4c:	2500      	movs	r5, #0
 800ed4e:	2701      	movs	r7, #1
 800ed50:	e7f4      	b.n	800ed3c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x32c>
 800ed52:	2702      	movs	r7, #2
 800ed54:	2503      	movs	r5, #3
 800ed56:	f04f 0900 	mov.w	r9, #0
 800ed5a:	46b8      	mov	r8, r7
 800ed5c:	e7e9      	b.n	800ed32 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x322>
 800ed5e:	4613      	mov	r3, r2
 800ed60:	e728      	b.n	800ebb4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1a4>
 800ed62:	bf00      	nop
 800ed64:	2001403a 	.word	0x2001403a
 800ed68:	fffd8f01 	.word	0xfffd8f01
 800ed6c:	00027100 	.word	0x00027100
 800ed70:	0004e1ff 	.word	0x0004e1ff
 800ed74:	0004e1fe 	.word	0x0004e1fe
 800ed78:	20014044 	.word	0x20014044
 800ed7c:	4613      	mov	r3, r2
 800ed7e:	992b      	ldr	r1, [sp, #172]	@ 0xac
 800ed80:	9111      	str	r1, [sp, #68]	@ 0x44
 800ed82:	e9dd 0a29 	ldrd	r0, sl, [sp, #164]	@ 0xa4
 800ed86:	e9dd 812c 	ldrd	r8, r1, [sp, #176]	@ 0xb0
 800ed8a:	9f2e      	ldr	r7, [sp, #184]	@ 0xb8
 800ed8c:	eddd 4a34 	vldr	s9, [sp, #208]	@ 0xd0
 800ed90:	ed9d 7a33 	vldr	s14, [sp, #204]	@ 0xcc
 800ed94:	ed9d 4a37 	vldr	s8, [sp, #220]	@ 0xdc
 800ed98:	eddd 7a36 	vldr	s15, [sp, #216]	@ 0xd8
 800ed9c:	eddd 3a31 	vldr	s7, [sp, #196]	@ 0xc4
 800eda0:	eddd 6a30 	vldr	s13, [sp, #192]	@ 0xc0
 800eda4:	ed9d 5a32 	vldr	s10, [sp, #200]	@ 0xc8
 800eda8:	eddd 5a35 	vldr	s11, [sp, #212]	@ 0xd4
 800edac:	ed9d 6a38 	vldr	s12, [sp, #224]	@ 0xe0
 800edb0:	469e      	mov	lr, r3
 800edb2:	469c      	mov	ip, r3
 800edb4:	f04f 0900 	mov.w	r9, #0
 800edb8:	f1bc 0f00 	cmp.w	ip, #0
 800edbc:	d147      	bne.n	800ee4e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x43e>
 800edbe:	eb03 0c07 	add.w	ip, r3, r7
 800edc2:	1ad7      	subs	r7, r2, r3
 800edc4:	f1b9 0f00 	cmp.w	r9, #0
 800edc8:	d009      	beq.n	800edde <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3ce>
 800edca:	e9cd c72e 	strd	ip, r7, [sp, #184]	@ 0xb8
 800edce:	9029      	str	r0, [sp, #164]	@ 0xa4
 800edd0:	ed8d 7a33 	vstr	s14, [sp, #204]	@ 0xcc
 800edd4:	edcd 7a36 	vstr	s15, [sp, #216]	@ 0xd8
 800edd8:	edcd 6a30 	vstr	s13, [sp, #192]	@ 0xc0
 800eddc:	912d      	str	r1, [sp, #180]	@ 0xb4
 800edde:	991b      	ldr	r1, [sp, #108]	@ 0x6c
 800ede0:	9111      	str	r1, [sp, #68]	@ 0x44
 800ede2:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	@ 0x64
 800ede6:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	@ 0x78
 800edea:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	@ 0x70
 800edee:	eddd 4a24 	vldr	s9, [sp, #144]	@ 0x90
 800edf2:	eddd 6a23 	vldr	s13, [sp, #140]	@ 0x8c
 800edf6:	ed9d 4a27 	vldr	s8, [sp, #156]	@ 0x9c
 800edfa:	ed9d 7a26 	vldr	s14, [sp, #152]	@ 0x98
 800edfe:	eddd 3a21 	vldr	s7, [sp, #132]	@ 0x84
 800ee02:	eddd 7a20 	vldr	s15, [sp, #128]	@ 0x80
 800ee06:	ed9d 5a22 	vldr	s10, [sp, #136]	@ 0x88
 800ee0a:	eddd 5a25 	vldr	s11, [sp, #148]	@ 0x94
 800ee0e:	ed9d 6a28 	vldr	s12, [sp, #160]	@ 0xa0
 800ee12:	f04f 0800 	mov.w	r8, #0
 800ee16:	f1be 0f00 	cmp.w	lr, #0
 800ee1a:	d031      	beq.n	800ee80 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x470>
 800ee1c:	9e11      	ldr	r6, [sp, #68]	@ 0x44
 800ee1e:	4431      	add	r1, r6
 800ee20:	4549      	cmp	r1, r9
 800ee22:	4450      	add	r0, sl
 800ee24:	ee76 6aa4 	vadd.f32	s13, s13, s9
 800ee28:	ee37 7a04 	vadd.f32	s14, s14, s8
 800ee2c:	ee77 7aa3 	vadd.f32	s15, s15, s7
 800ee30:	db08      	blt.n	800ee44 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x434>
 800ee32:	ee77 7a85 	vadd.f32	s15, s15, s10
 800ee36:	ee76 6aa5 	vadd.f32	s13, s13, s11
 800ee3a:	ee37 7a06 	vadd.f32	s14, s14, s12
 800ee3e:	3001      	adds	r0, #1
 800ee40:	eba1 0109 	sub.w	r1, r1, r9
 800ee44:	f10e 3eff 	add.w	lr, lr, #4294967295
 800ee48:	f04f 0801 	mov.w	r8, #1
 800ee4c:	e7e3      	b.n	800ee16 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x406>
 800ee4e:	9e11      	ldr	r6, [sp, #68]	@ 0x44
 800ee50:	4431      	add	r1, r6
 800ee52:	4541      	cmp	r1, r8
 800ee54:	4450      	add	r0, sl
 800ee56:	ee37 7a24 	vadd.f32	s14, s14, s9
 800ee5a:	ee77 7a84 	vadd.f32	s15, s15, s8
 800ee5e:	ee76 6aa3 	vadd.f32	s13, s13, s7
 800ee62:	db08      	blt.n	800ee76 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x466>
 800ee64:	ee76 6a85 	vadd.f32	s13, s13, s10
 800ee68:	ee37 7a25 	vadd.f32	s14, s14, s11
 800ee6c:	ee77 7a86 	vadd.f32	s15, s15, s12
 800ee70:	3001      	adds	r0, #1
 800ee72:	eba1 0108 	sub.w	r1, r1, r8
 800ee76:	f10c 3cff 	add.w	ip, ip, #4294967295
 800ee7a:	f04f 0901 	mov.w	r9, #1
 800ee7e:	e79b      	b.n	800edb8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3a8>
 800ee80:	449c      	add	ip, r3
 800ee82:	1aff      	subs	r7, r7, r3
 800ee84:	f1b8 0f00 	cmp.w	r8, #0
 800ee88:	d009      	beq.n	800ee9e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x48e>
 800ee8a:	e9cd c71e 	strd	ip, r7, [sp, #120]	@ 0x78
 800ee8e:	9019      	str	r0, [sp, #100]	@ 0x64
 800ee90:	edcd 6a23 	vstr	s13, [sp, #140]	@ 0x8c
 800ee94:	ed8d 7a26 	vstr	s14, [sp, #152]	@ 0x98
 800ee98:	edcd 7a20 	vstr	s15, [sp, #128]	@ 0x80
 800ee9c:	911d      	str	r1, [sp, #116]	@ 0x74
 800ee9e:	1ad2      	subs	r2, r2, r3
 800eea0:	e68b      	b.n	800ebba <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800eea2:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800eea4:	9a3f      	ldr	r2, [sp, #252]	@ 0xfc
 800eea6:	2b00      	cmp	r3, #0
 800eea8:	f000 80d1 	beq.w	800f04e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63e>
 800eeac:	ad19      	add	r5, sp, #100	@ 0x64
 800eeae:	ac39      	add	r4, sp, #228	@ 0xe4
 800eeb0:	9b64      	ldr	r3, [sp, #400]	@ 0x190
 800eeb2:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 800eeb6:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 800eeba:	930c      	str	r3, [sp, #48]	@ 0x30
 800eebc:	990c      	ldr	r1, [sp, #48]	@ 0x30
 800eebe:	6963      	ldr	r3, [r4, #20]
 800eec0:	440b      	add	r3, r1
 800eec2:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 800eec6:	4408      	add	r0, r1
 800eec8:	b200      	sxth	r0, r0
 800eeca:	4283      	cmp	r3, r0
 800eecc:	900d      	str	r0, [sp, #52]	@ 0x34
 800eece:	f280 80c1 	bge.w	800f054 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x644>
 800eed2:	428b      	cmp	r3, r1
 800eed4:	da08      	bge.n	800eee8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 800eed6:	2a00      	cmp	r2, #0
 800eed8:	dd06      	ble.n	800eee8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 800eeda:	1acb      	subs	r3, r1, r3
 800eedc:	429a      	cmp	r2, r3
 800eede:	f2c0 80bb 	blt.w	800f058 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x648>
 800eee2:	2b00      	cmp	r3, #0
 800eee4:	f300 80b9 	bgt.w	800f05a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x64a>
 800eee8:	6967      	ldr	r7, [r4, #20]
 800eeea:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 800eeec:	443b      	add	r3, r7
 800eeee:	461f      	mov	r7, r3
 800eef0:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 800eef2:	1bdf      	subs	r7, r3, r7
 800eef4:	4297      	cmp	r7, r2
 800eef6:	bfa8      	it	ge
 800eef8:	4617      	movge	r7, r2
 800eefa:	f10d 0850 	add.w	r8, sp, #80	@ 0x50
 800eefe:	2f00      	cmp	r7, #0
 800ef00:	f340 813c 	ble.w	800f17c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x76c>
 800ef04:	9b64      	ldr	r3, [sp, #400]	@ 0x190
 800ef06:	6829      	ldr	r1, [r5, #0]
 800ef08:	f9b3 2000 	ldrsh.w	r2, [r3]
 800ef0c:	f9bb 3000 	ldrsh.w	r3, [fp]
 800ef10:	6820      	ldr	r0, [r4, #0]
 800ef12:	4411      	add	r1, r2
 800ef14:	4299      	cmp	r1, r3
 800ef16:	dd1a      	ble.n	800ef4e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 800ef18:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 800ef1c:	440b      	add	r3, r1
 800ef1e:	4402      	add	r2, r0
 800ef20:	b21b      	sxth	r3, r3
 800ef22:	429a      	cmp	r2, r3
 800ef24:	dc13      	bgt.n	800ef4e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 800ef26:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800ef28:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 800ef2a:	681b      	ldr	r3, [r3, #0]
 800ef2c:	9206      	str	r2, [sp, #24]
 800ef2e:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 800ef30:	9205      	str	r2, [sp, #20]
 800ef32:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 800ef34:	9500      	str	r5, [sp, #0]
 800ef36:	e9cd b203 	strd	fp, r2, [sp, #12]
 800ef3a:	9a64      	ldr	r2, [sp, #400]	@ 0x190
 800ef3c:	9809      	ldr	r0, [sp, #36]	@ 0x24
 800ef3e:	e9cd 8201 	strd	r8, r2, [sp, #4]
 800ef42:	a912      	add	r1, sp, #72	@ 0x48
 800ef44:	f8d3 9048 	ldr.w	r9, [r3, #72]	@ 0x48
 800ef48:	aa49      	add	r2, sp, #292	@ 0x124
 800ef4a:	4623      	mov	r3, r4
 800ef4c:	47c8      	blx	r9
 800ef4e:	e9d4 2300 	ldrd	r2, r3, [r4]
 800ef52:	441a      	add	r2, r3
 800ef54:	6963      	ldr	r3, [r4, #20]
 800ef56:	ed94 7a0a 	vldr	s14, [r4, #40]	@ 0x28
 800ef5a:	edd4 7a0b 	vldr	s15, [r4, #44]	@ 0x2c
 800ef5e:	edd4 6a0e 	vldr	s13, [r4, #56]	@ 0x38
 800ef62:	68a1      	ldr	r1, [r4, #8]
 800ef64:	ed94 6a08 	vldr	s12, [r4, #32]
 800ef68:	6022      	str	r2, [r4, #0]
 800ef6a:	3301      	adds	r3, #1
 800ef6c:	6163      	str	r3, [r4, #20]
 800ef6e:	69a3      	ldr	r3, [r4, #24]
 800ef70:	ee37 7a27 	vadd.f32	s14, s14, s15
 800ef74:	3b01      	subs	r3, #1
 800ef76:	edd4 7a0d 	vldr	s15, [r4, #52]	@ 0x34
 800ef7a:	61a3      	str	r3, [r4, #24]
 800ef7c:	6923      	ldr	r3, [r4, #16]
 800ef7e:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
 800ef82:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800ef86:	edd4 6a07 	vldr	s13, [r4, #28]
 800ef8a:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
 800ef8e:	440b      	add	r3, r1
 800ef90:	68e1      	ldr	r1, [r4, #12]
 800ef92:	6123      	str	r3, [r4, #16]
 800ef94:	ee76 6a86 	vadd.f32	s13, s13, s12
 800ef98:	428b      	cmp	r3, r1
 800ef9a:	edc4 6a07 	vstr	s13, [r4, #28]
 800ef9e:	db15      	blt.n	800efcc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x5bc>
 800efa0:	ed94 6a09 	vldr	s12, [r4, #36]	@ 0x24
 800efa4:	ee76 6a26 	vadd.f32	s13, s12, s13
 800efa8:	3201      	adds	r2, #1
 800efaa:	edc4 6a07 	vstr	s13, [r4, #28]
 800efae:	edd4 6a0c 	vldr	s13, [r4, #48]	@ 0x30
 800efb2:	6022      	str	r2, [r4, #0]
 800efb4:	ee36 7a87 	vadd.f32	s14, s13, s14
 800efb8:	1a5b      	subs	r3, r3, r1
 800efba:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
 800efbe:	ed94 7a0f 	vldr	s14, [r4, #60]	@ 0x3c
 800efc2:	6123      	str	r3, [r4, #16]
 800efc4:	ee77 7a27 	vadd.f32	s15, s14, s15
 800efc8:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
 800efcc:	e9d5 2300 	ldrd	r2, r3, [r5]
 800efd0:	441a      	add	r2, r3
 800efd2:	696b      	ldr	r3, [r5, #20]
 800efd4:	ed95 7a0a 	vldr	s14, [r5, #40]	@ 0x28
 800efd8:	edd5 7a0b 	vldr	s15, [r5, #44]	@ 0x2c
 800efdc:	edd5 6a0e 	vldr	s13, [r5, #56]	@ 0x38
 800efe0:	68a9      	ldr	r1, [r5, #8]
 800efe2:	ed95 6a08 	vldr	s12, [r5, #32]
 800efe6:	602a      	str	r2, [r5, #0]
 800efe8:	3301      	adds	r3, #1
 800efea:	616b      	str	r3, [r5, #20]
 800efec:	69ab      	ldr	r3, [r5, #24]
 800efee:	ee37 7a27 	vadd.f32	s14, s14, s15
 800eff2:	3b01      	subs	r3, #1
 800eff4:	edd5 7a0d 	vldr	s15, [r5, #52]	@ 0x34
 800eff8:	61ab      	str	r3, [r5, #24]
 800effa:	692b      	ldr	r3, [r5, #16]
 800effc:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
 800f000:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800f004:	edd5 6a07 	vldr	s13, [r5, #28]
 800f008:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
 800f00c:	440b      	add	r3, r1
 800f00e:	68e9      	ldr	r1, [r5, #12]
 800f010:	612b      	str	r3, [r5, #16]
 800f012:	ee76 6a86 	vadd.f32	s13, s13, s12
 800f016:	428b      	cmp	r3, r1
 800f018:	edc5 6a07 	vstr	s13, [r5, #28]
 800f01c:	db15      	blt.n	800f04a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63a>
 800f01e:	ed95 6a09 	vldr	s12, [r5, #36]	@ 0x24
 800f022:	ee76 6a26 	vadd.f32	s13, s12, s13
 800f026:	3201      	adds	r2, #1
 800f028:	edc5 6a07 	vstr	s13, [r5, #28]
 800f02c:	edd5 6a0c 	vldr	s13, [r5, #48]	@ 0x30
 800f030:	602a      	str	r2, [r5, #0]
 800f032:	ee36 7a87 	vadd.f32	s14, s13, s14
 800f036:	1a5b      	subs	r3, r3, r1
 800f038:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
 800f03c:	ed95 7a0f 	vldr	s14, [r5, #60]	@ 0x3c
 800f040:	612b      	str	r3, [r5, #16]
 800f042:	ee77 7a27 	vadd.f32	s15, s14, s15
 800f046:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
 800f04a:	3f01      	subs	r7, #1
 800f04c:	e757      	b.n	800eefe <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4ee>
 800f04e:	ad39      	add	r5, sp, #228	@ 0xe4
 800f050:	ac19      	add	r4, sp, #100	@ 0x64
 800f052:	e72d      	b.n	800eeb0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4a0>
 800f054:	4613      	mov	r3, r2
 800f056:	e744      	b.n	800eee2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d2>
 800f058:	4613      	mov	r3, r2
 800f05a:	e9dd 0a39 	ldrd	r0, sl, [sp, #228]	@ 0xe4
 800f05e:	9e3b      	ldr	r6, [sp, #236]	@ 0xec
 800f060:	f8dd c0f8 	ldr.w	ip, [sp, #248]	@ 0xf8
 800f064:	ed9d 7a43 	vldr	s14, [sp, #268]	@ 0x10c
 800f068:	eddd 4a44 	vldr	s9, [sp, #272]	@ 0x110
 800f06c:	eddd 7a46 	vldr	s15, [sp, #280]	@ 0x118
 800f070:	ed9d 4a47 	vldr	s8, [sp, #284]	@ 0x11c
 800f074:	eddd 6a40 	vldr	s13, [sp, #256]	@ 0x100
 800f078:	eddd 3a41 	vldr	s7, [sp, #260]	@ 0x104
 800f07c:	993d      	ldr	r1, [sp, #244]	@ 0xf4
 800f07e:	f8dd 80f0 	ldr.w	r8, [sp, #240]	@ 0xf0
 800f082:	ed9d 5a42 	vldr	s10, [sp, #264]	@ 0x108
 800f086:	eddd 5a45 	vldr	s11, [sp, #276]	@ 0x114
 800f08a:	ed9d 6a48 	vldr	s12, [sp, #288]	@ 0x120
 800f08e:	960e      	str	r6, [sp, #56]	@ 0x38
 800f090:	469e      	mov	lr, r3
 800f092:	461f      	mov	r7, r3
 800f094:	f04f 0900 	mov.w	r9, #0
 800f098:	2f00      	cmp	r7, #0
 800f09a:	d146      	bne.n	800f12a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x71a>
 800f09c:	449c      	add	ip, r3
 800f09e:	1ad7      	subs	r7, r2, r3
 800f0a0:	f1b9 0f00 	cmp.w	r9, #0
 800f0a4:	d009      	beq.n	800f0ba <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6aa>
 800f0a6:	e9cd c73e 	strd	ip, r7, [sp, #248]	@ 0xf8
 800f0aa:	9039      	str	r0, [sp, #228]	@ 0xe4
 800f0ac:	913d      	str	r1, [sp, #244]	@ 0xf4
 800f0ae:	edcd 6a40 	vstr	s13, [sp, #256]	@ 0x100
 800f0b2:	ed8d 7a43 	vstr	s14, [sp, #268]	@ 0x10c
 800f0b6:	edcd 7a46 	vstr	s15, [sp, #280]	@ 0x118
 800f0ba:	991b      	ldr	r1, [sp, #108]	@ 0x6c
 800f0bc:	910e      	str	r1, [sp, #56]	@ 0x38
 800f0be:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	@ 0x64
 800f0c2:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	@ 0x78
 800f0c6:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	@ 0x70
 800f0ca:	eddd 4a24 	vldr	s9, [sp, #144]	@ 0x90
 800f0ce:	eddd 6a23 	vldr	s13, [sp, #140]	@ 0x8c
 800f0d2:	ed9d 4a27 	vldr	s8, [sp, #156]	@ 0x9c
 800f0d6:	ed9d 7a26 	vldr	s14, [sp, #152]	@ 0x98
 800f0da:	eddd 3a21 	vldr	s7, [sp, #132]	@ 0x84
 800f0de:	eddd 7a20 	vldr	s15, [sp, #128]	@ 0x80
 800f0e2:	ed9d 5a22 	vldr	s10, [sp, #136]	@ 0x88
 800f0e6:	eddd 5a25 	vldr	s11, [sp, #148]	@ 0x94
 800f0ea:	ed9d 6a28 	vldr	s12, [sp, #160]	@ 0xa0
 800f0ee:	f04f 0800 	mov.w	r8, #0
 800f0f2:	f1be 0f00 	cmp.w	lr, #0
 800f0f6:	d030      	beq.n	800f15a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x74a>
 800f0f8:	9e0e      	ldr	r6, [sp, #56]	@ 0x38
 800f0fa:	4431      	add	r1, r6
 800f0fc:	4549      	cmp	r1, r9
 800f0fe:	4450      	add	r0, sl
 800f100:	ee76 6aa4 	vadd.f32	s13, s13, s9
 800f104:	ee37 7a04 	vadd.f32	s14, s14, s8
 800f108:	ee77 7aa3 	vadd.f32	s15, s15, s7
 800f10c:	db08      	blt.n	800f120 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x710>
 800f10e:	ee77 7a85 	vadd.f32	s15, s15, s10
 800f112:	ee76 6aa5 	vadd.f32	s13, s13, s11
 800f116:	ee37 7a06 	vadd.f32	s14, s14, s12
 800f11a:	3001      	adds	r0, #1
 800f11c:	eba1 0109 	sub.w	r1, r1, r9
 800f120:	f10e 3eff 	add.w	lr, lr, #4294967295
 800f124:	f04f 0801 	mov.w	r8, #1
 800f128:	e7e3      	b.n	800f0f2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6e2>
 800f12a:	9e0e      	ldr	r6, [sp, #56]	@ 0x38
 800f12c:	4431      	add	r1, r6
 800f12e:	4541      	cmp	r1, r8
 800f130:	4450      	add	r0, sl
 800f132:	ee37 7a24 	vadd.f32	s14, s14, s9
 800f136:	ee77 7a84 	vadd.f32	s15, s15, s8
 800f13a:	ee76 6aa3 	vadd.f32	s13, s13, s7
 800f13e:	db08      	blt.n	800f152 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x742>
 800f140:	ee76 6a85 	vadd.f32	s13, s13, s10
 800f144:	ee37 7a25 	vadd.f32	s14, s14, s11
 800f148:	ee77 7a86 	vadd.f32	s15, s15, s12
 800f14c:	3001      	adds	r0, #1
 800f14e:	eba1 0108 	sub.w	r1, r1, r8
 800f152:	3f01      	subs	r7, #1
 800f154:	f04f 0901 	mov.w	r9, #1
 800f158:	e79e      	b.n	800f098 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x688>
 800f15a:	449c      	add	ip, r3
 800f15c:	1aff      	subs	r7, r7, r3
 800f15e:	f1b8 0f00 	cmp.w	r8, #0
 800f162:	d009      	beq.n	800f178 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x768>
 800f164:	e9cd c71e 	strd	ip, r7, [sp, #120]	@ 0x78
 800f168:	9019      	str	r0, [sp, #100]	@ 0x64
 800f16a:	edcd 6a23 	vstr	s13, [sp, #140]	@ 0x8c
 800f16e:	ed8d 7a26 	vstr	s14, [sp, #152]	@ 0x98
 800f172:	edcd 7a20 	vstr	s15, [sp, #128]	@ 0x80
 800f176:	911d      	str	r1, [sp, #116]	@ 0x74
 800f178:	1ad2      	subs	r2, r2, r3
 800f17a:	e6b5      	b.n	800eee8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 800f17c:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800f17e:	681b      	ldr	r3, [r3, #0]
 800f180:	b923      	cbnz	r3, 800f18c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800f182:	4b04      	ldr	r3, [pc, #16]	@ (800f194 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x784>)
 800f184:	6818      	ldr	r0, [r3, #0]
 800f186:	6803      	ldr	r3, [r0, #0]
 800f188:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800f18a:	4798      	blx	r3
 800f18c:	b05b      	add	sp, #364	@ 0x16c
 800f18e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f192:	bf00      	nop
 800f194:	20014044 	.word	0x20014044

0800f198 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>:
 800f198:	2b03      	cmp	r3, #3
 800f19a:	d818      	bhi.n	800f1ce <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x36>
 800f19c:	e8df f003 	tbb	[pc, r3]
 800f1a0:	130d0602 	.word	0x130d0602
 800f1a4:	f9b0 2000 	ldrsh.w	r2, [r0]
 800f1a8:	1850      	adds	r0, r2, r1
 800f1aa:	4770      	bx	lr
 800f1ac:	8803      	ldrh	r3, [r0, #0]
 800f1ae:	8880      	ldrh	r0, [r0, #4]
 800f1b0:	4418      	add	r0, r3
 800f1b2:	b200      	sxth	r0, r0
 800f1b4:	1a80      	subs	r0, r0, r2
 800f1b6:	3801      	subs	r0, #1
 800f1b8:	4770      	bx	lr
 800f1ba:	8803      	ldrh	r3, [r0, #0]
 800f1bc:	8880      	ldrh	r0, [r0, #4]
 800f1be:	4418      	add	r0, r3
 800f1c0:	b200      	sxth	r0, r0
 800f1c2:	1a40      	subs	r0, r0, r1
 800f1c4:	e7f7      	b.n	800f1b6 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x1e>
 800f1c6:	f9b0 0000 	ldrsh.w	r0, [r0]
 800f1ca:	4410      	add	r0, r2
 800f1cc:	4770      	bx	lr
 800f1ce:	2000      	movs	r0, #0
 800f1d0:	4770      	bx	lr

0800f1d2 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>:
 800f1d2:	2b03      	cmp	r3, #3
 800f1d4:	d817      	bhi.n	800f206 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x34>
 800f1d6:	e8df f003 	tbb	[pc, r3]
 800f1da:	0602      	.short	0x0602
 800f1dc:	1009      	.short	0x1009
 800f1de:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 800f1e2:	1850      	adds	r0, r2, r1
 800f1e4:	4770      	bx	lr
 800f1e6:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 800f1ea:	e7fa      	b.n	800f1e2 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x10>
 800f1ec:	8843      	ldrh	r3, [r0, #2]
 800f1ee:	88c0      	ldrh	r0, [r0, #6]
 800f1f0:	4418      	add	r0, r3
 800f1f2:	b200      	sxth	r0, r0
 800f1f4:	1a80      	subs	r0, r0, r2
 800f1f6:	3801      	subs	r0, #1
 800f1f8:	4770      	bx	lr
 800f1fa:	8843      	ldrh	r3, [r0, #2]
 800f1fc:	88c0      	ldrh	r0, [r0, #6]
 800f1fe:	4418      	add	r0, r3
 800f200:	b200      	sxth	r0, r0
 800f202:	1a40      	subs	r0, r0, r1
 800f204:	e7f7      	b.n	800f1f6 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x24>
 800f206:	2000      	movs	r0, #0
 800f208:	4770      	bx	lr
	...

0800f20c <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE>:
 800f20c:	4b01      	ldr	r3, [pc, #4]	@ (800f214 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE+0x8>)
 800f20e:	2200      	movs	r2, #0
 800f210:	601a      	str	r2, [r3, #0]
 800f212:	4770      	bx	lr
 800f214:	20014054 	.word	0x20014054

0800f218 <_ZN8touchgfx16TouchCalibration4clzuEm>:
 800f218:	4603      	mov	r3, r0
 800f21a:	b1c8      	cbz	r0, 800f250 <_ZN8touchgfx16TouchCalibration4clzuEm+0x38>
 800f21c:	0c02      	lsrs	r2, r0, #16
 800f21e:	0412      	lsls	r2, r2, #16
 800f220:	b9a2      	cbnz	r2, 800f24c <_ZN8touchgfx16TouchCalibration4clzuEm+0x34>
 800f222:	0403      	lsls	r3, r0, #16
 800f224:	2010      	movs	r0, #16
 800f226:	f013 4f7f 	tst.w	r3, #4278190080	@ 0xff000000
 800f22a:	bf04      	itt	eq
 800f22c:	021b      	lsleq	r3, r3, #8
 800f22e:	3008      	addeq	r0, #8
 800f230:	f013 4f70 	tst.w	r3, #4026531840	@ 0xf0000000
 800f234:	bf04      	itt	eq
 800f236:	011b      	lsleq	r3, r3, #4
 800f238:	3004      	addeq	r0, #4
 800f23a:	f013 4f40 	tst.w	r3, #3221225472	@ 0xc0000000
 800f23e:	bf04      	itt	eq
 800f240:	009b      	lsleq	r3, r3, #2
 800f242:	3002      	addeq	r0, #2
 800f244:	2b00      	cmp	r3, #0
 800f246:	db04      	blt.n	800f252 <_ZN8touchgfx16TouchCalibration4clzuEm+0x3a>
 800f248:	3001      	adds	r0, #1
 800f24a:	4770      	bx	lr
 800f24c:	2000      	movs	r0, #0
 800f24e:	e7ea      	b.n	800f226 <_ZN8touchgfx16TouchCalibration4clzuEm+0xe>
 800f250:	2020      	movs	r0, #32
 800f252:	4770      	bx	lr

0800f254 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>:
 800f254:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f258:	b087      	sub	sp, #28
 800f25a:	460d      	mov	r5, r1
 800f25c:	4616      	mov	r6, r2
 800f25e:	4698      	mov	r8, r3
 800f260:	e9dd 4710 	ldrd	r4, r7, [sp, #64]	@ 0x40
 800f264:	4601      	mov	r1, r0
 800f266:	b120      	cbz	r0, 800f272 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 800f268:	b11a      	cbz	r2, 800f272 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 800f26a:	2d1f      	cmp	r5, #31
 800f26c:	d801      	bhi.n	800f272 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 800f26e:	2b1f      	cmp	r3, #31
 800f270:	d904      	bls.n	800f27c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x28>
 800f272:	2000      	movs	r0, #0
 800f274:	6038      	str	r0, [r7, #0]
 800f276:	b007      	add	sp, #28
 800f278:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f27c:	b97d      	cbnz	r5, 800f29e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x4a>
 800f27e:	b143      	cbz	r3, 800f292 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x3e>
 800f280:	4602      	mov	r2, r0
 800f282:	e9cd 4700 	strd	r4, r7, [sp]
 800f286:	462b      	mov	r3, r5
 800f288:	4641      	mov	r1, r8
 800f28a:	4630      	mov	r0, r6
 800f28c:	f7ff ffe2 	bl	800f254 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800f290:	e7f1      	b.n	800f276 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 800f292:	f04f 33ff 	mov.w	r3, #4294967295
 800f296:	603b      	str	r3, [r7, #0]
 800f298:	f06f 4000 	mvn.w	r0, #2147483648	@ 0x80000000
 800f29c:	e7eb      	b.n	800f276 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 800f29e:	fa32 fa05 	lsrs.w	sl, r2, r5
 800f2a2:	d106      	bne.n	800f2b2 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x5e>
 800f2a4:	4346      	muls	r6, r0
 800f2a6:	fbb6 f0f4 	udiv	r0, r6, r4
 800f2aa:	fb04 6610 	mls	r6, r4, r0, r6
 800f2ae:	603e      	str	r6, [r7, #0]
 800f2b0:	e7e1      	b.n	800f276 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 800f2b2:	2201      	movs	r2, #1
 800f2b4:	40aa      	lsls	r2, r5
 800f2b6:	3a01      	subs	r2, #1
 800f2b8:	4016      	ands	r6, r2
 800f2ba:	fa00 fb05 	lsl.w	fp, r0, r5
 800f2be:	4630      	mov	r0, r6
 800f2c0:	fbbb f9f4 	udiv	r9, fp, r4
 800f2c4:	fb0a f309 	mul.w	r3, sl, r9
 800f2c8:	9303      	str	r3, [sp, #12]
 800f2ca:	f7ff ffa5 	bl	800f218 <_ZN8touchgfx16TouchCalibration4clzuEm>
 800f2ce:	462b      	mov	r3, r5
 800f2d0:	460a      	mov	r2, r1
 800f2d2:	e9cd 4700 	strd	r4, r7, [sp]
 800f2d6:	4601      	mov	r1, r0
 800f2d8:	4630      	mov	r0, r6
 800f2da:	f7ff ffbb 	bl	800f254 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800f2de:	fb04 b919 	mls	r9, r4, r9, fp
 800f2e2:	4606      	mov	r6, r0
 800f2e4:	4648      	mov	r0, r9
 800f2e6:	eb05 0108 	add.w	r1, r5, r8
 800f2ea:	f7ff ff95 	bl	800f218 <_ZN8touchgfx16TouchCalibration4clzuEm>
 800f2ee:	ab05      	add	r3, sp, #20
 800f2f0:	e9cd 4300 	strd	r4, r3, [sp]
 800f2f4:	464a      	mov	r2, r9
 800f2f6:	4603      	mov	r3, r0
 800f2f8:	4650      	mov	r0, sl
 800f2fa:	f7ff ffab 	bl	800f254 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800f2fe:	6839      	ldr	r1, [r7, #0]
 800f300:	9a05      	ldr	r2, [sp, #20]
 800f302:	9b03      	ldr	r3, [sp, #12]
 800f304:	4411      	add	r1, r2
 800f306:	fbb1 f2f4 	udiv	r2, r1, r4
 800f30a:	18d3      	adds	r3, r2, r3
 800f30c:	441e      	add	r6, r3
 800f30e:	fb04 1412 	mls	r4, r4, r2, r1
 800f312:	4430      	add	r0, r6
 800f314:	603c      	str	r4, [r7, #0]
 800f316:	e7ae      	b.n	800f276 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>

0800f318 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>:
 800f318:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800f31c:	b085      	sub	sp, #20
 800f31e:	f1b0 0900 	subs.w	r9, r0, #0
 800f322:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 800f324:	461d      	mov	r5, r3
 800f326:	bfbf      	itttt	lt
 800f328:	6823      	ldrlt	r3, [r4, #0]
 800f32a:	425b      	neglt	r3, r3
 800f32c:	f1c9 0900 	rsblt	r9, r9, #0
 800f330:	6023      	strlt	r3, [r4, #0]
 800f332:	bfb4      	ite	lt
 800f334:	f04f 36ff 	movlt.w	r6, #4294967295
 800f338:	2601      	movge	r6, #1
 800f33a:	2a00      	cmp	r2, #0
 800f33c:	4617      	mov	r7, r2
 800f33e:	da04      	bge.n	800f34a <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x32>
 800f340:	6823      	ldr	r3, [r4, #0]
 800f342:	425b      	negs	r3, r3
 800f344:	4257      	negs	r7, r2
 800f346:	4276      	negs	r6, r6
 800f348:	6023      	str	r3, [r4, #0]
 800f34a:	2d00      	cmp	r5, #0
 800f34c:	4638      	mov	r0, r7
 800f34e:	bfba      	itte	lt
 800f350:	426d      	neglt	r5, r5
 800f352:	f04f 38ff 	movlt.w	r8, #4294967295
 800f356:	f04f 0801 	movge.w	r8, #1
 800f35a:	f7ff ff5d 	bl	800f218 <_ZN8touchgfx16TouchCalibration4clzuEm>
 800f35e:	ab03      	add	r3, sp, #12
 800f360:	e9cd 5300 	strd	r5, r3, [sp]
 800f364:	463a      	mov	r2, r7
 800f366:	4603      	mov	r3, r0
 800f368:	4648      	mov	r0, r9
 800f36a:	f7ff ff73 	bl	800f254 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800f36e:	6823      	ldr	r3, [r4, #0]
 800f370:	9a03      	ldr	r2, [sp, #12]
 800f372:	4546      	cmp	r6, r8
 800f374:	441a      	add	r2, r3
 800f376:	fb92 f3f5 	sdiv	r3, r2, r5
 800f37a:	4418      	add	r0, r3
 800f37c:	bf18      	it	ne
 800f37e:	4240      	negne	r0, r0
 800f380:	fb05 2313 	mls	r3, r5, r3, r2
 800f384:	1c72      	adds	r2, r6, #1
 800f386:	6023      	str	r3, [r4, #0]
 800f388:	d105      	bne.n	800f396 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7e>
 800f38a:	2b00      	cmp	r3, #0
 800f38c:	f1c3 0200 	rsb	r2, r3, #0
 800f390:	db0b      	blt.n	800f3aa <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x92>
 800f392:	6022      	str	r2, [r4, #0]
 800f394:	e006      	b.n	800f3a4 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 800f396:	2e01      	cmp	r6, #1
 800f398:	d104      	bne.n	800f3a4 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 800f39a:	2b00      	cmp	r3, #0
 800f39c:	da02      	bge.n	800f3a4 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 800f39e:	442b      	add	r3, r5
 800f3a0:	3801      	subs	r0, #1
 800f3a2:	6023      	str	r3, [r4, #0]
 800f3a4:	b005      	add	sp, #20
 800f3a6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800f3aa:	3801      	subs	r0, #1
 800f3ac:	1b52      	subs	r2, r2, r5
 800f3ae:	e7f0      	b.n	800f392 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7a>

0800f3b0 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>:
 800f3b0:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 800f3b4:	4c1c      	ldr	r4, [pc, #112]	@ (800f428 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x78>)
 800f3b6:	6807      	ldr	r7, [r0, #0]
 800f3b8:	69a3      	ldr	r3, [r4, #24]
 800f3ba:	4605      	mov	r5, r0
 800f3bc:	b92b      	cbnz	r3, 800f3ca <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x1a>
 800f3be:	6840      	ldr	r0, [r0, #4]
 800f3c0:	e9c5 7000 	strd	r7, r0, [r5]
 800f3c4:	b004      	add	sp, #16
 800f3c6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800f3ca:	68a2      	ldr	r2, [r4, #8]
 800f3cc:	6820      	ldr	r0, [r4, #0]
 800f3ce:	ae04      	add	r6, sp, #16
 800f3d0:	f04f 0802 	mov.w	r8, #2
 800f3d4:	fb93 f1f8 	sdiv	r1, r3, r8
 800f3d8:	440a      	add	r2, r1
 800f3da:	f846 2d04 	str.w	r2, [r6, #-4]!
 800f3de:	69e1      	ldr	r1, [r4, #28]
 800f3e0:	9600      	str	r6, [sp, #0]
 800f3e2:	463a      	mov	r2, r7
 800f3e4:	f7ff ff98 	bl	800f318 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800f3e8:	69a3      	ldr	r3, [r4, #24]
 800f3ea:	686a      	ldr	r2, [r5, #4]
 800f3ec:	6a21      	ldr	r1, [r4, #32]
 800f3ee:	9600      	str	r6, [sp, #0]
 800f3f0:	4607      	mov	r7, r0
 800f3f2:	6860      	ldr	r0, [r4, #4]
 800f3f4:	f7ff ff90 	bl	800f318 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800f3f8:	6962      	ldr	r2, [r4, #20]
 800f3fa:	69a3      	ldr	r3, [r4, #24]
 800f3fc:	fb93 f8f8 	sdiv	r8, r3, r8
 800f400:	4442      	add	r2, r8
 800f402:	9203      	str	r2, [sp, #12]
 800f404:	6a61      	ldr	r1, [r4, #36]	@ 0x24
 800f406:	682a      	ldr	r2, [r5, #0]
 800f408:	9600      	str	r6, [sp, #0]
 800f40a:	4407      	add	r7, r0
 800f40c:	68e0      	ldr	r0, [r4, #12]
 800f40e:	f7ff ff83 	bl	800f318 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800f412:	9600      	str	r6, [sp, #0]
 800f414:	4680      	mov	r8, r0
 800f416:	69a3      	ldr	r3, [r4, #24]
 800f418:	686a      	ldr	r2, [r5, #4]
 800f41a:	6aa1      	ldr	r1, [r4, #40]	@ 0x28
 800f41c:	6920      	ldr	r0, [r4, #16]
 800f41e:	f7ff ff7b 	bl	800f318 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800f422:	4440      	add	r0, r8
 800f424:	e7cc      	b.n	800f3c0 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x10>
 800f426:	bf00      	nop
 800f428:	20014058 	.word	0x20014058

0800f42c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>:
 800f42c:	4b07      	ldr	r3, [pc, #28]	@ (800f44c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x20>)
 800f42e:	781b      	ldrb	r3, [r3, #0]
 800f430:	2b01      	cmp	r3, #1
 800f432:	d109      	bne.n	800f448 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x1c>
 800f434:	f9b1 3000 	ldrsh.w	r3, [r1]
 800f438:	f9b0 2000 	ldrsh.w	r2, [r0]
 800f43c:	8003      	strh	r3, [r0, #0]
 800f43e:	4b04      	ldr	r3, [pc, #16]	@ (800f450 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x24>)
 800f440:	881b      	ldrh	r3, [r3, #0]
 800f442:	3b01      	subs	r3, #1
 800f444:	1a9b      	subs	r3, r3, r2
 800f446:	800b      	strh	r3, [r1, #0]
 800f448:	4770      	bx	lr
 800f44a:	bf00      	nop
 800f44c:	2001403a 	.word	0x2001403a
 800f450:	20014036 	.word	0x20014036

0800f454 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>:
 800f454:	b510      	push	{r4, lr}
 800f456:	4b07      	ldr	r3, [pc, #28]	@ (800f474 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x20>)
 800f458:	781b      	ldrb	r3, [r3, #0]
 800f45a:	2b01      	cmp	r3, #1
 800f45c:	d108      	bne.n	800f470 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x1c>
 800f45e:	4b06      	ldr	r3, [pc, #24]	@ (800f478 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x24>)
 800f460:	880c      	ldrh	r4, [r1, #0]
 800f462:	881b      	ldrh	r3, [r3, #0]
 800f464:	f9b0 2000 	ldrsh.w	r2, [r0]
 800f468:	3b01      	subs	r3, #1
 800f46a:	1b1b      	subs	r3, r3, r4
 800f46c:	8003      	strh	r3, [r0, #0]
 800f46e:	800a      	strh	r2, [r1, #0]
 800f470:	bd10      	pop	{r4, pc}
 800f472:	bf00      	nop
 800f474:	2001403a 	.word	0x2001403a
 800f478:	20014036 	.word	0x20014036

0800f47c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>:
 800f47c:	b510      	push	{r4, lr}
 800f47e:	4b0a      	ldr	r3, [pc, #40]	@ (800f4a8 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x2c>)
 800f480:	781b      	ldrb	r3, [r3, #0]
 800f482:	2b01      	cmp	r3, #1
 800f484:	d10e      	bne.n	800f4a4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x28>
 800f486:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 800f48a:	8843      	ldrh	r3, [r0, #2]
 800f48c:	f9b0 4000 	ldrsh.w	r4, [r0]
 800f490:	8044      	strh	r4, [r0, #2]
 800f492:	18ca      	adds	r2, r1, r3
 800f494:	4b05      	ldr	r3, [pc, #20]	@ (800f4ac <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x30>)
 800f496:	881b      	ldrh	r3, [r3, #0]
 800f498:	1a9b      	subs	r3, r3, r2
 800f49a:	8003      	strh	r3, [r0, #0]
 800f49c:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800f4a0:	80c3      	strh	r3, [r0, #6]
 800f4a2:	8081      	strh	r1, [r0, #4]
 800f4a4:	bd10      	pop	{r4, pc}
 800f4a6:	bf00      	nop
 800f4a8:	2001403a 	.word	0x2001403a
 800f4ac:	20014036 	.word	0x20014036

0800f4b0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>:
 800f4b0:	4b08      	ldr	r3, [pc, #32]	@ (800f4d4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x24>)
 800f4b2:	781b      	ldrb	r3, [r3, #0]
 800f4b4:	2b01      	cmp	r3, #1
 800f4b6:	d10c      	bne.n	800f4d2 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x22>
 800f4b8:	8803      	ldrh	r3, [r0, #0]
 800f4ba:	f9b0 1004 	ldrsh.w	r1, [r0, #4]
 800f4be:	8842      	ldrh	r2, [r0, #2]
 800f4c0:	8002      	strh	r2, [r0, #0]
 800f4c2:	185a      	adds	r2, r3, r1
 800f4c4:	4b04      	ldr	r3, [pc, #16]	@ (800f4d8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x28>)
 800f4c6:	881b      	ldrh	r3, [r3, #0]
 800f4c8:	1a9b      	subs	r3, r3, r2
 800f4ca:	8043      	strh	r3, [r0, #2]
 800f4cc:	88c3      	ldrh	r3, [r0, #6]
 800f4ce:	8083      	strh	r3, [r0, #4]
 800f4d0:	80c1      	strh	r1, [r0, #6]
 800f4d2:	4770      	bx	lr
 800f4d4:	2001403a 	.word	0x2001403a
 800f4d8:	20014036 	.word	0x20014036

0800f4dc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>:
 800f4dc:	b510      	push	{r4, lr}
 800f4de:	4b07      	ldr	r3, [pc, #28]	@ (800f4fc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x20>)
 800f4e0:	781b      	ldrb	r3, [r3, #0]
 800f4e2:	2b01      	cmp	r3, #1
 800f4e4:	d108      	bne.n	800f4f8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x1c>
 800f4e6:	f9b1 3000 	ldrsh.w	r3, [r1]
 800f4ea:	f9b0 4000 	ldrsh.w	r4, [r0]
 800f4ee:	8003      	strh	r3, [r0, #0]
 800f4f0:	8893      	ldrh	r3, [r2, #4]
 800f4f2:	3b01      	subs	r3, #1
 800f4f4:	1b1b      	subs	r3, r3, r4
 800f4f6:	800b      	strh	r3, [r1, #0]
 800f4f8:	bd10      	pop	{r4, pc}
 800f4fa:	bf00      	nop
 800f4fc:	2001403a 	.word	0x2001403a

0800f500 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>:
 800f500:	b510      	push	{r4, lr}
 800f502:	4b0a      	ldr	r3, [pc, #40]	@ (800f52c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x2c>)
 800f504:	781b      	ldrb	r3, [r3, #0]
 800f506:	2b01      	cmp	r3, #1
 800f508:	460a      	mov	r2, r1
 800f50a:	d10d      	bne.n	800f528 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x28>
 800f50c:	8881      	ldrh	r1, [r0, #4]
 800f50e:	8803      	ldrh	r3, [r0, #0]
 800f510:	440b      	add	r3, r1
 800f512:	4601      	mov	r1, r0
 800f514:	3b01      	subs	r3, #1
 800f516:	f821 3b02 	strh.w	r3, [r1], #2
 800f51a:	f7ff ffdf 	bl	800f4dc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
 800f51e:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800f522:	88c2      	ldrh	r2, [r0, #6]
 800f524:	8082      	strh	r2, [r0, #4]
 800f526:	80c3      	strh	r3, [r0, #6]
 800f528:	bd10      	pop	{r4, pc}
 800f52a:	bf00      	nop
 800f52c:	2001403a 	.word	0x2001403a

0800f530 <_ZN8touchgfx11Application13requestRedrawEv>:
 800f530:	4b06      	ldr	r3, [pc, #24]	@ (800f54c <_ZN8touchgfx11Application13requestRedrawEv+0x1c>)
 800f532:	f9b3 2000 	ldrsh.w	r2, [r3]
 800f536:	4b06      	ldr	r3, [pc, #24]	@ (800f550 <_ZN8touchgfx11Application13requestRedrawEv+0x20>)
 800f538:	f8a0 2134 	strh.w	r2, [r0, #308]	@ 0x134
 800f53c:	f9b3 3000 	ldrsh.w	r3, [r3]
 800f540:	f8a0 3136 	strh.w	r3, [r0, #310]	@ 0x136
 800f544:	2100      	movs	r1, #0
 800f546:	f8c0 1130 	str.w	r1, [r0, #304]	@ 0x130
 800f54a:	4770      	bx	lr
 800f54c:	20014036 	.word	0x20014036
 800f550:	20014038 	.word	0x20014038

0800f554 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE>:
 800f554:	4b03      	ldr	r3, [pc, #12]	@ (800f564 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0x10>)
 800f556:	6818      	ldr	r0, [r3, #0]
 800f558:	b110      	cbz	r0, 800f560 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0xc>
 800f55a:	6803      	ldr	r3, [r0, #0]
 800f55c:	699b      	ldr	r3, [r3, #24]
 800f55e:	4718      	bx	r3
 800f560:	4770      	bx	lr
 800f562:	bf00      	nop
 800f564:	20014088 	.word	0x20014088

0800f568 <_ZN8touchgfx11Application29handlePendingScreenTransitionEv>:
 800f568:	4770      	bx	lr
	...

0800f56c <_ZN8touchgfx11Application4drawEv>:
 800f56c:	b507      	push	{r0, r1, r2, lr}
 800f56e:	4b09      	ldr	r3, [pc, #36]	@ (800f594 <_ZN8touchgfx11Application4drawEv+0x28>)
 800f570:	f9b3 2000 	ldrsh.w	r2, [r3]
 800f574:	4b08      	ldr	r3, [pc, #32]	@ (800f598 <_ZN8touchgfx11Application4drawEv+0x2c>)
 800f576:	f8ad 2004 	strh.w	r2, [sp, #4]
 800f57a:	f9b3 3000 	ldrsh.w	r3, [r3]
 800f57e:	f8ad 3006 	strh.w	r3, [sp, #6]
 800f582:	6803      	ldr	r3, [r0, #0]
 800f584:	2100      	movs	r1, #0
 800f586:	9100      	str	r1, [sp, #0]
 800f588:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 800f58a:	4669      	mov	r1, sp
 800f58c:	4798      	blx	r3
 800f58e:	b003      	add	sp, #12
 800f590:	f85d fb04 	ldr.w	pc, [sp], #4
 800f594:	20014036 	.word	0x20014036
 800f598:	20014038 	.word	0x20014038

0800f59c <_ZN8touchgfx11Application10invalidateEv>:
 800f59c:	4b09      	ldr	r3, [pc, #36]	@ (800f5c4 <_ZN8touchgfx11Application10invalidateEv+0x28>)
 800f59e:	f9b3 2000 	ldrsh.w	r2, [r3]
 800f5a2:	4b09      	ldr	r3, [pc, #36]	@ (800f5c8 <_ZN8touchgfx11Application10invalidateEv+0x2c>)
 800f5a4:	b082      	sub	sp, #8
 800f5a6:	f9b3 3000 	ldrsh.w	r3, [r3]
 800f5aa:	f8ad 2004 	strh.w	r2, [sp, #4]
 800f5ae:	2100      	movs	r1, #0
 800f5b0:	f8ad 3006 	strh.w	r3, [sp, #6]
 800f5b4:	9100      	str	r1, [sp, #0]
 800f5b6:	6803      	ldr	r3, [r0, #0]
 800f5b8:	aa02      	add	r2, sp, #8
 800f5ba:	e912 0006 	ldmdb	r2, {r1, r2}
 800f5be:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800f5c0:	b002      	add	sp, #8
 800f5c2:	4718      	bx	r3
 800f5c4:	20014036 	.word	0x20014036
 800f5c8:	20014038 	.word	0x20014038

0800f5cc <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE>:
 800f5cc:	4b03      	ldr	r3, [pc, #12]	@ (800f5dc <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0x10>)
 800f5ce:	6818      	ldr	r0, [r3, #0]
 800f5d0:	b110      	cbz	r0, 800f5d8 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0xc>
 800f5d2:	6803      	ldr	r3, [r0, #0]
 800f5d4:	69db      	ldr	r3, [r3, #28]
 800f5d6:	4718      	bx	r3
 800f5d8:	4770      	bx	lr
 800f5da:	bf00      	nop
 800f5dc:	20014088 	.word	0x20014088

0800f5e0 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE>:
 800f5e0:	4b03      	ldr	r3, [pc, #12]	@ (800f5f0 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0x10>)
 800f5e2:	6818      	ldr	r0, [r3, #0]
 800f5e4:	b110      	cbz	r0, 800f5ec <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0xc>
 800f5e6:	6803      	ldr	r3, [r0, #0]
 800f5e8:	6a1b      	ldr	r3, [r3, #32]
 800f5ea:	4718      	bx	r3
 800f5ec:	4770      	bx	lr
 800f5ee:	bf00      	nop
 800f5f0:	20014088 	.word	0x20014088

0800f5f4 <_ZN8touchgfx11Application16clearCachedAreasEv>:
 800f5f4:	2300      	movs	r3, #0
 800f5f6:	f8a0 30ec 	strh.w	r3, [r0, #236]	@ 0xec
 800f5fa:	4770      	bx	lr

0800f5fc <_ZN8touchgfx11Application14handleKeyEventEh>:
 800f5fc:	4b03      	ldr	r3, [pc, #12]	@ (800f60c <_ZN8touchgfx11Application14handleKeyEventEh+0x10>)
 800f5fe:	6818      	ldr	r0, [r3, #0]
 800f600:	b110      	cbz	r0, 800f608 <_ZN8touchgfx11Application14handleKeyEventEh+0xc>
 800f602:	6803      	ldr	r3, [r0, #0]
 800f604:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800f606:	4718      	bx	r3
 800f608:	4770      	bx	lr
 800f60a:	bf00      	nop
 800f60c:	20014088 	.word	0x20014088

0800f610 <_ZN8touchgfx11ApplicationD1Ev>:
 800f610:	4770      	bx	lr

0800f612 <_ZN8touchgfx11ApplicationD0Ev>:
 800f612:	b510      	push	{r4, lr}
 800f614:	f44f 719e 	mov.w	r1, #316	@ 0x13c
 800f618:	4604      	mov	r4, r0
 800f61a:	f012 fb76 	bl	8021d0a <_ZdlPvj>
 800f61e:	4620      	mov	r0, r4
 800f620:	bd10      	pop	{r4, pc}

0800f622 <_ZNK8touchgfx4Rect9intersectERKS0_>:
 800f622:	b510      	push	{r4, lr}
 800f624:	f9b1 4000 	ldrsh.w	r4, [r1]
 800f628:	888a      	ldrh	r2, [r1, #4]
 800f62a:	f9b0 3000 	ldrsh.w	r3, [r0]
 800f62e:	4422      	add	r2, r4
 800f630:	b212      	sxth	r2, r2
 800f632:	4293      	cmp	r3, r2
 800f634:	da15      	bge.n	800f662 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 800f636:	8882      	ldrh	r2, [r0, #4]
 800f638:	4413      	add	r3, r2
 800f63a:	b21b      	sxth	r3, r3
 800f63c:	429c      	cmp	r4, r3
 800f63e:	da10      	bge.n	800f662 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 800f640:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 800f644:	88c9      	ldrh	r1, [r1, #6]
 800f646:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 800f64a:	4419      	add	r1, r3
 800f64c:	b209      	sxth	r1, r1
 800f64e:	428a      	cmp	r2, r1
 800f650:	da07      	bge.n	800f662 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 800f652:	88c0      	ldrh	r0, [r0, #6]
 800f654:	4410      	add	r0, r2
 800f656:	b200      	sxth	r0, r0
 800f658:	4283      	cmp	r3, r0
 800f65a:	bfac      	ite	ge
 800f65c:	2000      	movge	r0, #0
 800f65e:	2001      	movlt	r0, #1
 800f660:	bd10      	pop	{r4, pc}
 800f662:	2000      	movs	r0, #0
 800f664:	e7fc      	b.n	800f660 <_ZNK8touchgfx4Rect9intersectERKS0_+0x3e>

0800f666 <_ZN8touchgfx4Rect10restrictToEss>:
 800f666:	f9b0 3000 	ldrsh.w	r3, [r0]
 800f66a:	2b00      	cmp	r3, #0
 800f66c:	b510      	push	{r4, lr}
 800f66e:	da04      	bge.n	800f67a <_ZN8touchgfx4Rect10restrictToEss+0x14>
 800f670:	8884      	ldrh	r4, [r0, #4]
 800f672:	4423      	add	r3, r4
 800f674:	8083      	strh	r3, [r0, #4]
 800f676:	2300      	movs	r3, #0
 800f678:	8003      	strh	r3, [r0, #0]
 800f67a:	f9b0 4000 	ldrsh.w	r4, [r0]
 800f67e:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800f682:	1b09      	subs	r1, r1, r4
 800f684:	428b      	cmp	r3, r1
 800f686:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 800f68a:	bfc8      	it	gt
 800f68c:	8081      	strhgt	r1, [r0, #4]
 800f68e:	2b00      	cmp	r3, #0
 800f690:	da04      	bge.n	800f69c <_ZN8touchgfx4Rect10restrictToEss+0x36>
 800f692:	88c1      	ldrh	r1, [r0, #6]
 800f694:	440b      	add	r3, r1
 800f696:	80c3      	strh	r3, [r0, #6]
 800f698:	2300      	movs	r3, #0
 800f69a:	8043      	strh	r3, [r0, #2]
 800f69c:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 800f6a0:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 800f6a4:	1a52      	subs	r2, r2, r1
 800f6a6:	4293      	cmp	r3, r2
 800f6a8:	bfc8      	it	gt
 800f6aa:	80c2      	strhgt	r2, [r0, #6]
 800f6ac:	bd10      	pop	{r4, pc}
	...

0800f6b0 <_ZN8touchgfx11Application4drawERNS_4RectE>:
 800f6b0:	b510      	push	{r4, lr}
 800f6b2:	4b10      	ldr	r3, [pc, #64]	@ (800f6f4 <_ZN8touchgfx11Application4drawERNS_4RectE+0x44>)
 800f6b4:	f9b3 2000 	ldrsh.w	r2, [r3]
 800f6b8:	4b0f      	ldr	r3, [pc, #60]	@ (800f6f8 <_ZN8touchgfx11Application4drawERNS_4RectE+0x48>)
 800f6ba:	460c      	mov	r4, r1
 800f6bc:	4620      	mov	r0, r4
 800f6be:	f9b3 1000 	ldrsh.w	r1, [r3]
 800f6c2:	f7ff ffd0 	bl	800f666 <_ZN8touchgfx4Rect10restrictToEss>
 800f6c6:	4b0d      	ldr	r3, [pc, #52]	@ (800f6fc <_ZN8touchgfx11Application4drawERNS_4RectE+0x4c>)
 800f6c8:	6818      	ldr	r0, [r3, #0]
 800f6ca:	b190      	cbz	r0, 800f6f2 <_ZN8touchgfx11Application4drawERNS_4RectE+0x42>
 800f6cc:	6803      	ldr	r3, [r0, #0]
 800f6ce:	4621      	mov	r1, r4
 800f6d0:	689b      	ldr	r3, [r3, #8]
 800f6d2:	4798      	blx	r3
 800f6d4:	4b0a      	ldr	r3, [pc, #40]	@ (800f700 <_ZN8touchgfx11Application4drawERNS_4RectE+0x50>)
 800f6d6:	6818      	ldr	r0, [r3, #0]
 800f6d8:	b118      	cbz	r0, 800f6e2 <_ZN8touchgfx11Application4drawERNS_4RectE+0x32>
 800f6da:	6803      	ldr	r3, [r0, #0]
 800f6dc:	4621      	mov	r1, r4
 800f6de:	689b      	ldr	r3, [r3, #8]
 800f6e0:	4798      	blx	r3
 800f6e2:	4b08      	ldr	r3, [pc, #32]	@ (800f704 <_ZN8touchgfx11Application4drawERNS_4RectE+0x54>)
 800f6e4:	6818      	ldr	r0, [r3, #0]
 800f6e6:	6803      	ldr	r3, [r0, #0]
 800f6e8:	4621      	mov	r1, r4
 800f6ea:	69db      	ldr	r3, [r3, #28]
 800f6ec:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800f6f0:	4718      	bx	r3
 800f6f2:	bd10      	pop	{r4, pc}
 800f6f4:	20014038 	.word	0x20014038
 800f6f8:	20014036 	.word	0x20014036
 800f6fc:	20014088 	.word	0x20014088
 800f700:	20014084 	.word	0x20014084
 800f704:	20014044 	.word	0x20014044

0800f708 <_ZNK8touchgfx4Rect8includesERKS0_>:
 800f708:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800f70a:	4606      	mov	r6, r0
 800f70c:	4608      	mov	r0, r1
 800f70e:	460f      	mov	r7, r1
 800f710:	f7fa ff1d 	bl	800a54e <_ZNK8touchgfx4Rect7isEmptyEv>
 800f714:	b9e8      	cbnz	r0, 800f752 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 800f716:	f9b7 5000 	ldrsh.w	r5, [r7]
 800f71a:	f9b6 4000 	ldrsh.w	r4, [r6]
 800f71e:	42a5      	cmp	r5, r4
 800f720:	db17      	blt.n	800f752 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 800f722:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 800f726:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
 800f72a:	429a      	cmp	r2, r3
 800f72c:	db11      	blt.n	800f752 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 800f72e:	88b9      	ldrh	r1, [r7, #4]
 800f730:	440d      	add	r5, r1
 800f732:	88b1      	ldrh	r1, [r6, #4]
 800f734:	440c      	add	r4, r1
 800f736:	b22d      	sxth	r5, r5
 800f738:	b224      	sxth	r4, r4
 800f73a:	42a5      	cmp	r5, r4
 800f73c:	dc09      	bgt.n	800f752 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 800f73e:	88f8      	ldrh	r0, [r7, #6]
 800f740:	4410      	add	r0, r2
 800f742:	88f2      	ldrh	r2, [r6, #6]
 800f744:	4413      	add	r3, r2
 800f746:	b200      	sxth	r0, r0
 800f748:	b21b      	sxth	r3, r3
 800f74a:	4298      	cmp	r0, r3
 800f74c:	bfcc      	ite	gt
 800f74e:	2000      	movgt	r0, #0
 800f750:	2001      	movle	r0, #1
 800f752:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800f754 <_ZN8touchgfx4Rect11expandToFitERKS0_>:
 800f754:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800f756:	4604      	mov	r4, r0
 800f758:	4608      	mov	r0, r1
 800f75a:	460d      	mov	r5, r1
 800f75c:	f7fa fef7 	bl	800a54e <_ZNK8touchgfx4Rect7isEmptyEv>
 800f760:	b978      	cbnz	r0, 800f782 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
 800f762:	4620      	mov	r0, r4
 800f764:	f7fa fef3 	bl	800a54e <_ZNK8touchgfx4Rect7isEmptyEv>
 800f768:	f9b5 6000 	ldrsh.w	r6, [r5]
 800f76c:	b150      	cbz	r0, 800f784 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x30>
 800f76e:	8026      	strh	r6, [r4, #0]
 800f770:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 800f774:	8063      	strh	r3, [r4, #2]
 800f776:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
 800f77a:	80a3      	strh	r3, [r4, #4]
 800f77c:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 800f780:	80e3      	strh	r3, [r4, #6]
 800f782:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800f784:	f9b4 1000 	ldrsh.w	r1, [r4]
 800f788:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 800f78c:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
 800f790:	f8b5 c004 	ldrh.w	ip, [r5, #4]
 800f794:	88ed      	ldrh	r5, [r5, #6]
 800f796:	42b1      	cmp	r1, r6
 800f798:	460f      	mov	r7, r1
 800f79a:	bfa8      	it	ge
 800f79c:	4637      	movge	r7, r6
 800f79e:	4293      	cmp	r3, r2
 800f7a0:	4618      	mov	r0, r3
 800f7a2:	4466      	add	r6, ip
 800f7a4:	bfa8      	it	ge
 800f7a6:	4610      	movge	r0, r2
 800f7a8:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 800f7ac:	8027      	strh	r7, [r4, #0]
 800f7ae:	442a      	add	r2, r5
 800f7b0:	88e5      	ldrh	r5, [r4, #6]
 800f7b2:	8060      	strh	r0, [r4, #2]
 800f7b4:	4461      	add	r1, ip
 800f7b6:	442b      	add	r3, r5
 800f7b8:	b236      	sxth	r6, r6
 800f7ba:	b209      	sxth	r1, r1
 800f7bc:	b212      	sxth	r2, r2
 800f7be:	b21b      	sxth	r3, r3
 800f7c0:	428e      	cmp	r6, r1
 800f7c2:	bfac      	ite	ge
 800f7c4:	ebc7 0106 	rsbge	r1, r7, r6
 800f7c8:	ebc7 0101 	rsblt	r1, r7, r1
 800f7cc:	429a      	cmp	r2, r3
 800f7ce:	bfac      	ite	ge
 800f7d0:	ebc0 0202 	rsbge	r2, r0, r2
 800f7d4:	ebc0 0203 	rsblt	r2, r0, r3
 800f7d8:	80a1      	strh	r1, [r4, #4]
 800f7da:	80e2      	strh	r2, [r4, #6]
 800f7dc:	e7d1      	b.n	800f782 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
	...

0800f7e0 <_ZN8touchgfx11Application11getInstanceEv>:
 800f7e0:	4b01      	ldr	r3, [pc, #4]	@ (800f7e8 <_ZN8touchgfx11Application11getInstanceEv+0x8>)
 800f7e2:	6818      	ldr	r0, [r3, #0]
 800f7e4:	4770      	bx	lr
 800f7e6:	bf00      	nop
 800f7e8:	20014098 	.word	0x20014098

0800f7ec <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>:
 800f7ec:	b510      	push	{r4, lr}
 800f7ee:	2300      	movs	r3, #0
 800f7f0:	f8a0 30a4 	strh.w	r3, [r0, #164]	@ 0xa4
 800f7f4:	f8b0 3080 	ldrh.w	r3, [r0, #128]	@ 0x80
 800f7f8:	f8a0 30a6 	strh.w	r3, [r0, #166]	@ 0xa6
 800f7fc:	4604      	mov	r4, r0
 800f7fe:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	@ 0xa4
 800f802:	f8b4 20a6 	ldrh.w	r2, [r4, #166]	@ 0xa6
 800f806:	429a      	cmp	r2, r3
 800f808:	d90e      	bls.n	800f828 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x3c>
 800f80a:	18e2      	adds	r2, r4, r3
 800f80c:	f892 2084 	ldrb.w	r2, [r2, #132]	@ 0x84
 800f810:	b122      	cbz	r2, 800f81c <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x30>
 800f812:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
 800f816:	6803      	ldr	r3, [r0, #0]
 800f818:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800f81a:	4798      	blx	r3
 800f81c:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	@ 0xa4
 800f820:	3301      	adds	r3, #1
 800f822:	f8a4 30a4 	strh.w	r3, [r4, #164]	@ 0xa4
 800f826:	e7ea      	b.n	800f7fe <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x12>
 800f828:	bd10      	pop	{r4, pc}

0800f82a <_ZN8touchgfx11Application12TimerWidgets5clearEv>:
 800f82a:	2300      	movs	r3, #0
 800f82c:	f8a0 3080 	strh.w	r3, [r0, #128]	@ 0x80
 800f830:	f100 0284 	add.w	r2, r0, #132	@ 0x84
 800f834:	30a4      	adds	r0, #164	@ 0xa4
 800f836:	f802 3b01 	strb.w	r3, [r2], #1
 800f83a:	4282      	cmp	r2, r0
 800f83c:	d1fb      	bne.n	800f836 <_ZN8touchgfx11Application12TimerWidgets5clearEv+0xc>
 800f83e:	4770      	bx	lr

0800f840 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE>:
 800f840:	b570      	push	{r4, r5, r6, lr}
 800f842:	4c0b      	ldr	r4, [pc, #44]	@ (800f870 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x30>)
 800f844:	4605      	mov	r5, r0
 800f846:	6820      	ldr	r0, [r4, #0]
 800f848:	460e      	mov	r6, r1
 800f84a:	b110      	cbz	r0, 800f852 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x12>
 800f84c:	6803      	ldr	r3, [r0, #0]
 800f84e:	695b      	ldr	r3, [r3, #20]
 800f850:	4798      	blx	r3
 800f852:	1d28      	adds	r0, r5, #4
 800f854:	f7ff ffe9 	bl	800f82a <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 800f858:	6026      	str	r6, [r4, #0]
 800f85a:	6833      	ldr	r3, [r6, #0]
 800f85c:	4630      	mov	r0, r6
 800f85e:	68db      	ldr	r3, [r3, #12]
 800f860:	4798      	blx	r3
 800f862:	682b      	ldr	r3, [r5, #0]
 800f864:	4628      	mov	r0, r5
 800f866:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800f868:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800f86c:	4718      	bx	r3
 800f86e:	bf00      	nop
 800f870:	20014088 	.word	0x20014088

0800f874 <_ZN8touchgfx11Application12TimerWidgets7compactEv>:
 800f874:	2300      	movs	r3, #0
 800f876:	f8b0 c080 	ldrh.w	ip, [r0, #128]	@ 0x80
 800f87a:	f8b0 10a4 	ldrh.w	r1, [r0, #164]	@ 0xa4
 800f87e:	b5f0      	push	{r4, r5, r6, r7, lr}
 800f880:	461a      	mov	r2, r3
 800f882:	461c      	mov	r4, r3
 800f884:	461d      	mov	r5, r3
 800f886:	459c      	cmp	ip, r3
 800f888:	dd1a      	ble.n	800f8c0 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x4c>
 800f88a:	18c6      	adds	r6, r0, r3
 800f88c:	f896 6084 	ldrb.w	r6, [r6, #132]	@ 0x84
 800f890:	b16e      	cbz	r6, 800f8ae <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x3a>
 800f892:	429a      	cmp	r2, r3
 800f894:	d008      	beq.n	800f8a8 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x34>
 800f896:	fa1f fe82 	uxth.w	lr, r2
 800f89a:	f850 7023 	ldr.w	r7, [r0, r3, lsl #2]
 800f89e:	f840 702e 	str.w	r7, [r0, lr, lsl #2]
 800f8a2:	1887      	adds	r7, r0, r2
 800f8a4:	f887 6084 	strb.w	r6, [r7, #132]	@ 0x84
 800f8a8:	3201      	adds	r2, #1
 800f8aa:	3301      	adds	r3, #1
 800f8ac:	e7eb      	b.n	800f886 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x12>
 800f8ae:	f8b0 60a6 	ldrh.w	r6, [r0, #166]	@ 0xa6
 800f8b2:	4299      	cmp	r1, r3
 800f8b4:	bfa8      	it	ge
 800f8b6:	3501      	addge	r5, #1
 800f8b8:	429e      	cmp	r6, r3
 800f8ba:	bfc8      	it	gt
 800f8bc:	3401      	addgt	r4, #1
 800f8be:	e7f4      	b.n	800f8aa <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x36>
 800f8c0:	f8b0 30a6 	ldrh.w	r3, [r0, #166]	@ 0xa6
 800f8c4:	1b49      	subs	r1, r1, r5
 800f8c6:	1b1b      	subs	r3, r3, r4
 800f8c8:	f8a0 10a4 	strh.w	r1, [r0, #164]	@ 0xa4
 800f8cc:	f8a0 30a6 	strh.w	r3, [r0, #166]	@ 0xa6
 800f8d0:	f8b0 3080 	ldrh.w	r3, [r0, #128]	@ 0x80
 800f8d4:	4293      	cmp	r3, r2
 800f8d6:	dd03      	ble.n	800f8e0 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x6c>
 800f8d8:	3b01      	subs	r3, #1
 800f8da:	f8a0 3080 	strh.w	r3, [r0, #128]	@ 0x80
 800f8de:	e7f7      	b.n	800f8d0 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x5c>
 800f8e0:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

0800f8e4 <_ZN8touchgfx11Application15handleTickEventEv>:
 800f8e4:	b570      	push	{r4, r5, r6, lr}
 800f8e6:	4d16      	ldr	r5, [pc, #88]	@ (800f940 <_ZN8touchgfx11Application15handleTickEventEv+0x5c>)
 800f8e8:	4604      	mov	r4, r0
 800f8ea:	6828      	ldr	r0, [r5, #0]
 800f8ec:	b140      	cbz	r0, 800f900 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 800f8ee:	7a03      	ldrb	r3, [r0, #8]
 800f8f0:	b933      	cbnz	r3, 800f900 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 800f8f2:	f884 3138 	strb.w	r3, [r4, #312]	@ 0x138
 800f8f6:	6803      	ldr	r3, [r0, #0]
 800f8f8:	689b      	ldr	r3, [r3, #8]
 800f8fa:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800f8fe:	4718      	bx	r3
 800f900:	f894 3138 	ldrb.w	r3, [r4, #312]	@ 0x138
 800f904:	4e0f      	ldr	r6, [pc, #60]	@ (800f944 <_ZN8touchgfx11Application15handleTickEventEv+0x60>)
 800f906:	b973      	cbnz	r3, 800f926 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 800f908:	b168      	cbz	r0, 800f926 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 800f90a:	7a03      	ldrb	r3, [r0, #8]
 800f90c:	b15b      	cbz	r3, 800f926 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 800f90e:	6830      	ldr	r0, [r6, #0]
 800f910:	b110      	cbz	r0, 800f918 <_ZN8touchgfx11Application15handleTickEventEv+0x34>
 800f912:	6803      	ldr	r3, [r0, #0]
 800f914:	691b      	ldr	r3, [r3, #16]
 800f916:	4798      	blx	r3
 800f918:	6828      	ldr	r0, [r5, #0]
 800f91a:	6803      	ldr	r3, [r0, #0]
 800f91c:	68db      	ldr	r3, [r3, #12]
 800f91e:	4798      	blx	r3
 800f920:	2301      	movs	r3, #1
 800f922:	f884 3138 	strb.w	r3, [r4, #312]	@ 0x138
 800f926:	3404      	adds	r4, #4
 800f928:	4620      	mov	r0, r4
 800f92a:	f7ff ff5f 	bl	800f7ec <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>
 800f92e:	4620      	mov	r0, r4
 800f930:	f7ff ffa0 	bl	800f874 <_ZN8touchgfx11Application12TimerWidgets7compactEv>
 800f934:	6830      	ldr	r0, [r6, #0]
 800f936:	b110      	cbz	r0, 800f93e <_ZN8touchgfx11Application15handleTickEventEv+0x5a>
 800f938:	6803      	ldr	r3, [r0, #0]
 800f93a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800f93c:	e7dd      	b.n	800f8fa <_ZN8touchgfx11Application15handleTickEventEv+0x16>
 800f93e:	bd70      	pop	{r4, r5, r6, pc}
 800f940:	2001408c 	.word	0x2001408c
 800f944:	20014088 	.word	0x20014088

0800f948 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>:
 800f948:	4603      	mov	r3, r0
 800f94a:	f100 0140 	add.w	r1, r0, #64	@ 0x40
 800f94e:	2200      	movs	r2, #0
 800f950:	801a      	strh	r2, [r3, #0]
 800f952:	805a      	strh	r2, [r3, #2]
 800f954:	809a      	strh	r2, [r3, #4]
 800f956:	80da      	strh	r2, [r3, #6]
 800f958:	3308      	adds	r3, #8
 800f95a:	428b      	cmp	r3, r1
 800f95c:	d1f8      	bne.n	800f950 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev+0x8>
 800f95e:	f8a0 2040 	strh.w	r2, [r0, #64]	@ 0x40
 800f962:	4770      	bx	lr

0800f964 <_ZN8touchgfx11ApplicationC1Ev>:
 800f964:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800f966:	4606      	mov	r6, r0
 800f968:	4b1c      	ldr	r3, [pc, #112]	@ (800f9dc <_ZN8touchgfx11ApplicationC1Ev+0x78>)
 800f96a:	f846 3b04 	str.w	r3, [r6], #4
 800f96e:	4604      	mov	r4, r0
 800f970:	2500      	movs	r5, #0
 800f972:	22a8      	movs	r2, #168	@ 0xa8
 800f974:	2100      	movs	r1, #0
 800f976:	4630      	mov	r0, r6
 800f978:	f013 fb0b 	bl	8022f92 <memset>
 800f97c:	f8a4 5084 	strh.w	r5, [r4, #132]	@ 0x84
 800f980:	f104 00ac 	add.w	r0, r4, #172	@ 0xac
 800f984:	f7ff ffe0 	bl	800f948 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 800f988:	f104 00ee 	add.w	r0, r4, #238	@ 0xee
 800f98c:	f7ff ffdc 	bl	800f948 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 800f990:	f8a4 5130 	strh.w	r5, [r4, #304]	@ 0x130
 800f994:	f8a4 5132 	strh.w	r5, [r4, #306]	@ 0x132
 800f998:	f8a4 5134 	strh.w	r5, [r4, #308]	@ 0x134
 800f99c:	f8a4 5136 	strh.w	r5, [r4, #310]	@ 0x136
 800f9a0:	f884 5138 	strb.w	r5, [r4, #312]	@ 0x138
 800f9a4:	490e      	ldr	r1, [pc, #56]	@ (800f9e0 <_ZN8touchgfx11ApplicationC1Ev+0x7c>)
 800f9a6:	480f      	ldr	r0, [pc, #60]	@ (800f9e4 <_ZN8touchgfx11ApplicationC1Ev+0x80>)
 800f9a8:	4f0f      	ldr	r7, [pc, #60]	@ (800f9e8 <_ZN8touchgfx11ApplicationC1Ev+0x84>)
 800f9aa:	f011 fb39 	bl	8021020 <CRC_Lock>
 800f9ae:	4b0f      	ldr	r3, [pc, #60]	@ (800f9ec <_ZN8touchgfx11ApplicationC1Ev+0x88>)
 800f9b0:	b158      	cbz	r0, 800f9ca <_ZN8touchgfx11ApplicationC1Ev+0x66>
 800f9b2:	801d      	strh	r5, [r3, #0]
 800f9b4:	4a0e      	ldr	r2, [pc, #56]	@ (800f9f0 <_ZN8touchgfx11ApplicationC1Ev+0x8c>)
 800f9b6:	2300      	movs	r3, #0
 800f9b8:	6013      	str	r3, [r2, #0]
 800f9ba:	4a0e      	ldr	r2, [pc, #56]	@ (800f9f4 <_ZN8touchgfx11ApplicationC1Ev+0x90>)
 800f9bc:	603b      	str	r3, [r7, #0]
 800f9be:	4630      	mov	r0, r6
 800f9c0:	6013      	str	r3, [r2, #0]
 800f9c2:	f7ff ff32 	bl	800f82a <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 800f9c6:	4620      	mov	r0, r4
 800f9c8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800f9ca:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 800f9ce:	2002      	movs	r0, #2
 800f9d0:	801a      	strh	r2, [r3, #0]
 800f9d2:	6038      	str	r0, [r7, #0]
 800f9d4:	f001 ffcc 	bl	8011970 <_ZN8touchgfx6Screen4drawEv>
 800f9d8:	e7ec      	b.n	800f9b4 <_ZN8touchgfx11ApplicationC1Ev+0x50>
 800f9da:	bf00      	nop
 800f9dc:	08025124 	.word	0x08025124
 800f9e0:	b5e8b5cd 	.word	0xb5e8b5cd
 800f9e4:	f407a5c2 	.word	0xf407a5c2
 800f9e8:	20014088 	.word	0x20014088
 800f9ec:	20000194 	.word	0x20000194
 800f9f0:	20014098 	.word	0x20014098
 800f9f4:	2001408c 	.word	0x2001408c

0800f9f8 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>:
 800f9f8:	f8b0 3040 	ldrh.w	r3, [r0, #64]	@ 0x40
 800f9fc:	3b01      	subs	r3, #1
 800f9fe:	b29b      	uxth	r3, r3
 800fa00:	428b      	cmp	r3, r1
 800fa02:	b510      	push	{r4, lr}
 800fa04:	f8a0 3040 	strh.w	r3, [r0, #64]	@ 0x40
 800fa08:	d908      	bls.n	800fa1c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x24>
 800fa0a:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 800fa0e:	eb00 04c1 	add.w	r4, r0, r1, lsl #3
 800fa12:	681a      	ldr	r2, [r3, #0]
 800fa14:	f840 2031 	str.w	r2, [r0, r1, lsl #3]
 800fa18:	685a      	ldr	r2, [r3, #4]
 800fa1a:	6062      	str	r2, [r4, #4]
 800fa1c:	bd10      	pop	{r4, pc}
	...

0800fa20 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>:
 800fa20:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800fa24:	4b92      	ldr	r3, [pc, #584]	@ (800fc70 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x250>)
 800fa26:	b08f      	sub	sp, #60	@ 0x3c
 800fa28:	ac0a      	add	r4, sp, #40	@ 0x28
 800fa2a:	e884 0006 	stmia.w	r4, {r1, r2}
 800fa2e:	f9b3 2000 	ldrsh.w	r2, [r3]
 800fa32:	4b90      	ldr	r3, [pc, #576]	@ (800fc74 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x254>)
 800fa34:	4683      	mov	fp, r0
 800fa36:	f9b3 1000 	ldrsh.w	r1, [r3]
 800fa3a:	4620      	mov	r0, r4
 800fa3c:	f7ff fe13 	bl	800f666 <_ZN8touchgfx4Rect10restrictToEss>
 800fa40:	4620      	mov	r0, r4
 800fa42:	f7fa fd84 	bl	800a54e <_ZNK8touchgfx4Rect7isEmptyEv>
 800fa46:	2800      	cmp	r0, #0
 800fa48:	d170      	bne.n	800fb2c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x10c>
 800fa4a:	4b8b      	ldr	r3, [pc, #556]	@ (800fc78 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x258>)
 800fa4c:	681b      	ldr	r3, [r3, #0]
 800fa4e:	f893 3048 	ldrb.w	r3, [r3, #72]	@ 0x48
 800fa52:	2b02      	cmp	r3, #2
 800fa54:	d06a      	beq.n	800fb2c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x10c>
 800fa56:	9403      	str	r4, [sp, #12]
 800fa58:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	@ 0xec
 800fa5c:	f10b 03ac 	add.w	r3, fp, #172	@ 0xac
 800fa60:	eb0b 05c4 	add.w	r5, fp, r4, lsl #3
 800fa64:	35a4      	adds	r5, #164	@ 0xa4
 800fa66:	9301      	str	r3, [sp, #4]
 800fa68:	b15c      	cbz	r4, 800fa82 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x62>
 800fa6a:	4629      	mov	r1, r5
 800fa6c:	9803      	ldr	r0, [sp, #12]
 800fa6e:	f7ff fe4b 	bl	800f708 <_ZNK8touchgfx4Rect8includesERKS0_>
 800fa72:	3c01      	subs	r4, #1
 800fa74:	b118      	cbz	r0, 800fa7e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5e>
 800fa76:	b2a1      	uxth	r1, r4
 800fa78:	9801      	ldr	r0, [sp, #4]
 800fa7a:	f7ff ffbd 	bl	800f9f8 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800fa7e:	3d08      	subs	r5, #8
 800fa80:	e7f2      	b.n	800fa68 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x48>
 800fa82:	f8bb a0ec 	ldrh.w	sl, [fp, #236]	@ 0xec
 800fa86:	f8cd a010 	str.w	sl, [sp, #16]
 800fa8a:	f10a 33ff 	add.w	r3, sl, #4294967295
 800fa8e:	9302      	str	r3, [sp, #8]
 800fa90:	ea4f 03ca 	mov.w	r3, sl, lsl #3
 800fa94:	f103 04a4 	add.w	r4, r3, #164	@ 0xa4
 800fa98:	9306      	str	r3, [sp, #24]
 800fa9a:	445c      	add	r4, fp
 800fa9c:	2500      	movs	r5, #0
 800fa9e:	4626      	mov	r6, r4
 800faa0:	f8cd a014 	str.w	sl, [sp, #20]
 800faa4:	462f      	mov	r7, r5
 800faa6:	9b05      	ldr	r3, [sp, #20]
 800faa8:	2b00      	cmp	r3, #0
 800faaa:	d073      	beq.n	800fb94 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x174>
 800faac:	9903      	ldr	r1, [sp, #12]
 800faae:	4630      	mov	r0, r6
 800fab0:	f7ff fdb7 	bl	800f622 <_ZNK8touchgfx4Rect9intersectERKS0_>
 800fab4:	b350      	cbz	r0, 800fb0c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xec>
 800fab6:	f9bd e028 	ldrsh.w	lr, [sp, #40]	@ 0x28
 800faba:	f9b6 c000 	ldrsh.w	ip, [r6]
 800fabe:	f9bd 802a 	ldrsh.w	r8, [sp, #42]	@ 0x2a
 800fac2:	f9b6 9002 	ldrsh.w	r9, [r6, #2]
 800fac6:	45e6      	cmp	lr, ip
 800fac8:	db33      	blt.n	800fb32 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x112>
 800faca:	f8bd 202c 	ldrh.w	r2, [sp, #44]	@ 0x2c
 800face:	88b3      	ldrh	r3, [r6, #4]
 800fad0:	4472      	add	r2, lr
 800fad2:	4463      	add	r3, ip
 800fad4:	b212      	sxth	r2, r2
 800fad6:	b21b      	sxth	r3, r3
 800fad8:	429a      	cmp	r2, r3
 800fada:	dc2a      	bgt.n	800fb32 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x112>
 800fadc:	88f3      	ldrh	r3, [r6, #6]
 800fade:	f8bd 102e 	ldrh.w	r1, [sp, #46]	@ 0x2e
 800fae2:	fa1f f289 	uxth.w	r2, r9
 800fae6:	4413      	add	r3, r2
 800fae8:	b29b      	uxth	r3, r3
 800faea:	45c8      	cmp	r8, r9
 800faec:	fa1f fc88 	uxth.w	ip, r8
 800faf0:	fa0f fe83 	sxth.w	lr, r3
 800faf4:	db0f      	blt.n	800fb16 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xf6>
 800faf6:	eba3 030c 	sub.w	r3, r3, ip
 800fafa:	1ac9      	subs	r1, r1, r3
 800fafc:	b209      	sxth	r1, r1
 800fafe:	2900      	cmp	r1, #0
 800fb00:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
 800fb04:	dd12      	ble.n	800fb2c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x10c>
 800fb06:	f8ad e02a 	strh.w	lr, [sp, #42]	@ 0x2a
 800fb0a:	4605      	mov	r5, r0
 800fb0c:	9b05      	ldr	r3, [sp, #20]
 800fb0e:	3b01      	subs	r3, #1
 800fb10:	9305      	str	r3, [sp, #20]
 800fb12:	3e08      	subs	r6, #8
 800fb14:	e7c7      	b.n	800faa6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x86>
 800fb16:	4461      	add	r1, ip
 800fb18:	b209      	sxth	r1, r1
 800fb1a:	4571      	cmp	r1, lr
 800fb1c:	dc38      	bgt.n	800fb90 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x170>
 800fb1e:	eba2 020c 	sub.w	r2, r2, ip
 800fb22:	b212      	sxth	r2, r2
 800fb24:	f8ad 202e 	strh.w	r2, [sp, #46]	@ 0x2e
 800fb28:	2a00      	cmp	r2, #0
 800fb2a:	dcee      	bgt.n	800fb0a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
 800fb2c:	b00f      	add	sp, #60	@ 0x3c
 800fb2e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800fb32:	45c8      	cmp	r8, r9
 800fb34:	db2c      	blt.n	800fb90 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x170>
 800fb36:	88f3      	ldrh	r3, [r6, #6]
 800fb38:	4499      	add	r9, r3
 800fb3a:	f8bd 302e 	ldrh.w	r3, [sp, #46]	@ 0x2e
 800fb3e:	4498      	add	r8, r3
 800fb40:	fa0f f989 	sxth.w	r9, r9
 800fb44:	fa0f f888 	sxth.w	r8, r8
 800fb48:	45c1      	cmp	r9, r8
 800fb4a:	db21      	blt.n	800fb90 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x170>
 800fb4c:	88b3      	ldrh	r3, [r6, #4]
 800fb4e:	f8bd 102c 	ldrh.w	r1, [sp, #44]	@ 0x2c
 800fb52:	fa1f f28c 	uxth.w	r2, ip
 800fb56:	4413      	add	r3, r2
 800fb58:	b29b      	uxth	r3, r3
 800fb5a:	45e6      	cmp	lr, ip
 800fb5c:	fa1f f88e 	uxth.w	r8, lr
 800fb60:	fa0f f983 	sxth.w	r9, r3
 800fb64:	db0a      	blt.n	800fb7c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x15c>
 800fb66:	eba3 0308 	sub.w	r3, r3, r8
 800fb6a:	1ac9      	subs	r1, r1, r3
 800fb6c:	b209      	sxth	r1, r1
 800fb6e:	2900      	cmp	r1, #0
 800fb70:	f8ad 102c 	strh.w	r1, [sp, #44]	@ 0x2c
 800fb74:	ddda      	ble.n	800fb2c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x10c>
 800fb76:	f8ad 9028 	strh.w	r9, [sp, #40]	@ 0x28
 800fb7a:	e7c6      	b.n	800fb0a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
 800fb7c:	4441      	add	r1, r8
 800fb7e:	b209      	sxth	r1, r1
 800fb80:	4549      	cmp	r1, r9
 800fb82:	dc05      	bgt.n	800fb90 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x170>
 800fb84:	eba2 0208 	sub.w	r2, r2, r8
 800fb88:	b212      	sxth	r2, r2
 800fb8a:	f8ad 202c 	strh.w	r2, [sp, #44]	@ 0x2c
 800fb8e:	e7cb      	b.n	800fb28 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x108>
 800fb90:	4607      	mov	r7, r0
 800fb92:	e7bb      	b.n	800fb0c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xec>
 800fb94:	2d00      	cmp	r5, #0
 800fb96:	d181      	bne.n	800fa9c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x7c>
 800fb98:	2f00      	cmp	r7, #0
 800fb9a:	f000 81df 	beq.w	800ff5c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53c>
 800fb9e:	f9bd 6028 	ldrsh.w	r6, [sp, #40]	@ 0x28
 800fba2:	f9bd 702a 	ldrsh.w	r7, [sp, #42]	@ 0x2a
 800fba6:	f8bd a02e 	ldrh.w	sl, [sp, #46]	@ 0x2e
 800fbaa:	b2b3      	uxth	r3, r6
 800fbac:	9305      	str	r3, [sp, #20]
 800fbae:	9a05      	ldr	r2, [sp, #20]
 800fbb0:	f8bd 302c 	ldrh.w	r3, [sp, #44]	@ 0x2c
 800fbb4:	4413      	add	r3, r2
 800fbb6:	b2ba      	uxth	r2, r7
 800fbb8:	4492      	add	sl, r2
 800fbba:	b29b      	uxth	r3, r3
 800fbbc:	fa1f fa8a 	uxth.w	sl, sl
 800fbc0:	fa0f f883 	sxth.w	r8, r3
 800fbc4:	fa0f f98a 	sxth.w	r9, sl
 800fbc8:	e9cd 2307 	strd	r2, r3, [sp, #28]
 800fbcc:	9b04      	ldr	r3, [sp, #16]
 800fbce:	2b00      	cmp	r3, #0
 800fbd0:	d054      	beq.n	800fc7c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x25c>
 800fbd2:	9903      	ldr	r1, [sp, #12]
 800fbd4:	4620      	mov	r0, r4
 800fbd6:	f7ff fd24 	bl	800f622 <_ZNK8touchgfx4Rect9intersectERKS0_>
 800fbda:	e9dd 2307 	ldrd	r2, r3, [sp, #28]
 800fbde:	b1c0      	cbz	r0, 800fc12 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f2>
 800fbe0:	f9b4 e000 	ldrsh.w	lr, [r4]
 800fbe4:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 800fbe8:	4576      	cmp	r6, lr
 800fbea:	dc22      	bgt.n	800fc32 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x212>
 800fbec:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 800fbf0:	44f4      	add	ip, lr
 800fbf2:	fa0f fc8c 	sxth.w	ip, ip
 800fbf6:	45e0      	cmp	r8, ip
 800fbf8:	db1b      	blt.n	800fc32 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x212>
 800fbfa:	428f      	cmp	r7, r1
 800fbfc:	fa1f fc81 	uxth.w	ip, r1
 800fc00:	88e1      	ldrh	r1, [r4, #6]
 800fc02:	dc0d      	bgt.n	800fc20 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x200>
 800fc04:	ebaa 0c0c 	sub.w	ip, sl, ip
 800fc08:	eba1 010c 	sub.w	r1, r1, ip
 800fc0c:	f8a4 9002 	strh.w	r9, [r4, #2]
 800fc10:	80e1      	strh	r1, [r4, #6]
 800fc12:	4628      	mov	r0, r5
 800fc14:	9904      	ldr	r1, [sp, #16]
 800fc16:	3901      	subs	r1, #1
 800fc18:	9104      	str	r1, [sp, #16]
 800fc1a:	3c08      	subs	r4, #8
 800fc1c:	4605      	mov	r5, r0
 800fc1e:	e7d3      	b.n	800fbc8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a8>
 800fc20:	4461      	add	r1, ip
 800fc22:	b209      	sxth	r1, r1
 800fc24:	4549      	cmp	r1, r9
 800fc26:	dcf5      	bgt.n	800fc14 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f4>
 800fc28:	eba2 0c0c 	sub.w	ip, r2, ip
 800fc2c:	f8a4 c006 	strh.w	ip, [r4, #6]
 800fc30:	e7ef      	b.n	800fc12 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f2>
 800fc32:	428f      	cmp	r7, r1
 800fc34:	dcee      	bgt.n	800fc14 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f4>
 800fc36:	f8b4 c006 	ldrh.w	ip, [r4, #6]
 800fc3a:	4461      	add	r1, ip
 800fc3c:	b209      	sxth	r1, r1
 800fc3e:	4589      	cmp	r9, r1
 800fc40:	dbe8      	blt.n	800fc14 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f4>
 800fc42:	4576      	cmp	r6, lr
 800fc44:	fa1f fc8e 	uxth.w	ip, lr
 800fc48:	88a1      	ldrh	r1, [r4, #4]
 800fc4a:	dc07      	bgt.n	800fc5c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x23c>
 800fc4c:	eba3 0c0c 	sub.w	ip, r3, ip
 800fc50:	eba1 010c 	sub.w	r1, r1, ip
 800fc54:	f8a4 8000 	strh.w	r8, [r4]
 800fc58:	80a1      	strh	r1, [r4, #4]
 800fc5a:	e7da      	b.n	800fc12 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f2>
 800fc5c:	4461      	add	r1, ip
 800fc5e:	b209      	sxth	r1, r1
 800fc60:	4588      	cmp	r8, r1
 800fc62:	dbd7      	blt.n	800fc14 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f4>
 800fc64:	9905      	ldr	r1, [sp, #20]
 800fc66:	eba1 0c0c 	sub.w	ip, r1, ip
 800fc6a:	f8a4 c004 	strh.w	ip, [r4, #4]
 800fc6e:	e7d0      	b.n	800fc12 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f2>
 800fc70:	20014038 	.word	0x20014038
 800fc74:	20014036 	.word	0x20014036
 800fc78:	20014044 	.word	0x20014044
 800fc7c:	2d00      	cmp	r5, #0
 800fc7e:	f000 816d 	beq.w	800ff5c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53c>
 800fc82:	9b06      	ldr	r3, [sp, #24]
 800fc84:	445b      	add	r3, fp
 800fc86:	461c      	mov	r4, r3
 800fc88:	9b02      	ldr	r3, [sp, #8]
 800fc8a:	3301      	adds	r3, #1
 800fc8c:	f000 8166 	beq.w	800ff5c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53c>
 800fc90:	f104 05a4 	add.w	r5, r4, #164	@ 0xa4
 800fc94:	4629      	mov	r1, r5
 800fc96:	9803      	ldr	r0, [sp, #12]
 800fc98:	f7ff fd36 	bl	800f708 <_ZNK8touchgfx4Rect8includesERKS0_>
 800fc9c:	b120      	cbz	r0, 800fca8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x288>
 800fc9e:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 800fca2:	9801      	ldr	r0, [sp, #4]
 800fca4:	f7ff fea8 	bl	800f9f8 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800fca8:	9903      	ldr	r1, [sp, #12]
 800fcaa:	4628      	mov	r0, r5
 800fcac:	f7ff fcb9 	bl	800f622 <_ZNK8touchgfx4Rect9intersectERKS0_>
 800fcb0:	2800      	cmp	r0, #0
 800fcb2:	f000 809c 	beq.w	800fdee <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ce>
 800fcb6:	f9b4 90a4 	ldrsh.w	r9, [r4, #164]	@ 0xa4
 800fcba:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	@ 0xa8
 800fcbe:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	@ 0x28
 800fcc2:	9309      	str	r3, [sp, #36]	@ 0x24
 800fcc4:	fa1f f189 	uxth.w	r1, r9
 800fcc8:	eb01 0c03 	add.w	ip, r1, r3
 800fccc:	fa1f fa8c 	uxth.w	sl, ip
 800fcd0:	f8bd c02c 	ldrh.w	ip, [sp, #44]	@ 0x2c
 800fcd4:	f9bd e02a 	ldrsh.w	lr, [sp, #42]	@ 0x2a
 800fcd8:	f9b4 20a6 	ldrsh.w	r2, [r4, #166]	@ 0xa6
 800fcdc:	b283      	uxth	r3, r0
 800fcde:	eb03 050c 	add.w	r5, r3, ip
 800fce2:	b2ad      	uxth	r5, r5
 800fce4:	9505      	str	r5, [sp, #20]
 800fce6:	f9bd 5014 	ldrsh.w	r5, [sp, #20]
 800fcea:	9504      	str	r5, [sp, #16]
 800fcec:	4548      	cmp	r0, r9
 800fcee:	f8bb 50ec 	ldrh.w	r5, [fp, #236]	@ 0xec
 800fcf2:	f340 8099 	ble.w	800fe28 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x408>
 800fcf6:	1a5b      	subs	r3, r3, r1
 800fcf8:	b29b      	uxth	r3, r3
 800fcfa:	4596      	cmp	lr, r2
 800fcfc:	fa0f f08a 	sxth.w	r0, sl
 800fd00:	b21e      	sxth	r6, r3
 800fd02:	dd2e      	ble.n	800fd62 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x342>
 800fd04:	9f02      	ldr	r7, [sp, #8]
 800fd06:	f8bd 402e 	ldrh.w	r4, [sp, #46]	@ 0x2e
 800fd0a:	eb0b 08c7 	add.w	r8, fp, r7, lsl #3
 800fd0e:	9f04      	ldr	r7, [sp, #16]
 800fd10:	1a3f      	subs	r7, r7, r0
 800fd12:	f8b8 00b2 	ldrh.w	r0, [r8, #178]	@ 0xb2
 800fd16:	fa1f fe8e 	uxth.w	lr, lr
 800fd1a:	b292      	uxth	r2, r2
 800fd1c:	ebae 0102 	sub.w	r1, lr, r2
 800fd20:	44a6      	add	lr, r4
 800fd22:	4402      	add	r2, r0
 800fd24:	b289      	uxth	r1, r1
 800fd26:	fa0f fe8e 	sxth.w	lr, lr
 800fd2a:	b212      	sxth	r2, r2
 800fd2c:	b20d      	sxth	r5, r1
 800fd2e:	ebae 0202 	sub.w	r2, lr, r2
 800fd32:	436f      	muls	r7, r5
 800fd34:	4372      	muls	r2, r6
 800fd36:	4297      	cmp	r7, r2
 800fd38:	db09      	blt.n	800fd4e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x32e>
 800fd3a:	f8b8 20ac 	ldrh.w	r2, [r8, #172]	@ 0xac
 800fd3e:	f8a8 50b2 	strh.w	r5, [r8, #178]	@ 0xb2
 800fd42:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
 800fd46:	449c      	add	ip, r3
 800fd48:	f8ad c02c 	strh.w	ip, [sp, #44]	@ 0x2c
 800fd4c:	e684      	b.n	800fa58 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x38>
 800fd4e:	4421      	add	r1, r4
 800fd50:	f8b8 30ae 	ldrh.w	r3, [r8, #174]	@ 0xae
 800fd54:	f8a8 60b0 	strh.w	r6, [r8, #176]	@ 0xb0
 800fd58:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
 800fd5c:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
 800fd60:	e67a      	b.n	800fa58 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x38>
 800fd62:	9f04      	ldr	r7, [sp, #16]
 800fd64:	42b8      	cmp	r0, r7
 800fd66:	da27      	bge.n	800fdb8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x398>
 800fd68:	9902      	ldr	r1, [sp, #8]
 800fd6a:	f8bd 502e 	ldrh.w	r5, [sp, #46]	@ 0x2e
 800fd6e:	eb0b 04c1 	add.w	r4, fp, r1, lsl #3
 800fd72:	eb05 010e 	add.w	r1, r5, lr
 800fd76:	fa1f f881 	uxth.w	r8, r1
 800fd7a:	f8b4 10b2 	ldrh.w	r1, [r4, #178]	@ 0xb2
 800fd7e:	4411      	add	r1, r2
 800fd80:	eba1 0108 	sub.w	r1, r1, r8
 800fd84:	b289      	uxth	r1, r1
 800fd86:	fa0f f988 	sxth.w	r9, r8
 800fd8a:	eba2 020e 	sub.w	r2, r2, lr
 800fd8e:	fa0f f881 	sxth.w	r8, r1
 800fd92:	1a3f      	subs	r7, r7, r0
 800fd94:	4372      	muls	r2, r6
 800fd96:	fb08 f707 	mul.w	r7, r8, r7
 800fd9a:	42ba      	cmp	r2, r7
 800fd9c:	dc06      	bgt.n	800fdac <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x38c>
 800fd9e:	f8a4 90ae 	strh.w	r9, [r4, #174]	@ 0xae
 800fda2:	f8a4 80b2 	strh.w	r8, [r4, #178]	@ 0xb2
 800fda6:	f8b4 20ac 	ldrh.w	r2, [r4, #172]	@ 0xac
 800fdaa:	e7ca      	b.n	800fd42 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x322>
 800fdac:	f8a4 60b0 	strh.w	r6, [r4, #176]	@ 0xb0
 800fdb0:	4429      	add	r1, r5
 800fdb2:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
 800fdb6:	e64f      	b.n	800fa58 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x38>
 800fdb8:	9805      	ldr	r0, [sp, #20]
 800fdba:	ebaa 0000 	sub.w	r0, sl, r0
 800fdbe:	b280      	uxth	r0, r0
 800fdc0:	2d06      	cmp	r5, #6
 800fdc2:	fa0f fe80 	sxth.w	lr, r0
 800fdc6:	d817      	bhi.n	800fdf8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3d8>
 800fdc8:	9b04      	ldr	r3, [sp, #16]
 800fdca:	f8a4 30a4 	strh.w	r3, [r4, #164]	@ 0xa4
 800fdce:	1c6b      	adds	r3, r5, #1
 800fdd0:	f9b4 10aa 	ldrsh.w	r1, [r4, #170]	@ 0xaa
 800fdd4:	f8a4 e0a8 	strh.w	lr, [r4, #168]	@ 0xa8
 800fdd8:	f8ab 30ec 	strh.w	r3, [fp, #236]	@ 0xec
 800fddc:	9b01      	ldr	r3, [sp, #4]
 800fdde:	9801      	ldr	r0, [sp, #4]
 800fde0:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 800fde4:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
 800fde8:	805a      	strh	r2, [r3, #2]
 800fdea:	809e      	strh	r6, [r3, #4]
 800fdec:	80d9      	strh	r1, [r3, #6]
 800fdee:	9b02      	ldr	r3, [sp, #8]
 800fdf0:	3b01      	subs	r3, #1
 800fdf2:	9302      	str	r3, [sp, #8]
 800fdf4:	3c08      	subs	r4, #8
 800fdf6:	e747      	b.n	800fc88 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x268>
 800fdf8:	9a02      	ldr	r2, [sp, #8]
 800fdfa:	45b6      	cmp	lr, r6
 800fdfc:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 800fe00:	db0d      	blt.n	800fe1e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3fe>
 800fe02:	449c      	add	ip, r3
 800fe04:	fa1f fc8c 	uxth.w	ip, ip
 800fe08:	445a      	add	r2, fp
 800fe0a:	f8ad c02c 	strh.w	ip, [sp, #44]	@ 0x2c
 800fe0e:	448c      	add	ip, r1
 800fe10:	f8ad 9028 	strh.w	r9, [sp, #40]	@ 0x28
 800fe14:	f8a2 c0ac 	strh.w	ip, [r2, #172]	@ 0xac
 800fe18:	f8a2 e0b0 	strh.w	lr, [r2, #176]	@ 0xb0
 800fe1c:	e61c      	b.n	800fa58 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x38>
 800fe1e:	445a      	add	r2, fp
 800fe20:	4484      	add	ip, r0
 800fe22:	f8a2 60b0 	strh.w	r6, [r2, #176]	@ 0xb0
 800fe26:	e78f      	b.n	800fd48 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x328>
 800fe28:	f8bd 602e 	ldrh.w	r6, [sp, #46]	@ 0x2e
 800fe2c:	fa1f f18e 	uxth.w	r1, lr
 800fe30:	eb01 0806 	add.w	r8, r1, r6
 800fe34:	b293      	uxth	r3, r2
 800fe36:	fa1f f888 	uxth.w	r8, r8
 800fe3a:	9306      	str	r3, [sp, #24]
 800fe3c:	fa0f f388 	sxth.w	r3, r8
 800fe40:	9307      	str	r3, [sp, #28]
 800fe42:	9f06      	ldr	r7, [sp, #24]
 800fe44:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	@ 0xaa
 800fe48:	443b      	add	r3, r7
 800fe4a:	b29b      	uxth	r3, r3
 800fe4c:	4596      	cmp	lr, r2
 800fe4e:	9308      	str	r3, [sp, #32]
 800fe50:	da24      	bge.n	800fe9c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x47c>
 800fe52:	9905      	ldr	r1, [sp, #20]
 800fe54:	eba3 0308 	sub.w	r3, r3, r8
 800fe58:	ebaa 0401 	sub.w	r4, sl, r1
 800fe5c:	b2a4      	uxth	r4, r4
 800fe5e:	b29b      	uxth	r3, r3
 800fe60:	b225      	sxth	r5, r4
 800fe62:	b219      	sxth	r1, r3
 800fe64:	eba2 020e 	sub.w	r2, r2, lr
 800fe68:	eba9 0000 	sub.w	r0, r9, r0
 800fe6c:	436a      	muls	r2, r5
 800fe6e:	4348      	muls	r0, r1
 800fe70:	4282      	cmp	r2, r0
 800fe72:	9a02      	ldr	r2, [sp, #8]
 800fe74:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 800fe78:	445a      	add	r2, fp
 800fe7a:	dc06      	bgt.n	800fe8a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x46a>
 800fe7c:	9b07      	ldr	r3, [sp, #28]
 800fe7e:	f8a2 10b2 	strh.w	r1, [r2, #178]	@ 0xb2
 800fe82:	f8a2 30ae 	strh.w	r3, [r2, #174]	@ 0xae
 800fe86:	44a4      	add	ip, r4
 800fe88:	e75e      	b.n	800fd48 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x328>
 800fe8a:	9904      	ldr	r1, [sp, #16]
 800fe8c:	f8a2 50b0 	strh.w	r5, [r2, #176]	@ 0xb0
 800fe90:	f8a2 10ac 	strh.w	r1, [r2, #172]	@ 0xac
 800fe94:	4433      	add	r3, r6
 800fe96:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
 800fe9a:	e5dd      	b.n	800fa58 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x38>
 800fe9c:	9f06      	ldr	r7, [sp, #24]
 800fe9e:	9b04      	ldr	r3, [sp, #16]
 800fea0:	1bc9      	subs	r1, r1, r7
 800fea2:	fa0f f78a 	sxth.w	r7, sl
 800fea6:	b289      	uxth	r1, r1
 800fea8:	429f      	cmp	r7, r3
 800feaa:	fa0f fe81 	sxth.w	lr, r1
 800feae:	dd23      	ble.n	800fef8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4d8>
 800feb0:	9a05      	ldr	r2, [sp, #20]
 800feb2:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 800feb6:	9d07      	ldr	r5, [sp, #28]
 800feb8:	ebaa 0202 	sub.w	r2, sl, r2
 800febc:	b292      	uxth	r2, r2
 800febe:	eba5 0a03 	sub.w	sl, r5, r3
 800fec2:	b214      	sxth	r4, r2
 800fec4:	eba9 0000 	sub.w	r0, r9, r0
 800fec8:	9b02      	ldr	r3, [sp, #8]
 800feca:	fb0e f000 	mul.w	r0, lr, r0
 800fece:	fb04 fa0a 	mul.w	sl, r4, sl
 800fed2:	00db      	lsls	r3, r3, #3
 800fed4:	4550      	cmp	r0, sl
 800fed6:	445b      	add	r3, fp
 800fed8:	db03      	blt.n	800fee2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4c2>
 800feda:	f8a3 e0b2 	strh.w	lr, [r3, #178]	@ 0xb2
 800fede:	4494      	add	ip, r2
 800fee0:	e732      	b.n	800fd48 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x328>
 800fee2:	9a04      	ldr	r2, [sp, #16]
 800fee4:	f8a3 20ac 	strh.w	r2, [r3, #172]	@ 0xac
 800fee8:	f8a3 40b0 	strh.w	r4, [r3, #176]	@ 0xb0
 800feec:	f8b3 30ae 	ldrh.w	r3, [r3, #174]	@ 0xae
 800fef0:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
 800fef4:	4431      	add	r1, r6
 800fef6:	e75c      	b.n	800fdb2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x392>
 800fef8:	9b08      	ldr	r3, [sp, #32]
 800fefa:	eba3 0308 	sub.w	r3, r3, r8
 800fefe:	b29b      	uxth	r3, r3
 800ff00:	2d06      	cmp	r5, #6
 800ff02:	b218      	sxth	r0, r3
 800ff04:	d813      	bhi.n	800ff2e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x50e>
 800ff06:	9b07      	ldr	r3, [sp, #28]
 800ff08:	f8a4 30a6 	strh.w	r3, [r4, #166]	@ 0xa6
 800ff0c:	1c6b      	adds	r3, r5, #1
 800ff0e:	f8a4 00aa 	strh.w	r0, [r4, #170]	@ 0xaa
 800ff12:	f8ab 30ec 	strh.w	r3, [fp, #236]	@ 0xec
 800ff16:	9b01      	ldr	r3, [sp, #4]
 800ff18:	9901      	ldr	r1, [sp, #4]
 800ff1a:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 800ff1e:	f821 9035 	strh.w	r9, [r1, r5, lsl #3]
 800ff22:	805a      	strh	r2, [r3, #2]
 800ff24:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 800ff26:	809a      	strh	r2, [r3, #4]
 800ff28:	f8a3 e006 	strh.w	lr, [r3, #6]
 800ff2c:	e75f      	b.n	800fdee <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ce>
 800ff2e:	9c02      	ldr	r4, [sp, #8]
 800ff30:	4570      	cmp	r0, lr
 800ff32:	ea4f 04c4 	mov.w	r4, r4, lsl #3
 800ff36:	db0d      	blt.n	800ff54 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x534>
 800ff38:	4431      	add	r1, r6
 800ff3a:	9b06      	ldr	r3, [sp, #24]
 800ff3c:	f8ad 202a 	strh.w	r2, [sp, #42]	@ 0x2a
 800ff40:	b289      	uxth	r1, r1
 800ff42:	445c      	add	r4, fp
 800ff44:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
 800ff48:	4419      	add	r1, r3
 800ff4a:	f8a4 10ae 	strh.w	r1, [r4, #174]	@ 0xae
 800ff4e:	f8a4 00b2 	strh.w	r0, [r4, #178]	@ 0xb2
 800ff52:	e581      	b.n	800fa58 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x38>
 800ff54:	445c      	add	r4, fp
 800ff56:	f8a4 e0b2 	strh.w	lr, [r4, #178]	@ 0xb2
 800ff5a:	e79b      	b.n	800fe94 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x474>
 800ff5c:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	@ 0xec
 800ff60:	1e65      	subs	r5, r4, #1
 800ff62:	b2ad      	uxth	r5, r5
 800ff64:	eb0b 04c4 	add.w	r4, fp, r4, lsl #3
 800ff68:	f64f 76ff 	movw	r6, #65535	@ 0xffff
 800ff6c:	42b5      	cmp	r5, r6
 800ff6e:	d044      	beq.n	800fffa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5da>
 800ff70:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
 800ff74:	f9b4 00a6 	ldrsh.w	r0, [r4, #166]	@ 0xa6
 800ff78:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	@ 0x28
 800ff7c:	f9b4 70a4 	ldrsh.w	r7, [r4, #164]	@ 0xa4
 800ff80:	4282      	cmp	r2, r0
 800ff82:	d11f      	bne.n	800ffc4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5a4>
 800ff84:	f9bd c02e 	ldrsh.w	ip, [sp, #46]	@ 0x2e
 800ff88:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	@ 0xaa
 800ff8c:	459c      	cmp	ip, r3
 800ff8e:	d119      	bne.n	800ffc4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5a4>
 800ff90:	f8b4 30a8 	ldrh.w	r3, [r4, #168]	@ 0xa8
 800ff94:	f8bd 202c 	ldrh.w	r2, [sp, #44]	@ 0x2c
 800ff98:	19d8      	adds	r0, r3, r7
 800ff9a:	b200      	sxth	r0, r0
 800ff9c:	4288      	cmp	r0, r1
 800ff9e:	d109      	bne.n	800ffb4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
 800ffa0:	f8ad 7028 	strh.w	r7, [sp, #40]	@ 0x28
 800ffa4:	4413      	add	r3, r2
 800ffa6:	f8ad 302c 	strh.w	r3, [sp, #44]	@ 0x2c
 800ffaa:	4629      	mov	r1, r5
 800ffac:	9801      	ldr	r0, [sp, #4]
 800ffae:	f7ff fd23 	bl	800f9f8 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800ffb2:	e003      	b.n	800ffbc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x59c>
 800ffb4:	4411      	add	r1, r2
 800ffb6:	b209      	sxth	r1, r1
 800ffb8:	42b9      	cmp	r1, r7
 800ffba:	d0f3      	beq.n	800ffa4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x584>
 800ffbc:	3d01      	subs	r5, #1
 800ffbe:	b2ad      	uxth	r5, r5
 800ffc0:	3c08      	subs	r4, #8
 800ffc2:	e7d3      	b.n	800ff6c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x54c>
 800ffc4:	42b9      	cmp	r1, r7
 800ffc6:	d1f9      	bne.n	800ffbc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x59c>
 800ffc8:	f9bd 102c 	ldrsh.w	r1, [sp, #44]	@ 0x2c
 800ffcc:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	@ 0xa8
 800ffd0:	4299      	cmp	r1, r3
 800ffd2:	d1f3      	bne.n	800ffbc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x59c>
 800ffd4:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	@ 0xaa
 800ffd8:	f8bd 102e 	ldrh.w	r1, [sp, #46]	@ 0x2e
 800ffdc:	181f      	adds	r7, r3, r0
 800ffde:	b23f      	sxth	r7, r7
 800ffe0:	42ba      	cmp	r2, r7
 800ffe2:	d105      	bne.n	800fff0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5d0>
 800ffe4:	f8ad 002a 	strh.w	r0, [sp, #42]	@ 0x2a
 800ffe8:	440b      	add	r3, r1
 800ffea:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
 800ffee:	e7dc      	b.n	800ffaa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58a>
 800fff0:	440a      	add	r2, r1
 800fff2:	b212      	sxth	r2, r2
 800fff4:	4290      	cmp	r0, r2
 800fff6:	d1e1      	bne.n	800ffbc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x59c>
 800fff8:	e7f6      	b.n	800ffe8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5c8>
 800fffa:	f8bb 60ec 	ldrh.w	r6, [fp, #236]	@ 0xec
 800fffe:	2e07      	cmp	r6, #7
 8010000:	ea4f 04c6 	mov.w	r4, r6, lsl #3
 8010004:	d812      	bhi.n	801002c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x60c>
 8010006:	1c75      	adds	r5, r6, #1
 8010008:	f8ab 50ec 	strh.w	r5, [fp, #236]	@ 0xec
 801000c:	9d01      	ldr	r5, [sp, #4]
 801000e:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	@ 0x28
 8010012:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	@ 0x2a
 8010016:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
 801001a:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	@ 0x2e
 801001e:	f825 0036 	strh.w	r0, [r5, r6, lsl #3]
 8010022:	442c      	add	r4, r5
 8010024:	8061      	strh	r1, [r4, #2]
 8010026:	80a2      	strh	r2, [r4, #4]
 8010028:	80e3      	strh	r3, [r4, #6]
 801002a:	e57f      	b.n	800fb2c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x10c>
 801002c:	f10b 03ac 	add.w	r3, fp, #172	@ 0xac
 8010030:	3e01      	subs	r6, #1
 8010032:	445c      	add	r4, fp
 8010034:	f06f 4a00 	mvn.w	sl, #2147483648	@ 0x80000000
 8010038:	f04f 37ff 	mov.w	r7, #4294967295
 801003c:	2500      	movs	r5, #0
 801003e:	9305      	str	r3, [sp, #20]
 8010040:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	@ 0xa8
 8010044:	9302      	str	r3, [sp, #8]
 8010046:	1e72      	subs	r2, r6, #1
 8010048:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	@ 0xaa
 801004c:	9304      	str	r3, [sp, #16]
 801004e:	4691      	mov	r9, r2
 8010050:	f104 03a4 	add.w	r3, r4, #164	@ 0xa4
 8010054:	f1b9 3fff 	cmp.w	r9, #4294967295
 8010058:	bf14      	ite	ne
 801005a:	9905      	ldrne	r1, [sp, #20]
 801005c:	f8dd e00c 	ldreq.w	lr, [sp, #12]
 8010060:	6818      	ldr	r0, [r3, #0]
 8010062:	9207      	str	r2, [sp, #28]
 8010064:	bf18      	it	ne
 8010066:	eb01 0ec9 	addne.w	lr, r1, r9, lsl #3
 801006a:	f10d 0c30 	add.w	ip, sp, #48	@ 0x30
 801006e:	f8be 1006 	ldrh.w	r1, [lr, #6]
 8010072:	f8be 8004 	ldrh.w	r8, [lr, #4]
 8010076:	9306      	str	r3, [sp, #24]
 8010078:	fb18 f801 	smulbb	r8, r8, r1
 801007c:	6859      	ldr	r1, [r3, #4]
 801007e:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 8010082:	4671      	mov	r1, lr
 8010084:	a80c      	add	r0, sp, #48	@ 0x30
 8010086:	f7ff fb65 	bl	800f754 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 801008a:	f8bd 1036 	ldrh.w	r1, [sp, #54]	@ 0x36
 801008e:	f8bd 0034 	ldrh.w	r0, [sp, #52]	@ 0x34
 8010092:	9b04      	ldr	r3, [sp, #16]
 8010094:	9a02      	ldr	r2, [sp, #8]
 8010096:	fb10 f001 	smulbb	r0, r0, r1
 801009a:	fb02 8803 	mla	r8, r2, r3, r8
 801009e:	eba0 0108 	sub.w	r1, r0, r8
 80100a2:	f04f 0c08 	mov.w	ip, #8
 80100a6:	fb90 f0fc 	sdiv	r0, r0, ip
 80100aa:	4288      	cmp	r0, r1
 80100ac:	dc20      	bgt.n	80100f0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6d0>
 80100ae:	4551      	cmp	r1, sl
 80100b0:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 80100b4:	da03      	bge.n	80100be <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x69e>
 80100b6:	b1d9      	cbz	r1, 80100f0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6d0>
 80100b8:	468a      	mov	sl, r1
 80100ba:	464f      	mov	r7, r9
 80100bc:	4635      	mov	r5, r6
 80100be:	f109 39ff 	add.w	r9, r9, #4294967295
 80100c2:	f119 0f02 	cmn.w	r9, #2
 80100c6:	d1c5      	bne.n	8010054 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x634>
 80100c8:	4616      	mov	r6, r2
 80100ca:	3201      	adds	r2, #1
 80100cc:	f1a4 0408 	sub.w	r4, r4, #8
 80100d0:	d1b6      	bne.n	8010040 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x620>
 80100d2:	9b01      	ldr	r3, [sp, #4]
 80100d4:	b2ac      	uxth	r4, r5
 80100d6:	00ed      	lsls	r5, r5, #3
 80100d8:	1958      	adds	r0, r3, r5
 80100da:	1c7b      	adds	r3, r7, #1
 80100dc:	d10b      	bne.n	80100f6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6d6>
 80100de:	4601      	mov	r1, r0
 80100e0:	9803      	ldr	r0, [sp, #12]
 80100e2:	f7ff fb37 	bl	800f754 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 80100e6:	4621      	mov	r1, r4
 80100e8:	9801      	ldr	r0, [sp, #4]
 80100ea:	f7ff fc85 	bl	800f9f8 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 80100ee:	e4b3      	b.n	800fa58 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x38>
 80100f0:	464f      	mov	r7, r9
 80100f2:	4635      	mov	r5, r6
 80100f4:	e7ed      	b.n	80100d2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6b2>
 80100f6:	9b01      	ldr	r3, [sp, #4]
 80100f8:	00ff      	lsls	r7, r7, #3
 80100fa:	19d9      	adds	r1, r3, r7
 80100fc:	f7ff fb2a 	bl	800f754 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 8010100:	9b03      	ldr	r3, [sp, #12]
 8010102:	cb03      	ldmia	r3!, {r0, r1}
 8010104:	445f      	add	r7, fp
 8010106:	445d      	add	r5, fp
 8010108:	f8c7 00ac 	str.w	r0, [r7, #172]	@ 0xac
 801010c:	f8c7 10b0 	str.w	r1, [r7, #176]	@ 0xb0
 8010110:	f855 0fac 	ldr.w	r0, [r5, #172]!
 8010114:	9b03      	ldr	r3, [sp, #12]
 8010116:	6869      	ldr	r1, [r5, #4]
 8010118:	c303      	stmia	r3!, {r0, r1}
 801011a:	e7e4      	b.n	80100e6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c6>

0801011c <_ZN8touchgfx11Application15drawCachedAreasEv>:
 801011c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010120:	f500 7698 	add.w	r6, r0, #304	@ 0x130
 8010124:	b0a1      	sub	sp, #132	@ 0x84
 8010126:	4604      	mov	r4, r0
 8010128:	4630      	mov	r0, r6
 801012a:	f7fa fa10 	bl	800a54e <_ZNK8touchgfx4Rect7isEmptyEv>
 801012e:	4605      	mov	r5, r0
 8010130:	b948      	cbnz	r0, 8010146 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2a>
 8010132:	6823      	ldr	r3, [r4, #0]
 8010134:	e896 0006 	ldmia.w	r6, {r1, r2}
 8010138:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 801013a:	4620      	mov	r0, r4
 801013c:	4798      	blx	r3
 801013e:	f8c4 5130 	str.w	r5, [r4, #304]	@ 0x130
 8010142:	f8c4 5134 	str.w	r5, [r4, #308]	@ 0x134
 8010146:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	@ 0xec
 801014a:	2b00      	cmp	r3, #0
 801014c:	d149      	bne.n	80101e2 <_ZN8touchgfx11Application15drawCachedAreasEv+0xc6>
 801014e:	4bb1      	ldr	r3, [pc, #708]	@ (8010414 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2f8>)
 8010150:	681b      	ldr	r3, [r3, #0]
 8010152:	f893 7048 	ldrb.w	r7, [r3, #72]	@ 0x48
 8010156:	1ebb      	subs	r3, r7, #2
 8010158:	425f      	negs	r7, r3
 801015a:	415f      	adcs	r7, r3
 801015c:	4bae      	ldr	r3, [pc, #696]	@ (8010418 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2fc>)
 801015e:	681b      	ldr	r3, [r3, #0]
 8010160:	2b00      	cmp	r3, #0
 8010162:	d040      	beq.n	80101e6 <_ZN8touchgfx11Application15drawCachedAreasEv+0xca>
 8010164:	4dad      	ldr	r5, [pc, #692]	@ (801041c <_ZN8touchgfx11Application15drawCachedAreasEv+0x300>)
 8010166:	4628      	mov	r0, r5
 8010168:	f7fa f9f1 	bl	800a54e <_ZNK8touchgfx4Rect7isEmptyEv>
 801016c:	4606      	mov	r6, r0
 801016e:	2800      	cmp	r0, #0
 8010170:	d139      	bne.n	80101e6 <_ZN8touchgfx11Application15drawCachedAreasEv+0xca>
 8010172:	4628      	mov	r0, r5
 8010174:	f7ff f982 	bl	800f47c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 8010178:	6823      	ldr	r3, [r4, #0]
 801017a:	6829      	ldr	r1, [r5, #0]
 801017c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 801017e:	686a      	ldr	r2, [r5, #4]
 8010180:	4620      	mov	r0, r4
 8010182:	4798      	blx	r3
 8010184:	802e      	strh	r6, [r5, #0]
 8010186:	806e      	strh	r6, [r5, #2]
 8010188:	80ae      	strh	r6, [r5, #4]
 801018a:	80ee      	strh	r6, [r5, #6]
 801018c:	af0f      	add	r7, sp, #60	@ 0x3c
 801018e:	4ea4      	ldr	r6, [pc, #656]	@ (8010420 <_ZN8touchgfx11Application15drawCachedAreasEv+0x304>)
 8010190:	4638      	mov	r0, r7
 8010192:	f7ff fbd9 	bl	800f948 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 8010196:	8835      	ldrh	r5, [r6, #0]
 8010198:	f8b4 c0ec 	ldrh.w	ip, [r4, #236]	@ 0xec
 801019c:	462b      	mov	r3, r5
 801019e:	f104 00ac 	add.w	r0, r4, #172	@ 0xac
 80101a2:	4563      	cmp	r3, ip
 80101a4:	d224      	bcs.n	80101f0 <_ZN8touchgfx11Application15drawCachedAreasEv+0xd4>
 80101a6:	f8bd 107c 	ldrh.w	r1, [sp, #124]	@ 0x7c
 80101aa:	2907      	cmp	r1, #7
 80101ac:	d816      	bhi.n	80101dc <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
 80101ae:	eb00 02c3 	add.w	r2, r0, r3, lsl #3
 80101b2:	f930 9033 	ldrsh.w	r9, [r0, r3, lsl #3]
 80101b6:	f9b2 a002 	ldrsh.w	sl, [r2, #2]
 80101ba:	f9b2 8004 	ldrsh.w	r8, [r2, #4]
 80101be:	f9b2 e006 	ldrsh.w	lr, [r2, #6]
 80101c2:	1c4a      	adds	r2, r1, #1
 80101c4:	f8ad 207c 	strh.w	r2, [sp, #124]	@ 0x7c
 80101c8:	eb07 02c1 	add.w	r2, r7, r1, lsl #3
 80101cc:	f827 9031 	strh.w	r9, [r7, r1, lsl #3]
 80101d0:	f8a2 a002 	strh.w	sl, [r2, #2]
 80101d4:	f8a2 8004 	strh.w	r8, [r2, #4]
 80101d8:	f8a2 e006 	strh.w	lr, [r2, #6]
 80101dc:	3301      	adds	r3, #1
 80101de:	b29b      	uxth	r3, r3
 80101e0:	e7df      	b.n	80101a2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x86>
 80101e2:	2701      	movs	r7, #1
 80101e4:	e7ba      	b.n	801015c <_ZN8touchgfx11Application15drawCachedAreasEv+0x40>
 80101e6:	2f00      	cmp	r7, #0
 80101e8:	d1d0      	bne.n	801018c <_ZN8touchgfx11Application15drawCachedAreasEv+0x70>
 80101ea:	b021      	add	sp, #132	@ 0x84
 80101ec:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80101f0:	f8b4 312e 	ldrh.w	r3, [r4, #302]	@ 0x12e
 80101f4:	42ab      	cmp	r3, r5
 80101f6:	d90c      	bls.n	8010212 <_ZN8touchgfx11Application15drawCachedAreasEv+0xf6>
 80101f8:	eb04 03c5 	add.w	r3, r4, r5, lsl #3
 80101fc:	6822      	ldr	r2, [r4, #0]
 80101fe:	f8d3 10ee 	ldr.w	r1, [r3, #238]	@ 0xee
 8010202:	6c17      	ldr	r7, [r2, #64]	@ 0x40
 8010204:	f8d3 20f2 	ldr.w	r2, [r3, #242]	@ 0xf2
 8010208:	4620      	mov	r0, r4
 801020a:	3501      	adds	r5, #1
 801020c:	47b8      	blx	r7
 801020e:	b2ad      	uxth	r5, r5
 8010210:	e7ee      	b.n	80101f0 <_ZN8touchgfx11Application15drawCachedAreasEv+0xd4>
 8010212:	4d80      	ldr	r5, [pc, #512]	@ (8010414 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2f8>)
 8010214:	6828      	ldr	r0, [r5, #0]
 8010216:	f890 3048 	ldrb.w	r3, [r0, #72]	@ 0x48
 801021a:	2b01      	cmp	r3, #1
 801021c:	f040 813b 	bne.w	8010496 <_ZN8touchgfx11Application15drawCachedAreasEv+0x37a>
 8010220:	4a80      	ldr	r2, [pc, #512]	@ (8010424 <_ZN8touchgfx11Application15drawCachedAreasEv+0x308>)
 8010222:	8833      	ldrh	r3, [r6, #0]
 8010224:	7812      	ldrb	r2, [r2, #0]
 8010226:	f8b4 00ec 	ldrh.w	r0, [r4, #236]	@ 0xec
 801022a:	2a01      	cmp	r2, #1
 801022c:	d014      	beq.n	8010258 <_ZN8touchgfx11Application15drawCachedAreasEv+0x13c>
 801022e:	eb04 02c3 	add.w	r2, r4, r3, lsl #3
 8010232:	32ae      	adds	r2, #174	@ 0xae
 8010234:	f04f 0900 	mov.w	r9, #0
 8010238:	4283      	cmp	r3, r0
 801023a:	f102 0208 	add.w	r2, r2, #8
 801023e:	f280 8082 	bge.w	8010346 <_ZN8touchgfx11Application15drawCachedAreasEv+0x22a>
 8010242:	f832 1c04 	ldrh.w	r1, [r2, #-4]
 8010246:	f832 7c08 	ldrh.w	r7, [r2, #-8]
 801024a:	4439      	add	r1, r7
 801024c:	b209      	sxth	r1, r1
 801024e:	4589      	cmp	r9, r1
 8010250:	bfb8      	it	lt
 8010252:	4689      	movlt	r9, r1
 8010254:	3301      	adds	r3, #1
 8010256:	e7ef      	b.n	8010238 <_ZN8touchgfx11Application15drawCachedAreasEv+0x11c>
 8010258:	4f73      	ldr	r7, [pc, #460]	@ (8010428 <_ZN8touchgfx11Application15drawCachedAreasEv+0x30c>)
 801025a:	883a      	ldrh	r2, [r7, #0]
 801025c:	4693      	mov	fp, r2
 801025e:	4283      	cmp	r3, r0
 8010260:	da08      	bge.n	8010274 <_ZN8touchgfx11Application15drawCachedAreasEv+0x158>
 8010262:	eb04 01c3 	add.w	r1, r4, r3, lsl #3
 8010266:	3301      	adds	r3, #1
 8010268:	f9b1 10ac 	ldrsh.w	r1, [r1, #172]	@ 0xac
 801026c:	458b      	cmp	fp, r1
 801026e:	bfa8      	it	ge
 8010270:	468b      	movge	fp, r1
 8010272:	e7f4      	b.n	801025e <_ZN8touchgfx11Application15drawCachedAreasEv+0x142>
 8010274:	2300      	movs	r3, #0
 8010276:	2a0f      	cmp	r2, #15
 8010278:	f8df 91b0 	ldr.w	r9, [pc, #432]	@ 801042c <_ZN8touchgfx11Application15drawCachedAreasEv+0x310>
 801027c:	f8ad 202c 	strh.w	r2, [sp, #44]	@ 0x2c
 8010280:	bf8c      	ite	hi
 8010282:	ea4f 08d2 	movhi.w	r8, r2, lsr #3
 8010286:	f04f 0801 	movls.w	r8, #1
 801028a:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
 801028e:	f8ad 3030 	strh.w	r3, [sp, #48]	@ 0x30
 8010292:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 8010296:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 801029a:	6828      	ldr	r0, [r5, #0]
 801029c:	455b      	cmp	r3, fp
 801029e:	f340 80c7 	ble.w	8010430 <_ZN8touchgfx11Application15drawCachedAreasEv+0x314>
 80102a2:	6803      	ldr	r3, [r0, #0]
 80102a4:	f8b7 a000 	ldrh.w	sl, [r7]
 80102a8:	f8d3 30a8 	ldr.w	r3, [r3, #168]	@ 0xa8
 80102ac:	4798      	blx	r3
 80102ae:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	@ 0x2c
 80102b2:	682b      	ldr	r3, [r5, #0]
 80102b4:	ebaa 0000 	sub.w	r0, sl, r0
 80102b8:	b280      	uxth	r0, r0
 80102ba:	ebac 0e08 	sub.w	lr, ip, r8
 80102be:	4570      	cmp	r0, lr
 80102c0:	f893 107c 	ldrb.w	r1, [r3, #124]	@ 0x7c
 80102c4:	f893 206a 	ldrb.w	r2, [r3, #106]	@ 0x6a
 80102c8:	dd05      	ble.n	80102d6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x1ba>
 80102ca:	4558      	cmp	r0, fp
 80102cc:	dd03      	ble.n	80102d6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x1ba>
 80102ce:	b901      	cbnz	r1, 80102d2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x1b6>
 80102d0:	b392      	cbz	r2, 8010338 <_ZN8touchgfx11Application15drawCachedAreasEv+0x21c>
 80102d2:	4658      	mov	r0, fp
 80102d4:	e006      	b.n	80102e4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x1c8>
 80102d6:	2900      	cmp	r1, #0
 80102d8:	d1fb      	bne.n	80102d2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x1b6>
 80102da:	2a00      	cmp	r2, #0
 80102dc:	d1f9      	bne.n	80102d2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x1b6>
 80102de:	4558      	cmp	r0, fp
 80102e0:	bfb8      	it	lt
 80102e2:	4658      	movlt	r0, fp
 80102e4:	f9b9 3000 	ldrsh.w	r3, [r9]
 80102e8:	f8ad 002c 	strh.w	r0, [sp, #44]	@ 0x2c
 80102ec:	2200      	movs	r2, #0
 80102ee:	ebac 0000 	sub.w	r0, ip, r0
 80102f2:	f8b6 a000 	ldrh.w	sl, [r6]
 80102f6:	f8ad 202e 	strh.w	r2, [sp, #46]	@ 0x2e
 80102fa:	f8ad 0030 	strh.w	r0, [sp, #48]	@ 0x30
 80102fe:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 8010302:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	@ 0xec
 8010306:	4553      	cmp	r3, sl
 8010308:	ddc5      	ble.n	8010296 <_ZN8touchgfx11Application15drawCachedAreasEv+0x17a>
 801030a:	eb04 02ca 	add.w	r2, r4, sl, lsl #3
 801030e:	ab0d      	add	r3, sp, #52	@ 0x34
 8010310:	f852 0fac 	ldr.w	r0, [r2, #172]!
 8010314:	6851      	ldr	r1, [r2, #4]
 8010316:	c303      	stmia	r3!, {r0, r1}
 8010318:	a80d      	add	r0, sp, #52	@ 0x34
 801031a:	a90b      	add	r1, sp, #44	@ 0x2c
 801031c:	f7fa f8d4 	bl	800a4c8 <_ZN8touchgfx4RectaNERKS0_>
 8010320:	a80d      	add	r0, sp, #52	@ 0x34
 8010322:	f7fa f914 	bl	800a54e <_ZNK8touchgfx4Rect7isEmptyEv>
 8010326:	b920      	cbnz	r0, 8010332 <_ZN8touchgfx11Application15drawCachedAreasEv+0x216>
 8010328:	6823      	ldr	r3, [r4, #0]
 801032a:	a90d      	add	r1, sp, #52	@ 0x34
 801032c:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 801032e:	4620      	mov	r0, r4
 8010330:	4798      	blx	r3
 8010332:	f10a 0a01 	add.w	sl, sl, #1
 8010336:	e7e4      	b.n	8010302 <_ZN8touchgfx11Application15drawCachedAreasEv+0x1e6>
 8010338:	681a      	ldr	r2, [r3, #0]
 801033a:	2101      	movs	r1, #1
 801033c:	f8d2 20a4 	ldr.w	r2, [r2, #164]	@ 0xa4
 8010340:	4618      	mov	r0, r3
 8010342:	4790      	blx	r2
 8010344:	e7a7      	b.n	8010296 <_ZN8touchgfx11Application15drawCachedAreasEv+0x17a>
 8010346:	4b39      	ldr	r3, [pc, #228]	@ (801042c <_ZN8touchgfx11Application15drawCachedAreasEv+0x310>)
 8010348:	f8df 80dc 	ldr.w	r8, [pc, #220]	@ 8010428 <_ZN8touchgfx11Application15drawCachedAreasEv+0x30c>
 801034c:	881f      	ldrh	r7, [r3, #0]
 801034e:	2300      	movs	r3, #0
 8010350:	e9cd 330b 	strd	r3, r3, [sp, #44]	@ 0x2c
 8010354:	2f0f      	cmp	r7, #15
 8010356:	bf8c      	ite	hi
 8010358:	08ff      	lsrhi	r7, r7, #3
 801035a:	2701      	movls	r7, #1
 801035c:	f8bd 3032 	ldrh.w	r3, [sp, #50]	@ 0x32
 8010360:	f8bd 202e 	ldrh.w	r2, [sp, #46]	@ 0x2e
 8010364:	6828      	ldr	r0, [r5, #0]
 8010366:	4413      	add	r3, r2
 8010368:	b21b      	sxth	r3, r3
 801036a:	454b      	cmp	r3, r9
 801036c:	da60      	bge.n	8010430 <_ZN8touchgfx11Application15drawCachedAreasEv+0x314>
 801036e:	6803      	ldr	r3, [r0, #0]
 8010370:	f8d3 30a8 	ldr.w	r3, [r3, #168]	@ 0xa8
 8010374:	4798      	blx	r3
 8010376:	f8bd e02e 	ldrh.w	lr, [sp, #46]	@ 0x2e
 801037a:	f8bd 3032 	ldrh.w	r3, [sp, #50]	@ 0x32
 801037e:	682a      	ldr	r2, [r5, #0]
 8010380:	4473      	add	r3, lr
 8010382:	b21b      	sxth	r3, r3
 8010384:	eb03 0e07 	add.w	lr, r3, r7
 8010388:	4570      	cmp	r0, lr
 801038a:	f892 c07c 	ldrb.w	ip, [r2, #124]	@ 0x7c
 801038e:	f892 106a 	ldrb.w	r1, [r2, #106]	@ 0x6a
 8010392:	da0d      	bge.n	80103b0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x294>
 8010394:	4548      	cmp	r0, r9
 8010396:	da0b      	bge.n	80103b0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x294>
 8010398:	f1bc 0f00 	cmp.w	ip, #0
 801039c:	d138      	bne.n	8010410 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2f4>
 801039e:	2900      	cmp	r1, #0
 80103a0:	d136      	bne.n	8010410 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2f4>
 80103a2:	6813      	ldr	r3, [r2, #0]
 80103a4:	2101      	movs	r1, #1
 80103a6:	f8d3 30a4 	ldr.w	r3, [r3, #164]	@ 0xa4
 80103aa:	4610      	mov	r0, r2
 80103ac:	4798      	blx	r3
 80103ae:	e7d5      	b.n	801035c <_ZN8touchgfx11Application15drawCachedAreasEv+0x240>
 80103b0:	f1bc 0f00 	cmp.w	ip, #0
 80103b4:	d12c      	bne.n	8010410 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2f4>
 80103b6:	bb59      	cbnz	r1, 8010410 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2f4>
 80103b8:	4548      	cmp	r0, r9
 80103ba:	bfa8      	it	ge
 80103bc:	4648      	movge	r0, r9
 80103be:	f9b8 2000 	ldrsh.w	r2, [r8]
 80103c2:	f8b6 a000 	ldrh.w	sl, [r6]
 80103c6:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
 80103ca:	2100      	movs	r1, #0
 80103cc:	1ac0      	subs	r0, r0, r3
 80103ce:	f8ad 102c 	strh.w	r1, [sp, #44]	@ 0x2c
 80103d2:	f8ad 2030 	strh.w	r2, [sp, #48]	@ 0x30
 80103d6:	f8ad 0032 	strh.w	r0, [sp, #50]	@ 0x32
 80103da:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	@ 0xec
 80103de:	4553      	cmp	r3, sl
 80103e0:	ddbc      	ble.n	801035c <_ZN8touchgfx11Application15drawCachedAreasEv+0x240>
 80103e2:	eb04 02ca 	add.w	r2, r4, sl, lsl #3
 80103e6:	ab0d      	add	r3, sp, #52	@ 0x34
 80103e8:	f852 0fac 	ldr.w	r0, [r2, #172]!
 80103ec:	6851      	ldr	r1, [r2, #4]
 80103ee:	c303      	stmia	r3!, {r0, r1}
 80103f0:	a80d      	add	r0, sp, #52	@ 0x34
 80103f2:	a90b      	add	r1, sp, #44	@ 0x2c
 80103f4:	f7fa f868 	bl	800a4c8 <_ZN8touchgfx4RectaNERKS0_>
 80103f8:	a80d      	add	r0, sp, #52	@ 0x34
 80103fa:	f7fa f8a8 	bl	800a54e <_ZNK8touchgfx4Rect7isEmptyEv>
 80103fe:	b920      	cbnz	r0, 801040a <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ee>
 8010400:	6823      	ldr	r3, [r4, #0]
 8010402:	a90d      	add	r1, sp, #52	@ 0x34
 8010404:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8010406:	4620      	mov	r0, r4
 8010408:	4798      	blx	r3
 801040a:	f10a 0a01 	add.w	sl, sl, #1
 801040e:	e7e4      	b.n	80103da <_ZN8touchgfx11Application15drawCachedAreasEv+0x2be>
 8010410:	4648      	mov	r0, r9
 8010412:	e7d4      	b.n	80103be <_ZN8touchgfx11Application15drawCachedAreasEv+0x2a2>
 8010414:	20014044 	.word	0x20014044
 8010418:	20014084 	.word	0x20014084
 801041c:	20014090 	.word	0x20014090
 8010420:	20000194 	.word	0x20000194
 8010424:	2001403a 	.word	0x2001403a
 8010428:	20014036 	.word	0x20014036
 801042c:	20014038 	.word	0x20014038
 8010430:	6828      	ldr	r0, [r5, #0]
 8010432:	6803      	ldr	r3, [r0, #0]
 8010434:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8010436:	4798      	blx	r3
 8010438:	4ba5      	ldr	r3, [pc, #660]	@ (80106d0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5b4>)
 801043a:	781b      	ldrb	r3, [r3, #0]
 801043c:	2b00      	cmp	r3, #0
 801043e:	f43f aed4 	beq.w	80101ea <_ZN8touchgfx11Application15drawCachedAreasEv+0xce>
 8010442:	2300      	movs	r3, #0
 8010444:	f8a4 312e 	strh.w	r3, [r4, #302]	@ 0x12e
 8010448:	4ba2      	ldr	r3, [pc, #648]	@ (80106d4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5b8>)
 801044a:	f8bd 607c 	ldrh.w	r6, [sp, #124]	@ 0x7c
 801044e:	881b      	ldrh	r3, [r3, #0]
 8010450:	a80f      	add	r0, sp, #60	@ 0x3c
 8010452:	f104 05ee 	add.w	r5, r4, #238	@ 0xee
 8010456:	42b3      	cmp	r3, r6
 8010458:	f4bf aec7 	bcs.w	80101ea <_ZN8touchgfx11Application15drawCachedAreasEv+0xce>
 801045c:	f8b4 112e 	ldrh.w	r1, [r4, #302]	@ 0x12e
 8010460:	2907      	cmp	r1, #7
 8010462:	d815      	bhi.n	8010490 <_ZN8touchgfx11Application15drawCachedAreasEv+0x374>
 8010464:	eb00 02c3 	add.w	r2, r0, r3, lsl #3
 8010468:	f930 8033 	ldrsh.w	r8, [r0, r3, lsl #3]
 801046c:	f9b2 e002 	ldrsh.w	lr, [r2, #2]
 8010470:	f9b2 c004 	ldrsh.w	ip, [r2, #4]
 8010474:	f9b2 7006 	ldrsh.w	r7, [r2, #6]
 8010478:	1c4a      	adds	r2, r1, #1
 801047a:	f8a4 212e 	strh.w	r2, [r4, #302]	@ 0x12e
 801047e:	eb05 02c1 	add.w	r2, r5, r1, lsl #3
 8010482:	f825 8031 	strh.w	r8, [r5, r1, lsl #3]
 8010486:	f8a2 e002 	strh.w	lr, [r2, #2]
 801048a:	f8a2 c004 	strh.w	ip, [r2, #4]
 801048e:	80d7      	strh	r7, [r2, #6]
 8010490:	3301      	adds	r3, #1
 8010492:	b29b      	uxth	r3, r3
 8010494:	e7df      	b.n	8010456 <_ZN8touchgfx11Application15drawCachedAreasEv+0x33a>
 8010496:	2b02      	cmp	r3, #2
 8010498:	f040 80d1 	bne.w	801063e <_ZN8touchgfx11Application15drawCachedAreasEv+0x522>
 801049c:	f8b0 3080 	ldrh.w	r3, [r0, #128]	@ 0x80
 80104a0:	9308      	str	r3, [sp, #32]
 80104a2:	f8b0 307e 	ldrh.w	r3, [r0, #126]	@ 0x7e
 80104a6:	9307      	str	r3, [sp, #28]
 80104a8:	6803      	ldr	r3, [r0, #0]
 80104aa:	f890 b07d 	ldrb.w	fp, [r0, #125]	@ 0x7d
 80104ae:	f8d3 30a8 	ldr.w	r3, [r3, #168]	@ 0xa8
 80104b2:	4798      	blx	r3
 80104b4:	4b88      	ldr	r3, [pc, #544]	@ (80106d8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5bc>)
 80104b6:	881b      	ldrh	r3, [r3, #0]
 80104b8:	9302      	str	r3, [sp, #8]
 80104ba:	4b88      	ldr	r3, [pc, #544]	@ (80106dc <_ZN8touchgfx11Application15drawCachedAreasEv+0x5c0>)
 80104bc:	881e      	ldrh	r6, [r3, #0]
 80104be:	4b88      	ldr	r3, [pc, #544]	@ (80106e0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5c4>)
 80104c0:	781b      	ldrb	r3, [r3, #0]
 80104c2:	f10b 37ff 	add.w	r7, fp, #4294967295
 80104c6:	2b01      	cmp	r3, #1
 80104c8:	bf1c      	itt	ne
 80104ca:	9b02      	ldrne	r3, [sp, #8]
 80104cc:	9602      	strne	r6, [sp, #8]
 80104ce:	b2bf      	uxth	r7, r7
 80104d0:	fa0f f887 	sxth.w	r8, r7
 80104d4:	4682      	mov	sl, r0
 80104d6:	f04f 0000 	mov.w	r0, #0
 80104da:	bf18      	it	ne
 80104dc:	461e      	movne	r6, r3
 80104de:	f7f0 f9bb 	bl	8000858 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 80104e2:	fb96 fbfb 	sdiv	fp, r6, fp
 80104e6:	fb0b f808 	mul.w	r8, fp, r8
 80104ea:	45c2      	cmp	sl, r8
 80104ec:	da0c      	bge.n	8010508 <_ZN8touchgfx11Application15drawCachedAreasEv+0x3ec>
 80104ee:	6828      	ldr	r0, [r5, #0]
 80104f0:	6803      	ldr	r3, [r0, #0]
 80104f2:	210a      	movs	r1, #10
 80104f4:	f8d3 309c 	ldr.w	r3, [r3, #156]	@ 0x9c
 80104f8:	4798      	blx	r3
 80104fa:	6828      	ldr	r0, [r5, #0]
 80104fc:	6803      	ldr	r3, [r0, #0]
 80104fe:	f8d3 30a8 	ldr.w	r3, [r3, #168]	@ 0xa8
 8010502:	4798      	blx	r3
 8010504:	4682      	mov	sl, r0
 8010506:	e7f0      	b.n	80104ea <_ZN8touchgfx11Application15drawCachedAreasEv+0x3ce>
 8010508:	2000      	movs	r0, #0
 801050a:	f7f0 f9cf 	bl	80008ac <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 801050e:	fa1f f38b 	uxth.w	r3, fp
 8010512:	fb17 f703 	smulbb	r7, r7, r3
 8010516:	9304      	str	r3, [sp, #16]
 8010518:	b2bb      	uxth	r3, r7
 801051a:	9305      	str	r3, [sp, #20]
 801051c:	f04f 0800 	mov.w	r8, #0
 8010520:	0973      	lsrs	r3, r6, #5
 8010522:	4f70      	ldr	r7, [pc, #448]	@ (80106e4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5c8>)
 8010524:	9306      	str	r3, [sp, #24]
 8010526:	4645      	mov	r5, r8
 8010528:	42b5      	cmp	r5, r6
 801052a:	d085      	beq.n	8010438 <_ZN8touchgfx11Application15drawCachedAreasEv+0x31c>
 801052c:	6838      	ldr	r0, [r7, #0]
 801052e:	6803      	ldr	r3, [r0, #0]
 8010530:	f8d3 30a8 	ldr.w	r3, [r3, #168]	@ 0xa8
 8010534:	4798      	blx	r3
 8010536:	4582      	cmp	sl, r0
 8010538:	4681      	mov	r9, r0
 801053a:	d907      	bls.n	801054c <_ZN8touchgfx11Application15drawCachedAreasEv+0x430>
 801053c:	f1b8 0f00 	cmp.w	r8, #0
 8010540:	d007      	beq.n	8010552 <_ZN8touchgfx11Application15drawCachedAreasEv+0x436>
 8010542:	6838      	ldr	r0, [r7, #0]
 8010544:	6803      	ldr	r3, [r0, #0]
 8010546:	f8d3 30b8 	ldr.w	r3, [r3, #184]	@ 0xb8
 801054a:	e774      	b.n	8010436 <_ZN8touchgfx11Application15drawCachedAreasEv+0x31a>
 801054c:	f1b8 0f00 	cmp.w	r8, #0
 8010550:	d003      	beq.n	801055a <_ZN8touchgfx11Application15drawCachedAreasEv+0x43e>
 8010552:	454d      	cmp	r5, r9
 8010554:	d3f5      	bcc.n	8010542 <_ZN8touchgfx11Application15drawCachedAreasEv+0x426>
 8010556:	f04f 0801 	mov.w	r8, #1
 801055a:	9a04      	ldr	r2, [sp, #16]
 801055c:	fb95 f3fb 	sdiv	r3, r5, fp
 8010560:	9303      	str	r3, [sp, #12]
 8010562:	3301      	adds	r3, #1
 8010564:	fb13 f302 	smulbb	r3, r3, r2
 8010568:	b299      	uxth	r1, r3
 801056a:	f1b8 0f00 	cmp.w	r8, #0
 801056e:	d04e      	beq.n	801060e <_ZN8touchgfx11Application15drawCachedAreasEv+0x4f2>
 8010570:	eb09 030b 	add.w	r3, r9, fp
 8010574:	42b3      	cmp	r3, r6
 8010576:	bfa8      	it	ge
 8010578:	4633      	movge	r3, r6
 801057a:	9807      	ldr	r0, [sp, #28]
 801057c:	b29b      	uxth	r3, r3
 801057e:	428b      	cmp	r3, r1
 8010580:	bf94      	ite	ls
 8010582:	ebc5 0203 	rsbls	r2, r5, r3
 8010586:	ebc5 0201 	rsbhi	r2, r5, r1
 801058a:	4282      	cmp	r2, r0
 801058c:	bfa8      	it	ge
 801058e:	4602      	movge	r2, r0
 8010590:	9808      	ldr	r0, [sp, #32]
 8010592:	fa1f fa82 	uxth.w	sl, r2
 8010596:	4582      	cmp	sl, r0
 8010598:	d205      	bcs.n	80105a6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x48a>
 801059a:	fa15 f082 	uxtah	r0, r5, r2
 801059e:	4286      	cmp	r6, r0
 80105a0:	d001      	beq.n	80105a6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x48a>
 80105a2:	4299      	cmp	r1, r3
 80105a4:	d240      	bcs.n	8010628 <_ZN8touchgfx11Application15drawCachedAreasEv+0x50c>
 80105a6:	2001      	movs	r0, #1
 80105a8:	9209      	str	r2, [sp, #36]	@ 0x24
 80105aa:	f7f0 f955 	bl	8000858 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 80105ae:	6838      	ldr	r0, [r7, #0]
 80105b0:	f9bd 100c 	ldrsh.w	r1, [sp, #12]
 80105b4:	6803      	ldr	r3, [r0, #0]
 80105b6:	f8d3 3098 	ldr.w	r3, [r3, #152]	@ 0x98
 80105ba:	4798      	blx	r3
 80105bc:	4b48      	ldr	r3, [pc, #288]	@ (80106e0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5c4>)
 80105be:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 80105c0:	781b      	ldrb	r3, [r3, #0]
 80105c2:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 80105c6:	2b01      	cmp	r3, #1
 80105c8:	b212      	sxth	r2, r2
 80105ca:	f04f 0000 	mov.w	r0, #0
 80105ce:	d122      	bne.n	8010616 <_ZN8touchgfx11Application15drawCachedAreasEv+0x4fa>
 80105d0:	1b73      	subs	r3, r6, r5
 80105d2:	eba3 030a 	sub.w	r3, r3, sl
 80105d6:	f8ad 3034 	strh.w	r3, [sp, #52]	@ 0x34
 80105da:	f8ad 0036 	strh.w	r0, [sp, #54]	@ 0x36
 80105de:	f8ad 2038 	strh.w	r2, [sp, #56]	@ 0x38
 80105e2:	f8ad 103a 	strh.w	r1, [sp, #58]	@ 0x3a
 80105e6:	6823      	ldr	r3, [r4, #0]
 80105e8:	a90d      	add	r1, sp, #52	@ 0x34
 80105ea:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 80105ec:	4620      	mov	r0, r4
 80105ee:	4798      	blx	r3
 80105f0:	6838      	ldr	r0, [r7, #0]
 80105f2:	9b03      	ldr	r3, [sp, #12]
 80105f4:	4259      	negs	r1, r3
 80105f6:	6803      	ldr	r3, [r0, #0]
 80105f8:	b209      	sxth	r1, r1
 80105fa:	f8d3 3098 	ldr.w	r3, [r3, #152]	@ 0x98
 80105fe:	4798      	blx	r3
 8010600:	4455      	add	r5, sl
 8010602:	2001      	movs	r0, #1
 8010604:	b2ad      	uxth	r5, r5
 8010606:	f7f0 f951 	bl	80008ac <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 801060a:	46ca      	mov	sl, r9
 801060c:	e78c      	b.n	8010528 <_ZN8touchgfx11Application15drawCachedAreasEv+0x40c>
 801060e:	9b05      	ldr	r3, [sp, #20]
 8010610:	eba9 0303 	sub.w	r3, r9, r3
 8010614:	e7b1      	b.n	801057a <_ZN8touchgfx11Application15drawCachedAreasEv+0x45e>
 8010616:	f8ad 0034 	strh.w	r0, [sp, #52]	@ 0x34
 801061a:	f8ad 5036 	strh.w	r5, [sp, #54]	@ 0x36
 801061e:	f8ad 1038 	strh.w	r1, [sp, #56]	@ 0x38
 8010622:	f8ad 203a 	strh.w	r2, [sp, #58]	@ 0x3a
 8010626:	e7de      	b.n	80105e6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x4ca>
 8010628:	6838      	ldr	r0, [r7, #0]
 801062a:	6803      	ldr	r3, [r0, #0]
 801062c:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801062e:	4798      	blx	r3
 8010630:	6838      	ldr	r0, [r7, #0]
 8010632:	9906      	ldr	r1, [sp, #24]
 8010634:	6803      	ldr	r3, [r0, #0]
 8010636:	f8d3 309c 	ldr.w	r3, [r3, #156]	@ 0x9c
 801063a:	4798      	blx	r3
 801063c:	e7e5      	b.n	801060a <_ZN8touchgfx11Application15drawCachedAreasEv+0x4ee>
 801063e:	2b03      	cmp	r3, #3
 8010640:	f040 8130 	bne.w	80108a4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x788>
 8010644:	4b26      	ldr	r3, [pc, #152]	@ (80106e0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5c4>)
 8010646:	f9b0 9082 	ldrsh.w	r9, [r0, #130]	@ 0x82
 801064a:	781b      	ldrb	r3, [r3, #0]
 801064c:	2b01      	cmp	r3, #1
 801064e:	f104 0aac 	add.w	sl, r4, #172	@ 0xac
 8010652:	f000 8093 	beq.w	801077c <_ZN8touchgfx11Application15drawCachedAreasEv+0x660>
 8010656:	8832      	ldrh	r2, [r6, #0]
 8010658:	f8b4 10ec 	ldrh.w	r1, [r4, #236]	@ 0xec
 801065c:	3201      	adds	r2, #1
 801065e:	b292      	uxth	r2, r2
 8010660:	2900      	cmp	r1, #0
 8010662:	f43f aee9 	beq.w	8010438 <_ZN8touchgfx11Application15drawCachedAreasEv+0x31c>
 8010666:	f8b4 50b2 	ldrh.w	r5, [r4, #178]	@ 0xb2
 801066a:	f8b4 30ae 	ldrh.w	r3, [r4, #174]	@ 0xae
 801066e:	441d      	add	r5, r3
 8010670:	b22d      	sxth	r5, r5
 8010672:	4694      	mov	ip, r2
 8010674:	f04f 0800 	mov.w	r8, #0
 8010678:	fa1f f38c 	uxth.w	r3, ip
 801067c:	4299      	cmp	r1, r3
 801067e:	ea4f 07c8 	mov.w	r7, r8, lsl #3
 8010682:	f240 80ba 	bls.w	80107fa <_ZN8touchgfx11Application15drawCachedAreasEv+0x6de>
 8010686:	4427      	add	r7, r4
 8010688:	eb04 0ecc 	add.w	lr, r4, ip, lsl #3
 801068c:	f9b7 30ae 	ldrsh.w	r3, [r7, #174]	@ 0xae
 8010690:	f9be 00ae 	ldrsh.w	r0, [lr, #174]	@ 0xae
 8010694:	4283      	cmp	r3, r0
 8010696:	f340 809c 	ble.w	80107d2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x6b6>
 801069a:	f8be 50b2 	ldrh.w	r5, [lr, #178]	@ 0xb2
 801069e:	4405      	add	r5, r0
 80106a0:	b22d      	sxth	r5, r5
 80106a2:	429d      	cmp	r5, r3
 80106a4:	bfa8      	it	ge
 80106a6:	461d      	movge	r5, r3
 80106a8:	46e0      	mov	r8, ip
 80106aa:	f10c 0c01 	add.w	ip, ip, #1
 80106ae:	e7e3      	b.n	8010678 <_ZN8touchgfx11Application15drawCachedAreasEv+0x55c>
 80106b0:	d10a      	bne.n	80106c8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5ac>
 80106b2:	f9b7 00b2 	ldrsh.w	r0, [r7, #178]	@ 0xb2
 80106b6:	f9be 10b2 	ldrsh.w	r1, [lr, #178]	@ 0xb2
 80106ba:	4562      	cmp	r2, ip
 80106bc:	bfb8      	it	lt
 80106be:	4662      	movlt	r2, ip
 80106c0:	4288      	cmp	r0, r1
 80106c2:	bfb8      	it	lt
 80106c4:	4698      	movlt	r8, r3
 80106c6:	e082      	b.n	80107ce <_ZN8touchgfx11Application15drawCachedAreasEv+0x6b2>
 80106c8:	428a      	cmp	r2, r1
 80106ca:	bfb8      	it	lt
 80106cc:	460a      	movlt	r2, r1
 80106ce:	e07e      	b.n	80107ce <_ZN8touchgfx11Application15drawCachedAreasEv+0x6b2>
 80106d0:	20014040 	.word	0x20014040
 80106d4:	20000194 	.word	0x20000194
 80106d8:	20014038 	.word	0x20014038
 80106dc:	20014036 	.word	0x20014036
 80106e0:	2001403a 	.word	0x2001403a
 80106e4:	20014044 	.word	0x20014044
 80106e8:	19e1      	adds	r1, r4, r7
 80106ea:	ab0d      	add	r3, sp, #52	@ 0x34
 80106ec:	f851 0fac 	ldr.w	r0, [r1, #172]!
 80106f0:	6849      	ldr	r1, [r1, #4]
 80106f2:	c303      	stmia	r3!, {r0, r1}
 80106f4:	f9bd 3038 	ldrsh.w	r3, [sp, #56]	@ 0x38
 80106f8:	f8bd 1034 	ldrh.w	r1, [sp, #52]	@ 0x34
 80106fc:	454b      	cmp	r3, r9
 80106fe:	bfb8      	it	lt
 8010700:	f9bd 2034 	ldrshlt.w	r2, [sp, #52]	@ 0x34
 8010704:	f8ad 2034 	strh.w	r2, [sp, #52]	@ 0x34
 8010708:	440b      	add	r3, r1
 801070a:	1a9b      	subs	r3, r3, r2
 801070c:	a80d      	add	r0, sp, #52	@ 0x34
 801070e:	f8ad 3038 	strh.w	r3, [sp, #56]	@ 0x38
 8010712:	f7fe fecd 	bl	800f4b0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8010716:	a80d      	add	r0, sp, #52	@ 0x34
 8010718:	f7f9 ff19 	bl	800a54e <_ZNK8touchgfx4Rect7isEmptyEv>
 801071c:	bb70      	cbnz	r0, 801077c <_ZN8touchgfx11Application15drawCachedAreasEv+0x660>
 801071e:	f9bd c03a 	ldrsh.w	ip, [sp, #58]	@ 0x3a
 8010722:	6828      	ldr	r0, [r5, #0]
 8010724:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
 8010728:	f8d0 e000 	ldr.w	lr, [r0]
 801072c:	f8bd 2036 	ldrh.w	r2, [sp, #54]	@ 0x36
 8010730:	f8bd 1034 	ldrh.w	r1, [sp, #52]	@ 0x34
 8010734:	45cc      	cmp	ip, r9
 8010736:	bfd4      	ite	le
 8010738:	fa1f fc8c 	uxthle.w	ip, ip
 801073c:	fa1f fc89 	uxthgt.w	ip, r9
 8010740:	f8cd c000 	str.w	ip, [sp]
 8010744:	f8de b094 	ldr.w	fp, [lr, #148]	@ 0x94
 8010748:	47d8      	blx	fp
 801074a:	4683      	mov	fp, r0
 801074c:	f8ad 003a 	strh.w	r0, [sp, #58]	@ 0x3a
 8010750:	a80d      	add	r0, sp, #52	@ 0x34
 8010752:	f7fe fe93 	bl	800f47c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 8010756:	6823      	ldr	r3, [r4, #0]
 8010758:	4427      	add	r7, r4
 801075a:	4620      	mov	r0, r4
 801075c:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 801075e:	a90d      	add	r1, sp, #52	@ 0x34
 8010760:	4798      	blx	r3
 8010762:	f8b7 00b0 	ldrh.w	r0, [r7, #176]	@ 0xb0
 8010766:	eba0 000b 	sub.w	r0, r0, fp
 801076a:	b200      	sxth	r0, r0
 801076c:	f8a7 00b0 	strh.w	r0, [r7, #176]	@ 0xb0
 8010770:	b920      	cbnz	r0, 801077c <_ZN8touchgfx11Application15drawCachedAreasEv+0x660>
 8010772:	fa1f f188 	uxth.w	r1, r8
 8010776:	4650      	mov	r0, sl
 8010778:	f7ff f93e 	bl	800f9f8 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 801077c:	f8b4 b0ec 	ldrh.w	fp, [r4, #236]	@ 0xec
 8010780:	f1bb 0f00 	cmp.w	fp, #0
 8010784:	f43f ae58 	beq.w	8010438 <_ZN8touchgfx11Application15drawCachedAreasEv+0x31c>
 8010788:	8833      	ldrh	r3, [r6, #0]
 801078a:	f9b4 20ac 	ldrsh.w	r2, [r4, #172]	@ 0xac
 801078e:	3301      	adds	r3, #1
 8010790:	b29b      	uxth	r3, r3
 8010792:	f04f 0800 	mov.w	r8, #0
 8010796:	b299      	uxth	r1, r3
 8010798:	458b      	cmp	fp, r1
 801079a:	ea4f 07c8 	mov.w	r7, r8, lsl #3
 801079e:	d9a3      	bls.n	80106e8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5cc>
 80107a0:	4427      	add	r7, r4
 80107a2:	eb04 0ec3 	add.w	lr, r4, r3, lsl #3
 80107a6:	f8b7 10b0 	ldrh.w	r1, [r7, #176]	@ 0xb0
 80107aa:	f8b7 00ac 	ldrh.w	r0, [r7, #172]	@ 0xac
 80107ae:	f9be c0ac 	ldrsh.w	ip, [lr, #172]	@ 0xac
 80107b2:	4408      	add	r0, r1
 80107b4:	f8be 10b0 	ldrh.w	r1, [lr, #176]	@ 0xb0
 80107b8:	4461      	add	r1, ip
 80107ba:	b200      	sxth	r0, r0
 80107bc:	b209      	sxth	r1, r1
 80107be:	4288      	cmp	r0, r1
 80107c0:	f6bf af76 	bge.w	80106b0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x594>
 80107c4:	4584      	cmp	ip, r0
 80107c6:	4662      	mov	r2, ip
 80107c8:	4698      	mov	r8, r3
 80107ca:	bfb8      	it	lt
 80107cc:	4602      	movlt	r2, r0
 80107ce:	3301      	adds	r3, #1
 80107d0:	e7e1      	b.n	8010796 <_ZN8touchgfx11Application15drawCachedAreasEv+0x67a>
 80107d2:	d10e      	bne.n	80107f2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x6d6>
 80107d4:	f9be 00b0 	ldrsh.w	r0, [lr, #176]	@ 0xb0
 80107d8:	f8be e0b2 	ldrh.w	lr, [lr, #178]	@ 0xb2
 80107dc:	f9b7 70b0 	ldrsh.w	r7, [r7, #176]	@ 0xb0
 80107e0:	4473      	add	r3, lr
 80107e2:	b21b      	sxth	r3, r3
 80107e4:	429d      	cmp	r5, r3
 80107e6:	bfa8      	it	ge
 80107e8:	461d      	movge	r5, r3
 80107ea:	4287      	cmp	r7, r0
 80107ec:	bfb8      	it	lt
 80107ee:	46e0      	movlt	r8, ip
 80107f0:	e75b      	b.n	80106aa <_ZN8touchgfx11Application15drawCachedAreasEv+0x58e>
 80107f2:	4285      	cmp	r5, r0
 80107f4:	bfa8      	it	ge
 80107f6:	4605      	movge	r5, r0
 80107f8:	e757      	b.n	80106aa <_ZN8touchgfx11Application15drawCachedAreasEv+0x58e>
 80107fa:	eb0a 0007 	add.w	r0, sl, r7
 80107fe:	4427      	add	r7, r4
 8010800:	e9cd 2102 	strd	r2, r1, [sp, #8]
 8010804:	f9b7 b0b2 	ldrsh.w	fp, [r7, #178]	@ 0xb2
 8010808:	45cb      	cmp	fp, r9
 801080a:	bfbe      	ittt	lt
 801080c:	f8b7 50ae 	ldrhlt.w	r5, [r7, #174]	@ 0xae
 8010810:	445d      	addlt	r5, fp
 8010812:	b22d      	sxthlt	r5, r5
 8010814:	f7f9 fe9b 	bl	800a54e <_ZNK8touchgfx4Rect7isEmptyEv>
 8010818:	e9dd 2102 	ldrd	r2, r1, [sp, #8]
 801081c:	2800      	cmp	r0, #0
 801081e:	f47f af1f 	bne.w	8010660 <_ZN8touchgfx11Application15drawCachedAreasEv+0x544>
 8010822:	f9b7 20ae 	ldrsh.w	r2, [r7, #174]	@ 0xae
 8010826:	f8ad 003a 	strh.w	r0, [sp, #58]	@ 0x3a
 801082a:	482b      	ldr	r0, [pc, #172]	@ (80108d8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x7bc>)
 801082c:	f9b7 10ac 	ldrsh.w	r1, [r7, #172]	@ 0xac
 8010830:	f9b7 30b0 	ldrsh.w	r3, [r7, #176]	@ 0xb0
 8010834:	6800      	ldr	r0, [r0, #0]
 8010836:	f8ad 1034 	strh.w	r1, [sp, #52]	@ 0x34
 801083a:	1aad      	subs	r5, r5, r2
 801083c:	454d      	cmp	r5, r9
 801083e:	f8ad 2036 	strh.w	r2, [sp, #54]	@ 0x36
 8010842:	f8ad 3038 	strh.w	r3, [sp, #56]	@ 0x38
 8010846:	bfa8      	it	ge
 8010848:	464d      	movge	r5, r9
 801084a:	f8d0 c000 	ldr.w	ip, [r0]
 801084e:	b2ad      	uxth	r5, r5
 8010850:	fa1f fb8b 	uxth.w	fp, fp
 8010854:	455d      	cmp	r5, fp
 8010856:	bf94      	ite	ls
 8010858:	9500      	strls	r5, [sp, #0]
 801085a:	f8cd b000 	strhi.w	fp, [sp]
 801085e:	b292      	uxth	r2, r2
 8010860:	f8dc 5094 	ldr.w	r5, [ip, #148]	@ 0x94
 8010864:	b29b      	uxth	r3, r3
 8010866:	b289      	uxth	r1, r1
 8010868:	47a8      	blx	r5
 801086a:	6823      	ldr	r3, [r4, #0]
 801086c:	f8ad 003a 	strh.w	r0, [sp, #58]	@ 0x3a
 8010870:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8010872:	a90d      	add	r1, sp, #52	@ 0x34
 8010874:	4620      	mov	r0, r4
 8010876:	4798      	blx	r3
 8010878:	f8bd 103a 	ldrh.w	r1, [sp, #58]	@ 0x3a
 801087c:	f8b7 30b2 	ldrh.w	r3, [r7, #178]	@ 0xb2
 8010880:	f8b7 20ae 	ldrh.w	r2, [r7, #174]	@ 0xae
 8010884:	1a5b      	subs	r3, r3, r1
 8010886:	440a      	add	r2, r1
 8010888:	b21b      	sxth	r3, r3
 801088a:	f8a7 20ae 	strh.w	r2, [r7, #174]	@ 0xae
 801088e:	f8a7 30b2 	strh.w	r3, [r7, #178]	@ 0xb2
 8010892:	2b00      	cmp	r3, #0
 8010894:	f47f aedf 	bne.w	8010656 <_ZN8touchgfx11Application15drawCachedAreasEv+0x53a>
 8010898:	fa1f f188 	uxth.w	r1, r8
 801089c:	4650      	mov	r0, sl
 801089e:	f7ff f8ab 	bl	800f9f8 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 80108a2:	e6d8      	b.n	8010656 <_ZN8touchgfx11Application15drawCachedAreasEv+0x53a>
 80108a4:	8835      	ldrh	r5, [r6, #0]
 80108a6:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	@ 0xec
 80108aa:	42ab      	cmp	r3, r5
 80108ac:	f67f adc4 	bls.w	8010438 <_ZN8touchgfx11Application15drawCachedAreasEv+0x31c>
 80108b0:	eb04 02c5 	add.w	r2, r4, r5, lsl #3
 80108b4:	ab0d      	add	r3, sp, #52	@ 0x34
 80108b6:	f852 0fac 	ldr.w	r0, [r2, #172]!
 80108ba:	6851      	ldr	r1, [r2, #4]
 80108bc:	c303      	stmia	r3!, {r0, r1}
 80108be:	a80d      	add	r0, sp, #52	@ 0x34
 80108c0:	f7f9 fe45 	bl	800a54e <_ZNK8touchgfx4Rect7isEmptyEv>
 80108c4:	b920      	cbnz	r0, 80108d0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x7b4>
 80108c6:	6823      	ldr	r3, [r4, #0]
 80108c8:	a90d      	add	r1, sp, #52	@ 0x34
 80108ca:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 80108cc:	4620      	mov	r0, r4
 80108ce:	4798      	blx	r3
 80108d0:	3501      	adds	r5, #1
 80108d2:	b2ad      	uxth	r5, r5
 80108d4:	e7e7      	b.n	80108a6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x78a>
 80108d6:	bf00      	nop
 80108d8:	20014044 	.word	0x20014044

080108dc <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE>:
 80108dc:	4b03      	ldr	r3, [pc, #12]	@ (80108ec <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE+0x10>)
 80108de:	2200      	movs	r2, #0
 80108e0:	801a      	strh	r2, [r3, #0]
 80108e2:	805a      	strh	r2, [r3, #2]
 80108e4:	809a      	strh	r2, [r3, #4]
 80108e6:	80da      	strh	r2, [r3, #6]
 80108e8:	4770      	bx	lr
 80108ea:	bf00      	nop
 80108ec:	20014090 	.word	0x20014090

080108f0 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>:
 80108f0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80108f4:	4606      	mov	r6, r0
 80108f6:	b09d      	sub	sp, #116	@ 0x74
 80108f8:	a803      	add	r0, sp, #12
 80108fa:	4614      	mov	r4, r2
 80108fc:	468a      	mov	sl, r1
 80108fe:	461d      	mov	r5, r3
 8010900:	f001 f9b0 	bl	8011c64 <_ZN8touchgfx12TextProviderC1Ev>
 8010904:	6833      	ldr	r3, [r6, #0]
 8010906:	4630      	mov	r0, r6
 8010908:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 801090a:	4798      	blx	r3
 801090c:	6833      	ldr	r3, [r6, #0]
 801090e:	4607      	mov	r7, r0
 8010910:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8010912:	4630      	mov	r0, r6
 8010914:	4798      	blx	r3
 8010916:	462a      	mov	r2, r5
 8010918:	9000      	str	r0, [sp, #0]
 801091a:	4621      	mov	r1, r4
 801091c:	463b      	mov	r3, r7
 801091e:	a803      	add	r0, sp, #12
 8010920:	f001 f9f3 	bl	8011d0a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8010924:	2500      	movs	r5, #0
 8010926:	462c      	mov	r4, r5
 8010928:	46a9      	mov	r9, r5
 801092a:	46a8      	mov	r8, r5
 801092c:	f242 0b0b 	movw	fp, #8203	@ 0x200b
 8010930:	2300      	movs	r3, #0
 8010932:	9302      	str	r3, [sp, #8]
 8010934:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
 8010938:	429c      	cmp	r4, r3
 801093a:	d002      	beq.n	8010942 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x52>
 801093c:	455c      	cmp	r4, fp
 801093e:	bf18      	it	ne
 8010940:	4625      	movne	r5, r4
 8010942:	ab02      	add	r3, sp, #8
 8010944:	4632      	mov	r2, r6
 8010946:	4651      	mov	r1, sl
 8010948:	a803      	add	r0, sp, #12
 801094a:	f001 fcf9 	bl	8012340 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 801094e:	4604      	mov	r4, r0
 8010950:	b108      	cbz	r0, 8010956 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x66>
 8010952:	280a      	cmp	r0, #10
 8010954:	d10a      	bne.n	801096c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x7c>
 8010956:	45c1      	cmp	r9, r8
 8010958:	bf38      	it	cc
 801095a:	46c1      	movcc	r9, r8
 801095c:	f04f 0800 	mov.w	r8, #0
 8010960:	2c00      	cmp	r4, #0
 8010962:	d1e5      	bne.n	8010930 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 8010964:	4648      	mov	r0, r9
 8010966:	b01d      	add	sp, #116	@ 0x74
 8010968:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801096c:	9a02      	ldr	r2, [sp, #8]
 801096e:	2a00      	cmp	r2, #0
 8010970:	d0de      	beq.n	8010930 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 8010972:	7b57      	ldrb	r7, [r2, #13]
 8010974:	6833      	ldr	r3, [r6, #0]
 8010976:	8894      	ldrh	r4, [r2, #4]
 8010978:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 801097a:	007f      	lsls	r7, r7, #1
 801097c:	f407 7080 	and.w	r0, r7, #256	@ 0x100
 8010980:	7a97      	ldrb	r7, [r2, #10]
 8010982:	4629      	mov	r1, r5
 8010984:	4307      	orrs	r7, r0
 8010986:	4630      	mov	r0, r6
 8010988:	4798      	blx	r3
 801098a:	4438      	add	r0, r7
 801098c:	4480      	add	r8, r0
 801098e:	fa1f f888 	uxth.w	r8, r8
 8010992:	e7e5      	b.n	8010960 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x70>

08010994 <_ZNK8touchgfx4Font12getCharWidthEt>:
 8010994:	b508      	push	{r3, lr}
 8010996:	6803      	ldr	r3, [r0, #0]
 8010998:	68db      	ldr	r3, [r3, #12]
 801099a:	4798      	blx	r3
 801099c:	b128      	cbz	r0, 80109aa <_ZNK8touchgfx4Font12getCharWidthEt+0x16>
 801099e:	7b43      	ldrb	r3, [r0, #13]
 80109a0:	7a80      	ldrb	r0, [r0, #10]
 80109a2:	005b      	lsls	r3, r3, #1
 80109a4:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 80109a8:	4318      	orrs	r0, r3
 80109aa:	bd08      	pop	{r3, pc}

080109ac <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz>:
 80109ac:	b40e      	push	{r1, r2, r3}
 80109ae:	b5f0      	push	{r4, r5, r6, r7, lr}
 80109b0:	b09e      	sub	sp, #120	@ 0x78
 80109b2:	ab23      	add	r3, sp, #140	@ 0x8c
 80109b4:	4605      	mov	r5, r0
 80109b6:	f853 4b04 	ldr.w	r4, [r3], #4
 80109ba:	9303      	str	r3, [sp, #12]
 80109bc:	a805      	add	r0, sp, #20
 80109be:	f001 f951 	bl	8011c64 <_ZN8touchgfx12TextProviderC1Ev>
 80109c2:	682b      	ldr	r3, [r5, #0]
 80109c4:	4628      	mov	r0, r5
 80109c6:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80109c8:	4798      	blx	r3
 80109ca:	682b      	ldr	r3, [r5, #0]
 80109cc:	4606      	mov	r6, r0
 80109ce:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 80109d0:	4628      	mov	r0, r5
 80109d2:	4798      	blx	r3
 80109d4:	4633      	mov	r3, r6
 80109d6:	ae1e      	add	r6, sp, #120	@ 0x78
 80109d8:	4621      	mov	r1, r4
 80109da:	9000      	str	r0, [sp, #0]
 80109dc:	9a03      	ldr	r2, [sp, #12]
 80109de:	2400      	movs	r4, #0
 80109e0:	a805      	add	r0, sp, #20
 80109e2:	f001 f992 	bl	8011d0a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 80109e6:	f846 4d68 	str.w	r4, [r6, #-104]!
 80109ea:	462a      	mov	r2, r5
 80109ec:	4633      	mov	r3, r6
 80109ee:	4621      	mov	r1, r4
 80109f0:	a805      	add	r0, sp, #20
 80109f2:	f001 fca5 	bl	8012340 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 80109f6:	b1f0      	cbz	r0, 8010a36 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x8a>
 80109f8:	280a      	cmp	r0, #10
 80109fa:	d018      	beq.n	8010a2e <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 80109fc:	9f04      	ldr	r7, [sp, #16]
 80109fe:	b1b7      	cbz	r7, 8010a2e <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 8010a00:	7b78      	ldrb	r0, [r7, #13]
 8010a02:	7a3b      	ldrb	r3, [r7, #8]
 8010a04:	88ea      	ldrh	r2, [r5, #6]
 8010a06:	00c1      	lsls	r1, r0, #3
 8010a08:	f401 7180 	and.w	r1, r1, #256	@ 0x100
 8010a0c:	4319      	orrs	r1, r3
 8010a0e:	0643      	lsls	r3, r0, #25
 8010a10:	bf44      	itt	mi
 8010a12:	f5a1 7300 	submi.w	r3, r1, #512	@ 0x200
 8010a16:	b219      	sxthmi	r1, r3
 8010a18:	0100      	lsls	r0, r0, #4
 8010a1a:	79fb      	ldrb	r3, [r7, #7]
 8010a1c:	f400 7080 	and.w	r0, r0, #256	@ 0x100
 8010a20:	4303      	orrs	r3, r0
 8010a22:	4413      	add	r3, r2
 8010a24:	1a5b      	subs	r3, r3, r1
 8010a26:	b21b      	sxth	r3, r3
 8010a28:	429c      	cmp	r4, r3
 8010a2a:	bfb8      	it	lt
 8010a2c:	461c      	movlt	r4, r3
 8010a2e:	4633      	mov	r3, r6
 8010a30:	462a      	mov	r2, r5
 8010a32:	2100      	movs	r1, #0
 8010a34:	e7dc      	b.n	80109f0 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x44>
 8010a36:	b2a0      	uxth	r0, r4
 8010a38:	b01e      	add	sp, #120	@ 0x78
 8010a3a:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 8010a3e:	b003      	add	sp, #12
 8010a40:	4770      	bx	lr

08010a42 <_ZNK8touchgfx4Font20getMinimumTextHeightEv>:
 8010a42:	7a43      	ldrb	r3, [r0, #9]
 8010a44:	8880      	ldrh	r0, [r0, #4]
 8010a46:	4418      	add	r0, r3
 8010a48:	b280      	uxth	r0, r0
 8010a4a:	4770      	bx	lr

08010a4c <_ZNK8touchgfx4Font13getFontHeightEv>:
 8010a4c:	6803      	ldr	r3, [r0, #0]
 8010a4e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8010a50:	4718      	bx	r3

08010a52 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz>:
 8010a52:	b40e      	push	{r1, r2, r3}
 8010a54:	b570      	push	{r4, r5, r6, lr}
 8010a56:	b09d      	sub	sp, #116	@ 0x74
 8010a58:	ab21      	add	r3, sp, #132	@ 0x84
 8010a5a:	4604      	mov	r4, r0
 8010a5c:	f853 5b04 	ldr.w	r5, [r3], #4
 8010a60:	9302      	str	r3, [sp, #8]
 8010a62:	a803      	add	r0, sp, #12
 8010a64:	f001 f8fe 	bl	8011c64 <_ZN8touchgfx12TextProviderC1Ev>
 8010a68:	6823      	ldr	r3, [r4, #0]
 8010a6a:	4620      	mov	r0, r4
 8010a6c:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8010a6e:	4798      	blx	r3
 8010a70:	6823      	ldr	r3, [r4, #0]
 8010a72:	4606      	mov	r6, r0
 8010a74:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8010a76:	4620      	mov	r0, r4
 8010a78:	4798      	blx	r3
 8010a7a:	4633      	mov	r3, r6
 8010a7c:	9000      	str	r0, [sp, #0]
 8010a7e:	9a02      	ldr	r2, [sp, #8]
 8010a80:	4629      	mov	r1, r5
 8010a82:	a803      	add	r0, sp, #12
 8010a84:	f001 f941 	bl	8011d0a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8010a88:	a803      	add	r0, sp, #12
 8010a8a:	f001 fcdb 	bl	8012444 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8010a8e:	2401      	movs	r4, #1
 8010a90:	b2a3      	uxth	r3, r4
 8010a92:	b140      	cbz	r0, 8010aa6 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x54>
 8010a94:	280a      	cmp	r0, #10
 8010a96:	bf08      	it	eq
 8010a98:	3301      	addeq	r3, #1
 8010a9a:	a803      	add	r0, sp, #12
 8010a9c:	bf08      	it	eq
 8010a9e:	b21c      	sxtheq	r4, r3
 8010aa0:	f001 fcd0 	bl	8012444 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8010aa4:	e7f4      	b.n	8010a90 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x3e>
 8010aa6:	4618      	mov	r0, r3
 8010aa8:	b01d      	add	sp, #116	@ 0x74
 8010aaa:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010aae:	b003      	add	sp, #12
 8010ab0:	4770      	bx	lr

08010ab2 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz>:
 8010ab2:	b40e      	push	{r1, r2, r3}
 8010ab4:	b5f0      	push	{r4, r5, r6, r7, lr}
 8010ab6:	b09e      	sub	sp, #120	@ 0x78
 8010ab8:	ab23      	add	r3, sp, #140	@ 0x8c
 8010aba:	4604      	mov	r4, r0
 8010abc:	f853 5b04 	ldr.w	r5, [r3], #4
 8010ac0:	9303      	str	r3, [sp, #12]
 8010ac2:	a805      	add	r0, sp, #20
 8010ac4:	f001 f8ce 	bl	8011c64 <_ZN8touchgfx12TextProviderC1Ev>
 8010ac8:	6823      	ldr	r3, [r4, #0]
 8010aca:	4620      	mov	r0, r4
 8010acc:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8010ace:	4798      	blx	r3
 8010ad0:	6823      	ldr	r3, [r4, #0]
 8010ad2:	4606      	mov	r6, r0
 8010ad4:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8010ad6:	4620      	mov	r0, r4
 8010ad8:	4798      	blx	r3
 8010ada:	4633      	mov	r3, r6
 8010adc:	4629      	mov	r1, r5
 8010ade:	9000      	str	r0, [sp, #0]
 8010ae0:	9a03      	ldr	r2, [sp, #12]
 8010ae2:	a805      	add	r0, sp, #20
 8010ae4:	ad1e      	add	r5, sp, #120	@ 0x78
 8010ae6:	f001 f910 	bl	8011d0a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8010aea:	2100      	movs	r1, #0
 8010aec:	f845 1d68 	str.w	r1, [r5, #-104]!
 8010af0:	4622      	mov	r2, r4
 8010af2:	462b      	mov	r3, r5
 8010af4:	a805      	add	r0, sp, #20
 8010af6:	f001 fc23 	bl	8012340 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8010afa:	f647 76ff 	movw	r6, #32767	@ 0x7fff
 8010afe:	b1d8      	cbz	r0, 8010b38 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x86>
 8010b00:	280a      	cmp	r0, #10
 8010b02:	d012      	beq.n	8010b2a <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 8010b04:	9804      	ldr	r0, [sp, #16]
 8010b06:	b180      	cbz	r0, 8010b2a <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 8010b08:	7b47      	ldrb	r7, [r0, #13]
 8010b0a:	88e2      	ldrh	r2, [r4, #6]
 8010b0c:	00fb      	lsls	r3, r7, #3
 8010b0e:	f403 7180 	and.w	r1, r3, #256	@ 0x100
 8010b12:	7a03      	ldrb	r3, [r0, #8]
 8010b14:	430b      	orrs	r3, r1
 8010b16:	0679      	lsls	r1, r7, #25
 8010b18:	bf44      	itt	mi
 8010b1a:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 8010b1e:	b21b      	sxthmi	r3, r3
 8010b20:	1ad3      	subs	r3, r2, r3
 8010b22:	b21b      	sxth	r3, r3
 8010b24:	429e      	cmp	r6, r3
 8010b26:	bfa8      	it	ge
 8010b28:	461e      	movge	r6, r3
 8010b2a:	462b      	mov	r3, r5
 8010b2c:	4622      	mov	r2, r4
 8010b2e:	2100      	movs	r1, #0
 8010b30:	a805      	add	r0, sp, #20
 8010b32:	f001 fc05 	bl	8012340 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8010b36:	e7e2      	b.n	8010afe <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x4c>
 8010b38:	4630      	mov	r0, r6
 8010b3a:	b01e      	add	sp, #120	@ 0x78
 8010b3c:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 8010b40:	b003      	add	sp, #12
 8010b42:	4770      	bx	lr

08010b44 <_ZNK8touchgfx8Drawable10invalidateEv>:
 8010b44:	b513      	push	{r0, r1, r4, lr}
 8010b46:	6803      	ldr	r3, [r0, #0]
 8010b48:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 8010b4c:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8010b50:	f8ad 1004 	strh.w	r1, [sp, #4]
 8010b54:	2400      	movs	r4, #0
 8010b56:	9400      	str	r4, [sp, #0]
 8010b58:	f8ad 2006 	strh.w	r2, [sp, #6]
 8010b5c:	691b      	ldr	r3, [r3, #16]
 8010b5e:	4669      	mov	r1, sp
 8010b60:	4798      	blx	r3
 8010b62:	b002      	add	sp, #8
 8010b64:	bd10      	pop	{r4, pc}

08010b66 <_ZN8touchgfx8Drawable20getSolidRectAbsoluteEv>:
 8010b66:	b538      	push	{r3, r4, r5, lr}
 8010b68:	680b      	ldr	r3, [r1, #0]
 8010b6a:	460c      	mov	r4, r1
 8010b6c:	68db      	ldr	r3, [r3, #12]
 8010b6e:	4605      	mov	r5, r0
 8010b70:	4798      	blx	r3
 8010b72:	6823      	ldr	r3, [r4, #0]
 8010b74:	4620      	mov	r0, r4
 8010b76:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8010b78:	4629      	mov	r1, r5
 8010b7a:	4798      	blx	r3
 8010b7c:	4628      	mov	r0, r5
 8010b7e:	bd38      	pop	{r3, r4, r5, pc}

08010b80 <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE>:
 8010b80:	b410      	push	{r4}
 8010b82:	880a      	ldrh	r2, [r1, #0]
 8010b84:	8884      	ldrh	r4, [r0, #4]
 8010b86:	4422      	add	r2, r4
 8010b88:	800a      	strh	r2, [r1, #0]
 8010b8a:	88c4      	ldrh	r4, [r0, #6]
 8010b8c:	884a      	ldrh	r2, [r1, #2]
 8010b8e:	4422      	add	r2, r4
 8010b90:	804a      	strh	r2, [r1, #2]
 8010b92:	6940      	ldr	r0, [r0, #20]
 8010b94:	b120      	cbz	r0, 8010ba0 <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE+0x20>
 8010b96:	6803      	ldr	r3, [r0, #0]
 8010b98:	f85d 4b04 	ldr.w	r4, [sp], #4
 8010b9c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8010b9e:	4718      	bx	r3
 8010ba0:	f85d 4b04 	ldr.w	r4, [sp], #4
 8010ba4:	4770      	bx	lr

08010ba6 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE>:
 8010ba6:	b570      	push	{r4, r5, r6, lr}
 8010ba8:	8882      	ldrh	r2, [r0, #4]
 8010baa:	880b      	ldrh	r3, [r1, #0]
 8010bac:	4413      	add	r3, r2
 8010bae:	800b      	strh	r3, [r1, #0]
 8010bb0:	88c2      	ldrh	r2, [r0, #6]
 8010bb2:	884b      	ldrh	r3, [r1, #2]
 8010bb4:	460c      	mov	r4, r1
 8010bb6:	4413      	add	r3, r2
 8010bb8:	804b      	strh	r3, [r1, #2]
 8010bba:	4605      	mov	r5, r0
 8010bbc:	1d01      	adds	r1, r0, #4
 8010bbe:	4620      	mov	r0, r4
 8010bc0:	f7f9 fc82 	bl	800a4c8 <_ZN8touchgfx4RectaNERKS0_>
 8010bc4:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 8010bc8:	2b00      	cmp	r3, #0
 8010bca:	dd0b      	ble.n	8010be4 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8010bcc:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8010bd0:	2b00      	cmp	r3, #0
 8010bd2:	dd07      	ble.n	8010be4 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8010bd4:	6968      	ldr	r0, [r5, #20]
 8010bd6:	b128      	cbz	r0, 8010be4 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8010bd8:	6803      	ldr	r3, [r0, #0]
 8010bda:	4621      	mov	r1, r4
 8010bdc:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8010bde:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010be2:	4718      	bx	r3
 8010be4:	bd70      	pop	{r4, r5, r6, pc}
	...

08010be8 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE>:
 8010be8:	b570      	push	{r4, r5, r6, lr}
 8010bea:	8882      	ldrh	r2, [r0, #4]
 8010bec:	880b      	ldrh	r3, [r1, #0]
 8010bee:	4413      	add	r3, r2
 8010bf0:	800b      	strh	r3, [r1, #0]
 8010bf2:	88c2      	ldrh	r2, [r0, #6]
 8010bf4:	884b      	ldrh	r3, [r1, #2]
 8010bf6:	460c      	mov	r4, r1
 8010bf8:	4413      	add	r3, r2
 8010bfa:	804b      	strh	r3, [r1, #2]
 8010bfc:	4605      	mov	r5, r0
 8010bfe:	1d01      	adds	r1, r0, #4
 8010c00:	4620      	mov	r0, r4
 8010c02:	f7f9 fc61 	bl	800a4c8 <_ZN8touchgfx4RectaNERKS0_>
 8010c06:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 8010c0a:	2b00      	cmp	r3, #0
 8010c0c:	dd19      	ble.n	8010c42 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 8010c0e:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8010c12:	2b00      	cmp	r3, #0
 8010c14:	dd15      	ble.n	8010c42 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 8010c16:	6968      	ldr	r0, [r5, #20]
 8010c18:	b128      	cbz	r0, 8010c26 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x3e>
 8010c1a:	6803      	ldr	r3, [r0, #0]
 8010c1c:	4621      	mov	r1, r4
 8010c1e:	691b      	ldr	r3, [r3, #16]
 8010c20:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010c24:	4718      	bx	r3
 8010c26:	4b07      	ldr	r3, [pc, #28]	@ (8010c44 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5c>)
 8010c28:	681b      	ldr	r3, [r3, #0]
 8010c2a:	3304      	adds	r3, #4
 8010c2c:	429d      	cmp	r5, r3
 8010c2e:	d108      	bne.n	8010c42 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 8010c30:	f7fe fdd6 	bl	800f7e0 <_ZN8touchgfx11Application11getInstanceEv>
 8010c34:	6803      	ldr	r3, [r0, #0]
 8010c36:	6821      	ldr	r1, [r4, #0]
 8010c38:	6862      	ldr	r2, [r4, #4]
 8010c3a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8010c3c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010c40:	4718      	bx	r3
 8010c42:	bd70      	pop	{r4, r5, r6, pc}
 8010c44:	20014088 	.word	0x20014088

08010c48 <_ZN8touchgfx8Drawable12moveRelativeEss>:
 8010c48:	b570      	push	{r4, r5, r6, lr}
 8010c4a:	4604      	mov	r4, r0
 8010c4c:	4616      	mov	r6, r2
 8010c4e:	460d      	mov	r5, r1
 8010c50:	b901      	cbnz	r1, 8010c54 <_ZN8touchgfx8Drawable12moveRelativeEss+0xc>
 8010c52:	b192      	cbz	r2, 8010c7a <_ZN8touchgfx8Drawable12moveRelativeEss+0x32>
 8010c54:	6823      	ldr	r3, [r4, #0]
 8010c56:	4620      	mov	r0, r4
 8010c58:	699b      	ldr	r3, [r3, #24]
 8010c5a:	4798      	blx	r3
 8010c5c:	88e2      	ldrh	r2, [r4, #6]
 8010c5e:	88a1      	ldrh	r1, [r4, #4]
 8010c60:	4432      	add	r2, r6
 8010c62:	4429      	add	r1, r5
 8010c64:	4620      	mov	r0, r4
 8010c66:	b212      	sxth	r2, r2
 8010c68:	b209      	sxth	r1, r1
 8010c6a:	f7f2 f819 	bl	8002ca0 <_ZN8touchgfx8Drawable5setXYEss>
 8010c6e:	6823      	ldr	r3, [r4, #0]
 8010c70:	4620      	mov	r0, r4
 8010c72:	699b      	ldr	r3, [r3, #24]
 8010c74:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010c78:	4718      	bx	r3
 8010c7a:	bd70      	pop	{r4, r5, r6, pc}

08010c7c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>:
 8010c7c:	b510      	push	{r4, lr}
 8010c7e:	4604      	mov	r4, r0
 8010c80:	4608      	mov	r0, r1
 8010c82:	2300      	movs	r3, #0
 8010c84:	8023      	strh	r3, [r4, #0]
 8010c86:	8063      	strh	r3, [r4, #2]
 8010c88:	6803      	ldr	r3, [r0, #0]
 8010c8a:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8010c8e:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
 8010c92:	80a1      	strh	r1, [r4, #4]
 8010c94:	80e2      	strh	r2, [r4, #6]
 8010c96:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8010c98:	4621      	mov	r1, r4
 8010c9a:	4798      	blx	r3
 8010c9c:	4620      	mov	r0, r4
 8010c9e:	bd10      	pop	{r4, pc}

08010ca0 <_ZN8touchgfx22VectorFontRendererImplD1Ev>:
 8010ca0:	4770      	bx	lr

08010ca2 <_ZN8touchgfx22VectorFontRendererImplD0Ev>:
 8010ca2:	b510      	push	{r4, lr}
 8010ca4:	211c      	movs	r1, #28
 8010ca6:	4604      	mov	r4, r0
 8010ca8:	f011 f82f 	bl	8021d0a <_ZdlPvj>
 8010cac:	4620      	mov	r0, r4
 8010cae:	bd10      	pop	{r4, pc}

08010cb0 <_ZN8touchgfx22VectorFontRendererImplC1Ev>:
 8010cb0:	4a04      	ldr	r2, [pc, #16]	@ (8010cc4 <_ZN8touchgfx22VectorFontRendererImplC1Ev+0x14>)
 8010cb2:	6002      	str	r2, [r0, #0]
 8010cb4:	2200      	movs	r2, #0
 8010cb6:	e9c0 2201 	strd	r2, r2, [r0, #4]
 8010cba:	e9c0 2203 	strd	r2, r2, [r0, #12]
 8010cbe:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8010cc2:	4770      	bx	lr
 8010cc4:	08025178 	.word	0x08025178

08010cc8 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs>:
 8010cc8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010ccc:	4604      	mov	r4, r0
 8010cce:	b087      	sub	sp, #28
 8010cd0:	8b45      	ldrh	r5, [r0, #26]
 8010cd2:	f8b2 c000 	ldrh.w	ip, [r2]
 8010cd6:	9105      	str	r1, [sp, #20]
 8010cd8:	68e1      	ldr	r1, [r4, #12]
 8010cda:	9203      	str	r2, [sp, #12]
 8010cdc:	1c68      	adds	r0, r5, #1
 8010cde:	eb01 0185 	add.w	r1, r1, r5, lsl #2
 8010ce2:	f01c 0501 	ands.w	r5, ip, #1
 8010ce6:	f9b3 2000 	ldrsh.w	r2, [r3]
 8010cea:	9502      	str	r5, [sp, #8]
 8010cec:	b280      	uxth	r0, r0
 8010cee:	d07d      	beq.n	8010dec <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x124>
 8010cf0:	ee07 2a90 	vmov	s15, r2
 8010cf4:	eef8 6ae7 	vcvt.f32.s32	s13, s15
 8010cf8:	8360      	strh	r0, [r4, #26]
 8010cfa:	edc1 6a00 	vstr	s13, [r1]
 8010cfe:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 8010d02:	8b61      	ldrh	r1, [r4, #26]
 8010d04:	ee07 2a10 	vmov	s14, r2
 8010d08:	68e2      	ldr	r2, [r4, #12]
 8010d0a:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8010d0e:	f04f 0e00 	mov.w	lr, #0
 8010d12:	1c48      	adds	r0, r1, #1
 8010d14:	eb02 0281 	add.w	r2, r2, r1, lsl #2
 8010d18:	ee06 ea10 	vmov	s12, lr
 8010d1c:	8360      	strh	r0, [r4, #26]
 8010d1e:	ed82 7a00 	vstr	s14, [r2]
 8010d22:	8b21      	ldrh	r1, [r4, #24]
 8010d24:	68a2      	ldr	r2, [r4, #8]
 8010d26:	2501      	movs	r5, #1
 8010d28:	1c48      	adds	r0, r1, #1
 8010d2a:	8320      	strh	r0, [r4, #24]
 8010d2c:	5455      	strb	r5, [r2, r1]
 8010d2e:	2200      	movs	r2, #0
 8010d30:	3304      	adds	r3, #4
 8010d32:	ee07 2a90 	vmov	s15, r2
 8010d36:	9300      	str	r3, [sp, #0]
 8010d38:	46aa      	mov	sl, r5
 8010d3a:	4613      	mov	r3, r2
 8010d3c:	4611      	mov	r1, r2
 8010d3e:	462e      	mov	r6, r5
 8010d40:	9201      	str	r2, [sp, #4]
 8010d42:	eef6 5a00 	vmov.f32	s11, #96	@ 0x3f000000  0.5
 8010d46:	f8b4 8018 	ldrh.w	r8, [r4, #24]
 8010d4a:	9805      	ldr	r0, [sp, #20]
 8010d4c:	f8d4 b008 	ldr.w	fp, [r4, #8]
 8010d50:	f108 0701 	add.w	r7, r8, #1
 8010d54:	42a8      	cmp	r0, r5
 8010d56:	b2bf      	uxth	r7, r7
 8010d58:	eb0b 0908 	add.w	r9, fp, r8
 8010d5c:	f340 80db 	ble.w	8010f16 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x24e>
 8010d60:	fa4c f906 	asr.w	r9, ip, r6
 8010d64:	f009 0901 	and.w	r9, r9, #1
 8010d68:	fa5f f389 	uxtb.w	r3, r9
 8010d6c:	9304      	str	r3, [sp, #16]
 8010d6e:	9b00      	ldr	r3, [sp, #0]
 8010d70:	f9b3 1000 	ldrsh.w	r1, [r3]
 8010d74:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8010d78:	f1b9 0f00 	cmp.w	r9, #0
 8010d7c:	d07d      	beq.n	8010e7a <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x1b2>
 8010d7e:	ee05 1a10 	vmov	s10, r1
 8010d82:	eef8 4ac5 	vcvt.f32.s32	s9, s10
 8010d86:	ee05 3a10 	vmov	s10, r3
 8010d8a:	8327      	strh	r7, [r4, #24]
 8010d8c:	eeb8 5ac5 	vcvt.f32.s32	s10, s10
 8010d90:	f1ba 0f00 	cmp.w	sl, #0
 8010d94:	d050      	beq.n	8010e38 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x170>
 8010d96:	f04f 0002 	mov.w	r0, #2
 8010d9a:	f80b 0008 	strb.w	r0, [fp, r8]
 8010d9e:	f8b4 801a 	ldrh.w	r8, [r4, #26]
 8010da2:	68e7      	ldr	r7, [r4, #12]
 8010da4:	f108 0901 	add.w	r9, r8, #1
 8010da8:	eb07 0788 	add.w	r7, r7, r8, lsl #2
 8010dac:	f8a4 901a 	strh.w	r9, [r4, #26]
 8010db0:	edc7 4a00 	vstr	s9, [r7]
 8010db4:	f8b4 801a 	ldrh.w	r8, [r4, #26]
 8010db8:	68e7      	ldr	r7, [r4, #12]
 8010dba:	f108 0901 	add.w	r9, r8, #1
 8010dbe:	eb07 0788 	add.w	r7, r7, r8, lsl #2
 8010dc2:	f8a4 901a 	strh.w	r9, [r4, #26]
 8010dc6:	ed87 5a00 	vstr	s10, [r7]
 8010dca:	3601      	adds	r6, #1
 8010dcc:	2e10      	cmp	r6, #16
 8010dce:	d106      	bne.n	8010dde <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x116>
 8010dd0:	9e01      	ldr	r6, [sp, #4]
 8010dd2:	9803      	ldr	r0, [sp, #12]
 8010dd4:	3601      	adds	r6, #1
 8010dd6:	9601      	str	r6, [sp, #4]
 8010dd8:	f830 c016 	ldrh.w	ip, [r0, r6, lsl #1]
 8010ddc:	2600      	movs	r6, #0
 8010dde:	9800      	ldr	r0, [sp, #0]
 8010de0:	f8dd a010 	ldr.w	sl, [sp, #16]
 8010de4:	3004      	adds	r0, #4
 8010de6:	3501      	adds	r5, #1
 8010de8:	9000      	str	r0, [sp, #0]
 8010dea:	e7ac      	b.n	8010d46 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x7e>
 8010dec:	ee06 2a10 	vmov	s12, r2
 8010df0:	f9b3 2004 	ldrsh.w	r2, [r3, #4]
 8010df4:	f9b3 e002 	ldrsh.w	lr, [r3, #2]
 8010df8:	ee16 5a10 	vmov	r5, s12
 8010dfc:	442a      	add	r2, r5
 8010dfe:	ee06 2a90 	vmov	s13, r2
 8010e02:	f9b3 2006 	ldrsh.w	r2, [r3, #6]
 8010e06:	8360      	strh	r0, [r4, #26]
 8010e08:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8010e0c:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 8010e10:	4472      	add	r2, lr
 8010e12:	ee07 2a10 	vmov	s14, r2
 8010e16:	ee66 6aa7 	vmul.f32	s13, s13, s15
 8010e1a:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8010e1e:	edc1 6a00 	vstr	s13, [r1]
 8010e22:	8b61      	ldrh	r1, [r4, #26]
 8010e24:	68e2      	ldr	r2, [r4, #12]
 8010e26:	ee27 7a27 	vmul.f32	s14, s14, s15
 8010e2a:	1c48      	adds	r0, r1, #1
 8010e2c:	eb02 0281 	add.w	r2, r2, r1, lsl #2
 8010e30:	8360      	strh	r0, [r4, #26]
 8010e32:	ed82 7a00 	vstr	s14, [r2]
 8010e36:	e774      	b.n	8010d22 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x5a>
 8010e38:	f04f 0005 	mov.w	r0, #5
 8010e3c:	f80b 0008 	strb.w	r0, [fp, r8]
 8010e40:	f8b4 801a 	ldrh.w	r8, [r4, #26]
 8010e44:	68e7      	ldr	r7, [r4, #12]
 8010e46:	eeb8 4ae7 	vcvt.f32.s32	s8, s15
 8010e4a:	f108 0901 	add.w	r9, r8, #1
 8010e4e:	eb07 0788 	add.w	r7, r7, r8, lsl #2
 8010e52:	f8a4 901a 	strh.w	r9, [r4, #26]
 8010e56:	ed87 4a00 	vstr	s8, [r7]
 8010e5a:	ee04 2a10 	vmov	s8, r2
 8010e5e:	f8b4 801a 	ldrh.w	r8, [r4, #26]
 8010e62:	68e7      	ldr	r7, [r4, #12]
 8010e64:	eeb8 4ac4 	vcvt.f32.s32	s8, s8
 8010e68:	f108 0901 	add.w	r9, r8, #1
 8010e6c:	eb07 0788 	add.w	r7, r7, r8, lsl #2
 8010e70:	f8a4 901a 	strh.w	r9, [r4, #26]
 8010e74:	ed87 4a00 	vstr	s8, [r7]
 8010e78:	e791      	b.n	8010d9e <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0xd6>
 8010e7a:	f1ba 0f00 	cmp.w	sl, #0
 8010e7e:	d146      	bne.n	8010f0e <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x246>
 8010e80:	f04f 0005 	mov.w	r0, #5
 8010e84:	8327      	strh	r7, [r4, #24]
 8010e86:	f80b 0008 	strb.w	r0, [fp, r8]
 8010e8a:	f8b4 801a 	ldrh.w	r8, [r4, #26]
 8010e8e:	68e7      	ldr	r7, [r4, #12]
 8010e90:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
 8010e94:	f108 0901 	add.w	r9, r8, #1
 8010e98:	eb07 0788 	add.w	r7, r7, r8, lsl #2
 8010e9c:	ee17 0a90 	vmov	r0, s15
 8010ea0:	f8a4 901a 	strh.w	r9, [r4, #26]
 8010ea4:	ed87 5a00 	vstr	s10, [r7]
 8010ea8:	ee05 2a10 	vmov	s10, r2
 8010eac:	f8b4 801a 	ldrh.w	r8, [r4, #26]
 8010eb0:	68e7      	ldr	r7, [r4, #12]
 8010eb2:	4408      	add	r0, r1
 8010eb4:	eeb8 5ac5 	vcvt.f32.s32	s10, s10
 8010eb8:	ee07 0a90 	vmov	s15, r0
 8010ebc:	f108 0901 	add.w	r9, r8, #1
 8010ec0:	eb07 0788 	add.w	r7, r7, r8, lsl #2
 8010ec4:	f8a4 901a 	strh.w	r9, [r4, #26]
 8010ec8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8010ecc:	ed87 5a00 	vstr	s10, [r7]
 8010ed0:	f8b4 801a 	ldrh.w	r8, [r4, #26]
 8010ed4:	68e7      	ldr	r7, [r4, #12]
 8010ed6:	ee67 7aa5 	vmul.f32	s15, s15, s11
 8010eda:	f108 0901 	add.w	r9, r8, #1
 8010ede:	eb07 0788 	add.w	r7, r7, r8, lsl #2
 8010ee2:	441a      	add	r2, r3
 8010ee4:	f8a4 901a 	strh.w	r9, [r4, #26]
 8010ee8:	edc7 7a00 	vstr	s15, [r7]
 8010eec:	ee07 2a90 	vmov	s15, r2
 8010ef0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8010ef4:	f8b4 801a 	ldrh.w	r8, [r4, #26]
 8010ef8:	68e7      	ldr	r7, [r4, #12]
 8010efa:	ee67 7aa5 	vmul.f32	s15, s15, s11
 8010efe:	f108 0901 	add.w	r9, r8, #1
 8010f02:	eb07 0788 	add.w	r7, r7, r8, lsl #2
 8010f06:	f8a4 901a 	strh.w	r9, [r4, #26]
 8010f0a:	edc7 7a00 	vstr	s15, [r7]
 8010f0e:	461a      	mov	r2, r3
 8010f10:	ee07 1a90 	vmov	s15, r1
 8010f14:	e759      	b.n	8010dca <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x102>
 8010f16:	f1ba 0f00 	cmp.w	sl, #0
 8010f1a:	d045      	beq.n	8010fa8 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x2e0>
 8010f1c:	ee05 1a90 	vmov	s11, r1
 8010f20:	eef8 5ae5 	vcvt.f32.s32	s11, s11
 8010f24:	eef4 5a66 	vcmp.f32	s11, s13
 8010f28:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8010f2c:	d108      	bne.n	8010f40 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x278>
 8010f2e:	ee05 3a90 	vmov	s11, r3
 8010f32:	eef8 5ae5 	vcvt.f32.s32	s11, s11
 8010f36:	eef4 5a47 	vcmp.f32	s11, s14
 8010f3a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8010f3e:	d033      	beq.n	8010fa8 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x2e0>
 8010f40:	9b02      	ldr	r3, [sp, #8]
 8010f42:	8327      	strh	r7, [r4, #24]
 8010f44:	b1b3      	cbz	r3, 8010f74 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x2ac>
 8010f46:	2302      	movs	r3, #2
 8010f48:	f889 3000 	strb.w	r3, [r9]
 8010f4c:	8b62      	ldrh	r2, [r4, #26]
 8010f4e:	68e3      	ldr	r3, [r4, #12]
 8010f50:	1c51      	adds	r1, r2, #1
 8010f52:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 8010f56:	8361      	strh	r1, [r4, #26]
 8010f58:	edc3 6a00 	vstr	s13, [r3]
 8010f5c:	8b62      	ldrh	r2, [r4, #26]
 8010f5e:	68e3      	ldr	r3, [r4, #12]
 8010f60:	1c51      	adds	r1, r2, #1
 8010f62:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 8010f66:	8361      	strh	r1, [r4, #26]
 8010f68:	ed83 7a00 	vstr	s14, [r3]
 8010f6c:	9800      	ldr	r0, [sp, #0]
 8010f6e:	b007      	add	sp, #28
 8010f70:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010f74:	2305      	movs	r3, #5
 8010f76:	f889 3000 	strb.w	r3, [r9]
 8010f7a:	8b62      	ldrh	r2, [r4, #26]
 8010f7c:	68e3      	ldr	r3, [r4, #12]
 8010f7e:	eeb8 6ac6 	vcvt.f32.s32	s12, s12
 8010f82:	1c51      	adds	r1, r2, #1
 8010f84:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 8010f88:	8361      	strh	r1, [r4, #26]
 8010f8a:	ee07 ea90 	vmov	s15, lr
 8010f8e:	ed83 6a00 	vstr	s12, [r3]
 8010f92:	8b62      	ldrh	r2, [r4, #26]
 8010f94:	68e3      	ldr	r3, [r4, #12]
 8010f96:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8010f9a:	1c51      	adds	r1, r2, #1
 8010f9c:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 8010fa0:	8361      	strh	r1, [r4, #26]
 8010fa2:	edc3 7a00 	vstr	s15, [r3]
 8010fa6:	e7d1      	b.n	8010f4c <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x284>
 8010fa8:	ee05 2a90 	vmov	s11, r2
 8010fac:	9902      	ldr	r1, [sp, #8]
 8010fae:	8327      	strh	r7, [r4, #24]
 8010fb0:	2305      	movs	r3, #5
 8010fb2:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
 8010fb6:	eef8 5ae5 	vcvt.f32.s32	s11, s11
 8010fba:	f889 3000 	strb.w	r3, [r9]
 8010fbe:	b181      	cbz	r1, 8010fe2 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x31a>
 8010fc0:	8b62      	ldrh	r2, [r4, #26]
 8010fc2:	68e3      	ldr	r3, [r4, #12]
 8010fc4:	1c51      	adds	r1, r2, #1
 8010fc6:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 8010fca:	8361      	strh	r1, [r4, #26]
 8010fcc:	ed83 5a00 	vstr	s10, [r3]
 8010fd0:	8b62      	ldrh	r2, [r4, #26]
 8010fd2:	68e3      	ldr	r3, [r4, #12]
 8010fd4:	1c51      	adds	r1, r2, #1
 8010fd6:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 8010fda:	8361      	strh	r1, [r4, #26]
 8010fdc:	edc3 5a00 	vstr	s11, [r3]
 8010fe0:	e7b4      	b.n	8010f4c <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x284>
 8010fe2:	8b65      	ldrh	r5, [r4, #26]
 8010fe4:	68e1      	ldr	r1, [r4, #12]
 8010fe6:	1c6e      	adds	r6, r5, #1
 8010fe8:	eb01 0185 	add.w	r1, r1, r5, lsl #2
 8010fec:	8366      	strh	r6, [r4, #26]
 8010fee:	ed81 5a00 	vstr	s10, [r1]
 8010ff2:	8b65      	ldrh	r5, [r4, #26]
 8010ff4:	68e1      	ldr	r1, [r4, #12]
 8010ff6:	1c6e      	adds	r6, r5, #1
 8010ff8:	eb01 0185 	add.w	r1, r1, r5, lsl #2
 8010ffc:	8366      	strh	r6, [r4, #26]
 8010ffe:	edc1 5a00 	vstr	s11, [r1]
 8011002:	8b65      	ldrh	r5, [r4, #26]
 8011004:	68e1      	ldr	r1, [r4, #12]
 8011006:	1c6e      	adds	r6, r5, #1
 8011008:	eb01 0185 	add.w	r1, r1, r5, lsl #2
 801100c:	ee17 0a90 	vmov	r0, s15
 8011010:	ee16 5a10 	vmov	r5, s12
 8011014:	4428      	add	r0, r5
 8011016:	ee07 0a90 	vmov	s15, r0
 801101a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801101e:	eef6 5a00 	vmov.f32	s11, #96	@ 0x3f000000  0.5
 8011022:	ee67 7aa5 	vmul.f32	s15, s15, s11
 8011026:	4472      	add	r2, lr
 8011028:	8366      	strh	r6, [r4, #26]
 801102a:	edc1 7a00 	vstr	s15, [r1]
 801102e:	ee07 2a90 	vmov	s15, r2
 8011032:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8011036:	8b61      	ldrh	r1, [r4, #26]
 8011038:	68e5      	ldr	r5, [r4, #12]
 801103a:	ee67 7aa5 	vmul.f32	s15, s15, s11
 801103e:	1c4e      	adds	r6, r1, #1
 8011040:	eb05 0181 	add.w	r1, r5, r1, lsl #2
 8011044:	8366      	strh	r6, [r4, #26]
 8011046:	edc1 7a00 	vstr	s15, [r1]
 801104a:	8b22      	ldrh	r2, [r4, #24]
 801104c:	68a1      	ldr	r1, [r4, #8]
 801104e:	1c55      	adds	r5, r2, #1
 8011050:	8325      	strh	r5, [r4, #24]
 8011052:	548b      	strb	r3, [r1, r2]
 8011054:	e791      	b.n	8010f7a <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x2b2>
	...

08011058 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii>:
 8011058:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801105c:	b08e      	sub	sp, #56	@ 0x38
 801105e:	4604      	mov	r4, r0
 8011060:	4688      	mov	r8, r1
 8011062:	4615      	mov	r5, r2
 8011064:	4699      	mov	r9, r3
 8011066:	9e16      	ldr	r6, [sp, #88]	@ 0x58
 8011068:	f89d a064 	ldrb.w	sl, [sp, #100]	@ 0x64
 801106c:	9f1a      	ldr	r7, [sp, #104]	@ 0x68
 801106e:	f7f0 fa83 	bl	8001578 <_ZN8touchgfx14VectorRenderer11getInstanceEv>
 8011072:	6060      	str	r0, [r4, #4]
 8011074:	f1b9 0f00 	cmp.w	r9, #0
 8011078:	f000 80e8 	beq.w	801124c <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x1f4>
 801107c:	2800      	cmp	r0, #0
 801107e:	f000 80e5 	beq.w	801124c <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x1f4>
 8011082:	a805      	add	r0, sp, #20
 8011084:	f000 f8f9 	bl	801127a <_ZN8touchgfx9Matrix3x3C1Ev>
 8011088:	6833      	ldr	r3, [r6, #0]
 801108a:	4630      	mov	r0, r6
 801108c:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 801108e:	4798      	blx	r3
 8011090:	a805      	add	r0, sp, #20
 8011092:	eef0 0a40 	vmov.f32	s1, s0
 8011096:	f000 f8f4 	bl	8011282 <_ZN8touchgfx9Matrix3x35scaleEff>
 801109a:	6860      	ldr	r0, [r4, #4]
 801109c:	f1ba 0f03 	cmp.w	sl, #3
 80110a0:	d83b      	bhi.n	801111a <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0xc2>
 80110a2:	e8df f00a 	tbb	[pc, sl]
 80110a6:	1002      	.short	0x1002
 80110a8:	9f71      	.short	0x9f71
 80110aa:	6803      	ldr	r3, [r0, #0]
 80110ac:	462a      	mov	r2, r5
 80110ae:	689b      	ldr	r3, [r3, #8]
 80110b0:	4641      	mov	r1, r8
 80110b2:	4798      	blx	r3
 80110b4:	eddd 7a1b 	vldr	s15, [sp, #108]	@ 0x6c
 80110b8:	eef8 0ae7 	vcvt.f32.s32	s1, s15
 80110bc:	ee07 7a90 	vmov	s15, r7
 80110c0:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 80110c4:	e026      	b.n	8011114 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0xbc>
 80110c6:	f9b5 2006 	ldrsh.w	r2, [r5, #6]
 80110ca:	f8b8 3004 	ldrh.w	r3, [r8, #4]
 80110ce:	8869      	ldrh	r1, [r5, #2]
 80110d0:	f8ad 2010 	strh.w	r2, [sp, #16]
 80110d4:	1a9b      	subs	r3, r3, r2
 80110d6:	1a5b      	subs	r3, r3, r1
 80110d8:	f8ad 300c 	strh.w	r3, [sp, #12]
 80110dc:	882b      	ldrh	r3, [r5, #0]
 80110de:	f8ad 300e 	strh.w	r3, [sp, #14]
 80110e2:	88ab      	ldrh	r3, [r5, #4]
 80110e4:	f8ad 3012 	strh.w	r3, [sp, #18]
 80110e8:	6803      	ldr	r3, [r0, #0]
 80110ea:	aa03      	add	r2, sp, #12
 80110ec:	689b      	ldr	r3, [r3, #8]
 80110ee:	4641      	mov	r1, r8
 80110f0:	4798      	blx	r3
 80110f2:	ed9f 0a58 	vldr	s0, [pc, #352]	@ 8011254 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x1fc>
 80110f6:	a805      	add	r0, sp, #20
 80110f8:	f000 f8e8 	bl	80112cc <_ZN8touchgfx9Matrix3x36rotateEf>
 80110fc:	f9b8 3004 	ldrsh.w	r3, [r8, #4]
 8011100:	9a1b      	ldr	r2, [sp, #108]	@ 0x6c
 8011102:	ee07 7a90 	vmov	s15, r7
 8011106:	1a9b      	subs	r3, r3, r2
 8011108:	ee00 3a10 	vmov	s0, r3
 801110c:	eef8 0ae7 	vcvt.f32.s32	s1, s15
 8011110:	eeb8 0ac0 	vcvt.f32.s32	s0, s0
 8011114:	a805      	add	r0, sp, #20
 8011116:	f000 f927 	bl	8011368 <_ZN8touchgfx9Matrix3x39translateEff>
 801111a:	6860      	ldr	r0, [r4, #4]
 801111c:	6803      	ldr	r3, [r0, #0]
 801111e:	a905      	add	r1, sp, #20
 8011120:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8011122:	4798      	blx	r3
 8011124:	6860      	ldr	r0, [r4, #4]
 8011126:	9917      	ldr	r1, [sp, #92]	@ 0x5c
 8011128:	6803      	ldr	r3, [r0, #0]
 801112a:	f041 417f 	orr.w	r1, r1, #4278190080	@ 0xff000000
 801112e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8011130:	4798      	blx	r3
 8011132:	6860      	ldr	r0, [r4, #4]
 8011134:	f89d 1060 	ldrb.w	r1, [sp, #96]	@ 0x60
 8011138:	6803      	ldr	r3, [r0, #0]
 801113a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801113c:	4798      	blx	r3
 801113e:	6860      	ldr	r0, [r4, #4]
 8011140:	6803      	ldr	r3, [r0, #0]
 8011142:	2101      	movs	r1, #1
 8011144:	68db      	ldr	r3, [r3, #12]
 8011146:	2500      	movs	r5, #0
 8011148:	4798      	blx	r3
 801114a:	f8b9 7000 	ldrh.w	r7, [r9]
 801114e:	61a5      	str	r5, [r4, #24]
 8011150:	f104 0310 	add.w	r3, r4, #16
 8011154:	f104 0208 	add.w	r2, r4, #8
 8011158:	f104 0114 	add.w	r1, r4, #20
 801115c:	f104 000c 	add.w	r0, r4, #12
 8011160:	f109 0602 	add.w	r6, r9, #2
 8011164:	f7f2 f842 	bl	80031ec <_ZN8touchgfx22VectorFontRendererImpl20getVectorFontBuffersERPfRiRPhS3_>
 8011168:	42af      	cmp	r7, r5
 801116a:	dd60      	ble.n	801122e <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x1d6>
 801116c:	8831      	ldrh	r1, [r6, #0]
 801116e:	f101 030f 	add.w	r3, r1, #15
 8011172:	1cb2      	adds	r2, r6, #2
 8011174:	f3c3 1307 	ubfx	r3, r3, #4, #8
 8011178:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801117c:	4620      	mov	r0, r4
 801117e:	f7ff fda3 	bl	8010cc8 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs>
 8011182:	3501      	adds	r5, #1
 8011184:	4606      	mov	r6, r0
 8011186:	e7ef      	b.n	8011168 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x110>
 8011188:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 801118c:	f8b8 3004 	ldrh.w	r3, [r8, #4]
 8011190:	8829      	ldrh	r1, [r5, #0]
 8011192:	f8ad 2010 	strh.w	r2, [sp, #16]
 8011196:	1a9b      	subs	r3, r3, r2
 8011198:	1a5b      	subs	r3, r3, r1
 801119a:	f8ad 300c 	strh.w	r3, [sp, #12]
 801119e:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 80111a2:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 80111a6:	886d      	ldrh	r5, [r5, #2]
 80111a8:	f8ad 1012 	strh.w	r1, [sp, #18]
 80111ac:	1a5b      	subs	r3, r3, r1
 80111ae:	1b5b      	subs	r3, r3, r5
 80111b0:	f8ad 300e 	strh.w	r3, [sp, #14]
 80111b4:	6803      	ldr	r3, [r0, #0]
 80111b6:	aa03      	add	r2, sp, #12
 80111b8:	689b      	ldr	r3, [r3, #8]
 80111ba:	4641      	mov	r1, r8
 80111bc:	4798      	blx	r3
 80111be:	ed9f 0a26 	vldr	s0, [pc, #152]	@ 8011258 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x200>
 80111c2:	a805      	add	r0, sp, #20
 80111c4:	f000 f882 	bl	80112cc <_ZN8touchgfx9Matrix3x36rotateEf>
 80111c8:	f9b8 3006 	ldrsh.w	r3, [r8, #6]
 80111cc:	9a1b      	ldr	r2, [sp, #108]	@ 0x6c
 80111ce:	1a9b      	subs	r3, r3, r2
 80111d0:	ee00 3a90 	vmov	s1, r3
 80111d4:	f9b8 3004 	ldrsh.w	r3, [r8, #4]
 80111d8:	1bdb      	subs	r3, r3, r7
 80111da:	ee00 3a10 	vmov	s0, r3
 80111de:	eef8 0ae0 	vcvt.f32.s32	s1, s1
 80111e2:	e795      	b.n	8011110 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0xb8>
 80111e4:	886b      	ldrh	r3, [r5, #2]
 80111e6:	f8ad 300c 	strh.w	r3, [sp, #12]
 80111ea:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 80111ee:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 80111f2:	8829      	ldrh	r1, [r5, #0]
 80111f4:	f8ad 2012 	strh.w	r2, [sp, #18]
 80111f8:	1a9b      	subs	r3, r3, r2
 80111fa:	1a5b      	subs	r3, r3, r1
 80111fc:	f8ad 300e 	strh.w	r3, [sp, #14]
 8011200:	88eb      	ldrh	r3, [r5, #6]
 8011202:	f8ad 3010 	strh.w	r3, [sp, #16]
 8011206:	6803      	ldr	r3, [r0, #0]
 8011208:	aa03      	add	r2, sp, #12
 801120a:	689b      	ldr	r3, [r3, #8]
 801120c:	4641      	mov	r1, r8
 801120e:	4798      	blx	r3
 8011210:	ed9f 0a12 	vldr	s0, [pc, #72]	@ 801125c <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x204>
 8011214:	a805      	add	r0, sp, #20
 8011216:	f000 f859 	bl	80112cc <_ZN8touchgfx9Matrix3x36rotateEf>
 801121a:	f9b8 3006 	ldrsh.w	r3, [r8, #6]
 801121e:	eddd 7a1b 	vldr	s15, [sp, #108]	@ 0x6c
 8011222:	1bdb      	subs	r3, r3, r7
 8011224:	ee00 3a90 	vmov	s1, r3
 8011228:	eef8 0ae0 	vcvt.f32.s32	s1, s1
 801122c:	e748      	b.n	80110c0 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x68>
 801122e:	6860      	ldr	r0, [r4, #4]
 8011230:	8b22      	ldrh	r2, [r4, #24]
 8011232:	6803      	ldr	r3, [r0, #0]
 8011234:	2100      	movs	r1, #0
 8011236:	9101      	str	r1, [sp, #4]
 8011238:	8b61      	ldrh	r1, [r4, #26]
 801123a:	9100      	str	r1, [sp, #0]
 801123c:	6a1d      	ldr	r5, [r3, #32]
 801123e:	e9d4 1302 	ldrd	r1, r3, [r4, #8]
 8011242:	47a8      	blx	r5
 8011244:	6860      	ldr	r0, [r4, #4]
 8011246:	6803      	ldr	r3, [r0, #0]
 8011248:	69db      	ldr	r3, [r3, #28]
 801124a:	4798      	blx	r3
 801124c:	b00e      	add	sp, #56	@ 0x38
 801124e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8011252:	bf00      	nop
 8011254:	42b40000 	.word	0x42b40000
 8011258:	43340000 	.word	0x43340000
 801125c:	43870000 	.word	0x43870000

08011260 <_ZN8touchgfx9Matrix3x35resetEv>:
 8011260:	2300      	movs	r3, #0
 8011262:	f04f 527e 	mov.w	r2, #1065353216	@ 0x3f800000
 8011266:	6002      	str	r2, [r0, #0]
 8011268:	6043      	str	r3, [r0, #4]
 801126a:	6083      	str	r3, [r0, #8]
 801126c:	60c3      	str	r3, [r0, #12]
 801126e:	6102      	str	r2, [r0, #16]
 8011270:	6143      	str	r3, [r0, #20]
 8011272:	6183      	str	r3, [r0, #24]
 8011274:	61c3      	str	r3, [r0, #28]
 8011276:	6202      	str	r2, [r0, #32]
 8011278:	4770      	bx	lr

0801127a <_ZN8touchgfx9Matrix3x3C1Ev>:
 801127a:	b508      	push	{r3, lr}
 801127c:	f7ff fff0 	bl	8011260 <_ZN8touchgfx9Matrix3x35resetEv>
 8011280:	bd08      	pop	{r3, pc}

08011282 <_ZN8touchgfx9Matrix3x35scaleEff>:
 8011282:	edd0 7a00 	vldr	s15, [r0]
 8011286:	ee67 7a80 	vmul.f32	s15, s15, s0
 801128a:	edc0 7a00 	vstr	s15, [r0]
 801128e:	edd0 7a01 	vldr	s15, [r0, #4]
 8011292:	ee67 7a80 	vmul.f32	s15, s15, s0
 8011296:	edc0 7a01 	vstr	s15, [r0, #4]
 801129a:	edd0 7a02 	vldr	s15, [r0, #8]
 801129e:	ee27 0a80 	vmul.f32	s0, s15, s0
 80112a2:	edd0 7a03 	vldr	s15, [r0, #12]
 80112a6:	ed80 0a02 	vstr	s0, [r0, #8]
 80112aa:	ee67 7aa0 	vmul.f32	s15, s15, s1
 80112ae:	edc0 7a03 	vstr	s15, [r0, #12]
 80112b2:	edd0 7a04 	vldr	s15, [r0, #16]
 80112b6:	ee67 7aa0 	vmul.f32	s15, s15, s1
 80112ba:	edc0 7a04 	vstr	s15, [r0, #16]
 80112be:	edd0 7a05 	vldr	s15, [r0, #20]
 80112c2:	ee67 0aa0 	vmul.f32	s1, s15, s1
 80112c6:	edc0 0a05 	vstr	s1, [r0, #20]
 80112ca:	4770      	bx	lr

080112cc <_ZN8touchgfx9Matrix3x36rotateEf>:
 80112cc:	b510      	push	{r4, lr}
 80112ce:	eddf 7a24 	vldr	s15, [pc, #144]	@ 8011360 <_ZN8touchgfx9Matrix3x36rotateEf+0x94>
 80112d2:	ee20 0a27 	vmul.f32	s0, s0, s15
 80112d6:	eddf 7a23 	vldr	s15, [pc, #140]	@ 8011364 <_ZN8touchgfx9Matrix3x36rotateEf+0x98>
 80112da:	ed2d 8b02 	vpush	{d8}
 80112de:	eec0 8a27 	vdiv.f32	s17, s0, s15
 80112e2:	4604      	mov	r4, r0
 80112e4:	eeb0 0a68 	vmov.f32	s0, s17
 80112e8:	f010 fd58 	bl	8021d9c <cosf>
 80112ec:	eeb0 8a40 	vmov.f32	s16, s0
 80112f0:	eeb0 0a68 	vmov.f32	s0, s17
 80112f4:	f010 fd96 	bl	8021e24 <sinf>
 80112f8:	edd4 6a03 	vldr	s13, [r4, #12]
 80112fc:	edd4 4a00 	vldr	s9, [r4]
 8011300:	ed94 7a04 	vldr	s14, [r4, #16]
 8011304:	ed94 5a01 	vldr	s10, [r4, #4]
 8011308:	edd4 5a02 	vldr	s11, [r4, #8]
 801130c:	ee60 7a66 	vnmul.f32	s15, s0, s13
 8011310:	ee66 6a88 	vmul.f32	s13, s13, s16
 8011314:	eee8 7a24 	vfma.f32	s15, s16, s9
 8011318:	eee0 6a24 	vfma.f32	s13, s0, s9
 801131c:	edc4 7a00 	vstr	s15, [r4]
 8011320:	ee60 7a47 	vnmul.f32	s15, s0, s14
 8011324:	ee27 7a08 	vmul.f32	s14, s14, s16
 8011328:	eee8 7a05 	vfma.f32	s15, s16, s10
 801132c:	eea0 7a05 	vfma.f32	s14, s0, s10
 8011330:	edc4 7a01 	vstr	s15, [r4, #4]
 8011334:	edd4 7a05 	vldr	s15, [r4, #20]
 8011338:	edc4 6a03 	vstr	s13, [r4, #12]
 801133c:	ee20 6a67 	vnmul.f32	s12, s0, s15
 8011340:	ee67 7a88 	vmul.f32	s15, s15, s16
 8011344:	eea8 6a25 	vfma.f32	s12, s16, s11
 8011348:	ecbd 8b02 	vpop	{d8}
 801134c:	eee0 7a25 	vfma.f32	s15, s0, s11
 8011350:	ed84 6a02 	vstr	s12, [r4, #8]
 8011354:	ed84 7a04 	vstr	s14, [r4, #16]
 8011358:	edc4 7a05 	vstr	s15, [r4, #20]
 801135c:	bd10      	pop	{r4, pc}
 801135e:	bf00      	nop
 8011360:	40490fdb 	.word	0x40490fdb
 8011364:	43340000 	.word	0x43340000

08011368 <_ZN8touchgfx9Matrix3x39translateEff>:
 8011368:	ed90 6a06 	vldr	s12, [r0, #24]
 801136c:	edd0 7a00 	vldr	s15, [r0]
 8011370:	edd0 6a07 	vldr	s13, [r0, #28]
 8011374:	ed90 7a08 	vldr	s14, [r0, #32]
 8011378:	eee6 7a00 	vfma.f32	s15, s12, s0
 801137c:	edc0 7a00 	vstr	s15, [r0]
 8011380:	edd0 7a01 	vldr	s15, [r0, #4]
 8011384:	eee6 7a80 	vfma.f32	s15, s13, s0
 8011388:	edc0 7a01 	vstr	s15, [r0, #4]
 801138c:	edd0 7a02 	vldr	s15, [r0, #8]
 8011390:	eee7 7a00 	vfma.f32	s15, s14, s0
 8011394:	edc0 7a02 	vstr	s15, [r0, #8]
 8011398:	edd0 7a03 	vldr	s15, [r0, #12]
 801139c:	eee6 7a20 	vfma.f32	s15, s12, s1
 80113a0:	edc0 7a03 	vstr	s15, [r0, #12]
 80113a4:	edd0 7a04 	vldr	s15, [r0, #16]
 80113a8:	eee6 7aa0 	vfma.f32	s15, s13, s1
 80113ac:	edc0 7a04 	vstr	s15, [r0, #16]
 80113b0:	edd0 7a05 	vldr	s15, [r0, #20]
 80113b4:	eee7 7a20 	vfma.f32	s15, s14, s1
 80113b8:	edc0 7a05 	vstr	s15, [r0, #20]
 80113bc:	4770      	bx	lr

080113be <_ZNK8touchgfx9Matrix3x315affineTransformEff>:
 80113be:	edd0 6a01 	vldr	s13, [r0, #4]
 80113c2:	edd0 7a04 	vldr	s15, [r0, #16]
 80113c6:	ed90 7a03 	vldr	s14, [r0, #12]
 80113ca:	ee60 7aa7 	vmul.f32	s15, s1, s15
 80113ce:	ee60 0aa6 	vmul.f32	s1, s1, s13
 80113d2:	edd0 6a00 	vldr	s13, [r0]
 80113d6:	eee7 7a00 	vfma.f32	s15, s14, s0
 80113da:	b084      	sub	sp, #16
 80113dc:	eee6 0a80 	vfma.f32	s1, s13, s0
 80113e0:	ed90 7a05 	vldr	s14, [r0, #20]
 80113e4:	ed90 0a02 	vldr	s0, [r0, #8]
 80113e8:	ee30 0a80 	vadd.f32	s0, s1, s0
 80113ec:	ee77 0a87 	vadd.f32	s1, s15, s14
 80113f0:	b004      	add	sp, #16
 80113f2:	4770      	bx	lr

080113f4 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>:
 80113f4:	b530      	push	{r4, r5, lr}
 80113f6:	8083      	strh	r3, [r0, #4]
 80113f8:	f8bd 300c 	ldrh.w	r3, [sp, #12]
 80113fc:	80c3      	strh	r3, [r0, #6]
 80113fe:	f89d 3010 	ldrb.w	r3, [sp, #16]
 8011402:	7203      	strb	r3, [r0, #8]
 8011404:	f89d 3014 	ldrb.w	r3, [sp, #20]
 8011408:	f89d 5018 	ldrb.w	r5, [sp, #24]
 801140c:	7243      	strb	r3, [r0, #9]
 801140e:	7a83      	ldrb	r3, [r0, #10]
 8011410:	6141      	str	r1, [r0, #20]
 8011412:	f365 0306 	bfi	r3, r5, #0, #7
 8011416:	f89d 501c 	ldrb.w	r5, [sp, #28]
 801141a:	8302      	strh	r2, [r0, #24]
 801141c:	f365 13c7 	bfi	r3, r5, #7, #1
 8011420:	7283      	strb	r3, [r0, #10]
 8011422:	f89d 3020 	ldrb.w	r3, [sp, #32]
 8011426:	72c3      	strb	r3, [r0, #11]
 8011428:	f89d 3024 	ldrb.w	r3, [sp, #36]	@ 0x24
 801142c:	7303      	strb	r3, [r0, #12]
 801142e:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 8011432:	81c3      	strh	r3, [r0, #14]
 8011434:	f8bd 302c 	ldrh.w	r3, [sp, #44]	@ 0x2c
 8011438:	8203      	strh	r3, [r0, #16]
 801143a:	4b01      	ldr	r3, [pc, #4]	@ (8011440 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt+0x4c>)
 801143c:	6003      	str	r3, [r0, #0]
 801143e:	bd30      	pop	{r4, r5, pc}
 8011440:	0802518c 	.word	0x0802518c

08011444 <_ZNK8touchgfx9ConstFont4findEt>:
 8011444:	b5f0      	push	{r4, r5, r6, r7, lr}
 8011446:	6944      	ldr	r4, [r0, #20]
 8011448:	b3bc      	cbz	r4, 80114ba <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801144a:	88a3      	ldrh	r3, [r4, #4]
 801144c:	8b02      	ldrh	r2, [r0, #24]
 801144e:	1acb      	subs	r3, r1, r3
 8011450:	f102 32ff 	add.w	r2, r2, #4294967295
 8011454:	d431      	bmi.n	80114ba <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8011456:	4293      	cmp	r3, r2
 8011458:	dd0c      	ble.n	8011474 <_ZNK8touchgfx9ConstFont4findEt+0x30>
 801145a:	230e      	movs	r3, #14
 801145c:	fb03 4302 	mla	r3, r3, r2, r4
 8011460:	889b      	ldrh	r3, [r3, #4]
 8011462:	1a5b      	subs	r3, r3, r1
 8011464:	1ad3      	subs	r3, r2, r3
 8011466:	429a      	cmp	r2, r3
 8011468:	db27      	blt.n	80114ba <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801146a:	2b00      	cmp	r3, #0
 801146c:	bfbc      	itt	lt
 801146e:	2302      	movlt	r3, #2
 8011470:	fb92 f3f3 	sdivlt	r3, r2, r3
 8011474:	2500      	movs	r5, #0
 8011476:	260e      	movs	r6, #14
 8011478:	4295      	cmp	r5, r2
 801147a:	dc1e      	bgt.n	80114ba <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801147c:	fb06 4003 	mla	r0, r6, r3, r4
 8011480:	8887      	ldrh	r7, [r0, #4]
 8011482:	42b9      	cmp	r1, r7
 8011484:	d01a      	beq.n	80114bc <_ZNK8touchgfx9ConstFont4findEt+0x78>
 8011486:	d20d      	bcs.n	80114a4 <_ZNK8touchgfx9ConstFont4findEt+0x60>
 8011488:	1e5a      	subs	r2, r3, #1
 801148a:	4295      	cmp	r5, r2
 801148c:	dc15      	bgt.n	80114ba <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801148e:	f830 3c0a 	ldrh.w	r3, [r0, #-10]
 8011492:	1a5b      	subs	r3, r3, r1
 8011494:	1ad3      	subs	r3, r2, r3
 8011496:	429a      	cmp	r2, r3
 8011498:	db0f      	blt.n	80114ba <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801149a:	429d      	cmp	r5, r3
 801149c:	ddec      	ble.n	8011478 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 801149e:	1953      	adds	r3, r2, r5
 80114a0:	105b      	asrs	r3, r3, #1
 80114a2:	e7e9      	b.n	8011478 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 80114a4:	1c5d      	adds	r5, r3, #1
 80114a6:	42aa      	cmp	r2, r5
 80114a8:	db07      	blt.n	80114ba <_ZNK8touchgfx9ConstFont4findEt+0x76>
 80114aa:	8a43      	ldrh	r3, [r0, #18]
 80114ac:	1acb      	subs	r3, r1, r3
 80114ae:	442b      	add	r3, r5
 80114b0:	429d      	cmp	r5, r3
 80114b2:	dc02      	bgt.n	80114ba <_ZNK8touchgfx9ConstFont4findEt+0x76>
 80114b4:	429a      	cmp	r2, r3
 80114b6:	dadf      	bge.n	8011478 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 80114b8:	e7f1      	b.n	801149e <_ZNK8touchgfx9ConstFont4findEt+0x5a>
 80114ba:	2000      	movs	r0, #0
 80114bc:	bdf0      	pop	{r4, r5, r6, r7, pc}

080114be <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh>:
 80114be:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80114c0:	4604      	mov	r4, r0
 80114c2:	4617      	mov	r7, r2
 80114c4:	461e      	mov	r6, r3
 80114c6:	b911      	cbnz	r1, 80114ce <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x10>
 80114c8:	2500      	movs	r5, #0
 80114ca:	4628      	mov	r0, r5
 80114cc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80114ce:	290a      	cmp	r1, #10
 80114d0:	d0fa      	beq.n	80114c8 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 80114d2:	f64f 62ff 	movw	r2, #65279	@ 0xfeff
 80114d6:	4291      	cmp	r1, r2
 80114d8:	d0f6      	beq.n	80114c8 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 80114da:	f242 020b 	movw	r2, #8203	@ 0x200b
 80114de:	4291      	cmp	r1, r2
 80114e0:	d0f2      	beq.n	80114c8 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 80114e2:	f7ff ffaf 	bl	8011444 <_ZNK8touchgfx9ConstFont4findEt>
 80114e6:	4605      	mov	r5, r0
 80114e8:	b950      	cbnz	r0, 8011500 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x42>
 80114ea:	6823      	ldr	r3, [r4, #0]
 80114ec:	4620      	mov	r0, r4
 80114ee:	691b      	ldr	r3, [r3, #16]
 80114f0:	4798      	blx	r3
 80114f2:	4601      	mov	r1, r0
 80114f4:	4620      	mov	r0, r4
 80114f6:	f7ff ffa5 	bl	8011444 <_ZNK8touchgfx9ConstFont4findEt>
 80114fa:	4605      	mov	r5, r0
 80114fc:	2800      	cmp	r0, #0
 80114fe:	d0e3      	beq.n	80114c8 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8011500:	6823      	ldr	r3, [r4, #0]
 8011502:	4629      	mov	r1, r5
 8011504:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8011506:	4620      	mov	r0, r4
 8011508:	4798      	blx	r3
 801150a:	6038      	str	r0, [r7, #0]
 801150c:	6823      	ldr	r3, [r4, #0]
 801150e:	4620      	mov	r0, r4
 8011510:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8011512:	4798      	blx	r3
 8011514:	7030      	strb	r0, [r6, #0]
 8011516:	e7d8      	b.n	80114ca <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xc>

08011518 <_ZN8touchgfx4clzuEm>:
 8011518:	4603      	mov	r3, r0
 801151a:	b1c8      	cbz	r0, 8011550 <_ZN8touchgfx4clzuEm+0x38>
 801151c:	0c02      	lsrs	r2, r0, #16
 801151e:	0412      	lsls	r2, r2, #16
 8011520:	b9a2      	cbnz	r2, 801154c <_ZN8touchgfx4clzuEm+0x34>
 8011522:	0403      	lsls	r3, r0, #16
 8011524:	2010      	movs	r0, #16
 8011526:	f013 4f7f 	tst.w	r3, #4278190080	@ 0xff000000
 801152a:	bf04      	itt	eq
 801152c:	021b      	lsleq	r3, r3, #8
 801152e:	3008      	addeq	r0, #8
 8011530:	f013 4f70 	tst.w	r3, #4026531840	@ 0xf0000000
 8011534:	bf04      	itt	eq
 8011536:	011b      	lsleq	r3, r3, #4
 8011538:	3004      	addeq	r0, #4
 801153a:	f013 4f40 	tst.w	r3, #3221225472	@ 0xc0000000
 801153e:	bf04      	itt	eq
 8011540:	009b      	lsleq	r3, r3, #2
 8011542:	3002      	addeq	r0, #2
 8011544:	2b00      	cmp	r3, #0
 8011546:	db04      	blt.n	8011552 <_ZN8touchgfx4clzuEm+0x3a>
 8011548:	3001      	adds	r0, #1
 801154a:	4770      	bx	lr
 801154c:	2000      	movs	r0, #0
 801154e:	e7ea      	b.n	8011526 <_ZN8touchgfx4clzuEm+0xe>
 8011550:	2020      	movs	r0, #32
 8011552:	4770      	bx	lr

08011554 <_ZN8touchgfx7muldivuEmmmRm>:
 8011554:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 8011558:	460f      	mov	r7, r1
 801155a:	4615      	mov	r5, r2
 801155c:	461e      	mov	r6, r3
 801155e:	4601      	mov	r1, r0
 8011560:	b100      	cbz	r0, 8011564 <_ZN8touchgfx7muldivuEmmmRm+0x10>
 8011562:	b927      	cbnz	r7, 801156e <_ZN8touchgfx7muldivuEmmmRm+0x1a>
 8011564:	2000      	movs	r0, #0
 8011566:	6030      	str	r0, [r6, #0]
 8011568:	b002      	add	sp, #8
 801156a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801156e:	f7ff ffd3 	bl	8011518 <_ZN8touchgfx4clzuEm>
 8011572:	b980      	cbnz	r0, 8011596 <_ZN8touchgfx7muldivuEmmmRm+0x42>
 8011574:	4638      	mov	r0, r7
 8011576:	f7ff ffcf 	bl	8011518 <_ZN8touchgfx4clzuEm>
 801157a:	2800      	cmp	r0, #0
 801157c:	dd05      	ble.n	801158a <_ZN8touchgfx7muldivuEmmmRm+0x36>
 801157e:	4633      	mov	r3, r6
 8011580:	462a      	mov	r2, r5
 8011582:	4638      	mov	r0, r7
 8011584:	f7ff ffe6 	bl	8011554 <_ZN8touchgfx7muldivuEmmmRm>
 8011588:	e7ee      	b.n	8011568 <_ZN8touchgfx7muldivuEmmmRm+0x14>
 801158a:	f04f 33ff 	mov.w	r3, #4294967295
 801158e:	6033      	str	r3, [r6, #0]
 8011590:	f06f 4000 	mvn.w	r0, #2147483648	@ 0x80000000
 8011594:	e7e8      	b.n	8011568 <_ZN8touchgfx7muldivuEmmmRm+0x14>
 8011596:	fa37 f800 	lsrs.w	r8, r7, r0
 801159a:	fb07 f301 	mul.w	r3, r7, r1
 801159e:	d105      	bne.n	80115ac <_ZN8touchgfx7muldivuEmmmRm+0x58>
 80115a0:	fbb3 f0f5 	udiv	r0, r3, r5
 80115a4:	fb05 3510 	mls	r5, r5, r0, r3
 80115a8:	6035      	str	r5, [r6, #0]
 80115aa:	e7dd      	b.n	8011568 <_ZN8touchgfx7muldivuEmmmRm+0x14>
 80115ac:	2301      	movs	r3, #1
 80115ae:	fa01 fa00 	lsl.w	sl, r1, r0
 80115b2:	fa03 f000 	lsl.w	r0, r3, r0
 80115b6:	3801      	subs	r0, #1
 80115b8:	462a      	mov	r2, r5
 80115ba:	4633      	mov	r3, r6
 80115bc:	4038      	ands	r0, r7
 80115be:	f7ff ffc9 	bl	8011554 <_ZN8touchgfx7muldivuEmmmRm>
 80115c2:	fbba f9f5 	udiv	r9, sl, r5
 80115c6:	462a      	mov	r2, r5
 80115c8:	4607      	mov	r7, r0
 80115ca:	ab01      	add	r3, sp, #4
 80115cc:	fb05 a119 	mls	r1, r5, r9, sl
 80115d0:	4640      	mov	r0, r8
 80115d2:	f7ff ffbf 	bl	8011554 <_ZN8touchgfx7muldivuEmmmRm>
 80115d6:	9b01      	ldr	r3, [sp, #4]
 80115d8:	6832      	ldr	r2, [r6, #0]
 80115da:	fb08 f409 	mul.w	r4, r8, r9
 80115de:	441a      	add	r2, r3
 80115e0:	fbb2 f3f5 	udiv	r3, r2, r5
 80115e4:	441c      	add	r4, r3
 80115e6:	443c      	add	r4, r7
 80115e8:	4420      	add	r0, r4
 80115ea:	fb05 2513 	mls	r5, r5, r3, r2
 80115ee:	e7db      	b.n	80115a8 <_ZN8touchgfx7muldivuEmmmRm+0x54>

080115f0 <_ZN8touchgfx6muldivElllRl>:
 80115f0:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80115f2:	2800      	cmp	r0, #0
 80115f4:	bfba      	itte	lt
 80115f6:	4240      	neglt	r0, r0
 80115f8:	f04f 34ff 	movlt.w	r4, #4294967295
 80115fc:	2401      	movge	r4, #1
 80115fe:	2900      	cmp	r1, #0
 8011600:	bfbc      	itt	lt
 8011602:	4249      	neglt	r1, r1
 8011604:	4264      	neglt	r4, r4
 8011606:	2a00      	cmp	r2, #0
 8011608:	bfb6      	itet	lt
 801160a:	4265      	neglt	r5, r4
 801160c:	4625      	movge	r5, r4
 801160e:	4252      	neglt	r2, r2
 8011610:	4288      	cmp	r0, r1
 8011612:	461e      	mov	r6, r3
 8011614:	bfc2      	ittt	gt
 8011616:	4603      	movgt	r3, r0
 8011618:	4608      	movgt	r0, r1
 801161a:	4619      	movgt	r1, r3
 801161c:	ab01      	add	r3, sp, #4
 801161e:	f7ff ff99 	bl	8011554 <_ZN8touchgfx7muldivuEmmmRm>
 8011622:	9b01      	ldr	r3, [sp, #4]
 8011624:	4368      	muls	r0, r5
 8011626:	435c      	muls	r4, r3
 8011628:	6034      	str	r4, [r6, #0]
 801162a:	b002      	add	sp, #8
 801162c:	bd70      	pop	{r4, r5, r6, pc}

0801162e <_ZNK8touchgfx10ClickEvent12getEventTypeEv>:
 801162e:	2000      	movs	r0, #0
 8011630:	4770      	bx	lr

08011632 <_ZNK8touchgfx9DragEvent12getEventTypeEv>:
 8011632:	2001      	movs	r0, #1
 8011634:	4770      	bx	lr

08011636 <_ZNK8touchgfx12GestureEvent12getEventTypeEv>:
 8011636:	2002      	movs	r0, #2
 8011638:	4770      	bx	lr

0801163a <_ZN8touchgfx6ScreenD1Ev>:
 801163a:	4770      	bx	lr

0801163c <_ZN8touchgfx12GestureEventD1Ev>:
 801163c:	4770      	bx	lr

0801163e <_ZN8touchgfx9DragEventD1Ev>:
 801163e:	4770      	bx	lr

08011640 <_ZN8touchgfx10ClickEventD1Ev>:
 8011640:	4770      	bx	lr

08011642 <_ZN8touchgfx10ClickEventD0Ev>:
 8011642:	b510      	push	{r4, lr}
 8011644:	210c      	movs	r1, #12
 8011646:	4604      	mov	r4, r0
 8011648:	f010 fb5f 	bl	8021d0a <_ZdlPvj>
 801164c:	4620      	mov	r0, r4
 801164e:	bd10      	pop	{r4, pc}

08011650 <_ZN8touchgfx9DragEventD0Ev>:
 8011650:	b510      	push	{r4, lr}
 8011652:	2110      	movs	r1, #16
 8011654:	4604      	mov	r4, r0
 8011656:	f010 fb58 	bl	8021d0a <_ZdlPvj>
 801165a:	4620      	mov	r0, r4
 801165c:	bd10      	pop	{r4, pc}

0801165e <_ZN8touchgfx12GestureEventD0Ev>:
 801165e:	b510      	push	{r4, lr}
 8011660:	210c      	movs	r1, #12
 8011662:	4604      	mov	r4, r0
 8011664:	f010 fb51 	bl	8021d0a <_ZdlPvj>
 8011668:	4620      	mov	r0, r4
 801166a:	bd10      	pop	{r4, pc}

0801166c <_ZN8touchgfx6ScreenD0Ev>:
 801166c:	b510      	push	{r4, lr}
 801166e:	213c      	movs	r1, #60	@ 0x3c
 8011670:	4604      	mov	r4, r0
 8011672:	f010 fb4a 	bl	8021d0a <_ZdlPvj>
 8011676:	4620      	mov	r0, r4
 8011678:	bd10      	pop	{r4, pc}
	...

0801167c <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE>:
 801167c:	b530      	push	{r4, r5, lr}
 801167e:	460d      	mov	r5, r1
 8011680:	6b01      	ldr	r1, [r0, #48]	@ 0x30
 8011682:	b087      	sub	sp, #28
 8011684:	4604      	mov	r4, r0
 8011686:	b301      	cbz	r1, 80116ca <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x4e>
 8011688:	a801      	add	r0, sp, #4
 801168a:	f7ff faf7 	bl	8010c7c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801168e:	892a      	ldrh	r2, [r5, #8]
 8011690:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8011694:	7928      	ldrb	r0, [r5, #4]
 8011696:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 801169a:	f88d 0010 	strb.w	r0, [sp, #16]
 801169e:	1ad2      	subs	r2, r2, r3
 80116a0:	8ea3      	ldrh	r3, [r4, #52]	@ 0x34
 80116a2:	6b20      	ldr	r0, [r4, #48]	@ 0x30
 80116a4:	f8ad 1012 	strh.w	r1, [sp, #18]
 80116a8:	441a      	add	r2, r3
 80116aa:	896b      	ldrh	r3, [r5, #10]
 80116ac:	f8bd 5006 	ldrh.w	r5, [sp, #6]
 80116b0:	f8ad 2014 	strh.w	r2, [sp, #20]
 80116b4:	1b5b      	subs	r3, r3, r5
 80116b6:	8ee5      	ldrh	r5, [r4, #54]	@ 0x36
 80116b8:	442b      	add	r3, r5
 80116ba:	4d05      	ldr	r5, [pc, #20]	@ (80116d0 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x54>)
 80116bc:	9503      	str	r5, [sp, #12]
 80116be:	f8ad 3016 	strh.w	r3, [sp, #22]
 80116c2:	6803      	ldr	r3, [r0, #0]
 80116c4:	a903      	add	r1, sp, #12
 80116c6:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 80116c8:	4798      	blx	r3
 80116ca:	b007      	add	sp, #28
 80116cc:	bd30      	pop	{r4, r5, pc}
 80116ce:	bf00      	nop
 80116d0:	0802521c 	.word	0x0802521c

080116d4 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>:
 80116d4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80116d8:	6b03      	ldr	r3, [r0, #48]	@ 0x30
 80116da:	b08a      	sub	sp, #40	@ 0x28
 80116dc:	4604      	mov	r4, r0
 80116de:	460d      	mov	r5, r1
 80116e0:	b113      	cbz	r3, 80116e8 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x14>
 80116e2:	790b      	ldrb	r3, [r1, #4]
 80116e4:	2b00      	cmp	r3, #0
 80116e6:	d044      	beq.n	8011772 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 80116e8:	f104 0804 	add.w	r8, r4, #4
 80116ec:	4641      	mov	r1, r8
 80116ee:	a803      	add	r0, sp, #12
 80116f0:	f7ff fac4 	bl	8010c7c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80116f4:	792b      	ldrb	r3, [r5, #4]
 80116f6:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 80116fa:	f9bd 600e 	ldrsh.w	r6, [sp, #14]
 80116fe:	b983      	cbnz	r3, 8011722 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x4e>
 8011700:	892a      	ldrh	r2, [r5, #8]
 8011702:	88e9      	ldrh	r1, [r5, #6]
 8011704:	f104 0336 	add.w	r3, r4, #54	@ 0x36
 8011708:	1b92      	subs	r2, r2, r6
 801170a:	1bc9      	subs	r1, r1, r7
 801170c:	9301      	str	r3, [sp, #4]
 801170e:	f104 0334 	add.w	r3, r4, #52	@ 0x34
 8011712:	9300      	str	r3, [sp, #0]
 8011714:	b212      	sxth	r2, r2
 8011716:	f104 0330 	add.w	r3, r4, #48	@ 0x30
 801171a:	b209      	sxth	r1, r1
 801171c:	4640      	mov	r0, r8
 801171e:	f7f8 fdef 	bl	800a300 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>
 8011722:	6b21      	ldr	r1, [r4, #48]	@ 0x30
 8011724:	b329      	cbz	r1, 8011772 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 8011726:	a805      	add	r0, sp, #20
 8011728:	f7ff faa8 	bl	8010c7c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801172c:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 8011730:	792b      	ldrb	r3, [r5, #4]
 8011732:	6b20      	ldr	r0, [r4, #48]	@ 0x30
 8011734:	f88d 3020 	strb.w	r3, [sp, #32]
 8011738:	1abf      	subs	r7, r7, r2
 801173a:	88ea      	ldrh	r2, [r5, #6]
 801173c:	4417      	add	r7, r2
 801173e:	8ea2      	ldrh	r2, [r4, #52]	@ 0x34
 8011740:	4417      	add	r7, r2
 8011742:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 8011746:	f8ad 7022 	strh.w	r7, [sp, #34]	@ 0x22
 801174a:	1ab6      	subs	r6, r6, r2
 801174c:	892a      	ldrh	r2, [r5, #8]
 801174e:	4416      	add	r6, r2
 8011750:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
 8011752:	4416      	add	r6, r2
 8011754:	f8ad 6024 	strh.w	r6, [sp, #36]	@ 0x24
 8011758:	4a07      	ldr	r2, [pc, #28]	@ (8011778 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0xa4>)
 801175a:	9207      	str	r2, [sp, #28]
 801175c:	2600      	movs	r6, #0
 801175e:	f8ad 6026 	strh.w	r6, [sp, #38]	@ 0x26
 8011762:	6803      	ldr	r3, [r0, #0]
 8011764:	a907      	add	r1, sp, #28
 8011766:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8011768:	4798      	blx	r3
 801176a:	792b      	ldrb	r3, [r5, #4]
 801176c:	b10b      	cbz	r3, 8011772 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 801176e:	e9c4 660c 	strd	r6, r6, [r4, #48]	@ 0x30
 8011772:	b00a      	add	sp, #40	@ 0x28
 8011774:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8011778:	080251f4 	.word	0x080251f4

0801177c <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>:
 801177c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011780:	460c      	mov	r4, r1
 8011782:	6b01      	ldr	r1, [r0, #48]	@ 0x30
 8011784:	b088      	sub	sp, #32
 8011786:	4605      	mov	r5, r0
 8011788:	2900      	cmp	r1, #0
 801178a:	d06d      	beq.n	8011868 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xec>
 801178c:	4668      	mov	r0, sp
 801178e:	f7ff fa75 	bl	8010c7c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8011792:	8ea9      	ldrh	r1, [r5, #52]	@ 0x34
 8011794:	88e3      	ldrh	r3, [r4, #6]
 8011796:	f9bd 8000 	ldrsh.w	r8, [sp]
 801179a:	f9bd 7002 	ldrsh.w	r7, [sp, #2]
 801179e:	440b      	add	r3, r1
 80117a0:	b21b      	sxth	r3, r3
 80117a2:	4543      	cmp	r3, r8
 80117a4:	db31      	blt.n	801180a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 80117a6:	f8bd c004 	ldrh.w	ip, [sp, #4]
 80117aa:	44c4      	add	ip, r8
 80117ac:	fa0f fc8c 	sxth.w	ip, ip
 80117b0:	4563      	cmp	r3, ip
 80117b2:	da2a      	bge.n	801180a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 80117b4:	8eea      	ldrh	r2, [r5, #54]	@ 0x36
 80117b6:	8926      	ldrh	r6, [r4, #8]
 80117b8:	4416      	add	r6, r2
 80117ba:	b236      	sxth	r6, r6
 80117bc:	42be      	cmp	r6, r7
 80117be:	db24      	blt.n	801180a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 80117c0:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 80117c4:	4438      	add	r0, r7
 80117c6:	b200      	sxth	r0, r0
 80117c8:	4286      	cmp	r6, r0
 80117ca:	da1e      	bge.n	801180a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 80117cc:	8963      	ldrh	r3, [r4, #10]
 80117ce:	4419      	add	r1, r3
 80117d0:	b209      	sxth	r1, r1
 80117d2:	4541      	cmp	r1, r8
 80117d4:	db08      	blt.n	80117e8 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 80117d6:	4561      	cmp	r1, ip
 80117d8:	da06      	bge.n	80117e8 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 80117da:	89a3      	ldrh	r3, [r4, #12]
 80117dc:	441a      	add	r2, r3
 80117de:	b212      	sxth	r2, r2
 80117e0:	42ba      	cmp	r2, r7
 80117e2:	db01      	blt.n	80117e8 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 80117e4:	4282      	cmp	r2, r0
 80117e6:	db10      	blt.n	801180a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 80117e8:	4b21      	ldr	r3, [pc, #132]	@ (8011870 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf4>)
 80117ea:	9304      	str	r3, [sp, #16]
 80117ec:	2302      	movs	r3, #2
 80117ee:	f88d 3014 	strb.w	r3, [sp, #20]
 80117f2:	6b28      	ldr	r0, [r5, #48]	@ 0x30
 80117f4:	2300      	movs	r3, #0
 80117f6:	f8ad 3016 	strh.w	r3, [sp, #22]
 80117fa:	f8ad 3018 	strh.w	r3, [sp, #24]
 80117fe:	f8ad 301a 	strh.w	r3, [sp, #26]
 8011802:	6803      	ldr	r3, [r0, #0]
 8011804:	a904      	add	r1, sp, #16
 8011806:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8011808:	4798      	blx	r3
 801180a:	1d29      	adds	r1, r5, #4
 801180c:	a802      	add	r0, sp, #8
 801180e:	f7ff fa35 	bl	8010c7c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8011812:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8011816:	88e0      	ldrh	r0, [r4, #6]
 8011818:	7921      	ldrb	r1, [r4, #4]
 801181a:	f8b5 c034 	ldrh.w	ip, [r5, #52]	@ 0x34
 801181e:	8922      	ldrh	r2, [r4, #8]
 8011820:	8eee      	ldrh	r6, [r5, #54]	@ 0x36
 8011822:	f88d 1014 	strb.w	r1, [sp, #20]
 8011826:	eba3 0808 	sub.w	r8, r3, r8
 801182a:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 801182e:	1bdf      	subs	r7, r3, r7
 8011830:	b2bb      	uxth	r3, r7
 8011832:	fa1f f888 	uxth.w	r8, r8
 8011836:	8967      	ldrh	r7, [r4, #10]
 8011838:	89a4      	ldrh	r4, [r4, #12]
 801183a:	4440      	add	r0, r8
 801183c:	4460      	add	r0, ip
 801183e:	441a      	add	r2, r3
 8011840:	44b8      	add	r8, r7
 8011842:	4423      	add	r3, r4
 8011844:	f8ad 0016 	strh.w	r0, [sp, #22]
 8011848:	4433      	add	r3, r6
 801184a:	4432      	add	r2, r6
 801184c:	44e0      	add	r8, ip
 801184e:	4c09      	ldr	r4, [pc, #36]	@ (8011874 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf8>)
 8011850:	6b28      	ldr	r0, [r5, #48]	@ 0x30
 8011852:	9404      	str	r4, [sp, #16]
 8011854:	f8ad 2018 	strh.w	r2, [sp, #24]
 8011858:	f8ad 801a 	strh.w	r8, [sp, #26]
 801185c:	f8ad 301c 	strh.w	r3, [sp, #28]
 8011860:	6803      	ldr	r3, [r0, #0]
 8011862:	a904      	add	r1, sp, #16
 8011864:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8011866:	4798      	blx	r3
 8011868:	b008      	add	sp, #32
 801186a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801186e:	bf00      	nop
 8011870:	080251f4 	.word	0x080251f4
 8011874:	08025208 	.word	0x08025208

08011878 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>:
 8011878:	b537      	push	{r0, r1, r2, r4, r5, lr}
 801187a:	4604      	mov	r4, r0
 801187c:	f934 2f0c 	ldrsh.w	r2, [r4, #12]!
 8011880:	3201      	adds	r2, #1
 8011882:	d112      	bne.n	80118aa <_ZN8touchgfx8Drawable20getCachedVisibleRectEv+0x32>
 8011884:	6803      	ldr	r3, [r0, #0]
 8011886:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 801188a:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 801188e:	f8ad 1004 	strh.w	r1, [sp, #4]
 8011892:	2500      	movs	r5, #0
 8011894:	9500      	str	r5, [sp, #0]
 8011896:	466d      	mov	r5, sp
 8011898:	4629      	mov	r1, r5
 801189a:	f8ad 2006 	strh.w	r2, [sp, #6]
 801189e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80118a0:	4798      	blx	r3
 80118a2:	e895 0003 	ldmia.w	r5, {r0, r1}
 80118a6:	e884 0003 	stmia.w	r4, {r0, r1}
 80118aa:	4620      	mov	r0, r4
 80118ac:	b003      	add	sp, #12
 80118ae:	bd30      	pop	{r4, r5, pc}

080118b0 <_ZN8touchgfx8Drawable13getCachedAbsXEv>:
 80118b0:	b513      	push	{r0, r1, r4, lr}
 80118b2:	f9b0 3020 	ldrsh.w	r3, [r0, #32]
 80118b6:	3301      	adds	r3, #1
 80118b8:	4604      	mov	r4, r0
 80118ba:	d109      	bne.n	80118d0 <_ZN8touchgfx8Drawable13getCachedAbsXEv+0x20>
 80118bc:	4601      	mov	r1, r0
 80118be:	4668      	mov	r0, sp
 80118c0:	f7ff f9dc 	bl	8010c7c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80118c4:	f8bd 3000 	ldrh.w	r3, [sp]
 80118c8:	8423      	strh	r3, [r4, #32]
 80118ca:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 80118ce:	8463      	strh	r3, [r4, #34]	@ 0x22
 80118d0:	f9b4 0020 	ldrsh.w	r0, [r4, #32]
 80118d4:	b002      	add	sp, #8
 80118d6:	bd10      	pop	{r4, pc}

080118d8 <_ZN8touchgfx8Drawable13getCachedAbsYEv>:
 80118d8:	b513      	push	{r0, r1, r4, lr}
 80118da:	f9b0 3022 	ldrsh.w	r3, [r0, #34]	@ 0x22
 80118de:	3301      	adds	r3, #1
 80118e0:	4604      	mov	r4, r0
 80118e2:	d109      	bne.n	80118f8 <_ZN8touchgfx8Drawable13getCachedAbsYEv+0x20>
 80118e4:	4601      	mov	r1, r0
 80118e6:	4668      	mov	r0, sp
 80118e8:	f7ff f9c8 	bl	8010c7c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80118ec:	f8bd 3000 	ldrh.w	r3, [sp]
 80118f0:	8423      	strh	r3, [r4, #32]
 80118f2:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 80118f6:	8463      	strh	r3, [r4, #34]	@ 0x22
 80118f8:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	@ 0x22
 80118fc:	b002      	add	sp, #8
 80118fe:	bd10      	pop	{r4, pc}

08011900 <_ZN8touchgfx6ScreenC1Ev>:
 8011900:	b570      	push	{r4, r5, r6, lr}
 8011902:	4605      	mov	r5, r0
 8011904:	4b16      	ldr	r3, [pc, #88]	@ (8011960 <_ZN8touchgfx6ScreenC1Ev+0x60>)
 8011906:	f845 3b04 	str.w	r3, [r5], #4
 801190a:	2300      	movs	r3, #0
 801190c:	8103      	strh	r3, [r0, #8]
 801190e:	8143      	strh	r3, [r0, #10]
 8011910:	8183      	strh	r3, [r0, #12]
 8011912:	81c3      	strh	r3, [r0, #14]
 8011914:	8203      	strh	r3, [r0, #16]
 8011916:	8243      	strh	r3, [r0, #18]
 8011918:	8283      	strh	r3, [r0, #20]
 801191a:	82c3      	strh	r3, [r0, #22]
 801191c:	e9c0 3306 	strd	r3, r3, [r0, #24]
 8011920:	6203      	str	r3, [r0, #32]
 8011922:	8483      	strh	r3, [r0, #36]	@ 0x24
 8011924:	84c3      	strh	r3, [r0, #38]	@ 0x26
 8011926:	f880 3028 	strb.w	r3, [r0, #40]	@ 0x28
 801192a:	4a0e      	ldr	r2, [pc, #56]	@ (8011964 <_ZN8touchgfx6ScreenC1Ev+0x64>)
 801192c:	6343      	str	r3, [r0, #52]	@ 0x34
 801192e:	e9c0 330b 	strd	r3, r3, [r0, #44]	@ 0x2c
 8011932:	4b0d      	ldr	r3, [pc, #52]	@ (8011968 <_ZN8touchgfx6ScreenC1Ev+0x68>)
 8011934:	6042      	str	r2, [r0, #4]
 8011936:	f9b3 6000 	ldrsh.w	r6, [r3]
 801193a:	6b93      	ldr	r3, [r2, #56]	@ 0x38
 801193c:	4a0b      	ldr	r2, [pc, #44]	@ (801196c <_ZN8touchgfx6ScreenC1Ev+0x6c>)
 801193e:	4604      	mov	r4, r0
 8011940:	2101      	movs	r1, #1
 8011942:	f880 1029 	strb.w	r1, [r0, #41]	@ 0x29
 8011946:	f880 1038 	strb.w	r1, [r0, #56]	@ 0x38
 801194a:	f9b2 1000 	ldrsh.w	r1, [r2]
 801194e:	4628      	mov	r0, r5
 8011950:	4798      	blx	r3
 8011952:	6863      	ldr	r3, [r4, #4]
 8011954:	4628      	mov	r0, r5
 8011956:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8011958:	4631      	mov	r1, r6
 801195a:	4798      	blx	r3
 801195c:	4620      	mov	r0, r4
 801195e:	bd70      	pop	{r4, r5, r6, pc}
 8011960:	08025230 	.word	0x08025230
 8011964:	08024d24 	.word	0x08024d24
 8011968:	20014038 	.word	0x20014038
 801196c:	20014036 	.word	0x20014036

08011970 <_ZN8touchgfx6Screen4drawEv>:
 8011970:	b507      	push	{r0, r1, r2, lr}
 8011972:	4b09      	ldr	r3, [pc, #36]	@ (8011998 <_ZN8touchgfx6Screen4drawEv+0x28>)
 8011974:	f9b3 2000 	ldrsh.w	r2, [r3]
 8011978:	4b08      	ldr	r3, [pc, #32]	@ (801199c <_ZN8touchgfx6Screen4drawEv+0x2c>)
 801197a:	f8ad 2004 	strh.w	r2, [sp, #4]
 801197e:	f9b3 3000 	ldrsh.w	r3, [r3]
 8011982:	f8ad 3006 	strh.w	r3, [sp, #6]
 8011986:	6803      	ldr	r3, [r0, #0]
 8011988:	2100      	movs	r1, #0
 801198a:	9100      	str	r1, [sp, #0]
 801198c:	689b      	ldr	r3, [r3, #8]
 801198e:	4669      	mov	r1, sp
 8011990:	4798      	blx	r3
 8011992:	b003      	add	sp, #12
 8011994:	f85d fb04 	ldr.w	pc, [sp], #4
 8011998:	20014036 	.word	0x20014036
 801199c:	20014038 	.word	0x20014038

080119a0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>:
 80119a0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80119a4:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 80119a8:	2b00      	cmp	r3, #0
 80119aa:	b089      	sub	sp, #36	@ 0x24
 80119ac:	4680      	mov	r8, r0
 80119ae:	460c      	mov	r4, r1
 80119b0:	4615      	mov	r5, r2
 80119b2:	dd0e      	ble.n	80119d2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 80119b4:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 80119b8:	2b00      	cmp	r3, #0
 80119ba:	dd0a      	ble.n	80119d2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 80119bc:	4628      	mov	r0, r5
 80119be:	f7ff ff5b 	bl	8011878 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 80119c2:	4621      	mov	r1, r4
 80119c4:	f7fd fe2d 	bl	800f622 <_ZNK8touchgfx4Rect9intersectERKS0_>
 80119c8:	69eb      	ldr	r3, [r5, #28]
 80119ca:	b928      	cbnz	r0, 80119d8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x38>
 80119cc:	461d      	mov	r5, r3
 80119ce:	2b00      	cmp	r3, #0
 80119d0:	d1f4      	bne.n	80119bc <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1c>
 80119d2:	b009      	add	sp, #36	@ 0x24
 80119d4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80119d8:	ae04      	add	r6, sp, #16
 80119da:	2b00      	cmp	r3, #0
 80119dc:	f000 80b5 	beq.w	8011b4a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 80119e0:	682b      	ldr	r3, [r5, #0]
 80119e2:	4629      	mov	r1, r5
 80119e4:	68db      	ldr	r3, [r3, #12]
 80119e6:	a802      	add	r0, sp, #8
 80119e8:	4798      	blx	r3
 80119ea:	4628      	mov	r0, r5
 80119ec:	f7ff ff60 	bl	80118b0 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 80119f0:	f8bd 7008 	ldrh.w	r7, [sp, #8]
 80119f4:	4407      	add	r7, r0
 80119f6:	4628      	mov	r0, r5
 80119f8:	f7ff ff6e 	bl	80118d8 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 80119fc:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8011a00:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 8011a04:	f8ad 2014 	strh.w	r2, [sp, #20]
 8011a08:	4418      	add	r0, r3
 8011a0a:	4621      	mov	r1, r4
 8011a0c:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 8011a10:	f8ad 0012 	strh.w	r0, [sp, #18]
 8011a14:	b23f      	sxth	r7, r7
 8011a16:	4630      	mov	r0, r6
 8011a18:	f8ad 3016 	strh.w	r3, [sp, #22]
 8011a1c:	f8ad 7010 	strh.w	r7, [sp, #16]
 8011a20:	f7f8 fd52 	bl	800a4c8 <_ZN8touchgfx4RectaNERKS0_>
 8011a24:	4628      	mov	r0, r5
 8011a26:	f7ff ff27 	bl	8011878 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 8011a2a:	4602      	mov	r2, r0
 8011a2c:	e896 0003 	ldmia.w	r6, {r0, r1}
 8011a30:	ab06      	add	r3, sp, #24
 8011a32:	e883 0003 	stmia.w	r3, {r0, r1}
 8011a36:	4611      	mov	r1, r2
 8011a38:	4618      	mov	r0, r3
 8011a3a:	f7f8 fd45 	bl	800a4c8 <_ZN8touchgfx4RectaNERKS0_>
 8011a3e:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8011a42:	f9b4 1000 	ldrsh.w	r1, [r4]
 8011a46:	f9bd a01a 	ldrsh.w	sl, [sp, #26]
 8011a4a:	f9bd b01c 	ldrsh.w	fp, [sp, #28]
 8011a4e:	f9bd 901e 	ldrsh.w	r9, [sp, #30]
 8011a52:	4299      	cmp	r1, r3
 8011a54:	d10b      	bne.n	8011a6e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 8011a56:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 8011a5a:	4552      	cmp	r2, sl
 8011a5c:	d107      	bne.n	8011a6e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 8011a5e:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 8011a62:	455a      	cmp	r2, fp
 8011a64:	d103      	bne.n	8011a6e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 8011a66:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 8011a6a:	454a      	cmp	r2, r9
 8011a6c:	d06d      	beq.n	8011b4a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 8011a6e:	f1bb 0f00 	cmp.w	fp, #0
 8011a72:	dd65      	ble.n	8011b40 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 8011a74:	f1b9 0f00 	cmp.w	r9, #0
 8011a78:	dd62      	ble.n	8011b40 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 8011a7a:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 8011a7e:	fa1f f08a 	uxth.w	r0, sl
 8011a82:	4552      	cmp	r2, sl
 8011a84:	9000      	str	r0, [sp, #0]
 8011a86:	da12      	bge.n	8011aae <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x10e>
 8011a88:	9301      	str	r3, [sp, #4]
 8011a8a:	9b00      	ldr	r3, [sp, #0]
 8011a8c:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8011a90:	f8ad 2012 	strh.w	r2, [sp, #18]
 8011a94:	1a9a      	subs	r2, r3, r2
 8011a96:	f8ad 1010 	strh.w	r1, [sp, #16]
 8011a9a:	f8ad 0014 	strh.w	r0, [sp, #20]
 8011a9e:	f8ad 2016 	strh.w	r2, [sp, #22]
 8011aa2:	69ea      	ldr	r2, [r5, #28]
 8011aa4:	4631      	mov	r1, r6
 8011aa6:	4640      	mov	r0, r8
 8011aa8:	f7ff ff7a 	bl	80119a0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8011aac:	9b01      	ldr	r3, [sp, #4]
 8011aae:	f9b4 2000 	ldrsh.w	r2, [r4]
 8011ab2:	429a      	cmp	r2, r3
 8011ab4:	b29f      	uxth	r7, r3
 8011ab6:	da0d      	bge.n	8011ad4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x134>
 8011ab8:	f8ad 2010 	strh.w	r2, [sp, #16]
 8011abc:	1aba      	subs	r2, r7, r2
 8011abe:	f8ad a012 	strh.w	sl, [sp, #18]
 8011ac2:	f8ad 2014 	strh.w	r2, [sp, #20]
 8011ac6:	f8ad 9016 	strh.w	r9, [sp, #22]
 8011aca:	69ea      	ldr	r2, [r5, #28]
 8011acc:	4631      	mov	r1, r6
 8011ace:	4640      	mov	r0, r8
 8011ad0:	f7ff ff66 	bl	80119a0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8011ad4:	8822      	ldrh	r2, [r4, #0]
 8011ad6:	88a3      	ldrh	r3, [r4, #4]
 8011ad8:	445f      	add	r7, fp
 8011ada:	4413      	add	r3, r2
 8011adc:	b29b      	uxth	r3, r3
 8011ade:	b2bf      	uxth	r7, r7
 8011ae0:	b23a      	sxth	r2, r7
 8011ae2:	b219      	sxth	r1, r3
 8011ae4:	4291      	cmp	r1, r2
 8011ae6:	dd0d      	ble.n	8011b04 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x164>
 8011ae8:	1bdb      	subs	r3, r3, r7
 8011aea:	f8ad 2010 	strh.w	r2, [sp, #16]
 8011aee:	f8ad a012 	strh.w	sl, [sp, #18]
 8011af2:	f8ad 3014 	strh.w	r3, [sp, #20]
 8011af6:	f8ad 9016 	strh.w	r9, [sp, #22]
 8011afa:	69ea      	ldr	r2, [r5, #28]
 8011afc:	4631      	mov	r1, r6
 8011afe:	4640      	mov	r0, r8
 8011b00:	f7ff ff4e 	bl	80119a0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8011b04:	88e2      	ldrh	r2, [r4, #6]
 8011b06:	8863      	ldrh	r3, [r4, #2]
 8011b08:	4413      	add	r3, r2
 8011b0a:	9a00      	ldr	r2, [sp, #0]
 8011b0c:	444a      	add	r2, r9
 8011b0e:	b29b      	uxth	r3, r3
 8011b10:	fa1f f982 	uxth.w	r9, r2
 8011b14:	fa0f f289 	sxth.w	r2, r9
 8011b18:	b219      	sxth	r1, r3
 8011b1a:	428a      	cmp	r2, r1
 8011b1c:	da15      	bge.n	8011b4a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 8011b1e:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8011b22:	f9b4 0000 	ldrsh.w	r0, [r4]
 8011b26:	f8ad 1014 	strh.w	r1, [sp, #20]
 8011b2a:	eba3 0309 	sub.w	r3, r3, r9
 8011b2e:	f8ad 0010 	strh.w	r0, [sp, #16]
 8011b32:	f8ad 2012 	strh.w	r2, [sp, #18]
 8011b36:	f8ad 3016 	strh.w	r3, [sp, #22]
 8011b3a:	69ea      	ldr	r2, [r5, #28]
 8011b3c:	4631      	mov	r1, r6
 8011b3e:	e001      	b.n	8011b44 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a4>
 8011b40:	69ea      	ldr	r2, [r5, #28]
 8011b42:	4621      	mov	r1, r4
 8011b44:	4640      	mov	r0, r8
 8011b46:	f7ff ff2b 	bl	80119a0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8011b4a:	4628      	mov	r0, r5
 8011b4c:	f7ff fe94 	bl	8011878 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 8011b50:	6861      	ldr	r1, [r4, #4]
 8011b52:	4602      	mov	r2, r0
 8011b54:	6820      	ldr	r0, [r4, #0]
 8011b56:	4633      	mov	r3, r6
 8011b58:	c303      	stmia	r3!, {r0, r1}
 8011b5a:	4611      	mov	r1, r2
 8011b5c:	4630      	mov	r0, r6
 8011b5e:	f7f8 fcb3 	bl	800a4c8 <_ZN8touchgfx4RectaNERKS0_>
 8011b62:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 8011b66:	2b00      	cmp	r3, #0
 8011b68:	f77f af33 	ble.w	80119d2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8011b6c:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 8011b70:	2b00      	cmp	r3, #0
 8011b72:	f77f af2e 	ble.w	80119d2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8011b76:	4628      	mov	r0, r5
 8011b78:	f7ff fe9a 	bl	80118b0 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 8011b7c:	f8bd 3010 	ldrh.w	r3, [sp, #16]
 8011b80:	1a18      	subs	r0, r3, r0
 8011b82:	f8ad 0010 	strh.w	r0, [sp, #16]
 8011b86:	4628      	mov	r0, r5
 8011b88:	f7ff fea6 	bl	80118d8 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 8011b8c:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8011b90:	1a18      	subs	r0, r3, r0
 8011b92:	f8ad 0012 	strh.w	r0, [sp, #18]
 8011b96:	682b      	ldr	r3, [r5, #0]
 8011b98:	4631      	mov	r1, r6
 8011b9a:	689b      	ldr	r3, [r3, #8]
 8011b9c:	4628      	mov	r0, r5
 8011b9e:	4798      	blx	r3
 8011ba0:	e717      	b.n	80119d2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>

08011ba2 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>:
 8011ba2:	b570      	push	{r4, r5, r6, lr}
 8011ba4:	460c      	mov	r4, r1
 8011ba6:	b086      	sub	sp, #24
 8011ba8:	1d06      	adds	r6, r0, #4
 8011baa:	2300      	movs	r3, #0
 8011bac:	4631      	mov	r1, r6
 8011bae:	4605      	mov	r5, r0
 8011bb0:	a802      	add	r0, sp, #8
 8011bb2:	9301      	str	r3, [sp, #4]
 8011bb4:	f7ff f862 	bl	8010c7c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8011bb8:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8011bbc:	8822      	ldrh	r2, [r4, #0]
 8011bbe:	f8bd 100a 	ldrh.w	r1, [sp, #10]
 8011bc2:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8011bc6:	f8ad 0014 	strh.w	r0, [sp, #20]
 8011bca:	1ad2      	subs	r2, r2, r3
 8011bcc:	8863      	ldrh	r3, [r4, #2]
 8011bce:	f8ad 2010 	strh.w	r2, [sp, #16]
 8011bd2:	1a5b      	subs	r3, r3, r1
 8011bd4:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 8011bd8:	f8ad 1016 	strh.w	r1, [sp, #22]
 8011bdc:	aa01      	add	r2, sp, #4
 8011bde:	a904      	add	r1, sp, #16
 8011be0:	4630      	mov	r0, r6
 8011be2:	f8ad 3012 	strh.w	r3, [sp, #18]
 8011be6:	f7f8 fd47 	bl	800a678 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>
 8011bea:	9a01      	ldr	r2, [sp, #4]
 8011bec:	b11a      	cbz	r2, 8011bf6 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE+0x54>
 8011bee:	4621      	mov	r1, r4
 8011bf0:	4628      	mov	r0, r5
 8011bf2:	f7ff fed5 	bl	80119a0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8011bf6:	b006      	add	sp, #24
 8011bf8:	bd70      	pop	{r4, r5, r6, pc}

08011bfa <_ZN8touchgfx6Screen4drawERNS_4RectE>:
 8011bfa:	b530      	push	{r4, r5, lr}
 8011bfc:	4602      	mov	r2, r0
 8011bfe:	4604      	mov	r4, r0
 8011c00:	f852 0f08 	ldr.w	r0, [r2, #8]!
 8011c04:	b085      	sub	sp, #20
 8011c06:	460d      	mov	r5, r1
 8011c08:	6851      	ldr	r1, [r2, #4]
 8011c0a:	466b      	mov	r3, sp
 8011c0c:	c303      	stmia	r3!, {r0, r1}
 8011c0e:	4629      	mov	r1, r5
 8011c10:	4668      	mov	r0, sp
 8011c12:	f7f8 fc59 	bl	800a4c8 <_ZN8touchgfx4RectaNERKS0_>
 8011c16:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
 8011c1a:	b12b      	cbz	r3, 8011c28 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2e>
 8011c1c:	4669      	mov	r1, sp
 8011c1e:	4620      	mov	r0, r4
 8011c20:	f7ff ffbf 	bl	8011ba2 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>
 8011c24:	b005      	add	sp, #20
 8011c26:	bd30      	pop	{r4, r5, pc}
 8011c28:	3404      	adds	r4, #4
 8011c2a:	4621      	mov	r1, r4
 8011c2c:	a802      	add	r0, sp, #8
 8011c2e:	f7ff f825 	bl	8010c7c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8011c32:	f8bd 3000 	ldrh.w	r3, [sp]
 8011c36:	f8bd 2008 	ldrh.w	r2, [sp, #8]
 8011c3a:	1a9b      	subs	r3, r3, r2
 8011c3c:	f8ad 3000 	strh.w	r3, [sp]
 8011c40:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8011c44:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8011c48:	4669      	mov	r1, sp
 8011c4a:	1a9b      	subs	r3, r3, r2
 8011c4c:	4620      	mov	r0, r4
 8011c4e:	f8ad 3002 	strh.w	r3, [sp, #2]
 8011c52:	f7f8 fcd8 	bl	800a606 <_ZNK8touchgfx9Container4drawERKNS_4RectE>
 8011c56:	e7e5      	b.n	8011c24 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2a>

08011c58 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>:
 8011c58:	680a      	ldr	r2, [r1, #0]
 8011c5a:	460b      	mov	r3, r1
 8011c5c:	6992      	ldr	r2, [r2, #24]
 8011c5e:	1d01      	adds	r1, r0, #4
 8011c60:	4618      	mov	r0, r3
 8011c62:	4710      	bx	r2

08011c64 <_ZN8touchgfx12TextProviderC1Ev>:
 8011c64:	b538      	push	{r3, r4, r5, lr}
 8011c66:	2500      	movs	r5, #0
 8011c68:	2302      	movs	r3, #2
 8011c6a:	4604      	mov	r4, r0
 8011c6c:	e9c0 5500 	strd	r5, r5, [r0]
 8011c70:	7403      	strb	r3, [r0, #16]
 8011c72:	6145      	str	r5, [r0, #20]
 8011c74:	7605      	strb	r5, [r0, #24]
 8011c76:	83c5      	strh	r5, [r0, #30]
 8011c78:	8405      	strh	r5, [r0, #32]
 8011c7a:	86c5      	strh	r5, [r0, #54]	@ 0x36
 8011c7c:	8705      	strh	r5, [r0, #56]	@ 0x38
 8011c7e:	87c5      	strh	r5, [r0, #62]	@ 0x3e
 8011c80:	f8a0 5040 	strh.w	r5, [r0, #64]	@ 0x40
 8011c84:	e9c0 5511 	strd	r5, r5, [r0, #68]	@ 0x44
 8011c88:	220e      	movs	r2, #14
 8011c8a:	4629      	mov	r1, r5
 8011c8c:	304c      	adds	r0, #76	@ 0x4c
 8011c8e:	f011 f980 	bl	8022f92 <memset>
 8011c92:	2301      	movs	r3, #1
 8011c94:	4620      	mov	r0, r4
 8011c96:	f8a4 505a 	strh.w	r5, [r4, #90]	@ 0x5a
 8011c9a:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
 8011c9e:	f8a4 505e 	strh.w	r5, [r4, #94]	@ 0x5e
 8011ca2:	f884 3060 	strb.w	r3, [r4, #96]	@ 0x60
 8011ca6:	f884 5061 	strb.w	r5, [r4, #97]	@ 0x61
 8011caa:	f7f1 fa4d 	bl	8003148 <_ZN8touchgfx12TextProvider18initializeInternalEv>
 8011cae:	4620      	mov	r0, r4
 8011cb0:	bd38      	pop	{r3, r4, r5, pc}

08011cb2 <_ZN8touchgfx12TextProvider19getNextCharInternalEv>:
 8011cb2:	b530      	push	{r4, r5, lr}
 8011cb4:	2500      	movs	r5, #0
 8011cb6:	2401      	movs	r4, #1
 8011cb8:	6843      	ldr	r3, [r0, #4]
 8011cba:	b913      	cbnz	r3, 8011cc2 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x10>
 8011cbc:	6803      	ldr	r3, [r0, #0]
 8011cbe:	b313      	cbz	r3, 8011d06 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 8011cc0:	6043      	str	r3, [r0, #4]
 8011cc2:	7e03      	ldrb	r3, [r0, #24]
 8011cc4:	b143      	cbz	r3, 8011cd8 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x26>
 8011cc6:	6943      	ldr	r3, [r0, #20]
 8011cc8:	b12b      	cbz	r3, 8011cd6 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 8011cca:	881a      	ldrh	r2, [r3, #0]
 8011ccc:	b11a      	cbz	r2, 8011cd6 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 8011cce:	1c9a      	adds	r2, r3, #2
 8011cd0:	6142      	str	r2, [r0, #20]
 8011cd2:	8818      	ldrh	r0, [r3, #0]
 8011cd4:	bd30      	pop	{r4, r5, pc}
 8011cd6:	7605      	strb	r5, [r0, #24]
 8011cd8:	6843      	ldr	r3, [r0, #4]
 8011cda:	8819      	ldrh	r1, [r3, #0]
 8011cdc:	b199      	cbz	r1, 8011d06 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 8011cde:	1c9a      	adds	r2, r3, #2
 8011ce0:	2902      	cmp	r1, #2
 8011ce2:	6042      	str	r2, [r0, #4]
 8011ce4:	d1f5      	bne.n	8011cd2 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x20>
 8011ce6:	7c03      	ldrb	r3, [r0, #16]
 8011ce8:	2b01      	cmp	r3, #1
 8011cea:	d8e5      	bhi.n	8011cb8 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8011cec:	1c5a      	adds	r2, r3, #1
 8011cee:	3302      	adds	r3, #2
 8011cf0:	7402      	strb	r2, [r0, #16]
 8011cf2:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 8011cf6:	6143      	str	r3, [r0, #20]
 8011cf8:	2b00      	cmp	r3, #0
 8011cfa:	d0dd      	beq.n	8011cb8 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8011cfc:	881b      	ldrh	r3, [r3, #0]
 8011cfe:	2b00      	cmp	r3, #0
 8011d00:	d0da      	beq.n	8011cb8 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8011d02:	7604      	strb	r4, [r0, #24]
 8011d04:	e7d8      	b.n	8011cb8 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8011d06:	2000      	movs	r0, #0
 8011d08:	e7e4      	b.n	8011cd4 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x22>

08011d0a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>:
 8011d0a:	b430      	push	{r4, r5}
 8011d0c:	6001      	str	r1, [r0, #0]
 8011d0e:	2100      	movs	r1, #0
 8011d10:	6041      	str	r1, [r0, #4]
 8011d12:	6815      	ldr	r5, [r2, #0]
 8011d14:	6085      	str	r5, [r0, #8]
 8011d16:	6852      	ldr	r2, [r2, #4]
 8011d18:	6443      	str	r3, [r0, #68]	@ 0x44
 8011d1a:	9b02      	ldr	r3, [sp, #8]
 8011d1c:	60c2      	str	r2, [r0, #12]
 8011d1e:	7401      	strb	r1, [r0, #16]
 8011d20:	6141      	str	r1, [r0, #20]
 8011d22:	7601      	strb	r1, [r0, #24]
 8011d24:	8701      	strh	r1, [r0, #56]	@ 0x38
 8011d26:	8401      	strh	r1, [r0, #32]
 8011d28:	f8a0 1040 	strh.w	r1, [r0, #64]	@ 0x40
 8011d2c:	6483      	str	r3, [r0, #72]	@ 0x48
 8011d2e:	bc30      	pop	{r4, r5}
 8011d30:	f7f1 ba0a 	b.w	8003148 <_ZN8touchgfx12TextProvider18initializeInternalEv>

08011d34 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>:
 8011d34:	b5f0      	push	{r4, r5, r6, r7, lr}
 8011d36:	4605      	mov	r5, r0
 8011d38:	4608      	mov	r0, r1
 8011d3a:	b1e9      	cbz	r1, 8011d78 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x44>
 8011d3c:	f105 044c 	add.w	r4, r5, #76	@ 0x4c
 8011d40:	460b      	mov	r3, r1
 8011d42:	f101 0708 	add.w	r7, r1, #8
 8011d46:	4622      	mov	r2, r4
 8011d48:	6818      	ldr	r0, [r3, #0]
 8011d4a:	6859      	ldr	r1, [r3, #4]
 8011d4c:	4626      	mov	r6, r4
 8011d4e:	c603      	stmia	r6!, {r0, r1}
 8011d50:	3308      	adds	r3, #8
 8011d52:	42bb      	cmp	r3, r7
 8011d54:	4634      	mov	r4, r6
 8011d56:	d1f7      	bne.n	8011d48 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x14>
 8011d58:	6818      	ldr	r0, [r3, #0]
 8011d5a:	6030      	str	r0, [r6, #0]
 8011d5c:	889b      	ldrh	r3, [r3, #4]
 8011d5e:	80b3      	strh	r3, [r6, #4]
 8011d60:	f895 3059 	ldrb.w	r3, [r5, #89]	@ 0x59
 8011d64:	015b      	lsls	r3, r3, #5
 8011d66:	f403 7180 	and.w	r1, r3, #256	@ 0x100
 8011d6a:	f895 3052 	ldrb.w	r3, [r5, #82]	@ 0x52
 8011d6e:	430b      	orrs	r3, r1
 8011d70:	425b      	negs	r3, r3
 8011d72:	f885 3055 	strb.w	r3, [r5, #85]	@ 0x55
 8011d76:	4610      	mov	r0, r2
 8011d78:	bdf0      	pop	{r4, r5, r6, r7, pc}

08011d7a <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>:
 8011d7a:	b538      	push	{r3, r4, r5, lr}
 8011d7c:	460c      	mov	r4, r1
 8011d7e:	6811      	ldr	r1, [r2, #0]
 8011d80:	4610      	mov	r0, r2
 8011d82:	68cd      	ldr	r5, [r1, #12]
 8011d84:	4619      	mov	r1, r3
 8011d86:	47a8      	blx	r5
 8011d88:	2800      	cmp	r0, #0
 8011d8a:	bf08      	it	eq
 8011d8c:	4620      	moveq	r0, r4
 8011d8e:	bd38      	pop	{r3, r4, r5, pc}

08011d90 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>:
 8011d90:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011d94:	468c      	mov	ip, r1
 8011d96:	4605      	mov	r5, r0
 8011d98:	4614      	mov	r4, r2
 8011d9a:	b942      	cbnz	r2, 8011dae <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1e>
 8011d9c:	f8a5 205a 	strh.w	r2, [r5, #90]	@ 0x5a
 8011da0:	f8a5 205c 	strh.w	r2, [r5, #92]	@ 0x5c
 8011da4:	f8a5 205e 	strh.w	r2, [r5, #94]	@ 0x5e
 8011da8:	4620      	mov	r0, r4
 8011daa:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8011dae:	7b50      	ldrb	r0, [r2, #13]
 8011db0:	8893      	ldrh	r3, [r2, #4]
 8011db2:	0106      	lsls	r6, r0, #4
 8011db4:	f406 7280 	and.w	r2, r6, #256	@ 0x100
 8011db8:	79e6      	ldrb	r6, [r4, #7]
 8011dba:	f46f 6163 	mvn.w	r1, #3632	@ 0xe30
 8011dbe:	4316      	orrs	r6, r2
 8011dc0:	185a      	adds	r2, r3, r1
 8011dc2:	b291      	uxth	r1, r2
 8011dc4:	291d      	cmp	r1, #29
 8011dc6:	b2b7      	uxth	r7, r6
 8011dc8:	d87e      	bhi.n	8011ec8 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x138>
 8011dca:	2201      	movs	r2, #1
 8011dcc:	408a      	lsls	r2, r1
 8011dce:	498a      	ldr	r1, [pc, #552]	@ (8011ff8 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x268>)
 8011dd0:	420a      	tst	r2, r1
 8011dd2:	ea4f 06e6 	mov.w	r6, r6, asr #3
 8011dd6:	d12d      	bne.n	8011e34 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa4>
 8011dd8:	f412 7f60 	tst.w	r2, #896	@ 0x380
 8011ddc:	d074      	beq.n	8011ec8 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x138>
 8011dde:	f105 024c 	add.w	r2, r5, #76	@ 0x4c
 8011de2:	4623      	mov	r3, r4
 8011de4:	f104 0e08 	add.w	lr, r4, #8
 8011de8:	4614      	mov	r4, r2
 8011dea:	6818      	ldr	r0, [r3, #0]
 8011dec:	6859      	ldr	r1, [r3, #4]
 8011dee:	4694      	mov	ip, r2
 8011df0:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 8011df4:	3308      	adds	r3, #8
 8011df6:	4573      	cmp	r3, lr
 8011df8:	4662      	mov	r2, ip
 8011dfa:	d1f6      	bne.n	8011dea <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x5a>
 8011dfc:	6818      	ldr	r0, [r3, #0]
 8011dfe:	f8cc 0000 	str.w	r0, [ip]
 8011e02:	889b      	ldrh	r3, [r3, #4]
 8011e04:	f8ac 3004 	strh.w	r3, [ip, #4]
 8011e08:	f8b5 105c 	ldrh.w	r1, [r5, #92]	@ 0x5c
 8011e0c:	f895 0059 	ldrb.w	r0, [r5, #89]	@ 0x59
 8011e10:	b2b3      	uxth	r3, r6
 8011e12:	1aca      	subs	r2, r1, r3
 8011e14:	b292      	uxth	r2, r2
 8011e16:	f885 2054 	strb.w	r2, [r5, #84]	@ 0x54
 8011e1a:	10d2      	asrs	r2, r2, #3
 8011e1c:	f020 0060 	bic.w	r0, r0, #96	@ 0x60
 8011e20:	f002 0260 	and.w	r2, r2, #96	@ 0x60
 8011e24:	4302      	orrs	r2, r0
 8011e26:	1bcf      	subs	r7, r1, r7
 8011e28:	f885 2059 	strb.w	r2, [r5, #89]	@ 0x59
 8011e2c:	1afb      	subs	r3, r7, r3
 8011e2e:	f8a5 305c 	strh.w	r3, [r5, #92]	@ 0x5c
 8011e32:	e7b9      	b.n	8011da8 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x18>
 8011e34:	f105 024c 	add.w	r2, r5, #76	@ 0x4c
 8011e38:	4623      	mov	r3, r4
 8011e3a:	f104 0808 	add.w	r8, r4, #8
 8011e3e:	4614      	mov	r4, r2
 8011e40:	6818      	ldr	r0, [r3, #0]
 8011e42:	6859      	ldr	r1, [r3, #4]
 8011e44:	4696      	mov	lr, r2
 8011e46:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 8011e4a:	3308      	adds	r3, #8
 8011e4c:	4543      	cmp	r3, r8
 8011e4e:	4672      	mov	r2, lr
 8011e50:	d1f6      	bne.n	8011e40 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xb0>
 8011e52:	6818      	ldr	r0, [r3, #0]
 8011e54:	f8ce 0000 	str.w	r0, [lr]
 8011e58:	889b      	ldrh	r3, [r3, #4]
 8011e5a:	f8ae 3004 	strh.w	r3, [lr, #4]
 8011e5e:	8eeb      	ldrh	r3, [r5, #54]	@ 0x36
 8011e60:	eb05 0343 	add.w	r3, r5, r3, lsl #1
 8011e64:	8c59      	ldrh	r1, [r3, #34]	@ 0x22
 8011e66:	f640 6333 	movw	r3, #3635	@ 0xe33
 8011e6a:	4299      	cmp	r1, r3
 8011e6c:	d111      	bne.n	8011e92 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x102>
 8011e6e:	f8dc 3000 	ldr.w	r3, [ip]
 8011e72:	4660      	mov	r0, ip
 8011e74:	68db      	ldr	r3, [r3, #12]
 8011e76:	4798      	blx	r3
 8011e78:	7b41      	ldrb	r1, [r0, #13]
 8011e7a:	00cb      	lsls	r3, r1, #3
 8011e7c:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 8011e80:	7a03      	ldrb	r3, [r0, #8]
 8011e82:	4313      	orrs	r3, r2
 8011e84:	064a      	lsls	r2, r1, #25
 8011e86:	bf44      	itt	mi
 8011e88:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 8011e8c:	b21b      	sxthmi	r3, r3
 8011e8e:	f8a5 305a 	strh.w	r3, [r5, #90]	@ 0x5a
 8011e92:	f8b5 305a 	ldrh.w	r3, [r5, #90]	@ 0x5a
 8011e96:	f895 2059 	ldrb.w	r2, [r5, #89]	@ 0x59
 8011e9a:	443b      	add	r3, r7
 8011e9c:	4433      	add	r3, r6
 8011e9e:	b29b      	uxth	r3, r3
 8011ea0:	f8a5 305a 	strh.w	r3, [r5, #90]	@ 0x5a
 8011ea4:	f885 3054 	strb.w	r3, [r5, #84]	@ 0x54
 8011ea8:	10db      	asrs	r3, r3, #3
 8011eaa:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
 8011eae:	f003 0360 	and.w	r3, r3, #96	@ 0x60
 8011eb2:	4313      	orrs	r3, r2
 8011eb4:	f885 3059 	strb.w	r3, [r5, #89]	@ 0x59
 8011eb8:	f895 205e 	ldrb.w	r2, [r5, #94]	@ 0x5e
 8011ebc:	f895 3055 	ldrb.w	r3, [r5, #85]	@ 0x55
 8011ec0:	1a9b      	subs	r3, r3, r2
 8011ec2:	f885 3055 	strb.w	r3, [r5, #85]	@ 0x55
 8011ec6:	e76f      	b.n	8011da8 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x18>
 8011ec8:	f023 0204 	bic.w	r2, r3, #4
 8011ecc:	f640 611b 	movw	r1, #3611	@ 0xe1b
 8011ed0:	428a      	cmp	r2, r1
 8011ed2:	d003      	beq.n	8011edc <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x14c>
 8011ed4:	f640 621d 	movw	r2, #3613	@ 0xe1d
 8011ed8:	4293      	cmp	r3, r2
 8011eda:	d137      	bne.n	8011f4c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1bc>
 8011edc:	f105 064c 	add.w	r6, r5, #76	@ 0x4c
 8011ee0:	4622      	mov	r2, r4
 8011ee2:	f104 0808 	add.w	r8, r4, #8
 8011ee6:	4634      	mov	r4, r6
 8011ee8:	6810      	ldr	r0, [r2, #0]
 8011eea:	6851      	ldr	r1, [r2, #4]
 8011eec:	46b6      	mov	lr, r6
 8011eee:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 8011ef2:	3208      	adds	r2, #8
 8011ef4:	4542      	cmp	r2, r8
 8011ef6:	4676      	mov	r6, lr
 8011ef8:	d1f6      	bne.n	8011ee8 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x158>
 8011efa:	6810      	ldr	r0, [r2, #0]
 8011efc:	f8ce 0000 	str.w	r0, [lr]
 8011f00:	8892      	ldrh	r2, [r2, #4]
 8011f02:	f8ae 2004 	strh.w	r2, [lr, #4]
 8011f06:	3b01      	subs	r3, #1
 8011f08:	b29b      	uxth	r3, r3
 8011f0a:	4662      	mov	r2, ip
 8011f0c:	4621      	mov	r1, r4
 8011f0e:	4628      	mov	r0, r5
 8011f10:	f7ff ff33 	bl	8011d7a <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 8011f14:	7b41      	ldrb	r1, [r0, #13]
 8011f16:	00cb      	lsls	r3, r1, #3
 8011f18:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 8011f1c:	7a03      	ldrb	r3, [r0, #8]
 8011f1e:	0648      	lsls	r0, r1, #25
 8011f20:	ea43 0302 	orr.w	r3, r3, r2
 8011f24:	bf44      	itt	mi
 8011f26:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 8011f2a:	b21b      	sxthmi	r3, r3
 8011f2c:	f8a5 305a 	strh.w	r3, [r5, #90]	@ 0x5a
 8011f30:	f895 3059 	ldrb.w	r3, [r5, #89]	@ 0x59
 8011f34:	f895 2056 	ldrb.w	r2, [r5, #86]	@ 0x56
 8011f38:	005b      	lsls	r3, r3, #1
 8011f3a:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8011f3e:	4313      	orrs	r3, r2
 8011f40:	115a      	asrs	r2, r3, #5
 8011f42:	eb02 0393 	add.w	r3, r2, r3, lsr #2
 8011f46:	f8a5 305e 	strh.w	r3, [r5, #94]	@ 0x5e
 8011f4a:	e046      	b.n	8011fda <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x24a>
 8011f4c:	00c2      	lsls	r2, r0, #3
 8011f4e:	f402 7180 	and.w	r1, r2, #256	@ 0x100
 8011f52:	7a22      	ldrb	r2, [r4, #8]
 8011f54:	430a      	orrs	r2, r1
 8011f56:	0641      	lsls	r1, r0, #25
 8011f58:	bf44      	itt	mi
 8011f5a:	f5a2 7200 	submi.w	r2, r2, #512	@ 0x200
 8011f5e:	b212      	sxthmi	r2, r2
 8011f60:	f8a5 205a 	strh.w	r2, [r5, #90]	@ 0x5a
 8011f64:	f640 6109 	movw	r1, #3593	@ 0xe09
 8011f68:	f023 0210 	bic.w	r2, r3, #16
 8011f6c:	428a      	cmp	r2, r1
 8011f6e:	d003      	beq.n	8011f78 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1e8>
 8011f70:	f640 6213 	movw	r2, #3603	@ 0xe13
 8011f74:	4293      	cmp	r3, r2
 8011f76:	d13d      	bne.n	8011ff4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x264>
 8011f78:	f105 024c 	add.w	r2, r5, #76	@ 0x4c
 8011f7c:	f104 0808 	add.w	r8, r4, #8
 8011f80:	4696      	mov	lr, r2
 8011f82:	6820      	ldr	r0, [r4, #0]
 8011f84:	6861      	ldr	r1, [r4, #4]
 8011f86:	4616      	mov	r6, r2
 8011f88:	c603      	stmia	r6!, {r0, r1}
 8011f8a:	3408      	adds	r4, #8
 8011f8c:	4544      	cmp	r4, r8
 8011f8e:	4632      	mov	r2, r6
 8011f90:	d1f7      	bne.n	8011f82 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1f2>
 8011f92:	6820      	ldr	r0, [r4, #0]
 8011f94:	6030      	str	r0, [r6, #0]
 8011f96:	88a1      	ldrh	r1, [r4, #4]
 8011f98:	80b1      	strh	r1, [r6, #4]
 8011f9a:	f895 6059 	ldrb.w	r6, [r5, #89]	@ 0x59
 8011f9e:	0076      	lsls	r6, r6, #1
 8011fa0:	f406 7280 	and.w	r2, r6, #256	@ 0x100
 8011fa4:	f895 6056 	ldrb.w	r6, [r5, #86]	@ 0x56
 8011fa8:	4316      	orrs	r6, r2
 8011faa:	f640 6213 	movw	r2, #3603	@ 0xe13
 8011fae:	4293      	cmp	r3, r2
 8011fb0:	bf1a      	itte	ne
 8011fb2:	f103 33ff 	addne.w	r3, r3, #4294967295
 8011fb6:	b29b      	uxthne	r3, r3
 8011fb8:	f640 630c 	movweq	r3, #3596	@ 0xe0c
 8011fbc:	4662      	mov	r2, ip
 8011fbe:	4671      	mov	r1, lr
 8011fc0:	4628      	mov	r0, r5
 8011fc2:	4674      	mov	r4, lr
 8011fc4:	f7ff fed9 	bl	8011d7a <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 8011fc8:	7b43      	ldrb	r3, [r0, #13]
 8011fca:	7a82      	ldrb	r2, [r0, #10]
 8011fcc:	005b      	lsls	r3, r3, #1
 8011fce:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8011fd2:	4313      	orrs	r3, r2
 8011fd4:	1af6      	subs	r6, r6, r3
 8011fd6:	f8a5 605e 	strh.w	r6, [r5, #94]	@ 0x5e
 8011fda:	7b61      	ldrb	r1, [r4, #13]
 8011fdc:	00cb      	lsls	r3, r1, #3
 8011fde:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 8011fe2:	7a23      	ldrb	r3, [r4, #8]
 8011fe4:	4313      	orrs	r3, r2
 8011fe6:	064a      	lsls	r2, r1, #25
 8011fe8:	bf44      	itt	mi
 8011fea:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 8011fee:	b21b      	sxthmi	r3, r3
 8011ff0:	1bdb      	subs	r3, r3, r7
 8011ff2:	e71c      	b.n	8011e2e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x9e>
 8011ff4:	2300      	movs	r3, #0
 8011ff6:	e7a6      	b.n	8011f46 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1b6>
 8011ff8:	3fc00079 	.word	0x3fc00079

08011ffc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>:
 8011ffc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8012000:	4604      	mov	r4, r0
 8012002:	b942      	cbnz	r2, 8012016 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1a>
 8012004:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 8012008:	f8a0 305a 	strh.w	r3, [r0, #90]	@ 0x5a
 801200c:	f8a0 305c 	strh.w	r3, [r0, #92]	@ 0x5c
 8012010:	f8a4 305e 	strh.w	r3, [r4, #94]	@ 0x5e
 8012014:	e047      	b.n	80120a6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 8012016:	7b51      	ldrb	r1, [r2, #13]
 8012018:	8893      	ldrh	r3, [r2, #4]
 801201a:	010d      	lsls	r5, r1, #4
 801201c:	f405 7080 	and.w	r0, r5, #256	@ 0x100
 8012020:	79d5      	ldrb	r5, [r2, #7]
 8012022:	4305      	orrs	r5, r0
 8012024:	2d04      	cmp	r5, #4
 8012026:	bfcc      	ite	gt
 8012028:	ea4f 0e95 	movgt.w	lr, r5, lsr #2
 801202c:	f04f 0e01 	movle.w	lr, #1
 8012030:	f5b3 6fdd 	cmp.w	r3, #1768	@ 0x6e8
 8012034:	f200 80ab 	bhi.w	801218e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x192>
 8012038:	f240 60e7 	movw	r0, #1767	@ 0x6e7
 801203c:	4283      	cmp	r3, r0
 801203e:	d216      	bcs.n	801206e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8012040:	f240 605b 	movw	r0, #1627	@ 0x65b
 8012044:	4283      	cmp	r3, r0
 8012046:	d859      	bhi.n	80120fc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x100>
 8012048:	f240 6057 	movw	r0, #1623	@ 0x657
 801204c:	4283      	cmp	r3, r0
 801204e:	d20e      	bcs.n	801206e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8012050:	f5b3 6fca 	cmp.w	r3, #1616	@ 0x650
 8012054:	d24a      	bcs.n	80120ec <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xf0>
 8012056:	f240 604e 	movw	r0, #1614	@ 0x64e
 801205a:	4283      	cmp	r3, r0
 801205c:	d207      	bcs.n	801206e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801205e:	f240 601a 	movw	r0, #1562	@ 0x61a
 8012062:	4283      	cmp	r3, r0
 8012064:	d02a      	beq.n	80120bc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8012066:	d821      	bhi.n	80120ac <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xb0>
 8012068:	f5b3 6fc2 	cmp.w	r3, #1552	@ 0x610
 801206c:	d35b      	bcc.n	8012126 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 801206e:	f9b4 305a 	ldrsh.w	r3, [r4, #90]	@ 0x5a
 8012072:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
 8012076:	f040 80d0 	bne.w	801221a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 801207a:	f9b4 005c 	ldrsh.w	r0, [r4, #92]	@ 0x5c
 801207e:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
 8012082:	f040 80ca 	bne.w	801221a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 8012086:	00cb      	lsls	r3, r1, #3
 8012088:	f403 7080 	and.w	r0, r3, #256	@ 0x100
 801208c:	7a13      	ldrb	r3, [r2, #8]
 801208e:	0649      	lsls	r1, r1, #25
 8012090:	ea43 0300 	orr.w	r3, r3, r0
 8012094:	bf44      	itt	mi
 8012096:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 801209a:	b21b      	sxthmi	r3, r3
 801209c:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
 80120a0:	1b5d      	subs	r5, r3, r5
 80120a2:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
 80120a6:	4610      	mov	r0, r2
 80120a8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80120ac:	f240 604b 	movw	r0, #1611	@ 0x64b
 80120b0:	4283      	cmp	r3, r0
 80120b2:	d338      	bcc.n	8012126 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 80120b4:	f240 604c 	movw	r0, #1612	@ 0x64c
 80120b8:	4283      	cmp	r3, r0
 80120ba:	d9d8      	bls.n	801206e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80120bc:	f9b4 005a 	ldrsh.w	r0, [r4, #90]	@ 0x5a
 80120c0:	f9b4 305c 	ldrsh.w	r3, [r4, #92]	@ 0x5c
 80120c4:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
 80120c8:	f040 80f2 	bne.w	80122b0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 80120cc:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
 80120d0:	f040 80ee 	bne.w	80122b0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 80120d4:	00cb      	lsls	r3, r1, #3
 80120d6:	f403 7080 	and.w	r0, r3, #256	@ 0x100
 80120da:	7a13      	ldrb	r3, [r2, #8]
 80120dc:	064e      	lsls	r6, r1, #25
 80120de:	ea43 0300 	orr.w	r3, r3, r0
 80120e2:	bf44      	itt	mi
 80120e4:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 80120e8:	b21b      	sxthmi	r3, r3
 80120ea:	e7d9      	b.n	80120a0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa4>
 80120ec:	f240 6054 	movw	r0, #1620	@ 0x654
 80120f0:	4283      	cmp	r3, r0
 80120f2:	d8e3      	bhi.n	80120bc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80120f4:	f5b3 6fca 	cmp.w	r3, #1616	@ 0x650
 80120f8:	d9e0      	bls.n	80120bc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80120fa:	e7b8      	b.n	801206e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80120fc:	f240 6074 	movw	r0, #1652	@ 0x674
 8012100:	4283      	cmp	r3, r0
 8012102:	d0b4      	beq.n	801206e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8012104:	d82d      	bhi.n	8012162 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x166>
 8012106:	f240 605e 	movw	r0, #1630	@ 0x65e
 801210a:	4283      	cmp	r3, r0
 801210c:	d804      	bhi.n	8012118 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x11c>
 801210e:	f240 605d 	movw	r0, #1629	@ 0x65d
 8012112:	4283      	cmp	r3, r0
 8012114:	d3d2      	bcc.n	80120bc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8012116:	e7aa      	b.n	801206e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8012118:	f240 605f 	movw	r0, #1631	@ 0x65f
 801211c:	4283      	cmp	r3, r0
 801211e:	d0cd      	beq.n	80120bc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8012120:	f5b3 6fce 	cmp.w	r3, #1648	@ 0x670
 8012124:	d0a3      	beq.n	801206e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8012126:	00cb      	lsls	r3, r1, #3
 8012128:	f403 7080 	and.w	r0, r3, #256	@ 0x100
 801212c:	7a13      	ldrb	r3, [r2, #8]
 801212e:	0649      	lsls	r1, r1, #25
 8012130:	ea43 0300 	orr.w	r3, r3, r0
 8012134:	bf44      	itt	mi
 8012136:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 801213a:	b21b      	sxthmi	r3, r3
 801213c:	1b5d      	subs	r5, r3, r5
 801213e:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
 8012142:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
 8012146:	7b53      	ldrb	r3, [r2, #13]
 8012148:	015b      	lsls	r3, r3, #5
 801214a:	f403 7180 	and.w	r1, r3, #256	@ 0x100
 801214e:	7993      	ldrb	r3, [r2, #6]
 8012150:	430b      	orrs	r3, r1
 8012152:	005b      	lsls	r3, r3, #1
 8012154:	2105      	movs	r1, #5
 8012156:	fb93 f3f1 	sdiv	r3, r3, r1
 801215a:	f992 1009 	ldrsb.w	r1, [r2, #9]
 801215e:	440b      	add	r3, r1
 8012160:	e756      	b.n	8012010 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x14>
 8012162:	f240 60e2 	movw	r0, #1762	@ 0x6e2
 8012166:	4283      	cmp	r3, r0
 8012168:	d809      	bhi.n	801217e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x182>
 801216a:	f240 60df 	movw	r0, #1759	@ 0x6df
 801216e:	4283      	cmp	r3, r0
 8012170:	f4bf af7d 	bcs.w	801206e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8012174:	f2a3 63d6 	subw	r3, r3, #1750	@ 0x6d6
 8012178:	2b05      	cmp	r3, #5
 801217a:	d8d4      	bhi.n	8012126 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 801217c:	e777      	b.n	801206e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801217e:	f240 60e3 	movw	r0, #1763	@ 0x6e3
 8012182:	4283      	cmp	r3, r0
 8012184:	d09a      	beq.n	80120bc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8012186:	f240 60e4 	movw	r0, #1764	@ 0x6e4
 801218a:	4283      	cmp	r3, r0
 801218c:	e7ca      	b.n	8012124 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 801218e:	f5b3 6f0f 	cmp.w	r3, #2288	@ 0x8f0
 8012192:	d22b      	bcs.n	80121ec <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1f0>
 8012194:	f640 00ed 	movw	r0, #2285	@ 0x8ed
 8012198:	4283      	cmp	r3, r0
 801219a:	d28f      	bcs.n	80120bc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801219c:	f640 00e5 	movw	r0, #2277	@ 0x8e5
 80121a0:	4283      	cmp	r3, r0
 80121a2:	d816      	bhi.n	80121d2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d6>
 80121a4:	f640 00e4 	movw	r0, #2276	@ 0x8e4
 80121a8:	4283      	cmp	r3, r0
 80121aa:	f4bf af60 	bcs.w	801206e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80121ae:	f240 60ec 	movw	r0, #1772	@ 0x6ec
 80121b2:	4283      	cmp	r3, r0
 80121b4:	d80a      	bhi.n	80121cc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d0>
 80121b6:	f240 60eb 	movw	r0, #1771	@ 0x6eb
 80121ba:	4283      	cmp	r3, r0
 80121bc:	f4bf af57 	bcs.w	801206e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80121c0:	f240 60ea 	movw	r0, #1770	@ 0x6ea
 80121c4:	4283      	cmp	r3, r0
 80121c6:	f43f af79 	beq.w	80120bc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80121ca:	e7ac      	b.n	8012126 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 80121cc:	f240 60ed 	movw	r0, #1773	@ 0x6ed
 80121d0:	e7f8      	b.n	80121c4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1c8>
 80121d2:	f640 00e8 	movw	r0, #2280	@ 0x8e8
 80121d6:	4283      	cmp	r3, r0
 80121d8:	d802      	bhi.n	80121e0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e4>
 80121da:	f640 00e7 	movw	r0, #2279	@ 0x8e7
 80121de:	e798      	b.n	8012112 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x116>
 80121e0:	f640 00e9 	movw	r0, #2281	@ 0x8e9
 80121e4:	4283      	cmp	r3, r0
 80121e6:	f47f af42 	bne.w	801206e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80121ea:	e767      	b.n	80120bc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80121ec:	f640 00f6 	movw	r0, #2294	@ 0x8f6
 80121f0:	4283      	cmp	r3, r0
 80121f2:	f43f af63 	beq.w	80120bc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80121f6:	d802      	bhi.n	80121fe <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x202>
 80121f8:	f640 00f2 	movw	r0, #2290	@ 0x8f2
 80121fc:	e7f2      	b.n	80121e4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e8>
 80121fe:	f640 00fa 	movw	r0, #2298	@ 0x8fa
 8012202:	4283      	cmp	r3, r0
 8012204:	d805      	bhi.n	8012212 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x216>
 8012206:	f640 00f9 	movw	r0, #2297	@ 0x8f9
 801220a:	4283      	cmp	r3, r0
 801220c:	f4ff af2f 	bcc.w	801206e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8012210:	e754      	b.n	80120bc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8012212:	f640 00fe 	movw	r0, #2302	@ 0x8fe
 8012216:	4283      	cmp	r3, r0
 8012218:	e7af      	b.n	801217a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x17e>
 801221a:	f104 0c4c 	add.w	ip, r4, #76	@ 0x4c
 801221e:	4617      	mov	r7, r2
 8012220:	f102 0808 	add.w	r8, r2, #8
 8012224:	4666      	mov	r6, ip
 8012226:	6838      	ldr	r0, [r7, #0]
 8012228:	6879      	ldr	r1, [r7, #4]
 801222a:	46e6      	mov	lr, ip
 801222c:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 8012230:	3708      	adds	r7, #8
 8012232:	4547      	cmp	r7, r8
 8012234:	46f4      	mov	ip, lr
 8012236:	d1f6      	bne.n	8012226 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x22a>
 8012238:	6838      	ldr	r0, [r7, #0]
 801223a:	f8ce 0000 	str.w	r0, [lr]
 801223e:	88b9      	ldrh	r1, [r7, #4]
 8012240:	f8ae 1004 	strh.w	r1, [lr, #4]
 8012244:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	@ 0x5e
 8012248:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
 801224c:	d009      	beq.n	8012262 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x266>
 801224e:	7b51      	ldrb	r1, [r2, #13]
 8012250:	7992      	ldrb	r2, [r2, #6]
 8012252:	0149      	lsls	r1, r1, #5
 8012254:	f401 7180 	and.w	r1, r1, #256	@ 0x100
 8012258:	4311      	orrs	r1, r2
 801225a:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 801225e:	f884 0055 	strb.w	r0, [r4, #85]	@ 0x55
 8012262:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
 8012266:	b2ad      	uxth	r5, r5
 8012268:	d00d      	beq.n	8012286 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x28a>
 801226a:	442b      	add	r3, r5
 801226c:	b29b      	uxth	r3, r3
 801226e:	f894 2059 	ldrb.w	r2, [r4, #89]	@ 0x59
 8012272:	f884 3054 	strb.w	r3, [r4, #84]	@ 0x54
 8012276:	10db      	asrs	r3, r3, #3
 8012278:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
 801227c:	f003 0360 	and.w	r3, r3, #96	@ 0x60
 8012280:	4313      	orrs	r3, r2
 8012282:	f884 3059 	strb.w	r3, [r4, #89]	@ 0x59
 8012286:	f894 1059 	ldrb.w	r1, [r4, #89]	@ 0x59
 801228a:	00cb      	lsls	r3, r1, #3
 801228c:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 8012290:	f894 3054 	ldrb.w	r3, [r4, #84]	@ 0x54
 8012294:	064f      	lsls	r7, r1, #25
 8012296:	ea43 0302 	orr.w	r3, r3, r2
 801229a:	bf44      	itt	mi
 801229c:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 80122a0:	b21b      	sxthmi	r3, r3
 80122a2:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
 80122a6:	1b5b      	subs	r3, r3, r5
 80122a8:	f8a4 305c 	strh.w	r3, [r4, #92]	@ 0x5c
 80122ac:	4632      	mov	r2, r6
 80122ae:	e6fa      	b.n	80120a6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 80122b0:	f104 0c4c 	add.w	ip, r4, #76	@ 0x4c
 80122b4:	4617      	mov	r7, r2
 80122b6:	f102 0908 	add.w	r9, r2, #8
 80122ba:	4666      	mov	r6, ip
 80122bc:	6838      	ldr	r0, [r7, #0]
 80122be:	6879      	ldr	r1, [r7, #4]
 80122c0:	46e0      	mov	r8, ip
 80122c2:	e8a8 0003 	stmia.w	r8!, {r0, r1}
 80122c6:	3708      	adds	r7, #8
 80122c8:	454f      	cmp	r7, r9
 80122ca:	46c4      	mov	ip, r8
 80122cc:	d1f6      	bne.n	80122bc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2c0>
 80122ce:	6838      	ldr	r0, [r7, #0]
 80122d0:	f8c8 0000 	str.w	r0, [r8]
 80122d4:	88b9      	ldrh	r1, [r7, #4]
 80122d6:	f8a8 1004 	strh.w	r1, [r8, #4]
 80122da:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	@ 0x5e
 80122de:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
 80122e2:	d009      	beq.n	80122f8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2fc>
 80122e4:	7b51      	ldrb	r1, [r2, #13]
 80122e6:	7992      	ldrb	r2, [r2, #6]
 80122e8:	0149      	lsls	r1, r1, #5
 80122ea:	f401 7180 	and.w	r1, r1, #256	@ 0x100
 80122ee:	4311      	orrs	r1, r2
 80122f0:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 80122f4:	f884 0055 	strb.w	r0, [r4, #85]	@ 0x55
 80122f8:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
 80122fc:	d00e      	beq.n	801231c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x320>
 80122fe:	eba3 030e 	sub.w	r3, r3, lr
 8012302:	f894 2059 	ldrb.w	r2, [r4, #89]	@ 0x59
 8012306:	b29b      	uxth	r3, r3
 8012308:	f884 3054 	strb.w	r3, [r4, #84]	@ 0x54
 801230c:	10db      	asrs	r3, r3, #3
 801230e:	f003 0360 	and.w	r3, r3, #96	@ 0x60
 8012312:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
 8012316:	4313      	orrs	r3, r2
 8012318:	f884 3059 	strb.w	r3, [r4, #89]	@ 0x59
 801231c:	f894 1059 	ldrb.w	r1, [r4, #89]	@ 0x59
 8012320:	00cb      	lsls	r3, r1, #3
 8012322:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 8012326:	f894 3054 	ldrb.w	r3, [r4, #84]	@ 0x54
 801232a:	0648      	lsls	r0, r1, #25
 801232c:	ea43 0302 	orr.w	r3, r3, r2
 8012330:	bf44      	itt	mi
 8012332:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 8012336:	b21b      	sxthmi	r3, r3
 8012338:	1b5d      	subs	r5, r3, r5
 801233a:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
 801233e:	e7b5      	b.n	80122ac <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b0>

08012340 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>:
 8012340:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012344:	461e      	mov	r6, r3
 8012346:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
 8012348:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801234c:	4604      	mov	r4, r0
 801234e:	4617      	mov	r7, r2
 8012350:	f8b3 8022 	ldrh.w	r8, [r3, #34]	@ 0x22
 8012354:	f7f0 feb6 	bl	80030c4 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8012358:	4605      	mov	r5, r0
 801235a:	b918      	cbnz	r0, 8012364 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x24>
 801235c:	6030      	str	r0, [r6, #0]
 801235e:	4628      	mov	r0, r5
 8012360:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8012364:	683b      	ldr	r3, [r7, #0]
 8012366:	4601      	mov	r1, r0
 8012368:	68db      	ldr	r3, [r3, #12]
 801236a:	4638      	mov	r0, r7
 801236c:	4798      	blx	r3
 801236e:	f5a8 63c0 	sub.w	r3, r8, #1536	@ 0x600
 8012372:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
 8012376:	4602      	mov	r2, r0
 8012378:	6030      	str	r0, [r6, #0]
 801237a:	d213      	bcs.n	80123a4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x64>
 801237c:	4643      	mov	r3, r8
 801237e:	4639      	mov	r1, r7
 8012380:	4620      	mov	r0, r4
 8012382:	f7ff fe3b 	bl	8011ffc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 8012386:	6030      	str	r0, [r6, #0]
 8012388:	6833      	ldr	r3, [r6, #0]
 801238a:	b143      	cbz	r3, 801239e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x5e>
 801238c:	7b5a      	ldrb	r2, [r3, #13]
 801238e:	7a9b      	ldrb	r3, [r3, #10]
 8012390:	0052      	lsls	r2, r2, #1
 8012392:	f402 7280 	and.w	r2, r2, #256	@ 0x100
 8012396:	4313      	orrs	r3, r2
 8012398:	bf0c      	ite	eq
 801239a:	2301      	moveq	r3, #1
 801239c:	2300      	movne	r3, #0
 801239e:	f884 3061 	strb.w	r3, [r4, #97]	@ 0x61
 80123a2:	e7dc      	b.n	801235e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x1e>
 80123a4:	f5a5 6360 	sub.w	r3, r5, #3584	@ 0xe00
 80123a8:	b29b      	uxth	r3, r3
 80123aa:	2b7f      	cmp	r3, #127	@ 0x7f
 80123ac:	d804      	bhi.n	80123b8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x78>
 80123ae:	4639      	mov	r1, r7
 80123b0:	4620      	mov	r0, r4
 80123b2:	f7ff fced 	bl	8011d90 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 80123b6:	e7e6      	b.n	8012386 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>
 80123b8:	f894 3061 	ldrb.w	r3, [r4, #97]	@ 0x61
 80123bc:	2b00      	cmp	r3, #0
 80123be:	d0e3      	beq.n	8012388 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 80123c0:	f640 1302 	movw	r3, #2306	@ 0x902
 80123c4:	429d      	cmp	r5, r3
 80123c6:	d1df      	bne.n	8012388 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 80123c8:	4601      	mov	r1, r0
 80123ca:	4620      	mov	r0, r4
 80123cc:	f7ff fcb2 	bl	8011d34 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 80123d0:	e7d9      	b.n	8012386 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>

080123d2 <_ZN8touchgfx12TextProvider15fillInputBufferEv>:
 80123d2:	b510      	push	{r4, lr}
 80123d4:	4604      	mov	r4, r0
 80123d6:	f8b4 1040 	ldrh.w	r1, [r4, #64]	@ 0x40
 80123da:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
 80123dc:	b1f1      	cbz	r1, 801241c <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 80123de:	2b0a      	cmp	r3, #10
 80123e0:	d02f      	beq.n	8012442 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 80123e2:	8fe2      	ldrh	r2, [r4, #62]	@ 0x3e
 80123e4:	eb04 0042 	add.w	r0, r4, r2, lsl #1
 80123e8:	3901      	subs	r1, #1
 80123ea:	8f40      	ldrh	r0, [r0, #58]	@ 0x3a
 80123ec:	f8a4 1040 	strh.w	r1, [r4, #64]	@ 0x40
 80123f0:	1c51      	adds	r1, r2, #1
 80123f2:	b289      	uxth	r1, r1
 80123f4:	2901      	cmp	r1, #1
 80123f6:	bf84      	itt	hi
 80123f8:	f102 32ff 	addhi.w	r2, r2, #4294967295
 80123fc:	87e2      	strhhi	r2, [r4, #62]	@ 0x3e
 80123fe:	f103 0201 	add.w	r2, r3, #1
 8012402:	8722      	strh	r2, [r4, #56]	@ 0x38
 8012404:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
 8012406:	bf98      	it	ls
 8012408:	87e1      	strhls	r1, [r4, #62]	@ 0x3e
 801240a:	4413      	add	r3, r2
 801240c:	b29b      	uxth	r3, r3
 801240e:	2b09      	cmp	r3, #9
 8012410:	bf88      	it	hi
 8012412:	3b0a      	subhi	r3, #10
 8012414:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8012418:	8458      	strh	r0, [r3, #34]	@ 0x22
 801241a:	e7dc      	b.n	80123d6 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4>
 801241c:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
 801241e:	2b0a      	cmp	r3, #10
 8012420:	d00f      	beq.n	8012442 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 8012422:	4620      	mov	r0, r4
 8012424:	f7ff fc45 	bl	8011cb2 <_ZN8touchgfx12TextProvider19getNextCharInternalEv>
 8012428:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
 801242a:	1c5a      	adds	r2, r3, #1
 801242c:	8722      	strh	r2, [r4, #56]	@ 0x38
 801242e:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
 8012430:	4413      	add	r3, r2
 8012432:	b29b      	uxth	r3, r3
 8012434:	2b09      	cmp	r3, #9
 8012436:	bf88      	it	hi
 8012438:	3b0a      	subhi	r3, #10
 801243a:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801243e:	8458      	strh	r0, [r3, #34]	@ 0x22
 8012440:	e7ec      	b.n	801241c <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 8012442:	bd10      	pop	{r4, pc}

08012444 <_ZN8touchgfx12TextProvider11getNextCharEv>:
 8012444:	b538      	push	{r3, r4, r5, lr}
 8012446:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
 8012448:	eb00 0243 	add.w	r2, r0, r3, lsl #1
 801244c:	4604      	mov	r4, r0
 801244e:	8c55      	ldrh	r5, [r2, #34]	@ 0x22
 8012450:	8f02      	ldrh	r2, [r0, #56]	@ 0x38
 8012452:	3a01      	subs	r2, #1
 8012454:	8702      	strh	r2, [r0, #56]	@ 0x38
 8012456:	1c5a      	adds	r2, r3, #1
 8012458:	b292      	uxth	r2, r2
 801245a:	2a09      	cmp	r2, #9
 801245c:	bf86      	itte	hi
 801245e:	3b09      	subhi	r3, #9
 8012460:	86c3      	strhhi	r3, [r0, #54]	@ 0x36
 8012462:	86c2      	strhls	r2, [r0, #54]	@ 0x36
 8012464:	f7ff ffb5 	bl	80123d2 <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 8012468:	8c23      	ldrh	r3, [r4, #32]
 801246a:	2b01      	cmp	r3, #1
 801246c:	bf9c      	itt	ls
 801246e:	3301      	addls	r3, #1
 8012470:	8423      	strhls	r3, [r4, #32]
 8012472:	8be3      	ldrh	r3, [r4, #30]
 8012474:	b90b      	cbnz	r3, 801247a <_ZN8touchgfx12TextProvider11getNextCharEv+0x36>
 8012476:	2302      	movs	r3, #2
 8012478:	83e3      	strh	r3, [r4, #30]
 801247a:	8be3      	ldrh	r3, [r4, #30]
 801247c:	3b01      	subs	r3, #1
 801247e:	b29b      	uxth	r3, r3
 8012480:	83e3      	strh	r3, [r4, #30]
 8012482:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8012486:	4628      	mov	r0, r5
 8012488:	8365      	strh	r5, [r4, #26]
 801248a:	bd38      	pop	{r3, r4, r5, pc}

0801248c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>:
 801248c:	428a      	cmp	r2, r1
 801248e:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8012492:	8ec7      	ldrh	r7, [r0, #54]	@ 0x36
 8012494:	d931      	bls.n	80124fa <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x6e>
 8012496:	8f05      	ldrh	r5, [r0, #56]	@ 0x38
 8012498:	f8b0 8040 	ldrh.w	r8, [r0, #64]	@ 0x40
 801249c:	f8b0 c03e 	ldrh.w	ip, [r0, #62]	@ 0x3e
 80124a0:	19ee      	adds	r6, r5, r7
 80124a2:	1a54      	subs	r4, r2, r1
 80124a4:	3e01      	subs	r6, #1
 80124a6:	fa1f fe84 	uxth.w	lr, r4
 80124aa:	b2b4      	uxth	r4, r6
 80124ac:	eba4 090e 	sub.w	r9, r4, lr
 80124b0:	fa1f f989 	uxth.w	r9, r9
 80124b4:	2c09      	cmp	r4, #9
 80124b6:	4626      	mov	r6, r4
 80124b8:	bf88      	it	hi
 80124ba:	f1a4 060a 	subhi.w	r6, r4, #10
 80124be:	f1bc 0f00 	cmp.w	ip, #0
 80124c2:	bf08      	it	eq
 80124c4:	f04f 0c02 	moveq.w	ip, #2
 80124c8:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 80124cc:	f10c 3cff 	add.w	ip, ip, #4294967295
 80124d0:	fa1f fc8c 	uxth.w	ip, ip
 80124d4:	3c01      	subs	r4, #1
 80124d6:	f8b6 a022 	ldrh.w	sl, [r6, #34]	@ 0x22
 80124da:	b2a4      	uxth	r4, r4
 80124dc:	eb00 064c 	add.w	r6, r0, ip, lsl #1
 80124e0:	454c      	cmp	r4, r9
 80124e2:	f8a6 a03a 	strh.w	sl, [r6, #58]	@ 0x3a
 80124e6:	d1e5      	bne.n	80124b4 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x28>
 80124e8:	eba5 050e 	sub.w	r5, r5, lr
 80124ec:	eb0e 0408 	add.w	r4, lr, r8
 80124f0:	8705      	strh	r5, [r0, #56]	@ 0x38
 80124f2:	f8a0 4040 	strh.w	r4, [r0, #64]	@ 0x40
 80124f6:	f8a0 c03e 	strh.w	ip, [r0, #62]	@ 0x3e
 80124fa:	8f04      	ldrh	r4, [r0, #56]	@ 0x38
 80124fc:	1a64      	subs	r4, r4, r1
 80124fe:	4439      	add	r1, r7
 8012500:	b289      	uxth	r1, r1
 8012502:	2909      	cmp	r1, #9
 8012504:	bf88      	it	hi
 8012506:	390a      	subhi	r1, #10
 8012508:	8704      	strh	r4, [r0, #56]	@ 0x38
 801250a:	86c1      	strh	r1, [r0, #54]	@ 0x36
 801250c:	250a      	movs	r5, #10
 801250e:	b18a      	cbz	r2, 8012534 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0xa8>
 8012510:	8f01      	ldrh	r1, [r0, #56]	@ 0x38
 8012512:	3a01      	subs	r2, #1
 8012514:	b292      	uxth	r2, r2
 8012516:	3101      	adds	r1, #1
 8012518:	f833 4012 	ldrh.w	r4, [r3, r2, lsl #1]
 801251c:	8701      	strh	r1, [r0, #56]	@ 0x38
 801251e:	8ec1      	ldrh	r1, [r0, #54]	@ 0x36
 8012520:	b901      	cbnz	r1, 8012524 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x98>
 8012522:	86c5      	strh	r5, [r0, #54]	@ 0x36
 8012524:	8ec1      	ldrh	r1, [r0, #54]	@ 0x36
 8012526:	3901      	subs	r1, #1
 8012528:	b289      	uxth	r1, r1
 801252a:	86c1      	strh	r1, [r0, #54]	@ 0x36
 801252c:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 8012530:	844c      	strh	r4, [r1, #34]	@ 0x22
 8012532:	e7ec      	b.n	801250e <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x82>
 8012534:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8012538:	f7ff bf4b 	b.w	80123d2 <_ZN8touchgfx12TextProvider15fillInputBufferEv>

0801253c <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>:
 801253c:	b570      	push	{r4, r5, r6, lr}
 801253e:	2500      	movs	r5, #0
 8012540:	4295      	cmp	r5, r2
 8012542:	d011      	beq.n	8012568 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x2c>
 8012544:	8bc4      	ldrh	r4, [r0, #30]
 8012546:	f831 6b02 	ldrh.w	r6, [r1], #2
 801254a:	4414      	add	r4, r2
 801254c:	3c01      	subs	r4, #1
 801254e:	1b64      	subs	r4, r4, r5
 8012550:	b2a4      	uxth	r4, r4
 8012552:	2c01      	cmp	r4, #1
 8012554:	bf88      	it	hi
 8012556:	3c02      	subhi	r4, #2
 8012558:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801255c:	8b64      	ldrh	r4, [r4, #26]
 801255e:	42b4      	cmp	r4, r6
 8012560:	d117      	bne.n	8012592 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x56>
 8012562:	3501      	adds	r5, #1
 8012564:	b2ad      	uxth	r5, r5
 8012566:	e7eb      	b.n	8012540 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x4>
 8012568:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801256c:	2400      	movs	r4, #0
 801256e:	4413      	add	r3, r2
 8012570:	b2a2      	uxth	r2, r4
 8012572:	429a      	cmp	r2, r3
 8012574:	da0f      	bge.n	8012596 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x5a>
 8012576:	8ec6      	ldrh	r6, [r0, #54]	@ 0x36
 8012578:	f831 5014 	ldrh.w	r5, [r1, r4, lsl #1]
 801257c:	4432      	add	r2, r6
 801257e:	b292      	uxth	r2, r2
 8012580:	2a09      	cmp	r2, #9
 8012582:	bf88      	it	hi
 8012584:	3a0a      	subhi	r2, #10
 8012586:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 801258a:	3401      	adds	r4, #1
 801258c:	8c52      	ldrh	r2, [r2, #34]	@ 0x22
 801258e:	42aa      	cmp	r2, r5
 8012590:	d0ee      	beq.n	8012570 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x34>
 8012592:	2000      	movs	r0, #0
 8012594:	bd70      	pop	{r4, r5, r6, pc}
 8012596:	2001      	movs	r0, #1
 8012598:	e7fc      	b.n	8012594 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x58>

0801259a <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>:
 801259a:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801259e:	4605      	mov	r5, r0
 80125a0:	4616      	mov	r6, r2
 80125a2:	1c8c      	adds	r4, r1, #2
 80125a4:	8809      	ldrh	r1, [r1, #0]
 80125a6:	ea4f 3a11 	mov.w	sl, r1, lsr #12
 80125aa:	f834 301a 	ldrh.w	r3, [r4, sl, lsl #1]
 80125ae:	42b3      	cmp	r3, r6
 80125b0:	d124      	bne.n	80125fc <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x62>
 80125b2:	f3c1 2903 	ubfx	r9, r1, #8, #4
 80125b6:	f3c1 1803 	ubfx	r8, r1, #4, #4
 80125ba:	f001 070f 	and.w	r7, r1, #15
 80125be:	f8cd 8000 	str.w	r8, [sp]
 80125c2:	464b      	mov	r3, r9
 80125c4:	4652      	mov	r2, sl
 80125c6:	4621      	mov	r1, r4
 80125c8:	4628      	mov	r0, r5
 80125ca:	f7ff ffb7 	bl	801253c <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>
 80125ce:	4683      	mov	fp, r0
 80125d0:	b168      	cbz	r0, 80125ee <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x54>
 80125d2:	eb0a 0109 	add.w	r1, sl, r9
 80125d6:	4441      	add	r1, r8
 80125d8:	eb04 0341 	add.w	r3, r4, r1, lsl #1
 80125dc:	463a      	mov	r2, r7
 80125de:	4649      	mov	r1, r9
 80125e0:	4628      	mov	r0, r5
 80125e2:	f7ff ff53 	bl	801248c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>
 80125e6:	4658      	mov	r0, fp
 80125e8:	b003      	add	sp, #12
 80125ea:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80125ee:	eb07 010a 	add.w	r1, r7, sl
 80125f2:	4449      	add	r1, r9
 80125f4:	4441      	add	r1, r8
 80125f6:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 80125fa:	e7d2      	b.n	80125a2 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x8>
 80125fc:	f04f 0b00 	mov.w	fp, #0
 8012600:	e7f1      	b.n	80125e6 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x4c>

08012602 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>:
 8012602:	b570      	push	{r4, r5, r6, lr}
 8012604:	8810      	ldrh	r0, [r2, #0]
 8012606:	4298      	cmp	r0, r3
 8012608:	d817      	bhi.n	801263a <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 801260a:	1e48      	subs	r0, r1, #1
 801260c:	f832 0020 	ldrh.w	r0, [r2, r0, lsl #2]
 8012610:	4298      	cmp	r0, r3
 8012612:	d312      	bcc.n	801263a <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 8012614:	2400      	movs	r4, #0
 8012616:	428c      	cmp	r4, r1
 8012618:	d20f      	bcs.n	801263a <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 801261a:	1860      	adds	r0, r4, r1
 801261c:	1040      	asrs	r0, r0, #1
 801261e:	0085      	lsls	r5, r0, #2
 8012620:	f832 6020 	ldrh.w	r6, [r2, r0, lsl #2]
 8012624:	42b3      	cmp	r3, r6
 8012626:	d902      	bls.n	801262e <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x2c>
 8012628:	3001      	adds	r0, #1
 801262a:	b284      	uxth	r4, r0
 801262c:	e7f3      	b.n	8012616 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 801262e:	d201      	bcs.n	8012634 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x32>
 8012630:	b281      	uxth	r1, r0
 8012632:	e7f0      	b.n	8012616 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 8012634:	442a      	add	r2, r5
 8012636:	8850      	ldrh	r0, [r2, #2]
 8012638:	bd70      	pop	{r4, r5, r6, pc}
 801263a:	2000      	movs	r0, #0
 801263c:	e7fc      	b.n	8012638 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x36>

0801263e <_ZN8touchgfx12TextProvider16substituteGlyphsEv>:
 801263e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012642:	6c45      	ldr	r5, [r0, #68]	@ 0x44
 8012644:	886f      	ldrh	r7, [r5, #2]
 8012646:	4604      	mov	r4, r0
 8012648:	087f      	lsrs	r7, r7, #1
 801264a:	260b      	movs	r6, #11
 801264c:	3e01      	subs	r6, #1
 801264e:	d013      	beq.n	8012678 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 8012650:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 8012652:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8012656:	462a      	mov	r2, r5
 8012658:	f8b3 8022 	ldrh.w	r8, [r3, #34]	@ 0x22
 801265c:	4639      	mov	r1, r7
 801265e:	4643      	mov	r3, r8
 8012660:	4620      	mov	r0, r4
 8012662:	f7ff ffce 	bl	8012602 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>
 8012666:	b138      	cbz	r0, 8012678 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 8012668:	eb05 0140 	add.w	r1, r5, r0, lsl #1
 801266c:	4642      	mov	r2, r8
 801266e:	4620      	mov	r0, r4
 8012670:	f7ff ff93 	bl	801259a <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>
 8012674:	2800      	cmp	r0, #0
 8012676:	d1e9      	bne.n	801264c <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0xe>
 8012678:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0801267c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>:
 801267c:	b570      	push	{r4, r5, r6, lr}
 801267e:	694a      	ldr	r2, [r1, #20]
 8012680:	6a8d      	ldr	r5, [r1, #40]	@ 0x28
 8012682:	684b      	ldr	r3, [r1, #4]
 8012684:	6ace      	ldr	r6, [r1, #44]	@ 0x2c
 8012686:	1b54      	subs	r4, r2, r5
 8012688:	f000 8106 	beq.w	8012898 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x21c>
 801268c:	1b9b      	subs	r3, r3, r6
 801268e:	d003      	beq.n	8012698 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 8012690:	4363      	muls	r3, r4
 8012692:	2210      	movs	r2, #16
 8012694:	fb93 f3f2 	sdiv	r3, r3, r2
 8012698:	680c      	ldr	r4, [r1, #0]
 801269a:	698a      	ldr	r2, [r1, #24]
 801269c:	1b65      	subs	r5, r4, r5
 801269e:	f000 80fd 	beq.w	801289c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x220>
 80126a2:	1b92      	subs	r2, r2, r6
 80126a4:	d003      	beq.n	80126ae <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 80126a6:	436a      	muls	r2, r5
 80126a8:	2410      	movs	r4, #16
 80126aa:	fb92 f2f4 	sdiv	r2, r2, r4
 80126ae:	1a9b      	subs	r3, r3, r2
 80126b0:	ee07 3a90 	vmov	s15, r3
 80126b4:	ed9f 4a88 	vldr	s8, [pc, #544]	@ 80128d8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x25c>
 80126b8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80126bc:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 80126c0:	ee67 7a84 	vmul.f32	s15, s15, s8
 80126c4:	460a      	mov	r2, r1
 80126c6:	ee87 3a27 	vdiv.f32	s6, s14, s15
 80126ca:	4603      	mov	r3, r0
 80126cc:	f100 040c 	add.w	r4, r0, #12
 80126d0:	eeb1 6a43 	vneg.f32	s12, s6
 80126d4:	edd2 7a02 	vldr	s15, [r2, #8]
 80126d8:	eec7 6a27 	vdiv.f32	s13, s14, s15
 80126dc:	3214      	adds	r2, #20
 80126de:	ece3 6a01 	vstmia	r3!, {s13}
 80126e2:	ed52 7a02 	vldr	s15, [r2, #-8]
 80126e6:	ee67 7aa6 	vmul.f32	s15, s15, s13
 80126ea:	429c      	cmp	r4, r3
 80126ec:	edc3 7a02 	vstr	s15, [r3, #8]
 80126f0:	ed52 7a01 	vldr	s15, [r2, #-4]
 80126f4:	ee67 7aa6 	vmul.f32	s15, s15, s13
 80126f8:	edc3 7a05 	vstr	s15, [r3, #20]
 80126fc:	d1ea      	bne.n	80126d4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x58>
 80126fe:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
 8012700:	698b      	ldr	r3, [r1, #24]
 8012702:	edd0 4a02 	vldr	s9, [r0, #8]
 8012706:	edd0 3a00 	vldr	s7, [r0]
 801270a:	edd0 6a01 	vldr	s13, [r0, #4]
 801270e:	ed90 5a05 	vldr	s10, [r0, #20]
 8012712:	ed90 2a03 	vldr	s4, [r0, #12]
 8012716:	edd0 5a04 	vldr	s11, [r0, #16]
 801271a:	ed90 1a07 	vldr	s2, [r0, #28]
 801271e:	edd0 2a06 	vldr	s5, [r0, #24]
 8012722:	1a9b      	subs	r3, r3, r2
 8012724:	ee07 3a90 	vmov	s15, r3
 8012728:	684b      	ldr	r3, [r1, #4]
 801272a:	1a9b      	subs	r3, r3, r2
 801272c:	ee07 3a10 	vmov	s14, r3
 8012730:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8012734:	ee76 6ae4 	vsub.f32	s13, s13, s9
 8012738:	ee67 7a84 	vmul.f32	s15, s15, s8
 801273c:	ee73 4ae4 	vsub.f32	s9, s7, s9
 8012740:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8012744:	ee64 7ae7 	vnmul.f32	s15, s9, s15
 8012748:	ee27 7a04 	vmul.f32	s14, s14, s8
 801274c:	ee75 5ac5 	vsub.f32	s11, s11, s10
 8012750:	eee6 7a87 	vfma.f32	s15, s13, s14
 8012754:	ee32 5a45 	vsub.f32	s10, s4, s10
 8012758:	ee67 7a83 	vmul.f32	s15, s15, s6
 801275c:	edc0 7a09 	vstr	s15, [r0, #36]	@ 0x24
 8012760:	6a8c      	ldr	r4, [r1, #40]	@ 0x28
 8012762:	694a      	ldr	r2, [r1, #20]
 8012764:	1b13      	subs	r3, r2, r4
 8012766:	ee07 3a10 	vmov	s14, r3
 801276a:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801276e:	680b      	ldr	r3, [r1, #0]
 8012770:	ee27 7a04 	vmul.f32	s14, s14, s8
 8012774:	1b1b      	subs	r3, r3, r4
 8012776:	ee64 4ac7 	vnmul.f32	s9, s9, s14
 801277a:	ee07 3a10 	vmov	s14, r3
 801277e:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8012782:	ee27 7a04 	vmul.f32	s14, s14, s8
 8012786:	eee6 4a87 	vfma.f32	s9, s13, s14
 801278a:	ee64 4a86 	vmul.f32	s9, s9, s12
 801278e:	edc0 4a0a 	vstr	s9, [r0, #40]	@ 0x28
 8012792:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
 8012794:	698b      	ldr	r3, [r1, #24]
 8012796:	1a9b      	subs	r3, r3, r2
 8012798:	ee06 3a90 	vmov	s13, r3
 801279c:	684b      	ldr	r3, [r1, #4]
 801279e:	1a9b      	subs	r3, r3, r2
 80127a0:	ee07 3a10 	vmov	s14, r3
 80127a4:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 80127a8:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80127ac:	ee66 6a84 	vmul.f32	s13, s13, s8
 80127b0:	ee27 7a04 	vmul.f32	s14, s14, s8
 80127b4:	ee65 6a66 	vnmul.f32	s13, s10, s13
 80127b8:	eee5 6a87 	vfma.f32	s13, s11, s14
 80127bc:	ee66 6a83 	vmul.f32	s13, s13, s6
 80127c0:	edc0 6a0b 	vstr	s13, [r0, #44]	@ 0x2c
 80127c4:	6a8c      	ldr	r4, [r1, #40]	@ 0x28
 80127c6:	694a      	ldr	r2, [r1, #20]
 80127c8:	1b13      	subs	r3, r2, r4
 80127ca:	ee07 3a10 	vmov	s14, r3
 80127ce:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80127d2:	680b      	ldr	r3, [r1, #0]
 80127d4:	ee27 7a04 	vmul.f32	s14, s14, s8
 80127d8:	1b1b      	subs	r3, r3, r4
 80127da:	ee25 5a47 	vnmul.f32	s10, s10, s14
 80127de:	ee07 3a10 	vmov	s14, r3
 80127e2:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80127e6:	ee27 7a04 	vmul.f32	s14, s14, s8
 80127ea:	eea5 5a87 	vfma.f32	s10, s11, s14
 80127ee:	edd0 5a08 	vldr	s11, [r0, #32]
 80127f2:	ee25 5a06 	vmul.f32	s10, s10, s12
 80127f6:	ee31 1a65 	vsub.f32	s2, s2, s11
 80127fa:	ed80 5a0c 	vstr	s10, [r0, #48]	@ 0x30
 80127fe:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
 8012800:	698b      	ldr	r3, [r1, #24]
 8012802:	1a9b      	subs	r3, r3, r2
 8012804:	ee07 3a10 	vmov	s14, r3
 8012808:	684b      	ldr	r3, [r1, #4]
 801280a:	1a9b      	subs	r3, r3, r2
 801280c:	ee01 3a90 	vmov	s3, r3
 8012810:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8012814:	ee72 5ae5 	vsub.f32	s11, s5, s11
 8012818:	ee27 7a04 	vmul.f32	s14, s14, s8
 801281c:	eef8 1ae1 	vcvt.f32.s32	s3, s3
 8012820:	ee25 7ac7 	vnmul.f32	s14, s11, s14
 8012824:	ee61 1a84 	vmul.f32	s3, s3, s8
 8012828:	eea1 7a21 	vfma.f32	s14, s2, s3
 801282c:	ee27 7a03 	vmul.f32	s14, s14, s6
 8012830:	ed80 7a0d 	vstr	s14, [r0, #52]	@ 0x34
 8012834:	6a8c      	ldr	r4, [r1, #40]	@ 0x28
 8012836:	694a      	ldr	r2, [r1, #20]
 8012838:	1b13      	subs	r3, r2, r4
 801283a:	ee03 3a10 	vmov	s6, r3
 801283e:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 8012842:	680b      	ldr	r3, [r1, #0]
 8012844:	ee23 3a04 	vmul.f32	s6, s6, s8
 8012848:	1b1b      	subs	r3, r3, r4
 801284a:	ee65 5ac3 	vnmul.f32	s11, s11, s6
 801284e:	ee03 3a10 	vmov	s6, r3
 8012852:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 8012856:	ee23 4a04 	vmul.f32	s8, s6, s8
 801285a:	eee1 5a04 	vfma.f32	s11, s2, s8
 801285e:	ee25 6a86 	vmul.f32	s12, s11, s12
 8012862:	ee62 5a67 	vnmul.f32	s11, s4, s15
 8012866:	ed80 6a0e 	vstr	s12, [r0, #56]	@ 0x38
 801286a:	eee3 5aa6 	vfma.f32	s11, s7, s13
 801286e:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 8012872:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012876:	dd13      	ble.n	80128a0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x224>
 8012878:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 801287c:	ee62 7ae7 	vnmul.f32	s15, s5, s15
 8012880:	63c3      	str	r3, [r0, #60]	@ 0x3c
 8012882:	eee3 7a87 	vfma.f32	s15, s7, s14
 8012886:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801288a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801288e:	dd15      	ble.n	80128bc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x240>
 8012890:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 8012894:	6403      	str	r3, [r0, #64]	@ 0x40
 8012896:	bd70      	pop	{r4, r5, r6, pc}
 8012898:	4623      	mov	r3, r4
 801289a:	e6fd      	b.n	8012698 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 801289c:	462a      	mov	r2, r5
 801289e:	e706      	b.n	80126ae <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 80128a0:	d502      	bpl.n	80128a8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x22c>
 80128a2:	f647 73ff 	movw	r3, #32767	@ 0x7fff
 80128a6:	e7e9      	b.n	801287c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x200>
 80128a8:	ee22 2a64 	vnmul.f32	s4, s4, s9
 80128ac:	eea3 2a85 	vfma.f32	s4, s7, s10
 80128b0:	eeb5 2ac0 	vcmpe.f32	s4, #0.0
 80128b4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80128b8:	dade      	bge.n	8012878 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1fc>
 80128ba:	e7f2      	b.n	80128a2 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x226>
 80128bc:	d502      	bpl.n	80128c4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x248>
 80128be:	f647 73ff 	movw	r3, #32767	@ 0x7fff
 80128c2:	e7e7      	b.n	8012894 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x218>
 80128c4:	ee62 4ae4 	vnmul.f32	s9, s5, s9
 80128c8:	eee3 4a86 	vfma.f32	s9, s7, s12
 80128cc:	eef5 4ac0 	vcmpe.f32	s9, #0.0
 80128d0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80128d4:	dadc      	bge.n	8012890 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x214>
 80128d6:	e7f2      	b.n	80128be <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x242>
 80128d8:	3d800000 	.word	0x3d800000

080128dc <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>:
 80128dc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80128e0:	2714      	movs	r7, #20
 80128e2:	435f      	muls	r7, r3
 80128e4:	eb02 0c07 	add.w	ip, r2, r7
 80128e8:	f8dc 5004 	ldr.w	r5, [ip, #4]
 80128ec:	f115 0e0f 	adds.w	lr, r5, #15
 80128f0:	f100 80a2 	bmi.w	8012a38 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x15c>
 80128f4:	ea4f 1e2e 	mov.w	lr, lr, asr #4
 80128f8:	9c08      	ldr	r4, [sp, #32]
 80128fa:	f8c0 e014 	str.w	lr, [r0, #20]
 80128fe:	2614      	movs	r6, #20
 8012900:	4366      	muls	r6, r4
 8012902:	eb02 0806 	add.w	r8, r2, r6
 8012906:	f8d8 5004 	ldr.w	r5, [r8, #4]
 801290a:	f115 040f 	adds.w	r4, r5, #15
 801290e:	f100 809f 	bmi.w	8012a50 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x174>
 8012912:	1124      	asrs	r4, r4, #4
 8012914:	eba4 040e 	sub.w	r4, r4, lr
 8012918:	6184      	str	r4, [r0, #24]
 801291a:	2c00      	cmp	r4, #0
 801291c:	f000 808a 	beq.w	8012a34 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x158>
 8012920:	f8dc 9004 	ldr.w	r9, [ip, #4]
 8012924:	f8d8 4004 	ldr.w	r4, [r8, #4]
 8012928:	5995      	ldr	r5, [r2, r6]
 801292a:	eba4 0809 	sub.w	r8, r4, r9
 801292e:	59d4      	ldr	r4, [r2, r7]
 8012930:	eba5 0a04 	sub.w	sl, r5, r4
 8012934:	ea4f 150a 	mov.w	r5, sl, lsl #4
 8012938:	fb0e fe05 	mul.w	lr, lr, r5
 801293c:	fb0a ee19 	mls	lr, sl, r9, lr
 8012940:	fb08 e404 	mla	r4, r8, r4, lr
 8012944:	ea4f 1608 	mov.w	r6, r8, lsl #4
 8012948:	3c01      	subs	r4, #1
 801294a:	19a4      	adds	r4, r4, r6
 801294c:	f100 808c 	bmi.w	8012a68 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x18c>
 8012950:	fb94 fef6 	sdiv	lr, r4, r6
 8012954:	f8c0 e000 	str.w	lr, [r0]
 8012958:	fb06 441e 	mls	r4, r6, lr, r4
 801295c:	6104      	str	r4, [r0, #16]
 801295e:	2d00      	cmp	r5, #0
 8012960:	f2c0 8095 	blt.w	8012a8e <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1b2>
 8012964:	fb95 f4f6 	sdiv	r4, r5, r6
 8012968:	6044      	str	r4, [r0, #4]
 801296a:	fb06 5514 	mls	r5, r6, r4, r5
 801296e:	6085      	str	r5, [r0, #8]
 8012970:	60c6      	str	r6, [r0, #12]
 8012972:	f8dc 4004 	ldr.w	r4, [ip, #4]
 8012976:	6945      	ldr	r5, [r0, #20]
 8012978:	59d2      	ldr	r2, [r2, r7]
 801297a:	eddf 6a4d 	vldr	s13, [pc, #308]	@ 8012ab0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1d4>
 801297e:	ed91 6a0a 	vldr	s12, [r1, #40]	@ 0x28
 8012982:	ebc4 1405 	rsb	r4, r4, r5, lsl #4
 8012986:	ee07 4a10 	vmov	s14, r4
 801298a:	6804      	ldr	r4, [r0, #0]
 801298c:	ebc2 1204 	rsb	r2, r2, r4, lsl #4
 8012990:	ee07 2a90 	vmov	s15, r2
 8012994:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8012998:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801299c:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 80129a0:	ee27 7a26 	vmul.f32	s14, s14, s13
 80129a4:	ee67 7aa6 	vmul.f32	s15, s15, s13
 80129a8:	edd3 6a00 	vldr	s13, [r3]
 80129ac:	eee6 6a07 	vfma.f32	s13, s12, s14
 80129b0:	ed91 6a09 	vldr	s12, [r1, #36]	@ 0x24
 80129b4:	eee6 6a27 	vfma.f32	s13, s12, s15
 80129b8:	edc0 6a07 	vstr	s13, [r0, #28]
 80129bc:	edd0 6a01 	vldr	s13, [r0, #4]
 80129c0:	edd1 5a09 	vldr	s11, [r1, #36]	@ 0x24
 80129c4:	ed91 6a0a 	vldr	s12, [r1, #40]	@ 0x28
 80129c8:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 80129cc:	eea6 6aa5 	vfma.f32	s12, s13, s11
 80129d0:	ed80 6a08 	vstr	s12, [r0, #32]
 80129d4:	6a4a      	ldr	r2, [r1, #36]	@ 0x24
 80129d6:	6242      	str	r2, [r0, #36]	@ 0x24
 80129d8:	edd1 5a0c 	vldr	s11, [r1, #48]	@ 0x30
 80129dc:	ed93 6a03 	vldr	s12, [r3, #12]
 80129e0:	eea5 6a87 	vfma.f32	s12, s11, s14
 80129e4:	edd1 5a0b 	vldr	s11, [r1, #44]	@ 0x2c
 80129e8:	eea5 6aa7 	vfma.f32	s12, s11, s15
 80129ec:	ed80 6a0a 	vstr	s12, [r0, #40]	@ 0x28
 80129f0:	edd1 5a0b 	vldr	s11, [r1, #44]	@ 0x2c
 80129f4:	ed91 6a0c 	vldr	s12, [r1, #48]	@ 0x30
 80129f8:	eea6 6aa5 	vfma.f32	s12, s13, s11
 80129fc:	ed80 6a0b 	vstr	s12, [r0, #44]	@ 0x2c
 8012a00:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
 8012a02:	6302      	str	r2, [r0, #48]	@ 0x30
 8012a04:	ed93 6a06 	vldr	s12, [r3, #24]
 8012a08:	edd1 5a0e 	vldr	s11, [r1, #56]	@ 0x38
 8012a0c:	eea5 6a87 	vfma.f32	s12, s11, s14
 8012a10:	eeb0 7a46 	vmov.f32	s14, s12
 8012a14:	ed91 6a0d 	vldr	s12, [r1, #52]	@ 0x34
 8012a18:	eea6 7a27 	vfma.f32	s14, s12, s15
 8012a1c:	ed80 7a0d 	vstr	s14, [r0, #52]	@ 0x34
 8012a20:	ed91 7a0d 	vldr	s14, [r1, #52]	@ 0x34
 8012a24:	edd1 7a0e 	vldr	s15, [r1, #56]	@ 0x38
 8012a28:	eee6 7a87 	vfma.f32	s15, s13, s14
 8012a2c:	edc0 7a0e 	vstr	s15, [r0, #56]	@ 0x38
 8012a30:	6b4b      	ldr	r3, [r1, #52]	@ 0x34
 8012a32:	63c3      	str	r3, [r0, #60]	@ 0x3c
 8012a34:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8012a38:	f1c5 0501 	rsb	r5, r5, #1
 8012a3c:	f015 050f 	ands.w	r5, r5, #15
 8012a40:	bf18      	it	ne
 8012a42:	2501      	movne	r5, #1
 8012a44:	2410      	movs	r4, #16
 8012a46:	fb9e fef4 	sdiv	lr, lr, r4
 8012a4a:	ebae 0e05 	sub.w	lr, lr, r5
 8012a4e:	e753      	b.n	80128f8 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1c>
 8012a50:	f1c5 0501 	rsb	r5, r5, #1
 8012a54:	f015 050f 	ands.w	r5, r5, #15
 8012a58:	bf18      	it	ne
 8012a5a:	2501      	movne	r5, #1
 8012a5c:	f04f 0910 	mov.w	r9, #16
 8012a60:	fb94 f4f9 	sdiv	r4, r4, r9
 8012a64:	1b64      	subs	r4, r4, r5
 8012a66:	e755      	b.n	8012914 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x38>
 8012a68:	4264      	negs	r4, r4
 8012a6a:	fb94 fef6 	sdiv	lr, r4, r6
 8012a6e:	f1ce 0800 	rsb	r8, lr, #0
 8012a72:	fb06 441e 	mls	r4, r6, lr, r4
 8012a76:	f8c0 8000 	str.w	r8, [r0]
 8012a7a:	6104      	str	r4, [r0, #16]
 8012a7c:	2c00      	cmp	r4, #0
 8012a7e:	f43f af6e 	beq.w	801295e <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x82>
 8012a82:	ea6f 0e0e 	mvn.w	lr, lr
 8012a86:	f8c0 e000 	str.w	lr, [r0]
 8012a8a:	1b34      	subs	r4, r6, r4
 8012a8c:	e766      	b.n	801295c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x80>
 8012a8e:	426d      	negs	r5, r5
 8012a90:	fb95 f4f6 	sdiv	r4, r5, r6
 8012a94:	f1c4 0e00 	rsb	lr, r4, #0
 8012a98:	fb06 5514 	mls	r5, r6, r4, r5
 8012a9c:	f8c0 e004 	str.w	lr, [r0, #4]
 8012aa0:	6085      	str	r5, [r0, #8]
 8012aa2:	2d00      	cmp	r5, #0
 8012aa4:	f43f af64 	beq.w	8012970 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x94>
 8012aa8:	43e4      	mvns	r4, r4
 8012aaa:	6044      	str	r4, [r0, #4]
 8012aac:	1b75      	subs	r5, r6, r5
 8012aae:	e75e      	b.n	801296e <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x92>
 8012ab0:	3d800000 	.word	0x3d800000

08012ab4 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>:
 8012ab4:	4b01      	ldr	r3, [pc, #4]	@ (8012abc <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE+0x8>)
 8012ab6:	6018      	str	r0, [r3, #0]
 8012ab8:	4770      	bx	lr
 8012aba:	bf00      	nop
 8012abc:	200140ac 	.word	0x200140ac

08012ac0 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>:
 8012ac0:	4b06      	ldr	r3, [pc, #24]	@ (8012adc <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x1c>)
 8012ac2:	881a      	ldrh	r2, [r3, #0]
 8012ac4:	4282      	cmp	r2, r0
 8012ac6:	d807      	bhi.n	8012ad8 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x18>
 8012ac8:	4b05      	ldr	r3, [pc, #20]	@ (8012ae0 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x20>)
 8012aca:	881b      	ldrh	r3, [r3, #0]
 8012acc:	4413      	add	r3, r2
 8012ace:	4298      	cmp	r0, r3
 8012ad0:	bfac      	ite	ge
 8012ad2:	2000      	movge	r0, #0
 8012ad4:	2001      	movlt	r0, #1
 8012ad6:	4770      	bx	lr
 8012ad8:	2000      	movs	r0, #0
 8012ada:	4770      	bx	lr
 8012adc:	200140cc 	.word	0x200140cc
 8012ae0:	200140d0 	.word	0x200140d0

08012ae4 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>:
 8012ae4:	b508      	push	{r3, lr}
 8012ae6:	4601      	mov	r1, r0
 8012ae8:	f7ff ffea 	bl	8012ac0 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>
 8012aec:	b118      	cbz	r0, 8012af6 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x12>
 8012aee:	4b02      	ldr	r3, [pc, #8]	@ (8012af8 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x14>)
 8012af0:	681b      	ldr	r3, [r3, #0]
 8012af2:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 8012af6:	bd08      	pop	{r3, pc}
 8012af8:	200140b0 	.word	0x200140b0

08012afc <_ZN8touchgfx6Bitmap10clearCacheEv>:
 8012afc:	b5f0      	push	{r4, r5, r6, r7, lr}
 8012afe:	4c24      	ldr	r4, [pc, #144]	@ (8012b90 <_ZN8touchgfx6Bitmap10clearCacheEv+0x94>)
 8012b00:	6823      	ldr	r3, [r4, #0]
 8012b02:	2b00      	cmp	r3, #0
 8012b04:	d042      	beq.n	8012b8c <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 8012b06:	4a23      	ldr	r2, [pc, #140]	@ (8012b94 <_ZN8touchgfx6Bitmap10clearCacheEv+0x98>)
 8012b08:	4d23      	ldr	r5, [pc, #140]	@ (8012b98 <_ZN8touchgfx6Bitmap10clearCacheEv+0x9c>)
 8012b0a:	8811      	ldrh	r1, [r2, #0]
 8012b0c:	f8b5 c000 	ldrh.w	ip, [r5]
 8012b10:	4822      	ldr	r0, [pc, #136]	@ (8012b9c <_ZN8touchgfx6Bitmap10clearCacheEv+0xa0>)
 8012b12:	4461      	add	r1, ip
 8012b14:	1c4a      	adds	r2, r1, #1
 8012b16:	f022 0201 	bic.w	r2, r2, #1
 8012b1a:	008f      	lsls	r7, r1, #2
 8012b1c:	0412      	lsls	r2, r2, #16
 8012b1e:	19de      	adds	r6, r3, r7
 8012b20:	0c12      	lsrs	r2, r2, #16
 8012b22:	eb07 0742 	add.w	r7, r7, r2, lsl #1
 8012b26:	6006      	str	r6, [r0, #0]
 8012b28:	4e1d      	ldr	r6, [pc, #116]	@ (8012ba0 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa4>)
 8012b2a:	19da      	adds	r2, r3, r7
 8012b2c:	6032      	str	r2, [r6, #0]
 8012b2e:	220e      	movs	r2, #14
 8012b30:	fb02 f20c 	mul.w	r2, r2, ip
 8012b34:	3203      	adds	r2, #3
 8012b36:	f022 0203 	bic.w	r2, r2, #3
 8012b3a:	443a      	add	r2, r7
 8012b3c:	4f19      	ldr	r7, [pc, #100]	@ (8012ba4 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa8>)
 8012b3e:	4413      	add	r3, r2
 8012b40:	603b      	str	r3, [r7, #0]
 8012b42:	4f19      	ldr	r7, [pc, #100]	@ (8012ba8 <_ZN8touchgfx6Bitmap10clearCacheEv+0xac>)
 8012b44:	2300      	movs	r3, #0
 8012b46:	803b      	strh	r3, [r7, #0]
 8012b48:	4f18      	ldr	r7, [pc, #96]	@ (8012bac <_ZN8touchgfx6Bitmap10clearCacheEv+0xb0>)
 8012b4a:	683f      	ldr	r7, [r7, #0]
 8012b4c:	1aba      	subs	r2, r7, r2
 8012b4e:	4f18      	ldr	r7, [pc, #96]	@ (8012bb0 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb4>)
 8012b50:	603a      	str	r2, [r7, #0]
 8012b52:	4a18      	ldr	r2, [pc, #96]	@ (8012bb4 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb8>)
 8012b54:	469c      	mov	ip, r3
 8012b56:	8013      	strh	r3, [r2, #0]
 8012b58:	f64f 77ff 	movw	r7, #65535	@ 0xffff
 8012b5c:	428b      	cmp	r3, r1
 8012b5e:	d10d      	bne.n	8012b7c <_ZN8touchgfx6Bitmap10clearCacheEv+0x80>
 8012b60:	882d      	ldrh	r5, [r5, #0]
 8012b62:	6830      	ldr	r0, [r6, #0]
 8012b64:	2300      	movs	r3, #0
 8012b66:	240e      	movs	r4, #14
 8012b68:	429d      	cmp	r5, r3
 8012b6a:	d90f      	bls.n	8012b8c <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 8012b6c:	fb04 0203 	mla	r2, r4, r3, r0
 8012b70:	3301      	adds	r3, #1
 8012b72:	7b11      	ldrb	r1, [r2, #12]
 8012b74:	f36f 1145 	bfc	r1, #5, #1
 8012b78:	7311      	strb	r1, [r2, #12]
 8012b7a:	e7f5      	b.n	8012b68 <_ZN8touchgfx6Bitmap10clearCacheEv+0x6c>
 8012b7c:	6822      	ldr	r2, [r4, #0]
 8012b7e:	f842 c023 	str.w	ip, [r2, r3, lsl #2]
 8012b82:	6802      	ldr	r2, [r0, #0]
 8012b84:	f822 7013 	strh.w	r7, [r2, r3, lsl #1]
 8012b88:	3301      	adds	r3, #1
 8012b8a:	e7e7      	b.n	8012b5c <_ZN8touchgfx6Bitmap10clearCacheEv+0x60>
 8012b8c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8012b8e:	bf00      	nop
 8012b90:	200140b0 	.word	0x200140b0
 8012b94:	200140cc 	.word	0x200140cc
 8012b98:	200140d0 	.word	0x200140d0
 8012b9c:	200140c4 	.word	0x200140c4
 8012ba0:	200140b4 	.word	0x200140b4
 8012ba4:	200140bc 	.word	0x200140bc
 8012ba8:	200140ce 	.word	0x200140ce
 8012bac:	200140b8 	.word	0x200140b8
 8012bb0:	200140c8 	.word	0x200140c8
 8012bb4:	200140c0 	.word	0x200140c0

08012bb8 <_ZN8touchgfx6Bitmap8setCacheEPtmm>:
 8012bb8:	4b06      	ldr	r3, [pc, #24]	@ (8012bd4 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x1c>)
 8012bba:	681b      	ldr	r3, [r3, #0]
 8012bbc:	b943      	cbnz	r3, 8012bd0 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 8012bbe:	b139      	cbz	r1, 8012bd0 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 8012bc0:	4b05      	ldr	r3, [pc, #20]	@ (8012bd8 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x20>)
 8012bc2:	801a      	strh	r2, [r3, #0]
 8012bc4:	4b05      	ldr	r3, [pc, #20]	@ (8012bdc <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x24>)
 8012bc6:	6019      	str	r1, [r3, #0]
 8012bc8:	4b05      	ldr	r3, [pc, #20]	@ (8012be0 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x28>)
 8012bca:	6018      	str	r0, [r3, #0]
 8012bcc:	f7ff bf96 	b.w	8012afc <_ZN8touchgfx6Bitmap10clearCacheEv>
 8012bd0:	4770      	bx	lr
 8012bd2:	bf00      	nop
 8012bd4:	200140bc 	.word	0x200140bc
 8012bd8:	200140d0 	.word	0x200140d0
 8012bdc:	200140b8 	.word	0x200140b8
 8012be0:	200140b0 	.word	0x200140b0

08012be4 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>:
 8012be4:	b470      	push	{r4, r5, r6}
 8012be6:	4c07      	ldr	r4, [pc, #28]	@ (8012c04 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x20>)
 8012be8:	6826      	ldr	r6, [r4, #0]
 8012bea:	4605      	mov	r5, r0
 8012bec:	4610      	mov	r0, r2
 8012bee:	9a03      	ldr	r2, [sp, #12]
 8012bf0:	b936      	cbnz	r6, 8012c00 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x1c>
 8012bf2:	6025      	str	r5, [r4, #0]
 8012bf4:	4c04      	ldr	r4, [pc, #16]	@ (8012c08 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x24>)
 8012bf6:	8021      	strh	r1, [r4, #0]
 8012bf8:	bc70      	pop	{r4, r5, r6}
 8012bfa:	4619      	mov	r1, r3
 8012bfc:	f7ff bfdc 	b.w	8012bb8 <_ZN8touchgfx6Bitmap8setCacheEPtmm>
 8012c00:	bc70      	pop	{r4, r5, r6}
 8012c02:	4770      	bx	lr
 8012c04:	200140d4 	.word	0x200140d4
 8012c08:	200140cc 	.word	0x200140cc

08012c0c <_ZNK8touchgfx6Bitmap8getWidthEv>:
 8012c0c:	4a12      	ldr	r2, [pc, #72]	@ (8012c58 <_ZNK8touchgfx6Bitmap8getWidthEv+0x4c>)
 8012c0e:	8803      	ldrh	r3, [r0, #0]
 8012c10:	8812      	ldrh	r2, [r2, #0]
 8012c12:	4293      	cmp	r3, r2
 8012c14:	d207      	bcs.n	8012c26 <_ZNK8touchgfx6Bitmap8getWidthEv+0x1a>
 8012c16:	4a11      	ldr	r2, [pc, #68]	@ (8012c5c <_ZNK8touchgfx6Bitmap8getWidthEv+0x50>)
 8012c18:	6812      	ldr	r2, [r2, #0]
 8012c1a:	2114      	movs	r1, #20
 8012c1c:	fb01 2303 	mla	r3, r1, r3, r2
 8012c20:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 8012c24:	4770      	bx	lr
 8012c26:	490e      	ldr	r1, [pc, #56]	@ (8012c60 <_ZNK8touchgfx6Bitmap8getWidthEv+0x54>)
 8012c28:	8809      	ldrh	r1, [r1, #0]
 8012c2a:	4411      	add	r1, r2
 8012c2c:	428b      	cmp	r3, r1
 8012c2e:	da04      	bge.n	8012c3a <_ZNK8touchgfx6Bitmap8getWidthEv+0x2e>
 8012c30:	1a9b      	subs	r3, r3, r2
 8012c32:	4a0c      	ldr	r2, [pc, #48]	@ (8012c64 <_ZNK8touchgfx6Bitmap8getWidthEv+0x58>)
 8012c34:	210e      	movs	r1, #14
 8012c36:	6812      	ldr	r2, [r2, #0]
 8012c38:	e7f0      	b.n	8012c1c <_ZNK8touchgfx6Bitmap8getWidthEv+0x10>
 8012c3a:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
 8012c3e:	4293      	cmp	r3, r2
 8012c40:	d108      	bne.n	8012c54 <_ZNK8touchgfx6Bitmap8getWidthEv+0x48>
 8012c42:	4b09      	ldr	r3, [pc, #36]	@ (8012c68 <_ZNK8touchgfx6Bitmap8getWidthEv+0x5c>)
 8012c44:	781b      	ldrb	r3, [r3, #0]
 8012c46:	b91b      	cbnz	r3, 8012c50 <_ZNK8touchgfx6Bitmap8getWidthEv+0x44>
 8012c48:	4b08      	ldr	r3, [pc, #32]	@ (8012c6c <_ZNK8touchgfx6Bitmap8getWidthEv+0x60>)
 8012c4a:	f9b3 0000 	ldrsh.w	r0, [r3]
 8012c4e:	4770      	bx	lr
 8012c50:	4b07      	ldr	r3, [pc, #28]	@ (8012c70 <_ZNK8touchgfx6Bitmap8getWidthEv+0x64>)
 8012c52:	e7fa      	b.n	8012c4a <_ZNK8touchgfx6Bitmap8getWidthEv+0x3e>
 8012c54:	2000      	movs	r0, #0
 8012c56:	4770      	bx	lr
 8012c58:	200140cc 	.word	0x200140cc
 8012c5c:	200140d4 	.word	0x200140d4
 8012c60:	200140d0 	.word	0x200140d0
 8012c64:	200140b4 	.word	0x200140b4
 8012c68:	2001403a 	.word	0x2001403a
 8012c6c:	2001403c 	.word	0x2001403c
 8012c70:	2001403e 	.word	0x2001403e

08012c74 <_ZNK8touchgfx6Bitmap9getHeightEv>:
 8012c74:	4a12      	ldr	r2, [pc, #72]	@ (8012cc0 <_ZNK8touchgfx6Bitmap9getHeightEv+0x4c>)
 8012c76:	8803      	ldrh	r3, [r0, #0]
 8012c78:	8812      	ldrh	r2, [r2, #0]
 8012c7a:	4293      	cmp	r3, r2
 8012c7c:	d207      	bcs.n	8012c8e <_ZNK8touchgfx6Bitmap9getHeightEv+0x1a>
 8012c7e:	4a11      	ldr	r2, [pc, #68]	@ (8012cc4 <_ZNK8touchgfx6Bitmap9getHeightEv+0x50>)
 8012c80:	6812      	ldr	r2, [r2, #0]
 8012c82:	2114      	movs	r1, #20
 8012c84:	fb01 2303 	mla	r3, r1, r3, r2
 8012c88:	f9b3 000a 	ldrsh.w	r0, [r3, #10]
 8012c8c:	4770      	bx	lr
 8012c8e:	490e      	ldr	r1, [pc, #56]	@ (8012cc8 <_ZNK8touchgfx6Bitmap9getHeightEv+0x54>)
 8012c90:	8809      	ldrh	r1, [r1, #0]
 8012c92:	4411      	add	r1, r2
 8012c94:	428b      	cmp	r3, r1
 8012c96:	da04      	bge.n	8012ca2 <_ZNK8touchgfx6Bitmap9getHeightEv+0x2e>
 8012c98:	1a9b      	subs	r3, r3, r2
 8012c9a:	4a0c      	ldr	r2, [pc, #48]	@ (8012ccc <_ZNK8touchgfx6Bitmap9getHeightEv+0x58>)
 8012c9c:	210e      	movs	r1, #14
 8012c9e:	6812      	ldr	r2, [r2, #0]
 8012ca0:	e7f0      	b.n	8012c84 <_ZNK8touchgfx6Bitmap9getHeightEv+0x10>
 8012ca2:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
 8012ca6:	4293      	cmp	r3, r2
 8012ca8:	d108      	bne.n	8012cbc <_ZNK8touchgfx6Bitmap9getHeightEv+0x48>
 8012caa:	4b09      	ldr	r3, [pc, #36]	@ (8012cd0 <_ZNK8touchgfx6Bitmap9getHeightEv+0x5c>)
 8012cac:	781b      	ldrb	r3, [r3, #0]
 8012cae:	b91b      	cbnz	r3, 8012cb8 <_ZNK8touchgfx6Bitmap9getHeightEv+0x44>
 8012cb0:	4b08      	ldr	r3, [pc, #32]	@ (8012cd4 <_ZNK8touchgfx6Bitmap9getHeightEv+0x60>)
 8012cb2:	f9b3 0000 	ldrsh.w	r0, [r3]
 8012cb6:	4770      	bx	lr
 8012cb8:	4b07      	ldr	r3, [pc, #28]	@ (8012cd8 <_ZNK8touchgfx6Bitmap9getHeightEv+0x64>)
 8012cba:	e7fa      	b.n	8012cb2 <_ZNK8touchgfx6Bitmap9getHeightEv+0x3e>
 8012cbc:	2000      	movs	r0, #0
 8012cbe:	4770      	bx	lr
 8012cc0:	200140cc 	.word	0x200140cc
 8012cc4:	200140d4 	.word	0x200140d4
 8012cc8:	200140d0 	.word	0x200140d0
 8012ccc:	200140b4 	.word	0x200140b4
 8012cd0:	2001403a 	.word	0x2001403a
 8012cd4:	2001403e 	.word	0x2001403e
 8012cd8:	2001403c 	.word	0x2001403c

08012cdc <_ZNK8touchgfx6Bitmap12getSolidRectEv>:
 8012cdc:	b530      	push	{r4, r5, lr}
 8012cde:	4a22      	ldr	r2, [pc, #136]	@ (8012d68 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x8c>)
 8012ce0:	880b      	ldrh	r3, [r1, #0]
 8012ce2:	8812      	ldrh	r2, [r2, #0]
 8012ce4:	4293      	cmp	r3, r2
 8012ce6:	d213      	bcs.n	8012d10 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x34>
 8012ce8:	4a20      	ldr	r2, [pc, #128]	@ (8012d6c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x90>)
 8012cea:	6812      	ldr	r2, [r2, #0]
 8012cec:	2114      	movs	r1, #20
 8012cee:	fb01 2303 	mla	r3, r1, r3, r2
 8012cf2:	8a1a      	ldrh	r2, [r3, #16]
 8012cf4:	f9b3 400c 	ldrsh.w	r4, [r3, #12]
 8012cf8:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
 8012cfc:	8a5b      	ldrh	r3, [r3, #18]
 8012cfe:	8004      	strh	r4, [r0, #0]
 8012d00:	f3c2 020c 	ubfx	r2, r2, #0, #13
 8012d04:	f3c3 030c 	ubfx	r3, r3, #0, #13
 8012d08:	8041      	strh	r1, [r0, #2]
 8012d0a:	8082      	strh	r2, [r0, #4]
 8012d0c:	80c3      	strh	r3, [r0, #6]
 8012d0e:	e024      	b.n	8012d5a <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x7e>
 8012d10:	4917      	ldr	r1, [pc, #92]	@ (8012d70 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x94>)
 8012d12:	8809      	ldrh	r1, [r1, #0]
 8012d14:	4411      	add	r1, r2
 8012d16:	428b      	cmp	r3, r1
 8012d18:	da10      	bge.n	8012d3c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x60>
 8012d1a:	1a9b      	subs	r3, r3, r2
 8012d1c:	220e      	movs	r2, #14
 8012d1e:	4353      	muls	r3, r2
 8012d20:	4a14      	ldr	r2, [pc, #80]	@ (8012d74 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x98>)
 8012d22:	6811      	ldr	r1, [r2, #0]
 8012d24:	18ca      	adds	r2, r1, r3
 8012d26:	5ecd      	ldrsh	r5, [r1, r3]
 8012d28:	f9b2 4002 	ldrsh.w	r4, [r2, #2]
 8012d2c:	f9b2 1004 	ldrsh.w	r1, [r2, #4]
 8012d30:	f9b2 3006 	ldrsh.w	r3, [r2, #6]
 8012d34:	8005      	strh	r5, [r0, #0]
 8012d36:	8044      	strh	r4, [r0, #2]
 8012d38:	8081      	strh	r1, [r0, #4]
 8012d3a:	e7e7      	b.n	8012d0c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x30>
 8012d3c:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
 8012d40:	4293      	cmp	r3, r2
 8012d42:	d10b      	bne.n	8012d5c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x80>
 8012d44:	4b0c      	ldr	r3, [pc, #48]	@ (8012d78 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x9c>)
 8012d46:	f9b3 1000 	ldrsh.w	r1, [r3]
 8012d4a:	4b0c      	ldr	r3, [pc, #48]	@ (8012d7c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xa0>)
 8012d4c:	8081      	strh	r1, [r0, #4]
 8012d4e:	f9b3 2000 	ldrsh.w	r2, [r3]
 8012d52:	80c2      	strh	r2, [r0, #6]
 8012d54:	2300      	movs	r3, #0
 8012d56:	8003      	strh	r3, [r0, #0]
 8012d58:	8043      	strh	r3, [r0, #2]
 8012d5a:	bd30      	pop	{r4, r5, pc}
 8012d5c:	2300      	movs	r3, #0
 8012d5e:	8003      	strh	r3, [r0, #0]
 8012d60:	8043      	strh	r3, [r0, #2]
 8012d62:	8083      	strh	r3, [r0, #4]
 8012d64:	e7d2      	b.n	8012d0c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x30>
 8012d66:	bf00      	nop
 8012d68:	200140cc 	.word	0x200140cc
 8012d6c:	200140d4 	.word	0x200140d4
 8012d70:	200140d0 	.word	0x200140d0
 8012d74:	200140b4 	.word	0x200140b4
 8012d78:	20014036 	.word	0x20014036
 8012d7c:	20014038 	.word	0x20014038

08012d80 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>:
 8012d80:	4a17      	ldr	r2, [pc, #92]	@ (8012de0 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x60>)
 8012d82:	8803      	ldrh	r3, [r0, #0]
 8012d84:	8812      	ldrh	r2, [r2, #0]
 8012d86:	4293      	cmp	r3, r2
 8012d88:	d213      	bcs.n	8012db2 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x32>
 8012d8a:	4a16      	ldr	r2, [pc, #88]	@ (8012de4 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x64>)
 8012d8c:	6812      	ldr	r2, [r2, #0]
 8012d8e:	2114      	movs	r1, #20
 8012d90:	fb01 2303 	mla	r3, r1, r3, r2
 8012d94:	8a1a      	ldrh	r2, [r3, #16]
 8012d96:	8919      	ldrh	r1, [r3, #8]
 8012d98:	f3c2 020c 	ubfx	r2, r2, #0, #13
 8012d9c:	428a      	cmp	r2, r1
 8012d9e:	db1d      	blt.n	8012ddc <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 8012da0:	8a58      	ldrh	r0, [r3, #18]
 8012da2:	f3c0 000c 	ubfx	r0, r0, #0, #13
 8012da6:	895b      	ldrh	r3, [r3, #10]
 8012da8:	4298      	cmp	r0, r3
 8012daa:	bfac      	ite	ge
 8012dac:	2000      	movge	r0, #0
 8012dae:	2001      	movlt	r0, #1
 8012db0:	4770      	bx	lr
 8012db2:	490d      	ldr	r1, [pc, #52]	@ (8012de8 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x68>)
 8012db4:	8809      	ldrh	r1, [r1, #0]
 8012db6:	4411      	add	r1, r2
 8012db8:	428b      	cmp	r3, r1
 8012dba:	da0d      	bge.n	8012dd8 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x58>
 8012dbc:	1a9b      	subs	r3, r3, r2
 8012dbe:	4a0b      	ldr	r2, [pc, #44]	@ (8012dec <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x6c>)
 8012dc0:	6812      	ldr	r2, [r2, #0]
 8012dc2:	210e      	movs	r1, #14
 8012dc4:	fb01 2303 	mla	r3, r1, r3, r2
 8012dc8:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
 8012dcc:	891a      	ldrh	r2, [r3, #8]
 8012dce:	4291      	cmp	r1, r2
 8012dd0:	db04      	blt.n	8012ddc <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 8012dd2:	f9b3 0006 	ldrsh.w	r0, [r3, #6]
 8012dd6:	e7e6      	b.n	8012da6 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x26>
 8012dd8:	2000      	movs	r0, #0
 8012dda:	4770      	bx	lr
 8012ddc:	2001      	movs	r0, #1
 8012dde:	4770      	bx	lr
 8012de0:	200140cc 	.word	0x200140cc
 8012de4:	200140d4 	.word	0x200140d4
 8012de8:	200140d0 	.word	0x200140d0
 8012dec:	200140b4 	.word	0x200140b4

08012df0 <_ZNK8touchgfx6Bitmap7getDataEv>:
 8012df0:	4a12      	ldr	r2, [pc, #72]	@ (8012e3c <_ZNK8touchgfx6Bitmap7getDataEv+0x4c>)
 8012df2:	8803      	ldrh	r3, [r0, #0]
 8012df4:	8811      	ldrh	r1, [r2, #0]
 8012df6:	428b      	cmp	r3, r1
 8012df8:	d20b      	bcs.n	8012e12 <_ZNK8touchgfx6Bitmap7getDataEv+0x22>
 8012dfa:	4a11      	ldr	r2, [pc, #68]	@ (8012e40 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 8012dfc:	6812      	ldr	r2, [r2, #0]
 8012dfe:	b112      	cbz	r2, 8012e06 <_ZNK8touchgfx6Bitmap7getDataEv+0x16>
 8012e00:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 8012e04:	b9c0      	cbnz	r0, 8012e38 <_ZNK8touchgfx6Bitmap7getDataEv+0x48>
 8012e06:	4a0f      	ldr	r2, [pc, #60]	@ (8012e44 <_ZNK8touchgfx6Bitmap7getDataEv+0x54>)
 8012e08:	6811      	ldr	r1, [r2, #0]
 8012e0a:	2214      	movs	r2, #20
 8012e0c:	4353      	muls	r3, r2
 8012e0e:	58c8      	ldr	r0, [r1, r3]
 8012e10:	4770      	bx	lr
 8012e12:	4a0d      	ldr	r2, [pc, #52]	@ (8012e48 <_ZNK8touchgfx6Bitmap7getDataEv+0x58>)
 8012e14:	8812      	ldrh	r2, [r2, #0]
 8012e16:	440a      	add	r2, r1
 8012e18:	4293      	cmp	r3, r2
 8012e1a:	da04      	bge.n	8012e26 <_ZNK8touchgfx6Bitmap7getDataEv+0x36>
 8012e1c:	4a08      	ldr	r2, [pc, #32]	@ (8012e40 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 8012e1e:	6812      	ldr	r2, [r2, #0]
 8012e20:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 8012e24:	4770      	bx	lr
 8012e26:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
 8012e2a:	4293      	cmp	r3, r2
 8012e2c:	d103      	bne.n	8012e36 <_ZNK8touchgfx6Bitmap7getDataEv+0x46>
 8012e2e:	4b07      	ldr	r3, [pc, #28]	@ (8012e4c <_ZNK8touchgfx6Bitmap7getDataEv+0x5c>)
 8012e30:	681b      	ldr	r3, [r3, #0]
 8012e32:	6c58      	ldr	r0, [r3, #68]	@ 0x44
 8012e34:	4770      	bx	lr
 8012e36:	2000      	movs	r0, #0
 8012e38:	4770      	bx	lr
 8012e3a:	bf00      	nop
 8012e3c:	200140cc 	.word	0x200140cc
 8012e40:	200140b0 	.word	0x200140b0
 8012e44:	200140d4 	.word	0x200140d4
 8012e48:	200140d0 	.word	0x200140d0
 8012e4c:	20014044 	.word	0x20014044

08012e50 <_ZNK8touchgfx6Bitmap12getExtraDataEv>:
 8012e50:	4b24      	ldr	r3, [pc, #144]	@ (8012ee4 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x94>)
 8012e52:	8802      	ldrh	r2, [r0, #0]
 8012e54:	8818      	ldrh	r0, [r3, #0]
 8012e56:	4282      	cmp	r2, r0
 8012e58:	d221      	bcs.n	8012e9e <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x4e>
 8012e5a:	4b23      	ldr	r3, [pc, #140]	@ (8012ee8 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>)
 8012e5c:	6819      	ldr	r1, [r3, #0]
 8012e5e:	2314      	movs	r3, #20
 8012e60:	fb03 1302 	mla	r3, r3, r2, r1
 8012e64:	6858      	ldr	r0, [r3, #4]
 8012e66:	2800      	cmp	r0, #0
 8012e68:	d03a      	beq.n	8012ee0 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 8012e6a:	4920      	ldr	r1, [pc, #128]	@ (8012eec <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 8012e6c:	6809      	ldr	r1, [r1, #0]
 8012e6e:	2900      	cmp	r1, #0
 8012e70:	d036      	beq.n	8012ee0 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 8012e72:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
 8012e76:	2900      	cmp	r1, #0
 8012e78:	d032      	beq.n	8012ee0 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 8012e7a:	891a      	ldrh	r2, [r3, #8]
 8012e7c:	8958      	ldrh	r0, [r3, #10]
 8012e7e:	4350      	muls	r0, r2
 8012e80:	7c5a      	ldrb	r2, [r3, #17]
 8012e82:	7cdb      	ldrb	r3, [r3, #19]
 8012e84:	0952      	lsrs	r2, r2, #5
 8012e86:	f3c3 1342 	ubfx	r3, r3, #5, #3
 8012e8a:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 8012e8e:	2b0b      	cmp	r3, #11
 8012e90:	bf18      	it	ne
 8012e92:	0040      	lslne	r0, r0, #1
 8012e94:	3003      	adds	r0, #3
 8012e96:	f020 0003 	bic.w	r0, r0, #3
 8012e9a:	4408      	add	r0, r1
 8012e9c:	4770      	bx	lr
 8012e9e:	4b14      	ldr	r3, [pc, #80]	@ (8012ef0 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa0>)
 8012ea0:	881b      	ldrh	r3, [r3, #0]
 8012ea2:	4403      	add	r3, r0
 8012ea4:	429a      	cmp	r2, r3
 8012ea6:	da1a      	bge.n	8012ede <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 8012ea8:	4b12      	ldr	r3, [pc, #72]	@ (8012ef4 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
 8012eaa:	681b      	ldr	r3, [r3, #0]
 8012eac:	1a10      	subs	r0, r2, r0
 8012eae:	210e      	movs	r1, #14
 8012eb0:	fb01 3000 	mla	r0, r1, r0, r3
 8012eb4:	7b03      	ldrb	r3, [r0, #12]
 8012eb6:	f003 031f 	and.w	r3, r3, #31
 8012eba:	2b0b      	cmp	r3, #11
 8012ebc:	d10b      	bne.n	8012ed6 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x86>
 8012ebe:	8903      	ldrh	r3, [r0, #8]
 8012ec0:	8940      	ldrh	r0, [r0, #10]
 8012ec2:	4358      	muls	r0, r3
 8012ec4:	4b09      	ldr	r3, [pc, #36]	@ (8012eec <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 8012ec6:	6819      	ldr	r1, [r3, #0]
 8012ec8:	3003      	adds	r0, #3
 8012eca:	f020 0303 	bic.w	r3, r0, #3
 8012ece:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
 8012ed2:	4418      	add	r0, r3
 8012ed4:	4770      	bx	lr
 8012ed6:	2b0d      	cmp	r3, #13
 8012ed8:	d101      	bne.n	8012ede <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 8012eda:	300d      	adds	r0, #13
 8012edc:	4770      	bx	lr
 8012ede:	2000      	movs	r0, #0
 8012ee0:	4770      	bx	lr
 8012ee2:	bf00      	nop
 8012ee4:	200140cc 	.word	0x200140cc
 8012ee8:	200140d4 	.word	0x200140d4
 8012eec:	200140b0 	.word	0x200140b0
 8012ef0:	200140d0 	.word	0x200140d0
 8012ef4:	200140b4 	.word	0x200140b4

08012ef8 <_ZNK8touchgfx6Bitmap9getFormatEv>:
 8012ef8:	b510      	push	{r4, lr}
 8012efa:	4b1f      	ldr	r3, [pc, #124]	@ (8012f78 <_ZNK8touchgfx6Bitmap9getFormatEv+0x80>)
 8012efc:	8802      	ldrh	r2, [r0, #0]
 8012efe:	881b      	ldrh	r3, [r3, #0]
 8012f00:	429a      	cmp	r2, r3
 8012f02:	d21a      	bcs.n	8012f3a <_ZNK8touchgfx6Bitmap9getFormatEv+0x42>
 8012f04:	4b1d      	ldr	r3, [pc, #116]	@ (8012f7c <_ZNK8touchgfx6Bitmap9getFormatEv+0x84>)
 8012f06:	681b      	ldr	r3, [r3, #0]
 8012f08:	2114      	movs	r1, #20
 8012f0a:	fb01 3102 	mla	r1, r1, r2, r3
 8012f0e:	7c4b      	ldrb	r3, [r1, #17]
 8012f10:	0958      	lsrs	r0, r3, #5
 8012f12:	7ccb      	ldrb	r3, [r1, #19]
 8012f14:	491a      	ldr	r1, [pc, #104]	@ (8012f80 <_ZNK8touchgfx6Bitmap9getFormatEv+0x88>)
 8012f16:	f3c3 1342 	ubfx	r3, r3, #5, #3
 8012f1a:	6809      	ldr	r1, [r1, #0]
 8012f1c:	ea43 03c0 	orr.w	r3, r3, r0, lsl #3
 8012f20:	b2d8      	uxtb	r0, r3
 8012f22:	b149      	cbz	r1, 8012f38 <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
 8012f24:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 8012f28:	b132      	cbz	r2, 8012f38 <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
 8012f2a:	2b0e      	cmp	r3, #14
 8012f2c:	d021      	beq.n	8012f72 <_ZNK8touchgfx6Bitmap9getFormatEv+0x7a>
 8012f2e:	280f      	cmp	r0, #15
 8012f30:	d01d      	beq.n	8012f6e <_ZNK8touchgfx6Bitmap9getFormatEv+0x76>
 8012f32:	2810      	cmp	r0, #16
 8012f34:	bf08      	it	eq
 8012f36:	2002      	moveq	r0, #2
 8012f38:	bd10      	pop	{r4, pc}
 8012f3a:	4912      	ldr	r1, [pc, #72]	@ (8012f84 <_ZNK8touchgfx6Bitmap9getFormatEv+0x8c>)
 8012f3c:	8809      	ldrh	r1, [r1, #0]
 8012f3e:	4419      	add	r1, r3
 8012f40:	428a      	cmp	r2, r1
 8012f42:	da09      	bge.n	8012f58 <_ZNK8touchgfx6Bitmap9getFormatEv+0x60>
 8012f44:	1ad3      	subs	r3, r2, r3
 8012f46:	4a10      	ldr	r2, [pc, #64]	@ (8012f88 <_ZNK8touchgfx6Bitmap9getFormatEv+0x90>)
 8012f48:	6812      	ldr	r2, [r2, #0]
 8012f4a:	210e      	movs	r1, #14
 8012f4c:	fb01 2303 	mla	r3, r1, r3, r2
 8012f50:	7b18      	ldrb	r0, [r3, #12]
 8012f52:	f000 001f 	and.w	r0, r0, #31
 8012f56:	e7ef      	b.n	8012f38 <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
 8012f58:	f64f 73fe 	movw	r3, #65534	@ 0xfffe
 8012f5c:	429a      	cmp	r2, r3
 8012f5e:	d108      	bne.n	8012f72 <_ZNK8touchgfx6Bitmap9getFormatEv+0x7a>
 8012f60:	f7ef fd3c 	bl	80029dc <_ZN8touchgfx3HAL3lcdEv>
 8012f64:	6803      	ldr	r3, [r0, #0]
 8012f66:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8012f6a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8012f6c:	4718      	bx	r3
 8012f6e:	2001      	movs	r0, #1
 8012f70:	e7e2      	b.n	8012f38 <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
 8012f72:	2000      	movs	r0, #0
 8012f74:	e7e0      	b.n	8012f38 <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
 8012f76:	bf00      	nop
 8012f78:	200140cc 	.word	0x200140cc
 8012f7c:	200140d4 	.word	0x200140d4
 8012f80:	200140b0 	.word	0x200140b0
 8012f84:	200140d0 	.word	0x200140d0
 8012f88:	200140b4 	.word	0x200140b4

08012f8c <_ZNK8touchgfx8LCD16bpp8bitDepthEv>:
 8012f8c:	2010      	movs	r0, #16
 8012f8e:	4770      	bx	lr

08012f90 <_ZNK8touchgfx8LCD16bpp17framebufferFormatEv>:
 8012f90:	2000      	movs	r0, #0
 8012f92:	4770      	bx	lr

08012f94 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv>:
 8012f94:	4b02      	ldr	r3, [pc, #8]	@ (8012fa0 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0xc>)
 8012f96:	8818      	ldrh	r0, [r3, #0]
 8012f98:	0040      	lsls	r0, r0, #1
 8012f9a:	b280      	uxth	r0, r0
 8012f9c:	4770      	bx	lr
 8012f9e:	bf00      	nop
 8012fa0:	2001403c 	.word	0x2001403c

08012fa4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
 8012fa4:	2bff      	cmp	r3, #255	@ 0xff
 8012fa6:	d05e      	beq.n	8013066 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xc2>
 8012fa8:	2a0b      	cmp	r2, #11
 8012faa:	d058      	beq.n	801305e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xba>
 8012fac:	d80e      	bhi.n	8012fcc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x28>
 8012fae:	2a03      	cmp	r2, #3
 8012fb0:	d04d      	beq.n	801304e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xaa>
 8012fb2:	d804      	bhi.n	8012fbe <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
 8012fb4:	2a01      	cmp	r2, #1
 8012fb6:	d04c      	beq.n	8013052 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xae>
 8012fb8:	d94d      	bls.n	8013056 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xb2>
 8012fba:	6bc3      	ldr	r3, [r0, #60]	@ 0x3c
 8012fbc:	e031      	b.n	8013022 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8012fbe:	2a09      	cmp	r2, #9
 8012fc0:	d04d      	beq.n	801305e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xba>
 8012fc2:	d84a      	bhi.n	801305a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xb6>
 8012fc4:	2a08      	cmp	r2, #8
 8012fc6:	d048      	beq.n	801305a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xb6>
 8012fc8:	2300      	movs	r3, #0
 8012fca:	e02a      	b.n	8013022 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8012fcc:	2a2f      	cmp	r2, #47	@ 0x2f
 8012fce:	d02c      	beq.n	801302a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x86>
 8012fd0:	d811      	bhi.n	8012ff6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x52>
 8012fd2:	2a2d      	cmp	r2, #45	@ 0x2d
 8012fd4:	d018      	beq.n	8013008 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x64>
 8012fd6:	d831      	bhi.n	801303c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x98>
 8012fd8:	2a2c      	cmp	r2, #44	@ 0x2c
 8012fda:	d1f5      	bne.n	8012fc8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8012fdc:	684a      	ldr	r2, [r1, #4]
 8012fde:	7813      	ldrb	r3, [r2, #0]
 8012fe0:	7852      	ldrb	r2, [r2, #1]
 8012fe2:	2a00      	cmp	r2, #0
 8012fe4:	d1f0      	bne.n	8012fc8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8012fe6:	2b01      	cmp	r3, #1
 8012fe8:	d01d      	beq.n	8013026 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x82>
 8012fea:	2b00      	cmp	r3, #0
 8012fec:	d02d      	beq.n	801304a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa6>
 8012fee:	2b02      	cmp	r3, #2
 8012ff0:	d1ea      	bne.n	8012fc8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8012ff2:	68c3      	ldr	r3, [r0, #12]
 8012ff4:	e015      	b.n	8013022 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8012ff6:	2a31      	cmp	r2, #49	@ 0x31
 8012ff8:	d004      	beq.n	8013004 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x60>
 8012ffa:	d332      	bcc.n	8013062 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbe>
 8012ffc:	2a32      	cmp	r2, #50	@ 0x32
 8012ffe:	d030      	beq.n	8013062 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbe>
 8013000:	2a33      	cmp	r2, #51	@ 0x33
 8013002:	d1e1      	bne.n	8012fc8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8013004:	6f43      	ldr	r3, [r0, #116]	@ 0x74
 8013006:	e00c      	b.n	8013022 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8013008:	684a      	ldr	r2, [r1, #4]
 801300a:	7813      	ldrb	r3, [r2, #0]
 801300c:	7852      	ldrb	r2, [r2, #1]
 801300e:	2a00      	cmp	r2, #0
 8013010:	d1da      	bne.n	8012fc8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8013012:	2b01      	cmp	r3, #1
 8013014:	d004      	beq.n	8013020 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7c>
 8013016:	d30f      	bcc.n	8013038 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x94>
 8013018:	2b02      	cmp	r3, #2
 801301a:	d1d5      	bne.n	8012fc8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801301c:	6943      	ldr	r3, [r0, #20]
 801301e:	e000      	b.n	8013022 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8013020:	6a43      	ldr	r3, [r0, #36]	@ 0x24
 8013022:	4618      	mov	r0, r3
 8013024:	4770      	bx	lr
 8013026:	69c3      	ldr	r3, [r0, #28]
 8013028:	e7fb      	b.n	8013022 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801302a:	684b      	ldr	r3, [r1, #4]
 801302c:	781a      	ldrb	r2, [r3, #0]
 801302e:	785b      	ldrb	r3, [r3, #1]
 8013030:	2b00      	cmp	r3, #0
 8013032:	d1c9      	bne.n	8012fc8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8013034:	2a00      	cmp	r2, #0
 8013036:	d1f4      	bne.n	8013022 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8013038:	6b43      	ldr	r3, [r0, #52]	@ 0x34
 801303a:	e7f2      	b.n	8013022 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801303c:	684b      	ldr	r3, [r1, #4]
 801303e:	781a      	ldrb	r2, [r3, #0]
 8013040:	785b      	ldrb	r3, [r3, #1]
 8013042:	2b00      	cmp	r3, #0
 8013044:	d1c0      	bne.n	8012fc8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8013046:	2a00      	cmp	r2, #0
 8013048:	d1eb      	bne.n	8013022 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801304a:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 801304c:	e7e9      	b.n	8013022 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801304e:	6cc3      	ldr	r3, [r0, #76]	@ 0x4c
 8013050:	e7e7      	b.n	8013022 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8013052:	6d43      	ldr	r3, [r0, #84]	@ 0x54
 8013054:	e7e5      	b.n	8013022 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8013056:	6c43      	ldr	r3, [r0, #68]	@ 0x44
 8013058:	e7e3      	b.n	8013022 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801305a:	6dc3      	ldr	r3, [r0, #92]	@ 0x5c
 801305c:	e7e1      	b.n	8013022 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801305e:	6e43      	ldr	r3, [r0, #100]	@ 0x64
 8013060:	e7df      	b.n	8013022 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8013062:	6ec3      	ldr	r3, [r0, #108]	@ 0x6c
 8013064:	e7dd      	b.n	8013022 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8013066:	2a0b      	cmp	r2, #11
 8013068:	d059      	beq.n	801311e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x17a>
 801306a:	d80e      	bhi.n	801308a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xe6>
 801306c:	2a03      	cmp	r2, #3
 801306e:	d050      	beq.n	8013112 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x16e>
 8013070:	d804      	bhi.n	801307c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xd8>
 8013072:	2a01      	cmp	r2, #1
 8013074:	d04f      	beq.n	8013116 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x172>
 8013076:	d950      	bls.n	801311a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x176>
 8013078:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 801307a:	e7d2      	b.n	8013022 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801307c:	2a09      	cmp	r2, #9
 801307e:	d04e      	beq.n	801311e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x17a>
 8013080:	d801      	bhi.n	8013086 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xe2>
 8013082:	2a08      	cmp	r2, #8
 8013084:	d1a0      	bne.n	8012fc8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8013086:	6e03      	ldr	r3, [r0, #96]	@ 0x60
 8013088:	e7cb      	b.n	8013022 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801308a:	2a2f      	cmp	r2, #47	@ 0x2f
 801308c:	d02d      	beq.n	80130ea <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x146>
 801308e:	d811      	bhi.n	80130b4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x110>
 8013090:	2a2d      	cmp	r2, #45	@ 0x2d
 8013092:	d018      	beq.n	80130c6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x122>
 8013094:	d833      	bhi.n	80130fe <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x15a>
 8013096:	2a2c      	cmp	r2, #44	@ 0x2c
 8013098:	d196      	bne.n	8012fc8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801309a:	684a      	ldr	r2, [r1, #4]
 801309c:	7813      	ldrb	r3, [r2, #0]
 801309e:	7852      	ldrb	r2, [r2, #1]
 80130a0:	2a00      	cmp	r2, #0
 80130a2:	d191      	bne.n	8012fc8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80130a4:	2b01      	cmp	r3, #1
 80130a6:	d01e      	beq.n	80130e6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 80130a8:	2b00      	cmp	r3, #0
 80130aa:	d030      	beq.n	801310e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x16a>
 80130ac:	2b02      	cmp	r3, #2
 80130ae:	d18b      	bne.n	8012fc8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80130b0:	6903      	ldr	r3, [r0, #16]
 80130b2:	e7b6      	b.n	8013022 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 80130b4:	2a31      	cmp	r2, #49	@ 0x31
 80130b6:	d004      	beq.n	80130c2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11e>
 80130b8:	d333      	bcc.n	8013122 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x17e>
 80130ba:	2a32      	cmp	r2, #50	@ 0x32
 80130bc:	d031      	beq.n	8013122 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x17e>
 80130be:	2a33      	cmp	r2, #51	@ 0x33
 80130c0:	d182      	bne.n	8012fc8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80130c2:	6f83      	ldr	r3, [r0, #120]	@ 0x78
 80130c4:	e7ad      	b.n	8013022 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 80130c6:	684a      	ldr	r2, [r1, #4]
 80130c8:	7813      	ldrb	r3, [r2, #0]
 80130ca:	7852      	ldrb	r2, [r2, #1]
 80130cc:	2a00      	cmp	r2, #0
 80130ce:	f47f af7b 	bne.w	8012fc8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80130d2:	2b01      	cmp	r3, #1
 80130d4:	d005      	beq.n	80130e2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 80130d6:	d310      	bcc.n	80130fa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x156>
 80130d8:	2b02      	cmp	r3, #2
 80130da:	f47f af75 	bne.w	8012fc8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80130de:	6983      	ldr	r3, [r0, #24]
 80130e0:	e79f      	b.n	8013022 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 80130e2:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 80130e4:	e79d      	b.n	8013022 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 80130e6:	6a03      	ldr	r3, [r0, #32]
 80130e8:	e79b      	b.n	8013022 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 80130ea:	684b      	ldr	r3, [r1, #4]
 80130ec:	781a      	ldrb	r2, [r3, #0]
 80130ee:	785b      	ldrb	r3, [r3, #1]
 80130f0:	2b00      	cmp	r3, #0
 80130f2:	f47f af69 	bne.w	8012fc8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80130f6:	2a00      	cmp	r2, #0
 80130f8:	d193      	bne.n	8013022 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 80130fa:	6b83      	ldr	r3, [r0, #56]	@ 0x38
 80130fc:	e791      	b.n	8013022 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 80130fe:	684b      	ldr	r3, [r1, #4]
 8013100:	781a      	ldrb	r2, [r3, #0]
 8013102:	785b      	ldrb	r3, [r3, #1]
 8013104:	2b00      	cmp	r3, #0
 8013106:	f47f af5f 	bne.w	8012fc8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801310a:	2a00      	cmp	r2, #0
 801310c:	d189      	bne.n	8013022 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801310e:	6b03      	ldr	r3, [r0, #48]	@ 0x30
 8013110:	e787      	b.n	8013022 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8013112:	6d03      	ldr	r3, [r0, #80]	@ 0x50
 8013114:	e785      	b.n	8013022 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8013116:	6d83      	ldr	r3, [r0, #88]	@ 0x58
 8013118:	e783      	b.n	8013022 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801311a:	6c83      	ldr	r3, [r0, #72]	@ 0x48
 801311c:	e781      	b.n	8013022 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801311e:	6e83      	ldr	r3, [r0, #104]	@ 0x68
 8013120:	e77f      	b.n	8013022 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8013122:	6f03      	ldr	r3, [r0, #112]	@ 0x70
 8013124:	e77d      	b.n	8013022 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>

08013126 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8013126:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801312a:	b087      	sub	sp, #28
 801312c:	9815      	ldr	r0, [sp, #84]	@ 0x54
 801312e:	9205      	str	r2, [sp, #20]
 8013130:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 8013134:	9202      	str	r2, [sp, #8]
 8013136:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
 801313a:	9101      	str	r1, [sp, #4]
 801313c:	6841      	ldr	r1, [r0, #4]
 801313e:	f8dd e060 	ldr.w	lr, [sp, #96]	@ 0x60
 8013142:	fb01 2404 	mla	r4, r1, r4, r2
 8013146:	6802      	ldr	r2, [r0, #0]
 8013148:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801314c:	f8de 2000 	ldr.w	r2, [lr]
 8013150:	9203      	str	r2, [sp, #12]
 8013152:	f8de 2004 	ldr.w	r2, [lr, #4]
 8013156:	3204      	adds	r2, #4
 8013158:	9204      	str	r2, [sp, #16]
 801315a:	9a02      	ldr	r2, [sp, #8]
 801315c:	43d6      	mvns	r6, r2
 801315e:	b2f6      	uxtb	r6, r6
 8013160:	9a01      	ldr	r2, [sp, #4]
 8013162:	2a00      	cmp	r2, #0
 8013164:	dc03      	bgt.n	801316e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8013166:	9a05      	ldr	r2, [sp, #20]
 8013168:	2a00      	cmp	r2, #0
 801316a:	f340 8129 	ble.w	80133c0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 801316e:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8013170:	f9be c008 	ldrsh.w	ip, [lr, #8]
 8013174:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 8013178:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 801317c:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 801317e:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8013182:	2b00      	cmp	r3, #0
 8013184:	dd0e      	ble.n	80131a4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8013186:	1408      	asrs	r0, r1, #16
 8013188:	d405      	bmi.n	8013196 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801318a:	4560      	cmp	r0, ip
 801318c:	da03      	bge.n	8013196 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801318e:	1410      	asrs	r0, r2, #16
 8013190:	d401      	bmi.n	8013196 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8013192:	42b8      	cmp	r0, r7
 8013194:	db07      	blt.n	80131a6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8013196:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8013198:	4401      	add	r1, r0
 801319a:	9814      	ldr	r0, [sp, #80]	@ 0x50
 801319c:	3b01      	subs	r3, #1
 801319e:	4402      	add	r2, r0
 80131a0:	3402      	adds	r4, #2
 80131a2:	e7ee      	b.n	8013182 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 80131a4:	d071      	beq.n	801328a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80131a6:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 80131a8:	1e58      	subs	r0, r3, #1
 80131aa:	fb05 1500 	mla	r5, r5, r0, r1
 80131ae:	142d      	asrs	r5, r5, #16
 80131b0:	d45f      	bmi.n	8013272 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 80131b2:	4565      	cmp	r5, ip
 80131b4:	da5d      	bge.n	8013272 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 80131b6:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 80131b8:	fb05 2000 	mla	r0, r5, r0, r2
 80131bc:	1400      	asrs	r0, r0, #16
 80131be:	d458      	bmi.n	8013272 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 80131c0:	42b8      	cmp	r0, r7
 80131c2:	da56      	bge.n	8013272 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 80131c4:	f8bd b008 	ldrh.w	fp, [sp, #8]
 80131c8:	4699      	mov	r9, r3
 80131ca:	46a2      	mov	sl, r4
 80131cc:	f1b9 0f00 	cmp.w	r9, #0
 80131d0:	dd57      	ble.n	8013282 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
 80131d2:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 80131d6:	9803      	ldr	r0, [sp, #12]
 80131d8:	ea4f 4c22 	mov.w	ip, r2, asr #16
 80131dc:	140d      	asrs	r5, r1, #16
 80131de:	fb07 000c 	mla	r0, r7, ip, r0
 80131e2:	f109 39ff 	add.w	r9, r9, #4294967295
 80131e6:	5d40      	ldrb	r0, [r0, r5]
 80131e8:	9d04      	ldr	r5, [sp, #16]
 80131ea:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 80131ee:	f8ba 5000 	ldrh.w	r5, [sl]
 80131f2:	122f      	asrs	r7, r5, #8
 80131f4:	ea4f 2c20 	mov.w	ip, r0, asr #8
 80131f8:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 80131fc:	fb17 f706 	smulbb	r7, r7, r6
 8013200:	ea4f 08e5 	mov.w	r8, r5, asr #3
 8013204:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8013208:	00ed      	lsls	r5, r5, #3
 801320a:	fb0c 7c0b 	mla	ip, ip, fp, r7
 801320e:	f008 08fc 	and.w	r8, r8, #252	@ 0xfc
 8013212:	10c7      	asrs	r7, r0, #3
 8013214:	b2ed      	uxtb	r5, r5
 8013216:	00c0      	lsls	r0, r0, #3
 8013218:	fb18 f806 	smulbb	r8, r8, r6
 801321c:	fb15 f506 	smulbb	r5, r5, r6
 8013220:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8013224:	b2c0      	uxtb	r0, r0
 8013226:	fa1f fc8c 	uxth.w	ip, ip
 801322a:	fb07 870b 	mla	r7, r7, fp, r8
 801322e:	fb00 500b 	mla	r0, r0, fp, r5
 8013232:	b280      	uxth	r0, r0
 8013234:	b2bf      	uxth	r7, r7
 8013236:	f10c 0501 	add.w	r5, ip, #1
 801323a:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801323e:	f107 0801 	add.w	r8, r7, #1
 8013242:	1c45      	adds	r5, r0, #1
 8013244:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8013248:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 801324c:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 801324e:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8013252:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8013256:	ea4f 1858 	mov.w	r8, r8, lsr #5
 801325a:	ea45 0c0c 	orr.w	ip, r5, ip
 801325e:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 8013262:	4401      	add	r1, r0
 8013264:	9814      	ldr	r0, [sp, #80]	@ 0x50
 8013266:	ea4c 0c08 	orr.w	ip, ip, r8
 801326a:	f82a cb02 	strh.w	ip, [sl], #2
 801326e:	4402      	add	r2, r0
 8013270:	e7ac      	b.n	80131cc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8013272:	f8bd a008 	ldrh.w	sl, [sp, #8]
 8013276:	f04f 0800 	mov.w	r8, #0
 801327a:	eb03 0008 	add.w	r0, r3, r8
 801327e:	2800      	cmp	r0, #0
 8013280:	dc41      	bgt.n	8013306 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 8013282:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8013286:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801328a:	9b01      	ldr	r3, [sp, #4]
 801328c:	2b00      	cmp	r3, #0
 801328e:	f340 8097 	ble.w	80133c0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 8013292:	ee30 0a04 	vadd.f32	s0, s0, s8
 8013296:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801329a:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801329e:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80132a0:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80132a4:	ee31 1a05 	vadd.f32	s2, s2, s10
 80132a8:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80132ac:	eef0 6a62 	vmov.f32	s13, s5
 80132b0:	ee61 7a27 	vmul.f32	s15, s2, s15
 80132b4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80132b8:	ee77 2a62 	vsub.f32	s5, s14, s5
 80132bc:	edcd 6a11 	vstr	s13, [sp, #68]	@ 0x44
 80132c0:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80132c4:	eef0 6a43 	vmov.f32	s13, s6
 80132c8:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80132cc:	ee12 2a90 	vmov	r2, s5
 80132d0:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80132d4:	fb92 f3f3 	sdiv	r3, r2, r3
 80132d8:	ee13 2a10 	vmov	r2, s6
 80132dc:	9313      	str	r3, [sp, #76]	@ 0x4c
 80132de:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80132e0:	fb92 f3f3 	sdiv	r3, r2, r3
 80132e4:	9314      	str	r3, [sp, #80]	@ 0x50
 80132e6:	9b01      	ldr	r3, [sp, #4]
 80132e8:	9a05      	ldr	r2, [sp, #20]
 80132ea:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80132ee:	3b01      	subs	r3, #1
 80132f0:	9301      	str	r3, [sp, #4]
 80132f2:	edcd 6a12 	vstr	s13, [sp, #72]	@ 0x48
 80132f6:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80132f8:	eeb0 3a67 	vmov.f32	s6, s15
 80132fc:	bf08      	it	eq
 80132fe:	4613      	moveq	r3, r2
 8013300:	eef0 2a47 	vmov.f32	s5, s14
 8013304:	e72c      	b.n	8013160 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8013306:	140f      	asrs	r7, r1, #16
 8013308:	d453      	bmi.n	80133b2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801330a:	f8de 5008 	ldr.w	r5, [lr, #8]
 801330e:	42bd      	cmp	r5, r7
 8013310:	dd4f      	ble.n	80133b2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8013312:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8013316:	d44c      	bmi.n	80133b2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8013318:	f8de 000c 	ldr.w	r0, [lr, #12]
 801331c:	4560      	cmp	r0, ip
 801331e:	dd48      	ble.n	80133b2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8013320:	9803      	ldr	r0, [sp, #12]
 8013322:	b22d      	sxth	r5, r5
 8013324:	fb0c 0505 	mla	r5, ip, r5, r0
 8013328:	5de8      	ldrb	r0, [r5, r7]
 801332a:	9d04      	ldr	r5, [sp, #16]
 801332c:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 8013330:	f06f 0501 	mvn.w	r5, #1
 8013334:	fb05 fb08 	mul.w	fp, r5, r8
 8013338:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801333c:	f834 500b 	ldrh.w	r5, [r4, fp]
 8013340:	122f      	asrs	r7, r5, #8
 8013342:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8013346:	fb17 f706 	smulbb	r7, r7, r6
 801334a:	ea4f 09e5 	mov.w	r9, r5, asr #3
 801334e:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8013352:	00ed      	lsls	r5, r5, #3
 8013354:	fb0c 7c0a 	mla	ip, ip, sl, r7
 8013358:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
 801335c:	10c7      	asrs	r7, r0, #3
 801335e:	b2ed      	uxtb	r5, r5
 8013360:	00c0      	lsls	r0, r0, #3
 8013362:	fb19 f906 	smulbb	r9, r9, r6
 8013366:	fb15 f506 	smulbb	r5, r5, r6
 801336a:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801336e:	b2c0      	uxtb	r0, r0
 8013370:	fa1f fc8c 	uxth.w	ip, ip
 8013374:	fb07 970a 	mla	r7, r7, sl, r9
 8013378:	fb00 500a 	mla	r0, r0, sl, r5
 801337c:	b2bf      	uxth	r7, r7
 801337e:	b280      	uxth	r0, r0
 8013380:	f10c 0501 	add.w	r5, ip, #1
 8013384:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8013388:	f107 0901 	add.w	r9, r7, #1
 801338c:	1c45      	adds	r5, r0, #1
 801338e:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8013392:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 8013396:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 801339a:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801339e:	ea4f 1959 	mov.w	r9, r9, lsr #5
 80133a2:	ea45 0c0c 	orr.w	ip, r5, ip
 80133a6:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 80133aa:	ea4c 0c09 	orr.w	ip, ip, r9
 80133ae:	f824 c00b 	strh.w	ip, [r4, fp]
 80133b2:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 80133b4:	4401      	add	r1, r0
 80133b6:	9814      	ldr	r0, [sp, #80]	@ 0x50
 80133b8:	f108 38ff 	add.w	r8, r8, #4294967295
 80133bc:	4402      	add	r2, r0
 80133be:	e75c      	b.n	801327a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 80133c0:	b007      	add	sp, #28
 80133c2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080133c6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80133c6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80133ca:	b085      	sub	sp, #20
 80133cc:	4693      	mov	fp, r2
 80133ce:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 80133d0:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 80133d2:	6870      	ldr	r0, [r6, #4]
 80133d4:	9100      	str	r1, [sp, #0]
 80133d6:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 80133da:	fb00 2404 	mla	r4, r0, r4, r2
 80133de:	6832      	ldr	r2, [r6, #0]
 80133e0:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80133e4:	682a      	ldr	r2, [r5, #0]
 80133e6:	9201      	str	r2, [sp, #4]
 80133e8:	686a      	ldr	r2, [r5, #4]
 80133ea:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	@ 0x44
 80133ee:	3204      	adds	r2, #4
 80133f0:	9202      	str	r2, [sp, #8]
 80133f2:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 80133f6:	9a00      	ldr	r2, [sp, #0]
 80133f8:	2a00      	cmp	r2, #0
 80133fa:	dc03      	bgt.n	8013404 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 80133fc:	f1bb 0f00 	cmp.w	fp, #0
 8013400:	f340 80a0 	ble.w	8013544 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 8013404:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8013406:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801340a:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 801340e:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 8013412:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8013414:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8013418:	2b00      	cmp	r3, #0
 801341a:	dd0c      	ble.n	8013436 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801341c:	1406      	asrs	r6, r0, #16
 801341e:	d405      	bmi.n	801342c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8013420:	454e      	cmp	r6, r9
 8013422:	da03      	bge.n	801342c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8013424:	1416      	asrs	r6, r2, #16
 8013426:	d401      	bmi.n	801342c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8013428:	4546      	cmp	r6, r8
 801342a:	db05      	blt.n	8013438 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801342c:	4470      	add	r0, lr
 801342e:	4462      	add	r2, ip
 8013430:	3b01      	subs	r3, #1
 8013432:	3402      	adds	r4, #2
 8013434:	e7f0      	b.n	8013418 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8013436:	d00f      	beq.n	8013458 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8013438:	1e5e      	subs	r6, r3, #1
 801343a:	fb0e 0706 	mla	r7, lr, r6, r0
 801343e:	143f      	asrs	r7, r7, #16
 8013440:	d541      	bpl.n	80134c6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x100>
 8013442:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 8013446:	4698      	mov	r8, r3
 8013448:	9603      	str	r6, [sp, #12]
 801344a:	f1b8 0f00 	cmp.w	r8, #0
 801344e:	dc59      	bgt.n	8013504 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8013450:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8013454:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8013458:	9b00      	ldr	r3, [sp, #0]
 801345a:	2b00      	cmp	r3, #0
 801345c:	dd72      	ble.n	8013544 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 801345e:	ee30 0a04 	vadd.f32	s0, s0, s8
 8013462:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8013466:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801346a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801346c:	ee31 1a05 	vadd.f32	s2, s2, s10
 8013470:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8013474:	eeb0 6a62 	vmov.f32	s12, s5
 8013478:	ee61 7a27 	vmul.f32	s15, s2, s15
 801347c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8013480:	ee77 2a62 	vsub.f32	s5, s14, s5
 8013484:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 8013488:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801348c:	eeb0 6a43 	vmov.f32	s12, s6
 8013490:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8013494:	ee12 2a90 	vmov	r2, s5
 8013498:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801349c:	fb92 fef3 	sdiv	lr, r2, r3
 80134a0:	ee13 2a10 	vmov	r2, s6
 80134a4:	fb92 fcf3 	sdiv	ip, r2, r3
 80134a8:	9b00      	ldr	r3, [sp, #0]
 80134aa:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80134ae:	3b01      	subs	r3, #1
 80134b0:	9300      	str	r3, [sp, #0]
 80134b2:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 80134b6:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80134b8:	eeb0 3a67 	vmov.f32	s6, s15
 80134bc:	bf08      	it	eq
 80134be:	465b      	moveq	r3, fp
 80134c0:	eef0 2a47 	vmov.f32	s5, s14
 80134c4:	e797      	b.n	80133f6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 80134c6:	454f      	cmp	r7, r9
 80134c8:	dabb      	bge.n	8013442 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 80134ca:	fb0c 2606 	mla	r6, ip, r6, r2
 80134ce:	1436      	asrs	r6, r6, #16
 80134d0:	d4b7      	bmi.n	8013442 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 80134d2:	4546      	cmp	r6, r8
 80134d4:	dab5      	bge.n	8013442 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 80134d6:	461e      	mov	r6, r3
 80134d8:	46a0      	mov	r8, r4
 80134da:	2e00      	cmp	r6, #0
 80134dc:	ddb8      	ble.n	8013450 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 80134de:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 80134e2:	9901      	ldr	r1, [sp, #4]
 80134e4:	1417      	asrs	r7, r2, #16
 80134e6:	ea4f 4920 	mov.w	r9, r0, asr #16
 80134ea:	fb0a 1707 	mla	r7, sl, r7, r1
 80134ee:	9902      	ldr	r1, [sp, #8]
 80134f0:	f817 7009 	ldrb.w	r7, [r7, r9]
 80134f4:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 80134f8:	f828 7b02 	strh.w	r7, [r8], #2
 80134fc:	4470      	add	r0, lr
 80134fe:	4462      	add	r2, ip
 8013500:	3e01      	subs	r6, #1
 8013502:	e7ea      	b.n	80134da <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x114>
 8013504:	ea5f 4920 	movs.w	r9, r0, asr #16
 8013508:	d417      	bmi.n	801353a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 801350a:	68ae      	ldr	r6, [r5, #8]
 801350c:	454e      	cmp	r6, r9
 801350e:	dd14      	ble.n	801353a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8013510:	ea5f 4a22 	movs.w	sl, r2, asr #16
 8013514:	d411      	bmi.n	801353a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8013516:	68ef      	ldr	r7, [r5, #12]
 8013518:	4557      	cmp	r7, sl
 801351a:	dd0e      	ble.n	801353a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 801351c:	9f01      	ldr	r7, [sp, #4]
 801351e:	b236      	sxth	r6, r6
 8013520:	fb0a 7606 	mla	r6, sl, r6, r7
 8013524:	9f02      	ldr	r7, [sp, #8]
 8013526:	f816 6009 	ldrb.w	r6, [r6, r9]
 801352a:	f06f 0101 	mvn.w	r1, #1
 801352e:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 8013532:	fb01 f608 	mul.w	r6, r1, r8
 8013536:	9903      	ldr	r1, [sp, #12]
 8013538:	538f      	strh	r7, [r1, r6]
 801353a:	4470      	add	r0, lr
 801353c:	4462      	add	r2, ip
 801353e:	f108 38ff 	add.w	r8, r8, #4294967295
 8013542:	e782      	b.n	801344a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8013544:	b005      	add	sp, #20
 8013546:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801354a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801354a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801354e:	b087      	sub	sp, #28
 8013550:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 8013552:	9205      	str	r2, [sp, #20]
 8013554:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 8013558:	9203      	str	r2, [sp, #12]
 801355a:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	@ 0x58
 801355e:	9102      	str	r1, [sp, #8]
 8013560:	6861      	ldr	r1, [r4, #4]
 8013562:	f8dd c060 	ldr.w	ip, [sp, #96]	@ 0x60
 8013566:	fb01 2000 	mla	r0, r1, r0, r2
 801356a:	6822      	ldr	r2, [r4, #0]
 801356c:	eb02 0240 	add.w	r2, r2, r0, lsl #1
 8013570:	9200      	str	r2, [sp, #0]
 8013572:	f8dc 2000 	ldr.w	r2, [ip]
 8013576:	9204      	str	r2, [sp, #16]
 8013578:	f8dc 2004 	ldr.w	r2, [ip, #4]
 801357c:	3204      	adds	r2, #4
 801357e:	9201      	str	r2, [sp, #4]
 8013580:	9a03      	ldr	r2, [sp, #12]
 8013582:	43d5      	mvns	r5, r2
 8013584:	b2ed      	uxtb	r5, r5
 8013586:	9a02      	ldr	r2, [sp, #8]
 8013588:	2a00      	cmp	r2, #0
 801358a:	dc03      	bgt.n	8013594 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801358c:	9a05      	ldr	r2, [sp, #20]
 801358e:	2a00      	cmp	r2, #0
 8013590:	f340 812c 	ble.w	80137ec <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 8013594:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8013596:	f9bc e008 	ldrsh.w	lr, [ip, #8]
 801359a:	f9bc 700c 	ldrsh.w	r7, [ip, #12]
 801359e:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 80135a2:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 80135a4:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 80135a8:	2b00      	cmp	r3, #0
 80135aa:	dd10      	ble.n	80135ce <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 80135ac:	140c      	asrs	r4, r1, #16
 80135ae:	d405      	bmi.n	80135bc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80135b0:	4574      	cmp	r4, lr
 80135b2:	da03      	bge.n	80135bc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80135b4:	1414      	asrs	r4, r2, #16
 80135b6:	d401      	bmi.n	80135bc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80135b8:	42bc      	cmp	r4, r7
 80135ba:	db09      	blt.n	80135d0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 80135bc:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 80135be:	9800      	ldr	r0, [sp, #0]
 80135c0:	4421      	add	r1, r4
 80135c2:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 80135c4:	3002      	adds	r0, #2
 80135c6:	4422      	add	r2, r4
 80135c8:	3b01      	subs	r3, #1
 80135ca:	9000      	str	r0, [sp, #0]
 80135cc:	e7ec      	b.n	80135a8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 80135ce:	d071      	beq.n	80136b4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16a>
 80135d0:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 80135d2:	1e5c      	subs	r4, r3, #1
 80135d4:	fb06 1604 	mla	r6, r6, r4, r1
 80135d8:	1436      	asrs	r6, r6, #16
 80135da:	d45d      	bmi.n	8013698 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 80135dc:	4576      	cmp	r6, lr
 80135de:	da5b      	bge.n	8013698 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 80135e0:	9e14      	ldr	r6, [sp, #80]	@ 0x50
 80135e2:	fb06 2404 	mla	r4, r6, r4, r2
 80135e6:	1424      	asrs	r4, r4, #16
 80135e8:	d456      	bmi.n	8013698 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 80135ea:	42bc      	cmp	r4, r7
 80135ec:	da54      	bge.n	8013698 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 80135ee:	f8dd 9000 	ldr.w	r9, [sp]
 80135f2:	f8bd a00c 	ldrh.w	sl, [sp, #12]
 80135f6:	4698      	mov	r8, r3
 80135f8:	f1b8 0f00 	cmp.w	r8, #0
 80135fc:	dd54      	ble.n	80136a8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 80135fe:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 8013602:	9804      	ldr	r0, [sp, #16]
 8013604:	1414      	asrs	r4, r2, #16
 8013606:	fb07 0404 	mla	r4, r7, r4, r0
 801360a:	140e      	asrs	r6, r1, #16
 801360c:	9801      	ldr	r0, [sp, #4]
 801360e:	f814 e006 	ldrb.w	lr, [r4, r6]
 8013612:	f8b9 4000 	ldrh.w	r4, [r9]
 8013616:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801361a:	eb00 0b0e 	add.w	fp, r0, lr
 801361e:	1227      	asrs	r7, r4, #8
 8013620:	f89b 6002 	ldrb.w	r6, [fp, #2]
 8013624:	f89b b001 	ldrb.w	fp, [fp, #1]
 8013628:	f810 e00e 	ldrb.w	lr, [r0, lr]
 801362c:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 801362e:	fb16 f60a 	smulbb	r6, r6, sl
 8013632:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8013636:	fb07 6705 	mla	r7, r7, r5, r6
 801363a:	10e6      	asrs	r6, r4, #3
 801363c:	00e4      	lsls	r4, r4, #3
 801363e:	b2e4      	uxtb	r4, r4
 8013640:	fb1b fb0a 	smulbb	fp, fp, sl
 8013644:	fb14 f405 	smulbb	r4, r4, r5
 8013648:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 801364c:	b2bf      	uxth	r7, r7
 801364e:	fb06 b605 	mla	r6, r6, r5, fp
 8013652:	fb0e 4e0a 	mla	lr, lr, sl, r4
 8013656:	b2b6      	uxth	r6, r6
 8013658:	fa1f fe8e 	uxth.w	lr, lr
 801365c:	1c7c      	adds	r4, r7, #1
 801365e:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 8013662:	f106 0b01 	add.w	fp, r6, #1
 8013666:	f10e 0401 	add.w	r4, lr, #1
 801366a:	eb04 241e 	add.w	r4, r4, lr, lsr #8
 801366e:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 8013672:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 8013676:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 801367a:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 801367e:	4327      	orrs	r7, r4
 8013680:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
 8013684:	4401      	add	r1, r0
 8013686:	9814      	ldr	r0, [sp, #80]	@ 0x50
 8013688:	ea47 070b 	orr.w	r7, r7, fp
 801368c:	f829 7b02 	strh.w	r7, [r9], #2
 8013690:	4402      	add	r2, r0
 8013692:	f108 38ff 	add.w	r8, r8, #4294967295
 8013696:	e7af      	b.n	80135f8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 8013698:	f8bd 900c 	ldrh.w	r9, [sp, #12]
 801369c:	f04f 0e00 	mov.w	lr, #0
 80136a0:	eb03 040e 	add.w	r4, r3, lr
 80136a4:	2c00      	cmp	r4, #0
 80136a6:	dc43      	bgt.n	8013730 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 80136a8:	9a00      	ldr	r2, [sp, #0]
 80136aa:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80136ae:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80136b2:	9300      	str	r3, [sp, #0]
 80136b4:	9b02      	ldr	r3, [sp, #8]
 80136b6:	2b00      	cmp	r3, #0
 80136b8:	f340 8098 	ble.w	80137ec <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 80136bc:	ee30 0a04 	vadd.f32	s0, s0, s8
 80136c0:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 80136c4:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80136c8:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80136ca:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80136ce:	ee31 1a05 	vadd.f32	s2, s2, s10
 80136d2:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80136d6:	eef0 6a62 	vmov.f32	s13, s5
 80136da:	ee61 7a27 	vmul.f32	s15, s2, s15
 80136de:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80136e2:	ee77 2a62 	vsub.f32	s5, s14, s5
 80136e6:	edcd 6a11 	vstr	s13, [sp, #68]	@ 0x44
 80136ea:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80136ee:	eef0 6a43 	vmov.f32	s13, s6
 80136f2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80136f6:	ee12 2a90 	vmov	r2, s5
 80136fa:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80136fe:	fb92 f3f3 	sdiv	r3, r2, r3
 8013702:	ee13 2a10 	vmov	r2, s6
 8013706:	9313      	str	r3, [sp, #76]	@ 0x4c
 8013708:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801370a:	fb92 f3f3 	sdiv	r3, r2, r3
 801370e:	9314      	str	r3, [sp, #80]	@ 0x50
 8013710:	9b02      	ldr	r3, [sp, #8]
 8013712:	9a05      	ldr	r2, [sp, #20]
 8013714:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8013718:	3b01      	subs	r3, #1
 801371a:	9302      	str	r3, [sp, #8]
 801371c:	edcd 6a12 	vstr	s13, [sp, #72]	@ 0x48
 8013720:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8013722:	eeb0 3a67 	vmov.f32	s6, s15
 8013726:	bf08      	it	eq
 8013728:	4613      	moveq	r3, r2
 801372a:	eef0 2a47 	vmov.f32	s5, s14
 801372e:	e72a      	b.n	8013586 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8013730:	140f      	asrs	r7, r1, #16
 8013732:	d454      	bmi.n	80137de <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8013734:	f8dc 6008 	ldr.w	r6, [ip, #8]
 8013738:	42be      	cmp	r6, r7
 801373a:	dd50      	ble.n	80137de <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801373c:	ea5f 4822 	movs.w	r8, r2, asr #16
 8013740:	d44d      	bmi.n	80137de <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8013742:	f8dc 400c 	ldr.w	r4, [ip, #12]
 8013746:	4544      	cmp	r4, r8
 8013748:	dd49      	ble.n	80137de <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801374a:	9c04      	ldr	r4, [sp, #16]
 801374c:	b236      	sxth	r6, r6
 801374e:	fb08 4606 	mla	r6, r8, r6, r4
 8013752:	f06f 0001 	mvn.w	r0, #1
 8013756:	f816 8007 	ldrb.w	r8, [r6, r7]
 801375a:	9c01      	ldr	r4, [sp, #4]
 801375c:	fb00 fa0e 	mul.w	sl, r0, lr
 8013760:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 8013764:	9800      	ldr	r0, [sp, #0]
 8013766:	eb04 0b08 	add.w	fp, r4, r8
 801376a:	f830 400a 	ldrh.w	r4, [r0, sl]
 801376e:	f89b 6002 	ldrb.w	r6, [fp, #2]
 8013772:	9801      	ldr	r0, [sp, #4]
 8013774:	f89b b001 	ldrb.w	fp, [fp, #1]
 8013778:	f810 8008 	ldrb.w	r8, [r0, r8]
 801377c:	9800      	ldr	r0, [sp, #0]
 801377e:	1227      	asrs	r7, r4, #8
 8013780:	fb16 f609 	smulbb	r6, r6, r9
 8013784:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8013788:	fb07 6705 	mla	r7, r7, r5, r6
 801378c:	10e6      	asrs	r6, r4, #3
 801378e:	00e4      	lsls	r4, r4, #3
 8013790:	b2e4      	uxtb	r4, r4
 8013792:	fb1b fb09 	smulbb	fp, fp, r9
 8013796:	fb14 f405 	smulbb	r4, r4, r5
 801379a:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 801379e:	b2bf      	uxth	r7, r7
 80137a0:	fb06 b605 	mla	r6, r6, r5, fp
 80137a4:	fb08 4809 	mla	r8, r8, r9, r4
 80137a8:	b2b6      	uxth	r6, r6
 80137aa:	fa1f f888 	uxth.w	r8, r8
 80137ae:	1c7c      	adds	r4, r7, #1
 80137b0:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 80137b4:	f106 0b01 	add.w	fp, r6, #1
 80137b8:	f108 0401 	add.w	r4, r8, #1
 80137bc:	eb04 2418 	add.w	r4, r4, r8, lsr #8
 80137c0:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 80137c4:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 80137c8:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 80137cc:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 80137d0:	4327      	orrs	r7, r4
 80137d2:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
 80137d6:	ea47 070b 	orr.w	r7, r7, fp
 80137da:	f820 700a 	strh.w	r7, [r0, sl]
 80137de:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 80137e0:	4401      	add	r1, r0
 80137e2:	9814      	ldr	r0, [sp, #80]	@ 0x50
 80137e4:	f10e 3eff 	add.w	lr, lr, #4294967295
 80137e8:	4402      	add	r2, r0
 80137ea:	e759      	b.n	80136a0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 80137ec:	b007      	add	sp, #28
 80137ee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

080137f4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80137f4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80137f8:	b085      	sub	sp, #20
 80137fa:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 80137fe:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 8013800:	9203      	str	r2, [sp, #12]
 8013802:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 8013806:	6870      	ldr	r0, [r6, #4]
 8013808:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 801380a:	f8dd c044 	ldr.w	ip, [sp, #68]	@ 0x44
 801380e:	686f      	ldr	r7, [r5, #4]
 8013810:	9101      	str	r1, [sp, #4]
 8013812:	fb00 2404 	mla	r4, r0, r4, r2
 8013816:	6832      	ldr	r2, [r6, #0]
 8013818:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801381c:	682a      	ldr	r2, [r5, #0]
 801381e:	9202      	str	r2, [sp, #8]
 8013820:	3704      	adds	r7, #4
 8013822:	9a01      	ldr	r2, [sp, #4]
 8013824:	2a00      	cmp	r2, #0
 8013826:	dc03      	bgt.n	8013830 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8013828:	9a03      	ldr	r2, [sp, #12]
 801382a:	2a00      	cmp	r2, #0
 801382c:	f340 80cc 	ble.w	80139c8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8013830:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8013832:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8013836:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 801383a:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 801383e:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8013840:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8013844:	2b00      	cmp	r3, #0
 8013846:	dd0d      	ble.n	8013864 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8013848:	1406      	asrs	r6, r0, #16
 801384a:	d405      	bmi.n	8013858 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 801384c:	454e      	cmp	r6, r9
 801384e:	da03      	bge.n	8013858 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8013850:	1416      	asrs	r6, r2, #16
 8013852:	d401      	bmi.n	8013858 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8013854:	4546      	cmp	r6, r8
 8013856:	db06      	blt.n	8013866 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8013858:	9e12      	ldr	r6, [sp, #72]	@ 0x48
 801385a:	4460      	add	r0, ip
 801385c:	4432      	add	r2, r6
 801385e:	3b01      	subs	r3, #1
 8013860:	3402      	adds	r4, #2
 8013862:	e7ef      	b.n	8013844 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
 8013864:	d00f      	beq.n	8013886 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8013866:	1e5e      	subs	r6, r3, #1
 8013868:	fb0c 0e06 	mla	lr, ip, r6, r0
 801386c:	ea5f 4e2e 	movs.w	lr, lr, asr #16
 8013870:	d543      	bpl.n	80138fa <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 8013872:	4698      	mov	r8, r3
 8013874:	eb04 0a43 	add.w	sl, r4, r3, lsl #1
 8013878:	f1b8 0f00 	cmp.w	r8, #0
 801387c:	dc71      	bgt.n	8013962 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 801387e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8013882:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8013886:	9b01      	ldr	r3, [sp, #4]
 8013888:	2b00      	cmp	r3, #0
 801388a:	f340 809d 	ble.w	80139c8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801388e:	ee30 0a04 	vadd.f32	s0, s0, s8
 8013892:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8013896:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801389a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801389c:	ee31 1a05 	vadd.f32	s2, s2, s10
 80138a0:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80138a4:	eeb0 6a62 	vmov.f32	s12, s5
 80138a8:	ee61 7a27 	vmul.f32	s15, s2, s15
 80138ac:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80138b0:	ee77 2a62 	vsub.f32	s5, s14, s5
 80138b4:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 80138b8:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80138bc:	eeb0 6a43 	vmov.f32	s12, s6
 80138c0:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80138c4:	ee12 2a90 	vmov	r2, s5
 80138c8:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80138cc:	fb92 fcf3 	sdiv	ip, r2, r3
 80138d0:	ee13 2a10 	vmov	r2, s6
 80138d4:	fb92 f3f3 	sdiv	r3, r2, r3
 80138d8:	9312      	str	r3, [sp, #72]	@ 0x48
 80138da:	9b01      	ldr	r3, [sp, #4]
 80138dc:	9a03      	ldr	r2, [sp, #12]
 80138de:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80138e2:	3b01      	subs	r3, #1
 80138e4:	9301      	str	r3, [sp, #4]
 80138e6:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 80138ea:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80138ec:	eeb0 3a67 	vmov.f32	s6, s15
 80138f0:	bf08      	it	eq
 80138f2:	4613      	moveq	r3, r2
 80138f4:	eef0 2a47 	vmov.f32	s5, s14
 80138f8:	e793      	b.n	8013822 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 80138fa:	45ce      	cmp	lr, r9
 80138fc:	dab9      	bge.n	8013872 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 80138fe:	9912      	ldr	r1, [sp, #72]	@ 0x48
 8013900:	fb01 2606 	mla	r6, r1, r6, r2
 8013904:	1436      	asrs	r6, r6, #16
 8013906:	d4b4      	bmi.n	8013872 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8013908:	4546      	cmp	r6, r8
 801390a:	dab2      	bge.n	8013872 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801390c:	4698      	mov	r8, r3
 801390e:	46a2      	mov	sl, r4
 8013910:	f1b8 0f00 	cmp.w	r8, #0
 8013914:	ddb3      	ble.n	801387e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8013916:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801391a:	9902      	ldr	r1, [sp, #8]
 801391c:	1416      	asrs	r6, r2, #16
 801391e:	fb09 1606 	mla	r6, r9, r6, r1
 8013922:	ea4f 4e20 	mov.w	lr, r0, asr #16
 8013926:	492a      	ldr	r1, [pc, #168]	@ (80139d0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>)
 8013928:	f816 e00e 	ldrb.w	lr, [r6, lr]
 801392c:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8013930:	eb07 0b0e 	add.w	fp, r7, lr
 8013934:	4460      	add	r0, ip
 8013936:	f89b 6001 	ldrb.w	r6, [fp, #1]
 801393a:	f89b 9002 	ldrb.w	r9, [fp, #2]
 801393e:	00f6      	lsls	r6, r6, #3
 8013940:	ea01 2909 	and.w	r9, r1, r9, lsl #8
 8013944:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 8013948:	ea49 0606 	orr.w	r6, r9, r6
 801394c:	f817 900e 	ldrb.w	r9, [r7, lr]
 8013950:	9912      	ldr	r1, [sp, #72]	@ 0x48
 8013952:	ea46 06d9 	orr.w	r6, r6, r9, lsr #3
 8013956:	f82a 6b02 	strh.w	r6, [sl], #2
 801395a:	440a      	add	r2, r1
 801395c:	f108 38ff 	add.w	r8, r8, #4294967295
 8013960:	e7d6      	b.n	8013910 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8013962:	ea5f 4920 	movs.w	r9, r0, asr #16
 8013966:	d429      	bmi.n	80139bc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8013968:	68ae      	ldr	r6, [r5, #8]
 801396a:	454e      	cmp	r6, r9
 801396c:	dd26      	ble.n	80139bc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801396e:	ea5f 4b22 	movs.w	fp, r2, asr #16
 8013972:	d423      	bmi.n	80139bc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8013974:	68e9      	ldr	r1, [r5, #12]
 8013976:	4559      	cmp	r1, fp
 8013978:	dd20      	ble.n	80139bc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801397a:	9902      	ldr	r1, [sp, #8]
 801397c:	fa0f fe86 	sxth.w	lr, r6
 8013980:	fb0b 1e0e 	mla	lr, fp, lr, r1
 8013984:	f06f 0101 	mvn.w	r1, #1
 8013988:	f81e e009 	ldrb.w	lr, [lr, r9]
 801398c:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8013990:	eb07 060e 	add.w	r6, r7, lr
 8013994:	fb01 f908 	mul.w	r9, r1, r8
 8013998:	f896 b002 	ldrb.w	fp, [r6, #2]
 801399c:	7876      	ldrb	r6, [r6, #1]
 801399e:	f2a1 71fe 	subw	r1, r1, #2046	@ 0x7fe
 80139a2:	00f6      	lsls	r6, r6, #3
 80139a4:	ea01 2b0b 	and.w	fp, r1, fp, lsl #8
 80139a8:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 80139ac:	ea4b 0606 	orr.w	r6, fp, r6
 80139b0:	f817 b00e 	ldrb.w	fp, [r7, lr]
 80139b4:	ea46 06db 	orr.w	r6, r6, fp, lsr #3
 80139b8:	f82a 6009 	strh.w	r6, [sl, r9]
 80139bc:	9912      	ldr	r1, [sp, #72]	@ 0x48
 80139be:	4460      	add	r0, ip
 80139c0:	440a      	add	r2, r1
 80139c2:	f108 38ff 	add.w	r8, r8, #4294967295
 80139c6:	e757      	b.n	8013878 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 80139c8:	b005      	add	sp, #20
 80139ca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80139ce:	bf00      	nop
 80139d0:	fffff800 	.word	0xfffff800

080139d4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80139d4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80139d8:	b087      	sub	sp, #28
 80139da:	468b      	mov	fp, r1
 80139dc:	9815      	ldr	r0, [sp, #84]	@ 0x54
 80139de:	9204      	str	r2, [sp, #16]
 80139e0:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 80139e4:	9205      	str	r2, [sp, #20]
 80139e6:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
 80139ea:	6841      	ldr	r1, [r0, #4]
 80139ec:	f8dd c060 	ldr.w	ip, [sp, #96]	@ 0x60
 80139f0:	fb01 2404 	mla	r4, r1, r4, r2
 80139f4:	6802      	ldr	r2, [r0, #0]
 80139f6:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80139fa:	f8dc 2000 	ldr.w	r2, [ip]
 80139fe:	9201      	str	r2, [sp, #4]
 8013a00:	f8dc 2004 	ldr.w	r2, [ip, #4]
 8013a04:	3204      	adds	r2, #4
 8013a06:	9202      	str	r2, [sp, #8]
 8013a08:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8013a0c:	f1bb 0f00 	cmp.w	fp, #0
 8013a10:	dc03      	bgt.n	8013a1a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 8013a12:	9a04      	ldr	r2, [sp, #16]
 8013a14:	2a00      	cmp	r2, #0
 8013a16:	f340 8138 	ble.w	8013c8a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 8013a1a:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8013a1c:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 8013a20:	f9bc 600c 	ldrsh.w	r6, [ip, #12]
 8013a24:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 8013a28:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8013a2a:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 8013a2e:	2b00      	cmp	r3, #0
 8013a30:	dd0e      	ble.n	8013a50 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8013a32:	1402      	asrs	r2, r0, #16
 8013a34:	d405      	bmi.n	8013a42 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8013a36:	42ba      	cmp	r2, r7
 8013a38:	da03      	bge.n	8013a42 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8013a3a:	140a      	asrs	r2, r1, #16
 8013a3c:	d401      	bmi.n	8013a42 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8013a3e:	42b2      	cmp	r2, r6
 8013a40:	db07      	blt.n	8013a52 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8013a42:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8013a44:	4410      	add	r0, r2
 8013a46:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8013a48:	3b01      	subs	r3, #1
 8013a4a:	4411      	add	r1, r2
 8013a4c:	3402      	adds	r4, #2
 8013a4e:	e7ee      	b.n	8013a2e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 8013a50:	d019      	beq.n	8013a86 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 8013a52:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 8013a54:	1e5a      	subs	r2, r3, #1
 8013a56:	fb05 0502 	mla	r5, r5, r2, r0
 8013a5a:	142d      	asrs	r5, r5, #16
 8013a5c:	d409      	bmi.n	8013a72 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8013a5e:	42bd      	cmp	r5, r7
 8013a60:	da07      	bge.n	8013a72 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8013a62:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 8013a64:	fb05 1202 	mla	r2, r5, r2, r1
 8013a68:	1412      	asrs	r2, r2, #16
 8013a6a:	d402      	bmi.n	8013a72 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8013a6c:	42b2      	cmp	r2, r6
 8013a6e:	f2c0 80ac 	blt.w	8013bca <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
 8013a72:	f04f 0e00 	mov.w	lr, #0
 8013a76:	eb03 020e 	add.w	r2, r3, lr
 8013a7a:	2a00      	cmp	r2, #0
 8013a7c:	dc3e      	bgt.n	8013afc <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 8013a7e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8013a82:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8013a86:	f1bb 0f00 	cmp.w	fp, #0
 8013a8a:	f340 80fe 	ble.w	8013c8a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 8013a8e:	ee30 0a04 	vadd.f32	s0, s0, s8
 8013a92:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8013a96:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8013a9a:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8013a9c:	f1bb 0b01 	subs.w	fp, fp, #1
 8013aa0:	ee31 1a05 	vadd.f32	s2, s2, s10
 8013aa4:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8013aa8:	eeb0 6a62 	vmov.f32	s12, s5
 8013aac:	ee61 7a27 	vmul.f32	s15, s2, s15
 8013ab0:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8013ab4:	ee77 2a62 	vsub.f32	s5, s14, s5
 8013ab8:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
 8013abc:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8013ac0:	eeb0 6a43 	vmov.f32	s12, s6
 8013ac4:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8013ac8:	ee12 2a90 	vmov	r2, s5
 8013acc:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8013ad0:	fb92 f3f3 	sdiv	r3, r2, r3
 8013ad4:	ee13 2a10 	vmov	r2, s6
 8013ad8:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8013adc:	9313      	str	r3, [sp, #76]	@ 0x4c
 8013ade:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8013ae0:	fb92 f3f3 	sdiv	r3, r2, r3
 8013ae4:	9a04      	ldr	r2, [sp, #16]
 8013ae6:	9314      	str	r3, [sp, #80]	@ 0x50
 8013ae8:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
 8013aec:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8013aee:	eeb0 3a67 	vmov.f32	s6, s15
 8013af2:	bf08      	it	eq
 8013af4:	4613      	moveq	r3, r2
 8013af6:	eef0 2a47 	vmov.f32	s5, s14
 8013afa:	e787      	b.n	8013a0c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8013afc:	1406      	asrs	r6, r0, #16
 8013afe:	d45d      	bmi.n	8013bbc <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8013b00:	f8dc 5008 	ldr.w	r5, [ip, #8]
 8013b04:	42b5      	cmp	r5, r6
 8013b06:	dd59      	ble.n	8013bbc <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8013b08:	140f      	asrs	r7, r1, #16
 8013b0a:	d457      	bmi.n	8013bbc <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8013b0c:	f8dc 200c 	ldr.w	r2, [ip, #12]
 8013b10:	42ba      	cmp	r2, r7
 8013b12:	dd53      	ble.n	8013bbc <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8013b14:	9a01      	ldr	r2, [sp, #4]
 8013b16:	b22d      	sxth	r5, r5
 8013b18:	fb07 2505 	mla	r5, r7, r5, r2
 8013b1c:	5daa      	ldrb	r2, [r5, r6]
 8013b1e:	9d02      	ldr	r5, [sp, #8]
 8013b20:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 8013b24:	0e2e      	lsrs	r6, r5, #24
 8013b26:	d049      	beq.n	8013bbc <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8013b28:	f06f 0201 	mvn.w	r2, #1
 8013b2c:	fb02 f20e 	mul.w	r2, r2, lr
 8013b30:	9203      	str	r2, [sp, #12]
 8013b32:	f834 8002 	ldrh.w	r8, [r4, r2]
 8013b36:	9a05      	ldr	r2, [sp, #20]
 8013b38:	4356      	muls	r6, r2
 8013b3a:	1c72      	adds	r2, r6, #1
 8013b3c:	eb02 2226 	add.w	r2, r2, r6, asr #8
 8013b40:	1212      	asrs	r2, r2, #8
 8013b42:	fa1f f982 	uxth.w	r9, r2
 8013b46:	ea4f 2728 	mov.w	r7, r8, asr #8
 8013b4a:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8013b4e:	43d2      	mvns	r2, r2
 8013b50:	b2d2      	uxtb	r2, r2
 8013b52:	fb16 f609 	smulbb	r6, r6, r9
 8013b56:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8013b5a:	fb07 6702 	mla	r7, r7, r2, r6
 8013b5e:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8013b62:	ea4f 06e8 	mov.w	r6, r8, asr #3
 8013b66:	b2ed      	uxtb	r5, r5
 8013b68:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8013b6c:	fa5f f888 	uxtb.w	r8, r8
 8013b70:	fb15 f509 	smulbb	r5, r5, r9
 8013b74:	fb08 5502 	mla	r5, r8, r2, r5
 8013b78:	b2bf      	uxth	r7, r7
 8013b7a:	fb1a fa09 	smulbb	sl, sl, r9
 8013b7e:	b2ad      	uxth	r5, r5
 8013b80:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8013b84:	fb06 a602 	mla	r6, r6, r2, sl
 8013b88:	1c7a      	adds	r2, r7, #1
 8013b8a:	f105 0a01 	add.w	sl, r5, #1
 8013b8e:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8013b92:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8013b96:	b2b6      	uxth	r6, r6
 8013b98:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8013b9c:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 8013ba0:	ea4a 0707 	orr.w	r7, sl, r7
 8013ba4:	f106 0a01 	add.w	sl, r6, #1
 8013ba8:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8013bac:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8013bb0:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8013bb4:	9a03      	ldr	r2, [sp, #12]
 8013bb6:	ea47 070a 	orr.w	r7, r7, sl
 8013bba:	52a7      	strh	r7, [r4, r2]
 8013bbc:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8013bbe:	4410      	add	r0, r2
 8013bc0:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8013bc2:	f10e 3eff 	add.w	lr, lr, #4294967295
 8013bc6:	4411      	add	r1, r2
 8013bc8:	e755      	b.n	8013a76 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8013bca:	f04f 0800 	mov.w	r8, #0
 8013bce:	eba3 0208 	sub.w	r2, r3, r8
 8013bd2:	2a00      	cmp	r2, #0
 8013bd4:	f77f af53 	ble.w	8013a7e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 8013bd8:	f9bc 6008 	ldrsh.w	r6, [ip, #8]
 8013bdc:	9f01      	ldr	r7, [sp, #4]
 8013bde:	140a      	asrs	r2, r1, #16
 8013be0:	1405      	asrs	r5, r0, #16
 8013be2:	fb06 7202 	mla	r2, r6, r2, r7
 8013be6:	5d52      	ldrb	r2, [r2, r5]
 8013be8:	9d02      	ldr	r5, [sp, #8]
 8013bea:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 8013bee:	0e2e      	lsrs	r6, r5, #24
 8013bf0:	d044      	beq.n	8013c7c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8013bf2:	9a05      	ldr	r2, [sp, #20]
 8013bf4:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 8013bf8:	4356      	muls	r6, r2
 8013bfa:	1c72      	adds	r2, r6, #1
 8013bfc:	eb02 2226 	add.w	r2, r2, r6, asr #8
 8013c00:	1212      	asrs	r2, r2, #8
 8013c02:	fa1f f982 	uxth.w	r9, r2
 8013c06:	ea4f 272e 	mov.w	r7, lr, asr #8
 8013c0a:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8013c0e:	43d2      	mvns	r2, r2
 8013c10:	b2d2      	uxtb	r2, r2
 8013c12:	fb16 f609 	smulbb	r6, r6, r9
 8013c16:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8013c1a:	fb07 6702 	mla	r7, r7, r2, r6
 8013c1e:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8013c22:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8013c26:	b2ed      	uxtb	r5, r5
 8013c28:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8013c2c:	fa5f fe8e 	uxtb.w	lr, lr
 8013c30:	fb15 f509 	smulbb	r5, r5, r9
 8013c34:	fb0e 5502 	mla	r5, lr, r2, r5
 8013c38:	b2bf      	uxth	r7, r7
 8013c3a:	fb1a fa09 	smulbb	sl, sl, r9
 8013c3e:	b2ad      	uxth	r5, r5
 8013c40:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8013c44:	fb06 a602 	mla	r6, r6, r2, sl
 8013c48:	1c7a      	adds	r2, r7, #1
 8013c4a:	f105 0a01 	add.w	sl, r5, #1
 8013c4e:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8013c52:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8013c56:	b2b6      	uxth	r6, r6
 8013c58:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8013c5c:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 8013c60:	ea4a 0707 	orr.w	r7, sl, r7
 8013c64:	f106 0a01 	add.w	sl, r6, #1
 8013c68:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8013c6c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8013c70:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8013c74:	ea47 070a 	orr.w	r7, r7, sl
 8013c78:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 8013c7c:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8013c7e:	4410      	add	r0, r2
 8013c80:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8013c82:	f108 0801 	add.w	r8, r8, #1
 8013c86:	4411      	add	r1, r2
 8013c88:	e7a1      	b.n	8013bce <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 8013c8a:	b007      	add	sp, #28
 8013c8c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08013c90 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8013c90:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013c94:	b085      	sub	sp, #20
 8013c96:	468b      	mov	fp, r1
 8013c98:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8013c9a:	9203      	str	r2, [sp, #12]
 8013c9c:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 8013ca0:	6841      	ldr	r1, [r0, #4]
 8013ca2:	f8dd e058 	ldr.w	lr, [sp, #88]	@ 0x58
 8013ca6:	fb01 2404 	mla	r4, r1, r4, r2
 8013caa:	6802      	ldr	r2, [r0, #0]
 8013cac:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8013cb0:	f8de 2000 	ldr.w	r2, [lr]
 8013cb4:	9200      	str	r2, [sp, #0]
 8013cb6:	f8de 2004 	ldr.w	r2, [lr, #4]
 8013cba:	3204      	adds	r2, #4
 8013cbc:	9201      	str	r2, [sp, #4]
 8013cbe:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8013cc2:	f1bb 0f00 	cmp.w	fp, #0
 8013cc6:	dc03      	bgt.n	8013cd0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 8013cc8:	9a03      	ldr	r2, [sp, #12]
 8013cca:	2a00      	cmp	r2, #0
 8013ccc:	f340 8153 	ble.w	8013f76 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 8013cd0:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8013cd2:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8013cd6:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 8013cda:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 8013cde:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8013ce0:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8013ce4:	2b00      	cmp	r3, #0
 8013ce6:	dd0e      	ble.n	8013d06 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8013ce8:	1408      	asrs	r0, r1, #16
 8013cea:	d405      	bmi.n	8013cf8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8013cec:	42b8      	cmp	r0, r7
 8013cee:	da03      	bge.n	8013cf8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8013cf0:	1410      	asrs	r0, r2, #16
 8013cf2:	d401      	bmi.n	8013cf8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8013cf4:	42b0      	cmp	r0, r6
 8013cf6:	db07      	blt.n	8013d08 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8013cf8:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8013cfa:	4401      	add	r1, r0
 8013cfc:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8013cfe:	3b01      	subs	r3, #1
 8013d00:	4402      	add	r2, r0
 8013d02:	3402      	adds	r4, #2
 8013d04:	e7ee      	b.n	8013ce4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 8013d06:	d017      	beq.n	8013d38 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8013d08:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 8013d0a:	1e58      	subs	r0, r3, #1
 8013d0c:	fb05 1500 	mla	r5, r5, r0, r1
 8013d10:	142d      	asrs	r5, r5, #16
 8013d12:	d409      	bmi.n	8013d28 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8013d14:	42bd      	cmp	r5, r7
 8013d16:	da07      	bge.n	8013d28 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8013d18:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 8013d1a:	fb05 2000 	mla	r0, r5, r0, r2
 8013d1e:	1400      	asrs	r0, r0, #16
 8013d20:	d402      	bmi.n	8013d28 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8013d22:	42b0      	cmp	r0, r6
 8013d24:	f2c0 80bc 	blt.w	8013ea0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x210>
 8013d28:	2600      	movs	r6, #0
 8013d2a:	1998      	adds	r0, r3, r6
 8013d2c:	2800      	cmp	r0, #0
 8013d2e:	dc3e      	bgt.n	8013dae <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11e>
 8013d30:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8013d34:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8013d38:	f1bb 0f00 	cmp.w	fp, #0
 8013d3c:	f340 811b 	ble.w	8013f76 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 8013d40:	ee30 0a04 	vadd.f32	s0, s0, s8
 8013d44:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8013d48:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8013d4c:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8013d4e:	f1bb 0b01 	subs.w	fp, fp, #1
 8013d52:	ee31 1a05 	vadd.f32	s2, s2, s10
 8013d56:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8013d5a:	eeb0 6a62 	vmov.f32	s12, s5
 8013d5e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8013d62:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8013d66:	ee77 2a62 	vsub.f32	s5, s14, s5
 8013d6a:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 8013d6e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8013d72:	eeb0 6a43 	vmov.f32	s12, s6
 8013d76:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8013d7a:	ee12 2a90 	vmov	r2, s5
 8013d7e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8013d82:	fb92 f3f3 	sdiv	r3, r2, r3
 8013d86:	ee13 2a10 	vmov	r2, s6
 8013d8a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8013d8e:	9311      	str	r3, [sp, #68]	@ 0x44
 8013d90:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8013d92:	fb92 f3f3 	sdiv	r3, r2, r3
 8013d96:	9a03      	ldr	r2, [sp, #12]
 8013d98:	9312      	str	r3, [sp, #72]	@ 0x48
 8013d9a:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 8013d9e:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8013da0:	eeb0 3a67 	vmov.f32	s6, s15
 8013da4:	bf08      	it	eq
 8013da6:	4613      	moveq	r3, r2
 8013da8:	eef0 2a47 	vmov.f32	s5, s14
 8013dac:	e789      	b.n	8013cc2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 8013dae:	140f      	asrs	r7, r1, #16
 8013db0:	d426      	bmi.n	8013e00 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8013db2:	f8de 5008 	ldr.w	r5, [lr, #8]
 8013db6:	42bd      	cmp	r5, r7
 8013db8:	dd22      	ble.n	8013e00 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8013dba:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8013dbe:	d41f      	bmi.n	8013e00 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8013dc0:	f8de 000c 	ldr.w	r0, [lr, #12]
 8013dc4:	4560      	cmp	r0, ip
 8013dc6:	dd1b      	ble.n	8013e00 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8013dc8:	9800      	ldr	r0, [sp, #0]
 8013dca:	b22d      	sxth	r5, r5
 8013dcc:	fb0c 0505 	mla	r5, ip, r5, r0
 8013dd0:	5de8      	ldrb	r0, [r5, r7]
 8013dd2:	9d01      	ldr	r5, [sp, #4]
 8013dd4:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
 8013dd8:	0e07      	lsrs	r7, r0, #24
 8013dda:	2fff      	cmp	r7, #255	@ 0xff
 8013ddc:	d116      	bne.n	8013e0c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8013dde:	f06f 0501 	mvn.w	r5, #1
 8013de2:	fb05 f706 	mul.w	r7, r5, r6
 8013de6:	f2a5 75fe 	subw	r5, r5, #2046	@ 0x7fe
 8013dea:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 8013dee:	0945      	lsrs	r5, r0, #5
 8013df0:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8013df4:	ea4c 0505 	orr.w	r5, ip, r5
 8013df8:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 8013dfc:	4305      	orrs	r5, r0
 8013dfe:	53e5      	strh	r5, [r4, r7]
 8013e00:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8013e02:	4401      	add	r1, r0
 8013e04:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8013e06:	3e01      	subs	r6, #1
 8013e08:	4402      	add	r2, r0
 8013e0a:	e78e      	b.n	8013d2a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8013e0c:	b2fd      	uxtb	r5, r7
 8013e0e:	2f00      	cmp	r7, #0
 8013e10:	d0f6      	beq.n	8013e00 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8013e12:	f06f 0701 	mvn.w	r7, #1
 8013e16:	4377      	muls	r7, r6
 8013e18:	fa1f f985 	uxth.w	r9, r5
 8013e1c:	f834 8007 	ldrh.w	r8, [r4, r7]
 8013e20:	9702      	str	r7, [sp, #8]
 8013e22:	ea4f 2c28 	mov.w	ip, r8, asr #8
 8013e26:	f3c0 4707 	ubfx	r7, r0, #16, #8
 8013e2a:	43ed      	mvns	r5, r5
 8013e2c:	b2ed      	uxtb	r5, r5
 8013e2e:	fb17 f709 	smulbb	r7, r7, r9
 8013e32:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8013e36:	fb0c 7c05 	mla	ip, ip, r5, r7
 8013e3a:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 8013e3e:	ea4f 07e8 	mov.w	r7, r8, asr #3
 8013e42:	b2c0      	uxtb	r0, r0
 8013e44:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8013e48:	fa5f f888 	uxtb.w	r8, r8
 8013e4c:	fb10 f009 	smulbb	r0, r0, r9
 8013e50:	fb08 0005 	mla	r0, r8, r5, r0
 8013e54:	b280      	uxth	r0, r0
 8013e56:	fa1f fc8c 	uxth.w	ip, ip
 8013e5a:	fb1a fa09 	smulbb	sl, sl, r9
 8013e5e:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8013e62:	fb07 a705 	mla	r7, r7, r5, sl
 8013e66:	f100 0a01 	add.w	sl, r0, #1
 8013e6a:	f10c 0501 	add.w	r5, ip, #1
 8013e6e:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 8013e72:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8013e76:	b2bf      	uxth	r7, r7
 8013e78:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8013e7c:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8013e80:	ea4a 0c0c 	orr.w	ip, sl, ip
 8013e84:	f107 0a01 	add.w	sl, r7, #1
 8013e88:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8013e8c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8013e90:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8013e94:	9802      	ldr	r0, [sp, #8]
 8013e96:	ea4c 0c0a 	orr.w	ip, ip, sl
 8013e9a:	f824 c000 	strh.w	ip, [r4, r0]
 8013e9e:	e7af      	b.n	8013e00 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8013ea0:	f04f 0800 	mov.w	r8, #0
 8013ea4:	eba3 0008 	sub.w	r0, r3, r8
 8013ea8:	2800      	cmp	r0, #0
 8013eaa:	f77f af41 	ble.w	8013d30 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8013eae:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 8013eb2:	9f00      	ldr	r7, [sp, #0]
 8013eb4:	1410      	asrs	r0, r2, #16
 8013eb6:	140d      	asrs	r5, r1, #16
 8013eb8:	fb06 7000 	mla	r0, r6, r0, r7
 8013ebc:	5d40      	ldrb	r0, [r0, r5]
 8013ebe:	9d01      	ldr	r5, [sp, #4]
 8013ec0:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 8013ec4:	0e2e      	lsrs	r6, r5, #24
 8013ec6:	2eff      	cmp	r6, #255	@ 0xff
 8013ec8:	d112      	bne.n	8013ef0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x260>
 8013eca:	482c      	ldr	r0, [pc, #176]	@ (8013f7c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ec>)
 8013ecc:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 8013ed0:	0968      	lsrs	r0, r5, #5
 8013ed2:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8013ed6:	4330      	orrs	r0, r6
 8013ed8:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8013edc:	4328      	orrs	r0, r5
 8013ede:	f824 0018 	strh.w	r0, [r4, r8, lsl #1]
 8013ee2:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8013ee4:	4401      	add	r1, r0
 8013ee6:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8013ee8:	f108 0801 	add.w	r8, r8, #1
 8013eec:	4402      	add	r2, r0
 8013eee:	e7d9      	b.n	8013ea4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8013ef0:	b2f0      	uxtb	r0, r6
 8013ef2:	2e00      	cmp	r6, #0
 8013ef4:	d0f5      	beq.n	8013ee2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 8013ef6:	f834 c018 	ldrh.w	ip, [r4, r8, lsl #1]
 8013efa:	fa1f f980 	uxth.w	r9, r0
 8013efe:	ea4f 272c 	mov.w	r7, ip, asr #8
 8013f02:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8013f06:	43c0      	mvns	r0, r0
 8013f08:	b2c0      	uxtb	r0, r0
 8013f0a:	fb16 f609 	smulbb	r6, r6, r9
 8013f0e:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8013f12:	fb07 6700 	mla	r7, r7, r0, r6
 8013f16:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8013f1a:	ea4f 06ec 	mov.w	r6, ip, asr #3
 8013f1e:	b2ed      	uxtb	r5, r5
 8013f20:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8013f24:	fa5f fc8c 	uxtb.w	ip, ip
 8013f28:	fb15 f509 	smulbb	r5, r5, r9
 8013f2c:	fb0c 5500 	mla	r5, ip, r0, r5
 8013f30:	b2bf      	uxth	r7, r7
 8013f32:	fb1a fa09 	smulbb	sl, sl, r9
 8013f36:	b2ad      	uxth	r5, r5
 8013f38:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8013f3c:	fb06 a600 	mla	r6, r6, r0, sl
 8013f40:	1c78      	adds	r0, r7, #1
 8013f42:	f105 0a01 	add.w	sl, r5, #1
 8013f46:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 8013f4a:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8013f4e:	b2b6      	uxth	r6, r6
 8013f50:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8013f54:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 8013f58:	ea4a 0707 	orr.w	r7, sl, r7
 8013f5c:	f106 0a01 	add.w	sl, r6, #1
 8013f60:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8013f64:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8013f68:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8013f6c:	ea47 070a 	orr.w	r7, r7, sl
 8013f70:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 8013f74:	e7b5      	b.n	8013ee2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 8013f76:	b005      	add	sp, #20
 8013f78:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013f7c:	fffff800 	.word	0xfffff800

08013f80 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8013f80:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013f84:	b087      	sub	sp, #28
 8013f86:	468b      	mov	fp, r1
 8013f88:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 8013f8a:	9204      	str	r2, [sp, #16]
 8013f8c:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 8013f90:	9205      	str	r2, [sp, #20]
 8013f92:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	@ 0x58
 8013f96:	6861      	ldr	r1, [r4, #4]
 8013f98:	f8dd e060 	ldr.w	lr, [sp, #96]	@ 0x60
 8013f9c:	fb01 2000 	mla	r0, r1, r0, r2
 8013fa0:	6822      	ldr	r2, [r4, #0]
 8013fa2:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 8013fa6:	f8de 2000 	ldr.w	r2, [lr]
 8013faa:	9201      	str	r2, [sp, #4]
 8013fac:	f8de 2004 	ldr.w	r2, [lr, #4]
 8013fb0:	9202      	str	r2, [sp, #8]
 8013fb2:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8013fb6:	f1bb 0f00 	cmp.w	fp, #0
 8013fba:	dc03      	bgt.n	8013fc4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44>
 8013fbc:	9a04      	ldr	r2, [sp, #16]
 8013fbe:	2a00      	cmp	r2, #0
 8013fc0:	f340 8142 	ble.w	8014248 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 8013fc4:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8013fc6:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8013fca:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 8013fce:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 8013fd2:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8013fd4:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8013fd8:	2b00      	cmp	r3, #0
 8013fda:	dd0e      	ble.n	8013ffa <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8013fdc:	140c      	asrs	r4, r1, #16
 8013fde:	d405      	bmi.n	8013fec <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8013fe0:	42bc      	cmp	r4, r7
 8013fe2:	da03      	bge.n	8013fec <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8013fe4:	1414      	asrs	r4, r2, #16
 8013fe6:	d401      	bmi.n	8013fec <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8013fe8:	42b4      	cmp	r4, r6
 8013fea:	db07      	blt.n	8013ffc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8013fec:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 8013fee:	4421      	add	r1, r4
 8013ff0:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 8013ff2:	3b01      	subs	r3, #1
 8013ff4:	4422      	add	r2, r4
 8013ff6:	3002      	adds	r0, #2
 8013ff8:	e7ee      	b.n	8013fd8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8013ffa:	d019      	beq.n	8014030 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 8013ffc:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 8013ffe:	1e5c      	subs	r4, r3, #1
 8014000:	fb05 1504 	mla	r5, r5, r4, r1
 8014004:	142d      	asrs	r5, r5, #16
 8014006:	d409      	bmi.n	801401c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8014008:	42bd      	cmp	r5, r7
 801400a:	da07      	bge.n	801401c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801400c:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 801400e:	fb05 2404 	mla	r4, r5, r4, r2
 8014012:	1424      	asrs	r4, r4, #16
 8014014:	d402      	bmi.n	801401c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8014016:	42b4      	cmp	r4, r6
 8014018:	f2c0 80b1 	blt.w	801417e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 801401c:	f04f 0800 	mov.w	r8, #0
 8014020:	eb03 0408 	add.w	r4, r3, r8
 8014024:	2c00      	cmp	r4, #0
 8014026:	dc3e      	bgt.n	80140a6 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 8014028:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801402c:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8014030:	f1bb 0f00 	cmp.w	fp, #0
 8014034:	f340 8108 	ble.w	8014248 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 8014038:	ee30 0a04 	vadd.f32	s0, s0, s8
 801403c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8014040:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8014044:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8014046:	f1bb 0b01 	subs.w	fp, fp, #1
 801404a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801404e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8014052:	eeb0 6a62 	vmov.f32	s12, s5
 8014056:	ee61 7a27 	vmul.f32	s15, s2, s15
 801405a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801405e:	ee77 2a62 	vsub.f32	s5, s14, s5
 8014062:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
 8014066:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801406a:	eeb0 6a43 	vmov.f32	s12, s6
 801406e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8014072:	ee12 2a90 	vmov	r2, s5
 8014076:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801407a:	fb92 f3f3 	sdiv	r3, r2, r3
 801407e:	ee13 2a10 	vmov	r2, s6
 8014082:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8014086:	9313      	str	r3, [sp, #76]	@ 0x4c
 8014088:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801408a:	fb92 f3f3 	sdiv	r3, r2, r3
 801408e:	9a04      	ldr	r2, [sp, #16]
 8014090:	9314      	str	r3, [sp, #80]	@ 0x50
 8014092:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
 8014096:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8014098:	eeb0 3a67 	vmov.f32	s6, s15
 801409c:	bf08      	it	eq
 801409e:	4613      	moveq	r3, r2
 80140a0:	eef0 2a47 	vmov.f32	s5, s14
 80140a4:	e787      	b.n	8013fb6 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
 80140a6:	140e      	asrs	r6, r1, #16
 80140a8:	d462      	bmi.n	8014170 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 80140aa:	f8de 5008 	ldr.w	r5, [lr, #8]
 80140ae:	42b5      	cmp	r5, r6
 80140b0:	dd5e      	ble.n	8014170 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 80140b2:	1417      	asrs	r7, r2, #16
 80140b4:	d45c      	bmi.n	8014170 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 80140b6:	f8de 400c 	ldr.w	r4, [lr, #12]
 80140ba:	42bc      	cmp	r4, r7
 80140bc:	dd58      	ble.n	8014170 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 80140be:	b22d      	sxth	r5, r5
 80140c0:	fb07 6505 	mla	r5, r7, r5, r6
 80140c4:	9c02      	ldr	r4, [sp, #8]
 80140c6:	5d66      	ldrb	r6, [r4, r5]
 80140c8:	2e00      	cmp	r6, #0
 80140ca:	d051      	beq.n	8014170 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 80140cc:	9c01      	ldr	r4, [sp, #4]
 80140ce:	f834 9015 	ldrh.w	r9, [r4, r5, lsl #1]
 80140d2:	f06f 0401 	mvn.w	r4, #1
 80140d6:	fb04 f408 	mul.w	r4, r4, r8
 80140da:	9403      	str	r4, [sp, #12]
 80140dc:	5b05      	ldrh	r5, [r0, r4]
 80140de:	9c05      	ldr	r4, [sp, #20]
 80140e0:	4366      	muls	r6, r4
 80140e2:	1c74      	adds	r4, r6, #1
 80140e4:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 80140e8:	1224      	asrs	r4, r4, #8
 80140ea:	b2a7      	uxth	r7, r4
 80140ec:	122e      	asrs	r6, r5, #8
 80140ee:	43e4      	mvns	r4, r4
 80140f0:	b2e4      	uxtb	r4, r4
 80140f2:	ea4f 2c29 	mov.w	ip, r9, asr #8
 80140f6:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 80140fa:	fb16 f604 	smulbb	r6, r6, r4
 80140fe:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8014102:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8014106:	00ed      	lsls	r5, r5, #3
 8014108:	fb0c 6c07 	mla	ip, ip, r7, r6
 801410c:	b2ed      	uxtb	r5, r5
 801410e:	ea4f 06e9 	mov.w	r6, r9, asr #3
 8014112:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 8014116:	fb15 f504 	smulbb	r5, r5, r4
 801411a:	fa5f f989 	uxtb.w	r9, r9
 801411e:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 8014122:	fb09 5507 	mla	r5, r9, r7, r5
 8014126:	fb1a fa04 	smulbb	sl, sl, r4
 801412a:	fa1f fc8c 	uxth.w	ip, ip
 801412e:	b2ad      	uxth	r5, r5
 8014130:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8014134:	fb06 a607 	mla	r6, r6, r7, sl
 8014138:	f10c 0401 	add.w	r4, ip, #1
 801413c:	f105 0a01 	add.w	sl, r5, #1
 8014140:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8014144:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8014148:	b2b6      	uxth	r6, r6
 801414a:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801414e:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8014152:	ea4a 0c0c 	orr.w	ip, sl, ip
 8014156:	f106 0a01 	add.w	sl, r6, #1
 801415a:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801415e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8014162:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8014166:	9c03      	ldr	r4, [sp, #12]
 8014168:	ea4c 0c0a 	orr.w	ip, ip, sl
 801416c:	f820 c004 	strh.w	ip, [r0, r4]
 8014170:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 8014172:	4421      	add	r1, r4
 8014174:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 8014176:	f108 38ff 	add.w	r8, r8, #4294967295
 801417a:	4422      	add	r2, r4
 801417c:	e750      	b.n	8014020 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801417e:	f04f 0900 	mov.w	r9, #0
 8014182:	eba3 0409 	sub.w	r4, r3, r9
 8014186:	2c00      	cmp	r4, #0
 8014188:	f77f af4e 	ble.w	8014028 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801418c:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 8014190:	140d      	asrs	r5, r1, #16
 8014192:	1414      	asrs	r4, r2, #16
 8014194:	fb06 5404 	mla	r4, r6, r4, r5
 8014198:	9d02      	ldr	r5, [sp, #8]
 801419a:	5d2e      	ldrb	r6, [r5, r4]
 801419c:	2e00      	cmp	r6, #0
 801419e:	d04c      	beq.n	801423a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
 80141a0:	9d01      	ldr	r5, [sp, #4]
 80141a2:	f835 8014 	ldrh.w	r8, [r5, r4, lsl #1]
 80141a6:	9c05      	ldr	r4, [sp, #20]
 80141a8:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 80141ac:	4366      	muls	r6, r4
 80141ae:	1c74      	adds	r4, r6, #1
 80141b0:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 80141b4:	1224      	asrs	r4, r4, #8
 80141b6:	b2a7      	uxth	r7, r4
 80141b8:	122e      	asrs	r6, r5, #8
 80141ba:	43e4      	mvns	r4, r4
 80141bc:	b2e4      	uxtb	r4, r4
 80141be:	ea4f 2c28 	mov.w	ip, r8, asr #8
 80141c2:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 80141c6:	fb16 f604 	smulbb	r6, r6, r4
 80141ca:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 80141ce:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 80141d2:	00ed      	lsls	r5, r5, #3
 80141d4:	fb0c 6c07 	mla	ip, ip, r7, r6
 80141d8:	b2ed      	uxtb	r5, r5
 80141da:	ea4f 06e8 	mov.w	r6, r8, asr #3
 80141de:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 80141e2:	fb15 f504 	smulbb	r5, r5, r4
 80141e6:	fa5f f888 	uxtb.w	r8, r8
 80141ea:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 80141ee:	fb08 5507 	mla	r5, r8, r7, r5
 80141f2:	fb1a fa04 	smulbb	sl, sl, r4
 80141f6:	fa1f fc8c 	uxth.w	ip, ip
 80141fa:	b2ad      	uxth	r5, r5
 80141fc:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8014200:	fb06 a607 	mla	r6, r6, r7, sl
 8014204:	f10c 0401 	add.w	r4, ip, #1
 8014208:	f105 0a01 	add.w	sl, r5, #1
 801420c:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8014210:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8014214:	b2b6      	uxth	r6, r6
 8014216:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801421a:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 801421e:	ea4a 0c0c 	orr.w	ip, sl, ip
 8014222:	f106 0a01 	add.w	sl, r6, #1
 8014226:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801422a:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801422e:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8014232:	ea4c 0c0a 	orr.w	ip, ip, sl
 8014236:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 801423a:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801423c:	4421      	add	r1, r4
 801423e:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 8014240:	f109 0901 	add.w	r9, r9, #1
 8014244:	4422      	add	r2, r4
 8014246:	e79c      	b.n	8014182 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
 8014248:	b007      	add	sp, #28
 801424a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801424e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801424e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014252:	b085      	sub	sp, #20
 8014254:	468b      	mov	fp, r1
 8014256:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 8014258:	9203      	str	r2, [sp, #12]
 801425a:	e9dd 2014 	ldrd	r2, r0, [sp, #80]	@ 0x50
 801425e:	6861      	ldr	r1, [r4, #4]
 8014260:	f8dd 8058 	ldr.w	r8, [sp, #88]	@ 0x58
 8014264:	fb01 2000 	mla	r0, r1, r0, r2
 8014268:	6822      	ldr	r2, [r4, #0]
 801426a:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 801426e:	f8d8 2000 	ldr.w	r2, [r8]
 8014272:	9200      	str	r2, [sp, #0]
 8014274:	f8d8 2004 	ldr.w	r2, [r8, #4]
 8014278:	9201      	str	r2, [sp, #4]
 801427a:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 801427e:	f1bb 0f00 	cmp.w	fp, #0
 8014282:	dc03      	bgt.n	801428c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8014284:	9a03      	ldr	r2, [sp, #12]
 8014286:	2a00      	cmp	r2, #0
 8014288:	f340 8146 	ble.w	8014518 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 801428c:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801428e:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 8014292:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 8014296:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 801429a:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 801429c:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 80142a0:	2b00      	cmp	r3, #0
 80142a2:	dd0e      	ble.n	80142c2 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 80142a4:	140c      	asrs	r4, r1, #16
 80142a6:	d405      	bmi.n	80142b4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80142a8:	42bc      	cmp	r4, r7
 80142aa:	da03      	bge.n	80142b4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80142ac:	1414      	asrs	r4, r2, #16
 80142ae:	d401      	bmi.n	80142b4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80142b0:	42b4      	cmp	r4, r6
 80142b2:	db07      	blt.n	80142c4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80142b4:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 80142b6:	4421      	add	r1, r4
 80142b8:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 80142ba:	3b01      	subs	r3, #1
 80142bc:	4422      	add	r2, r4
 80142be:	3002      	adds	r0, #2
 80142c0:	e7ee      	b.n	80142a0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 80142c2:	d017      	beq.n	80142f4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 80142c4:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 80142c6:	1e5c      	subs	r4, r3, #1
 80142c8:	fb05 1504 	mla	r5, r5, r4, r1
 80142cc:	142d      	asrs	r5, r5, #16
 80142ce:	d409      	bmi.n	80142e4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 80142d0:	42bd      	cmp	r5, r7
 80142d2:	da07      	bge.n	80142e4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 80142d4:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 80142d6:	fb05 2404 	mla	r4, r5, r4, r2
 80142da:	1424      	asrs	r4, r4, #16
 80142dc:	d402      	bmi.n	80142e4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 80142de:	42b4      	cmp	r4, r6
 80142e0:	f2c0 80b3 	blt.w	801444a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 80142e4:	2600      	movs	r6, #0
 80142e6:	199c      	adds	r4, r3, r6
 80142e8:	2c00      	cmp	r4, #0
 80142ea:	dc3e      	bgt.n	801436a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 80142ec:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80142f0:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80142f4:	f1bb 0f00 	cmp.w	fp, #0
 80142f8:	f340 810e 	ble.w	8014518 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 80142fc:	ee30 0a04 	vadd.f32	s0, s0, s8
 8014300:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8014304:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8014308:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801430a:	f1bb 0b01 	subs.w	fp, fp, #1
 801430e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8014312:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8014316:	eeb0 6a62 	vmov.f32	s12, s5
 801431a:	ee61 7a27 	vmul.f32	s15, s2, s15
 801431e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8014322:	ee77 2a62 	vsub.f32	s5, s14, s5
 8014326:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 801432a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801432e:	eeb0 6a43 	vmov.f32	s12, s6
 8014332:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8014336:	ee12 2a90 	vmov	r2, s5
 801433a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801433e:	fb92 f3f3 	sdiv	r3, r2, r3
 8014342:	ee13 2a10 	vmov	r2, s6
 8014346:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801434a:	9311      	str	r3, [sp, #68]	@ 0x44
 801434c:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801434e:	fb92 f3f3 	sdiv	r3, r2, r3
 8014352:	9a03      	ldr	r2, [sp, #12]
 8014354:	9312      	str	r3, [sp, #72]	@ 0x48
 8014356:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 801435a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801435c:	eeb0 3a67 	vmov.f32	s6, s15
 8014360:	bf08      	it	eq
 8014362:	4613      	moveq	r3, r2
 8014364:	eef0 2a47 	vmov.f32	s5, s14
 8014368:	e789      	b.n	801427e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801436a:	140f      	asrs	r7, r1, #16
 801436c:	d418      	bmi.n	80143a0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801436e:	f8d8 5008 	ldr.w	r5, [r8, #8]
 8014372:	42bd      	cmp	r5, r7
 8014374:	dd14      	ble.n	80143a0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8014376:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801437a:	d411      	bmi.n	80143a0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801437c:	f8d8 400c 	ldr.w	r4, [r8, #12]
 8014380:	4564      	cmp	r4, ip
 8014382:	dd0d      	ble.n	80143a0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8014384:	b22d      	sxth	r5, r5
 8014386:	fb0c 7505 	mla	r5, ip, r5, r7
 801438a:	9c01      	ldr	r4, [sp, #4]
 801438c:	5d64      	ldrb	r4, [r4, r5]
 801438e:	2cff      	cmp	r4, #255	@ 0xff
 8014390:	d10c      	bne.n	80143ac <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 8014392:	9c00      	ldr	r4, [sp, #0]
 8014394:	f834 5015 	ldrh.w	r5, [r4, r5, lsl #1]
 8014398:	f06f 0401 	mvn.w	r4, #1
 801439c:	4374      	muls	r4, r6
 801439e:	5305      	strh	r5, [r0, r4]
 80143a0:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 80143a2:	4421      	add	r1, r4
 80143a4:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 80143a6:	3e01      	subs	r6, #1
 80143a8:	4422      	add	r2, r4
 80143aa:	e79c      	b.n	80142e6 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 80143ac:	2c00      	cmp	r4, #0
 80143ae:	d0f7      	beq.n	80143a0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 80143b0:	9f00      	ldr	r7, [sp, #0]
 80143b2:	f837 9015 	ldrh.w	r9, [r7, r5, lsl #1]
 80143b6:	f06f 0501 	mvn.w	r5, #1
 80143ba:	4375      	muls	r5, r6
 80143bc:	9502      	str	r5, [sp, #8]
 80143be:	5b45      	ldrh	r5, [r0, r5]
 80143c0:	fa1f fc84 	uxth.w	ip, r4
 80143c4:	122f      	asrs	r7, r5, #8
 80143c6:	43e4      	mvns	r4, r4
 80143c8:	b2e4      	uxtb	r4, r4
 80143ca:	ea4f 2e29 	mov.w	lr, r9, asr #8
 80143ce:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 80143d2:	fb17 f704 	smulbb	r7, r7, r4
 80143d6:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 80143da:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
 80143de:	00ed      	lsls	r5, r5, #3
 80143e0:	fb0e 7e0c 	mla	lr, lr, ip, r7
 80143e4:	b2ed      	uxtb	r5, r5
 80143e6:	ea4f 07e9 	mov.w	r7, r9, asr #3
 80143ea:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 80143ee:	fb15 f504 	smulbb	r5, r5, r4
 80143f2:	fa5f f989 	uxtb.w	r9, r9
 80143f6:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 80143fa:	fb09 550c 	mla	r5, r9, ip, r5
 80143fe:	fb1a fa04 	smulbb	sl, sl, r4
 8014402:	fa1f fe8e 	uxth.w	lr, lr
 8014406:	b2ad      	uxth	r5, r5
 8014408:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801440c:	fb07 a70c 	mla	r7, r7, ip, sl
 8014410:	f10e 0401 	add.w	r4, lr, #1
 8014414:	f105 0a01 	add.w	sl, r5, #1
 8014418:	eb04 2e1e 	add.w	lr, r4, lr, lsr #8
 801441c:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8014420:	b2bf      	uxth	r7, r7
 8014422:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8014426:	f40e 4e78 	and.w	lr, lr, #63488	@ 0xf800
 801442a:	ea4a 0e0e 	orr.w	lr, sl, lr
 801442e:	f107 0a01 	add.w	sl, r7, #1
 8014432:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8014436:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801443a:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 801443e:	9c02      	ldr	r4, [sp, #8]
 8014440:	ea4e 0e0a 	orr.w	lr, lr, sl
 8014444:	f820 e004 	strh.w	lr, [r0, r4]
 8014448:	e7aa      	b.n	80143a0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801444a:	f04f 0900 	mov.w	r9, #0
 801444e:	eba3 0409 	sub.w	r4, r3, r9
 8014452:	2c00      	cmp	r4, #0
 8014454:	f77f af4a 	ble.w	80142ec <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8014458:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 801445c:	1414      	asrs	r4, r2, #16
 801445e:	140d      	asrs	r5, r1, #16
 8014460:	fb06 5504 	mla	r5, r6, r4, r5
 8014464:	9c01      	ldr	r4, [sp, #4]
 8014466:	5d64      	ldrb	r4, [r4, r5]
 8014468:	2cff      	cmp	r4, #255	@ 0xff
 801446a:	d10b      	bne.n	8014484 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 801446c:	9c00      	ldr	r4, [sp, #0]
 801446e:	f834 4015 	ldrh.w	r4, [r4, r5, lsl #1]
 8014472:	f820 4019 	strh.w	r4, [r0, r9, lsl #1]
 8014476:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 8014478:	4421      	add	r1, r4
 801447a:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 801447c:	f109 0901 	add.w	r9, r9, #1
 8014480:	4422      	add	r2, r4
 8014482:	e7e4      	b.n	801444e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8014484:	2c00      	cmp	r4, #0
 8014486:	d0f6      	beq.n	8014476 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8014488:	9e00      	ldr	r6, [sp, #0]
 801448a:	f836 e015 	ldrh.w	lr, [r6, r5, lsl #1]
 801448e:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 8014492:	b2a7      	uxth	r7, r4
 8014494:	122e      	asrs	r6, r5, #8
 8014496:	43e4      	mvns	r4, r4
 8014498:	b2e4      	uxtb	r4, r4
 801449a:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801449e:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 80144a2:	fb16 f604 	smulbb	r6, r6, r4
 80144a6:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 80144aa:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 80144ae:	00ed      	lsls	r5, r5, #3
 80144b0:	fb0c 6c07 	mla	ip, ip, r7, r6
 80144b4:	b2ed      	uxtb	r5, r5
 80144b6:	ea4f 06ee 	mov.w	r6, lr, asr #3
 80144ba:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80144be:	fb15 f504 	smulbb	r5, r5, r4
 80144c2:	fa5f fe8e 	uxtb.w	lr, lr
 80144c6:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 80144ca:	fb0e 5507 	mla	r5, lr, r7, r5
 80144ce:	fb1a fa04 	smulbb	sl, sl, r4
 80144d2:	fa1f fc8c 	uxth.w	ip, ip
 80144d6:	b2ad      	uxth	r5, r5
 80144d8:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 80144dc:	fb06 a607 	mla	r6, r6, r7, sl
 80144e0:	f10c 0401 	add.w	r4, ip, #1
 80144e4:	f105 0a01 	add.w	sl, r5, #1
 80144e8:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 80144ec:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80144f0:	b2b6      	uxth	r6, r6
 80144f2:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80144f6:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 80144fa:	ea4a 0c0c 	orr.w	ip, sl, ip
 80144fe:	f106 0a01 	add.w	sl, r6, #1
 8014502:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8014506:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801450a:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 801450e:	ea4c 0c0a 	orr.w	ip, ip, sl
 8014512:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 8014516:	e7ae      	b.n	8014476 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8014518:	b005      	add	sp, #20
 801451a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801451e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801451e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014522:	b085      	sub	sp, #20
 8014524:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8014526:	9203      	str	r2, [sp, #12]
 8014528:	f89d 205c 	ldrb.w	r2, [sp, #92]	@ 0x5c
 801452c:	9201      	str	r2, [sp, #4]
 801452e:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 8014532:	9100      	str	r1, [sp, #0]
 8014534:	6841      	ldr	r1, [r0, #4]
 8014536:	f8dd e058 	ldr.w	lr, [sp, #88]	@ 0x58
 801453a:	fb01 2404 	mla	r4, r1, r4, r2
 801453e:	6802      	ldr	r2, [r0, #0]
 8014540:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8014544:	f8de 2000 	ldr.w	r2, [lr]
 8014548:	9202      	str	r2, [sp, #8]
 801454a:	9a01      	ldr	r2, [sp, #4]
 801454c:	43d6      	mvns	r6, r2
 801454e:	b2f6      	uxtb	r6, r6
 8014550:	9a00      	ldr	r2, [sp, #0]
 8014552:	2a00      	cmp	r2, #0
 8014554:	dc03      	bgt.n	801455e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 8014556:	9a03      	ldr	r2, [sp, #12]
 8014558:	2a00      	cmp	r2, #0
 801455a:	f340 8124 	ble.w	80147a6 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 801455e:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8014560:	f9be c008 	ldrsh.w	ip, [lr, #8]
 8014564:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 8014568:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 801456c:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 801456e:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8014572:	2b00      	cmp	r3, #0
 8014574:	dd0e      	ble.n	8014594 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8014576:	1408      	asrs	r0, r1, #16
 8014578:	d405      	bmi.n	8014586 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801457a:	4560      	cmp	r0, ip
 801457c:	da03      	bge.n	8014586 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801457e:	1410      	asrs	r0, r2, #16
 8014580:	d401      	bmi.n	8014586 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8014582:	42b8      	cmp	r0, r7
 8014584:	db07      	blt.n	8014596 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8014586:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8014588:	4401      	add	r1, r0
 801458a:	9812      	ldr	r0, [sp, #72]	@ 0x48
 801458c:	3b01      	subs	r3, #1
 801458e:	4402      	add	r2, r0
 8014590:	3402      	adds	r4, #2
 8014592:	e7ee      	b.n	8014572 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 8014594:	d06e      	beq.n	8014674 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 8014596:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 8014598:	1e58      	subs	r0, r3, #1
 801459a:	fb05 1500 	mla	r5, r5, r0, r1
 801459e:	142d      	asrs	r5, r5, #16
 80145a0:	d45c      	bmi.n	801465c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 80145a2:	4565      	cmp	r5, ip
 80145a4:	da5a      	bge.n	801465c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 80145a6:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 80145a8:	fb05 2000 	mla	r0, r5, r0, r2
 80145ac:	1400      	asrs	r0, r0, #16
 80145ae:	d455      	bmi.n	801465c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 80145b0:	42b8      	cmp	r0, r7
 80145b2:	da53      	bge.n	801465c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 80145b4:	f8bd b004 	ldrh.w	fp, [sp, #4]
 80145b8:	4699      	mov	r9, r3
 80145ba:	46a2      	mov	sl, r4
 80145bc:	f1b9 0f00 	cmp.w	r9, #0
 80145c0:	dd54      	ble.n	801466c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 80145c2:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 80145c6:	140d      	asrs	r5, r1, #16
 80145c8:	1410      	asrs	r0, r2, #16
 80145ca:	fb07 5000 	mla	r0, r7, r0, r5
 80145ce:	9d02      	ldr	r5, [sp, #8]
 80145d0:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 80145d4:	f8ba 5000 	ldrh.w	r5, [sl]
 80145d8:	122f      	asrs	r7, r5, #8
 80145da:	ea4f 2c20 	mov.w	ip, r0, asr #8
 80145de:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 80145e2:	fb17 f706 	smulbb	r7, r7, r6
 80145e6:	ea4f 08e5 	mov.w	r8, r5, asr #3
 80145ea:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 80145ee:	00ed      	lsls	r5, r5, #3
 80145f0:	fb0c 7c0b 	mla	ip, ip, fp, r7
 80145f4:	f008 08fc 	and.w	r8, r8, #252	@ 0xfc
 80145f8:	10c7      	asrs	r7, r0, #3
 80145fa:	b2ed      	uxtb	r5, r5
 80145fc:	00c0      	lsls	r0, r0, #3
 80145fe:	fb18 f806 	smulbb	r8, r8, r6
 8014602:	fb15 f506 	smulbb	r5, r5, r6
 8014606:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801460a:	b2c0      	uxtb	r0, r0
 801460c:	fa1f fc8c 	uxth.w	ip, ip
 8014610:	fb07 870b 	mla	r7, r7, fp, r8
 8014614:	fb00 500b 	mla	r0, r0, fp, r5
 8014618:	b280      	uxth	r0, r0
 801461a:	b2bf      	uxth	r7, r7
 801461c:	f10c 0501 	add.w	r5, ip, #1
 8014620:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8014624:	f107 0801 	add.w	r8, r7, #1
 8014628:	1c45      	adds	r5, r0, #1
 801462a:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801462e:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 8014632:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8014634:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8014638:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801463c:	ea4f 1858 	mov.w	r8, r8, lsr #5
 8014640:	ea45 0c0c 	orr.w	ip, r5, ip
 8014644:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 8014648:	4401      	add	r1, r0
 801464a:	9812      	ldr	r0, [sp, #72]	@ 0x48
 801464c:	ea4c 0c08 	orr.w	ip, ip, r8
 8014650:	f82a cb02 	strh.w	ip, [sl], #2
 8014654:	4402      	add	r2, r0
 8014656:	f109 39ff 	add.w	r9, r9, #4294967295
 801465a:	e7af      	b.n	80145bc <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801465c:	f8bd a004 	ldrh.w	sl, [sp, #4]
 8014660:	f04f 0800 	mov.w	r8, #0
 8014664:	eb03 0008 	add.w	r0, r3, r8
 8014668:	2800      	cmp	r0, #0
 801466a:	dc41      	bgt.n	80146f0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 801466c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8014670:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8014674:	9b00      	ldr	r3, [sp, #0]
 8014676:	2b00      	cmp	r3, #0
 8014678:	f340 8095 	ble.w	80147a6 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 801467c:	ee30 0a04 	vadd.f32	s0, s0, s8
 8014680:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8014684:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8014688:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801468a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801468e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8014692:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8014696:	eef0 6a62 	vmov.f32	s13, s5
 801469a:	ee61 7a27 	vmul.f32	s15, s2, s15
 801469e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80146a2:	ee77 2a62 	vsub.f32	s5, s14, s5
 80146a6:	edcd 6a0f 	vstr	s13, [sp, #60]	@ 0x3c
 80146aa:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80146ae:	eef0 6a43 	vmov.f32	s13, s6
 80146b2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80146b6:	ee12 2a90 	vmov	r2, s5
 80146ba:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80146be:	fb92 f3f3 	sdiv	r3, r2, r3
 80146c2:	ee13 2a10 	vmov	r2, s6
 80146c6:	9311      	str	r3, [sp, #68]	@ 0x44
 80146c8:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80146ca:	fb92 f3f3 	sdiv	r3, r2, r3
 80146ce:	9312      	str	r3, [sp, #72]	@ 0x48
 80146d0:	9b00      	ldr	r3, [sp, #0]
 80146d2:	9a03      	ldr	r2, [sp, #12]
 80146d4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80146d8:	3b01      	subs	r3, #1
 80146da:	9300      	str	r3, [sp, #0]
 80146dc:	edcd 6a10 	vstr	s13, [sp, #64]	@ 0x40
 80146e0:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80146e2:	eeb0 3a67 	vmov.f32	s6, s15
 80146e6:	bf08      	it	eq
 80146e8:	4613      	moveq	r3, r2
 80146ea:	eef0 2a47 	vmov.f32	s5, s14
 80146ee:	e72f      	b.n	8014550 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 80146f0:	140f      	asrs	r7, r1, #16
 80146f2:	d451      	bmi.n	8014798 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 80146f4:	f8de 5008 	ldr.w	r5, [lr, #8]
 80146f8:	42bd      	cmp	r5, r7
 80146fa:	dd4d      	ble.n	8014798 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 80146fc:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8014700:	d44a      	bmi.n	8014798 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8014702:	f8de 000c 	ldr.w	r0, [lr, #12]
 8014706:	4560      	cmp	r0, ip
 8014708:	dd46      	ble.n	8014798 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801470a:	b22d      	sxth	r5, r5
 801470c:	fb0c 7505 	mla	r5, ip, r5, r7
 8014710:	9802      	ldr	r0, [sp, #8]
 8014712:	f830 0015 	ldrh.w	r0, [r0, r5, lsl #1]
 8014716:	f06f 0501 	mvn.w	r5, #1
 801471a:	fb05 fb08 	mul.w	fp, r5, r8
 801471e:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8014722:	f834 500b 	ldrh.w	r5, [r4, fp]
 8014726:	122f      	asrs	r7, r5, #8
 8014728:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 801472c:	fb17 f706 	smulbb	r7, r7, r6
 8014730:	ea4f 09e5 	mov.w	r9, r5, asr #3
 8014734:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8014738:	00ed      	lsls	r5, r5, #3
 801473a:	fb0c 7c0a 	mla	ip, ip, sl, r7
 801473e:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
 8014742:	10c7      	asrs	r7, r0, #3
 8014744:	b2ed      	uxtb	r5, r5
 8014746:	00c0      	lsls	r0, r0, #3
 8014748:	fb19 f906 	smulbb	r9, r9, r6
 801474c:	fb15 f506 	smulbb	r5, r5, r6
 8014750:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8014754:	b2c0      	uxtb	r0, r0
 8014756:	fa1f fc8c 	uxth.w	ip, ip
 801475a:	fb07 970a 	mla	r7, r7, sl, r9
 801475e:	fb00 500a 	mla	r0, r0, sl, r5
 8014762:	b2bf      	uxth	r7, r7
 8014764:	b280      	uxth	r0, r0
 8014766:	f10c 0501 	add.w	r5, ip, #1
 801476a:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801476e:	f107 0901 	add.w	r9, r7, #1
 8014772:	1c45      	adds	r5, r0, #1
 8014774:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8014778:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 801477c:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8014780:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8014784:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8014788:	ea45 0c0c 	orr.w	ip, r5, ip
 801478c:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 8014790:	ea4c 0c09 	orr.w	ip, ip, r9
 8014794:	f824 c00b 	strh.w	ip, [r4, fp]
 8014798:	9811      	ldr	r0, [sp, #68]	@ 0x44
 801479a:	4401      	add	r1, r0
 801479c:	9812      	ldr	r0, [sp, #72]	@ 0x48
 801479e:	f108 38ff 	add.w	r8, r8, #4294967295
 80147a2:	4402      	add	r2, r0
 80147a4:	e75e      	b.n	8014664 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x146>
 80147a6:	b005      	add	sp, #20
 80147a8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080147ac <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80147ac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80147b0:	b085      	sub	sp, #20
 80147b2:	4693      	mov	fp, r2
 80147b4:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 80147b6:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 80147b8:	6870      	ldr	r0, [r6, #4]
 80147ba:	9101      	str	r1, [sp, #4]
 80147bc:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 80147c0:	fb00 2404 	mla	r4, r0, r4, r2
 80147c4:	6832      	ldr	r2, [r6, #0]
 80147c6:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	@ 0x44
 80147ca:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80147ce:	682a      	ldr	r2, [r5, #0]
 80147d0:	9202      	str	r2, [sp, #8]
 80147d2:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 80147d6:	9a01      	ldr	r2, [sp, #4]
 80147d8:	2a00      	cmp	r2, #0
 80147da:	dc03      	bgt.n	80147e4 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 80147dc:	f1bb 0f00 	cmp.w	fp, #0
 80147e0:	f340 809a 	ble.w	8014918 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 80147e4:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 80147e6:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 80147ea:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 80147ee:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 80147f2:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 80147f4:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 80147f8:	2b00      	cmp	r3, #0
 80147fa:	dd0c      	ble.n	8014816 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 80147fc:	1406      	asrs	r6, r0, #16
 80147fe:	d405      	bmi.n	801480c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8014800:	454e      	cmp	r6, r9
 8014802:	da03      	bge.n	801480c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8014804:	1416      	asrs	r6, r2, #16
 8014806:	d401      	bmi.n	801480c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8014808:	4546      	cmp	r6, r8
 801480a:	db05      	blt.n	8014818 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801480c:	4470      	add	r0, lr
 801480e:	4462      	add	r2, ip
 8014810:	3b01      	subs	r3, #1
 8014812:	3402      	adds	r4, #2
 8014814:	e7f0      	b.n	80147f8 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 8014816:	d00f      	beq.n	8014838 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8014818:	1e5e      	subs	r6, r3, #1
 801481a:	fb0e 0706 	mla	r7, lr, r6, r0
 801481e:	143f      	asrs	r7, r7, #16
 8014820:	d541      	bpl.n	80148a6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfa>
 8014822:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 8014826:	4698      	mov	r8, r3
 8014828:	9603      	str	r6, [sp, #12]
 801482a:	f1b8 0f00 	cmp.w	r8, #0
 801482e:	dc56      	bgt.n	80148de <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x132>
 8014830:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8014834:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8014838:	9b01      	ldr	r3, [sp, #4]
 801483a:	2b00      	cmp	r3, #0
 801483c:	dd6c      	ble.n	8014918 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 801483e:	ee30 0a04 	vadd.f32	s0, s0, s8
 8014842:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8014846:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801484a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801484c:	ee31 1a05 	vadd.f32	s2, s2, s10
 8014850:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8014854:	eeb0 6a62 	vmov.f32	s12, s5
 8014858:	ee61 7a27 	vmul.f32	s15, s2, s15
 801485c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8014860:	ee77 2a62 	vsub.f32	s5, s14, s5
 8014864:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 8014868:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801486c:	eeb0 6a43 	vmov.f32	s12, s6
 8014870:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8014874:	ee12 2a90 	vmov	r2, s5
 8014878:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801487c:	fb92 fef3 	sdiv	lr, r2, r3
 8014880:	ee13 2a10 	vmov	r2, s6
 8014884:	fb92 fcf3 	sdiv	ip, r2, r3
 8014888:	9b01      	ldr	r3, [sp, #4]
 801488a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801488e:	3b01      	subs	r3, #1
 8014890:	9301      	str	r3, [sp, #4]
 8014892:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 8014896:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8014898:	eeb0 3a67 	vmov.f32	s6, s15
 801489c:	bf08      	it	eq
 801489e:	465b      	moveq	r3, fp
 80148a0:	eef0 2a47 	vmov.f32	s5, s14
 80148a4:	e797      	b.n	80147d6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 80148a6:	454f      	cmp	r7, r9
 80148a8:	dabb      	bge.n	8014822 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80148aa:	fb0c 2606 	mla	r6, ip, r6, r2
 80148ae:	1436      	asrs	r6, r6, #16
 80148b0:	d4b7      	bmi.n	8014822 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80148b2:	4546      	cmp	r6, r8
 80148b4:	dab5      	bge.n	8014822 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80148b6:	461e      	mov	r6, r3
 80148b8:	46a0      	mov	r8, r4
 80148ba:	2e00      	cmp	r6, #0
 80148bc:	ddb8      	ble.n	8014830 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 80148be:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 80148c2:	9902      	ldr	r1, [sp, #8]
 80148c4:	1417      	asrs	r7, r2, #16
 80148c6:	ea4f 4920 	mov.w	r9, r0, asr #16
 80148ca:	fb0a 9707 	mla	r7, sl, r7, r9
 80148ce:	4470      	add	r0, lr
 80148d0:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 80148d4:	f828 7b02 	strh.w	r7, [r8], #2
 80148d8:	4462      	add	r2, ip
 80148da:	3e01      	subs	r6, #1
 80148dc:	e7ed      	b.n	80148ba <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
 80148de:	ea5f 4920 	movs.w	r9, r0, asr #16
 80148e2:	d414      	bmi.n	801490e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 80148e4:	68ae      	ldr	r6, [r5, #8]
 80148e6:	454e      	cmp	r6, r9
 80148e8:	dd11      	ble.n	801490e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 80148ea:	ea5f 4a22 	movs.w	sl, r2, asr #16
 80148ee:	d40e      	bmi.n	801490e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 80148f0:	68ef      	ldr	r7, [r5, #12]
 80148f2:	4557      	cmp	r7, sl
 80148f4:	dd0b      	ble.n	801490e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 80148f6:	b236      	sxth	r6, r6
 80148f8:	fb0a 9606 	mla	r6, sl, r6, r9
 80148fc:	9f02      	ldr	r7, [sp, #8]
 80148fe:	f06f 0101 	mvn.w	r1, #1
 8014902:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 8014906:	fb01 f608 	mul.w	r6, r1, r8
 801490a:	9903      	ldr	r1, [sp, #12]
 801490c:	538f      	strh	r7, [r1, r6]
 801490e:	4470      	add	r0, lr
 8014910:	4462      	add	r2, ip
 8014912:	f108 38ff 	add.w	r8, r8, #4294967295
 8014916:	e788      	b.n	801482a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8014918:	b005      	add	sp, #20
 801491a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801491e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801491e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014922:	b087      	sub	sp, #28
 8014924:	468b      	mov	fp, r1
 8014926:	9815      	ldr	r0, [sp, #84]	@ 0x54
 8014928:	9203      	str	r2, [sp, #12]
 801492a:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 801492e:	9204      	str	r2, [sp, #16]
 8014930:	e9dd 2516 	ldrd	r2, r5, [sp, #88]	@ 0x58
 8014934:	6841      	ldr	r1, [r0, #4]
 8014936:	f8dd 9060 	ldr.w	r9, [sp, #96]	@ 0x60
 801493a:	fb01 2505 	mla	r5, r1, r5, r2
 801493e:	6802      	ldr	r2, [r0, #0]
 8014940:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 8014944:	f8d9 2000 	ldr.w	r2, [r9]
 8014948:	9201      	str	r2, [sp, #4]
 801494a:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 801494e:	f1bb 0f00 	cmp.w	fp, #0
 8014952:	dc03      	bgt.n	801495c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8014954:	9a03      	ldr	r2, [sp, #12]
 8014956:	2a00      	cmp	r2, #0
 8014958:	f340 8159 	ble.w	8014c0e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801495c:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 801495e:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 8014962:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 8014966:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 801496a:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 801496c:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 8014970:	2b00      	cmp	r3, #0
 8014972:	dd0e      	ble.n	8014992 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8014974:	1402      	asrs	r2, r0, #16
 8014976:	d405      	bmi.n	8014984 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8014978:	42ba      	cmp	r2, r7
 801497a:	da03      	bge.n	8014984 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801497c:	140a      	asrs	r2, r1, #16
 801497e:	d401      	bmi.n	8014984 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8014980:	42b2      	cmp	r2, r6
 8014982:	db07      	blt.n	8014994 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8014984:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8014986:	4410      	add	r0, r2
 8014988:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801498a:	3b01      	subs	r3, #1
 801498c:	4411      	add	r1, r2
 801498e:	3502      	adds	r5, #2
 8014990:	e7ee      	b.n	8014970 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8014992:	d017      	beq.n	80149c4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8014994:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 8014996:	1e5a      	subs	r2, r3, #1
 8014998:	fb04 0402 	mla	r4, r4, r2, r0
 801499c:	1424      	asrs	r4, r4, #16
 801499e:	d409      	bmi.n	80149b4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 80149a0:	42bc      	cmp	r4, r7
 80149a2:	da07      	bge.n	80149b4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 80149a4:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 80149a6:	fb04 1202 	mla	r2, r4, r2, r1
 80149aa:	1412      	asrs	r2, r2, #16
 80149ac:	d402      	bmi.n	80149b4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 80149ae:	42b2      	cmp	r2, r6
 80149b0:	f2c0 80bf 	blt.w	8014b32 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 80149b4:	2700      	movs	r7, #0
 80149b6:	19da      	adds	r2, r3, r7
 80149b8:	2a00      	cmp	r2, #0
 80149ba:	dc3e      	bgt.n	8014a3a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 80149bc:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80149c0:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 80149c4:	f1bb 0f00 	cmp.w	fp, #0
 80149c8:	f340 8121 	ble.w	8014c0e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 80149cc:	ee30 0a04 	vadd.f32	s0, s0, s8
 80149d0:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80149d4:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80149d8:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80149da:	f1bb 0b01 	subs.w	fp, fp, #1
 80149de:	ee31 1a05 	vadd.f32	s2, s2, s10
 80149e2:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80149e6:	eeb0 6a62 	vmov.f32	s12, s5
 80149ea:	ee61 7a27 	vmul.f32	s15, s2, s15
 80149ee:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80149f2:	ee77 2a62 	vsub.f32	s5, s14, s5
 80149f6:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
 80149fa:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80149fe:	eeb0 6a43 	vmov.f32	s12, s6
 8014a02:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8014a06:	ee12 2a90 	vmov	r2, s5
 8014a0a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8014a0e:	fb92 f3f3 	sdiv	r3, r2, r3
 8014a12:	ee13 2a10 	vmov	r2, s6
 8014a16:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8014a1a:	9313      	str	r3, [sp, #76]	@ 0x4c
 8014a1c:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8014a1e:	fb92 f3f3 	sdiv	r3, r2, r3
 8014a22:	9a03      	ldr	r2, [sp, #12]
 8014a24:	9314      	str	r3, [sp, #80]	@ 0x50
 8014a26:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
 8014a2a:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8014a2c:	eeb0 3a67 	vmov.f32	s6, s15
 8014a30:	bf08      	it	eq
 8014a32:	4613      	moveq	r3, r2
 8014a34:	eef0 2a47 	vmov.f32	s5, s14
 8014a38:	e789      	b.n	801494e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8014a3a:	1406      	asrs	r6, r0, #16
 8014a3c:	d42d      	bmi.n	8014a9a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8014a3e:	f8d9 4008 	ldr.w	r4, [r9, #8]
 8014a42:	42b4      	cmp	r4, r6
 8014a44:	dd29      	ble.n	8014a9a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8014a46:	ea5f 4c21 	movs.w	ip, r1, asr #16
 8014a4a:	d426      	bmi.n	8014a9a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8014a4c:	f8d9 200c 	ldr.w	r2, [r9, #12]
 8014a50:	4562      	cmp	r2, ip
 8014a52:	dd22      	ble.n	8014a9a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8014a54:	b224      	sxth	r4, r4
 8014a56:	9a01      	ldr	r2, [sp, #4]
 8014a58:	fb0c 6404 	mla	r4, ip, r4, r6
 8014a5c:	f852 4024 	ldr.w	r4, [r2, r4, lsl #2]
 8014a60:	0e22      	lsrs	r2, r4, #24
 8014a62:	d01a      	beq.n	8014a9a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8014a64:	9e04      	ldr	r6, [sp, #16]
 8014a66:	4372      	muls	r2, r6
 8014a68:	1c56      	adds	r6, r2, #1
 8014a6a:	eb06 2222 	add.w	r2, r6, r2, asr #8
 8014a6e:	1212      	asrs	r2, r2, #8
 8014a70:	0a26      	lsrs	r6, r4, #8
 8014a72:	2aff      	cmp	r2, #255	@ 0xff
 8014a74:	9605      	str	r6, [sp, #20]
 8014a76:	d116      	bne.n	8014aa6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 8014a78:	f06f 0201 	mvn.w	r2, #1
 8014a7c:	fb02 fc07 	mul.w	ip, r2, r7
 8014a80:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
 8014a84:	0962      	lsrs	r2, r4, #5
 8014a86:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8014a8a:	f026 0607 	bic.w	r6, r6, #7
 8014a8e:	4316      	orrs	r6, r2
 8014a90:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 8014a94:	4326      	orrs	r6, r4
 8014a96:	f825 600c 	strh.w	r6, [r5, ip]
 8014a9a:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8014a9c:	4410      	add	r0, r2
 8014a9e:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8014aa0:	3f01      	subs	r7, #1
 8014aa2:	4411      	add	r1, r2
 8014aa4:	e787      	b.n	80149b6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8014aa6:	f06f 0601 	mvn.w	r6, #1
 8014aaa:	437e      	muls	r6, r7
 8014aac:	fa1f fa82 	uxth.w	sl, r2
 8014ab0:	f835 8006 	ldrh.w	r8, [r5, r6]
 8014ab4:	9602      	str	r6, [sp, #8]
 8014ab6:	ea4f 2e28 	mov.w	lr, r8, asr #8
 8014aba:	f3c4 4c07 	ubfx	ip, r4, #16, #8
 8014abe:	43d2      	mvns	r2, r2
 8014ac0:	b2d2      	uxtb	r2, r2
 8014ac2:	fb1c fc0a 	smulbb	ip, ip, sl
 8014ac6:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
 8014aca:	fb0e ce02 	mla	lr, lr, r2, ip
 8014ace:	b2e4      	uxtb	r4, r4
 8014ad0:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 8014ad4:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8014ad8:	f89d 6014 	ldrb.w	r6, [sp, #20]
 8014adc:	fa5f f888 	uxtb.w	r8, r8
 8014ae0:	fb14 f40a 	smulbb	r4, r4, sl
 8014ae4:	fb08 4402 	mla	r4, r8, r2, r4
 8014ae8:	fa1f fe8e 	uxth.w	lr, lr
 8014aec:	fb16 f60a 	smulbb	r6, r6, sl
 8014af0:	b2a4      	uxth	r4, r4
 8014af2:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
 8014af6:	fb0c 6c02 	mla	ip, ip, r2, r6
 8014afa:	f10e 0201 	add.w	r2, lr, #1
 8014afe:	1c66      	adds	r6, r4, #1
 8014b00:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 8014b04:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 8014b08:	fa1f fc8c 	uxth.w	ip, ip
 8014b0c:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8014b10:	f40e 4e78 	and.w	lr, lr, #63488	@ 0xf800
 8014b14:	ea46 0e0e 	orr.w	lr, r6, lr
 8014b18:	f10c 0601 	add.w	r6, ip, #1
 8014b1c:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 8014b20:	0976      	lsrs	r6, r6, #5
 8014b22:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 8014b26:	9a02      	ldr	r2, [sp, #8]
 8014b28:	ea4e 0e06 	orr.w	lr, lr, r6
 8014b2c:	f825 e002 	strh.w	lr, [r5, r2]
 8014b30:	e7b3      	b.n	8014a9a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8014b32:	f04f 0800 	mov.w	r8, #0
 8014b36:	eba3 0208 	sub.w	r2, r3, r8
 8014b3a:	2a00      	cmp	r2, #0
 8014b3c:	f77f af3e 	ble.w	80149bc <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8014b40:	f9b9 6008 	ldrsh.w	r6, [r9, #8]
 8014b44:	1404      	asrs	r4, r0, #16
 8014b46:	140a      	asrs	r2, r1, #16
 8014b48:	fb06 4202 	mla	r2, r6, r2, r4
 8014b4c:	9c01      	ldr	r4, [sp, #4]
 8014b4e:	f854 4022 	ldr.w	r4, [r4, r2, lsl #2]
 8014b52:	0e22      	lsrs	r2, r4, #24
 8014b54:	d016      	beq.n	8014b84 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 8014b56:	9e04      	ldr	r6, [sp, #16]
 8014b58:	4372      	muls	r2, r6
 8014b5a:	1c56      	adds	r6, r2, #1
 8014b5c:	eb06 2222 	add.w	r2, r6, r2, asr #8
 8014b60:	1212      	asrs	r2, r2, #8
 8014b62:	2aff      	cmp	r2, #255	@ 0xff
 8014b64:	ea4f 2614 	mov.w	r6, r4, lsr #8
 8014b68:	d113      	bne.n	8014b92 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x274>
 8014b6a:	0962      	lsrs	r2, r4, #5
 8014b6c:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
 8014b70:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8014b74:	f026 0607 	bic.w	r6, r6, #7
 8014b78:	4316      	orrs	r6, r2
 8014b7a:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 8014b7e:	4326      	orrs	r6, r4
 8014b80:	f825 6018 	strh.w	r6, [r5, r8, lsl #1]
 8014b84:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8014b86:	4410      	add	r0, r2
 8014b88:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8014b8a:	f108 0801 	add.w	r8, r8, #1
 8014b8e:	4411      	add	r1, r2
 8014b90:	e7d1      	b.n	8014b36 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x218>
 8014b92:	f835 e018 	ldrh.w	lr, [r5, r8, lsl #1]
 8014b96:	fa1f fa82 	uxth.w	sl, r2
 8014b9a:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8014b9e:	f3c4 4707 	ubfx	r7, r4, #16, #8
 8014ba2:	43d2      	mvns	r2, r2
 8014ba4:	b2d2      	uxtb	r2, r2
 8014ba6:	fb17 f70a 	smulbb	r7, r7, sl
 8014baa:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8014bae:	fb0c 7c02 	mla	ip, ip, r2, r7
 8014bb2:	b2e4      	uxtb	r4, r4
 8014bb4:	ea4f 07ee 	mov.w	r7, lr, asr #3
 8014bb8:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8014bbc:	fa5f fe8e 	uxtb.w	lr, lr
 8014bc0:	fb14 f40a 	smulbb	r4, r4, sl
 8014bc4:	fb0e 4402 	mla	r4, lr, r2, r4
 8014bc8:	b2f6      	uxtb	r6, r6
 8014bca:	fa1f fc8c 	uxth.w	ip, ip
 8014bce:	fb16 f60a 	smulbb	r6, r6, sl
 8014bd2:	b2a4      	uxth	r4, r4
 8014bd4:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8014bd8:	fb07 6702 	mla	r7, r7, r2, r6
 8014bdc:	f10c 0201 	add.w	r2, ip, #1
 8014be0:	1c66      	adds	r6, r4, #1
 8014be2:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 8014be6:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 8014bea:	b2bf      	uxth	r7, r7
 8014bec:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8014bf0:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8014bf4:	ea46 0c0c 	orr.w	ip, r6, ip
 8014bf8:	1c7e      	adds	r6, r7, #1
 8014bfa:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 8014bfe:	0976      	lsrs	r6, r6, #5
 8014c00:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 8014c04:	ea4c 0c06 	orr.w	ip, ip, r6
 8014c08:	f825 c018 	strh.w	ip, [r5, r8, lsl #1]
 8014c0c:	e7ba      	b.n	8014b84 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 8014c0e:	b007      	add	sp, #28
 8014c10:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08014c14 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8014c14:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014c18:	b085      	sub	sp, #20
 8014c1a:	468b      	mov	fp, r1
 8014c1c:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8014c1e:	9203      	str	r2, [sp, #12]
 8014c20:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 8014c24:	6841      	ldr	r1, [r0, #4]
 8014c26:	f8dd 8058 	ldr.w	r8, [sp, #88]	@ 0x58
 8014c2a:	fb01 2404 	mla	r4, r1, r4, r2
 8014c2e:	6802      	ldr	r2, [r0, #0]
 8014c30:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8014c34:	f8d8 2000 	ldr.w	r2, [r8]
 8014c38:	9201      	str	r2, [sp, #4]
 8014c3a:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8014c3e:	f1bb 0f00 	cmp.w	fp, #0
 8014c42:	dc03      	bgt.n	8014c4c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8014c44:	9a03      	ldr	r2, [sp, #12]
 8014c46:	2a00      	cmp	r2, #0
 8014c48:	f340 814f 	ble.w	8014eea <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 8014c4c:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8014c4e:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 8014c52:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 8014c56:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 8014c5a:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8014c5c:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8014c60:	2b00      	cmp	r3, #0
 8014c62:	dd0e      	ble.n	8014c82 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8014c64:	1408      	asrs	r0, r1, #16
 8014c66:	d405      	bmi.n	8014c74 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8014c68:	42b8      	cmp	r0, r7
 8014c6a:	da03      	bge.n	8014c74 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8014c6c:	1410      	asrs	r0, r2, #16
 8014c6e:	d401      	bmi.n	8014c74 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8014c70:	42b0      	cmp	r0, r6
 8014c72:	db07      	blt.n	8014c84 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8014c74:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8014c76:	4401      	add	r1, r0
 8014c78:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8014c7a:	3b01      	subs	r3, #1
 8014c7c:	4402      	add	r2, r0
 8014c7e:	3402      	adds	r4, #2
 8014c80:	e7ee      	b.n	8014c60 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 8014c82:	d017      	beq.n	8014cb4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8014c84:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 8014c86:	1e58      	subs	r0, r3, #1
 8014c88:	fb05 1500 	mla	r5, r5, r0, r1
 8014c8c:	142d      	asrs	r5, r5, #16
 8014c8e:	d409      	bmi.n	8014ca4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8014c90:	42bd      	cmp	r5, r7
 8014c92:	da07      	bge.n	8014ca4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8014c94:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 8014c96:	fb05 2000 	mla	r0, r5, r0, r2
 8014c9a:	1400      	asrs	r0, r0, #16
 8014c9c:	d402      	bmi.n	8014ca4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8014c9e:	42b0      	cmp	r0, r6
 8014ca0:	f2c0 80ba 	blt.w	8014e18 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8014ca4:	2600      	movs	r6, #0
 8014ca6:	1998      	adds	r0, r3, r6
 8014ca8:	2800      	cmp	r0, #0
 8014caa:	dc3e      	bgt.n	8014d2a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8014cac:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8014cb0:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8014cb4:	f1bb 0f00 	cmp.w	fp, #0
 8014cb8:	f340 8117 	ble.w	8014eea <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 8014cbc:	ee30 0a04 	vadd.f32	s0, s0, s8
 8014cc0:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8014cc4:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8014cc8:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8014cca:	f1bb 0b01 	subs.w	fp, fp, #1
 8014cce:	ee31 1a05 	vadd.f32	s2, s2, s10
 8014cd2:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8014cd6:	eeb0 6a62 	vmov.f32	s12, s5
 8014cda:	ee61 7a27 	vmul.f32	s15, s2, s15
 8014cde:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8014ce2:	ee77 2a62 	vsub.f32	s5, s14, s5
 8014ce6:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 8014cea:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8014cee:	eeb0 6a43 	vmov.f32	s12, s6
 8014cf2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8014cf6:	ee12 2a90 	vmov	r2, s5
 8014cfa:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8014cfe:	fb92 f3f3 	sdiv	r3, r2, r3
 8014d02:	ee13 2a10 	vmov	r2, s6
 8014d06:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8014d0a:	9311      	str	r3, [sp, #68]	@ 0x44
 8014d0c:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8014d0e:	fb92 f3f3 	sdiv	r3, r2, r3
 8014d12:	9a03      	ldr	r2, [sp, #12]
 8014d14:	9312      	str	r3, [sp, #72]	@ 0x48
 8014d16:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 8014d1a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8014d1c:	eeb0 3a67 	vmov.f32	s6, s15
 8014d20:	bf08      	it	eq
 8014d22:	4613      	moveq	r3, r2
 8014d24:	eef0 2a47 	vmov.f32	s5, s14
 8014d28:	e789      	b.n	8014c3e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 8014d2a:	140f      	asrs	r7, r1, #16
 8014d2c:	d424      	bmi.n	8014d78 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8014d2e:	f8d8 5008 	ldr.w	r5, [r8, #8]
 8014d32:	42bd      	cmp	r5, r7
 8014d34:	dd20      	ble.n	8014d78 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8014d36:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8014d3a:	d41d      	bmi.n	8014d78 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8014d3c:	f8d8 000c 	ldr.w	r0, [r8, #12]
 8014d40:	4560      	cmp	r0, ip
 8014d42:	dd19      	ble.n	8014d78 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8014d44:	b22d      	sxth	r5, r5
 8014d46:	fb0c 7505 	mla	r5, ip, r5, r7
 8014d4a:	9801      	ldr	r0, [sp, #4]
 8014d4c:	f850 0025 	ldr.w	r0, [r0, r5, lsl #2]
 8014d50:	0e07      	lsrs	r7, r0, #24
 8014d52:	2fff      	cmp	r7, #255	@ 0xff
 8014d54:	d116      	bne.n	8014d84 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8014d56:	f06f 0501 	mvn.w	r5, #1
 8014d5a:	fb05 f706 	mul.w	r7, r5, r6
 8014d5e:	f2a5 75fe 	subw	r5, r5, #2046	@ 0x7fe
 8014d62:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 8014d66:	0945      	lsrs	r5, r0, #5
 8014d68:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8014d6c:	ea4c 0505 	orr.w	r5, ip, r5
 8014d70:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 8014d74:	4305      	orrs	r5, r0
 8014d76:	53e5      	strh	r5, [r4, r7]
 8014d78:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8014d7a:	4401      	add	r1, r0
 8014d7c:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8014d7e:	3e01      	subs	r6, #1
 8014d80:	4402      	add	r2, r0
 8014d82:	e790      	b.n	8014ca6 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8014d84:	b2fd      	uxtb	r5, r7
 8014d86:	2f00      	cmp	r7, #0
 8014d88:	d0f6      	beq.n	8014d78 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8014d8a:	f06f 0701 	mvn.w	r7, #1
 8014d8e:	4377      	muls	r7, r6
 8014d90:	fa1f f985 	uxth.w	r9, r5
 8014d94:	f834 e007 	ldrh.w	lr, [r4, r7]
 8014d98:	9702      	str	r7, [sp, #8]
 8014d9a:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8014d9e:	f3c0 4707 	ubfx	r7, r0, #16, #8
 8014da2:	43ed      	mvns	r5, r5
 8014da4:	b2ed      	uxtb	r5, r5
 8014da6:	fb17 f709 	smulbb	r7, r7, r9
 8014daa:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8014dae:	fb0c 7c05 	mla	ip, ip, r5, r7
 8014db2:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 8014db6:	ea4f 07ee 	mov.w	r7, lr, asr #3
 8014dba:	b2c0      	uxtb	r0, r0
 8014dbc:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8014dc0:	fa5f fe8e 	uxtb.w	lr, lr
 8014dc4:	fb10 f009 	smulbb	r0, r0, r9
 8014dc8:	fb0e 0005 	mla	r0, lr, r5, r0
 8014dcc:	b280      	uxth	r0, r0
 8014dce:	fa1f fc8c 	uxth.w	ip, ip
 8014dd2:	fb1a fa09 	smulbb	sl, sl, r9
 8014dd6:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8014dda:	fb07 a705 	mla	r7, r7, r5, sl
 8014dde:	f100 0a01 	add.w	sl, r0, #1
 8014de2:	f10c 0501 	add.w	r5, ip, #1
 8014de6:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 8014dea:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8014dee:	b2bf      	uxth	r7, r7
 8014df0:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8014df4:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8014df8:	ea4a 0c0c 	orr.w	ip, sl, ip
 8014dfc:	f107 0a01 	add.w	sl, r7, #1
 8014e00:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8014e04:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8014e08:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8014e0c:	9802      	ldr	r0, [sp, #8]
 8014e0e:	ea4c 0c0a 	orr.w	ip, ip, sl
 8014e12:	f824 c000 	strh.w	ip, [r4, r0]
 8014e16:	e7af      	b.n	8014d78 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8014e18:	f04f 0e00 	mov.w	lr, #0
 8014e1c:	eba3 000e 	sub.w	r0, r3, lr
 8014e20:	2800      	cmp	r0, #0
 8014e22:	f77f af43 	ble.w	8014cac <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8014e26:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 8014e2a:	140d      	asrs	r5, r1, #16
 8014e2c:	1410      	asrs	r0, r2, #16
 8014e2e:	fb06 5000 	mla	r0, r6, r0, r5
 8014e32:	9d01      	ldr	r5, [sp, #4]
 8014e34:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 8014e38:	0e2e      	lsrs	r6, r5, #24
 8014e3a:	2eff      	cmp	r6, #255	@ 0xff
 8014e3c:	d112      	bne.n	8014e64 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x250>
 8014e3e:	482c      	ldr	r0, [pc, #176]	@ (8014ef0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>)
 8014e40:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 8014e44:	0968      	lsrs	r0, r5, #5
 8014e46:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8014e4a:	4330      	orrs	r0, r6
 8014e4c:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8014e50:	4328      	orrs	r0, r5
 8014e52:	f824 001e 	strh.w	r0, [r4, lr, lsl #1]
 8014e56:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8014e58:	4401      	add	r1, r0
 8014e5a:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8014e5c:	f10e 0e01 	add.w	lr, lr, #1
 8014e60:	4402      	add	r2, r0
 8014e62:	e7db      	b.n	8014e1c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
 8014e64:	b2f0      	uxtb	r0, r6
 8014e66:	2e00      	cmp	r6, #0
 8014e68:	d0f5      	beq.n	8014e56 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 8014e6a:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 8014e6e:	fa1f f980 	uxth.w	r9, r0
 8014e72:	ea4f 272c 	mov.w	r7, ip, asr #8
 8014e76:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8014e7a:	43c0      	mvns	r0, r0
 8014e7c:	b2c0      	uxtb	r0, r0
 8014e7e:	fb16 f609 	smulbb	r6, r6, r9
 8014e82:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8014e86:	fb07 6700 	mla	r7, r7, r0, r6
 8014e8a:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8014e8e:	ea4f 06ec 	mov.w	r6, ip, asr #3
 8014e92:	b2ed      	uxtb	r5, r5
 8014e94:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8014e98:	fa5f fc8c 	uxtb.w	ip, ip
 8014e9c:	fb15 f509 	smulbb	r5, r5, r9
 8014ea0:	fb0c 5500 	mla	r5, ip, r0, r5
 8014ea4:	b2bf      	uxth	r7, r7
 8014ea6:	fb1a fa09 	smulbb	sl, sl, r9
 8014eaa:	b2ad      	uxth	r5, r5
 8014eac:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8014eb0:	fb06 a600 	mla	r6, r6, r0, sl
 8014eb4:	1c78      	adds	r0, r7, #1
 8014eb6:	f105 0a01 	add.w	sl, r5, #1
 8014eba:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 8014ebe:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8014ec2:	b2b6      	uxth	r6, r6
 8014ec4:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8014ec8:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 8014ecc:	ea4a 0707 	orr.w	r7, sl, r7
 8014ed0:	f106 0a01 	add.w	sl, r6, #1
 8014ed4:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8014ed8:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8014edc:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8014ee0:	ea47 070a 	orr.w	r7, r7, sl
 8014ee4:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
 8014ee8:	e7b5      	b.n	8014e56 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 8014eea:	b005      	add	sp, #20
 8014eec:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014ef0:	fffff800 	.word	0xfffff800

08014ef4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8014ef4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014ef8:	b087      	sub	sp, #28
 8014efa:	468b      	mov	fp, r1
 8014efc:	9815      	ldr	r0, [sp, #84]	@ 0x54
 8014efe:	9203      	str	r2, [sp, #12]
 8014f00:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 8014f04:	9204      	str	r2, [sp, #16]
 8014f06:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
 8014f0a:	6841      	ldr	r1, [r0, #4]
 8014f0c:	f8dd 9060 	ldr.w	r9, [sp, #96]	@ 0x60
 8014f10:	fb01 2404 	mla	r4, r1, r4, r2
 8014f14:	6802      	ldr	r2, [r0, #0]
 8014f16:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8014f1a:	f8d9 2008 	ldr.w	r2, [r9, #8]
 8014f1e:	3201      	adds	r2, #1
 8014f20:	f022 0201 	bic.w	r2, r2, #1
 8014f24:	9200      	str	r2, [sp, #0]
 8014f26:	f8d9 2000 	ldr.w	r2, [r9]
 8014f2a:	9201      	str	r2, [sp, #4]
 8014f2c:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8014f30:	f1bb 0f00 	cmp.w	fp, #0
 8014f34:	dc03      	bgt.n	8014f3e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8014f36:	9a03      	ldr	r2, [sp, #12]
 8014f38:	2a00      	cmp	r2, #0
 8014f3a:	f340 8169 	ble.w	8015210 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 8014f3e:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8014f40:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 8014f44:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 8014f48:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 8014f4c:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8014f4e:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 8014f52:	2b00      	cmp	r3, #0
 8014f54:	dd0e      	ble.n	8014f74 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8014f56:	1402      	asrs	r2, r0, #16
 8014f58:	d405      	bmi.n	8014f66 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8014f5a:	42ba      	cmp	r2, r7
 8014f5c:	da03      	bge.n	8014f66 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8014f5e:	140a      	asrs	r2, r1, #16
 8014f60:	d401      	bmi.n	8014f66 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8014f62:	42b2      	cmp	r2, r6
 8014f64:	db07      	blt.n	8014f76 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8014f66:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8014f68:	4410      	add	r0, r2
 8014f6a:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8014f6c:	3b01      	subs	r3, #1
 8014f6e:	4411      	add	r1, r2
 8014f70:	3402      	adds	r4, #2
 8014f72:	e7ee      	b.n	8014f52 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 8014f74:	d017      	beq.n	8014fa6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 8014f76:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 8014f78:	1e5a      	subs	r2, r3, #1
 8014f7a:	fb05 0502 	mla	r5, r5, r2, r0
 8014f7e:	142d      	asrs	r5, r5, #16
 8014f80:	d409      	bmi.n	8014f96 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8014f82:	42bd      	cmp	r5, r7
 8014f84:	da07      	bge.n	8014f96 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8014f86:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 8014f88:	fb05 1202 	mla	r2, r5, r2, r1
 8014f8c:	1412      	asrs	r2, r2, #16
 8014f8e:	d402      	bmi.n	8014f96 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8014f90:	42b2      	cmp	r2, r6
 8014f92:	f2c0 80c7 	blt.w	8015124 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x230>
 8014f96:	2700      	movs	r7, #0
 8014f98:	19da      	adds	r2, r3, r7
 8014f9a:	2a00      	cmp	r2, #0
 8014f9c:	dc3e      	bgt.n	801501c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 8014f9e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8014fa2:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8014fa6:	f1bb 0f00 	cmp.w	fp, #0
 8014faa:	f340 8131 	ble.w	8015210 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 8014fae:	ee30 0a04 	vadd.f32	s0, s0, s8
 8014fb2:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8014fb6:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8014fba:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8014fbc:	f1bb 0b01 	subs.w	fp, fp, #1
 8014fc0:	ee31 1a05 	vadd.f32	s2, s2, s10
 8014fc4:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8014fc8:	eeb0 6a62 	vmov.f32	s12, s5
 8014fcc:	ee61 7a27 	vmul.f32	s15, s2, s15
 8014fd0:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8014fd4:	ee77 2a62 	vsub.f32	s5, s14, s5
 8014fd8:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
 8014fdc:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8014fe0:	eeb0 6a43 	vmov.f32	s12, s6
 8014fe4:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8014fe8:	ee12 2a90 	vmov	r2, s5
 8014fec:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8014ff0:	fb92 f3f3 	sdiv	r3, r2, r3
 8014ff4:	ee13 2a10 	vmov	r2, s6
 8014ff8:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8014ffc:	9313      	str	r3, [sp, #76]	@ 0x4c
 8014ffe:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8015000:	fb92 f3f3 	sdiv	r3, r2, r3
 8015004:	9a03      	ldr	r2, [sp, #12]
 8015006:	9314      	str	r3, [sp, #80]	@ 0x50
 8015008:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
 801500c:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801500e:	eeb0 3a67 	vmov.f32	s6, s15
 8015012:	bf08      	it	eq
 8015014:	4613      	moveq	r3, r2
 8015016:	eef0 2a47 	vmov.f32	s5, s14
 801501a:	e789      	b.n	8014f30 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801501c:	1405      	asrs	r5, r0, #16
 801501e:	d435      	bmi.n	801508c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8015020:	f8d9 2008 	ldr.w	r2, [r9, #8]
 8015024:	42aa      	cmp	r2, r5
 8015026:	dd31      	ble.n	801508c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8015028:	140e      	asrs	r6, r1, #16
 801502a:	d42f      	bmi.n	801508c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801502c:	f8d9 200c 	ldr.w	r2, [r9, #12]
 8015030:	42b2      	cmp	r2, r6
 8015032:	dd2b      	ble.n	801508c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8015034:	9a00      	ldr	r2, [sp, #0]
 8015036:	fb06 5502 	mla	r5, r6, r2, r5
 801503a:	086a      	lsrs	r2, r5, #1
 801503c:	9e01      	ldr	r6, [sp, #4]
 801503e:	5cb2      	ldrb	r2, [r6, r2]
 8015040:	07ee      	lsls	r6, r5, #31
 8015042:	bf54      	ite	pl
 8015044:	f002 020f 	andpl.w	r2, r2, #15
 8015048:	1112      	asrmi	r2, r2, #4
 801504a:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801504e:	b2d2      	uxtb	r2, r2
 8015050:	b1e2      	cbz	r2, 801508c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8015052:	9d04      	ldr	r5, [sp, #16]
 8015054:	436a      	muls	r2, r5
 8015056:	1c55      	adds	r5, r2, #1
 8015058:	eb05 2222 	add.w	r2, r5, r2, asr #8
 801505c:	4d6e      	ldr	r5, [pc, #440]	@ (8015218 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 801505e:	682d      	ldr	r5, [r5, #0]
 8015060:	1212      	asrs	r2, r2, #8
 8015062:	0a2e      	lsrs	r6, r5, #8
 8015064:	2aff      	cmp	r2, #255	@ 0xff
 8015066:	9605      	str	r6, [sp, #20]
 8015068:	d116      	bne.n	8015098 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801506a:	f06f 0201 	mvn.w	r2, #1
 801506e:	fb02 fc07 	mul.w	ip, r2, r7
 8015072:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
 8015076:	096a      	lsrs	r2, r5, #5
 8015078:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801507c:	f026 0607 	bic.w	r6, r6, #7
 8015080:	4316      	orrs	r6, r2
 8015082:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8015086:	432e      	orrs	r6, r5
 8015088:	f824 600c 	strh.w	r6, [r4, ip]
 801508c:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 801508e:	4410      	add	r0, r2
 8015090:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8015092:	3f01      	subs	r7, #1
 8015094:	4411      	add	r1, r2
 8015096:	e77f      	b.n	8014f98 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 8015098:	f06f 0601 	mvn.w	r6, #1
 801509c:	437e      	muls	r6, r7
 801509e:	fa1f fa82 	uxth.w	sl, r2
 80150a2:	f834 8006 	ldrh.w	r8, [r4, r6]
 80150a6:	9602      	str	r6, [sp, #8]
 80150a8:	ea4f 2e28 	mov.w	lr, r8, asr #8
 80150ac:	f3c5 4c07 	ubfx	ip, r5, #16, #8
 80150b0:	43d2      	mvns	r2, r2
 80150b2:	b2d2      	uxtb	r2, r2
 80150b4:	fb1c fc0a 	smulbb	ip, ip, sl
 80150b8:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
 80150bc:	fb0e ce02 	mla	lr, lr, r2, ip
 80150c0:	b2ed      	uxtb	r5, r5
 80150c2:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 80150c6:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 80150ca:	f89d 6014 	ldrb.w	r6, [sp, #20]
 80150ce:	fa5f f888 	uxtb.w	r8, r8
 80150d2:	fb15 f50a 	smulbb	r5, r5, sl
 80150d6:	fb08 5502 	mla	r5, r8, r2, r5
 80150da:	fa1f fe8e 	uxth.w	lr, lr
 80150de:	fb16 f60a 	smulbb	r6, r6, sl
 80150e2:	b2ad      	uxth	r5, r5
 80150e4:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
 80150e8:	fb0c 6c02 	mla	ip, ip, r2, r6
 80150ec:	f10e 0201 	add.w	r2, lr, #1
 80150f0:	1c6e      	adds	r6, r5, #1
 80150f2:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 80150f6:	eb06 2615 	add.w	r6, r6, r5, lsr #8
 80150fa:	fa1f fc8c 	uxth.w	ip, ip
 80150fe:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8015102:	f40e 4e78 	and.w	lr, lr, #63488	@ 0xf800
 8015106:	ea46 0e0e 	orr.w	lr, r6, lr
 801510a:	f10c 0601 	add.w	r6, ip, #1
 801510e:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 8015112:	0976      	lsrs	r6, r6, #5
 8015114:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 8015118:	9a02      	ldr	r2, [sp, #8]
 801511a:	ea4e 0e06 	orr.w	lr, lr, r6
 801511e:	f824 e002 	strh.w	lr, [r4, r2]
 8015122:	e7b3      	b.n	801508c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8015124:	f04f 0800 	mov.w	r8, #0
 8015128:	eba3 0208 	sub.w	r2, r3, r8
 801512c:	2a00      	cmp	r2, #0
 801512e:	f77f af36 	ble.w	8014f9e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 8015132:	9e00      	ldr	r6, [sp, #0]
 8015134:	1402      	asrs	r2, r0, #16
 8015136:	140d      	asrs	r5, r1, #16
 8015138:	fb06 2505 	mla	r5, r6, r5, r2
 801513c:	086a      	lsrs	r2, r5, #1
 801513e:	9e01      	ldr	r6, [sp, #4]
 8015140:	5cb2      	ldrb	r2, [r6, r2]
 8015142:	07ed      	lsls	r5, r5, #31
 8015144:	bf54      	ite	pl
 8015146:	f002 020f 	andpl.w	r2, r2, #15
 801514a:	1112      	asrmi	r2, r2, #4
 801514c:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8015150:	b2d2      	uxtb	r2, r2
 8015152:	b1c2      	cbz	r2, 8015186 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 8015154:	9d04      	ldr	r5, [sp, #16]
 8015156:	436a      	muls	r2, r5
 8015158:	1c55      	adds	r5, r2, #1
 801515a:	eb05 2222 	add.w	r2, r5, r2, asr #8
 801515e:	4d2e      	ldr	r5, [pc, #184]	@ (8015218 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 8015160:	1212      	asrs	r2, r2, #8
 8015162:	682e      	ldr	r6, [r5, #0]
 8015164:	2aff      	cmp	r2, #255	@ 0xff
 8015166:	ea4f 2516 	mov.w	r5, r6, lsr #8
 801516a:	d113      	bne.n	8015194 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 801516c:	0972      	lsrs	r2, r6, #5
 801516e:	f425 65ff 	bic.w	r5, r5, #2040	@ 0x7f8
 8015172:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8015176:	f025 0507 	bic.w	r5, r5, #7
 801517a:	4315      	orrs	r5, r2
 801517c:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 8015180:	4335      	orrs	r5, r6
 8015182:	f824 5018 	strh.w	r5, [r4, r8, lsl #1]
 8015186:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8015188:	4410      	add	r0, r2
 801518a:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801518c:	f108 0801 	add.w	r8, r8, #1
 8015190:	4411      	add	r1, r2
 8015192:	e7c9      	b.n	8015128 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8015194:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 8015198:	fa1f fa82 	uxth.w	sl, r2
 801519c:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 80151a0:	f3c6 4707 	ubfx	r7, r6, #16, #8
 80151a4:	43d2      	mvns	r2, r2
 80151a6:	b2d2      	uxtb	r2, r2
 80151a8:	fb17 f70a 	smulbb	r7, r7, sl
 80151ac:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 80151b0:	fb0c 7c02 	mla	ip, ip, r2, r7
 80151b4:	b2f6      	uxtb	r6, r6
 80151b6:	ea4f 07ee 	mov.w	r7, lr, asr #3
 80151ba:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80151be:	fa5f fe8e 	uxtb.w	lr, lr
 80151c2:	fb16 f60a 	smulbb	r6, r6, sl
 80151c6:	fb0e 6602 	mla	r6, lr, r2, r6
 80151ca:	b2ed      	uxtb	r5, r5
 80151cc:	fa1f fc8c 	uxth.w	ip, ip
 80151d0:	fb15 f50a 	smulbb	r5, r5, sl
 80151d4:	b2b6      	uxth	r6, r6
 80151d6:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 80151da:	fb07 5702 	mla	r7, r7, r2, r5
 80151de:	f10c 0201 	add.w	r2, ip, #1
 80151e2:	1c75      	adds	r5, r6, #1
 80151e4:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 80151e8:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 80151ec:	b2bf      	uxth	r7, r7
 80151ee:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 80151f2:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 80151f6:	ea45 0c0c 	orr.w	ip, r5, ip
 80151fa:	1c7d      	adds	r5, r7, #1
 80151fc:	eb05 2517 	add.w	r5, r5, r7, lsr #8
 8015200:	096d      	lsrs	r5, r5, #5
 8015202:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8015206:	ea4c 0c05 	orr.w	ip, ip, r5
 801520a:	f824 c018 	strh.w	ip, [r4, r8, lsl #1]
 801520e:	e7ba      	b.n	8015186 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 8015210:	b007      	add	sp, #28
 8015212:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015216:	bf00      	nop
 8015218:	20014054 	.word	0x20014054

0801521c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801521c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015220:	b087      	sub	sp, #28
 8015222:	f8df 830c 	ldr.w	r8, [pc, #780]	@ 8015530 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
 8015226:	9815      	ldr	r0, [sp, #84]	@ 0x54
 8015228:	9205      	str	r2, [sp, #20]
 801522a:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
 801522e:	9101      	str	r1, [sp, #4]
 8015230:	6841      	ldr	r1, [r0, #4]
 8015232:	f8dd b060 	ldr.w	fp, [sp, #96]	@ 0x60
 8015236:	fb01 2404 	mla	r4, r1, r4, r2
 801523a:	6802      	ldr	r2, [r0, #0]
 801523c:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8015240:	f8db 2008 	ldr.w	r2, [fp, #8]
 8015244:	3201      	adds	r2, #1
 8015246:	f022 0201 	bic.w	r2, r2, #1
 801524a:	9202      	str	r2, [sp, #8]
 801524c:	f8db 2000 	ldr.w	r2, [fp]
 8015250:	9203      	str	r2, [sp, #12]
 8015252:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8015256:	9a01      	ldr	r2, [sp, #4]
 8015258:	2a00      	cmp	r2, #0
 801525a:	dc03      	bgt.n	8015264 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801525c:	9a05      	ldr	r2, [sp, #20]
 801525e:	2a00      	cmp	r2, #0
 8015260:	f340 8162 	ble.w	8015528 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 8015264:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8015266:	f9bb 7008 	ldrsh.w	r7, [fp, #8]
 801526a:	f9bb 600c 	ldrsh.w	r6, [fp, #12]
 801526e:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 8015272:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8015274:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 8015278:	2b00      	cmp	r3, #0
 801527a:	dd0e      	ble.n	801529a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801527c:	1402      	asrs	r2, r0, #16
 801527e:	d405      	bmi.n	801528c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8015280:	42ba      	cmp	r2, r7
 8015282:	da03      	bge.n	801528c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8015284:	140a      	asrs	r2, r1, #16
 8015286:	d401      	bmi.n	801528c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8015288:	42b2      	cmp	r2, r6
 801528a:	db07      	blt.n	801529c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801528c:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 801528e:	4410      	add	r0, r2
 8015290:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8015292:	3b01      	subs	r3, #1
 8015294:	4411      	add	r1, r2
 8015296:	3402      	adds	r4, #2
 8015298:	e7ee      	b.n	8015278 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 801529a:	d017      	beq.n	80152cc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 801529c:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 801529e:	1e5a      	subs	r2, r3, #1
 80152a0:	fb05 0502 	mla	r5, r5, r2, r0
 80152a4:	142d      	asrs	r5, r5, #16
 80152a6:	d409      	bmi.n	80152bc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 80152a8:	42bd      	cmp	r5, r7
 80152aa:	da07      	bge.n	80152bc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 80152ac:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 80152ae:	fb05 1202 	mla	r2, r5, r2, r1
 80152b2:	1412      	asrs	r2, r2, #16
 80152b4:	d402      	bmi.n	80152bc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 80152b6:	42b2      	cmp	r2, r6
 80152b8:	f2c0 80c3 	blt.w	8015442 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x226>
 80152bc:	2500      	movs	r5, #0
 80152be:	195a      	adds	r2, r3, r5
 80152c0:	2a00      	cmp	r2, #0
 80152c2:	dc3f      	bgt.n	8015344 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 80152c4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80152c8:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80152cc:	9b01      	ldr	r3, [sp, #4]
 80152ce:	2b00      	cmp	r3, #0
 80152d0:	f340 812a 	ble.w	8015528 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 80152d4:	ee30 0a04 	vadd.f32	s0, s0, s8
 80152d8:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80152dc:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80152e0:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80152e2:	ee31 1a05 	vadd.f32	s2, s2, s10
 80152e6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80152ea:	eeb0 6a62 	vmov.f32	s12, s5
 80152ee:	ee61 7a27 	vmul.f32	s15, s2, s15
 80152f2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80152f6:	ee77 2a62 	vsub.f32	s5, s14, s5
 80152fa:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
 80152fe:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8015302:	eeb0 6a43 	vmov.f32	s12, s6
 8015306:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801530a:	ee12 2a90 	vmov	r2, s5
 801530e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8015312:	fb92 f3f3 	sdiv	r3, r2, r3
 8015316:	ee13 2a10 	vmov	r2, s6
 801531a:	9313      	str	r3, [sp, #76]	@ 0x4c
 801531c:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801531e:	fb92 f3f3 	sdiv	r3, r2, r3
 8015322:	9314      	str	r3, [sp, #80]	@ 0x50
 8015324:	9b01      	ldr	r3, [sp, #4]
 8015326:	9a05      	ldr	r2, [sp, #20]
 8015328:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801532c:	3b01      	subs	r3, #1
 801532e:	9301      	str	r3, [sp, #4]
 8015330:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
 8015334:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8015336:	eeb0 3a67 	vmov.f32	s6, s15
 801533a:	bf08      	it	eq
 801533c:	4613      	moveq	r3, r2
 801533e:	eef0 2a47 	vmov.f32	s5, s14
 8015342:	e788      	b.n	8015256 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8015344:	1406      	asrs	r6, r0, #16
 8015346:	d42c      	bmi.n	80153a2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8015348:	f8db 2008 	ldr.w	r2, [fp, #8]
 801534c:	42b2      	cmp	r2, r6
 801534e:	dd28      	ble.n	80153a2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8015350:	140f      	asrs	r7, r1, #16
 8015352:	d426      	bmi.n	80153a2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8015354:	f8db 200c 	ldr.w	r2, [fp, #12]
 8015358:	42ba      	cmp	r2, r7
 801535a:	dd22      	ble.n	80153a2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801535c:	9a02      	ldr	r2, [sp, #8]
 801535e:	fb07 6602 	mla	r6, r7, r2, r6
 8015362:	0872      	lsrs	r2, r6, #1
 8015364:	9f03      	ldr	r7, [sp, #12]
 8015366:	5cba      	ldrb	r2, [r7, r2]
 8015368:	07f6      	lsls	r6, r6, #31
 801536a:	bf54      	ite	pl
 801536c:	f002 020f 	andpl.w	r2, r2, #15
 8015370:	1112      	asrmi	r2, r2, #4
 8015372:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8015376:	b2d2      	uxtb	r2, r2
 8015378:	2aff      	cmp	r2, #255	@ 0xff
 801537a:	d118      	bne.n	80153ae <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x192>
 801537c:	f8d8 2000 	ldr.w	r2, [r8]
 8015380:	f06f 0601 	mvn.w	r6, #1
 8015384:	fb06 f705 	mul.w	r7, r6, r5
 8015388:	f2a6 76fe 	subw	r6, r6, #2046	@ 0x7fe
 801538c:	ea06 2c12 	and.w	ip, r6, r2, lsr #8
 8015390:	0956      	lsrs	r6, r2, #5
 8015392:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 8015396:	ea4c 0606 	orr.w	r6, ip, r6
 801539a:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801539e:	4316      	orrs	r6, r2
 80153a0:	53e6      	strh	r6, [r4, r7]
 80153a2:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 80153a4:	4410      	add	r0, r2
 80153a6:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 80153a8:	3d01      	subs	r5, #1
 80153aa:	4411      	add	r1, r2
 80153ac:	e787      	b.n	80152be <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 80153ae:	2a00      	cmp	r2, #0
 80153b0:	d0f7      	beq.n	80153a2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 80153b2:	f06f 0601 	mvn.w	r6, #1
 80153b6:	436e      	muls	r6, r5
 80153b8:	f8d8 c000 	ldr.w	ip, [r8]
 80153bc:	f834 e006 	ldrh.w	lr, [r4, r6]
 80153c0:	9604      	str	r6, [sp, #16]
 80153c2:	fa1f f982 	uxth.w	r9, r2
 80153c6:	ea4f 272e 	mov.w	r7, lr, asr #8
 80153ca:	f3cc 4607 	ubfx	r6, ip, #16, #8
 80153ce:	43d2      	mvns	r2, r2
 80153d0:	b2d2      	uxtb	r2, r2
 80153d2:	fb16 f609 	smulbb	r6, r6, r9
 80153d6:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 80153da:	fb07 6702 	mla	r7, r7, r2, r6
 80153de:	f3cc 2a07 	ubfx	sl, ip, #8, #8
 80153e2:	ea4f 06ee 	mov.w	r6, lr, asr #3
 80153e6:	fa5f fc8c 	uxtb.w	ip, ip
 80153ea:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80153ee:	fa5f fe8e 	uxtb.w	lr, lr
 80153f2:	fb1c fc09 	smulbb	ip, ip, r9
 80153f6:	fb0e cc02 	mla	ip, lr, r2, ip
 80153fa:	b2bf      	uxth	r7, r7
 80153fc:	fb1a fa09 	smulbb	sl, sl, r9
 8015400:	fa1f fc8c 	uxth.w	ip, ip
 8015404:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8015408:	fb06 a602 	mla	r6, r6, r2, sl
 801540c:	1c7a      	adds	r2, r7, #1
 801540e:	f10c 0a01 	add.w	sl, ip, #1
 8015412:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8015416:	eb0a 2a1c 	add.w	sl, sl, ip, lsr #8
 801541a:	b2b6      	uxth	r6, r6
 801541c:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8015420:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 8015424:	ea4a 0707 	orr.w	r7, sl, r7
 8015428:	f106 0a01 	add.w	sl, r6, #1
 801542c:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8015430:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8015434:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8015438:	9a04      	ldr	r2, [sp, #16]
 801543a:	ea47 070a 	orr.w	r7, r7, sl
 801543e:	52a7      	strh	r7, [r4, r2]
 8015440:	e7af      	b.n	80153a2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8015442:	f04f 0e00 	mov.w	lr, #0
 8015446:	eba3 020e 	sub.w	r2, r3, lr
 801544a:	2a00      	cmp	r2, #0
 801544c:	f77f af3a 	ble.w	80152c4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8015450:	9e02      	ldr	r6, [sp, #8]
 8015452:	1402      	asrs	r2, r0, #16
 8015454:	140d      	asrs	r5, r1, #16
 8015456:	fb06 2505 	mla	r5, r6, r5, r2
 801545a:	086a      	lsrs	r2, r5, #1
 801545c:	9e03      	ldr	r6, [sp, #12]
 801545e:	5cb2      	ldrb	r2, [r6, r2]
 8015460:	07ed      	lsls	r5, r5, #31
 8015462:	bf54      	ite	pl
 8015464:	f002 020f 	andpl.w	r2, r2, #15
 8015468:	1112      	asrmi	r2, r2, #4
 801546a:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801546e:	b2d2      	uxtb	r2, r2
 8015470:	2aff      	cmp	r2, #255	@ 0xff
 8015472:	d115      	bne.n	80154a0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x284>
 8015474:	f8d8 5000 	ldr.w	r5, [r8]
 8015478:	f6a2 02ff 	subw	r2, r2, #2303	@ 0x8ff
 801547c:	ea02 2615 	and.w	r6, r2, r5, lsr #8
 8015480:	096a      	lsrs	r2, r5, #5
 8015482:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8015486:	4332      	orrs	r2, r6
 8015488:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801548c:	432a      	orrs	r2, r5
 801548e:	f824 201e 	strh.w	r2, [r4, lr, lsl #1]
 8015492:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8015494:	4410      	add	r0, r2
 8015496:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8015498:	f10e 0e01 	add.w	lr, lr, #1
 801549c:	4411      	add	r1, r2
 801549e:	e7d2      	b.n	8015446 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 80154a0:	2a00      	cmp	r2, #0
 80154a2:	d0f6      	beq.n	8015492 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 80154a4:	f8d8 7000 	ldr.w	r7, [r8]
 80154a8:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 80154ac:	fa1f f982 	uxth.w	r9, r2
 80154b0:	ea4f 262c 	mov.w	r6, ip, asr #8
 80154b4:	f3c7 4507 	ubfx	r5, r7, #16, #8
 80154b8:	43d2      	mvns	r2, r2
 80154ba:	b2d2      	uxtb	r2, r2
 80154bc:	fb15 f509 	smulbb	r5, r5, r9
 80154c0:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 80154c4:	fb06 5602 	mla	r6, r6, r2, r5
 80154c8:	f3c7 2a07 	ubfx	sl, r7, #8, #8
 80154cc:	ea4f 05ec 	mov.w	r5, ip, asr #3
 80154d0:	b2ff      	uxtb	r7, r7
 80154d2:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80154d6:	fa5f fc8c 	uxtb.w	ip, ip
 80154da:	fb17 f709 	smulbb	r7, r7, r9
 80154de:	fb0c 7702 	mla	r7, ip, r2, r7
 80154e2:	b2b6      	uxth	r6, r6
 80154e4:	fb1a fa09 	smulbb	sl, sl, r9
 80154e8:	b2bf      	uxth	r7, r7
 80154ea:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 80154ee:	fb05 a502 	mla	r5, r5, r2, sl
 80154f2:	1c72      	adds	r2, r6, #1
 80154f4:	f107 0a01 	add.w	sl, r7, #1
 80154f8:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 80154fc:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8015500:	b2ad      	uxth	r5, r5
 8015502:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8015506:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
 801550a:	ea4a 0606 	orr.w	r6, sl, r6
 801550e:	f105 0a01 	add.w	sl, r5, #1
 8015512:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8015516:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801551a:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 801551e:	ea46 060a 	orr.w	r6, r6, sl
 8015522:	f824 601e 	strh.w	r6, [r4, lr, lsl #1]
 8015526:	e7b4      	b.n	8015492 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 8015528:	b007      	add	sp, #28
 801552a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801552e:	bf00      	nop
 8015530:	20014054 	.word	0x20014054

08015534 <_ZN8touchgfx8LCD16bppD1Ev>:
 8015534:	4770      	bx	lr

08015536 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOID1Ev>:
 8015536:	4770      	bx	lr

08015538 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D1Ev>:
 8015538:	4770      	bx	lr

0801553a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED1Ev>:
 801553a:	4770      	bx	lr

0801553c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D1Ev>:
 801553c:	4770      	bx	lr

0801553e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev>:
 801553e:	4770      	bx	lr

08015540 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev>:
 8015540:	4770      	bx	lr

08015542 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev>:
 8015542:	4770      	bx	lr

08015544 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev>:
 8015544:	4770      	bx	lr

08015546 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 8015546:	4770      	bx	lr

08015548 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8015548:	4770      	bx	lr

0801554a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801554a:	4770      	bx	lr

0801554c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 801554c:	4770      	bx	lr

0801554e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801554e:	4770      	bx	lr

08015550 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 8015550:	4770      	bx	lr

08015552 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 8015552:	4770      	bx	lr

08015554 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8015554:	4770      	bx	lr

08015556 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 8015556:	4770      	bx	lr

08015558 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 8015558:	4770      	bx	lr

0801555a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801555a:	4770      	bx	lr

0801555c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD1Ev>:
 801555c:	4770      	bx	lr

0801555e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801555e:	4770      	bx	lr

08015560 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8015560:	4770      	bx	lr

08015562 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 8015562:	4770      	bx	lr

08015564 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 8015564:	4770      	bx	lr

08015566 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
 8015566:	4770      	bx	lr

08015568 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
 8015568:	4770      	bx	lr

0801556a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
 801556a:	4770      	bx	lr

0801556c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
 801556c:	4770      	bx	lr

0801556e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801556e:	4770      	bx	lr

08015570 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 8015570:	4770      	bx	lr

08015572 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 8015572:	4770      	bx	lr

08015574 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 8015574:	4770      	bx	lr

08015576 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t>:
 8015576:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801557a:	b088      	sub	sp, #32
 801557c:	ac08      	add	r4, sp, #32
 801557e:	4606      	mov	r6, r0
 8015580:	f824 3d0c 	strh.w	r3, [r4, #-12]!
 8015584:	4620      	mov	r0, r4
 8015586:	4688      	mov	r8, r1
 8015588:	4691      	mov	r9, r2
 801558a:	f7fd fc31 	bl	8012df0 <_ZNK8touchgfx6Bitmap7getDataEv>
 801558e:	6833      	ldr	r3, [r6, #0]
 8015590:	4605      	mov	r5, r0
 8015592:	4620      	mov	r0, r4
 8015594:	699f      	ldr	r7, [r3, #24]
 8015596:	f7fd fb39 	bl	8012c0c <_ZNK8touchgfx6Bitmap8getWidthEv>
 801559a:	4682      	mov	sl, r0
 801559c:	4620      	mov	r0, r4
 801559e:	f7fd fb69 	bl	8012c74 <_ZNK8touchgfx6Bitmap9getHeightEv>
 80155a2:	9500      	str	r5, [sp, #0]
 80155a4:	e9cd a001 	strd	sl, r0, [sp, #4]
 80155a8:	464b      	mov	r3, r9
 80155aa:	a806      	add	r0, sp, #24
 80155ac:	4642      	mov	r2, r8
 80155ae:	4631      	mov	r1, r6
 80155b0:	47b8      	blx	r7
 80155b2:	4628      	mov	r0, r5
 80155b4:	b008      	add	sp, #32
 80155b6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
	...

080155bc <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE>:
 80155bc:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 80155c0:	2300      	movs	r3, #0
 80155c2:	9300      	str	r3, [sp, #0]
 80155c4:	4b3d      	ldr	r3, [pc, #244]	@ (80156bc <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x100>)
 80155c6:	781b      	ldrb	r3, [r3, #0]
 80155c8:	2b00      	cmp	r3, #0
 80155ca:	d137      	bne.n	801563c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x80>
 80155cc:	4a3c      	ldr	r2, [pc, #240]	@ (80156c0 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 80155ce:	f9b2 2000 	ldrsh.w	r2, [r2]
 80155d2:	f8ad 2004 	strh.w	r2, [sp, #4]
 80155d6:	2b00      	cmp	r3, #0
 80155d8:	d132      	bne.n	8015640 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x84>
 80155da:	4b3a      	ldr	r3, [pc, #232]	@ (80156c4 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 80155dc:	f9b3 3000 	ldrsh.w	r3, [r3]
 80155e0:	6808      	ldr	r0, [r1, #0]
 80155e2:	6849      	ldr	r1, [r1, #4]
 80155e4:	f8ad 3006 	strh.w	r3, [sp, #6]
 80155e8:	ac02      	add	r4, sp, #8
 80155ea:	ab02      	add	r3, sp, #8
 80155ec:	c303      	stmia	r3!, {r0, r1}
 80155ee:	4669      	mov	r1, sp
 80155f0:	4620      	mov	r0, r4
 80155f2:	f7f9 ff85 	bl	800f500 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80155f6:	4668      	mov	r0, sp
 80155f8:	f7f9 ff5a 	bl	800f4b0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80155fc:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8015600:	f8bd 2000 	ldrh.w	r2, [sp]
 8015604:	4d30      	ldr	r5, [pc, #192]	@ (80156c8 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x10c>)
 8015606:	4413      	add	r3, r2
 8015608:	f8ad 3008 	strh.w	r3, [sp, #8]
 801560c:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 8015610:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8015614:	6828      	ldr	r0, [r5, #0]
 8015616:	4413      	add	r3, r2
 8015618:	f8ad 300a 	strh.w	r3, [sp, #10]
 801561c:	6803      	ldr	r3, [r0, #0]
 801561e:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8015620:	4798      	blx	r3
 8015622:	f010 0f01 	tst.w	r0, #1
 8015626:	462f      	mov	r7, r5
 8015628:	d00c      	beq.n	8015644 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x88>
 801562a:	6828      	ldr	r0, [r5, #0]
 801562c:	6803      	ldr	r3, [r0, #0]
 801562e:	e894 0006 	ldmia.w	r4, {r1, r2}
 8015632:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8015634:	4798      	blx	r3
 8015636:	b004      	add	sp, #16
 8015638:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801563c:	4a21      	ldr	r2, [pc, #132]	@ (80156c4 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 801563e:	e7c6      	b.n	80155ce <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x12>
 8015640:	4b1f      	ldr	r3, [pc, #124]	@ (80156c0 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 8015642:	e7cb      	b.n	80155dc <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x20>
 8015644:	6838      	ldr	r0, [r7, #0]
 8015646:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 801564a:	6803      	ldr	r3, [r0, #0]
 801564c:	f9bd 500e 	ldrsh.w	r5, [sp, #14]
 8015650:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8015652:	4798      	blx	r3
 8015654:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
 8015658:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801565c:	f8bd 6004 	ldrh.w	r6, [sp, #4]
 8015660:	fb16 3602 	smlabb	r6, r6, r2, r3
 8015664:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 8015668:	6838      	ldr	r0, [r7, #0]
 801566a:	6803      	ldr	r3, [r0, #0]
 801566c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801566e:	4798      	blx	r3
 8015670:	4a13      	ldr	r2, [pc, #76]	@ (80156c0 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 8015672:	f9bd 400a 	ldrsh.w	r4, [sp, #10]
 8015676:	8813      	ldrh	r3, [r2, #0]
 8015678:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 801567c:	fb03 1404 	mla	r4, r3, r4, r1
 8015680:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8015684:	435d      	muls	r5, r3
 8015686:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801568a:	ea4f 0848 	mov.w	r8, r8, lsl #1
 801568e:	4691      	mov	r9, r2
 8015690:	6838      	ldr	r0, [r7, #0]
 8015692:	42ac      	cmp	r4, r5
 8015694:	6803      	ldr	r3, [r0, #0]
 8015696:	d20e      	bcs.n	80156b6 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xfa>
 8015698:	f8d3 a038 	ldr.w	sl, [r3, #56]	@ 0x38
 801569c:	4632      	mov	r2, r6
 801569e:	4643      	mov	r3, r8
 80156a0:	4621      	mov	r1, r4
 80156a2:	47d0      	blx	sl
 80156a4:	f8b9 3000 	ldrh.w	r3, [r9]
 80156a8:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80156ac:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 80156b0:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 80156b4:	e7ec      	b.n	8015690 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xd4>
 80156b6:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80156b8:	4798      	blx	r3
 80156ba:	e7bc      	b.n	8015636 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x7a>
 80156bc:	2001403a 	.word	0x2001403a
 80156c0:	2001403c 	.word	0x2001403c
 80156c4:	2001403e 	.word	0x2001403e
 80156c8:	20014044 	.word	0x20014044

080156cc <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb>:
 80156cc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80156d0:	b08b      	sub	sp, #44	@ 0x2c
 80156d2:	460f      	mov	r7, r1
 80156d4:	f89d b050 	ldrb.w	fp, [sp, #80]	@ 0x50
 80156d8:	f89d 4054 	ldrb.w	r4, [sp, #84]	@ 0x54
 80156dc:	4616      	mov	r6, r2
 80156de:	f1bb 0f00 	cmp.w	fp, #0
 80156e2:	d04a      	beq.n	801577a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
 80156e4:	6810      	ldr	r0, [r2, #0]
 80156e6:	6851      	ldr	r1, [r2, #4]
 80156e8:	ad06      	add	r5, sp, #24
 80156ea:	c503      	stmia	r5!, {r0, r1}
 80156ec:	6818      	ldr	r0, [r3, #0]
 80156ee:	6859      	ldr	r1, [r3, #4]
 80156f0:	ad08      	add	r5, sp, #32
 80156f2:	c503      	stmia	r5!, {r0, r1}
 80156f4:	a806      	add	r0, sp, #24
 80156f6:	f7f9 fedb 	bl	800f4b0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80156fa:	4631      	mov	r1, r6
 80156fc:	a808      	add	r0, sp, #32
 80156fe:	f7f9 feff 	bl	800f500 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8015702:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 8015706:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	@ 0x22
 801570a:	f8bd 601c 	ldrh.w	r6, [sp, #28]
 801570e:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	@ 0x24
 8015712:	f9bd 5026 	ldrsh.w	r5, [sp, #38]	@ 0x26
 8015716:	fb16 2103 	smlabb	r1, r6, r3, r2
 801571a:	eb07 0641 	add.w	r6, r7, r1, lsl #1
 801571e:	f8bd 1018 	ldrh.w	r1, [sp, #24]
 8015722:	4f5f      	ldr	r7, [pc, #380]	@ (80158a0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 8015724:	440a      	add	r2, r1
 8015726:	f8ad 2020 	strh.w	r2, [sp, #32]
 801572a:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 801572e:	6838      	ldr	r0, [r7, #0]
 8015730:	4413      	add	r3, r2
 8015732:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
 8015736:	6803      	ldr	r3, [r0, #0]
 8015738:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 801573a:	4798      	blx	r3
 801573c:	f1bb 0fff 	cmp.w	fp, #255	@ 0xff
 8015740:	46b9      	mov	r9, r7
 8015742:	d11d      	bne.n	8015780 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb4>
 8015744:	b9fc      	cbnz	r4, 8015786 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 8015746:	f010 0f01 	tst.w	r0, #1
 801574a:	d01c      	beq.n	8015786 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 801574c:	f8d9 0000 	ldr.w	r0, [r9]
 8015750:	f8bd 3022 	ldrh.w	r3, [sp, #34]	@ 0x22
 8015754:	6801      	ldr	r1, [r0, #0]
 8015756:	f8cd b00c 	str.w	fp, [sp, #12]
 801575a:	2700      	movs	r7, #0
 801575c:	e9cd 4704 	strd	r4, r7, [sp, #16]
 8015760:	f8bd 401c 	ldrh.w	r4, [sp, #28]
 8015764:	9402      	str	r4, [sp, #8]
 8015766:	b2ad      	uxth	r5, r5
 8015768:	fa1f f488 	uxth.w	r4, r8
 801576c:	9501      	str	r5, [sp, #4]
 801576e:	9400      	str	r4, [sp, #0]
 8015770:	6c8c      	ldr	r4, [r1, #72]	@ 0x48
 8015772:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 8015776:	4631      	mov	r1, r6
 8015778:	47a0      	blx	r4
 801577a:	b00b      	add	sp, #44	@ 0x2c
 801577c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015780:	f010 0f04 	tst.w	r0, #4
 8015784:	e7e1      	b.n	801574a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x7e>
 8015786:	f8d9 0000 	ldr.w	r0, [r9]
 801578a:	6803      	ldr	r3, [r0, #0]
 801578c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801578e:	4798      	blx	r3
 8015790:	4b44      	ldr	r3, [pc, #272]	@ (80158a4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d8>)
 8015792:	f9bd 4022 	ldrsh.w	r4, [sp, #34]	@ 0x22
 8015796:	881a      	ldrh	r2, [r3, #0]
 8015798:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
 801579c:	f1bb 0fff 	cmp.w	fp, #255	@ 0xff
 80157a0:	fb02 1404 	mla	r4, r2, r4, r1
 80157a4:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 80157a8:	469a      	mov	sl, r3
 80157aa:	fb05 f502 	mul.w	r5, r5, r2
 80157ae:	ea4f 0748 	mov.w	r7, r8, lsl #1
 80157b2:	d059      	beq.n	8015868 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x19c>
 80157b4:	f1cb 09ff 	rsb	r9, fp, #255	@ 0xff
 80157b8:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 80157bc:	fa1f f28b 	uxth.w	r2, fp
 80157c0:	fa1f f989 	uxth.w	r9, r9
 80157c4:	469e      	mov	lr, r3
 80157c6:	42ac      	cmp	r4, r5
 80157c8:	d264      	bcs.n	8015894 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 80157ca:	eb04 0a07 	add.w	sl, r4, r7
 80157ce:	4554      	cmp	r4, sl
 80157d0:	d23d      	bcs.n	801584e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x182>
 80157d2:	8821      	ldrh	r1, [r4, #0]
 80157d4:	f836 3b02 	ldrh.w	r3, [r6], #2
 80157d8:	1208      	asrs	r0, r1, #8
 80157da:	ea4f 2c23 	mov.w	ip, r3, asr #8
 80157de:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 80157e2:	fb10 f009 	smulbb	r0, r0, r9
 80157e6:	ea4f 0be1 	mov.w	fp, r1, asr #3
 80157ea:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 80157ee:	00c9      	lsls	r1, r1, #3
 80157f0:	fb0c 0c02 	mla	ip, ip, r2, r0
 80157f4:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
 80157f8:	10d8      	asrs	r0, r3, #3
 80157fa:	b2c9      	uxtb	r1, r1
 80157fc:	00db      	lsls	r3, r3, #3
 80157fe:	fa1f fc8c 	uxth.w	ip, ip
 8015802:	fb1b fb09 	smulbb	fp, fp, r9
 8015806:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 801580a:	b2db      	uxtb	r3, r3
 801580c:	fb11 f109 	smulbb	r1, r1, r9
 8015810:	fb00 b002 	mla	r0, r0, r2, fp
 8015814:	fb03 1302 	mla	r3, r3, r2, r1
 8015818:	f10c 0b01 	add.w	fp, ip, #1
 801581c:	b29b      	uxth	r3, r3
 801581e:	eb0b 2c1c 	add.w	ip, fp, ip, lsr #8
 8015822:	b280      	uxth	r0, r0
 8015824:	f40c 4b78 	and.w	fp, ip, #63488	@ 0xf800
 8015828:	f103 0c01 	add.w	ip, r3, #1
 801582c:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8015830:	1c43      	adds	r3, r0, #1
 8015832:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8015836:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801583a:	0940      	lsrs	r0, r0, #5
 801583c:	ea4c 0c0b 	orr.w	ip, ip, fp
 8015840:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8015844:	ea4c 0c00 	orr.w	ip, ip, r0
 8015848:	f824 cb02 	strh.w	ip, [r4], #2
 801584c:	e7bf      	b.n	80157ce <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x102>
 801584e:	f8be 3000 	ldrh.w	r3, [lr]
 8015852:	eba3 0308 	sub.w	r3, r3, r8
 8015856:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801585a:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 801585e:	eba3 0308 	sub.w	r3, r3, r8
 8015862:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 8015866:	e7ae      	b.n	80157c6 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xfa>
 8015868:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801586c:	f8d9 0000 	ldr.w	r0, [r9]
 8015870:	42ac      	cmp	r4, r5
 8015872:	6803      	ldr	r3, [r0, #0]
 8015874:	d20e      	bcs.n	8015894 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 8015876:	f8d3 8038 	ldr.w	r8, [r3, #56]	@ 0x38
 801587a:	4632      	mov	r2, r6
 801587c:	463b      	mov	r3, r7
 801587e:	4621      	mov	r1, r4
 8015880:	47c0      	blx	r8
 8015882:	f8ba 3000 	ldrh.w	r3, [sl]
 8015886:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801588a:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 801588e:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 8015892:	e7eb      	b.n	801586c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1a0>
 8015894:	4b02      	ldr	r3, [pc, #8]	@ (80158a0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 8015896:	6818      	ldr	r0, [r3, #0]
 8015898:	6803      	ldr	r3, [r0, #0]
 801589a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 801589c:	4798      	blx	r3
 801589e:	e76c      	b.n	801577a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
 80158a0:	20014044 	.word	0x20014044
 80158a4:	2001403c 	.word	0x2001403c

080158a8 <_ZN8touchgfx8LCD16bppD0Ev>:
 80158a8:	b510      	push	{r4, lr}
 80158aa:	218c      	movs	r1, #140	@ 0x8c
 80158ac:	4604      	mov	r4, r0
 80158ae:	f00c fa2c 	bl	8021d0a <_ZdlPvj>
 80158b2:	4620      	mov	r0, r4
 80158b4:	bd10      	pop	{r4, pc}

080158b6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D0Ev>:
 80158b6:	b510      	push	{r4, lr}
 80158b8:	2104      	movs	r1, #4
 80158ba:	4604      	mov	r4, r0
 80158bc:	f00c fa25 	bl	8021d0a <_ZdlPvj>
 80158c0:	4620      	mov	r0, r4
 80158c2:	bd10      	pop	{r4, pc}

080158c4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED0Ev>:
 80158c4:	b510      	push	{r4, lr}
 80158c6:	2104      	movs	r1, #4
 80158c8:	4604      	mov	r4, r0
 80158ca:	f00c fa1e 	bl	8021d0a <_ZdlPvj>
 80158ce:	4620      	mov	r0, r4
 80158d0:	bd10      	pop	{r4, pc}

080158d2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D0Ev>:
 80158d2:	b510      	push	{r4, lr}
 80158d4:	f640 0144 	movw	r1, #2116	@ 0x844
 80158d8:	4604      	mov	r4, r0
 80158da:	f00c fa16 	bl	8021d0a <_ZdlPvj>
 80158de:	4620      	mov	r0, r4
 80158e0:	bd10      	pop	{r4, pc}

080158e2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOID0Ev>:
 80158e2:	b510      	push	{r4, lr}
 80158e4:	f44f 7182 	mov.w	r1, #260	@ 0x104
 80158e8:	4604      	mov	r4, r0
 80158ea:	f00c fa0e 	bl	8021d0a <_ZdlPvj>
 80158ee:	4620      	mov	r0, r4
 80158f0:	bd10      	pop	{r4, pc}

080158f2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 80158f2:	b510      	push	{r4, lr}
 80158f4:	2104      	movs	r1, #4
 80158f6:	4604      	mov	r4, r0
 80158f8:	f00c fa07 	bl	8021d0a <_ZdlPvj>
 80158fc:	4620      	mov	r0, r4
 80158fe:	bd10      	pop	{r4, pc}

08015900 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 8015900:	b510      	push	{r4, lr}
 8015902:	2104      	movs	r1, #4
 8015904:	4604      	mov	r4, r0
 8015906:	f00c fa00 	bl	8021d0a <_ZdlPvj>
 801590a:	4620      	mov	r0, r4
 801590c:	bd10      	pop	{r4, pc}

0801590e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 801590e:	b510      	push	{r4, lr}
 8015910:	2104      	movs	r1, #4
 8015912:	4604      	mov	r4, r0
 8015914:	f00c f9f9 	bl	8021d0a <_ZdlPvj>
 8015918:	4620      	mov	r0, r4
 801591a:	bd10      	pop	{r4, pc}

0801591c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 801591c:	b510      	push	{r4, lr}
 801591e:	2104      	movs	r1, #4
 8015920:	4604      	mov	r4, r0
 8015922:	f00c f9f2 	bl	8021d0a <_ZdlPvj>
 8015926:	4620      	mov	r0, r4
 8015928:	bd10      	pop	{r4, pc}

0801592a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801592a:	b510      	push	{r4, lr}
 801592c:	2104      	movs	r1, #4
 801592e:	4604      	mov	r4, r0
 8015930:	f00c f9eb 	bl	8021d0a <_ZdlPvj>
 8015934:	4620      	mov	r0, r4
 8015936:	bd10      	pop	{r4, pc}

08015938 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
 8015938:	b510      	push	{r4, lr}
 801593a:	2104      	movs	r1, #4
 801593c:	4604      	mov	r4, r0
 801593e:	f00c f9e4 	bl	8021d0a <_ZdlPvj>
 8015942:	4620      	mov	r0, r4
 8015944:	bd10      	pop	{r4, pc}

08015946 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
 8015946:	b510      	push	{r4, lr}
 8015948:	2104      	movs	r1, #4
 801594a:	4604      	mov	r4, r0
 801594c:	f00c f9dd 	bl	8021d0a <_ZdlPvj>
 8015950:	4620      	mov	r0, r4
 8015952:	bd10      	pop	{r4, pc}

08015954 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
 8015954:	b510      	push	{r4, lr}
 8015956:	2104      	movs	r1, #4
 8015958:	4604      	mov	r4, r0
 801595a:	f00c f9d6 	bl	8021d0a <_ZdlPvj>
 801595e:	4620      	mov	r0, r4
 8015960:	bd10      	pop	{r4, pc}

08015962 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 8015962:	b510      	push	{r4, lr}
 8015964:	2104      	movs	r1, #4
 8015966:	4604      	mov	r4, r0
 8015968:	f00c f9cf 	bl	8021d0a <_ZdlPvj>
 801596c:	4620      	mov	r0, r4
 801596e:	bd10      	pop	{r4, pc}

08015970 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8015970:	b510      	push	{r4, lr}
 8015972:	2104      	movs	r1, #4
 8015974:	4604      	mov	r4, r0
 8015976:	f00c f9c8 	bl	8021d0a <_ZdlPvj>
 801597a:	4620      	mov	r0, r4
 801597c:	bd10      	pop	{r4, pc}

0801597e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801597e:	b510      	push	{r4, lr}
 8015980:	2104      	movs	r1, #4
 8015982:	4604      	mov	r4, r0
 8015984:	f00c f9c1 	bl	8021d0a <_ZdlPvj>
 8015988:	4620      	mov	r0, r4
 801598a:	bd10      	pop	{r4, pc}

0801598c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 801598c:	b510      	push	{r4, lr}
 801598e:	2104      	movs	r1, #4
 8015990:	4604      	mov	r4, r0
 8015992:	f00c f9ba 	bl	8021d0a <_ZdlPvj>
 8015996:	4620      	mov	r0, r4
 8015998:	bd10      	pop	{r4, pc}

0801599a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801599a:	b510      	push	{r4, lr}
 801599c:	2104      	movs	r1, #4
 801599e:	4604      	mov	r4, r0
 80159a0:	f00c f9b3 	bl	8021d0a <_ZdlPvj>
 80159a4:	4620      	mov	r0, r4
 80159a6:	bd10      	pop	{r4, pc}

080159a8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 80159a8:	b510      	push	{r4, lr}
 80159aa:	2104      	movs	r1, #4
 80159ac:	4604      	mov	r4, r0
 80159ae:	f00c f9ac 	bl	8021d0a <_ZdlPvj>
 80159b2:	4620      	mov	r0, r4
 80159b4:	bd10      	pop	{r4, pc}

080159b6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 80159b6:	b510      	push	{r4, lr}
 80159b8:	2104      	movs	r1, #4
 80159ba:	4604      	mov	r4, r0
 80159bc:	f00c f9a5 	bl	8021d0a <_ZdlPvj>
 80159c0:	4620      	mov	r0, r4
 80159c2:	bd10      	pop	{r4, pc}

080159c4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD0Ev>:
 80159c4:	b510      	push	{r4, lr}
 80159c6:	2104      	movs	r1, #4
 80159c8:	4604      	mov	r4, r0
 80159ca:	f00c f99e 	bl	8021d0a <_ZdlPvj>
 80159ce:	4620      	mov	r0, r4
 80159d0:	bd10      	pop	{r4, pc}

080159d2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 80159d2:	b510      	push	{r4, lr}
 80159d4:	2104      	movs	r1, #4
 80159d6:	4604      	mov	r4, r0
 80159d8:	f00c f997 	bl	8021d0a <_ZdlPvj>
 80159dc:	4620      	mov	r0, r4
 80159de:	bd10      	pop	{r4, pc}

080159e0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 80159e0:	b510      	push	{r4, lr}
 80159e2:	2104      	movs	r1, #4
 80159e4:	4604      	mov	r4, r0
 80159e6:	f00c f990 	bl	8021d0a <_ZdlPvj>
 80159ea:	4620      	mov	r0, r4
 80159ec:	bd10      	pop	{r4, pc}

080159ee <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 80159ee:	b510      	push	{r4, lr}
 80159f0:	2104      	movs	r1, #4
 80159f2:	4604      	mov	r4, r0
 80159f4:	f00c f989 	bl	8021d0a <_ZdlPvj>
 80159f8:	4620      	mov	r0, r4
 80159fa:	bd10      	pop	{r4, pc}

080159fc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD0Ev>:
 80159fc:	b510      	push	{r4, lr}
 80159fe:	2104      	movs	r1, #4
 8015a00:	4604      	mov	r4, r0
 8015a02:	f00c f982 	bl	8021d0a <_ZdlPvj>
 8015a06:	4620      	mov	r0, r4
 8015a08:	bd10      	pop	{r4, pc}

08015a0a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 8015a0a:	b510      	push	{r4, lr}
 8015a0c:	2104      	movs	r1, #4
 8015a0e:	4604      	mov	r4, r0
 8015a10:	f00c f97b 	bl	8021d0a <_ZdlPvj>
 8015a14:	4620      	mov	r0, r4
 8015a16:	bd10      	pop	{r4, pc}

08015a18 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8015a18:	b510      	push	{r4, lr}
 8015a1a:	2104      	movs	r1, #4
 8015a1c:	4604      	mov	r4, r0
 8015a1e:	f00c f974 	bl	8021d0a <_ZdlPvj>
 8015a22:	4620      	mov	r0, r4
 8015a24:	bd10      	pop	{r4, pc}

08015a26 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 8015a26:	b510      	push	{r4, lr}
 8015a28:	2104      	movs	r1, #4
 8015a2a:	4604      	mov	r4, r0
 8015a2c:	f00c f96d 	bl	8021d0a <_ZdlPvj>
 8015a30:	4620      	mov	r0, r4
 8015a32:	bd10      	pop	{r4, pc}

08015a34 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 8015a34:	b510      	push	{r4, lr}
 8015a36:	2104      	movs	r1, #4
 8015a38:	4604      	mov	r4, r0
 8015a3a:	f00c f966 	bl	8021d0a <_ZdlPvj>
 8015a3e:	4620      	mov	r0, r4
 8015a40:	bd10      	pop	{r4, pc}

08015a42 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD0Ev>:
 8015a42:	b510      	push	{r4, lr}
 8015a44:	2104      	movs	r1, #4
 8015a46:	4604      	mov	r4, r0
 8015a48:	f00c f95f 	bl	8021d0a <_ZdlPvj>
 8015a4c:	4620      	mov	r0, r4
 8015a4e:	bd10      	pop	{r4, pc}

08015a50 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD0Ev>:
 8015a50:	b510      	push	{r4, lr}
 8015a52:	2104      	movs	r1, #4
 8015a54:	4604      	mov	r4, r0
 8015a56:	f00c f958 	bl	8021d0a <_ZdlPvj>
 8015a5a:	4620      	mov	r0, r4
 8015a5c:	bd10      	pop	{r4, pc}

08015a5e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD0Ev>:
 8015a5e:	b510      	push	{r4, lr}
 8015a60:	2104      	movs	r1, #4
 8015a62:	4604      	mov	r4, r0
 8015a64:	f00c f951 	bl	8021d0a <_ZdlPvj>
 8015a68:	4620      	mov	r0, r4
 8015a6a:	bd10      	pop	{r4, pc}

08015a6c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD0Ev>:
 8015a6c:	b510      	push	{r4, lr}
 8015a6e:	2104      	movs	r1, #4
 8015a70:	4604      	mov	r4, r0
 8015a72:	f00c f94a 	bl	8021d0a <_ZdlPvj>
 8015a76:	4620      	mov	r0, r4
 8015a78:	bd10      	pop	{r4, pc}
	...

08015a7c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h>:
 8015a7c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015a80:	b08f      	sub	sp, #60	@ 0x3c
 8015a82:	4616      	mov	r6, r2
 8015a84:	f89d 2060 	ldrb.w	r2, [sp, #96]	@ 0x60
 8015a88:	9205      	str	r2, [sp, #20]
 8015a8a:	4682      	mov	sl, r0
 8015a8c:	460d      	mov	r5, r1
 8015a8e:	2a00      	cmp	r2, #0
 8015a90:	f000 82b7 	beq.w	8016002 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x586>
 8015a94:	6830      	ldr	r0, [r6, #0]
 8015a96:	6871      	ldr	r1, [r6, #4]
 8015a98:	ac0a      	add	r4, sp, #40	@ 0x28
 8015a9a:	c403      	stmia	r4!, {r0, r1}
 8015a9c:	6818      	ldr	r0, [r3, #0]
 8015a9e:	6859      	ldr	r1, [r3, #4]
 8015aa0:	ac0c      	add	r4, sp, #48	@ 0x30
 8015aa2:	c403      	stmia	r4!, {r0, r1}
 8015aa4:	a80a      	add	r0, sp, #40	@ 0x28
 8015aa6:	f7f9 fd03 	bl	800f4b0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8015aaa:	4631      	mov	r1, r6
 8015aac:	a80c      	add	r0, sp, #48	@ 0x30
 8015aae:	f7f9 fd27 	bl	800f500 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8015ab2:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
 8015ab6:	f5b2 6f80 	cmp.w	r2, #1024	@ 0x400
 8015aba:	bfd7      	itett	le
 8015abc:	b293      	uxthle	r3, r2
 8015abe:	2301      	movgt	r3, #1
 8015ac0:	f44f 6180 	movle.w	r1, #1024	@ 0x400
 8015ac4:	fb91 f3f3 	sdivle	r3, r1, r3
 8015ac8:	9300      	str	r3, [sp, #0]
 8015aca:	f105 0308 	add.w	r3, r5, #8
 8015ace:	9900      	ldr	r1, [sp, #0]
 8015ad0:	9306      	str	r3, [sp, #24]
 8015ad2:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	@ 0x2e
 8015ad6:	440b      	add	r3, r1
 8015ad8:	3b01      	subs	r3, #1
 8015ada:	fb93 f3f1 	sdiv	r3, r3, r1
 8015ade:	9906      	ldr	r1, [sp, #24]
 8015ae0:	3b01      	subs	r3, #1
 8015ae2:	b29b      	uxth	r3, r3
 8015ae4:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 8015ae8:	9307      	str	r3, [sp, #28]
 8015aea:	9900      	ldr	r1, [sp, #0]
 8015aec:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 8015af0:	fb93 f0f1 	sdiv	r0, r3, r1
 8015af4:	b284      	uxth	r4, r0
 8015af6:	9402      	str	r4, [sp, #8]
 8015af8:	9d02      	ldr	r5, [sp, #8]
 8015afa:	9c00      	ldr	r4, [sp, #0]
 8015afc:	f8bd 1030 	ldrh.w	r1, [sp, #48]	@ 0x30
 8015b00:	fb05 3414 	mls	r4, r5, r4, r3
 8015b04:	fb14 f402 	smulbb	r4, r4, r2
 8015b08:	440c      	add	r4, r1
 8015b0a:	b2a4      	uxth	r4, r4
 8015b0c:	2d00      	cmp	r5, #0
 8015b0e:	d06c      	beq.n	8015bea <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x16e>
 8015b10:	1e6a      	subs	r2, r5, #1
 8015b12:	9806      	ldr	r0, [sp, #24]
 8015b14:	f850 6022 	ldr.w	r6, [r0, r2, lsl #2]
 8015b18:	9a07      	ldr	r2, [sp, #28]
 8015b1a:	ba36      	rev	r6, r6
 8015b1c:	4416      	add	r6, r2
 8015b1e:	f8bd 2028 	ldrh.w	r2, [sp, #40]	@ 0x28
 8015b22:	f9bd 5036 	ldrsh.w	r5, [sp, #54]	@ 0x36
 8015b26:	f8df 9334 	ldr.w	r9, [pc, #820]	@ 8015e5c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3e0>
 8015b2a:	4411      	add	r1, r2
 8015b2c:	f8bd 202a 	ldrh.w	r2, [sp, #42]	@ 0x2a
 8015b30:	f8ad 1030 	strh.w	r1, [sp, #48]	@ 0x30
 8015b34:	4413      	add	r3, r2
 8015b36:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 8015b3a:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
 8015b3e:	9301      	str	r3, [sp, #4]
 8015b40:	4bc4      	ldr	r3, [pc, #784]	@ (8015e54 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3d8>)
 8015b42:	6818      	ldr	r0, [r3, #0]
 8015b44:	6803      	ldr	r3, [r0, #0]
 8015b46:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8015b48:	4798      	blx	r3
 8015b4a:	4bc3      	ldr	r3, [pc, #780]	@ (8015e58 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3dc>)
 8015b4c:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	@ 0x30
 8015b50:	881b      	ldrh	r3, [r3, #0]
 8015b52:	f9bd 8032 	ldrsh.w	r8, [sp, #50]	@ 0x32
 8015b56:	fb03 2808 	mla	r8, r3, r8, r2
 8015b5a:	eb00 0848 	add.w	r8, r0, r8, lsl #1
 8015b5e:	436b      	muls	r3, r5
 8015b60:	eb08 0343 	add.w	r3, r8, r3, lsl #1
 8015b64:	9309      	str	r3, [sp, #36]	@ 0x24
 8015b66:	2500      	movs	r5, #0
 8015b68:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 8015b6c:	fb94 f3f3 	sdiv	r3, r4, r3
 8015b70:	9304      	str	r3, [sp, #16]
 8015b72:	f10a 0304 	add.w	r3, sl, #4
 8015b76:	f44f 7280 	mov.w	r2, #256	@ 0x100
 8015b7a:	4629      	mov	r1, r5
 8015b7c:	4618      	mov	r0, r3
 8015b7e:	9308      	str	r3, [sp, #32]
 8015b80:	f00d fa07 	bl	8022f92 <memset>
 8015b84:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8015b86:	4543      	cmp	r3, r8
 8015b88:	f240 8236 	bls.w	8015ff8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x57c>
 8015b8c:	2203      	movs	r2, #3
 8015b8e:	2107      	movs	r1, #7
 8015b90:	200b      	movs	r0, #11
 8015b92:	2c00      	cmp	r4, #0
 8015b94:	f000 8131 	beq.w	8015dfa <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x37e>
 8015b98:	7833      	ldrb	r3, [r6, #0]
 8015b9a:	b2db      	uxtb	r3, r3
 8015b9c:	2bfe      	cmp	r3, #254	@ 0xfe
 8015b9e:	d126      	bne.n	8015bee <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x172>
 8015ba0:	f896 e001 	ldrb.w	lr, [r6, #1]
 8015ba4:	f896 c002 	ldrb.w	ip, [r6, #2]
 8015ba8:	f896 b003 	ldrb.w	fp, [r6, #3]
 8015bac:	fa5f fe8e 	uxtb.w	lr, lr
 8015bb0:	fa5f fc8c 	uxtb.w	ip, ip
 8015bb4:	f36e 0507 	bfi	r5, lr, #0, #8
 8015bb8:	f36c 250f 	bfi	r5, ip, #8, #8
 8015bbc:	fa5f fb8b 	uxtb.w	fp, fp
 8015bc0:	eb0c 0c8c 	add.w	ip, ip, ip, lsl #2
 8015bc4:	f36b 4517 	bfi	r5, fp, #16, #8
 8015bc8:	fb12 cc0b 	smlabb	ip, r2, fp, ip
 8015bcc:	0e2b      	lsrs	r3, r5, #24
 8015bce:	fb11 cc0e 	smlabb	ip, r1, lr, ip
 8015bd2:	fb10 c303 	smlabb	r3, r0, r3, ip
 8015bd6:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 8015bda:	eb0a 0383 	add.w	r3, sl, r3, lsl #2
 8015bde:	3c01      	subs	r4, #1
 8015be0:	1d37      	adds	r7, r6, #4
 8015be2:	b2a4      	uxth	r4, r4
 8015be4:	605d      	str	r5, [r3, #4]
 8015be6:	463e      	mov	r6, r7
 8015be8:	e7d3      	b.n	8015b92 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x116>
 8015bea:	9e07      	ldr	r6, [sp, #28]
 8015bec:	e797      	b.n	8015b1e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0xa2>
 8015bee:	2bff      	cmp	r3, #255	@ 0xff
 8015bf0:	d127      	bne.n	8015c42 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x1c6>
 8015bf2:	f896 c001 	ldrb.w	ip, [r6, #1]
 8015bf6:	78b3      	ldrb	r3, [r6, #2]
 8015bf8:	f896 e003 	ldrb.w	lr, [r6, #3]
 8015bfc:	f896 b004 	ldrb.w	fp, [r6, #4]
 8015c00:	fa5f fc8c 	uxtb.w	ip, ip
 8015c04:	b2db      	uxtb	r3, r3
 8015c06:	f36c 0507 	bfi	r5, ip, #0, #8
 8015c0a:	f363 250f 	bfi	r5, r3, #8, #8
 8015c0e:	fa5f fe8e 	uxtb.w	lr, lr
 8015c12:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 8015c16:	fb12 330e 	smlabb	r3, r2, lr, r3
 8015c1a:	fa5f fb8b 	uxtb.w	fp, fp
 8015c1e:	f36e 4517 	bfi	r5, lr, #16, #8
 8015c22:	fb11 330c 	smlabb	r3, r1, ip, r3
 8015c26:	f36b 651f 	bfi	r5, fp, #24, #8
 8015c2a:	fb10 3b0b 	smlabb	fp, r0, fp, r3
 8015c2e:	f00b 0b3f 	and.w	fp, fp, #63	@ 0x3f
 8015c32:	eb0a 0b8b 	add.w	fp, sl, fp, lsl #2
 8015c36:	3c01      	subs	r4, #1
 8015c38:	1d77      	adds	r7, r6, #5
 8015c3a:	b2a4      	uxth	r4, r4
 8015c3c:	f8cb 5004 	str.w	r5, [fp, #4]
 8015c40:	e7d1      	b.n	8015be6 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x16a>
 8015c42:	ea5f 1ca3 	movs.w	ip, r3, asr #6
 8015c46:	f106 0701 	add.w	r7, r6, #1
 8015c4a:	d107      	bne.n	8015c5c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x1e0>
 8015c4c:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 8015c50:	eb0a 0383 	add.w	r3, sl, r3, lsl #2
 8015c54:	685d      	ldr	r5, [r3, #4]
 8015c56:	3c01      	subs	r4, #1
 8015c58:	b2a4      	uxth	r4, r4
 8015c5a:	e7c4      	b.n	8015be6 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x16a>
 8015c5c:	f1bc 0f01 	cmp.w	ip, #1
 8015c60:	d12c      	bne.n	8015cbc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x240>
 8015c62:	f003 0e03 	and.w	lr, r3, #3
 8015c66:	f1ae 0e02 	sub.w	lr, lr, #2
 8015c6a:	eb05 0ece 	add.w	lr, r5, lr, lsl #3
 8015c6e:	fa5f fe8e 	uxtb.w	lr, lr
 8015c72:	f003 0c0c 	and.w	ip, r3, #12
 8015c76:	f36e 0507 	bfi	r5, lr, #0, #8
 8015c7a:	f1ac 0c08 	sub.w	ip, ip, #8
 8015c7e:	eb0c 2c15 	add.w	ip, ip, r5, lsr #8
 8015c82:	f00c 0cff 	and.w	ip, ip, #255	@ 0xff
 8015c86:	f36c 250f 	bfi	r5, ip, #8, #8
 8015c8a:	f3c3 1301 	ubfx	r3, r3, #4, #2
 8015c8e:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8015c92:	3b02      	subs	r3, #2
 8015c94:	eb06 03c3 	add.w	r3, r6, r3, lsl #3
 8015c98:	b2db      	uxtb	r3, r3
 8015c9a:	eb0c 0c8c 	add.w	ip, ip, ip, lsl #2
 8015c9e:	f363 4517 	bfi	r5, r3, #16, #8
 8015ca2:	fb12 cc03 	smlabb	ip, r2, r3, ip
 8015ca6:	0e2e      	lsrs	r6, r5, #24
 8015ca8:	fb11 cc0e 	smlabb	ip, r1, lr, ip
 8015cac:	fb10 c606 	smlabb	r6, r0, r6, ip
 8015cb0:	f006 063f 	and.w	r6, r6, #63	@ 0x3f
 8015cb4:	eb0a 0686 	add.w	r6, sl, r6, lsl #2
 8015cb8:	6075      	str	r5, [r6, #4]
 8015cba:	e7cc      	b.n	8015c56 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x1da>
 8015cbc:	f1bc 0f02 	cmp.w	ip, #2
 8015cc0:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 8015cc4:	d12a      	bne.n	8015d1c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2a0>
 8015cc6:	1cb7      	adds	r7, r6, #2
 8015cc8:	7876      	ldrb	r6, [r6, #1]
 8015cca:	b2f6      	uxtb	r6, r6
 8015ccc:	f006 0c0f 	and.w	ip, r6, #15
 8015cd0:	3b20      	subs	r3, #32
 8015cd2:	f1ac 0c08 	sub.w	ip, ip, #8
 8015cd6:	449c      	add	ip, r3
 8015cd8:	eb05 0ccc 	add.w	ip, r5, ip, lsl #3
 8015cdc:	fa5f fc8c 	uxtb.w	ip, ip
 8015ce0:	f36c 0507 	bfi	r5, ip, #0, #8
 8015ce4:	f3c5 2e07 	ubfx	lr, r5, #8, #8
 8015ce8:	eb0e 0e83 	add.w	lr, lr, r3, lsl #2
 8015cec:	fa5f fe8e 	uxtb.w	lr, lr
 8015cf0:	1136      	asrs	r6, r6, #4
 8015cf2:	f36e 250f 	bfi	r5, lr, #8, #8
 8015cf6:	3e08      	subs	r6, #8
 8015cf8:	4433      	add	r3, r6
 8015cfa:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8015cfe:	eb06 03c3 	add.w	r3, r6, r3, lsl #3
 8015d02:	b2db      	uxtb	r3, r3
 8015d04:	eb0e 0e8e 	add.w	lr, lr, lr, lsl #2
 8015d08:	f363 4517 	bfi	r5, r3, #16, #8
 8015d0c:	fb12 ee03 	smlabb	lr, r2, r3, lr
 8015d10:	0e2e      	lsrs	r6, r5, #24
 8015d12:	fb11 ee0c 	smlabb	lr, r1, ip, lr
 8015d16:	fb10 e606 	smlabb	r6, r0, r6, lr
 8015d1a:	e7c9      	b.n	8015cb0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x234>
 8015d1c:	1c5e      	adds	r6, r3, #1
 8015d1e:	42a6      	cmp	r6, r4
 8015d20:	dd4e      	ble.n	8015dc0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x344>
 8015d22:	1b36      	subs	r6, r6, r4
 8015d24:	2e00      	cmp	r6, #0
 8015d26:	dc4e      	bgt.n	8015dc6 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x34a>
 8015d28:	f8dd b004 	ldr.w	fp, [sp, #4]
 8015d2c:	2400      	movs	r4, #0
 8015d2e:	f1bb 0f00 	cmp.w	fp, #0
 8015d32:	f340 8122 	ble.w	8015f7a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4fe>
 8015d36:	1c7b      	adds	r3, r7, #1
 8015d38:	9303      	str	r3, [sp, #12]
 8015d3a:	783b      	ldrb	r3, [r7, #0]
 8015d3c:	b2db      	uxtb	r3, r3
 8015d3e:	2bfe      	cmp	r3, #254	@ 0xfe
 8015d40:	d160      	bne.n	8015e04 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x388>
 8015d42:	7879      	ldrb	r1, [r7, #1]
 8015d44:	78ba      	ldrb	r2, [r7, #2]
 8015d46:	78f8      	ldrb	r0, [r7, #3]
 8015d48:	b2c9      	uxtb	r1, r1
 8015d4a:	f361 0507 	bfi	r5, r1, #0, #8
 8015d4e:	b2d2      	uxtb	r2, r2
 8015d50:	1d3b      	adds	r3, r7, #4
 8015d52:	f362 250f 	bfi	r5, r2, #8, #8
 8015d56:	b2c0      	uxtb	r0, r0
 8015d58:	9303      	str	r3, [sp, #12]
 8015d5a:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 8015d5e:	2303      	movs	r3, #3
 8015d60:	fb13 2200 	smlabb	r2, r3, r0, r2
 8015d64:	f360 4517 	bfi	r5, r0, #16, #8
 8015d68:	2307      	movs	r3, #7
 8015d6a:	fb13 2101 	smlabb	r1, r3, r1, r2
 8015d6e:	0e2e      	lsrs	r6, r5, #24
 8015d70:	230b      	movs	r3, #11
 8015d72:	fb13 1306 	smlabb	r3, r3, r6, r1
 8015d76:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 8015d7a:	eb0a 0383 	add.w	r3, sl, r3, lsl #2
 8015d7e:	605d      	str	r5, [r3, #4]
 8015d80:	2601      	movs	r6, #1
 8015d82:	4637      	mov	r7, r6
 8015d84:	0e2b      	lsrs	r3, r5, #24
 8015d86:	ebab 0b07 	sub.w	fp, fp, r7
 8015d8a:	eba6 0607 	sub.w	r6, r6, r7
 8015d8e:	f040 80d3 	bne.w	8015f38 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4bc>
 8015d92:	b18c      	cbz	r4, 8015db8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x33c>
 8015d94:	4648      	mov	r0, r9
 8015d96:	00a1      	lsls	r1, r4, #2
 8015d98:	f7eb f8da 	bl	8000f50 <_ZN8touchgfx5paint9flushLineEPmi>
 8015d9c:	9b05      	ldr	r3, [sp, #20]
 8015d9e:	4622      	mov	r2, r4
 8015da0:	4649      	mov	r1, r9
 8015da2:	4640      	mov	r0, r8
 8015da4:	f7eb f922 	bl	8000fec <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh>
 8015da8:	4b2c      	ldr	r3, [pc, #176]	@ (8015e5c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3e0>)
 8015daa:	4a2d      	ldr	r2, [pc, #180]	@ (8015e60 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3e4>)
 8015dac:	4599      	cmp	r9, r3
 8015dae:	bf08      	it	eq
 8015db0:	4613      	moveq	r3, r2
 8015db2:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 8015db6:	4699      	mov	r9, r3
 8015db8:	eb08 0847 	add.w	r8, r8, r7, lsl #1
 8015dbc:	2400      	movs	r4, #0
 8015dbe:	e0da      	b.n	8015f76 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4fa>
 8015dc0:	1ba6      	subs	r6, r4, r6
 8015dc2:	b2b4      	uxth	r4, r6
 8015dc4:	e70f      	b.n	8015be6 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x16a>
 8015dc6:	9b01      	ldr	r3, [sp, #4]
 8015dc8:	9a01      	ldr	r2, [sp, #4]
 8015dca:	42b3      	cmp	r3, r6
 8015dcc:	bfa8      	it	ge
 8015dce:	4633      	movge	r3, r6
 8015dd0:	0e2c      	lsrs	r4, r5, #24
 8015dd2:	eba2 0b03 	sub.w	fp, r2, r3
 8015dd6:	eba6 0603 	sub.w	r6, r6, r3
 8015dda:	d00b      	beq.n	8015df4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x378>
 8015ddc:	f1a9 0104 	sub.w	r1, r9, #4
 8015de0:	461a      	mov	r2, r3
 8015de2:	2a00      	cmp	r2, #0
 8015de4:	dc02      	bgt.n	8015dec <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x370>
 8015de6:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8015dea:	e7a0      	b.n	8015d2e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2b2>
 8015dec:	f841 5f04 	str.w	r5, [r1, #4]!
 8015df0:	3a01      	subs	r2, #1
 8015df2:	e7f6      	b.n	8015de2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x366>
 8015df4:	eb08 0843 	add.w	r8, r8, r3, lsl #1
 8015df8:	e799      	b.n	8015d2e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2b2>
 8015dfa:	4637      	mov	r7, r6
 8015dfc:	f8dd b004 	ldr.w	fp, [sp, #4]
 8015e00:	4626      	mov	r6, r4
 8015e02:	e794      	b.n	8015d2e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2b2>
 8015e04:	2bff      	cmp	r3, #255	@ 0xff
 8015e06:	d11d      	bne.n	8015e44 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3c8>
 8015e08:	7878      	ldrb	r0, [r7, #1]
 8015e0a:	78ba      	ldrb	r2, [r7, #2]
 8015e0c:	78fe      	ldrb	r6, [r7, #3]
 8015e0e:	1d7b      	adds	r3, r7, #5
 8015e10:	b2c0      	uxtb	r0, r0
 8015e12:	9303      	str	r3, [sp, #12]
 8015e14:	793b      	ldrb	r3, [r7, #4]
 8015e16:	f360 0507 	bfi	r5, r0, #0, #8
 8015e1a:	b2d2      	uxtb	r2, r2
 8015e1c:	b2d9      	uxtb	r1, r3
 8015e1e:	f362 250f 	bfi	r5, r2, #8, #8
 8015e22:	b2f6      	uxtb	r6, r6
 8015e24:	2303      	movs	r3, #3
 8015e26:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 8015e2a:	fb13 2206 	smlabb	r2, r3, r6, r2
 8015e2e:	2307      	movs	r3, #7
 8015e30:	fb13 2000 	smlabb	r0, r3, r0, r2
 8015e34:	f366 4517 	bfi	r5, r6, #16, #8
 8015e38:	230b      	movs	r3, #11
 8015e3a:	f361 651f 	bfi	r5, r1, #24, #8
 8015e3e:	fb13 0301 	smlabb	r3, r3, r1, r0
 8015e42:	e798      	b.n	8015d76 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2fa>
 8015e44:	119e      	asrs	r6, r3, #6
 8015e46:	d10d      	bne.n	8015e64 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3e8>
 8015e48:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 8015e4c:	eb0a 0383 	add.w	r3, sl, r3, lsl #2
 8015e50:	685d      	ldr	r5, [r3, #4]
 8015e52:	e795      	b.n	8015d80 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x304>
 8015e54:	20014044 	.word	0x20014044
 8015e58:	2001403c 	.word	0x2001403c
 8015e5c:	20000280 	.word	0x20000280
 8015e60:	20000380 	.word	0x20000380
 8015e64:	2e01      	cmp	r6, #1
 8015e66:	ea4f 6115 	mov.w	r1, r5, lsr #24
 8015e6a:	d12b      	bne.n	8015ec4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x448>
 8015e6c:	f003 0003 	and.w	r0, r3, #3
 8015e70:	3802      	subs	r0, #2
 8015e72:	eb05 00c0 	add.w	r0, r5, r0, lsl #3
 8015e76:	b2c0      	uxtb	r0, r0
 8015e78:	f003 020c 	and.w	r2, r3, #12
 8015e7c:	f360 0507 	bfi	r5, r0, #0, #8
 8015e80:	3a08      	subs	r2, #8
 8015e82:	eb02 2215 	add.w	r2, r2, r5, lsr #8
 8015e86:	f002 02ff 	and.w	r2, r2, #255	@ 0xff
 8015e8a:	f362 250f 	bfi	r5, r2, #8, #8
 8015e8e:	f3c3 1301 	ubfx	r3, r3, #4, #2
 8015e92:	1e9f      	subs	r7, r3, #2
 8015e94:	f3c5 4307 	ubfx	r3, r5, #16, #8
 8015e98:	eb03 03c7 	add.w	r3, r3, r7, lsl #3
 8015e9c:	b2db      	uxtb	r3, r3
 8015e9e:	2703      	movs	r7, #3
 8015ea0:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 8015ea4:	fb17 2203 	smlabb	r2, r7, r3, r2
 8015ea8:	2707      	movs	r7, #7
 8015eaa:	f363 4517 	bfi	r5, r3, #16, #8
 8015eae:	fb17 2000 	smlabb	r0, r7, r0, r2
 8015eb2:	230b      	movs	r3, #11
 8015eb4:	fb13 0101 	smlabb	r1, r3, r1, r0
 8015eb8:	f001 013f 	and.w	r1, r1, #63	@ 0x3f
 8015ebc:	eb0a 0181 	add.w	r1, sl, r1, lsl #2
 8015ec0:	604d      	str	r5, [r1, #4]
 8015ec2:	e75e      	b.n	8015d82 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x306>
 8015ec4:	2e02      	cmp	r6, #2
 8015ec6:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 8015eca:	d12f      	bne.n	8015f2c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4b0>
 8015ecc:	7878      	ldrb	r0, [r7, #1]
 8015ece:	1cba      	adds	r2, r7, #2
 8015ed0:	b2c0      	uxtb	r0, r0
 8015ed2:	9203      	str	r2, [sp, #12]
 8015ed4:	f000 020f 	and.w	r2, r0, #15
 8015ed8:	3b20      	subs	r3, #32
 8015eda:	3a08      	subs	r2, #8
 8015edc:	441a      	add	r2, r3
 8015ede:	eb05 02c2 	add.w	r2, r5, r2, lsl #3
 8015ee2:	b2d2      	uxtb	r2, r2
 8015ee4:	f362 0507 	bfi	r5, r2, #0, #8
 8015ee8:	f3c5 2607 	ubfx	r6, r5, #8, #8
 8015eec:	eb06 0683 	add.w	r6, r6, r3, lsl #2
 8015ef0:	b2f6      	uxtb	r6, r6
 8015ef2:	1100      	asrs	r0, r0, #4
 8015ef4:	f366 250f 	bfi	r5, r6, #8, #8
 8015ef8:	3808      	subs	r0, #8
 8015efa:	4403      	add	r3, r0
 8015efc:	f3c5 4007 	ubfx	r0, r5, #16, #8
 8015f00:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 8015f04:	b2db      	uxtb	r3, r3
 8015f06:	2003      	movs	r0, #3
 8015f08:	eb06 0686 	add.w	r6, r6, r6, lsl #2
 8015f0c:	fb10 6603 	smlabb	r6, r0, r3, r6
 8015f10:	2007      	movs	r0, #7
 8015f12:	f363 4517 	bfi	r5, r3, #16, #8
 8015f16:	fb10 6202 	smlabb	r2, r0, r2, r6
 8015f1a:	230b      	movs	r3, #11
 8015f1c:	fb13 2101 	smlabb	r1, r3, r1, r2
 8015f20:	f001 013f 	and.w	r1, r1, #63	@ 0x3f
 8015f24:	eb0a 0181 	add.w	r1, sl, r1, lsl #2
 8015f28:	604d      	str	r5, [r1, #4]
 8015f2a:	e729      	b.n	8015d80 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x304>
 8015f2c:	1c5e      	adds	r6, r3, #1
 8015f2e:	45b3      	cmp	fp, r6
 8015f30:	465f      	mov	r7, fp
 8015f32:	bfa8      	it	ge
 8015f34:	4637      	movge	r7, r6
 8015f36:	e725      	b.n	8015d84 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x308>
 8015f38:	193b      	adds	r3, r7, r4
 8015f3a:	2b40      	cmp	r3, #64	@ 0x40
 8015f3c:	dd13      	ble.n	8015f66 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4ea>
 8015f3e:	4648      	mov	r0, r9
 8015f40:	00a1      	lsls	r1, r4, #2
 8015f42:	f7eb f805 	bl	8000f50 <_ZN8touchgfx5paint9flushLineEPmi>
 8015f46:	4649      	mov	r1, r9
 8015f48:	9b05      	ldr	r3, [sp, #20]
 8015f4a:	4622      	mov	r2, r4
 8015f4c:	4640      	mov	r0, r8
 8015f4e:	f7eb f84d 	bl	8000fec <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh>
 8015f52:	4b2d      	ldr	r3, [pc, #180]	@ (8016008 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x58c>)
 8015f54:	4599      	cmp	r9, r3
 8015f56:	bf0c      	ite	eq
 8015f58:	f8df 90b8 	ldreq.w	r9, [pc, #184]	@ 8016014 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x598>
 8015f5c:	f8df 90a8 	ldrne.w	r9, [pc, #168]	@ 8016008 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x58c>
 8015f60:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 8015f64:	2400      	movs	r4, #0
 8015f66:	eb09 0284 	add.w	r2, r9, r4, lsl #2
 8015f6a:	463b      	mov	r3, r7
 8015f6c:	3b01      	subs	r3, #1
 8015f6e:	f842 5b04 	str.w	r5, [r2], #4
 8015f72:	d1fb      	bne.n	8015f6c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4f0>
 8015f74:	443c      	add	r4, r7
 8015f76:	9f03      	ldr	r7, [sp, #12]
 8015f78:	e6d9      	b.n	8015d2e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2b2>
 8015f7a:	b15c      	cbz	r4, 8015f94 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x518>
 8015f7c:	00a1      	lsls	r1, r4, #2
 8015f7e:	4648      	mov	r0, r9
 8015f80:	f7ea ffe6 	bl	8000f50 <_ZN8touchgfx5paint9flushLineEPmi>
 8015f84:	4640      	mov	r0, r8
 8015f86:	9b05      	ldr	r3, [sp, #20]
 8015f88:	4622      	mov	r2, r4
 8015f8a:	4649      	mov	r1, r9
 8015f8c:	f7eb f82e 	bl	8000fec <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh>
 8015f90:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 8015f94:	4b1d      	ldr	r3, [pc, #116]	@ (801600c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x590>)
 8015f96:	9a01      	ldr	r2, [sp, #4]
 8015f98:	881b      	ldrh	r3, [r3, #0]
 8015f9a:	1a9b      	subs	r3, r3, r2
 8015f9c:	eb08 0843 	add.w	r8, r8, r3, lsl #1
 8015fa0:	9b04      	ldr	r3, [sp, #16]
 8015fa2:	3301      	adds	r3, #1
 8015fa4:	9304      	str	r3, [sp, #16]
 8015fa6:	9a04      	ldr	r2, [sp, #16]
 8015fa8:	9b00      	ldr	r3, [sp, #0]
 8015faa:	4293      	cmp	r3, r2
 8015fac:	d11d      	bne.n	8015fea <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x56e>
 8015fae:	9b02      	ldr	r3, [sp, #8]
 8015fb0:	9a02      	ldr	r2, [sp, #8]
 8015fb2:	f8bd 4030 	ldrh.w	r4, [sp, #48]	@ 0x30
 8015fb6:	f8bd 6028 	ldrh.w	r6, [sp, #40]	@ 0x28
 8015fba:	9808      	ldr	r0, [sp, #32]
 8015fbc:	f103 0b01 	add.w	fp, r3, #1
 8015fc0:	9b06      	ldr	r3, [sp, #24]
 8015fc2:	f853 7022 	ldr.w	r7, [r3, r2, lsl #2]
 8015fc6:	9b07      	ldr	r3, [sp, #28]
 8015fc8:	2500      	movs	r5, #0
 8015fca:	ba3f      	rev	r7, r7
 8015fcc:	1ba4      	subs	r4, r4, r6
 8015fce:	f44f 7280 	mov.w	r2, #256	@ 0x100
 8015fd2:	4629      	mov	r1, r5
 8015fd4:	441f      	add	r7, r3
 8015fd6:	b2a4      	uxth	r4, r4
 8015fd8:	f00c ffdb 	bl	8022f92 <memset>
 8015fdc:	f8cd b008 	str.w	fp, [sp, #8]
 8015fe0:	9504      	str	r5, [sp, #16]
 8015fe2:	f7ea ffab 	bl	8000f3c <_ZN8touchgfx5paint8tearDownEv>
 8015fe6:	463e      	mov	r6, r7
 8015fe8:	e5cc      	b.n	8015b84 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x108>
 8015fea:	f8bd 402c 	ldrh.w	r4, [sp, #44]	@ 0x2c
 8015fee:	9b01      	ldr	r3, [sp, #4]
 8015ff0:	1ae4      	subs	r4, r4, r3
 8015ff2:	1ba4      	subs	r4, r4, r6
 8015ff4:	b2a4      	uxth	r4, r4
 8015ff6:	e7f4      	b.n	8015fe2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x566>
 8015ff8:	4b05      	ldr	r3, [pc, #20]	@ (8016010 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x594>)
 8015ffa:	6818      	ldr	r0, [r3, #0]
 8015ffc:	6803      	ldr	r3, [r0, #0]
 8015ffe:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8016000:	4798      	blx	r3
 8016002:	b00f      	add	sp, #60	@ 0x3c
 8016004:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016008:	20000280 	.word	0x20000280
 801600c:	2001403c 	.word	0x2001403c
 8016010:	20014044 	.word	0x20014044
 8016014:	20000380 	.word	0x20000380

08016018 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 8016018:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801601c:	b08f      	sub	sp, #60	@ 0x3c
 801601e:	461c      	mov	r4, r3
 8016020:	9205      	str	r2, [sp, #20]
 8016022:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 8016026:	9100      	str	r1, [sp, #0]
 8016028:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801602a:	9201      	str	r2, [sp, #4]
 801602c:	2a00      	cmp	r2, #0
 801602e:	f000 8115 	beq.w	801625c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x244>
 8016032:	6820      	ldr	r0, [r4, #0]
 8016034:	6861      	ldr	r1, [r4, #4]
 8016036:	aa0a      	add	r2, sp, #40	@ 0x28
 8016038:	c203      	stmia	r2!, {r0, r1}
 801603a:	6818      	ldr	r0, [r3, #0]
 801603c:	6859      	ldr	r1, [r3, #4]
 801603e:	aa0c      	add	r2, sp, #48	@ 0x30
 8016040:	c203      	stmia	r2!, {r0, r1}
 8016042:	a80a      	add	r0, sp, #40	@ 0x28
 8016044:	f7f9 fa34 	bl	800f4b0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8016048:	4621      	mov	r1, r4
 801604a:	a80c      	add	r0, sp, #48	@ 0x30
 801604c:	f7f9 fa58 	bl	800f500 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8016050:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	@ 0x2c
 8016054:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	@ 0x2e
 8016058:	f8bd 0030 	ldrh.w	r0, [sp, #48]	@ 0x30
 801605c:	f5b6 6f80 	cmp.w	r6, #1024	@ 0x400
 8016060:	bfde      	ittt	le
 8016062:	b2b3      	uxthle	r3, r6
 8016064:	f44f 6280 	movle.w	r2, #1024	@ 0x400
 8016068:	fb92 f3f3 	sdivle	r3, r2, r3
 801606c:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
 8016070:	bfc8      	it	gt
 8016072:	2301      	movgt	r3, #1
 8016074:	fb92 f1f3 	sdiv	r1, r2, r3
 8016078:	fa1f fc81 	uxth.w	ip, r1
 801607c:	fb0c 2413 	mls	r4, ip, r3, r2
 8016080:	fb14 f406 	smulbb	r4, r4, r6
 8016084:	441d      	add	r5, r3
 8016086:	4404      	add	r4, r0
 8016088:	4661      	mov	r1, ip
 801608a:	3d01      	subs	r5, #1
 801608c:	b2a4      	uxth	r4, r4
 801608e:	fb95 f5f3 	sdiv	r5, r5, r3
 8016092:	b131      	cbz	r1, 80160a2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x8a>
 8016094:	9b05      	ldr	r3, [sp, #20]
 8016096:	9900      	ldr	r1, [sp, #0]
 8016098:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 801609c:	ba1b      	rev	r3, r3
 801609e:	4419      	add	r1, r3
 80160a0:	9100      	str	r1, [sp, #0]
 80160a2:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 80160a6:	f9bd 8034 	ldrsh.w	r8, [sp, #52]	@ 0x34
 80160aa:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	@ 0x36
 80160ae:	4418      	add	r0, r3
 80160b0:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 80160b4:	f8ad 0030 	strh.w	r0, [sp, #48]	@ 0x30
 80160b8:	441a      	add	r2, r3
 80160ba:	4b6a      	ldr	r3, [pc, #424]	@ (8016264 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
 80160bc:	f8ad 2032 	strh.w	r2, [sp, #50]	@ 0x32
 80160c0:	6818      	ldr	r0, [r3, #0]
 80160c2:	6803      	ldr	r3, [r0, #0]
 80160c4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80160c6:	4798      	blx	r3
 80160c8:	4967      	ldr	r1, [pc, #412]	@ (8016268 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x250>)
 80160ca:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
 80160ce:	880b      	ldrh	r3, [r1, #0]
 80160d0:	f9bd c030 	ldrsh.w	ip, [sp, #48]	@ 0x30
 80160d4:	9109      	str	r1, [sp, #36]	@ 0x24
 80160d6:	fb03 c202 	mla	r2, r3, r2, ip
 80160da:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 80160de:	4373      	muls	r3, r6
 80160e0:	b2ad      	uxth	r5, r5
 80160e2:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 80160e6:	00ad      	lsls	r5, r5, #2
 80160e8:	9306      	str	r3, [sp, #24]
 80160ea:	1d2b      	adds	r3, r5, #4
 80160ec:	9307      	str	r3, [sp, #28]
 80160ee:	9b01      	ldr	r3, [sp, #4]
 80160f0:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 80160f4:	9103      	str	r1, [sp, #12]
 80160f6:	f1c3 02ff 	rsb	r2, r3, #255	@ 0xff
 80160fa:	2c00      	cmp	r4, #0
 80160fc:	bf0c      	ite	eq
 80160fe:	46c6      	moveq	lr, r8
 8016100:	f04f 0e00 	movne.w	lr, #0
 8016104:	2300      	movs	r3, #0
 8016106:	b292      	uxth	r2, r2
 8016108:	fa1f fe8e 	uxth.w	lr, lr
 801610c:	9302      	str	r3, [sp, #8]
 801610e:	9204      	str	r2, [sp, #16]
 8016110:	9a06      	ldr	r2, [sp, #24]
 8016112:	4282      	cmp	r2, r0
 8016114:	f240 809d 	bls.w	8016252 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x23a>
 8016118:	b963      	cbnz	r3, 8016134 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11c>
 801611a:	9b00      	ldr	r3, [sp, #0]
 801611c:	781a      	ldrb	r2, [r3, #0]
 801611e:	0993      	lsrs	r3, r2, #6
 8016120:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 8016124:	9202      	str	r2, [sp, #8]
 8016126:	1e5a      	subs	r2, r3, #1
 8016128:	2a02      	cmp	r2, #2
 801612a:	d815      	bhi.n	8016158 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x140>
 801612c:	9a00      	ldr	r2, [sp, #0]
 801612e:	3201      	adds	r2, #1
 8016130:	9200      	str	r2, [sp, #0]
 8016132:	b29b      	uxth	r3, r3
 8016134:	b1b4      	cbz	r4, 8016164 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x14c>
 8016136:	429c      	cmp	r4, r3
 8016138:	bf95      	itete	ls
 801613a:	1b1c      	subls	r4, r3, r4
 801613c:	1ae4      	subhi	r4, r4, r3
 801613e:	fa1f fa84 	uxthls.w	sl, r4
 8016142:	b2a4      	uxthhi	r4, r4
 8016144:	bf87      	ittee	hi
 8016146:	4671      	movhi	r1, lr
 8016148:	f04f 0a00 	movhi.w	sl, #0
 801614c:	fa1f f188 	uxthls.w	r1, r8
 8016150:	2400      	movls	r4, #0
 8016152:	4653      	mov	r3, sl
 8016154:	468e      	mov	lr, r1
 8016156:	e7db      	b.n	8016110 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xf8>
 8016158:	9a00      	ldr	r2, [sp, #0]
 801615a:	9b00      	ldr	r3, [sp, #0]
 801615c:	3202      	adds	r2, #2
 801615e:	785b      	ldrb	r3, [r3, #1]
 8016160:	9200      	str	r2, [sp, #0]
 8016162:	e7e7      	b.n	8016134 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11c>
 8016164:	2202      	movs	r2, #2
 8016166:	4615      	mov	r5, r2
 8016168:	9907      	ldr	r1, [sp, #28]
 801616a:	9a02      	ldr	r2, [sp, #8]
 801616c:	fb15 1202 	smlabb	r2, r5, r2, r1
 8016170:	9905      	ldr	r1, [sp, #20]
 8016172:	4573      	cmp	r3, lr
 8016174:	f831 c002 	ldrh.w	ip, [r1, r2]
 8016178:	9a01      	ldr	r2, [sp, #4]
 801617a:	bf2b      	itete	cs
 801617c:	eba3 0a0e 	subcs.w	sl, r3, lr
 8016180:	ebae 0103 	subcc.w	r1, lr, r3
 8016184:	46f1      	movcs	r9, lr
 8016186:	4699      	movcc	r9, r3
 8016188:	bf27      	ittee	cs
 801618a:	fa1f fa8a 	uxthcs.w	sl, sl
 801618e:	4621      	movcs	r1, r4
 8016190:	b289      	uxthcc	r1, r1
 8016192:	46a2      	movcc	sl, r4
 8016194:	2aff      	cmp	r2, #255	@ 0xff
 8016196:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801619a:	d105      	bne.n	80161a8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x190>
 801619c:	4481      	add	r9, r0
 801619e:	4581      	cmp	r9, r0
 80161a0:	d045      	beq.n	801622e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x216>
 80161a2:	f820 cb02 	strh.w	ip, [r0], #2
 80161a6:	e7fa      	b.n	801619e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x186>
 80161a8:	9d03      	ldr	r5, [sp, #12]
 80161aa:	ea4f 222c 	mov.w	r2, ip, asr #8
 80161ae:	ea4f 0bec 	mov.w	fp, ip, asr #3
 80161b2:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 80161b6:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80161ba:	436a      	muls	r2, r5
 80161bc:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
 80161c0:	fa5f fc8c 	uxtb.w	ip, ip
 80161c4:	9208      	str	r2, [sp, #32]
 80161c6:	fb0b fb05 	mul.w	fp, fp, r5
 80161ca:	fb0c fc05 	mul.w	ip, ip, r5
 80161ce:	4481      	add	r9, r0
 80161d0:	4581      	cmp	r9, r0
 80161d2:	d02c      	beq.n	801622e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x216>
 80161d4:	8802      	ldrh	r2, [r0, #0]
 80161d6:	9d04      	ldr	r5, [sp, #16]
 80161d8:	9f04      	ldr	r7, [sp, #16]
 80161da:	1216      	asrs	r6, r2, #8
 80161dc:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 80161e0:	fb16 f605 	smulbb	r6, r6, r5
 80161e4:	9d08      	ldr	r5, [sp, #32]
 80161e6:	442e      	add	r6, r5
 80161e8:	10d5      	asrs	r5, r2, #3
 80161ea:	00d2      	lsls	r2, r2, #3
 80161ec:	b2d2      	uxtb	r2, r2
 80161ee:	fb12 f207 	smulbb	r2, r2, r7
 80161f2:	b2b6      	uxth	r6, r6
 80161f4:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 80161f8:	4462      	add	r2, ip
 80161fa:	fb15 f507 	smulbb	r5, r5, r7
 80161fe:	b292      	uxth	r2, r2
 8016200:	1c77      	adds	r7, r6, #1
 8016202:	eb07 2616 	add.w	r6, r7, r6, lsr #8
 8016206:	1c57      	adds	r7, r2, #1
 8016208:	445d      	add	r5, fp
 801620a:	eb07 2212 	add.w	r2, r7, r2, lsr #8
 801620e:	b2ad      	uxth	r5, r5
 8016210:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8016214:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
 8016218:	4316      	orrs	r6, r2
 801621a:	1c6a      	adds	r2, r5, #1
 801621c:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 8016220:	096d      	lsrs	r5, r5, #5
 8016222:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8016226:	432e      	orrs	r6, r5
 8016228:	f820 6b02 	strh.w	r6, [r0], #2
 801622c:	e7d0      	b.n	80161d0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1b8>
 801622e:	4573      	cmp	r3, lr
 8016230:	d38f      	bcc.n	8016152 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13a>
 8016232:	f8bd 402c 	ldrh.w	r4, [sp, #44]	@ 0x2c
 8016236:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8016238:	fa1f f188 	uxth.w	r1, r8
 801623c:	1a64      	subs	r4, r4, r1
 801623e:	881b      	ldrh	r3, [r3, #0]
 8016240:	b2a4      	uxth	r4, r4
 8016242:	2c00      	cmp	r4, #0
 8016244:	eba3 0308 	sub.w	r3, r3, r8
 8016248:	bf18      	it	ne
 801624a:	2100      	movne	r1, #0
 801624c:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8016250:	e77f      	b.n	8016152 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13a>
 8016252:	4b04      	ldr	r3, [pc, #16]	@ (8016264 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
 8016254:	6818      	ldr	r0, [r3, #0]
 8016256:	6803      	ldr	r3, [r0, #0]
 8016258:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 801625a:	4798      	blx	r3
 801625c:	b00f      	add	sp, #60	@ 0x3c
 801625e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016262:	bf00      	nop
 8016264:	20014044 	.word	0x20014044
 8016268:	2001403c 	.word	0x2001403c

0801626c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 801626c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016270:	b09f      	sub	sp, #124	@ 0x7c
 8016272:	e9cd 1213 	strd	r1, r2, [sp, #76]	@ 0x4c
 8016276:	f89d 20a4 	ldrb.w	r2, [sp, #164]	@ 0xa4
 801627a:	9209      	str	r2, [sp, #36]	@ 0x24
 801627c:	461d      	mov	r5, r3
 801627e:	4604      	mov	r4, r0
 8016280:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8016282:	2a00      	cmp	r2, #0
 8016284:	f000 81eb 	beq.w	801665e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3f2>
 8016288:	6828      	ldr	r0, [r5, #0]
 801628a:	6869      	ldr	r1, [r5, #4]
 801628c:	aa1a      	add	r2, sp, #104	@ 0x68
 801628e:	c203      	stmia	r2!, {r0, r1}
 8016290:	6818      	ldr	r0, [r3, #0]
 8016292:	6859      	ldr	r1, [r3, #4]
 8016294:	aa1c      	add	r2, sp, #112	@ 0x70
 8016296:	c203      	stmia	r2!, {r0, r1}
 8016298:	a81a      	add	r0, sp, #104	@ 0x68
 801629a:	f7f9 f909 	bl	800f4b0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801629e:	4629      	mov	r1, r5
 80162a0:	a81c      	add	r0, sp, #112	@ 0x70
 80162a2:	f7f9 f92d 	bl	800f500 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80162a6:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	@ 0x6c
 80162aa:	f9bd 806e 	ldrsh.w	r8, [sp, #110]	@ 0x6e
 80162ae:	f9bd 6076 	ldrsh.w	r6, [sp, #118]	@ 0x76
 80162b2:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 80162b6:	bfd7      	itett	le
 80162b8:	b29a      	uxthle	r2, r3
 80162ba:	2201      	movgt	r2, #1
 80162bc:	f44f 6180 	movle.w	r1, #1024	@ 0x400
 80162c0:	fb91 f2f2 	sdivle	r2, r1, r2
 80162c4:	9202      	str	r2, [sp, #8]
 80162c6:	9802      	ldr	r0, [sp, #8]
 80162c8:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	@ 0x72
 80162cc:	fb92 f0f0 	sdiv	r0, r2, r0
 80162d0:	b280      	uxth	r0, r0
 80162d2:	9010      	str	r0, [sp, #64]	@ 0x40
 80162d4:	9902      	ldr	r1, [sp, #8]
 80162d6:	9802      	ldr	r0, [sp, #8]
 80162d8:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 80162da:	4488      	add	r8, r1
 80162dc:	fb05 2510 	mls	r5, r5, r0, r2
 80162e0:	fb15 f503 	smulbb	r5, r5, r3
 80162e4:	f108 38ff 	add.w	r8, r8, #4294967295
 80162e8:	f8bd 3068 	ldrh.w	r3, [sp, #104]	@ 0x68
 80162ec:	fb98 f8f1 	sdiv	r8, r8, r1
 80162f0:	f8bd 1070 	ldrh.w	r1, [sp, #112]	@ 0x70
 80162f4:	440d      	add	r5, r1
 80162f6:	4419      	add	r1, r3
 80162f8:	f8bd 306a 	ldrh.w	r3, [sp, #106]	@ 0x6a
 80162fc:	f8ad 1070 	strh.w	r1, [sp, #112]	@ 0x70
 8016300:	441a      	add	r2, r3
 8016302:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	@ 0x74
 8016306:	9304      	str	r3, [sp, #16]
 8016308:	4b95      	ldr	r3, [pc, #596]	@ (8016560 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2f4>)
 801630a:	f8ad 2072 	strh.w	r2, [sp, #114]	@ 0x72
 801630e:	6818      	ldr	r0, [r3, #0]
 8016310:	6803      	ldr	r3, [r0, #0]
 8016312:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8016314:	4798      	blx	r3
 8016316:	4b93      	ldr	r3, [pc, #588]	@ (8016564 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2f8>)
 8016318:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	@ 0x72
 801631c:	881a      	ldrh	r2, [r3, #0]
 801631e:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	@ 0x70
 8016322:	9318      	str	r3, [sp, #96]	@ 0x60
 8016324:	fb02 7101 	mla	r1, r2, r1, r7
 8016328:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801632c:	4356      	muls	r6, r2
 801632e:	eb00 0246 	add.w	r2, r0, r6, lsl #1
 8016332:	f108 0801 	add.w	r8, r8, #1
 8016336:	920a      	str	r2, [sp, #40]	@ 0x28
 8016338:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801633a:	f8bd 3024 	ldrh.w	r3, [sp, #36]	@ 0x24
 801633e:	930f      	str	r3, [sp, #60]	@ 0x3c
 8016340:	fa1f f888 	uxth.w	r8, r8
 8016344:	eb02 0888 	add.w	r8, r2, r8, lsl #2
 8016348:	f108 0204 	add.w	r2, r8, #4
 801634c:	9211      	str	r2, [sp, #68]	@ 0x44
 801634e:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8016350:	4b85      	ldr	r3, [pc, #532]	@ (8016568 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2fc>)
 8016352:	f1c2 02ff 	rsb	r2, r2, #255	@ 0xff
 8016356:	b2ad      	uxth	r5, r5
 8016358:	9215      	str	r2, [sp, #84]	@ 0x54
 801635a:	2d00      	cmp	r5, #0
 801635c:	9a04      	ldr	r2, [sp, #16]
 801635e:	f04f 0100 	mov.w	r1, #0
 8016362:	bf18      	it	ne
 8016364:	2200      	movne	r2, #0
 8016366:	1b1b      	subs	r3, r3, r4
 8016368:	b292      	uxth	r2, r2
 801636a:	910d      	str	r1, [sp, #52]	@ 0x34
 801636c:	9319      	str	r3, [sp, #100]	@ 0x64
 801636e:	9910      	ldr	r1, [sp, #64]	@ 0x40
 8016370:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8016372:	fa11 f383 	uxtah	r3, r1, r3
 8016376:	9914      	ldr	r1, [sp, #80]	@ 0x50
 8016378:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 801637c:	3304      	adds	r3, #4
 801637e:	9306      	str	r3, [sp, #24]
 8016380:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8016382:	4283      	cmp	r3, r0
 8016384:	f240 8166 	bls.w	8016654 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3e8>
 8016388:	9902      	ldr	r1, [sp, #8]
 801638a:	f8bd 306c 	ldrh.w	r3, [sp, #108]	@ 0x6c
 801638e:	fbb5 f3f3 	udiv	r3, r5, r3
 8016392:	1acb      	subs	r3, r1, r3
 8016394:	b29b      	uxth	r3, r3
 8016396:	9316      	str	r3, [sp, #88]	@ 0x58
 8016398:	9b06      	ldr	r3, [sp, #24]
 801639a:	9e06      	ldr	r6, [sp, #24]
 801639c:	7859      	ldrb	r1, [r3, #1]
 801639e:	789b      	ldrb	r3, [r3, #2]
 80163a0:	7836      	ldrb	r6, [r6, #0]
 80163a2:	9612      	str	r6, [sp, #72]	@ 0x48
 80163a4:	021b      	lsls	r3, r3, #8
 80163a6:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 80163aa:	9906      	ldr	r1, [sp, #24]
 80163ac:	78c9      	ldrb	r1, [r1, #3]
 80163ae:	430b      	orrs	r3, r1
 80163b0:	9913      	ldr	r1, [sp, #76]	@ 0x4c
 80163b2:	3601      	adds	r6, #1
 80163b4:	4419      	add	r1, r3
 80163b6:	9605      	str	r6, [sp, #20]
 80163b8:	1c4e      	adds	r6, r1, #1
 80163ba:	9603      	str	r6, [sp, #12]
 80163bc:	7849      	ldrb	r1, [r1, #1]
 80163be:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 80163c0:	0209      	lsls	r1, r1, #8
 80163c2:	5cf3      	ldrb	r3, [r6, r3]
 80163c4:	f401 71ff 	and.w	r1, r1, #510	@ 0x1fe
 80163c8:	4319      	orrs	r1, r3
 80163ca:	b28b      	uxth	r3, r1
 80163cc:	930c      	str	r3, [sp, #48]	@ 0x30
 80163ce:	2300      	movs	r3, #0
 80163d0:	f04f 0a01 	mov.w	sl, #1
 80163d4:	9307      	str	r3, [sp, #28]
 80163d6:	469c      	mov	ip, r3
 80163d8:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
 80163dc:	f884 1804 	strb.w	r1, [r4, #2052]	@ 0x804
 80163e0:	46d3      	mov	fp, sl
 80163e2:	4657      	mov	r7, sl
 80163e4:	930e      	str	r3, [sp, #56]	@ 0x38
 80163e6:	2d00      	cmp	r5, #0
 80163e8:	d07e      	beq.n	80164e8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x27c>
 80163ea:	42af      	cmp	r7, r5
 80163ec:	d26e      	bcs.n	80164cc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x260>
 80163ee:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80163f0:	9201      	str	r2, [sp, #4]
 80163f2:	1bed      	subs	r5, r5, r7
 80163f4:	4283      	cmp	r3, r0
 80163f6:	b2ad      	uxth	r5, r5
 80163f8:	d802      	bhi.n	8016400 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x194>
 80163fa:	e073      	b.n	80164e4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x278>
 80163fc:	2b00      	cmp	r3, #0
 80163fe:	d15f      	bne.n	80164c0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x254>
 8016400:	9b03      	ldr	r3, [sp, #12]
 8016402:	785b      	ldrb	r3, [r3, #1]
 8016404:	f1cb 0207 	rsb	r2, fp, #7
 8016408:	4093      	lsls	r3, r2
 801640a:	005b      	lsls	r3, r3, #1
 801640c:	f403 72ff 	and.w	r2, r3, #510	@ 0x1fe
 8016410:	9b03      	ldr	r3, [sp, #12]
 8016412:	781b      	ldrb	r3, [r3, #0]
 8016414:	fa43 f30b 	asr.w	r3, r3, fp
 8016418:	b2db      	uxtb	r3, r3
 801641a:	4313      	orrs	r3, r2
 801641c:	f10b 0201 	add.w	r2, fp, #1
 8016420:	fa5f fb82 	uxtb.w	fp, r2
 8016424:	9a03      	ldr	r2, [sp, #12]
 8016426:	f1bb 0f08 	cmp.w	fp, #8
 801642a:	bf15      	itete	ne
 801642c:	3201      	addne	r2, #1
 801642e:	3202      	addeq	r2, #2
 8016430:	9203      	strne	r2, [sp, #12]
 8016432:	9203      	streq	r2, [sp, #12]
 8016434:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8016436:	b29f      	uxth	r7, r3
 8016438:	bf08      	it	eq
 801643a:	f04f 0b00 	moveq.w	fp, #0
 801643e:	42ba      	cmp	r2, r7
 8016440:	d309      	bcc.n	8016456 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1ea>
 8016442:	f884 3804 	strb.w	r3, [r4, #2052]	@ 0x804
 8016446:	2301      	movs	r3, #1
 8016448:	9a05      	ldr	r2, [sp, #20]
 801644a:	f5b2 7f00 	cmp.w	r2, #512	@ 0x200
 801644e:	d30e      	bcc.n	801646e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x202>
 8016450:	469a      	mov	sl, r3
 8016452:	2600      	movs	r6, #0
 8016454:	e035      	b.n	80164c2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x256>
 8016456:	9b05      	ldr	r3, [sp, #20]
 8016458:	429f      	cmp	r7, r3
 801645a:	d318      	bcc.n	801648e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x222>
 801645c:	eb04 030a 	add.w	r3, r4, sl
 8016460:	f894 2804 	ldrb.w	r2, [r4, #2052]	@ 0x804
 8016464:	f883 2804 	strb.w	r2, [r3, #2052]	@ 0x804
 8016468:	f10a 0301 	add.w	r3, sl, #1
 801646c:	b29b      	uxth	r3, r3
 801646e:	9a05      	ldr	r2, [sp, #20]
 8016470:	f894 6804 	ldrb.w	r6, [r4, #2052]	@ 0x804
 8016474:	990c      	ldr	r1, [sp, #48]	@ 0x30
 8016476:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 801647a:	7116      	strb	r6, [r2, #4]
 801647c:	f10a 0601 	add.w	r6, sl, #1
 8016480:	80d1      	strh	r1, [r2, #6]
 8016482:	7156      	strb	r6, [r2, #5]
 8016484:	9a05      	ldr	r2, [sp, #20]
 8016486:	3201      	adds	r2, #1
 8016488:	b292      	uxth	r2, r2
 801648a:	9205      	str	r2, [sp, #20]
 801648c:	e7e0      	b.n	8016450 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e4>
 801648e:	eb04 0387 	add.w	r3, r4, r7, lsl #2
 8016492:	463a      	mov	r2, r7
 8016494:	795b      	ldrb	r3, [r3, #5]
 8016496:	f603 0604 	addw	r6, r3, #2052	@ 0x804
 801649a:	4426      	add	r6, r4
 801649c:	9919      	ldr	r1, [sp, #100]	@ 0x64
 801649e:	eb01 0c06 	add.w	ip, r1, r6
 80164a2:	f1bc 0f00 	cmp.w	ip, #0
 80164a6:	dd07      	ble.n	80164b8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>
 80164a8:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 80164ac:	f892 c004 	ldrb.w	ip, [r2, #4]
 80164b0:	f806 cd01 	strb.w	ip, [r6, #-1]!
 80164b4:	88d2      	ldrh	r2, [r2, #6]
 80164b6:	e7f1      	b.n	801649c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x230>
 80164b8:	f884 2804 	strb.w	r2, [r4, #2052]	@ 0x804
 80164bc:	b29b      	uxth	r3, r3
 80164be:	e7c3      	b.n	8016448 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1dc>
 80164c0:	9f0c      	ldr	r7, [sp, #48]	@ 0x30
 80164c2:	970c      	str	r7, [sp, #48]	@ 0x30
 80164c4:	9a01      	ldr	r2, [sp, #4]
 80164c6:	46b4      	mov	ip, r6
 80164c8:	461f      	mov	r7, r3
 80164ca:	e78c      	b.n	80163e6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x17a>
 80164cc:	1b7b      	subs	r3, r7, r5
 80164ce:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 80164d2:	9201      	str	r2, [sp, #4]
 80164d4:	eb0c 0605 	add.w	r6, ip, r5
 80164d8:	b29b      	uxth	r3, r3
 80164da:	b2b6      	uxth	r6, r6
 80164dc:	2500      	movs	r5, #0
 80164de:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 80164e0:	4282      	cmp	r2, r0
 80164e2:	d88b      	bhi.n	80163fc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x190>
 80164e4:	9a01      	ldr	r2, [sp, #4]
 80164e6:	e74b      	b.n	8016380 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x114>
 80164e8:	4297      	cmp	r7, r2
 80164ea:	d332      	bcc.n	8016552 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2e6>
 80164ec:	1abb      	subs	r3, r7, r2
 80164ee:	b29b      	uxth	r3, r3
 80164f0:	9208      	str	r2, [sp, #32]
 80164f2:	9501      	str	r5, [sp, #4]
 80164f4:	9909      	ldr	r1, [sp, #36]	@ 0x24
 80164f6:	29ff      	cmp	r1, #255	@ 0xff
 80164f8:	9908      	ldr	r1, [sp, #32]
 80164fa:	eb0c 0601 	add.w	r6, ip, r1
 80164fe:	d135      	bne.n	801656c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x300>
 8016500:	f1a0 0e02 	sub.w	lr, r0, #2
 8016504:	b2b6      	uxth	r6, r6
 8016506:	45b4      	cmp	ip, r6
 8016508:	f040 808c 	bne.w	8016624 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3b8>
 801650c:	9908      	ldr	r1, [sp, #32]
 801650e:	4297      	cmp	r7, r2
 8016510:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 8016514:	d3e2      	bcc.n	80164dc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x270>
 8016516:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 8016518:	9904      	ldr	r1, [sp, #16]
 801651a:	8812      	ldrh	r2, [r2, #0]
 801651c:	1a52      	subs	r2, r2, r1
 801651e:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8016522:	9a07      	ldr	r2, [sp, #28]
 8016524:	9916      	ldr	r1, [sp, #88]	@ 0x58
 8016526:	3201      	adds	r2, #1
 8016528:	428a      	cmp	r2, r1
 801652a:	9207      	str	r2, [sp, #28]
 801652c:	f040 8087 	bne.w	801663e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3d2>
 8016530:	f8bd 5070 	ldrh.w	r5, [sp, #112]	@ 0x70
 8016534:	f8bd 7068 	ldrh.w	r7, [sp, #104]	@ 0x68
 8016538:	9b04      	ldr	r3, [sp, #16]
 801653a:	1bed      	subs	r5, r5, r7
 801653c:	b2ad      	uxth	r5, r5
 801653e:	2d00      	cmp	r5, #0
 8016540:	bf08      	it	eq
 8016542:	461a      	moveq	r2, r3
 8016544:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8016546:	bf18      	it	ne
 8016548:	2200      	movne	r2, #0
 801654a:	3301      	adds	r3, #1
 801654c:	930d      	str	r3, [sp, #52]	@ 0x34
 801654e:	b292      	uxth	r2, r2
 8016550:	e70d      	b.n	801636e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x102>
 8016552:	1bd1      	subs	r1, r2, r7
 8016554:	b28b      	uxth	r3, r1
 8016556:	9301      	str	r3, [sp, #4]
 8016558:	9708      	str	r7, [sp, #32]
 801655a:	462b      	mov	r3, r5
 801655c:	e7ca      	b.n	80164f4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x288>
 801655e:	bf00      	nop
 8016560:	20014044 	.word	0x20014044
 8016564:	2001403c 	.word	0x2001403c
 8016568:	fffff7fb 	.word	0xfffff7fb
 801656c:	b2b6      	uxth	r6, r6
 801656e:	900b      	str	r0, [sp, #44]	@ 0x2c
 8016570:	45b4      	cmp	ip, r6
 8016572:	d0cb      	beq.n	801650c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2a0>
 8016574:	f10c 0101 	add.w	r1, ip, #1
 8016578:	44a4      	add	ip, r4
 801657a:	9117      	str	r1, [sp, #92]	@ 0x5c
 801657c:	f89c 5804 	ldrb.w	r5, [ip, #2052]	@ 0x804
 8016580:	9911      	ldr	r1, [sp, #68]	@ 0x44
 8016582:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
 8016586:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8016588:	f8b1 c000 	ldrh.w	ip, [r1]
 801658c:	990e      	ldr	r1, [sp, #56]	@ 0x38
 801658e:	ea4f 2e2c 	mov.w	lr, ip, asr #8
 8016592:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
 8016596:	fb1e fe01 	smulbb	lr, lr, r1
 801659a:	ea4f 2825 	mov.w	r8, r5, asr #8
 801659e:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 80165a0:	f008 08f8 	and.w	r8, r8, #248	@ 0xf8
 80165a4:	fb08 e801 	mla	r8, r8, r1, lr
 80165a8:	ea4f 09ec 	mov.w	r9, ip, asr #3
 80165ac:	990e      	ldr	r1, [sp, #56]	@ 0x38
 80165ae:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
 80165b2:	fb19 f901 	smulbb	r9, r9, r1
 80165b6:	ea4f 0ee5 	mov.w	lr, r5, asr #3
 80165ba:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 80165bc:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
 80165c0:	fb0e 9e01 	mla	lr, lr, r1, r9
 80165c4:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80165c8:	990e      	ldr	r1, [sp, #56]	@ 0x38
 80165ca:	fa5f fc8c 	uxtb.w	ip, ip
 80165ce:	fb1c fc01 	smulbb	ip, ip, r1
 80165d2:	00ed      	lsls	r5, r5, #3
 80165d4:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 80165d6:	b2ed      	uxtb	r5, r5
 80165d8:	fb05 c501 	mla	r5, r5, r1, ip
 80165dc:	fa1f f888 	uxth.w	r8, r8
 80165e0:	fa1f fe8e 	uxth.w	lr, lr
 80165e4:	b2ad      	uxth	r5, r5
 80165e6:	f108 0c01 	add.w	ip, r8, #1
 80165ea:	eb0c 2818 	add.w	r8, ip, r8, lsr #8
 80165ee:	f10e 0901 	add.w	r9, lr, #1
 80165f2:	f105 0c01 	add.w	ip, r5, #1
 80165f6:	eb0c 2c15 	add.w	ip, ip, r5, lsr #8
 80165fa:	eb09 291e 	add.w	r9, r9, lr, lsr #8
 80165fe:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8016602:	f408 4878 	and.w	r8, r8, #63488	@ 0xf800
 8016606:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801660a:	ea4c 0808 	orr.w	r8, ip, r8
 801660e:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8016610:	f8bd c05c 	ldrh.w	ip, [sp, #92]	@ 0x5c
 8016614:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 8016618:	ea48 0809 	orr.w	r8, r8, r9
 801661c:	f821 8b02 	strh.w	r8, [r1], #2
 8016620:	910b      	str	r1, [sp, #44]	@ 0x2c
 8016622:	e7a5      	b.n	8016570 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x304>
 8016624:	f10c 0801 	add.w	r8, ip, #1
 8016628:	44a4      	add	ip, r4
 801662a:	9911      	ldr	r1, [sp, #68]	@ 0x44
 801662c:	f89c 5804 	ldrb.w	r5, [ip, #2052]	@ 0x804
 8016630:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
 8016634:	f82e 5f02 	strh.w	r5, [lr, #2]!
 8016638:	fa1f fc88 	uxth.w	ip, r8
 801663c:	e763      	b.n	8016506 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x29a>
 801663e:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8016642:	f8bd 506c 	ldrh.w	r5, [sp, #108]	@ 0x6c
 8016646:	1aad      	subs	r5, r5, r2
 8016648:	b2ad      	uxth	r5, r5
 801664a:	2d00      	cmp	r5, #0
 801664c:	bf18      	it	ne
 801664e:	2200      	movne	r2, #0
 8016650:	9201      	str	r2, [sp, #4]
 8016652:	e744      	b.n	80164de <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x272>
 8016654:	4b03      	ldr	r3, [pc, #12]	@ (8016664 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3f8>)
 8016656:	6818      	ldr	r0, [r3, #0]
 8016658:	6803      	ldr	r3, [r0, #0]
 801665a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 801665c:	4798      	blx	r3
 801665e:	b01f      	add	sp, #124	@ 0x7c
 8016660:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016664:	20014044 	.word	0x20014044

08016668 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h>:
 8016668:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801666c:	b093      	sub	sp, #76	@ 0x4c
 801666e:	4616      	mov	r6, r2
 8016670:	f89d 2070 	ldrb.w	r2, [sp, #112]	@ 0x70
 8016674:	9003      	str	r0, [sp, #12]
 8016676:	460d      	mov	r5, r1
 8016678:	9201      	str	r2, [sp, #4]
 801667a:	2a00      	cmp	r2, #0
 801667c:	f000 8304 	beq.w	8016c88 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x620>
 8016680:	6830      	ldr	r0, [r6, #0]
 8016682:	6871      	ldr	r1, [r6, #4]
 8016684:	ac0e      	add	r4, sp, #56	@ 0x38
 8016686:	c403      	stmia	r4!, {r0, r1}
 8016688:	6818      	ldr	r0, [r3, #0]
 801668a:	6859      	ldr	r1, [r3, #4]
 801668c:	ac10      	add	r4, sp, #64	@ 0x40
 801668e:	c403      	stmia	r4!, {r0, r1}
 8016690:	a80e      	add	r0, sp, #56	@ 0x38
 8016692:	f7f8 ff0d 	bl	800f4b0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8016696:	4631      	mov	r1, r6
 8016698:	a810      	add	r0, sp, #64	@ 0x40
 801669a:	f7f8 ff31 	bl	800f500 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801669e:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	@ 0x3c
 80166a2:	f5b2 6f80 	cmp.w	r2, #1024	@ 0x400
 80166a6:	bfd7      	itett	le
 80166a8:	b293      	uxthle	r3, r2
 80166aa:	2301      	movgt	r3, #1
 80166ac:	f44f 6180 	movle.w	r1, #1024	@ 0x400
 80166b0:	fb91 f3f3 	sdivle	r3, r1, r3
 80166b4:	9304      	str	r3, [sp, #16]
 80166b6:	f105 0308 	add.w	r3, r5, #8
 80166ba:	9904      	ldr	r1, [sp, #16]
 80166bc:	9308      	str	r3, [sp, #32]
 80166be:	f9bd 303e 	ldrsh.w	r3, [sp, #62]	@ 0x3e
 80166c2:	440b      	add	r3, r1
 80166c4:	3b01      	subs	r3, #1
 80166c6:	fb93 f3f1 	sdiv	r3, r3, r1
 80166ca:	9908      	ldr	r1, [sp, #32]
 80166cc:	3b01      	subs	r3, #1
 80166ce:	b29b      	uxth	r3, r3
 80166d0:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 80166d4:	9309      	str	r3, [sp, #36]	@ 0x24
 80166d6:	9904      	ldr	r1, [sp, #16]
 80166d8:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	@ 0x42
 80166dc:	fb93 f0f1 	sdiv	r0, r3, r1
 80166e0:	b284      	uxth	r4, r0
 80166e2:	9405      	str	r4, [sp, #20]
 80166e4:	e9dd 4504 	ldrd	r4, r5, [sp, #16]
 80166e8:	f8bd 1040 	ldrh.w	r1, [sp, #64]	@ 0x40
 80166ec:	fb05 3914 	mls	r9, r5, r4, r3
 80166f0:	fb19 f902 	smulbb	r9, r9, r2
 80166f4:	4489      	add	r9, r1
 80166f6:	fa1f f989 	uxth.w	r9, r9
 80166fa:	2d00      	cmp	r5, #0
 80166fc:	d05d      	beq.n	80167ba <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x152>
 80166fe:	1e6a      	subs	r2, r5, #1
 8016700:	9808      	ldr	r0, [sp, #32]
 8016702:	f850 a022 	ldr.w	sl, [r0, r2, lsl #2]
 8016706:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8016708:	fa9a fa8a 	rev.w	sl, sl
 801670c:	4492      	add	sl, r2
 801670e:	f8bd 2038 	ldrh.w	r2, [sp, #56]	@ 0x38
 8016712:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	@ 0x46
 8016716:	4411      	add	r1, r2
 8016718:	f8bd 203a 	ldrh.w	r2, [sp, #58]	@ 0x3a
 801671c:	f8ad 1040 	strh.w	r1, [sp, #64]	@ 0x40
 8016720:	4413      	add	r3, r2
 8016722:	f8ad 3042 	strh.w	r3, [sp, #66]	@ 0x42
 8016726:	f9bd 3044 	ldrsh.w	r3, [sp, #68]	@ 0x44
 801672a:	9302      	str	r3, [sp, #8]
 801672c:	4bcb      	ldr	r3, [pc, #812]	@ (8016a5c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3f4>)
 801672e:	6818      	ldr	r0, [r3, #0]
 8016730:	6803      	ldr	r3, [r0, #0]
 8016732:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8016734:	4798      	blx	r3
 8016736:	4bca      	ldr	r3, [pc, #808]	@ (8016a60 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3f8>)
 8016738:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	@ 0x40
 801673c:	881b      	ldrh	r3, [r3, #0]
 801673e:	f9bd 4042 	ldrsh.w	r4, [sp, #66]	@ 0x42
 8016742:	fb03 2404 	mla	r4, r3, r4, r2
 8016746:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801674a:	436b      	muls	r3, r5
 801674c:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8016750:	930d      	str	r3, [sp, #52]	@ 0x34
 8016752:	f9bd 303c 	ldrsh.w	r3, [sp, #60]	@ 0x3c
 8016756:	fb99 f3f3 	sdiv	r3, r9, r3
 801675a:	9306      	str	r3, [sp, #24]
 801675c:	9b01      	ldr	r3, [sp, #4]
 801675e:	43db      	mvns	r3, r3
 8016760:	b2db      	uxtb	r3, r3
 8016762:	930a      	str	r3, [sp, #40]	@ 0x28
 8016764:	9b03      	ldr	r3, [sp, #12]
 8016766:	3304      	adds	r3, #4
 8016768:	4618      	mov	r0, r3
 801676a:	2280      	movs	r2, #128	@ 0x80
 801676c:	2100      	movs	r1, #0
 801676e:	930b      	str	r3, [sp, #44]	@ 0x2c
 8016770:	f00c fc0f 	bl	8022f92 <memset>
 8016774:	4bbb      	ldr	r3, [pc, #748]	@ (8016a64 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3fc>)
 8016776:	9300      	str	r3, [sp, #0]
 8016778:	2300      	movs	r3, #0
 801677a:	f04f 0600 	mov.w	r6, #0
 801677e:	9307      	str	r3, [sp, #28]
 8016780:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8016782:	42a3      	cmp	r3, r4
 8016784:	f240 827b 	bls.w	8016c7e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x616>
 8016788:	f04f 0e07 	mov.w	lr, #7
 801678c:	f1b9 0f00 	cmp.w	r9, #0
 8016790:	f000 8159 	beq.w	8016a46 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3de>
 8016794:	f89a 5000 	ldrb.w	r5, [sl]
 8016798:	b2ed      	uxtb	r5, r5
 801679a:	11aa      	asrs	r2, r5, #6
 801679c:	f10a 0701 	add.w	r7, sl, #1
 80167a0:	d10e      	bne.n	80167c0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x158>
 80167a2:	9b03      	ldr	r3, [sp, #12]
 80167a4:	f005 053f 	and.w	r5, r5, #63	@ 0x3f
 80167a8:	eb03 0545 	add.w	r5, r3, r5, lsl #1
 80167ac:	88ae      	ldrh	r6, [r5, #4]
 80167ae:	f109 39ff 	add.w	r9, r9, #4294967295
 80167b2:	fa1f f989 	uxth.w	r9, r9
 80167b6:	46ba      	mov	sl, r7
 80167b8:	e7e8      	b.n	801678c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x124>
 80167ba:	f8dd a024 	ldr.w	sl, [sp, #36]	@ 0x24
 80167be:	e7a6      	b.n	801670e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0xa6>
 80167c0:	2a01      	cmp	r2, #1
 80167c2:	d129      	bne.n	8016818 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x1b0>
 80167c4:	f3c6 0304 	ubfx	r3, r6, #0, #5
 80167c8:	f005 0203 	and.w	r2, r5, #3
 80167cc:	3b02      	subs	r3, #2
 80167ce:	4413      	add	r3, r2
 80167d0:	f003 031f 	and.w	r3, r3, #31
 80167d4:	f3c5 0281 	ubfx	r2, r5, #2, #2
 80167d8:	f363 0604 	bfi	r6, r3, #0, #5
 80167dc:	3a02      	subs	r2, #2
 80167de:	eb02 1256 	add.w	r2, r2, r6, lsr #5
 80167e2:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 80167e6:	f3c5 1501 	ubfx	r5, r5, #4, #2
 80167ea:	f362 164a 	bfi	r6, r2, #5, #6
 80167ee:	3d02      	subs	r5, #2
 80167f0:	eb05 25d6 	add.w	r5, r5, r6, lsr #11
 80167f4:	f005 051f 	and.w	r5, r5, #31
 80167f8:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 80167fc:	2103      	movs	r1, #3
 80167fe:	fb11 2205 	smlabb	r2, r1, r5, r2
 8016802:	fb1e 2303 	smlabb	r3, lr, r3, r2
 8016806:	9a03      	ldr	r2, [sp, #12]
 8016808:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 801680c:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8016810:	f365 26cf 	bfi	r6, r5, #11, #5
 8016814:	809e      	strh	r6, [r3, #4]
 8016816:	e7ca      	b.n	80167ae <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x146>
 8016818:	f005 053f 	and.w	r5, r5, #63	@ 0x3f
 801681c:	2a02      	cmp	r2, #2
 801681e:	b2ab      	uxth	r3, r5
 8016820:	d136      	bne.n	8016890 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x228>
 8016822:	2101      	movs	r1, #1
 8016824:	fb12 1205 	smlabb	r2, r2, r5, r1
 8016828:	4492      	add	sl, r2
 801682a:	463a      	mov	r2, r7
 801682c:	4552      	cmp	r2, sl
 801682e:	d01c      	beq.n	801686a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x202>
 8016830:	4694      	mov	ip, r2
 8016832:	f04f 0b03 	mov.w	fp, #3
 8016836:	f81c 1b02 	ldrb.w	r1, [ip], #2
 801683a:	7852      	ldrb	r2, [r2, #1]
 801683c:	ea41 2102 	orr.w	r1, r1, r2, lsl #8
 8016840:	f3c1 1045 	ubfx	r0, r1, #5, #6
 8016844:	ea4f 28d1 	mov.w	r8, r1, lsr #11
 8016848:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 801684c:	f001 021f 	and.w	r2, r1, #31
 8016850:	fb1b 0008 	smlabb	r0, fp, r8, r0
 8016854:	fb1e 0002 	smlabb	r0, lr, r2, r0
 8016858:	9a03      	ldr	r2, [sp, #12]
 801685a:	f000 003f 	and.w	r0, r0, #63	@ 0x3f
 801685e:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 8016862:	460e      	mov	r6, r1
 8016864:	8081      	strh	r1, [r0, #4]
 8016866:	4662      	mov	r2, ip
 8016868:	e7e0      	b.n	801682c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x1c4>
 801686a:	4599      	cmp	r9, r3
 801686c:	d20b      	bcs.n	8016886 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x21e>
 801686e:	eba5 0509 	sub.w	r5, r5, r9
 8016872:	2d00      	cmp	r5, #0
 8016874:	eb07 0749 	add.w	r7, r7, r9, lsl #1
 8016878:	f300 8209 	bgt.w	8016c8e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x626>
 801687c:	f8dd 8008 	ldr.w	r8, [sp, #8]
 8016880:	2301      	movs	r3, #1
 8016882:	9307      	str	r3, [sp, #28]
 8016884:	e00c      	b.n	80168a0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x238>
 8016886:	eb07 0745 	add.w	r7, r7, r5, lsl #1
 801688a:	eba9 0903 	sub.w	r9, r9, r3
 801688e:	e790      	b.n	80167b2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x14a>
 8016890:	4599      	cmp	r9, r3
 8016892:	d2fa      	bcs.n	801688a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x222>
 8016894:	eba5 0509 	sub.w	r5, r5, r9
 8016898:	2d00      	cmp	r5, #0
 801689a:	dc1d      	bgt.n	80168d8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x270>
 801689c:	f8dd 8008 	ldr.w	r8, [sp, #8]
 80168a0:	f04f 0b00 	mov.w	fp, #0
 80168a4:	f1b8 0f00 	cmp.w	r8, #0
 80168a8:	f340 81a1 	ble.w	8016bee <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x586>
 80168ac:	783b      	ldrb	r3, [r7, #0]
 80168ae:	b2db      	uxtb	r3, r3
 80168b0:	119a      	asrs	r2, r3, #6
 80168b2:	f107 0a01 	add.w	sl, r7, #1
 80168b6:	f040 80d7 	bne.w	8016a68 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x400>
 80168ba:	9a03      	ldr	r2, [sp, #12]
 80168bc:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 80168c0:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80168c4:	889e      	ldrh	r6, [r3, #4]
 80168c6:	9b01      	ldr	r3, [sp, #4]
 80168c8:	2bff      	cmp	r3, #255	@ 0xff
 80168ca:	f040 81e9 	bne.w	8016ca0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x638>
 80168ce:	8026      	strh	r6, [r4, #0]
 80168d0:	f108 38ff 	add.w	r8, r8, #4294967295
 80168d4:	3402      	adds	r4, #2
 80168d6:	e0be      	b.n	8016a56 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3ee>
 80168d8:	9b02      	ldr	r3, [sp, #8]
 80168da:	9a02      	ldr	r2, [sp, #8]
 80168dc:	42ab      	cmp	r3, r5
 80168de:	bfa8      	it	ge
 80168e0:	462b      	movge	r3, r5
 80168e2:	eba2 0803 	sub.w	r8, r2, r3
 80168e6:	9a07      	ldr	r2, [sp, #28]
 80168e8:	1aed      	subs	r5, r5, r3
 80168ea:	2a00      	cmp	r2, #0
 80168ec:	d05a      	beq.n	80169a4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x33c>
 80168ee:	9a01      	ldr	r2, [sp, #4]
 80168f0:	2aff      	cmp	r2, #255	@ 0xff
 80168f2:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 80168f6:	d049      	beq.n	801698c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x324>
 80168f8:	f8bd e004 	ldrh.w	lr, [sp, #4]
 80168fc:	f8bd 9028 	ldrh.w	r9, [sp, #40]	@ 0x28
 8016900:	42a3      	cmp	r3, r4
 8016902:	f240 80a5 	bls.w	8016a50 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3e8>
 8016906:	46bc      	mov	ip, r7
 8016908:	8820      	ldrh	r0, [r4, #0]
 801690a:	f81c 2b02 	ldrb.w	r2, [ip], #2
 801690e:	7879      	ldrb	r1, [r7, #1]
 8016910:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 8016914:	b212      	sxth	r2, r2
 8016916:	b291      	uxth	r1, r2
 8016918:	ea4f 2a20 	mov.w	sl, r0, asr #8
 801691c:	120f      	asrs	r7, r1, #8
 801691e:	f00a 0af8 	and.w	sl, sl, #248	@ 0xf8
 8016922:	fb1a fa09 	smulbb	sl, sl, r9
 8016926:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 801692a:	fb07 a70e 	mla	r7, r7, lr, sl
 801692e:	ea4f 0ae0 	mov.w	sl, r0, asr #3
 8016932:	00c0      	lsls	r0, r0, #3
 8016934:	10c9      	asrs	r1, r1, #3
 8016936:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 801693a:	00d2      	lsls	r2, r2, #3
 801693c:	b2c0      	uxtb	r0, r0
 801693e:	fb1a fa09 	smulbb	sl, sl, r9
 8016942:	fb10 f009 	smulbb	r0, r0, r9
 8016946:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 801694a:	b2d2      	uxtb	r2, r2
 801694c:	b2bf      	uxth	r7, r7
 801694e:	fb01 a10e 	mla	r1, r1, lr, sl
 8016952:	fb02 020e 	mla	r2, r2, lr, r0
 8016956:	b289      	uxth	r1, r1
 8016958:	b292      	uxth	r2, r2
 801695a:	1c78      	adds	r0, r7, #1
 801695c:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 8016960:	f101 0a01 	add.w	sl, r1, #1
 8016964:	1c50      	adds	r0, r2, #1
 8016966:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 801696a:	eb0a 2a11 	add.w	sl, sl, r1, lsr #8
 801696e:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 8016972:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8016976:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801697a:	4307      	orrs	r7, r0
 801697c:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8016980:	ea47 070a 	orr.w	r7, r7, sl
 8016984:	f824 7b02 	strh.w	r7, [r4], #2
 8016988:	4667      	mov	r7, ip
 801698a:	e7b9      	b.n	8016900 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x298>
 801698c:	42a3      	cmp	r3, r4
 801698e:	d95f      	bls.n	8016a50 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3e8>
 8016990:	463a      	mov	r2, r7
 8016992:	f812 1b02 	ldrb.w	r1, [r2], #2
 8016996:	7878      	ldrb	r0, [r7, #1]
 8016998:	ea41 2100 	orr.w	r1, r1, r0, lsl #8
 801699c:	f824 1b02 	strh.w	r1, [r4], #2
 80169a0:	4617      	mov	r7, r2
 80169a2:	e7f3      	b.n	801698c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x324>
 80169a4:	9901      	ldr	r1, [sp, #4]
 80169a6:	29ff      	cmp	r1, #255	@ 0xff
 80169a8:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 80169ac:	b2b2      	uxth	r2, r6
 80169ae:	d044      	beq.n	8016a3a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3d2>
 80169b0:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 80169b4:	f8bd a028 	ldrh.w	sl, [sp, #40]	@ 0x28
 80169b8:	ea4f 2922 	mov.w	r9, r2, asr #8
 80169bc:	ea4f 0ee2 	mov.w	lr, r2, asr #3
 80169c0:	f009 09f8 	and.w	r9, r9, #248	@ 0xf8
 80169c4:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
 80169c8:	4608      	mov	r0, r1
 80169ca:	fb09 f901 	mul.w	r9, r9, r1
 80169ce:	fb0e fe01 	mul.w	lr, lr, r1
 80169d2:	00d1      	lsls	r1, r2, #3
 80169d4:	b2c9      	uxtb	r1, r1
 80169d6:	4341      	muls	r1, r0
 80169d8:	429c      	cmp	r4, r3
 80169da:	f4bf af61 	bcs.w	80168a0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x238>
 80169de:	8822      	ldrh	r2, [r4, #0]
 80169e0:	1210      	asrs	r0, r2, #8
 80169e2:	ea4f 0ce2 	mov.w	ip, r2, asr #3
 80169e6:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 80169ea:	00d2      	lsls	r2, r2, #3
 80169ec:	fb00 900a 	mla	r0, r0, sl, r9
 80169f0:	b2d2      	uxtb	r2, r2
 80169f2:	b280      	uxth	r0, r0
 80169f4:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
 80169f8:	fb02 120a 	mla	r2, r2, sl, r1
 80169fc:	b292      	uxth	r2, r2
 80169fe:	f100 0b01 	add.w	fp, r0, #1
 8016a02:	fb0c ec0a 	mla	ip, ip, sl, lr
 8016a06:	fa1f fc8c 	uxth.w	ip, ip
 8016a0a:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
 8016a0e:	1c50      	adds	r0, r2, #1
 8016a10:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 8016a14:	f10c 0201 	add.w	r2, ip, #1
 8016a18:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 8016a1c:	f40b 4b78 	and.w	fp, fp, #63488	@ 0xf800
 8016a20:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8016a24:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8016a28:	ea40 0b0b 	orr.w	fp, r0, fp
 8016a2c:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 8016a30:	ea4b 0b0c 	orr.w	fp, fp, ip
 8016a34:	f824 bb02 	strh.w	fp, [r4], #2
 8016a38:	e7ce      	b.n	80169d8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x370>
 8016a3a:	429c      	cmp	r4, r3
 8016a3c:	f4bf af30 	bcs.w	80168a0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x238>
 8016a40:	f824 2b02 	strh.w	r2, [r4], #2
 8016a44:	e7f9      	b.n	8016a3a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3d2>
 8016a46:	f8dd 8008 	ldr.w	r8, [sp, #8]
 8016a4a:	4657      	mov	r7, sl
 8016a4c:	464d      	mov	r5, r9
 8016a4e:	e727      	b.n	80168a0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x238>
 8016a50:	2300      	movs	r3, #0
 8016a52:	e716      	b.n	8016882 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x21a>
 8016a54:	44bb      	add	fp, r7
 8016a56:	4657      	mov	r7, sl
 8016a58:	e724      	b.n	80168a4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x23c>
 8016a5a:	bf00      	nop
 8016a5c:	20014044 	.word	0x20014044
 8016a60:	2001403c 	.word	0x2001403c
 8016a64:	20000280 	.word	0x20000280
 8016a68:	2a01      	cmp	r2, #1
 8016a6a:	d12a      	bne.n	8016ac2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x45a>
 8016a6c:	f3c6 0104 	ubfx	r1, r6, #0, #5
 8016a70:	f003 0203 	and.w	r2, r3, #3
 8016a74:	3902      	subs	r1, #2
 8016a76:	4411      	add	r1, r2
 8016a78:	f001 011f 	and.w	r1, r1, #31
 8016a7c:	f3c3 0081 	ubfx	r0, r3, #2, #2
 8016a80:	f361 0604 	bfi	r6, r1, #0, #5
 8016a84:	3802      	subs	r0, #2
 8016a86:	eb00 1056 	add.w	r0, r0, r6, lsr #5
 8016a8a:	f000 003f 	and.w	r0, r0, #63	@ 0x3f
 8016a8e:	f3c3 1301 	ubfx	r3, r3, #4, #2
 8016a92:	f360 164a 	bfi	r6, r0, #5, #6
 8016a96:	3b02      	subs	r3, #2
 8016a98:	eb03 22d6 	add.w	r2, r3, r6, lsr #11
 8016a9c:	f002 031f 	and.w	r3, r2, #31
 8016aa0:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 8016aa4:	2203      	movs	r2, #3
 8016aa6:	f363 26cf 	bfi	r6, r3, #11, #5
 8016aaa:	fb12 0303 	smlabb	r3, r2, r3, r0
 8016aae:	2207      	movs	r2, #7
 8016ab0:	fb12 3301 	smlabb	r3, r2, r1, r3
 8016ab4:	9a03      	ldr	r2, [sp, #12]
 8016ab6:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 8016aba:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8016abe:	809e      	strh	r6, [r3, #4]
 8016ac0:	e701      	b.n	80168c6 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x25e>
 8016ac2:	f003 053f 	and.w	r5, r3, #63	@ 0x3f
 8016ac6:	45a8      	cmp	r8, r5
 8016ac8:	4647      	mov	r7, r8
 8016aca:	bfa8      	it	ge
 8016acc:	462f      	movge	r7, r5
 8016ace:	2a02      	cmp	r2, #2
 8016ad0:	d154      	bne.n	8016b7c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x514>
 8016ad2:	9b01      	ldr	r3, [sp, #4]
 8016ad4:	2bff      	cmp	r3, #255	@ 0xff
 8016ad6:	d01a      	beq.n	8016b0e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x4a6>
 8016ad8:	eb0b 0307 	add.w	r3, fp, r7
 8016adc:	2b40      	cmp	r3, #64	@ 0x40
 8016ade:	dd16      	ble.n	8016b0e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x4a6>
 8016ae0:	ea4f 094b 	mov.w	r9, fp, lsl #1
 8016ae4:	4649      	mov	r1, r9
 8016ae6:	9800      	ldr	r0, [sp, #0]
 8016ae8:	f7ea fa32 	bl	8000f50 <_ZN8touchgfx5paint9flushLineEPmi>
 8016aec:	465a      	mov	r2, fp
 8016aee:	9b01      	ldr	r3, [sp, #4]
 8016af0:	9900      	ldr	r1, [sp, #0]
 8016af2:	4620      	mov	r0, r4
 8016af4:	f7ea fa56 	bl	8000fa4 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh>
 8016af8:	9b00      	ldr	r3, [sp, #0]
 8016afa:	461a      	mov	r2, r3
 8016afc:	4b6c      	ldr	r3, [pc, #432]	@ (8016cb0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x648>)
 8016afe:	429a      	cmp	r2, r3
 8016b00:	bf0c      	ite	eq
 8016b02:	4b6c      	ldreq	r3, [pc, #432]	@ (8016cb4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x64c>)
 8016b04:	4b6a      	ldrne	r3, [pc, #424]	@ (8016cb0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x648>)
 8016b06:	9300      	str	r3, [sp, #0]
 8016b08:	444c      	add	r4, r9
 8016b0a:	f04f 0b00 	mov.w	fp, #0
 8016b0e:	4652      	mov	r2, sl
 8016b10:	2100      	movs	r1, #0
 8016b12:	42a9      	cmp	r1, r5
 8016b14:	da2c      	bge.n	8016b70 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x508>
 8016b16:	4694      	mov	ip, r2
 8016b18:	f04f 0903 	mov.w	r9, #3
 8016b1c:	f81c 3b02 	ldrb.w	r3, [ip], #2
 8016b20:	7852      	ldrb	r2, [r2, #1]
 8016b22:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8016b26:	f3c3 1045 	ubfx	r0, r3, #5, #6
 8016b2a:	ea4f 2ed3 	mov.w	lr, r3, lsr #11
 8016b2e:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 8016b32:	f003 021f 	and.w	r2, r3, #31
 8016b36:	fb19 000e 	smlabb	r0, r9, lr, r0
 8016b3a:	f04f 0e07 	mov.w	lr, #7
 8016b3e:	fb1e 0002 	smlabb	r0, lr, r2, r0
 8016b42:	9a03      	ldr	r2, [sp, #12]
 8016b44:	f000 003f 	and.w	r0, r0, #63	@ 0x3f
 8016b48:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 8016b4c:	42b9      	cmp	r1, r7
 8016b4e:	461e      	mov	r6, r3
 8016b50:	8083      	strh	r3, [r0, #4]
 8016b52:	da0a      	bge.n	8016b6a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x502>
 8016b54:	9a01      	ldr	r2, [sp, #4]
 8016b56:	2aff      	cmp	r2, #255	@ 0xff
 8016b58:	bf15      	itete	ne
 8016b5a:	9a00      	ldrne	r2, [sp, #0]
 8016b5c:	8023      	strheq	r3, [r4, #0]
 8016b5e:	f822 301b 	strhne.w	r3, [r2, fp, lsl #1]
 8016b62:	3402      	addeq	r4, #2
 8016b64:	bf18      	it	ne
 8016b66:	f10b 0b01 	addne.w	fp, fp, #1
 8016b6a:	3101      	adds	r1, #1
 8016b6c:	4662      	mov	r2, ip
 8016b6e:	e7d0      	b.n	8016b12 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x4aa>
 8016b70:	eb0a 0a45 	add.w	sl, sl, r5, lsl #1
 8016b74:	eba8 0807 	sub.w	r8, r8, r7
 8016b78:	1bed      	subs	r5, r5, r7
 8016b7a:	e76c      	b.n	8016a56 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3ee>
 8016b7c:	9b01      	ldr	r3, [sp, #4]
 8016b7e:	2bff      	cmp	r3, #255	@ 0xff
 8016b80:	eba8 0807 	sub.w	r8, r8, r7
 8016b84:	eba5 0507 	sub.w	r5, r5, r7
 8016b88:	fa1f f986 	uxth.w	r9, r6
 8016b8c:	d027      	beq.n	8016bde <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x576>
 8016b8e:	eb0b 0307 	add.w	r3, fp, r7
 8016b92:	2b40      	cmp	r3, #64	@ 0x40
 8016b94:	dd18      	ble.n	8016bc8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x560>
 8016b96:	ea4f 034b 	mov.w	r3, fp, lsl #1
 8016b9a:	4619      	mov	r1, r3
 8016b9c:	9800      	ldr	r0, [sp, #0]
 8016b9e:	930c      	str	r3, [sp, #48]	@ 0x30
 8016ba0:	f7ea f9d6 	bl	8000f50 <_ZN8touchgfx5paint9flushLineEPmi>
 8016ba4:	465a      	mov	r2, fp
 8016ba6:	9b01      	ldr	r3, [sp, #4]
 8016ba8:	9900      	ldr	r1, [sp, #0]
 8016baa:	4620      	mov	r0, r4
 8016bac:	f7ea f9fa 	bl	8000fa4 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh>
 8016bb0:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8016bb2:	441c      	add	r4, r3
 8016bb4:	9b00      	ldr	r3, [sp, #0]
 8016bb6:	461a      	mov	r2, r3
 8016bb8:	4b3d      	ldr	r3, [pc, #244]	@ (8016cb0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x648>)
 8016bba:	429a      	cmp	r2, r3
 8016bbc:	bf0c      	ite	eq
 8016bbe:	4b3d      	ldreq	r3, [pc, #244]	@ (8016cb4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x64c>)
 8016bc0:	4b3b      	ldrne	r3, [pc, #236]	@ (8016cb0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x648>)
 8016bc2:	9300      	str	r3, [sp, #0]
 8016bc4:	f04f 0b00 	mov.w	fp, #0
 8016bc8:	9b00      	ldr	r3, [sp, #0]
 8016bca:	eb03 024b 	add.w	r2, r3, fp, lsl #1
 8016bce:	463b      	mov	r3, r7
 8016bd0:	2b00      	cmp	r3, #0
 8016bd2:	f43f af3f 	beq.w	8016a54 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3ec>
 8016bd6:	f822 9b02 	strh.w	r9, [r2], #2
 8016bda:	3b01      	subs	r3, #1
 8016bdc:	e7f8      	b.n	8016bd0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x568>
 8016bde:	eb04 0747 	add.w	r7, r4, r7, lsl #1
 8016be2:	42a7      	cmp	r7, r4
 8016be4:	f67f af37 	bls.w	8016a56 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3ee>
 8016be8:	f824 9b02 	strh.w	r9, [r4], #2
 8016bec:	e7f9      	b.n	8016be2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x57a>
 8016bee:	f1bb 0f00 	cmp.w	fp, #0
 8016bf2:	d00c      	beq.n	8016c0e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x5a6>
 8016bf4:	ea4f 084b 	mov.w	r8, fp, lsl #1
 8016bf8:	4641      	mov	r1, r8
 8016bfa:	9800      	ldr	r0, [sp, #0]
 8016bfc:	f7ea f9a8 	bl	8000f50 <_ZN8touchgfx5paint9flushLineEPmi>
 8016c00:	4620      	mov	r0, r4
 8016c02:	9b01      	ldr	r3, [sp, #4]
 8016c04:	9900      	ldr	r1, [sp, #0]
 8016c06:	465a      	mov	r2, fp
 8016c08:	f7ea f9cc 	bl	8000fa4 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh>
 8016c0c:	4444      	add	r4, r8
 8016c0e:	4b2a      	ldr	r3, [pc, #168]	@ (8016cb8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x650>)
 8016c10:	9a02      	ldr	r2, [sp, #8]
 8016c12:	881b      	ldrh	r3, [r3, #0]
 8016c14:	1a9b      	subs	r3, r3, r2
 8016c16:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8016c1a:	9b06      	ldr	r3, [sp, #24]
 8016c1c:	3301      	adds	r3, #1
 8016c1e:	9306      	str	r3, [sp, #24]
 8016c20:	9a06      	ldr	r2, [sp, #24]
 8016c22:	9b04      	ldr	r3, [sp, #16]
 8016c24:	4293      	cmp	r3, r2
 8016c26:	d120      	bne.n	8016c6a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x602>
 8016c28:	9b05      	ldr	r3, [sp, #20]
 8016c2a:	9a05      	ldr	r2, [sp, #20]
 8016c2c:	f8bd 9040 	ldrh.w	r9, [sp, #64]	@ 0x40
 8016c30:	f8bd 5038 	ldrh.w	r5, [sp, #56]	@ 0x38
 8016c34:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 8016c36:	f103 0801 	add.w	r8, r3, #1
 8016c3a:	9b08      	ldr	r3, [sp, #32]
 8016c3c:	f853 7022 	ldr.w	r7, [r3, r2, lsl #2]
 8016c40:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8016c42:	ba3f      	rev	r7, r7
 8016c44:	2280      	movs	r2, #128	@ 0x80
 8016c46:	2100      	movs	r1, #0
 8016c48:	441f      	add	r7, r3
 8016c4a:	eba9 0905 	sub.w	r9, r9, r5
 8016c4e:	f00c f9a0 	bl	8022f92 <memset>
 8016c52:	2300      	movs	r3, #0
 8016c54:	fa1f f989 	uxth.w	r9, r9
 8016c58:	f04f 0600 	mov.w	r6, #0
 8016c5c:	f8cd 8014 	str.w	r8, [sp, #20]
 8016c60:	9306      	str	r3, [sp, #24]
 8016c62:	f7ea f96b 	bl	8000f3c <_ZN8touchgfx5paint8tearDownEv>
 8016c66:	46ba      	mov	sl, r7
 8016c68:	e58a      	b.n	8016780 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x118>
 8016c6a:	f8bd 903c 	ldrh.w	r9, [sp, #60]	@ 0x3c
 8016c6e:	9b02      	ldr	r3, [sp, #8]
 8016c70:	eba9 0903 	sub.w	r9, r9, r3
 8016c74:	eba9 0505 	sub.w	r5, r9, r5
 8016c78:	fa1f f985 	uxth.w	r9, r5
 8016c7c:	e7f1      	b.n	8016c62 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x5fa>
 8016c7e:	4b0f      	ldr	r3, [pc, #60]	@ (8016cbc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x654>)
 8016c80:	6818      	ldr	r0, [r3, #0]
 8016c82:	6803      	ldr	r3, [r0, #0]
 8016c84:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8016c86:	4798      	blx	r3
 8016c88:	b013      	add	sp, #76	@ 0x4c
 8016c8a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016c8e:	9b02      	ldr	r3, [sp, #8]
 8016c90:	9a02      	ldr	r2, [sp, #8]
 8016c92:	42ab      	cmp	r3, r5
 8016c94:	bfa8      	it	ge
 8016c96:	462b      	movge	r3, r5
 8016c98:	eba2 0803 	sub.w	r8, r2, r3
 8016c9c:	1aed      	subs	r5, r5, r3
 8016c9e:	e626      	b.n	80168ee <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x286>
 8016ca0:	f108 38ff 	add.w	r8, r8, #4294967295
 8016ca4:	fa1f f986 	uxth.w	r9, r6
 8016ca8:	2500      	movs	r5, #0
 8016caa:	2701      	movs	r7, #1
 8016cac:	e76f      	b.n	8016b8e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x526>
 8016cae:	bf00      	nop
 8016cb0:	20000280 	.word	0x20000280
 8016cb4:	20000380 	.word	0x20000380
 8016cb8:	2001403c 	.word	0x2001403c
 8016cbc:	20014044 	.word	0x20014044

08016cc0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 8016cc0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016cc4:	b08f      	sub	sp, #60	@ 0x3c
 8016cc6:	461c      	mov	r4, r3
 8016cc8:	9203      	str	r2, [sp, #12]
 8016cca:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 8016cce:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 8016cd0:	9202      	str	r2, [sp, #8]
 8016cd2:	460f      	mov	r7, r1
 8016cd4:	2a00      	cmp	r2, #0
 8016cd6:	f000 8128 	beq.w	8016f2a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x26a>
 8016cda:	6820      	ldr	r0, [r4, #0]
 8016cdc:	6861      	ldr	r1, [r4, #4]
 8016cde:	aa0a      	add	r2, sp, #40	@ 0x28
 8016ce0:	c203      	stmia	r2!, {r0, r1}
 8016ce2:	6818      	ldr	r0, [r3, #0]
 8016ce4:	6859      	ldr	r1, [r3, #4]
 8016ce6:	aa0c      	add	r2, sp, #48	@ 0x30
 8016ce8:	c203      	stmia	r2!, {r0, r1}
 8016cea:	a80a      	add	r0, sp, #40	@ 0x28
 8016cec:	f7f8 fbe0 	bl	800f4b0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8016cf0:	4621      	mov	r1, r4
 8016cf2:	a80c      	add	r0, sp, #48	@ 0x30
 8016cf4:	f7f8 fc04 	bl	800f500 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8016cf8:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	@ 0x2c
 8016cfc:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	@ 0x2e
 8016d00:	f8bd 0030 	ldrh.w	r0, [sp, #48]	@ 0x30
 8016d04:	f5b6 6f80 	cmp.w	r6, #1024	@ 0x400
 8016d08:	bfde      	ittt	le
 8016d0a:	b2b3      	uxthle	r3, r6
 8016d0c:	f44f 6280 	movle.w	r2, #1024	@ 0x400
 8016d10:	fb92 f3f3 	sdivle	r3, r2, r3
 8016d14:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
 8016d18:	bfc8      	it	gt
 8016d1a:	2301      	movgt	r3, #1
 8016d1c:	fb92 f1f3 	sdiv	r1, r2, r3
 8016d20:	fa1f fc81 	uxth.w	ip, r1
 8016d24:	fb0c 2413 	mls	r4, ip, r3, r2
 8016d28:	fb14 f406 	smulbb	r4, r4, r6
 8016d2c:	441d      	add	r5, r3
 8016d2e:	4404      	add	r4, r0
 8016d30:	4661      	mov	r1, ip
 8016d32:	3d01      	subs	r5, #1
 8016d34:	b2a4      	uxth	r4, r4
 8016d36:	fb95 f5f3 	sdiv	r5, r5, r3
 8016d3a:	b121      	cbz	r1, 8016d46 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x86>
 8016d3c:	9b03      	ldr	r3, [sp, #12]
 8016d3e:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 8016d42:	ba1b      	rev	r3, r3
 8016d44:	441f      	add	r7, r3
 8016d46:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 8016d4a:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	@ 0x34
 8016d4e:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	@ 0x36
 8016d52:	4418      	add	r0, r3
 8016d54:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 8016d58:	f8ad 0030 	strh.w	r0, [sp, #48]	@ 0x30
 8016d5c:	441a      	add	r2, r3
 8016d5e:	4b74      	ldr	r3, [pc, #464]	@ (8016f30 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
 8016d60:	f8ad 2032 	strh.w	r2, [sp, #50]	@ 0x32
 8016d64:	6818      	ldr	r0, [r3, #0]
 8016d66:	6803      	ldr	r3, [r0, #0]
 8016d68:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8016d6a:	4798      	blx	r3
 8016d6c:	4a71      	ldr	r2, [pc, #452]	@ (8016f34 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x274>)
 8016d6e:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	@ 0x32
 8016d72:	8813      	ldrh	r3, [r2, #0]
 8016d74:	f9bd c030 	ldrsh.w	ip, [sp, #48]	@ 0x30
 8016d78:	9209      	str	r2, [sp, #36]	@ 0x24
 8016d7a:	fb03 c101 	mla	r1, r3, r1, ip
 8016d7e:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 8016d82:	4373      	muls	r3, r6
 8016d84:	b2ad      	uxth	r5, r5
 8016d86:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8016d8a:	00ad      	lsls	r5, r5, #2
 8016d8c:	2c00      	cmp	r4, #0
 8016d8e:	9304      	str	r3, [sp, #16]
 8016d90:	f105 0304 	add.w	r3, r5, #4
 8016d94:	9305      	str	r3, [sp, #20]
 8016d96:	bf0c      	ite	eq
 8016d98:	46c8      	moveq	r8, r9
 8016d9a:	f04f 0800 	movne.w	r8, #0
 8016d9e:	2300      	movs	r3, #0
 8016da0:	fa1f f888 	uxth.w	r8, r8
 8016da4:	9301      	str	r3, [sp, #4]
 8016da6:	9a04      	ldr	r2, [sp, #16]
 8016da8:	4282      	cmp	r2, r0
 8016daa:	f240 80b9 	bls.w	8016f20 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x260>
 8016dae:	b95b      	cbnz	r3, 8016dc8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x108>
 8016db0:	783a      	ldrb	r2, [r7, #0]
 8016db2:	0993      	lsrs	r3, r2, #6
 8016db4:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 8016db8:	9201      	str	r2, [sp, #4]
 8016dba:	1e5a      	subs	r2, r3, #1
 8016dbc:	2a02      	cmp	r2, #2
 8016dbe:	bf8d      	iteet	hi
 8016dc0:	787b      	ldrbhi	r3, [r7, #1]
 8016dc2:	3701      	addls	r7, #1
 8016dc4:	b29b      	uxthls	r3, r3
 8016dc6:	3702      	addhi	r7, #2
 8016dc8:	b184      	cbz	r4, 8016dec <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x12c>
 8016dca:	429c      	cmp	r4, r3
 8016dcc:	bf95      	itete	ls
 8016dce:	1b1c      	subls	r4, r3, r4
 8016dd0:	1ae4      	subhi	r4, r4, r3
 8016dd2:	fa1f fa84 	uxthls.w	sl, r4
 8016dd6:	b2a4      	uxthhi	r4, r4
 8016dd8:	bf87      	ittee	hi
 8016dda:	46c4      	movhi	ip, r8
 8016ddc:	f04f 0a00 	movhi.w	sl, #0
 8016de0:	fa1f fc89 	uxthls.w	ip, r9
 8016de4:	2400      	movls	r4, #0
 8016de6:	4653      	mov	r3, sl
 8016de8:	46e0      	mov	r8, ip
 8016dea:	e7dc      	b.n	8016da6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xe6>
 8016dec:	2204      	movs	r2, #4
 8016dee:	4615      	mov	r5, r2
 8016df0:	9905      	ldr	r1, [sp, #20]
 8016df2:	9a01      	ldr	r2, [sp, #4]
 8016df4:	fb15 1202 	smlabb	r2, r5, r2, r1
 8016df8:	9903      	ldr	r1, [sp, #12]
 8016dfa:	588a      	ldr	r2, [r1, r2]
 8016dfc:	4543      	cmp	r3, r8
 8016dfe:	bf27      	ittee	cs
 8016e00:	eba3 0a08 	subcs.w	sl, r3, r8
 8016e04:	46c6      	movcs	lr, r8
 8016e06:	eba8 0c03 	subcc.w	ip, r8, r3
 8016e0a:	469e      	movcc	lr, r3
 8016e0c:	ea4f 6112 	mov.w	r1, r2, lsr #24
 8016e10:	bf27      	ittee	cs
 8016e12:	fa1f fa8a 	uxthcs.w	sl, sl
 8016e16:	46a4      	movcs	ip, r4
 8016e18:	fa1f fc8c 	uxthcc.w	ip, ip
 8016e1c:	46a2      	movcc	sl, r4
 8016e1e:	ea4f 0e4e 	mov.w	lr, lr, lsl #1
 8016e22:	2900      	cmp	r1, #0
 8016e24:	d066      	beq.n	8016ef4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x234>
 8016e26:	29ff      	cmp	r1, #255	@ 0xff
 8016e28:	ea4f 2612 	mov.w	r6, r2, lsr #8
 8016e2c:	d114      	bne.n	8016e58 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
 8016e2e:	9d02      	ldr	r5, [sp, #8]
 8016e30:	2dff      	cmp	r5, #255	@ 0xff
 8016e32:	d111      	bne.n	8016e58 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
 8016e34:	0951      	lsrs	r1, r2, #5
 8016e36:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
 8016e3a:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8016e3e:	f026 0607 	bic.w	r6, r6, #7
 8016e42:	430e      	orrs	r6, r1
 8016e44:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8016e48:	4316      	orrs	r6, r2
 8016e4a:	b2b6      	uxth	r6, r6
 8016e4c:	4486      	add	lr, r0
 8016e4e:	4586      	cmp	lr, r0
 8016e50:	d051      	beq.n	8016ef6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 8016e52:	f820 6b02 	strh.w	r6, [r0], #2
 8016e56:	e7fa      	b.n	8016e4e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x18e>
 8016e58:	9d02      	ldr	r5, [sp, #8]
 8016e5a:	4369      	muls	r1, r5
 8016e5c:	1c4d      	adds	r5, r1, #1
 8016e5e:	eb05 2521 	add.w	r5, r5, r1, asr #8
 8016e62:	122d      	asrs	r5, r5, #8
 8016e64:	ea6f 0b05 	mvn.w	fp, r5
 8016e68:	f3c2 4107 	ubfx	r1, r2, #16, #8
 8016e6c:	b2ad      	uxth	r5, r5
 8016e6e:	b2f6      	uxtb	r6, r6
 8016e70:	b2d2      	uxtb	r2, r2
 8016e72:	fb11 f105 	smulbb	r1, r1, r5
 8016e76:	fb16 f605 	smulbb	r6, r6, r5
 8016e7a:	fb12 f205 	smulbb	r2, r2, r5
 8016e7e:	b289      	uxth	r1, r1
 8016e80:	b2b6      	uxth	r6, r6
 8016e82:	b292      	uxth	r2, r2
 8016e84:	9106      	str	r1, [sp, #24]
 8016e86:	9607      	str	r6, [sp, #28]
 8016e88:	9208      	str	r2, [sp, #32]
 8016e8a:	4486      	add	lr, r0
 8016e8c:	fa5f fb8b 	uxtb.w	fp, fp
 8016e90:	4586      	cmp	lr, r0
 8016e92:	d030      	beq.n	8016ef6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 8016e94:	8802      	ldrh	r2, [r0, #0]
 8016e96:	9906      	ldr	r1, [sp, #24]
 8016e98:	1216      	asrs	r6, r2, #8
 8016e9a:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 8016e9e:	10d5      	asrs	r5, r2, #3
 8016ea0:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 8016ea4:	fb06 160b 	mla	r6, r6, fp, r1
 8016ea8:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 8016eac:	9907      	ldr	r1, [sp, #28]
 8016eae:	00d2      	lsls	r2, r2, #3
 8016eb0:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 8016eb4:	fb05 150b 	mla	r5, r5, fp, r1
 8016eb8:	b2d2      	uxtb	r2, r2
 8016eba:	9908      	ldr	r1, [sp, #32]
 8016ebc:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8016ec0:	b2b6      	uxth	r6, r6
 8016ec2:	fb02 120b 	mla	r2, r2, fp, r1
 8016ec6:	b292      	uxth	r2, r2
 8016ec8:	1c71      	adds	r1, r6, #1
 8016eca:	eb01 2616 	add.w	r6, r1, r6, lsr #8
 8016ece:	1c51      	adds	r1, r2, #1
 8016ed0:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8016ed4:	b2ad      	uxth	r5, r5
 8016ed6:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8016eda:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
 8016ede:	4316      	orrs	r6, r2
 8016ee0:	1c6a      	adds	r2, r5, #1
 8016ee2:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 8016ee6:	096d      	lsrs	r5, r5, #5
 8016ee8:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8016eec:	432e      	orrs	r6, r5
 8016eee:	f820 6b02 	strh.w	r6, [r0], #2
 8016ef2:	e7cd      	b.n	8016e90 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d0>
 8016ef4:	4470      	add	r0, lr
 8016ef6:	4543      	cmp	r3, r8
 8016ef8:	f4ff af75 	bcc.w	8016de6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x126>
 8016efc:	f8bd 402c 	ldrh.w	r4, [sp, #44]	@ 0x2c
 8016f00:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8016f02:	fa1f fc89 	uxth.w	ip, r9
 8016f06:	eba4 040c 	sub.w	r4, r4, ip
 8016f0a:	881b      	ldrh	r3, [r3, #0]
 8016f0c:	b2a4      	uxth	r4, r4
 8016f0e:	2c00      	cmp	r4, #0
 8016f10:	eba3 0309 	sub.w	r3, r3, r9
 8016f14:	bf18      	it	ne
 8016f16:	f04f 0c00 	movne.w	ip, #0
 8016f1a:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8016f1e:	e762      	b.n	8016de6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x126>
 8016f20:	4b03      	ldr	r3, [pc, #12]	@ (8016f30 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
 8016f22:	6818      	ldr	r0, [r3, #0]
 8016f24:	6803      	ldr	r3, [r0, #0]
 8016f26:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8016f28:	4798      	blx	r3
 8016f2a:	b00f      	add	sp, #60	@ 0x3c
 8016f2c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016f30:	20014044 	.word	0x20014044
 8016f34:	2001403c 	.word	0x2001403c

08016f38 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 8016f38:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016f3c:	b093      	sub	sp, #76	@ 0x4c
 8016f3e:	461c      	mov	r4, r3
 8016f40:	9205      	str	r2, [sp, #20]
 8016f42:	f89d 2074 	ldrb.w	r2, [sp, #116]	@ 0x74
 8016f46:	9101      	str	r1, [sp, #4]
 8016f48:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8016f4a:	9202      	str	r2, [sp, #8]
 8016f4c:	2a00      	cmp	r2, #0
 8016f4e:	f000 812c 	beq.w	80171aa <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x272>
 8016f52:	6820      	ldr	r0, [r4, #0]
 8016f54:	6861      	ldr	r1, [r4, #4]
 8016f56:	aa0e      	add	r2, sp, #56	@ 0x38
 8016f58:	c203      	stmia	r2!, {r0, r1}
 8016f5a:	6818      	ldr	r0, [r3, #0]
 8016f5c:	6859      	ldr	r1, [r3, #4]
 8016f5e:	aa10      	add	r2, sp, #64	@ 0x40
 8016f60:	c203      	stmia	r2!, {r0, r1}
 8016f62:	a80e      	add	r0, sp, #56	@ 0x38
 8016f64:	f7f8 faa4 	bl	800f4b0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8016f68:	4621      	mov	r1, r4
 8016f6a:	a810      	add	r0, sp, #64	@ 0x40
 8016f6c:	f7f8 fac8 	bl	800f500 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8016f70:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	@ 0x3c
 8016f74:	f9bd 503e 	ldrsh.w	r5, [sp, #62]	@ 0x3e
 8016f78:	f8bd 0040 	ldrh.w	r0, [sp, #64]	@ 0x40
 8016f7c:	f5b6 6f80 	cmp.w	r6, #1024	@ 0x400
 8016f80:	bfde      	ittt	le
 8016f82:	b2b3      	uxthle	r3, r6
 8016f84:	f44f 6280 	movle.w	r2, #1024	@ 0x400
 8016f88:	fb92 f3f3 	sdivle	r3, r2, r3
 8016f8c:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	@ 0x42
 8016f90:	bfc8      	it	gt
 8016f92:	2301      	movgt	r3, #1
 8016f94:	fb92 f1f3 	sdiv	r1, r2, r3
 8016f98:	fa1f fc81 	uxth.w	ip, r1
 8016f9c:	fb0c 2413 	mls	r4, ip, r3, r2
 8016fa0:	fb14 f406 	smulbb	r4, r4, r6
 8016fa4:	441d      	add	r5, r3
 8016fa6:	4404      	add	r4, r0
 8016fa8:	4661      	mov	r1, ip
 8016faa:	3d01      	subs	r5, #1
 8016fac:	b2a4      	uxth	r4, r4
 8016fae:	fb95 f5f3 	sdiv	r5, r5, r3
 8016fb2:	b131      	cbz	r1, 8016fc2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x8a>
 8016fb4:	9b05      	ldr	r3, [sp, #20]
 8016fb6:	9901      	ldr	r1, [sp, #4]
 8016fb8:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 8016fbc:	ba1b      	rev	r3, r3
 8016fbe:	4419      	add	r1, r3
 8016fc0:	9101      	str	r1, [sp, #4]
 8016fc2:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
 8016fc6:	f9bd b044 	ldrsh.w	fp, [sp, #68]	@ 0x44
 8016fca:	f9bd 6046 	ldrsh.w	r6, [sp, #70]	@ 0x46
 8016fce:	4418      	add	r0, r3
 8016fd0:	f8bd 303a 	ldrh.w	r3, [sp, #58]	@ 0x3a
 8016fd4:	f8ad 0040 	strh.w	r0, [sp, #64]	@ 0x40
 8016fd8:	441a      	add	r2, r3
 8016fda:	4b75      	ldr	r3, [pc, #468]	@ (80171b0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>)
 8016fdc:	f8ad 2042 	strh.w	r2, [sp, #66]	@ 0x42
 8016fe0:	6818      	ldr	r0, [r3, #0]
 8016fe2:	6803      	ldr	r3, [r0, #0]
 8016fe4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8016fe6:	4798      	blx	r3
 8016fe8:	4972      	ldr	r1, [pc, #456]	@ (80171b4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27c>)
 8016fea:	f9bd c040 	ldrsh.w	ip, [sp, #64]	@ 0x40
 8016fee:	880b      	ldrh	r3, [r1, #0]
 8016ff0:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	@ 0x42
 8016ff4:	910d      	str	r1, [sp, #52]	@ 0x34
 8016ff6:	fb03 c202 	mla	r2, r3, r2, ip
 8016ffa:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8016ffe:	4373      	muls	r3, r6
 8017000:	b2ad      	uxth	r5, r5
 8017002:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8017006:	00ad      	lsls	r5, r5, #2
 8017008:	9308      	str	r3, [sp, #32]
 801700a:	1d2b      	adds	r3, r5, #4
 801700c:	9309      	str	r3, [sp, #36]	@ 0x24
 801700e:	9b02      	ldr	r3, [sp, #8]
 8017010:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8017014:	9106      	str	r1, [sp, #24]
 8017016:	43da      	mvns	r2, r3
 8017018:	2c00      	cmp	r4, #0
 801701a:	bf0c      	ite	eq
 801701c:	46dc      	moveq	ip, fp
 801701e:	f04f 0c00 	movne.w	ip, #0
 8017022:	2300      	movs	r3, #0
 8017024:	b2d2      	uxtb	r2, r2
 8017026:	fa1f fc8c 	uxth.w	ip, ip
 801702a:	9303      	str	r3, [sp, #12]
 801702c:	9207      	str	r2, [sp, #28]
 801702e:	9a08      	ldr	r2, [sp, #32]
 8017030:	4282      	cmp	r2, r0
 8017032:	f240 80b5 	bls.w	80171a0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x268>
 8017036:	b963      	cbnz	r3, 8017052 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11a>
 8017038:	9b01      	ldr	r3, [sp, #4]
 801703a:	781a      	ldrb	r2, [r3, #0]
 801703c:	0993      	lsrs	r3, r2, #6
 801703e:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 8017042:	9203      	str	r2, [sp, #12]
 8017044:	1e5a      	subs	r2, r3, #1
 8017046:	2a02      	cmp	r2, #2
 8017048:	d815      	bhi.n	8017076 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x13e>
 801704a:	9a01      	ldr	r2, [sp, #4]
 801704c:	3201      	adds	r2, #1
 801704e:	9201      	str	r2, [sp, #4]
 8017050:	b29b      	uxth	r3, r3
 8017052:	b1b4      	cbz	r4, 8017082 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x14a>
 8017054:	429c      	cmp	r4, r3
 8017056:	bf95      	itete	ls
 8017058:	1b1c      	subls	r4, r3, r4
 801705a:	1ae4      	subhi	r4, r4, r3
 801705c:	fa1f f884 	uxthls.w	r8, r4
 8017060:	b2a4      	uxthhi	r4, r4
 8017062:	bf87      	ittee	hi
 8017064:	4666      	movhi	r6, ip
 8017066:	f04f 0800 	movhi.w	r8, #0
 801706a:	fa1f f68b 	uxthls.w	r6, fp
 801706e:	2400      	movls	r4, #0
 8017070:	4643      	mov	r3, r8
 8017072:	46b4      	mov	ip, r6
 8017074:	e7db      	b.n	801702e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf6>
 8017076:	9a01      	ldr	r2, [sp, #4]
 8017078:	9b01      	ldr	r3, [sp, #4]
 801707a:	3202      	adds	r2, #2
 801707c:	785b      	ldrb	r3, [r3, #1]
 801707e:	9201      	str	r2, [sp, #4]
 8017080:	e7e7      	b.n	8017052 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11a>
 8017082:	2203      	movs	r2, #3
 8017084:	4615      	mov	r5, r2
 8017086:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8017088:	9a03      	ldr	r2, [sp, #12]
 801708a:	fb15 1202 	smlabb	r2, r5, r2, r1
 801708e:	9905      	ldr	r1, [sp, #20]
 8017090:	4563      	cmp	r3, ip
 8017092:	eb01 0502 	add.w	r5, r1, r2
 8017096:	9902      	ldr	r1, [sp, #8]
 8017098:	bf29      	itett	cs
 801709a:	eba3 080c 	subcs.w	r8, r3, ip
 801709e:	ebac 0603 	subcc.w	r6, ip, r3
 80170a2:	fa1f f888 	uxthcs.w	r8, r8
 80170a6:	46e1      	movcs	r9, ip
 80170a8:	bf2f      	iteee	cs
 80170aa:	4626      	movcs	r6, r4
 80170ac:	b2b6      	uxthcc	r6, r6
 80170ae:	4699      	movcc	r9, r3
 80170b0:	46a0      	movcc	r8, r4
 80170b2:	29ff      	cmp	r1, #255	@ 0xff
 80170b4:	d04a      	beq.n	801714c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x214>
 80170b6:	9f06      	ldr	r7, [sp, #24]
 80170b8:	78a9      	ldrb	r1, [r5, #2]
 80170ba:	9004      	str	r0, [sp, #16]
 80170bc:	4379      	muls	r1, r7
 80170be:	910a      	str	r1, [sp, #40]	@ 0x28
 80170c0:	7869      	ldrb	r1, [r5, #1]
 80170c2:	4379      	muls	r1, r7
 80170c4:	910b      	str	r1, [sp, #44]	@ 0x2c
 80170c6:	9905      	ldr	r1, [sp, #20]
 80170c8:	5c8a      	ldrb	r2, [r1, r2]
 80170ca:	437a      	muls	r2, r7
 80170cc:	920c      	str	r2, [sp, #48]	@ 0x30
 80170ce:	46ca      	mov	sl, r9
 80170d0:	f1ba 0f00 	cmp.w	sl, #0
 80170d4:	d03d      	beq.n	8017152 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21a>
 80170d6:	9a04      	ldr	r2, [sp, #16]
 80170d8:	9f07      	ldr	r7, [sp, #28]
 80170da:	8812      	ldrh	r2, [r2, #0]
 80170dc:	1215      	asrs	r5, r2, #8
 80170de:	46be      	mov	lr, r7
 80170e0:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 80170e4:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
 80170e6:	10d1      	asrs	r1, r2, #3
 80170e8:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 80170ec:	fb05 750e 	mla	r5, r5, lr, r7
 80170f0:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 80170f4:	9f0b      	ldr	r7, [sp, #44]	@ 0x2c
 80170f6:	00d2      	lsls	r2, r2, #3
 80170f8:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 80170fc:	fb01 710e 	mla	r1, r1, lr, r7
 8017100:	b2d2      	uxtb	r2, r2
 8017102:	9f0c      	ldr	r7, [sp, #48]	@ 0x30
 8017104:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8017108:	b2ad      	uxth	r5, r5
 801710a:	fb02 720e 	mla	r2, r2, lr, r7
 801710e:	b292      	uxth	r2, r2
 8017110:	f105 0e01 	add.w	lr, r5, #1
 8017114:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 8017118:	f102 0e01 	add.w	lr, r2, #1
 801711c:	eb0e 2212 	add.w	r2, lr, r2, lsr #8
 8017120:	b289      	uxth	r1, r1
 8017122:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8017126:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 801712a:	4315      	orrs	r5, r2
 801712c:	1c4a      	adds	r2, r1, #1
 801712e:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8017132:	0949      	lsrs	r1, r1, #5
 8017134:	9a04      	ldr	r2, [sp, #16]
 8017136:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801713a:	430d      	orrs	r5, r1
 801713c:	f822 5b02 	strh.w	r5, [r2], #2
 8017140:	f10a 3aff 	add.w	sl, sl, #4294967295
 8017144:	9204      	str	r2, [sp, #16]
 8017146:	fa1f fa8a 	uxth.w	sl, sl
 801714a:	e7c1      	b.n	80170d0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x198>
 801714c:	4649      	mov	r1, r9
 801714e:	4686      	mov	lr, r0
 8017150:	b999      	cbnz	r1, 801717a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x242>
 8017152:	4563      	cmp	r3, ip
 8017154:	eb00 0049 	add.w	r0, r0, r9, lsl #1
 8017158:	d38a      	bcc.n	8017070 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x138>
 801715a:	f8bd 403c 	ldrh.w	r4, [sp, #60]	@ 0x3c
 801715e:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8017160:	fa1f f68b 	uxth.w	r6, fp
 8017164:	1ba4      	subs	r4, r4, r6
 8017166:	881b      	ldrh	r3, [r3, #0]
 8017168:	b2a4      	uxth	r4, r4
 801716a:	2c00      	cmp	r4, #0
 801716c:	eba3 030b 	sub.w	r3, r3, fp
 8017170:	bf18      	it	ne
 8017172:	2600      	movne	r6, #0
 8017174:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8017178:	e77a      	b.n	8017070 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x138>
 801717a:	78aa      	ldrb	r2, [r5, #2]
 801717c:	4f0e      	ldr	r7, [pc, #56]	@ (80171b8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x280>)
 801717e:	ea07 2a02 	and.w	sl, r7, r2, lsl #8
 8017182:	786a      	ldrb	r2, [r5, #1]
 8017184:	00d2      	lsls	r2, r2, #3
 8017186:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801718a:	ea4a 0202 	orr.w	r2, sl, r2
 801718e:	f895 a000 	ldrb.w	sl, [r5]
 8017192:	3901      	subs	r1, #1
 8017194:	ea42 02da 	orr.w	r2, r2, sl, lsr #3
 8017198:	f82e 2b02 	strh.w	r2, [lr], #2
 801719c:	b289      	uxth	r1, r1
 801719e:	e7d7      	b.n	8017150 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x218>
 80171a0:	4b03      	ldr	r3, [pc, #12]	@ (80171b0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>)
 80171a2:	6818      	ldr	r0, [r3, #0]
 80171a4:	6803      	ldr	r3, [r0, #0]
 80171a6:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80171a8:	4798      	blx	r3
 80171aa:	b013      	add	sp, #76	@ 0x4c
 80171ac:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80171b0:	20014044 	.word	0x20014044
 80171b4:	2001403c 	.word	0x2001403c
 80171b8:	fffff800 	.word	0xfffff800

080171bc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 80171bc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80171c0:	b09d      	sub	sp, #116	@ 0x74
 80171c2:	e9cd 1211 	strd	r1, r2, [sp, #68]	@ 0x44
 80171c6:	f89d 209c 	ldrb.w	r2, [sp, #156]	@ 0x9c
 80171ca:	920e      	str	r2, [sp, #56]	@ 0x38
 80171cc:	461c      	mov	r4, r3
 80171ce:	4683      	mov	fp, r0
 80171d0:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 80171d2:	2a00      	cmp	r2, #0
 80171d4:	f000 81e0 	beq.w	8017598 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3dc>
 80171d8:	6820      	ldr	r0, [r4, #0]
 80171da:	6861      	ldr	r1, [r4, #4]
 80171dc:	aa18      	add	r2, sp, #96	@ 0x60
 80171de:	c203      	stmia	r2!, {r0, r1}
 80171e0:	6818      	ldr	r0, [r3, #0]
 80171e2:	6859      	ldr	r1, [r3, #4]
 80171e4:	aa1a      	add	r2, sp, #104	@ 0x68
 80171e6:	c203      	stmia	r2!, {r0, r1}
 80171e8:	a818      	add	r0, sp, #96	@ 0x60
 80171ea:	f7f8 f961 	bl	800f4b0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80171ee:	4621      	mov	r1, r4
 80171f0:	a81a      	add	r0, sp, #104	@ 0x68
 80171f2:	f7f8 f985 	bl	800f500 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80171f6:	f9bd 3064 	ldrsh.w	r3, [sp, #100]	@ 0x64
 80171fa:	f9bd 4066 	ldrsh.w	r4, [sp, #102]	@ 0x66
 80171fe:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	@ 0x6e
 8017202:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8017206:	bfd7      	itett	le
 8017208:	b29a      	uxthle	r2, r3
 801720a:	2201      	movgt	r2, #1
 801720c:	f44f 6180 	movle.w	r1, #1024	@ 0x400
 8017210:	fb91 f2f2 	sdivle	r2, r1, r2
 8017214:	9202      	str	r2, [sp, #8]
 8017216:	9802      	ldr	r0, [sp, #8]
 8017218:	f9bd 206a 	ldrsh.w	r2, [sp, #106]	@ 0x6a
 801721c:	fb92 f0f0 	sdiv	r0, r2, r0
 8017220:	b280      	uxth	r0, r0
 8017222:	900f      	str	r0, [sp, #60]	@ 0x3c
 8017224:	9902      	ldr	r1, [sp, #8]
 8017226:	9802      	ldr	r0, [sp, #8]
 8017228:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 801722a:	440c      	add	r4, r1
 801722c:	fb05 2510 	mls	r5, r5, r0, r2
 8017230:	fb15 f503 	smulbb	r5, r5, r3
 8017234:	3c01      	subs	r4, #1
 8017236:	f8bd 3060 	ldrh.w	r3, [sp, #96]	@ 0x60
 801723a:	fb94 f4f1 	sdiv	r4, r4, r1
 801723e:	f8bd 1068 	ldrh.w	r1, [sp, #104]	@ 0x68
 8017242:	440d      	add	r5, r1
 8017244:	4419      	add	r1, r3
 8017246:	f8bd 3062 	ldrh.w	r3, [sp, #98]	@ 0x62
 801724a:	f8ad 1068 	strh.w	r1, [sp, #104]	@ 0x68
 801724e:	441a      	add	r2, r3
 8017250:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	@ 0x6c
 8017254:	9306      	str	r3, [sp, #24]
 8017256:	4bb3      	ldr	r3, [pc, #716]	@ (8017524 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x368>)
 8017258:	f8ad 206a 	strh.w	r2, [sp, #106]	@ 0x6a
 801725c:	6818      	ldr	r0, [r3, #0]
 801725e:	6803      	ldr	r3, [r0, #0]
 8017260:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8017262:	4798      	blx	r3
 8017264:	4bb0      	ldr	r3, [pc, #704]	@ (8017528 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x36c>)
 8017266:	f9bd 106a 	ldrsh.w	r1, [sp, #106]	@ 0x6a
 801726a:	881a      	ldrh	r2, [r3, #0]
 801726c:	f9bd 7068 	ldrsh.w	r7, [sp, #104]	@ 0x68
 8017270:	9316      	str	r3, [sp, #88]	@ 0x58
 8017272:	fb02 7101 	mla	r1, r2, r1, r7
 8017276:	3401      	adds	r4, #1
 8017278:	eb00 0841 	add.w	r8, r0, r1, lsl #1
 801727c:	b2a4      	uxth	r4, r4
 801727e:	4356      	muls	r6, r2
 8017280:	eb08 0246 	add.w	r2, r8, r6, lsl #1
 8017284:	00a4      	lsls	r4, r4, #2
 8017286:	920a      	str	r2, [sp, #40]	@ 0x28
 8017288:	1d22      	adds	r2, r4, #4
 801728a:	b2ad      	uxth	r5, r5
 801728c:	9213      	str	r2, [sp, #76]	@ 0x4c
 801728e:	4ba7      	ldr	r3, [pc, #668]	@ (801752c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x370>)
 8017290:	9a06      	ldr	r2, [sp, #24]
 8017292:	2d00      	cmp	r5, #0
 8017294:	bf0c      	ite	eq
 8017296:	4611      	moveq	r1, r2
 8017298:	2100      	movne	r1, #0
 801729a:	2200      	movs	r2, #0
 801729c:	eba3 030b 	sub.w	r3, r3, fp
 80172a0:	b289      	uxth	r1, r1
 80172a2:	920d      	str	r2, [sp, #52]	@ 0x34
 80172a4:	9317      	str	r3, [sp, #92]	@ 0x5c
 80172a6:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 80172a8:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80172aa:	fa12 f383 	uxtah	r3, r2, r3
 80172ae:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 80172b0:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 80172b4:	3304      	adds	r3, #4
 80172b6:	9308      	str	r3, [sp, #32]
 80172b8:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80172ba:	4543      	cmp	r3, r8
 80172bc:	f240 8167 	bls.w	801758e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3d2>
 80172c0:	9a02      	ldr	r2, [sp, #8]
 80172c2:	f8bd 3064 	ldrh.w	r3, [sp, #100]	@ 0x64
 80172c6:	fbb5 f3f3 	udiv	r3, r5, r3
 80172ca:	1ad3      	subs	r3, r2, r3
 80172cc:	b29b      	uxth	r3, r3
 80172ce:	9314      	str	r3, [sp, #80]	@ 0x50
 80172d0:	9b08      	ldr	r3, [sp, #32]
 80172d2:	9808      	ldr	r0, [sp, #32]
 80172d4:	785a      	ldrb	r2, [r3, #1]
 80172d6:	789b      	ldrb	r3, [r3, #2]
 80172d8:	7800      	ldrb	r0, [r0, #0]
 80172da:	9010      	str	r0, [sp, #64]	@ 0x40
 80172dc:	021b      	lsls	r3, r3, #8
 80172de:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 80172e2:	9a08      	ldr	r2, [sp, #32]
 80172e4:	78d2      	ldrb	r2, [r2, #3]
 80172e6:	4313      	orrs	r3, r2
 80172e8:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 80172ea:	3001      	adds	r0, #1
 80172ec:	441a      	add	r2, r3
 80172ee:	9007      	str	r0, [sp, #28]
 80172f0:	1c50      	adds	r0, r2, #1
 80172f2:	9005      	str	r0, [sp, #20]
 80172f4:	7852      	ldrb	r2, [r2, #1]
 80172f6:	9811      	ldr	r0, [sp, #68]	@ 0x44
 80172f8:	0212      	lsls	r2, r2, #8
 80172fa:	5cc3      	ldrb	r3, [r0, r3]
 80172fc:	f402 72ff 	and.w	r2, r2, #510	@ 0x1fe
 8017300:	431a      	orrs	r2, r3
 8017302:	b293      	uxth	r3, r2
 8017304:	930b      	str	r3, [sp, #44]	@ 0x2c
 8017306:	2300      	movs	r3, #0
 8017308:	9309      	str	r3, [sp, #36]	@ 0x24
 801730a:	2301      	movs	r3, #1
 801730c:	9301      	str	r3, [sp, #4]
 801730e:	9304      	str	r3, [sp, #16]
 8017310:	2300      	movs	r3, #0
 8017312:	f88b 2804 	strb.w	r2, [fp, #2052]	@ 0x804
 8017316:	9303      	str	r3, [sp, #12]
 8017318:	f04f 0e01 	mov.w	lr, #1
 801731c:	2d00      	cmp	r5, #0
 801731e:	d07c      	beq.n	801741a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25e>
 8017320:	45ae      	cmp	lr, r5
 8017322:	d26b      	bcs.n	80173fc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x240>
 8017324:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8017326:	eba5 050e 	sub.w	r5, r5, lr
 801732a:	4543      	cmp	r3, r8
 801732c:	b2ad      	uxth	r5, r5
 801732e:	460c      	mov	r4, r1
 8017330:	d802      	bhi.n	8017338 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x17c>
 8017332:	e070      	b.n	8017416 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25a>
 8017334:	2b00      	cmp	r3, #0
 8017336:	d15c      	bne.n	80173f2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 8017338:	9b05      	ldr	r3, [sp, #20]
 801733a:	9a04      	ldr	r2, [sp, #16]
 801733c:	785b      	ldrb	r3, [r3, #1]
 801733e:	9904      	ldr	r1, [sp, #16]
 8017340:	f1c2 0207 	rsb	r2, r2, #7
 8017344:	4093      	lsls	r3, r2
 8017346:	005b      	lsls	r3, r3, #1
 8017348:	f403 72ff 	and.w	r2, r3, #510	@ 0x1fe
 801734c:	9b05      	ldr	r3, [sp, #20]
 801734e:	781b      	ldrb	r3, [r3, #0]
 8017350:	410b      	asrs	r3, r1
 8017352:	3101      	adds	r1, #1
 8017354:	b2c9      	uxtb	r1, r1
 8017356:	2908      	cmp	r1, #8
 8017358:	9104      	str	r1, [sp, #16]
 801735a:	9905      	ldr	r1, [sp, #20]
 801735c:	bf0a      	itet	eq
 801735e:	3102      	addeq	r1, #2
 8017360:	3101      	addne	r1, #1
 8017362:	9105      	streq	r1, [sp, #20]
 8017364:	b2db      	uxtb	r3, r3
 8017366:	bf0a      	itet	eq
 8017368:	2100      	moveq	r1, #0
 801736a:	9105      	strne	r1, [sp, #20]
 801736c:	9104      	streq	r1, [sp, #16]
 801736e:	4313      	orrs	r3, r2
 8017370:	9910      	ldr	r1, [sp, #64]	@ 0x40
 8017372:	b29a      	uxth	r2, r3
 8017374:	4291      	cmp	r1, r2
 8017376:	d30a      	bcc.n	801738e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d2>
 8017378:	f88b 3804 	strb.w	r3, [fp, #2052]	@ 0x804
 801737c:	2301      	movs	r3, #1
 801737e:	9907      	ldr	r1, [sp, #28]
 8017380:	f5b1 7f00 	cmp.w	r1, #512	@ 0x200
 8017384:	d30f      	bcc.n	80173a6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1ea>
 8017386:	2100      	movs	r1, #0
 8017388:	9301      	str	r3, [sp, #4]
 801738a:	9103      	str	r1, [sp, #12]
 801738c:	e032      	b.n	80173f4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x238>
 801738e:	9b07      	ldr	r3, [sp, #28]
 8017390:	429a      	cmp	r2, r3
 8017392:	d318      	bcc.n	80173c6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x20a>
 8017394:	9b01      	ldr	r3, [sp, #4]
 8017396:	f89b 1804 	ldrb.w	r1, [fp, #2052]	@ 0x804
 801739a:	445b      	add	r3, fp
 801739c:	f883 1804 	strb.w	r1, [r3, #2052]	@ 0x804
 80173a0:	9b01      	ldr	r3, [sp, #4]
 80173a2:	3301      	adds	r3, #1
 80173a4:	b29b      	uxth	r3, r3
 80173a6:	9907      	ldr	r1, [sp, #28]
 80173a8:	f89b 0804 	ldrb.w	r0, [fp, #2052]	@ 0x804
 80173ac:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
 80173b0:	7108      	strb	r0, [r1, #4]
 80173b2:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 80173b4:	80c8      	strh	r0, [r1, #6]
 80173b6:	9801      	ldr	r0, [sp, #4]
 80173b8:	3001      	adds	r0, #1
 80173ba:	7148      	strb	r0, [r1, #5]
 80173bc:	9907      	ldr	r1, [sp, #28]
 80173be:	3101      	adds	r1, #1
 80173c0:	b289      	uxth	r1, r1
 80173c2:	9107      	str	r1, [sp, #28]
 80173c4:	e7df      	b.n	8017386 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1ca>
 80173c6:	eb0b 0382 	add.w	r3, fp, r2, lsl #2
 80173ca:	4611      	mov	r1, r2
 80173cc:	795b      	ldrb	r3, [r3, #5]
 80173ce:	f603 0004 	addw	r0, r3, #2052	@ 0x804
 80173d2:	4458      	add	r0, fp
 80173d4:	9e17      	ldr	r6, [sp, #92]	@ 0x5c
 80173d6:	4406      	add	r6, r0
 80173d8:	2e00      	cmp	r6, #0
 80173da:	dd06      	ble.n	80173ea <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x22e>
 80173dc:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
 80173e0:	790e      	ldrb	r6, [r1, #4]
 80173e2:	f800 6d01 	strb.w	r6, [r0, #-1]!
 80173e6:	88c9      	ldrh	r1, [r1, #6]
 80173e8:	e7f4      	b.n	80173d4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x218>
 80173ea:	f88b 1804 	strb.w	r1, [fp, #2052]	@ 0x804
 80173ee:	b29b      	uxth	r3, r3
 80173f0:	e7c5      	b.n	801737e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1c2>
 80173f2:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 80173f4:	920b      	str	r2, [sp, #44]	@ 0x2c
 80173f6:	4621      	mov	r1, r4
 80173f8:	469e      	mov	lr, r3
 80173fa:	e78f      	b.n	801731c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x160>
 80173fc:	9a03      	ldr	r2, [sp, #12]
 80173fe:	f8bd 4018 	ldrh.w	r4, [sp, #24]
 8017402:	442a      	add	r2, r5
 8017404:	ebae 0305 	sub.w	r3, lr, r5
 8017408:	b292      	uxth	r2, r2
 801740a:	b29b      	uxth	r3, r3
 801740c:	9203      	str	r2, [sp, #12]
 801740e:	2500      	movs	r5, #0
 8017410:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8017412:	4542      	cmp	r2, r8
 8017414:	d88e      	bhi.n	8017334 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x178>
 8017416:	4621      	mov	r1, r4
 8017418:	e74e      	b.n	80172b8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xfc>
 801741a:	458e      	cmp	lr, r1
 801741c:	bf29      	itett	cs
 801741e:	ebae 0301 	subcs.w	r3, lr, r1
 8017422:	eba1 040e 	subcc.w	r4, r1, lr
 8017426:	b29b      	uxthcs	r3, r3
 8017428:	910c      	strcs	r1, [sp, #48]	@ 0x30
 801742a:	bf2f      	iteee	cs
 801742c:	462c      	movcs	r4, r5
 801742e:	b2a4      	uxthcc	r4, r4
 8017430:	f8cd e030 	strcc.w	lr, [sp, #48]	@ 0x30
 8017434:	462b      	movcc	r3, r5
 8017436:	f04f 0900 	mov.w	r9, #0
 801743a:	9a03      	ldr	r2, [sp, #12]
 801743c:	980c      	ldr	r0, [sp, #48]	@ 0x30
 801743e:	444a      	add	r2, r9
 8017440:	4548      	cmp	r0, r9
 8017442:	b292      	uxth	r2, r2
 8017444:	d074      	beq.n	8017530 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x374>
 8017446:	445a      	add	r2, fp
 8017448:	2004      	movs	r0, #4
 801744a:	4605      	mov	r5, r0
 801744c:	f892 2804 	ldrb.w	r2, [r2, #2052]	@ 0x804
 8017450:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8017452:	fb15 0202 	smlabb	r2, r5, r2, r0
 8017456:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8017458:	5880      	ldr	r0, [r0, r2]
 801745a:	ea5f 6a10 	movs.w	sl, r0, lsr #24
 801745e:	d014      	beq.n	801748a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2ce>
 8017460:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 8017464:	ea4f 2510 	mov.w	r5, r0, lsr #8
 8017468:	d112      	bne.n	8017490 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d4>
 801746a:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 801746c:	2aff      	cmp	r2, #255	@ 0xff
 801746e:	d10f      	bne.n	8017490 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d4>
 8017470:	0942      	lsrs	r2, r0, #5
 8017472:	f425 65ff 	bic.w	r5, r5, #2040	@ 0x7f8
 8017476:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801747a:	f025 0507 	bic.w	r5, r5, #7
 801747e:	4315      	orrs	r5, r2
 8017480:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 8017484:	4305      	orrs	r5, r0
 8017486:	f828 5019 	strh.w	r5, [r8, r9, lsl #1]
 801748a:	f109 0901 	add.w	r9, r9, #1
 801748e:	e7d4      	b.n	801743a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x27e>
 8017490:	f838 c019 	ldrh.w	ip, [r8, r9, lsl #1]
 8017494:	ea4f 06ec 	mov.w	r6, ip, asr #3
 8017498:	f006 02fc 	and.w	r2, r6, #252	@ 0xfc
 801749c:	9215      	str	r2, [sp, #84]	@ 0x54
 801749e:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 80174a0:	fb02 fa0a 	mul.w	sl, r2, sl
 80174a4:	f10a 0201 	add.w	r2, sl, #1
 80174a8:	eb02 222a 	add.w	r2, r2, sl, asr #8
 80174ac:	ea4f 272c 	mov.w	r7, ip, asr #8
 80174b0:	1212      	asrs	r2, r2, #8
 80174b2:	fa1f fa82 	uxth.w	sl, r2
 80174b6:	f3c0 4607 	ubfx	r6, r0, #16, #8
 80174ba:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 80174be:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80174c2:	43d2      	mvns	r2, r2
 80174c4:	b2d2      	uxtb	r2, r2
 80174c6:	fb16 f60a 	smulbb	r6, r6, sl
 80174ca:	fa5f fc8c 	uxtb.w	ip, ip
 80174ce:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 80174d2:	b2c0      	uxtb	r0, r0
 80174d4:	fb07 6702 	mla	r7, r7, r2, r6
 80174d8:	ea4c 1c5c 	orr.w	ip, ip, ip, lsr #5
 80174dc:	9e15      	ldr	r6, [sp, #84]	@ 0x54
 80174de:	fb10 f00a 	smulbb	r0, r0, sl
 80174e2:	fb0c 0002 	mla	r0, ip, r2, r0
 80174e6:	b2ed      	uxtb	r5, r5
 80174e8:	b2bf      	uxth	r7, r7
 80174ea:	fb15 f50a 	smulbb	r5, r5, sl
 80174ee:	b280      	uxth	r0, r0
 80174f0:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 80174f4:	fb06 5602 	mla	r6, r6, r2, r5
 80174f8:	1c7a      	adds	r2, r7, #1
 80174fa:	1c45      	adds	r5, r0, #1
 80174fc:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8017500:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8017504:	b2b6      	uxth	r6, r6
 8017506:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801750a:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 801750e:	432f      	orrs	r7, r5
 8017510:	1c75      	adds	r5, r6, #1
 8017512:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 8017516:	096d      	lsrs	r5, r5, #5
 8017518:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801751c:	432f      	orrs	r7, r5
 801751e:	f828 7019 	strh.w	r7, [r8, r9, lsl #1]
 8017522:	e7b2      	b.n	801748a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2ce>
 8017524:	20014044 	.word	0x20014044
 8017528:	2001403c 	.word	0x2001403c
 801752c:	fffff7fb 	.word	0xfffff7fb
 8017530:	9203      	str	r2, [sp, #12]
 8017532:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 8017534:	458e      	cmp	lr, r1
 8017536:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 801753a:	f4ff af68 	bcc.w	801740e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x252>
 801753e:	9a16      	ldr	r2, [sp, #88]	@ 0x58
 8017540:	9906      	ldr	r1, [sp, #24]
 8017542:	8812      	ldrh	r2, [r2, #0]
 8017544:	1a52      	subs	r2, r2, r1
 8017546:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 801754a:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 801754c:	9914      	ldr	r1, [sp, #80]	@ 0x50
 801754e:	3201      	adds	r2, #1
 8017550:	428a      	cmp	r2, r1
 8017552:	9209      	str	r2, [sp, #36]	@ 0x24
 8017554:	d111      	bne.n	801757a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3be>
 8017556:	f8bd 5068 	ldrh.w	r5, [sp, #104]	@ 0x68
 801755a:	f8bd 9060 	ldrh.w	r9, [sp, #96]	@ 0x60
 801755e:	9b06      	ldr	r3, [sp, #24]
 8017560:	eba5 0509 	sub.w	r5, r5, r9
 8017564:	b2ad      	uxth	r5, r5
 8017566:	2d00      	cmp	r5, #0
 8017568:	bf08      	it	eq
 801756a:	4619      	moveq	r1, r3
 801756c:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801756e:	bf18      	it	ne
 8017570:	2100      	movne	r1, #0
 8017572:	3301      	adds	r3, #1
 8017574:	930d      	str	r3, [sp, #52]	@ 0x34
 8017576:	b289      	uxth	r1, r1
 8017578:	e695      	b.n	80172a6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xea>
 801757a:	f8bd 4018 	ldrh.w	r4, [sp, #24]
 801757e:	f8bd 5064 	ldrh.w	r5, [sp, #100]	@ 0x64
 8017582:	1b2d      	subs	r5, r5, r4
 8017584:	b2ad      	uxth	r5, r5
 8017586:	2d00      	cmp	r5, #0
 8017588:	bf18      	it	ne
 801758a:	2400      	movne	r4, #0
 801758c:	e740      	b.n	8017410 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x254>
 801758e:	4b04      	ldr	r3, [pc, #16]	@ (80175a0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3e4>)
 8017590:	6818      	ldr	r0, [r3, #0]
 8017592:	6803      	ldr	r3, [r0, #0]
 8017594:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8017596:	4798      	blx	r3
 8017598:	b01d      	add	sp, #116	@ 0x74
 801759a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801759e:	bf00      	nop
 80175a0:	20014044 	.word	0x20014044

080175a4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 80175a4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80175a8:	b09f      	sub	sp, #124	@ 0x7c
 80175aa:	e9cd 1213 	strd	r1, r2, [sp, #76]	@ 0x4c
 80175ae:	f89d 20a4 	ldrb.w	r2, [sp, #164]	@ 0xa4
 80175b2:	920a      	str	r2, [sp, #40]	@ 0x28
 80175b4:	461d      	mov	r5, r3
 80175b6:	4604      	mov	r4, r0
 80175b8:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 80175ba:	2a00      	cmp	r2, #0
 80175bc:	f000 81fa 	beq.w	80179b4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x410>
 80175c0:	6828      	ldr	r0, [r5, #0]
 80175c2:	6869      	ldr	r1, [r5, #4]
 80175c4:	aa1a      	add	r2, sp, #104	@ 0x68
 80175c6:	c203      	stmia	r2!, {r0, r1}
 80175c8:	6818      	ldr	r0, [r3, #0]
 80175ca:	6859      	ldr	r1, [r3, #4]
 80175cc:	aa1c      	add	r2, sp, #112	@ 0x70
 80175ce:	c203      	stmia	r2!, {r0, r1}
 80175d0:	a81a      	add	r0, sp, #104	@ 0x68
 80175d2:	f7f7 ff6d 	bl	800f4b0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80175d6:	4629      	mov	r1, r5
 80175d8:	a81c      	add	r0, sp, #112	@ 0x70
 80175da:	f7f7 ff91 	bl	800f500 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80175de:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	@ 0x6c
 80175e2:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	@ 0x6e
 80175e6:	f9bd 7076 	ldrsh.w	r7, [sp, #118]	@ 0x76
 80175ea:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 80175ee:	bfd7      	itett	le
 80175f0:	b29a      	uxthle	r2, r3
 80175f2:	2201      	movgt	r2, #1
 80175f4:	f44f 6180 	movle.w	r1, #1024	@ 0x400
 80175f8:	fb91 f2f2 	sdivle	r2, r1, r2
 80175fc:	9201      	str	r2, [sp, #4]
 80175fe:	9801      	ldr	r0, [sp, #4]
 8017600:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	@ 0x72
 8017604:	fb92 f0f0 	sdiv	r0, r2, r0
 8017608:	b280      	uxth	r0, r0
 801760a:	9010      	str	r0, [sp, #64]	@ 0x40
 801760c:	9901      	ldr	r1, [sp, #4]
 801760e:	9801      	ldr	r0, [sp, #4]
 8017610:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 8017612:	440e      	add	r6, r1
 8017614:	fb05 2510 	mls	r5, r5, r0, r2
 8017618:	fb15 f503 	smulbb	r5, r5, r3
 801761c:	3e01      	subs	r6, #1
 801761e:	f8bd 3068 	ldrh.w	r3, [sp, #104]	@ 0x68
 8017622:	fb96 f6f1 	sdiv	r6, r6, r1
 8017626:	f8bd 1070 	ldrh.w	r1, [sp, #112]	@ 0x70
 801762a:	440d      	add	r5, r1
 801762c:	4419      	add	r1, r3
 801762e:	f8bd 306a 	ldrh.w	r3, [sp, #106]	@ 0x6a
 8017632:	f8ad 1070 	strh.w	r1, [sp, #112]	@ 0x70
 8017636:	441a      	add	r2, r3
 8017638:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	@ 0x74
 801763c:	9304      	str	r3, [sp, #16]
 801763e:	4b96      	ldr	r3, [pc, #600]	@ (8017898 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2f4>)
 8017640:	f8ad 2072 	strh.w	r2, [sp, #114]	@ 0x72
 8017644:	6818      	ldr	r0, [r3, #0]
 8017646:	6803      	ldr	r3, [r0, #0]
 8017648:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801764a:	4798      	blx	r3
 801764c:	4b93      	ldr	r3, [pc, #588]	@ (801789c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2f8>)
 801764e:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	@ 0x72
 8017652:	881a      	ldrh	r2, [r3, #0]
 8017654:	f9bd c070 	ldrsh.w	ip, [sp, #112]	@ 0x70
 8017658:	9318      	str	r3, [sp, #96]	@ 0x60
 801765a:	fb02 c101 	mla	r1, r2, r1, ip
 801765e:	eb00 0b41 	add.w	fp, r0, r1, lsl #1
 8017662:	4357      	muls	r7, r2
 8017664:	eb0b 0247 	add.w	r2, fp, r7, lsl #1
 8017668:	3601      	adds	r6, #1
 801766a:	920b      	str	r2, [sp, #44]	@ 0x2c
 801766c:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801766e:	4b8c      	ldr	r3, [pc, #560]	@ (80178a0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2fc>)
 8017670:	b2b6      	uxth	r6, r6
 8017672:	eb02 0686 	add.w	r6, r2, r6, lsl #2
 8017676:	1d32      	adds	r2, r6, #4
 8017678:	9206      	str	r2, [sp, #24]
 801767a:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 801767c:	43d2      	mvns	r2, r2
 801767e:	b2d2      	uxtb	r2, r2
 8017680:	b2ad      	uxth	r5, r5
 8017682:	9215      	str	r2, [sp, #84]	@ 0x54
 8017684:	9a04      	ldr	r2, [sp, #16]
 8017686:	2d00      	cmp	r5, #0
 8017688:	bf0c      	ite	eq
 801768a:	4611      	moveq	r1, r2
 801768c:	2100      	movne	r1, #0
 801768e:	2200      	movs	r2, #0
 8017690:	1b1b      	subs	r3, r3, r4
 8017692:	b289      	uxth	r1, r1
 8017694:	920d      	str	r2, [sp, #52]	@ 0x34
 8017696:	9319      	str	r3, [sp, #100]	@ 0x64
 8017698:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 801769a:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801769c:	fa12 f383 	uxtah	r3, r2, r3
 80176a0:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 80176a2:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 80176a6:	3304      	adds	r3, #4
 80176a8:	9307      	str	r3, [sp, #28]
 80176aa:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 80176ac:	455b      	cmp	r3, fp
 80176ae:	f240 817c 	bls.w	80179aa <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x406>
 80176b2:	9a01      	ldr	r2, [sp, #4]
 80176b4:	f8bd 306c 	ldrh.w	r3, [sp, #108]	@ 0x6c
 80176b8:	fbb5 f3f3 	udiv	r3, r5, r3
 80176bc:	1ad3      	subs	r3, r2, r3
 80176be:	b29b      	uxth	r3, r3
 80176c0:	9316      	str	r3, [sp, #88]	@ 0x58
 80176c2:	9b07      	ldr	r3, [sp, #28]
 80176c4:	9807      	ldr	r0, [sp, #28]
 80176c6:	785a      	ldrb	r2, [r3, #1]
 80176c8:	789b      	ldrb	r3, [r3, #2]
 80176ca:	7800      	ldrb	r0, [r0, #0]
 80176cc:	9011      	str	r0, [sp, #68]	@ 0x44
 80176ce:	021b      	lsls	r3, r3, #8
 80176d0:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 80176d4:	9a07      	ldr	r2, [sp, #28]
 80176d6:	78d2      	ldrb	r2, [r2, #3]
 80176d8:	4313      	orrs	r3, r2
 80176da:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 80176dc:	3001      	adds	r0, #1
 80176de:	441a      	add	r2, r3
 80176e0:	9005      	str	r0, [sp, #20]
 80176e2:	1c50      	adds	r0, r2, #1
 80176e4:	9003      	str	r0, [sp, #12]
 80176e6:	7852      	ldrb	r2, [r2, #1]
 80176e8:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 80176ea:	0212      	lsls	r2, r2, #8
 80176ec:	5cc3      	ldrb	r3, [r0, r3]
 80176ee:	f402 72ff 	and.w	r2, r2, #510	@ 0x1fe
 80176f2:	431a      	orrs	r2, r3
 80176f4:	b293      	uxth	r3, r2
 80176f6:	930c      	str	r3, [sp, #48]	@ 0x30
 80176f8:	2300      	movs	r3, #0
 80176fa:	f884 2804 	strb.w	r2, [r4, #2052]	@ 0x804
 80176fe:	9308      	str	r3, [sp, #32]
 8017700:	461a      	mov	r2, r3
 8017702:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 8017706:	930e      	str	r3, [sp, #56]	@ 0x38
 8017708:	f04f 0801 	mov.w	r8, #1
 801770c:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
 8017710:	f8cd 8008 	str.w	r8, [sp, #8]
 8017714:	46c4      	mov	ip, r8
 8017716:	930f      	str	r3, [sp, #60]	@ 0x3c
 8017718:	2d00      	cmp	r5, #0
 801771a:	d07c      	beq.n	8017816 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x272>
 801771c:	45ac      	cmp	ip, r5
 801771e:	d26c      	bcs.n	80177fa <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x256>
 8017720:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8017722:	eba5 050c 	sub.w	r5, r5, ip
 8017726:	455b      	cmp	r3, fp
 8017728:	b2ad      	uxth	r5, r5
 801772a:	4608      	mov	r0, r1
 801772c:	d802      	bhi.n	8017734 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x190>
 801772e:	e070      	b.n	8017812 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x26e>
 8017730:	2b00      	cmp	r3, #0
 8017732:	d15c      	bne.n	80177ee <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24a>
 8017734:	9b03      	ldr	r3, [sp, #12]
 8017736:	9a02      	ldr	r2, [sp, #8]
 8017738:	785b      	ldrb	r3, [r3, #1]
 801773a:	9902      	ldr	r1, [sp, #8]
 801773c:	f1c2 0207 	rsb	r2, r2, #7
 8017740:	4093      	lsls	r3, r2
 8017742:	005b      	lsls	r3, r3, #1
 8017744:	f403 72ff 	and.w	r2, r3, #510	@ 0x1fe
 8017748:	9b03      	ldr	r3, [sp, #12]
 801774a:	781b      	ldrb	r3, [r3, #0]
 801774c:	410b      	asrs	r3, r1
 801774e:	3101      	adds	r1, #1
 8017750:	b2c9      	uxtb	r1, r1
 8017752:	2908      	cmp	r1, #8
 8017754:	9102      	str	r1, [sp, #8]
 8017756:	9903      	ldr	r1, [sp, #12]
 8017758:	bf0a      	itet	eq
 801775a:	3102      	addeq	r1, #2
 801775c:	3101      	addne	r1, #1
 801775e:	9103      	streq	r1, [sp, #12]
 8017760:	b2db      	uxtb	r3, r3
 8017762:	bf0a      	itet	eq
 8017764:	2100      	moveq	r1, #0
 8017766:	9103      	strne	r1, [sp, #12]
 8017768:	9102      	streq	r1, [sp, #8]
 801776a:	4313      	orrs	r3, r2
 801776c:	9911      	ldr	r1, [sp, #68]	@ 0x44
 801776e:	b29a      	uxth	r2, r3
 8017770:	4291      	cmp	r1, r2
 8017772:	d30a      	bcc.n	801778a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1e6>
 8017774:	f884 3804 	strb.w	r3, [r4, #2052]	@ 0x804
 8017778:	2301      	movs	r3, #1
 801777a:	9905      	ldr	r1, [sp, #20]
 801777c:	f5b1 7f00 	cmp.w	r1, #512	@ 0x200
 8017780:	d30f      	bcc.n	80177a2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1fe>
 8017782:	2100      	movs	r1, #0
 8017784:	4698      	mov	r8, r3
 8017786:	9100      	str	r1, [sp, #0]
 8017788:	e032      	b.n	80177f0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24c>
 801778a:	9b05      	ldr	r3, [sp, #20]
 801778c:	429a      	cmp	r2, r3
 801778e:	d318      	bcc.n	80177c2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21e>
 8017790:	eb04 0308 	add.w	r3, r4, r8
 8017794:	f894 1804 	ldrb.w	r1, [r4, #2052]	@ 0x804
 8017798:	f883 1804 	strb.w	r1, [r3, #2052]	@ 0x804
 801779c:	f108 0301 	add.w	r3, r8, #1
 80177a0:	b29b      	uxth	r3, r3
 80177a2:	9905      	ldr	r1, [sp, #20]
 80177a4:	f894 6804 	ldrb.w	r6, [r4, #2052]	@ 0x804
 80177a8:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 80177ac:	710e      	strb	r6, [r1, #4]
 80177ae:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 80177b0:	80ce      	strh	r6, [r1, #6]
 80177b2:	f108 0601 	add.w	r6, r8, #1
 80177b6:	714e      	strb	r6, [r1, #5]
 80177b8:	9905      	ldr	r1, [sp, #20]
 80177ba:	3101      	adds	r1, #1
 80177bc:	b289      	uxth	r1, r1
 80177be:	9105      	str	r1, [sp, #20]
 80177c0:	e7df      	b.n	8017782 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1de>
 80177c2:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 80177c6:	4611      	mov	r1, r2
 80177c8:	795b      	ldrb	r3, [r3, #5]
 80177ca:	f603 0604 	addw	r6, r3, #2052	@ 0x804
 80177ce:	4426      	add	r6, r4
 80177d0:	9f19      	ldr	r7, [sp, #100]	@ 0x64
 80177d2:	4437      	add	r7, r6
 80177d4:	2f00      	cmp	r7, #0
 80177d6:	dd06      	ble.n	80177e6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x242>
 80177d8:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 80177dc:	790f      	ldrb	r7, [r1, #4]
 80177de:	f806 7d01 	strb.w	r7, [r6, #-1]!
 80177e2:	88c9      	ldrh	r1, [r1, #6]
 80177e4:	e7f4      	b.n	80177d0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x22c>
 80177e6:	f884 1804 	strb.w	r1, [r4, #2052]	@ 0x804
 80177ea:	b29b      	uxth	r3, r3
 80177ec:	e7c5      	b.n	801777a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d6>
 80177ee:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 80177f0:	920c      	str	r2, [sp, #48]	@ 0x30
 80177f2:	4601      	mov	r1, r0
 80177f4:	9a00      	ldr	r2, [sp, #0]
 80177f6:	469c      	mov	ip, r3
 80177f8:	e78e      	b.n	8017718 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x174>
 80177fa:	1957      	adds	r7, r2, r5
 80177fc:	ebac 0305 	sub.w	r3, ip, r5
 8017800:	b2ba      	uxth	r2, r7
 8017802:	f8bd 0010 	ldrh.w	r0, [sp, #16]
 8017806:	9200      	str	r2, [sp, #0]
 8017808:	b29b      	uxth	r3, r3
 801780a:	2500      	movs	r5, #0
 801780c:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 801780e:	455a      	cmp	r2, fp
 8017810:	d88e      	bhi.n	8017730 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x18c>
 8017812:	4601      	mov	r1, r0
 8017814:	e749      	b.n	80176aa <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x106>
 8017816:	458c      	cmp	ip, r1
 8017818:	bf2c      	ite	cs
 801781a:	4628      	movcs	r0, r5
 801781c:	462b      	movcc	r3, r5
 801781e:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
 8017820:	bf27      	ittee	cs
 8017822:	9109      	strcs	r1, [sp, #36]	@ 0x24
 8017824:	ebac 0301 	subcs.w	r3, ip, r1
 8017828:	eba1 000c 	subcc.w	r0, r1, ip
 801782c:	f8cd c024 	strcc.w	ip, [sp, #36]	@ 0x24
 8017830:	bf2c      	ite	cs
 8017832:	b29b      	uxthcs	r3, r3
 8017834:	b280      	uxthcc	r0, r0
 8017836:	2dff      	cmp	r5, #255	@ 0xff
 8017838:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 801783a:	eb02 0705 	add.w	r7, r2, r5
 801783e:	b2bd      	uxth	r5, r7
 8017840:	9500      	str	r5, [sp, #0]
 8017842:	d12f      	bne.n	80178a4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x300>
 8017844:	465e      	mov	r6, fp
 8017846:	9d00      	ldr	r5, [sp, #0]
 8017848:	42aa      	cmp	r2, r5
 801784a:	f040 8084 	bne.w	8017956 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3b2>
 801784e:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8017850:	458c      	cmp	ip, r1
 8017852:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
 8017856:	d3d8      	bcc.n	801780a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x266>
 8017858:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 801785a:	9904      	ldr	r1, [sp, #16]
 801785c:	8812      	ldrh	r2, [r2, #0]
 801785e:	1a52      	subs	r2, r2, r1
 8017860:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
 8017864:	9a08      	ldr	r2, [sp, #32]
 8017866:	9916      	ldr	r1, [sp, #88]	@ 0x58
 8017868:	3201      	adds	r2, #1
 801786a:	428a      	cmp	r2, r1
 801786c:	9208      	str	r2, [sp, #32]
 801786e:	f040 8092 	bne.w	8017996 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3f2>
 8017872:	f8bd 5070 	ldrh.w	r5, [sp, #112]	@ 0x70
 8017876:	f8bd c068 	ldrh.w	ip, [sp, #104]	@ 0x68
 801787a:	9b04      	ldr	r3, [sp, #16]
 801787c:	eba5 050c 	sub.w	r5, r5, ip
 8017880:	b2ad      	uxth	r5, r5
 8017882:	2d00      	cmp	r5, #0
 8017884:	bf08      	it	eq
 8017886:	4619      	moveq	r1, r3
 8017888:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801788a:	bf18      	it	ne
 801788c:	2100      	movne	r1, #0
 801788e:	3301      	adds	r3, #1
 8017890:	930d      	str	r3, [sp, #52]	@ 0x34
 8017892:	b289      	uxth	r1, r1
 8017894:	e700      	b.n	8017698 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 8017896:	bf00      	nop
 8017898:	20014044 	.word	0x20014044
 801789c:	2001403c 	.word	0x2001403c
 80178a0:	fffff7fb 	.word	0xfffff7fb
 80178a4:	46d9      	mov	r9, fp
 80178a6:	9d00      	ldr	r5, [sp, #0]
 80178a8:	42aa      	cmp	r2, r5
 80178aa:	d0d0      	beq.n	801784e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2aa>
 80178ac:	1c55      	adds	r5, r2, #1
 80178ae:	4422      	add	r2, r4
 80178b0:	9517      	str	r5, [sp, #92]	@ 0x5c
 80178b2:	f892 e804 	ldrb.w	lr, [r2, #2052]	@ 0x804
 80178b6:	9a06      	ldr	r2, [sp, #24]
 80178b8:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 80178bc:	4472      	add	r2, lr
 80178be:	9212      	str	r2, [sp, #72]	@ 0x48
 80178c0:	9f12      	ldr	r7, [sp, #72]	@ 0x48
 80178c2:	f8b9 2000 	ldrh.w	r2, [r9]
 80178c6:	f897 a002 	ldrb.w	sl, [r7, #2]
 80178ca:	9f0e      	ldr	r7, [sp, #56]	@ 0x38
 80178cc:	1216      	asrs	r6, r2, #8
 80178ce:	fb1a fa07 	smulbb	sl, sl, r7
 80178d2:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 80178d6:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 80178d8:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 80178dc:	fb06 a607 	mla	r6, r6, r7, sl
 80178e0:	9f12      	ldr	r7, [sp, #72]	@ 0x48
 80178e2:	f897 a001 	ldrb.w	sl, [r7, #1]
 80178e6:	9f0e      	ldr	r7, [sp, #56]	@ 0x38
 80178e8:	10d5      	asrs	r5, r2, #3
 80178ea:	fb1a fa07 	smulbb	sl, sl, r7
 80178ee:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 80178f2:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 80178f4:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 80178f8:	fb05 a507 	mla	r5, r5, r7, sl
 80178fc:	9f06      	ldr	r7, [sp, #24]
 80178fe:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8017902:	9f0e      	ldr	r7, [sp, #56]	@ 0x38
 8017904:	00d2      	lsls	r2, r2, #3
 8017906:	fb1e fe07 	smulbb	lr, lr, r7
 801790a:	b2d2      	uxtb	r2, r2
 801790c:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 801790e:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8017912:	b2b6      	uxth	r6, r6
 8017914:	fb02 e207 	mla	r2, r2, r7, lr
 8017918:	b292      	uxth	r2, r2
 801791a:	b2ad      	uxth	r5, r5
 801791c:	f106 0a01 	add.w	sl, r6, #1
 8017920:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 8017924:	f102 0e01 	add.w	lr, r2, #1
 8017928:	f105 0a01 	add.w	sl, r5, #1
 801792c:	eb0e 2e12 	add.w	lr, lr, r2, lsr #8
 8017930:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8017934:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
 8017938:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 801793c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8017940:	ea4e 0606 	orr.w	r6, lr, r6
 8017944:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8017948:	ea46 060a 	orr.w	r6, r6, sl
 801794c:	f829 6b02 	strh.w	r6, [r9], #2
 8017950:	f8bd 205c 	ldrh.w	r2, [sp, #92]	@ 0x5c
 8017954:	e7a7      	b.n	80178a6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x302>
 8017956:	f102 0e01 	add.w	lr, r2, #1
 801795a:	4422      	add	r2, r4
 801795c:	9f06      	ldr	r7, [sp, #24]
 801795e:	f892 5804 	ldrb.w	r5, [r2, #2052]	@ 0x804
 8017962:	9a06      	ldr	r2, [sp, #24]
 8017964:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8017968:	eb02 0a05 	add.w	sl, r2, r5
 801796c:	4a13      	ldr	r2, [pc, #76]	@ (80179bc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x418>)
 801796e:	f89a 9002 	ldrb.w	r9, [sl, #2]
 8017972:	ea02 2909 	and.w	r9, r2, r9, lsl #8
 8017976:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801797a:	00d2      	lsls	r2, r2, #3
 801797c:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8017980:	ea49 0202 	orr.w	r2, r9, r2
 8017984:	f817 9005 	ldrb.w	r9, [r7, r5]
 8017988:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 801798c:	f826 2b02 	strh.w	r2, [r6], #2
 8017990:	fa1f f28e 	uxth.w	r2, lr
 8017994:	e757      	b.n	8017846 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a2>
 8017996:	f8bd 0010 	ldrh.w	r0, [sp, #16]
 801799a:	f8bd 506c 	ldrh.w	r5, [sp, #108]	@ 0x6c
 801799e:	1a2d      	subs	r5, r5, r0
 80179a0:	b2ad      	uxth	r5, r5
 80179a2:	2d00      	cmp	r5, #0
 80179a4:	bf18      	it	ne
 80179a6:	2000      	movne	r0, #0
 80179a8:	e730      	b.n	801780c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x268>
 80179aa:	4b05      	ldr	r3, [pc, #20]	@ (80179c0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x41c>)
 80179ac:	6818      	ldr	r0, [r3, #0]
 80179ae:	6803      	ldr	r3, [r0, #0]
 80179b0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80179b2:	4798      	blx	r3
 80179b4:	b01f      	add	sp, #124	@ 0x7c
 80179b6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80179ba:	bf00      	nop
 80179bc:	fffff800 	.word	0xfffff800
 80179c0:	20014044 	.word	0x20014044

080179c4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss>:
 80179c4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80179c8:	b091      	sub	sp, #68	@ 0x44
 80179ca:	469b      	mov	fp, r3
 80179cc:	f10d 0828 	add.w	r8, sp, #40	@ 0x28
 80179d0:	4616      	mov	r6, r2
 80179d2:	f9bd 906c 	ldrsh.w	r9, [sp, #108]	@ 0x6c
 80179d6:	f9b3 2000 	ldrsh.w	r2, [r3]
 80179da:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	@ 0x70
 80179de:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 80179e2:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
 80179e6:	4604      	mov	r4, r0
 80179e8:	460d      	mov	r5, r1
 80179ea:	4640      	mov	r0, r8
 80179ec:	4659      	mov	r1, fp
 80179ee:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
 80179f2:	f8ad 902c 	strh.w	r9, [sp, #44]	@ 0x2c
 80179f6:	f8ad 702e 	strh.w	r7, [sp, #46]	@ 0x2e
 80179fa:	f7f2 fd65 	bl	800a4c8 <_ZN8touchgfx4RectaNERKS0_>
 80179fe:	4631      	mov	r1, r6
 8017a00:	4640      	mov	r0, r8
 8017a02:	f7f2 fd61 	bl	800a4c8 <_ZN8touchgfx4RectaNERKS0_>
 8017a06:	4b74      	ldr	r3, [pc, #464]	@ (8017bd8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x214>)
 8017a08:	8818      	ldrh	r0, [r3, #0]
 8017a0a:	4b74      	ldr	r3, [pc, #464]	@ (8017bdc <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x218>)
 8017a0c:	8819      	ldrh	r1, [r3, #0]
 8017a0e:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	@ 0x28
 8017a12:	2b00      	cmp	r3, #0
 8017a14:	b202      	sxth	r2, r0
 8017a16:	b20e      	sxth	r6, r1
 8017a18:	da07      	bge.n	8017a2a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x66>
 8017a1a:	f8bd c02c 	ldrh.w	ip, [sp, #44]	@ 0x2c
 8017a1e:	4463      	add	r3, ip
 8017a20:	f8ad 302c 	strh.w	r3, [sp, #44]	@ 0x2c
 8017a24:	2300      	movs	r3, #0
 8017a26:	f8ad 3028 	strh.w	r3, [sp, #40]	@ 0x28
 8017a2a:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	@ 0x28
 8017a2e:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	@ 0x2c
 8017a32:	1ad2      	subs	r2, r2, r3
 8017a34:	4594      	cmp	ip, r2
 8017a36:	bfc4      	itt	gt
 8017a38:	1ac2      	subgt	r2, r0, r3
 8017a3a:	f8ad 202c 	strhgt.w	r2, [sp, #44]	@ 0x2c
 8017a3e:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
 8017a42:	2a00      	cmp	r2, #0
 8017a44:	da07      	bge.n	8017a56 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x92>
 8017a46:	f8bd c02e 	ldrh.w	ip, [sp, #46]	@ 0x2e
 8017a4a:	4462      	add	r2, ip
 8017a4c:	f8ad 202e 	strh.w	r2, [sp, #46]	@ 0x2e
 8017a50:	2200      	movs	r2, #0
 8017a52:	f8ad 202a 	strh.w	r2, [sp, #42]	@ 0x2a
 8017a56:	f9bd a02a 	ldrsh.w	sl, [sp, #42]	@ 0x2a
 8017a5a:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	@ 0x2e
 8017a5e:	eba6 060a 	sub.w	r6, r6, sl
 8017a62:	42b2      	cmp	r2, r6
 8017a64:	bfc4      	itt	gt
 8017a66:	eba1 020a 	subgt.w	r2, r1, sl
 8017a6a:	f8ad 202e 	strhgt.w	r2, [sp, #46]	@ 0x2e
 8017a6e:	4a5c      	ldr	r2, [pc, #368]	@ (8017be0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x21c>)
 8017a70:	7812      	ldrb	r2, [r2, #0]
 8017a72:	b9a2      	cbnz	r2, 8017a9e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xda>
 8017a74:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	@ 0x2c
 8017a78:	4286      	cmp	r6, r0
 8017a7a:	4640      	mov	r0, r8
 8017a7c:	9303      	str	r3, [sp, #12]
 8017a7e:	bf14      	ite	ne
 8017a80:	2600      	movne	r6, #0
 8017a82:	2601      	moveq	r6, #1
 8017a84:	f7f2 fd63 	bl	800a54e <_ZNK8touchgfx4Rect7isEmptyEv>
 8017a88:	9b03      	ldr	r3, [sp, #12]
 8017a8a:	b160      	cbz	r0, 8017aa6 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xe2>
 8017a8c:	2300      	movs	r3, #0
 8017a8e:	8023      	strh	r3, [r4, #0]
 8017a90:	8063      	strh	r3, [r4, #2]
 8017a92:	80a3      	strh	r3, [r4, #4]
 8017a94:	4620      	mov	r0, r4
 8017a96:	80e3      	strh	r3, [r4, #6]
 8017a98:	b011      	add	sp, #68	@ 0x44
 8017a9a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017a9e:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	@ 0x2e
 8017aa2:	428e      	cmp	r6, r1
 8017aa4:	e7e9      	b.n	8017a7a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xb6>
 8017aa6:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
 8017aaa:	9205      	str	r2, [sp, #20]
 8017aac:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	@ 0x2e
 8017ab0:	9206      	str	r2, [sp, #24]
 8017ab2:	f8bb 2000 	ldrh.w	r2, [fp]
 8017ab6:	900e      	str	r0, [sp, #56]	@ 0x38
 8017ab8:	1a9b      	subs	r3, r3, r2
 8017aba:	b21b      	sxth	r3, r3
 8017abc:	9303      	str	r3, [sp, #12]
 8017abe:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 8017ac2:	f8ad 903c 	strh.w	r9, [sp, #60]	@ 0x3c
 8017ac6:	ebaa 0a03 	sub.w	sl, sl, r3
 8017aca:	fa0f f38a 	sxth.w	r3, sl
 8017ace:	9304      	str	r3, [sp, #16]
 8017ad0:	9b03      	ldr	r3, [sp, #12]
 8017ad2:	f8ad 3030 	strh.w	r3, [sp, #48]	@ 0x30
 8017ad6:	9b04      	ldr	r3, [sp, #16]
 8017ad8:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 8017adc:	9b05      	ldr	r3, [sp, #20]
 8017ade:	f8ad 3034 	strh.w	r3, [sp, #52]	@ 0x34
 8017ae2:	a90e      	add	r1, sp, #56	@ 0x38
 8017ae4:	9b06      	ldr	r3, [sp, #24]
 8017ae6:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 8017aea:	a80c      	add	r0, sp, #48	@ 0x30
 8017aec:	f8ad 703e 	strh.w	r7, [sp, #62]	@ 0x3e
 8017af0:	f7f7 fd06 	bl	800f500 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8017af4:	4640      	mov	r0, r8
 8017af6:	f7f7 fcdb 	bl	800f4b0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8017afa:	a80e      	add	r0, sp, #56	@ 0x38
 8017afc:	f7f7 fcd8 	bl	800f4b0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8017b00:	4b38      	ldr	r3, [pc, #224]	@ (8017be4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x220>)
 8017b02:	f9bd a03c 	ldrsh.w	sl, [sp, #60]	@ 0x3c
 8017b06:	881b      	ldrh	r3, [r3, #0]
 8017b08:	9307      	str	r3, [sp, #28]
 8017b0a:	682b      	ldr	r3, [r5, #0]
 8017b0c:	f8df b0d8 	ldr.w	fp, [pc, #216]	@ 8017be8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 8017b10:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8017b12:	4628      	mov	r0, r5
 8017b14:	4798      	blx	r3
 8017b16:	f8bd 5032 	ldrh.w	r5, [sp, #50]	@ 0x32
 8017b1a:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	@ 0x30
 8017b1e:	4681      	mov	r9, r0
 8017b20:	fb1a 3305 	smlabb	r3, sl, r5, r3
 8017b24:	f8db 0000 	ldr.w	r0, [fp]
 8017b28:	9d1a      	ldr	r5, [sp, #104]	@ 0x68
 8017b2a:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 8017b2e:	6803      	ldr	r3, [r0, #0]
 8017b30:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8017b32:	4798      	blx	r3
 8017b34:	4607      	mov	r7, r0
 8017b36:	f8db 0000 	ldr.w	r0, [fp]
 8017b3a:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	@ 0x28
 8017b3e:	6803      	ldr	r3, [r0, #0]
 8017b40:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
 8017b44:	9109      	str	r1, [sp, #36]	@ 0x24
 8017b46:	9208      	str	r2, [sp, #32]
 8017b48:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8017b4a:	4798      	blx	r3
 8017b4c:	f010 0f01 	tst.w	r0, #1
 8017b50:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 8017b54:	d012      	beq.n	8017b7c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1b8>
 8017b56:	f8db 0000 	ldr.w	r0, [fp]
 8017b5a:	f9bd 2034 	ldrsh.w	r2, [sp, #52]	@ 0x34
 8017b5e:	6803      	ldr	r3, [r0, #0]
 8017b60:	9200      	str	r2, [sp, #0]
 8017b62:	6f1e      	ldr	r6, [r3, #112]	@ 0x70
 8017b64:	e898 0006 	ldmia.w	r8, {r1, r2}
 8017b68:	462b      	mov	r3, r5
 8017b6a:	47b0      	blx	r6
 8017b6c:	9b03      	ldr	r3, [sp, #12]
 8017b6e:	8023      	strh	r3, [r4, #0]
 8017b70:	9b04      	ldr	r3, [sp, #16]
 8017b72:	8063      	strh	r3, [r4, #2]
 8017b74:	9b05      	ldr	r3, [sp, #20]
 8017b76:	80a3      	strh	r3, [r4, #4]
 8017b78:	9b06      	ldr	r3, [sp, #24]
 8017b7a:	e78b      	b.n	8017a94 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xd0>
 8017b7c:	fb09 f202 	mul.w	r2, r9, r2
 8017b80:	eb02 0141 	add.w	r1, r2, r1, lsl #1
 8017b84:	440f      	add	r7, r1
 8017b86:	f9bd 3036 	ldrsh.w	r3, [sp, #54]	@ 0x36
 8017b8a:	b166      	cbz	r6, 8017ba6 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 8017b8c:	9a07      	ldr	r2, [sp, #28]
 8017b8e:	4592      	cmp	sl, r2
 8017b90:	d109      	bne.n	8017ba6 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 8017b92:	f8db 0000 	ldr.w	r0, [fp]
 8017b96:	6802      	ldr	r2, [r0, #0]
 8017b98:	fb09 f303 	mul.w	r3, r9, r3
 8017b9c:	6b96      	ldr	r6, [r2, #56]	@ 0x38
 8017b9e:	4629      	mov	r1, r5
 8017ba0:	463a      	mov	r2, r7
 8017ba2:	47b0      	blx	r6
 8017ba4:	e7e2      	b.n	8017b6c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 8017ba6:	fb0a f303 	mul.w	r3, sl, r3
 8017baa:	f8df b03c 	ldr.w	fp, [pc, #60]	@ 8017be8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 8017bae:	eb05 0843 	add.w	r8, r5, r3, lsl #1
 8017bb2:	ea4f 064a 	mov.w	r6, sl, lsl #1
 8017bb6:	4545      	cmp	r5, r8
 8017bb8:	d2d8      	bcs.n	8017b6c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 8017bba:	f8db 0000 	ldr.w	r0, [fp]
 8017bbe:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
 8017bc2:	6802      	ldr	r2, [r0, #0]
 8017bc4:	4629      	mov	r1, r5
 8017bc6:	f8d2 a038 	ldr.w	sl, [r2, #56]	@ 0x38
 8017bca:	005b      	lsls	r3, r3, #1
 8017bcc:	463a      	mov	r2, r7
 8017bce:	47d0      	blx	sl
 8017bd0:	444f      	add	r7, r9
 8017bd2:	4435      	add	r5, r6
 8017bd4:	e7ef      	b.n	8017bb6 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1f2>
 8017bd6:	bf00      	nop
 8017bd8:	20014036 	.word	0x20014036
 8017bdc:	20014038 	.word	0x20014038
 8017be0:	2001403a 	.word	0x2001403a
 8017be4:	2001403c 	.word	0x2001403c
 8017be8:	20014044 	.word	0x20014044

08017bec <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh>:
 8017bec:	b5f0      	push	{r4, r5, r6, r7, lr}
 8017bee:	4606      	mov	r6, r0
 8017bf0:	b087      	sub	sp, #28
 8017bf2:	460c      	mov	r4, r1
 8017bf4:	4617      	mov	r7, r2
 8017bf6:	461d      	mov	r5, r3
 8017bf8:	b333      	cbz	r3, 8017c48 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 8017bfa:	4608      	mov	r0, r1
 8017bfc:	f7f2 fca7 	bl	800a54e <_ZNK8touchgfx4Rect7isEmptyEv>
 8017c00:	bb10      	cbnz	r0, 8017c48 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 8017c02:	6820      	ldr	r0, [r4, #0]
 8017c04:	6861      	ldr	r1, [r4, #4]
 8017c06:	4c1c      	ldr	r4, [pc, #112]	@ (8017c78 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x8c>)
 8017c08:	ab04      	add	r3, sp, #16
 8017c0a:	c303      	stmia	r3!, {r0, r1}
 8017c0c:	a804      	add	r0, sp, #16
 8017c0e:	f7f7 fc4f 	bl	800f4b0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8017c12:	6820      	ldr	r0, [r4, #0]
 8017c14:	6803      	ldr	r3, [r0, #0]
 8017c16:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8017c18:	4798      	blx	r3
 8017c1a:	2dff      	cmp	r5, #255	@ 0xff
 8017c1c:	d016      	beq.n	8017c4c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x60>
 8017c1e:	f010 0f08 	tst.w	r0, #8
 8017c22:	6820      	ldr	r0, [r4, #0]
 8017c24:	d015      	beq.n	8017c52 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x66>
 8017c26:	2400      	movs	r4, #0
 8017c28:	6801      	ldr	r1, [r0, #0]
 8017c2a:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8017c2e:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8017c32:	e9cd 5402 	strd	r5, r4, [sp, #8]
 8017c36:	f8bd 4016 	ldrh.w	r4, [sp, #22]
 8017c3a:	9401      	str	r4, [sp, #4]
 8017c3c:	f8bd 4014 	ldrh.w	r4, [sp, #20]
 8017c40:	9400      	str	r4, [sp, #0]
 8017c42:	6e4c      	ldr	r4, [r1, #100]	@ 0x64
 8017c44:	4639      	mov	r1, r7
 8017c46:	47a0      	blx	r4
 8017c48:	b007      	add	sp, #28
 8017c4a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8017c4c:	f010 0f02 	tst.w	r0, #2
 8017c50:	e7e7      	b.n	8017c22 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x36>
 8017c52:	6803      	ldr	r3, [r0, #0]
 8017c54:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8017c56:	4798      	blx	r3
 8017c58:	4b08      	ldr	r3, [pc, #32]	@ (8017c7c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x90>)
 8017c5a:	881a      	ldrh	r2, [r3, #0]
 8017c5c:	6833      	ldr	r3, [r6, #0]
 8017c5e:	e9cd 7500 	strd	r7, r5, [sp]
 8017c62:	4601      	mov	r1, r0
 8017c64:	6a5d      	ldr	r5, [r3, #36]	@ 0x24
 8017c66:	4630      	mov	r0, r6
 8017c68:	ab04      	add	r3, sp, #16
 8017c6a:	47a8      	blx	r5
 8017c6c:	6820      	ldr	r0, [r4, #0]
 8017c6e:	6803      	ldr	r3, [r0, #0]
 8017c70:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8017c72:	4798      	blx	r3
 8017c74:	e7e8      	b.n	8017c48 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 8017c76:	bf00      	nop
 8017c78:	20014044 	.word	0x20014044
 8017c7c:	2001403c 	.word	0x2001403c

08017c80 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh>:
 8017c80:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8017c84:	f89d 7024 	ldrb.w	r7, [sp, #36]	@ 0x24
 8017c88:	9e08      	ldr	r6, [sp, #32]
 8017c8a:	4688      	mov	r8, r1
 8017c8c:	4614      	mov	r4, r2
 8017c8e:	461d      	mov	r5, r3
 8017c90:	2f00      	cmp	r7, #0
 8017c92:	f000 80a9 	beq.w	8017de8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 8017c96:	4618      	mov	r0, r3
 8017c98:	f7f2 fc59 	bl	800a54e <_ZNK8touchgfx4Rect7isEmptyEv>
 8017c9c:	2800      	cmp	r0, #0
 8017c9e:	f040 80a3 	bne.w	8017de8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 8017ca2:	f9b5 1000 	ldrsh.w	r1, [r5]
 8017ca6:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 8017caa:	f9b5 0004 	ldrsh.w	r0, [r5, #4]
 8017cae:	f9b5 5006 	ldrsh.w	r5, [r5, #6]
 8017cb2:	fb04 1303 	mla	r3, r4, r3, r1
 8017cb6:	eb08 0143 	add.w	r1, r8, r3, lsl #1
 8017cba:	4365      	muls	r5, r4
 8017cbc:	2fff      	cmp	r7, #255	@ 0xff
 8017cbe:	eba4 0200 	sub.w	r2, r4, r0
 8017cc2:	eb01 0545 	add.w	r5, r1, r5, lsl #1
 8017cc6:	ea4f 2816 	mov.w	r8, r6, lsr #8
 8017cca:	d04a      	beq.n	8017d62 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe2>
 8017ccc:	b2bc      	uxth	r4, r7
 8017cce:	f1c7 0cff 	rsb	ip, r7, #255	@ 0xff
 8017cd2:	f3c6 4e07 	ubfx	lr, r6, #16, #8
 8017cd6:	fa5f f788 	uxtb.w	r7, r8
 8017cda:	b2f3      	uxtb	r3, r6
 8017cdc:	0040      	lsls	r0, r0, #1
 8017cde:	fb0e fe04 	mul.w	lr, lr, r4
 8017ce2:	4367      	muls	r7, r4
 8017ce4:	4363      	muls	r3, r4
 8017ce6:	ea4f 0842 	mov.w	r8, r2, lsl #1
 8017cea:	fa1f fc8c 	uxth.w	ip, ip
 8017cee:	42a9      	cmp	r1, r5
 8017cf0:	d27a      	bcs.n	8017de8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 8017cf2:	eb01 0900 	add.w	r9, r1, r0
 8017cf6:	4549      	cmp	r1, r9
 8017cf8:	d231      	bcs.n	8017d5e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xde>
 8017cfa:	880a      	ldrh	r2, [r1, #0]
 8017cfc:	1214      	asrs	r4, r2, #8
 8017cfe:	10d6      	asrs	r6, r2, #3
 8017d00:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 8017d04:	00d2      	lsls	r2, r2, #3
 8017d06:	b2d2      	uxtb	r2, r2
 8017d08:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8017d0c:	fb14 f40c 	smulbb	r4, r4, ip
 8017d10:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8017d14:	4474      	add	r4, lr
 8017d16:	fb12 f20c 	smulbb	r2, r2, ip
 8017d1a:	b2a4      	uxth	r4, r4
 8017d1c:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8017d20:	441a      	add	r2, r3
 8017d22:	b292      	uxth	r2, r2
 8017d24:	f104 0a01 	add.w	sl, r4, #1
 8017d28:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 8017d2c:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 8017d30:	fb16 f60c 	smulbb	r6, r6, ip
 8017d34:	f102 0a01 	add.w	sl, r2, #1
 8017d38:	443e      	add	r6, r7
 8017d3a:	eb0a 2212 	add.w	r2, sl, r2, lsr #8
 8017d3e:	b2b6      	uxth	r6, r6
 8017d40:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
 8017d44:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8017d48:	4322      	orrs	r2, r4
 8017d4a:	1c74      	adds	r4, r6, #1
 8017d4c:	eb04 2616 	add.w	r6, r4, r6, lsr #8
 8017d50:	0976      	lsrs	r6, r6, #5
 8017d52:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 8017d56:	4332      	orrs	r2, r6
 8017d58:	f821 2b02 	strh.w	r2, [r1], #2
 8017d5c:	e7cb      	b.n	8017cf6 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x76>
 8017d5e:	4441      	add	r1, r8
 8017d60:	e7c5      	b.n	8017cee <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x6e>
 8017d62:	4f22      	ldr	r7, [pc, #136]	@ (8017dec <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>)
 8017d64:	0973      	lsrs	r3, r6, #5
 8017d66:	ea08 0707 	and.w	r7, r8, r7
 8017d6a:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8017d6e:	433b      	orrs	r3, r7
 8017d70:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 8017d74:	4333      	orrs	r3, r6
 8017d76:	07e7      	lsls	r7, r4, #31
 8017d78:	b29b      	uxth	r3, r3
 8017d7a:	d50b      	bpl.n	8017d94 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x114>
 8017d7c:	0040      	lsls	r0, r0, #1
 8017d7e:	0052      	lsls	r2, r2, #1
 8017d80:	42a9      	cmp	r1, r5
 8017d82:	d231      	bcs.n	8017de8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 8017d84:	180c      	adds	r4, r1, r0
 8017d86:	42a1      	cmp	r1, r4
 8017d88:	d202      	bcs.n	8017d90 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x110>
 8017d8a:	f821 3b02 	strh.w	r3, [r1], #2
 8017d8e:	e7fa      	b.n	8017d86 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x106>
 8017d90:	4411      	add	r1, r2
 8017d92:	e7f5      	b.n	8017d80 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x100>
 8017d94:	078e      	lsls	r6, r1, #30
 8017d96:	d008      	beq.n	8017daa <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12a>
 8017d98:	0066      	lsls	r6, r4, #1
 8017d9a:	460a      	mov	r2, r1
 8017d9c:	42aa      	cmp	r2, r5
 8017d9e:	d202      	bcs.n	8017da6 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x126>
 8017da0:	8013      	strh	r3, [r2, #0]
 8017da2:	4432      	add	r2, r6
 8017da4:	e7fa      	b.n	8017d9c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x11c>
 8017da6:	3102      	adds	r1, #2
 8017da8:	3801      	subs	r0, #1
 8017daa:	07c2      	lsls	r2, r0, #31
 8017dac:	d50b      	bpl.n	8017dc6 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x146>
 8017dae:	f100 4200 	add.w	r2, r0, #2147483648	@ 0x80000000
 8017db2:	3a01      	subs	r2, #1
 8017db4:	eb01 0242 	add.w	r2, r1, r2, lsl #1
 8017db8:	0066      	lsls	r6, r4, #1
 8017dba:	42aa      	cmp	r2, r5
 8017dbc:	d202      	bcs.n	8017dc4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x144>
 8017dbe:	8013      	strh	r3, [r2, #0]
 8017dc0:	4432      	add	r2, r6
 8017dc2:	e7fa      	b.n	8017dba <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x13a>
 8017dc4:	3801      	subs	r0, #1
 8017dc6:	b178      	cbz	r0, 8017de8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 8017dc8:	1040      	asrs	r0, r0, #1
 8017dca:	ea43 4303 	orr.w	r3, r3, r3, lsl #16
 8017dce:	0080      	lsls	r0, r0, #2
 8017dd0:	0064      	lsls	r4, r4, #1
 8017dd2:	42a9      	cmp	r1, r5
 8017dd4:	d208      	bcs.n	8017de8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 8017dd6:	180e      	adds	r6, r1, r0
 8017dd8:	460a      	mov	r2, r1
 8017dda:	42b2      	cmp	r2, r6
 8017ddc:	d202      	bcs.n	8017de4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x164>
 8017dde:	f842 3b04 	str.w	r3, [r2], #4
 8017de2:	e7fa      	b.n	8017dda <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x15a>
 8017de4:	4421      	add	r1, r4
 8017de6:	e7f4      	b.n	8017dd2 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x152>
 8017de8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8017dec:	00fff800 	.word	0x00fff800

08017df0 <_ZN8touchgfx8LCD16bppC1Ev>:
 8017df0:	2200      	movs	r2, #0
 8017df2:	4912      	ldr	r1, [pc, #72]	@ (8017e3c <_ZN8touchgfx8LCD16bppC1Ev+0x4c>)
 8017df4:	6001      	str	r1, [r0, #0]
 8017df6:	e9c0 2201 	strd	r2, r2, [r0, #4]
 8017dfa:	e9c0 2203 	strd	r2, r2, [r0, #12]
 8017dfe:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8017e02:	e9c0 2207 	strd	r2, r2, [r0, #28]
 8017e06:	e9c0 2209 	strd	r2, r2, [r0, #36]	@ 0x24
 8017e0a:	e9c0 220b 	strd	r2, r2, [r0, #44]	@ 0x2c
 8017e0e:	e9c0 220d 	strd	r2, r2, [r0, #52]	@ 0x34
 8017e12:	e9c0 220f 	strd	r2, r2, [r0, #60]	@ 0x3c
 8017e16:	e9c0 2211 	strd	r2, r2, [r0, #68]	@ 0x44
 8017e1a:	e9c0 2213 	strd	r2, r2, [r0, #76]	@ 0x4c
 8017e1e:	e9c0 2215 	strd	r2, r2, [r0, #84]	@ 0x54
 8017e22:	e9c0 2217 	strd	r2, r2, [r0, #92]	@ 0x5c
 8017e26:	e9c0 2219 	strd	r2, r2, [r0, #100]	@ 0x64
 8017e2a:	e9c0 221b 	strd	r2, r2, [r0, #108]	@ 0x6c
 8017e2e:	e9c0 221d 	strd	r2, r2, [r0, #116]	@ 0x74
 8017e32:	e9c0 221f 	strd	r2, r2, [r0, #124]	@ 0x7c
 8017e36:	e9c0 2221 	strd	r2, r2, [r0, #132]	@ 0x84
 8017e3a:	4770      	bx	lr
 8017e3c:	08025500 	.word	0x08025500

08017e40 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>:
 8017e40:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017e44:	460d      	mov	r5, r1
 8017e46:	b08d      	sub	sp, #52	@ 0x34
 8017e48:	4604      	mov	r4, r0
 8017e4a:	6808      	ldr	r0, [r1, #0]
 8017e4c:	6849      	ldr	r1, [r1, #4]
 8017e4e:	4699      	mov	r9, r3
 8017e50:	ab08      	add	r3, sp, #32
 8017e52:	c303      	stmia	r3!, {r0, r1}
 8017e54:	6810      	ldr	r0, [r2, #0]
 8017e56:	6851      	ldr	r1, [r2, #4]
 8017e58:	ab0a      	add	r3, sp, #40	@ 0x28
 8017e5a:	c303      	stmia	r3!, {r0, r1}
 8017e5c:	a808      	add	r0, sp, #32
 8017e5e:	f7f7 fb27 	bl	800f4b0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8017e62:	4629      	mov	r1, r5
 8017e64:	a80a      	add	r0, sp, #40	@ 0x28
 8017e66:	f7f7 fb4b 	bl	800f500 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8017e6a:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	@ 0x28
 8017e6e:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	@ 0x2a
 8017e72:	f8bd 1024 	ldrh.w	r1, [sp, #36]	@ 0x24
 8017e76:	4d63      	ldr	r5, [pc, #396]	@ (8018004 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 8017e78:	f9bd 802c 	ldrsh.w	r8, [sp, #44]	@ 0x2c
 8017e7c:	6828      	ldr	r0, [r5, #0]
 8017e7e:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	@ 0x2e
 8017e82:	fb11 2103 	smlabb	r1, r1, r3, r2
 8017e86:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 8017e8a:	f8bd 1020 	ldrh.w	r1, [sp, #32]
 8017e8e:	440a      	add	r2, r1
 8017e90:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
 8017e94:	f8bd 2022 	ldrh.w	r2, [sp, #34]	@ 0x22
 8017e98:	4413      	add	r3, r2
 8017e9a:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
 8017e9e:	6803      	ldr	r3, [r0, #0]
 8017ea0:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8017ea2:	4798      	blx	r3
 8017ea4:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 8017ea8:	d119      	bne.n	8017ede <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x9e>
 8017eaa:	f010 0f20 	tst.w	r0, #32
 8017eae:	6828      	ldr	r0, [r5, #0]
 8017eb0:	d018      	beq.n	8017ee4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xa4>
 8017eb2:	2500      	movs	r5, #0
 8017eb4:	6801      	ldr	r1, [r0, #0]
 8017eb6:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 8017eba:	f8bd 2028 	ldrh.w	r2, [sp, #40]	@ 0x28
 8017ebe:	e9cd 9503 	strd	r9, r5, [sp, #12]
 8017ec2:	f8bd 5024 	ldrh.w	r5, [sp, #36]	@ 0x24
 8017ec6:	9502      	str	r5, [sp, #8]
 8017ec8:	b2b6      	uxth	r6, r6
 8017eca:	fa1f f588 	uxth.w	r5, r8
 8017ece:	9601      	str	r6, [sp, #4]
 8017ed0:	9500      	str	r5, [sp, #0]
 8017ed2:	6d4d      	ldr	r5, [r1, #84]	@ 0x54
 8017ed4:	4621      	mov	r1, r4
 8017ed6:	47a8      	blx	r5
 8017ed8:	b00d      	add	sp, #52	@ 0x34
 8017eda:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017ede:	f010 0f40 	tst.w	r0, #64	@ 0x40
 8017ee2:	e7e4      	b.n	8017eae <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x6e>
 8017ee4:	6803      	ldr	r3, [r0, #0]
 8017ee6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8017ee8:	4798      	blx	r3
 8017eea:	4947      	ldr	r1, [pc, #284]	@ (8018008 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c8>)
 8017eec:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
 8017ef0:	880b      	ldrh	r3, [r1, #0]
 8017ef2:	f9bd 5028 	ldrsh.w	r5, [sp, #40]	@ 0x28
 8017ef6:	fb03 5202 	mla	r2, r3, r2, r5
 8017efa:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8017efe:	4373      	muls	r3, r6
 8017f00:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8017f04:	9307      	str	r3, [sp, #28]
 8017f06:	ea4f 0348 	mov.w	r3, r8, lsl #1
 8017f0a:	9306      	str	r3, [sp, #24]
 8017f0c:	468a      	mov	sl, r1
 8017f0e:	9b07      	ldr	r3, [sp, #28]
 8017f10:	4298      	cmp	r0, r3
 8017f12:	d270      	bcs.n	8017ff6 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b6>
 8017f14:	9b06      	ldr	r3, [sp, #24]
 8017f16:	4621      	mov	r1, r4
 8017f18:	eb00 0b03 	add.w	fp, r0, r3
 8017f1c:	4558      	cmp	r0, fp
 8017f1e:	d25d      	bcs.n	8017fdc <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x19c>
 8017f20:	f851 4b04 	ldr.w	r4, [r1], #4
 8017f24:	0e23      	lsrs	r3, r4, #24
 8017f26:	d014      	beq.n	8017f52 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 8017f28:	2bff      	cmp	r3, #255	@ 0xff
 8017f2a:	ea4f 2c14 	mov.w	ip, r4, lsr #8
 8017f2e:	d112      	bne.n	8017f56 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 8017f30:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 8017f34:	d10f      	bne.n	8017f56 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 8017f36:	0963      	lsrs	r3, r4, #5
 8017f38:	f42c 6cff 	bic.w	ip, ip, #2040	@ 0x7f8
 8017f3c:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8017f40:	f02c 0c07 	bic.w	ip, ip, #7
 8017f44:	ea43 0c0c 	orr.w	ip, r3, ip
 8017f48:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 8017f4c:	ea4c 0404 	orr.w	r4, ip, r4
 8017f50:	8004      	strh	r4, [r0, #0]
 8017f52:	3002      	adds	r0, #2
 8017f54:	e7e2      	b.n	8017f1c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xdc>
 8017f56:	fb09 f303 	mul.w	r3, r9, r3
 8017f5a:	8807      	ldrh	r7, [r0, #0]
 8017f5c:	1c5a      	adds	r2, r3, #1
 8017f5e:	eb02 2223 	add.w	r2, r2, r3, asr #8
 8017f62:	1212      	asrs	r2, r2, #8
 8017f64:	123e      	asrs	r6, r7, #8
 8017f66:	b293      	uxth	r3, r2
 8017f68:	f3c4 4e07 	ubfx	lr, r4, #16, #8
 8017f6c:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 8017f70:	43d2      	mvns	r2, r2
 8017f72:	b2d2      	uxtb	r2, r2
 8017f74:	10fd      	asrs	r5, r7, #3
 8017f76:	fb1e fe03 	smulbb	lr, lr, r3
 8017f7a:	00ff      	lsls	r7, r7, #3
 8017f7c:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 8017f80:	fb06 e602 	mla	r6, r6, r2, lr
 8017f84:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 8017f88:	b2ff      	uxtb	r7, r7
 8017f8a:	fa5f fc8c 	uxtb.w	ip, ip
 8017f8e:	b2e4      	uxtb	r4, r4
 8017f90:	b2b6      	uxth	r6, r6
 8017f92:	fb1c fc03 	smulbb	ip, ip, r3
 8017f96:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 8017f9a:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 8017f9e:	fb14 f403 	smulbb	r4, r4, r3
 8017fa2:	fb05 c502 	mla	r5, r5, r2, ip
 8017fa6:	f106 0e01 	add.w	lr, r6, #1
 8017faa:	fb07 4702 	mla	r7, r7, r2, r4
 8017fae:	b2ad      	uxth	r5, r5
 8017fb0:	b2bf      	uxth	r7, r7
 8017fb2:	eb0e 2616 	add.w	r6, lr, r6, lsr #8
 8017fb6:	f406 4e78 	and.w	lr, r6, #63488	@ 0xf800
 8017fba:	f105 0c01 	add.w	ip, r5, #1
 8017fbe:	1c7e      	adds	r6, r7, #1
 8017fc0:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 8017fc4:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8017fc8:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8017fcc:	096d      	lsrs	r5, r5, #5
 8017fce:	ea46 060e 	orr.w	r6, r6, lr
 8017fd2:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8017fd6:	432e      	orrs	r6, r5
 8017fd8:	8006      	strh	r6, [r0, #0]
 8017fda:	e7ba      	b.n	8017f52 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 8017fdc:	f8ba 3000 	ldrh.w	r3, [sl]
 8017fe0:	f9bd 4024 	ldrsh.w	r4, [sp, #36]	@ 0x24
 8017fe4:	eba3 0308 	sub.w	r3, r3, r8
 8017fe8:	eba4 0408 	sub.w	r4, r4, r8
 8017fec:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8017ff0:	eb01 0484 	add.w	r4, r1, r4, lsl #2
 8017ff4:	e78b      	b.n	8017f0e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xce>
 8017ff6:	4b03      	ldr	r3, [pc, #12]	@ (8018004 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 8017ff8:	6818      	ldr	r0, [r3, #0]
 8017ffa:	6803      	ldr	r3, [r0, #0]
 8017ffc:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8017ffe:	4798      	blx	r3
 8018000:	e76a      	b.n	8017ed8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x98>
 8018002:	bf00      	nop
 8018004:	20014044 	.word	0x20014044
 8018008:	2001403c 	.word	0x2001403c

0801800c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>:
 801800c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8018010:	460c      	mov	r4, r1
 8018012:	b085      	sub	sp, #20
 8018014:	6810      	ldr	r0, [r2, #0]
 8018016:	6851      	ldr	r1, [r2, #4]
 8018018:	466d      	mov	r5, sp
 801801a:	c503      	stmia	r5!, {r0, r1}
 801801c:	6818      	ldr	r0, [r3, #0]
 801801e:	6859      	ldr	r1, [r3, #4]
 8018020:	4616      	mov	r6, r2
 8018022:	c503      	stmia	r5!, {r0, r1}
 8018024:	4668      	mov	r0, sp
 8018026:	f7f7 fa43 	bl	800f4b0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801802a:	4631      	mov	r1, r6
 801802c:	a802      	add	r0, sp, #8
 801802e:	f7f7 fa67 	bl	800f500 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8018032:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
 8018036:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 801803a:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 801803e:	4d28      	ldr	r5, [pc, #160]	@ (80180e0 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd4>)
 8018040:	4e28      	ldr	r6, [pc, #160]	@ (80180e4 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd8>)
 8018042:	6828      	ldr	r0, [r5, #0]
 8018044:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 8018048:	f9bd 800e 	ldrsh.w	r8, [sp, #14]
 801804c:	fb11 2103 	smlabb	r1, r1, r3, r2
 8018050:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 8018054:	f8bd 1000 	ldrh.w	r1, [sp]
 8018058:	440a      	add	r2, r1
 801805a:	f8ad 2008 	strh.w	r2, [sp, #8]
 801805e:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 8018062:	4413      	add	r3, r2
 8018064:	f8ad 300a 	strh.w	r3, [sp, #10]
 8018068:	6803      	ldr	r3, [r0, #0]
 801806a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801806c:	4798      	blx	r3
 801806e:	8833      	ldrh	r3, [r6, #0]
 8018070:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
 8018074:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 8018078:	f8df e06c 	ldr.w	lr, [pc, #108]	@ 80180e8 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xdc>
 801807c:	fb03 1202 	mla	r2, r3, r2, r1
 8018080:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8018084:	fb08 f303 	mul.w	r3, r8, r3
 8018088:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801808c:	ea4f 0c47 	mov.w	ip, r7, lsl #1
 8018090:	4298      	cmp	r0, r3
 8018092:	d21d      	bcs.n	80180d0 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xc4>
 8018094:	eb00 080c 	add.w	r8, r0, ip
 8018098:	4540      	cmp	r0, r8
 801809a:	d20f      	bcs.n	80180bc <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xb0>
 801809c:	f854 1b04 	ldr.w	r1, [r4], #4
 80180a0:	ea4f 1951 	mov.w	r9, r1, lsr #5
 80180a4:	ea0e 2211 	and.w	r2, lr, r1, lsr #8
 80180a8:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 80180ac:	ea42 0209 	orr.w	r2, r2, r9
 80180b0:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 80180b4:	430a      	orrs	r2, r1
 80180b6:	f820 2b02 	strh.w	r2, [r0], #2
 80180ba:	e7ed      	b.n	8018098 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x8c>
 80180bc:	8832      	ldrh	r2, [r6, #0]
 80180be:	1bd2      	subs	r2, r2, r7
 80180c0:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 80180c4:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
 80180c8:	1bd2      	subs	r2, r2, r7
 80180ca:	eb04 0482 	add.w	r4, r4, r2, lsl #2
 80180ce:	e7df      	b.n	8018090 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x84>
 80180d0:	6828      	ldr	r0, [r5, #0]
 80180d2:	6803      	ldr	r3, [r0, #0]
 80180d4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80180d6:	4798      	blx	r3
 80180d8:	b005      	add	sp, #20
 80180da:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80180de:	bf00      	nop
 80180e0:	20014044 	.word	0x20014044
 80180e4:	2001403c 	.word	0x2001403c
 80180e8:	fffff800 	.word	0xfffff800

080180ec <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>:
 80180ec:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80180f0:	460e      	mov	r6, r1
 80180f2:	b08e      	sub	sp, #56	@ 0x38
 80180f4:	4604      	mov	r4, r0
 80180f6:	6808      	ldr	r0, [r1, #0]
 80180f8:	6849      	ldr	r1, [r1, #4]
 80180fa:	f8df 81d8 	ldr.w	r8, [pc, #472]	@ 80182d4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>
 80180fe:	f8df 91d8 	ldr.w	r9, [pc, #472]	@ 80182d8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1ec>
 8018102:	461d      	mov	r5, r3
 8018104:	ab0a      	add	r3, sp, #40	@ 0x28
 8018106:	c303      	stmia	r3!, {r0, r1}
 8018108:	6810      	ldr	r0, [r2, #0]
 801810a:	6851      	ldr	r1, [r2, #4]
 801810c:	ab0c      	add	r3, sp, #48	@ 0x30
 801810e:	c303      	stmia	r3!, {r0, r1}
 8018110:	a80a      	add	r0, sp, #40	@ 0x28
 8018112:	f7f7 f9cd 	bl	800f4b0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8018116:	4631      	mov	r1, r6
 8018118:	a80c      	add	r0, sp, #48	@ 0x30
 801811a:	f7f7 f9f1 	bl	800f500 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801811e:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	@ 0x30
 8018122:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 8018126:	f8bd 102c 	ldrh.w	r1, [sp, #44]	@ 0x2c
 801812a:	f8d8 0000 	ldr.w	r0, [r8]
 801812e:	f9bd 7034 	ldrsh.w	r7, [sp, #52]	@ 0x34
 8018132:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	@ 0x36
 8018136:	fb11 2103 	smlabb	r1, r1, r3, r2
 801813a:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 801813e:	440c      	add	r4, r1
 8018140:	f8bd 1028 	ldrh.w	r1, [sp, #40]	@ 0x28
 8018144:	440a      	add	r2, r1
 8018146:	f8ad 2030 	strh.w	r2, [sp, #48]	@ 0x30
 801814a:	f8bd 202a 	ldrh.w	r2, [sp, #42]	@ 0x2a
 801814e:	4413      	add	r3, r2
 8018150:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 8018154:	6803      	ldr	r3, [r0, #0]
 8018156:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8018158:	4798      	blx	r3
 801815a:	2dff      	cmp	r5, #255	@ 0xff
 801815c:	d124      	bne.n	80181a8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xbc>
 801815e:	f010 0f01 	tst.w	r0, #1
 8018162:	f8d8 0000 	ldr.w	r0, [r8]
 8018166:	d022      	beq.n	80181ae <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xc2>
 8018168:	2100      	movs	r1, #0
 801816a:	f8d0 c000 	ldr.w	ip, [r0]
 801816e:	f8bd 3032 	ldrh.w	r3, [sp, #50]	@ 0x32
 8018172:	f8bd 2030 	ldrh.w	r2, [sp, #48]	@ 0x30
 8018176:	e9cd 1107 	strd	r1, r1, [sp, #28]
 801817a:	f04f 0e01 	mov.w	lr, #1
 801817e:	f8cd e018 	str.w	lr, [sp, #24]
 8018182:	f8b9 e000 	ldrh.w	lr, [r9]
 8018186:	9503      	str	r5, [sp, #12]
 8018188:	e9cd 1e04 	strd	r1, lr, [sp, #16]
 801818c:	b2b6      	uxth	r6, r6
 801818e:	f8bd 102c 	ldrh.w	r1, [sp, #44]	@ 0x2c
 8018192:	9102      	str	r1, [sp, #8]
 8018194:	b2bf      	uxth	r7, r7
 8018196:	9601      	str	r6, [sp, #4]
 8018198:	9700      	str	r7, [sp, #0]
 801819a:	f8dc 5044 	ldr.w	r5, [ip, #68]	@ 0x44
 801819e:	4621      	mov	r1, r4
 80181a0:	47a8      	blx	r5
 80181a2:	b00e      	add	sp, #56	@ 0x38
 80181a4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80181a8:	f010 0f04 	tst.w	r0, #4
 80181ac:	e7d9      	b.n	8018162 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x76>
 80181ae:	6803      	ldr	r3, [r0, #0]
 80181b0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80181b2:	4798      	blx	r3
 80181b4:	f8b9 3000 	ldrh.w	r3, [r9]
 80181b8:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
 80181bc:	f9bd 1030 	ldrsh.w	r1, [sp, #48]	@ 0x30
 80181c0:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	@ 0x2c
 80181c4:	fb03 1202 	mla	r2, r3, r2, r1
 80181c8:	ebac 0c07 	sub.w	ip, ip, r7
 80181cc:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 80181d0:	435e      	muls	r6, r3
 80181d2:	ea4f 0e47 	mov.w	lr, r7, lsl #1
 80181d6:	2dff      	cmp	r5, #255	@ 0xff
 80181d8:	eba3 0707 	sub.w	r7, r3, r7
 80181dc:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 80181e0:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 80181e4:	ea4f 0747 	mov.w	r7, r7, lsl #1
 80181e8:	d049      	beq.n	801827e <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x192>
 80181ea:	43eb      	mvns	r3, r5
 80181ec:	fa1f f985 	uxth.w	r9, r5
 80181f0:	b2db      	uxtb	r3, r3
 80181f2:	42b0      	cmp	r0, r6
 80181f4:	d266      	bcs.n	80182c4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 80181f6:	eb00 0a0e 	add.w	sl, r0, lr
 80181fa:	4550      	cmp	r0, sl
 80181fc:	4621      	mov	r1, r4
 80181fe:	f104 0403 	add.w	r4, r4, #3
 8018202:	d25b      	bcs.n	80182bc <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d0>
 8018204:	8802      	ldrh	r2, [r0, #0]
 8018206:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 801820a:	ea4f 2822 	mov.w	r8, r2, asr #8
 801820e:	f008 08f8 	and.w	r8, r8, #248	@ 0xf8
 8018212:	fb11 f109 	smulbb	r1, r1, r9
 8018216:	ea48 1858 	orr.w	r8, r8, r8, lsr #5
 801821a:	10d5      	asrs	r5, r2, #3
 801821c:	fb08 1803 	mla	r8, r8, r3, r1
 8018220:	f814 1c02 	ldrb.w	r1, [r4, #-2]
 8018224:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 8018228:	fb11 f109 	smulbb	r1, r1, r9
 801822c:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 8018230:	fb05 1503 	mla	r5, r5, r3, r1
 8018234:	00d2      	lsls	r2, r2, #3
 8018236:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 801823a:	b2d2      	uxtb	r2, r2
 801823c:	fb11 f109 	smulbb	r1, r1, r9
 8018240:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8018244:	fa1f f888 	uxth.w	r8, r8
 8018248:	fb02 1203 	mla	r2, r2, r3, r1
 801824c:	b292      	uxth	r2, r2
 801824e:	f108 0101 	add.w	r1, r8, #1
 8018252:	b2ad      	uxth	r5, r5
 8018254:	eb01 2818 	add.w	r8, r1, r8, lsr #8
 8018258:	1c51      	adds	r1, r2, #1
 801825a:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801825e:	1c69      	adds	r1, r5, #1
 8018260:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 8018264:	f408 4878 	and.w	r8, r8, #63488	@ 0xf800
 8018268:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801826c:	096d      	lsrs	r5, r5, #5
 801826e:	ea42 0208 	orr.w	r2, r2, r8
 8018272:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8018276:	432a      	orrs	r2, r5
 8018278:	f820 2b02 	strh.w	r2, [r0], #2
 801827c:	e7bd      	b.n	80181fa <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x10e>
 801827e:	4a14      	ldr	r2, [pc, #80]	@ (80182d0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e4>)
 8018280:	42b0      	cmp	r0, r6
 8018282:	d21f      	bcs.n	80182c4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 8018284:	eb00 050e 	add.w	r5, r0, lr
 8018288:	42a8      	cmp	r0, r5
 801828a:	4621      	mov	r1, r4
 801828c:	f104 0403 	add.w	r4, r4, #3
 8018290:	d210      	bcs.n	80182b4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1c8>
 8018292:	f814 3c02 	ldrb.w	r3, [r4, #-2]
 8018296:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 801829a:	00db      	lsls	r3, r3, #3
 801829c:	ea02 2101 	and.w	r1, r2, r1, lsl #8
 80182a0:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 80182a4:	430b      	orrs	r3, r1
 80182a6:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 80182aa:	ea43 03d1 	orr.w	r3, r3, r1, lsr #3
 80182ae:	f820 3b02 	strh.w	r3, [r0], #2
 80182b2:	e7e9      	b.n	8018288 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x19c>
 80182b4:	4438      	add	r0, r7
 80182b6:	eb01 040c 	add.w	r4, r1, ip
 80182ba:	e7e1      	b.n	8018280 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x194>
 80182bc:	4438      	add	r0, r7
 80182be:	eb01 040c 	add.w	r4, r1, ip
 80182c2:	e796      	b.n	80181f2 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x106>
 80182c4:	4b03      	ldr	r3, [pc, #12]	@ (80182d4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>)
 80182c6:	6818      	ldr	r0, [r3, #0]
 80182c8:	6803      	ldr	r3, [r0, #0]
 80182ca:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80182cc:	4798      	blx	r3
 80182ce:	e768      	b.n	80181a2 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xb6>
 80182d0:	fffff800 	.word	0xfffff800
 80182d4:	20014044 	.word	0x20014044
 80182d8:	2001403c 	.word	0x2001403c

080182dc <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb>:
 80182dc:	b4f0      	push	{r4, r5, r6, r7}
 80182de:	4616      	mov	r6, r2
 80182e0:	2e01      	cmp	r6, #1
 80182e2:	461c      	mov	r4, r3
 80182e4:	460d      	mov	r5, r1
 80182e6:	9a04      	ldr	r2, [sp, #16]
 80182e8:	f89d 3014 	ldrb.w	r3, [sp, #20]
 80182ec:	f89d 7018 	ldrb.w	r7, [sp, #24]
 80182f0:	d012      	beq.n	8018318 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x3c>
 80182f2:	d303      	bcc.n	80182fc <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x20>
 80182f4:	2e02      	cmp	r6, #2
 80182f6:	d00a      	beq.n	801830e <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x32>
 80182f8:	bcf0      	pop	{r4, r5, r6, r7}
 80182fa:	4770      	bx	lr
 80182fc:	6805      	ldr	r5, [r0, #0]
 80182fe:	e9cd 3704 	strd	r3, r7, [sp, #16]
 8018302:	68ed      	ldr	r5, [r5, #12]
 8018304:	4613      	mov	r3, r2
 8018306:	46ac      	mov	ip, r5
 8018308:	4622      	mov	r2, r4
 801830a:	bcf0      	pop	{r4, r5, r6, r7}
 801830c:	4760      	bx	ip
 801830e:	4621      	mov	r1, r4
 8018310:	4628      	mov	r0, r5
 8018312:	bcf0      	pop	{r4, r5, r6, r7}
 8018314:	f7ff bd94 	b.w	8017e40 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8018318:	4621      	mov	r1, r4
 801831a:	4628      	mov	r0, r5
 801831c:	bcf0      	pop	{r4, r5, r6, r7}
 801831e:	f7ff bee5 	b.w	80180ec <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
	...

08018324 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>:
 8018324:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018328:	4681      	mov	r9, r0
 801832a:	b093      	sub	sp, #76	@ 0x4c
 801832c:	6810      	ldr	r0, [r2, #0]
 801832e:	f89d a070 	ldrb.w	sl, [sp, #112]	@ 0x70
 8018332:	4f6d      	ldr	r7, [pc, #436]	@ (80184e8 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c4>)
 8018334:	4688      	mov	r8, r1
 8018336:	6851      	ldr	r1, [r2, #4]
 8018338:	ac0e      	add	r4, sp, #56	@ 0x38
 801833a:	c403      	stmia	r4!, {r0, r1}
 801833c:	6818      	ldr	r0, [r3, #0]
 801833e:	6859      	ldr	r1, [r3, #4]
 8018340:	ac10      	add	r4, sp, #64	@ 0x40
 8018342:	4616      	mov	r6, r2
 8018344:	c403      	stmia	r4!, {r0, r1}
 8018346:	a80e      	add	r0, sp, #56	@ 0x38
 8018348:	f7f7 f8b2 	bl	800f4b0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801834c:	4631      	mov	r1, r6
 801834e:	a810      	add	r0, sp, #64	@ 0x40
 8018350:	f7f7 f8d6 	bl	800f500 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8018354:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	@ 0x40
 8018358:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	@ 0x42
 801835c:	f8bd 103c 	ldrh.w	r1, [sp, #60]	@ 0x3c
 8018360:	4e62      	ldr	r6, [pc, #392]	@ (80184ec <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 8018362:	f9bd 4044 	ldrsh.w	r4, [sp, #68]	@ 0x44
 8018366:	6830      	ldr	r0, [r6, #0]
 8018368:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	@ 0x46
 801836c:	fb11 2103 	smlabb	r1, r1, r3, r2
 8018370:	4489      	add	r9, r1
 8018372:	f8bd 1038 	ldrh.w	r1, [sp, #56]	@ 0x38
 8018376:	440a      	add	r2, r1
 8018378:	f8ad 2040 	strh.w	r2, [sp, #64]	@ 0x40
 801837c:	f8bd 203a 	ldrh.w	r2, [sp, #58]	@ 0x3a
 8018380:	4413      	add	r3, r2
 8018382:	f8ad 3042 	strh.w	r3, [sp, #66]	@ 0x42
 8018386:	6803      	ldr	r3, [r0, #0]
 8018388:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 801838a:	4798      	blx	r3
 801838c:	f010 0f80 	tst.w	r0, #128	@ 0x80
 8018390:	6830      	ldr	r0, [r6, #0]
 8018392:	d01d      	beq.n	80183d0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xac>
 8018394:	2200      	movs	r2, #0
 8018396:	6801      	ldr	r1, [r0, #0]
 8018398:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
 801839c:	e9cd 2208 	strd	r2, r2, [sp, #32]
 80183a0:	220b      	movs	r2, #11
 80183a2:	9207      	str	r2, [sp, #28]
 80183a4:	883a      	ldrh	r2, [r7, #0]
 80183a6:	9206      	str	r2, [sp, #24]
 80183a8:	2201      	movs	r2, #1
 80183aa:	e9cd a204 	strd	sl, r2, [sp, #16]
 80183ae:	f8bd 203c 	ldrh.w	r2, [sp, #60]	@ 0x3c
 80183b2:	9203      	str	r2, [sp, #12]
 80183b4:	b2a4      	uxth	r4, r4
 80183b6:	f8bd 2042 	ldrh.w	r2, [sp, #66]	@ 0x42
 80183ba:	9200      	str	r2, [sp, #0]
 80183bc:	b2ad      	uxth	r5, r5
 80183be:	9502      	str	r5, [sp, #8]
 80183c0:	9401      	str	r4, [sp, #4]
 80183c2:	6c0c      	ldr	r4, [r1, #64]	@ 0x40
 80183c4:	4642      	mov	r2, r8
 80183c6:	4649      	mov	r1, r9
 80183c8:	47a0      	blx	r4
 80183ca:	b013      	add	sp, #76	@ 0x4c
 80183cc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80183d0:	6803      	ldr	r3, [r0, #0]
 80183d2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80183d4:	4798      	blx	r3
 80183d6:	883b      	ldrh	r3, [r7, #0]
 80183d8:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	@ 0x42
 80183dc:	f9bd 1040 	ldrsh.w	r1, [sp, #64]	@ 0x40
 80183e0:	fb03 1202 	mla	r2, r3, r2, r1
 80183e4:	435d      	muls	r5, r3
 80183e6:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 80183ea:	eb00 0245 	add.w	r2, r0, r5, lsl #1
 80183ee:	920c      	str	r2, [sp, #48]	@ 0x30
 80183f0:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	@ 0x3c
 80183f4:	1b12      	subs	r2, r2, r4
 80183f6:	920d      	str	r2, [sp, #52]	@ 0x34
 80183f8:	0062      	lsls	r2, r4, #1
 80183fa:	1b1c      	subs	r4, r3, r4
 80183fc:	0063      	lsls	r3, r4, #1
 80183fe:	920a      	str	r2, [sp, #40]	@ 0x28
 8018400:	930b      	str	r3, [sp, #44]	@ 0x2c
 8018402:	f04f 0e04 	mov.w	lr, #4
 8018406:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8018408:	4298      	cmp	r0, r3
 801840a:	d266      	bcs.n	80184da <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1b6>
 801840c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801840e:	eb00 0b03 	add.w	fp, r0, r3
 8018412:	4558      	cmp	r0, fp
 8018414:	d25c      	bcs.n	80184d0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1ac>
 8018416:	f819 3b01 	ldrb.w	r3, [r9], #1
 801841a:	fb1e e303 	smlabb	r3, lr, r3, lr
 801841e:	f858 2003 	ldr.w	r2, [r8, r3]
 8018422:	0e11      	lsrs	r1, r2, #24
 8018424:	d012      	beq.n	801844c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 8018426:	29ff      	cmp	r1, #255	@ 0xff
 8018428:	ea4f 2712 	mov.w	r7, r2, lsr #8
 801842c:	d110      	bne.n	8018450 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 801842e:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 8018432:	d10d      	bne.n	8018450 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 8018434:	0953      	lsrs	r3, r2, #5
 8018436:	f427 67ff 	bic.w	r7, r7, #2040	@ 0x7f8
 801843a:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801843e:	f027 0707 	bic.w	r7, r7, #7
 8018442:	431f      	orrs	r7, r3
 8018444:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8018448:	433a      	orrs	r2, r7
 801844a:	8002      	strh	r2, [r0, #0]
 801844c:	3002      	adds	r0, #2
 801844e:	e7e0      	b.n	8018412 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xee>
 8018450:	fb0a f101 	mul.w	r1, sl, r1
 8018454:	8806      	ldrh	r6, [r0, #0]
 8018456:	1c4b      	adds	r3, r1, #1
 8018458:	eb03 2321 	add.w	r3, r3, r1, asr #8
 801845c:	1235      	asrs	r5, r6, #8
 801845e:	10f4      	asrs	r4, r6, #3
 8018460:	121b      	asrs	r3, r3, #8
 8018462:	00f6      	lsls	r6, r6, #3
 8018464:	b299      	uxth	r1, r3
 8018466:	f3c2 4c07 	ubfx	ip, r2, #16, #8
 801846a:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 801846e:	b2f6      	uxtb	r6, r6
 8018470:	43db      	mvns	r3, r3
 8018472:	b2d2      	uxtb	r2, r2
 8018474:	b2db      	uxtb	r3, r3
 8018476:	fb1c fc01 	smulbb	ip, ip, r1
 801847a:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 801847e:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 8018482:	fb12 f201 	smulbb	r2, r2, r1
 8018486:	fb05 c503 	mla	r5, r5, r3, ip
 801848a:	f004 04fc 	and.w	r4, r4, #252	@ 0xfc
 801848e:	b2ff      	uxtb	r7, r7
 8018490:	fb06 2203 	mla	r2, r6, r3, r2
 8018494:	b2ad      	uxth	r5, r5
 8018496:	fb17 f701 	smulbb	r7, r7, r1
 801849a:	b292      	uxth	r2, r2
 801849c:	ea44 1494 	orr.w	r4, r4, r4, lsr #6
 80184a0:	fb04 7403 	mla	r4, r4, r3, r7
 80184a4:	f105 0c01 	add.w	ip, r5, #1
 80184a8:	1c57      	adds	r7, r2, #1
 80184aa:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 80184ae:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 80184b2:	b2a4      	uxth	r4, r4
 80184b4:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 80184b8:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 80184bc:	433d      	orrs	r5, r7
 80184be:	1c67      	adds	r7, r4, #1
 80184c0:	eb07 2414 	add.w	r4, r7, r4, lsr #8
 80184c4:	0964      	lsrs	r4, r4, #5
 80184c6:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 80184ca:	4325      	orrs	r5, r4
 80184cc:	8005      	strh	r5, [r0, #0]
 80184ce:	e7bd      	b.n	801844c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 80184d0:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 80184d2:	4418      	add	r0, r3
 80184d4:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80184d6:	4499      	add	r9, r3
 80184d8:	e795      	b.n	8018406 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xe2>
 80184da:	4b04      	ldr	r3, [pc, #16]	@ (80184ec <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 80184dc:	6818      	ldr	r0, [r3, #0]
 80184de:	6803      	ldr	r3, [r0, #0]
 80184e0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80184e2:	4798      	blx	r3
 80184e4:	e771      	b.n	80183ca <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xa6>
 80184e6:	bf00      	nop
 80184e8:	2001403c 	.word	0x2001403c
 80184ec:	20014044 	.word	0x20014044

080184f0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>:
 80184f0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80184f4:	b087      	sub	sp, #28
 80184f6:	4680      	mov	r8, r0
 80184f8:	f89d 6040 	ldrb.w	r6, [sp, #64]	@ 0x40
 80184fc:	460d      	mov	r5, r1
 80184fe:	4614      	mov	r4, r2
 8018500:	2e00      	cmp	r6, #0
 8018502:	f000 80b9 	beq.w	8018678 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x188>
 8018506:	6810      	ldr	r0, [r2, #0]
 8018508:	6851      	ldr	r1, [r2, #4]
 801850a:	af02      	add	r7, sp, #8
 801850c:	c703      	stmia	r7!, {r0, r1}
 801850e:	6818      	ldr	r0, [r3, #0]
 8018510:	6859      	ldr	r1, [r3, #4]
 8018512:	af04      	add	r7, sp, #16
 8018514:	c703      	stmia	r7!, {r0, r1}
 8018516:	a802      	add	r0, sp, #8
 8018518:	f7f6 ffca 	bl	800f4b0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801851c:	4621      	mov	r1, r4
 801851e:	a804      	add	r0, sp, #16
 8018520:	f7f6 ffee 	bl	800f500 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8018524:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 8018528:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801852c:	f8bd 400c 	ldrh.w	r4, [sp, #12]
 8018530:	f9bd 7016 	ldrsh.w	r7, [sp, #22]
 8018534:	fb14 2103 	smlabb	r1, r4, r3, r2
 8018538:	eb08 0401 	add.w	r4, r8, r1
 801853c:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8018540:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 8018544:	440a      	add	r2, r1
 8018546:	f8ad 2010 	strh.w	r2, [sp, #16]
 801854a:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801854e:	4413      	add	r3, r2
 8018550:	f8ad 3012 	strh.w	r3, [sp, #18]
 8018554:	4b4a      	ldr	r3, [pc, #296]	@ (8018680 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 8018556:	6818      	ldr	r0, [r3, #0]
 8018558:	6803      	ldr	r3, [r0, #0]
 801855a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801855c:	4798      	blx	r3
 801855e:	4b49      	ldr	r3, [pc, #292]	@ (8018684 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x194>)
 8018560:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
 8018564:	881a      	ldrh	r2, [r3, #0]
 8018566:	f9bd c010 	ldrsh.w	ip, [sp, #16]
 801856a:	2eff      	cmp	r6, #255	@ 0xff
 801856c:	fb02 c101 	mla	r1, r2, r1, ip
 8018570:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 8018574:	fb02 f207 	mul.w	r2, r2, r7
 8018578:	f105 0104 	add.w	r1, r5, #4
 801857c:	ea4f 0a48 	mov.w	sl, r8, lsl #1
 8018580:	461d      	mov	r5, r3
 8018582:	d05a      	beq.n	801863a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14a>
 8018584:	f1c6 0eff 	rsb	lr, r6, #255	@ 0xff
 8018588:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 801858c:	b2b6      	uxth	r6, r6
 801858e:	fa1f fe8e 	uxth.w	lr, lr
 8018592:	9301      	str	r3, [sp, #4]
 8018594:	4282      	cmp	r2, r0
 8018596:	d96a      	bls.n	801866e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 8018598:	eb00 0b0a 	add.w	fp, r0, sl
 801859c:	4583      	cmp	fp, r0
 801859e:	d940      	bls.n	8018622 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x132>
 80185a0:	f814 3b01 	ldrb.w	r3, [r4], #1
 80185a4:	8805      	ldrh	r5, [r0, #0]
 80185a6:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 80185aa:	122f      	asrs	r7, r5, #8
 80185ac:	ea4f 2c23 	mov.w	ip, r3, asr #8
 80185b0:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 80185b4:	fb17 f70e 	smulbb	r7, r7, lr
 80185b8:	ea4f 09e5 	mov.w	r9, r5, asr #3
 80185bc:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 80185c0:	00ed      	lsls	r5, r5, #3
 80185c2:	fb0c 7c06 	mla	ip, ip, r6, r7
 80185c6:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
 80185ca:	10df      	asrs	r7, r3, #3
 80185cc:	b2ed      	uxtb	r5, r5
 80185ce:	00db      	lsls	r3, r3, #3
 80185d0:	fa1f fc8c 	uxth.w	ip, ip
 80185d4:	fb19 f90e 	smulbb	r9, r9, lr
 80185d8:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 80185dc:	b2db      	uxtb	r3, r3
 80185de:	fb15 f50e 	smulbb	r5, r5, lr
 80185e2:	fb07 9706 	mla	r7, r7, r6, r9
 80185e6:	fb03 5306 	mla	r3, r3, r6, r5
 80185ea:	f10c 0901 	add.w	r9, ip, #1
 80185ee:	b29b      	uxth	r3, r3
 80185f0:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
 80185f4:	f40c 4978 	and.w	r9, ip, #63488	@ 0xf800
 80185f8:	f103 0c01 	add.w	ip, r3, #1
 80185fc:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8018600:	b2bf      	uxth	r7, r7
 8018602:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8018606:	ea4c 0c09 	orr.w	ip, ip, r9
 801860a:	f107 0901 	add.w	r9, r7, #1
 801860e:	eb09 2717 	add.w	r7, r9, r7, lsr #8
 8018612:	097f      	lsrs	r7, r7, #5
 8018614:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 8018618:	ea4c 0c07 	orr.w	ip, ip, r7
 801861c:	f820 cb02 	strh.w	ip, [r0], #2
 8018620:	e7bc      	b.n	801859c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xac>
 8018622:	9b01      	ldr	r3, [sp, #4]
 8018624:	881b      	ldrh	r3, [r3, #0]
 8018626:	eba3 0308 	sub.w	r3, r3, r8
 801862a:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801862e:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 8018632:	eba3 0308 	sub.w	r3, r3, r8
 8018636:	441c      	add	r4, r3
 8018638:	e7ac      	b.n	8018594 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xa4>
 801863a:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 801863e:	4282      	cmp	r2, r0
 8018640:	d915      	bls.n	801866e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 8018642:	eb00 060a 	add.w	r6, r0, sl
 8018646:	4286      	cmp	r6, r0
 8018648:	d906      	bls.n	8018658 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x168>
 801864a:	f814 3b01 	ldrb.w	r3, [r4], #1
 801864e:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 8018652:	f820 3b02 	strh.w	r3, [r0], #2
 8018656:	e7f6      	b.n	8018646 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x156>
 8018658:	882b      	ldrh	r3, [r5, #0]
 801865a:	eba3 0308 	sub.w	r3, r3, r8
 801865e:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8018662:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 8018666:	eba3 0308 	sub.w	r3, r3, r8
 801866a:	441c      	add	r4, r3
 801866c:	e7e7      	b.n	801863e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14e>
 801866e:	4b04      	ldr	r3, [pc, #16]	@ (8018680 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 8018670:	6818      	ldr	r0, [r3, #0]
 8018672:	6803      	ldr	r3, [r0, #0]
 8018674:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8018676:	4798      	blx	r3
 8018678:	b007      	add	sp, #28
 801867a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801867e:	bf00      	nop
 8018680:	20014044 	.word	0x20014044
 8018684:	2001403c 	.word	0x2001403c

08018688 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>:
 8018688:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801868c:	b091      	sub	sp, #68	@ 0x44
 801868e:	4680      	mov	r8, r0
 8018690:	f89d 5068 	ldrb.w	r5, [sp, #104]	@ 0x68
 8018694:	460f      	mov	r7, r1
 8018696:	4614      	mov	r4, r2
 8018698:	2d00      	cmp	r5, #0
 801869a:	d051      	beq.n	8018740 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 801869c:	6810      	ldr	r0, [r2, #0]
 801869e:	6851      	ldr	r1, [r2, #4]
 80186a0:	f8df 9200 	ldr.w	r9, [pc, #512]	@ 80188a4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>
 80186a4:	ae0c      	add	r6, sp, #48	@ 0x30
 80186a6:	c603      	stmia	r6!, {r0, r1}
 80186a8:	6818      	ldr	r0, [r3, #0]
 80186aa:	6859      	ldr	r1, [r3, #4]
 80186ac:	ae0e      	add	r6, sp, #56	@ 0x38
 80186ae:	c603      	stmia	r6!, {r0, r1}
 80186b0:	a80c      	add	r0, sp, #48	@ 0x30
 80186b2:	f7f6 fefd 	bl	800f4b0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80186b6:	4621      	mov	r1, r4
 80186b8:	a80e      	add	r0, sp, #56	@ 0x38
 80186ba:	f7f6 ff21 	bl	800f500 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80186be:	f9bd 2038 	ldrsh.w	r2, [sp, #56]	@ 0x38
 80186c2:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	@ 0x3a
 80186c6:	f8bd 1034 	ldrh.w	r1, [sp, #52]	@ 0x34
 80186ca:	f8d9 0000 	ldr.w	r0, [r9]
 80186ce:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	@ 0x3c
 80186d2:	f9bd a03e 	ldrsh.w	sl, [sp, #62]	@ 0x3e
 80186d6:	fb11 2103 	smlabb	r1, r1, r3, r2
 80186da:	eb08 0401 	add.w	r4, r8, r1
 80186de:	f8bd 1030 	ldrh.w	r1, [sp, #48]	@ 0x30
 80186e2:	f8df 81c4 	ldr.w	r8, [pc, #452]	@ 80188a8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x220>
 80186e6:	440a      	add	r2, r1
 80186e8:	f8ad 2038 	strh.w	r2, [sp, #56]	@ 0x38
 80186ec:	f8bd 2032 	ldrh.w	r2, [sp, #50]	@ 0x32
 80186f0:	4413      	add	r3, r2
 80186f2:	f8ad 303a 	strh.w	r3, [sp, #58]	@ 0x3a
 80186f6:	6803      	ldr	r3, [r0, #0]
 80186f8:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80186fa:	4798      	blx	r3
 80186fc:	f010 0f80 	tst.w	r0, #128	@ 0x80
 8018700:	f8d9 0000 	ldr.w	r0, [r9]
 8018704:	d01f      	beq.n	8018746 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xbe>
 8018706:	2200      	movs	r2, #0
 8018708:	6801      	ldr	r1, [r0, #0]
 801870a:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
 801870e:	e9cd 2208 	strd	r2, r2, [sp, #32]
 8018712:	220b      	movs	r2, #11
 8018714:	9207      	str	r2, [sp, #28]
 8018716:	f8b8 2000 	ldrh.w	r2, [r8]
 801871a:	9206      	str	r2, [sp, #24]
 801871c:	2201      	movs	r2, #1
 801871e:	e9cd 5204 	strd	r5, r2, [sp, #16]
 8018722:	f8bd 2034 	ldrh.w	r2, [sp, #52]	@ 0x34
 8018726:	9203      	str	r2, [sp, #12]
 8018728:	fa1f f28a 	uxth.w	r2, sl
 801872c:	9202      	str	r2, [sp, #8]
 801872e:	b2b6      	uxth	r6, r6
 8018730:	f8bd 203a 	ldrh.w	r2, [sp, #58]	@ 0x3a
 8018734:	9200      	str	r2, [sp, #0]
 8018736:	9601      	str	r6, [sp, #4]
 8018738:	6c0d      	ldr	r5, [r1, #64]	@ 0x40
 801873a:	463a      	mov	r2, r7
 801873c:	4621      	mov	r1, r4
 801873e:	47a8      	blx	r5
 8018740:	b011      	add	sp, #68	@ 0x44
 8018742:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018746:	6803      	ldr	r3, [r0, #0]
 8018748:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801874a:	4798      	blx	r3
 801874c:	f8b8 2000 	ldrh.w	r2, [r8]
 8018750:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	@ 0x3a
 8018754:	f9bd 1038 	ldrsh.w	r1, [sp, #56]	@ 0x38
 8018758:	2dff      	cmp	r5, #255	@ 0xff
 801875a:	fb02 1303 	mla	r3, r2, r3, r1
 801875e:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8018762:	ea4f 0946 	mov.w	r9, r6, lsl #1
 8018766:	fb0a fa02 	mul.w	sl, sl, r2
 801876a:	d062      	beq.n	8018832 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1aa>
 801876c:	ea6f 0c05 	mvn.w	ip, r5
 8018770:	eb00 034a 	add.w	r3, r0, sl, lsl #1
 8018774:	930a      	str	r3, [sp, #40]	@ 0x28
 8018776:	b2ad      	uxth	r5, r5
 8018778:	fa5f fc8c 	uxtb.w	ip, ip
 801877c:	f8cd 802c 	str.w	r8, [sp, #44]	@ 0x2c
 8018780:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8018782:	4298      	cmp	r0, r3
 8018784:	f080 8085 	bcs.w	8018892 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 8018788:	eb00 0b09 	add.w	fp, r0, r9
 801878c:	4558      	cmp	r0, fp
 801878e:	d246      	bcs.n	801881e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x196>
 8018790:	f814 eb01 	ldrb.w	lr, [r4], #1
 8018794:	2303      	movs	r3, #3
 8018796:	2204      	movs	r2, #4
 8018798:	fb13 2e0e 	smlabb	lr, r3, lr, r2
 801879c:	eb07 0a0e 	add.w	sl, r7, lr
 80187a0:	8803      	ldrh	r3, [r0, #0]
 80187a2:	f89a 8002 	ldrb.w	r8, [sl, #2]
 80187a6:	f817 e00e 	ldrb.w	lr, [r7, lr]
 80187aa:	1219      	asrs	r1, r3, #8
 80187ac:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 80187b0:	fb18 f805 	smulbb	r8, r8, r5
 80187b4:	ea41 1151 	orr.w	r1, r1, r1, lsr #5
 80187b8:	10da      	asrs	r2, r3, #3
 80187ba:	fb01 810c 	mla	r1, r1, ip, r8
 80187be:	00db      	lsls	r3, r3, #3
 80187c0:	f89a 8001 	ldrb.w	r8, [sl, #1]
 80187c4:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 80187c8:	b2db      	uxtb	r3, r3
 80187ca:	fb18 f805 	smulbb	r8, r8, r5
 80187ce:	fb1e fe05 	smulbb	lr, lr, r5
 80187d2:	ea42 1292 	orr.w	r2, r2, r2, lsr #6
 80187d6:	ea43 1353 	orr.w	r3, r3, r3, lsr #5
 80187da:	b289      	uxth	r1, r1
 80187dc:	fb02 820c 	mla	r2, r2, ip, r8
 80187e0:	fb03 e30c 	mla	r3, r3, ip, lr
 80187e4:	b292      	uxth	r2, r2
 80187e6:	b29b      	uxth	r3, r3
 80187e8:	f101 0801 	add.w	r8, r1, #1
 80187ec:	eb08 2111 	add.w	r1, r8, r1, lsr #8
 80187f0:	f103 0e01 	add.w	lr, r3, #1
 80187f4:	f102 0801 	add.w	r8, r2, #1
 80187f8:	eb0e 2e13 	add.w	lr, lr, r3, lsr #8
 80187fc:	eb08 2812 	add.w	r8, r8, r2, lsr #8
 8018800:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
 8018804:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 8018808:	ea4f 1858 	mov.w	r8, r8, lsr #5
 801880c:	ea4e 0101 	orr.w	r1, lr, r1
 8018810:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 8018814:	ea41 0108 	orr.w	r1, r1, r8
 8018818:	f820 1b02 	strh.w	r1, [r0], #2
 801881c:	e7b6      	b.n	801878c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x104>
 801881e:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8018820:	881b      	ldrh	r3, [r3, #0]
 8018822:	1b9b      	subs	r3, r3, r6
 8018824:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8018828:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
 801882c:	1b9b      	subs	r3, r3, r6
 801882e:	441c      	add	r4, r3
 8018830:	e7a6      	b.n	8018780 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xf8>
 8018832:	491b      	ldr	r1, [pc, #108]	@ (80188a0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x218>)
 8018834:	eb00 0a4a 	add.w	sl, r0, sl, lsl #1
 8018838:	2203      	movs	r2, #3
 801883a:	2504      	movs	r5, #4
 801883c:	4550      	cmp	r0, sl
 801883e:	d228      	bcs.n	8018892 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 8018840:	eb00 0c09 	add.w	ip, r0, r9
 8018844:	4560      	cmp	r0, ip
 8018846:	4623      	mov	r3, r4
 8018848:	d219      	bcs.n	801887e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1f6>
 801884a:	f893 e000 	ldrb.w	lr, [r3]
 801884e:	fb12 5e0e 	smlabb	lr, r2, lr, r5
 8018852:	eb07 0b0e 	add.w	fp, r7, lr
 8018856:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801885a:	f89b 3002 	ldrb.w	r3, [fp, #2]
 801885e:	f89b b001 	ldrb.w	fp, [fp, #1]
 8018862:	ea4f 0bcb 	mov.w	fp, fp, lsl #3
 8018866:	ea01 2303 	and.w	r3, r1, r3, lsl #8
 801886a:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
 801886e:	ea43 030b 	orr.w	r3, r3, fp
 8018872:	ea43 03de 	orr.w	r3, r3, lr, lsr #3
 8018876:	3401      	adds	r4, #1
 8018878:	f820 3b02 	strh.w	r3, [r0], #2
 801887c:	e7e2      	b.n	8018844 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1bc>
 801887e:	f8b8 3000 	ldrh.w	r3, [r8]
 8018882:	1b9b      	subs	r3, r3, r6
 8018884:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8018888:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
 801888c:	1b9b      	subs	r3, r3, r6
 801888e:	441c      	add	r4, r3
 8018890:	e7d4      	b.n	801883c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1b4>
 8018892:	4b04      	ldr	r3, [pc, #16]	@ (80188a4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>)
 8018894:	6818      	ldr	r0, [r3, #0]
 8018896:	6803      	ldr	r3, [r0, #0]
 8018898:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 801889a:	4798      	blx	r3
 801889c:	e750      	b.n	8018740 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 801889e:	bf00      	nop
 80188a0:	fffff800 	.word	0xfffff800
 80188a4:	20014044 	.word	0x20014044
 80188a8:	2001403c 	.word	0x2001403c

080188ac <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>:
 80188ac:	b4f0      	push	{r4, r5, r6, r7}
 80188ae:	460c      	mov	r4, r1
 80188b0:	4611      	mov	r1, r2
 80188b2:	f89d 5014 	ldrb.w	r5, [sp, #20]
 80188b6:	780f      	ldrb	r7, [r1, #0]
 80188b8:	784e      	ldrb	r6, [r1, #1]
 80188ba:	2f01      	cmp	r7, #1
 80188bc:	461a      	mov	r2, r3
 80188be:	9b04      	ldr	r3, [sp, #16]
 80188c0:	d038      	beq.n	8018934 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x88>
 80188c2:	d31f      	bcc.n	8018904 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x58>
 80188c4:	2f02      	cmp	r7, #2
 80188c6:	d14d      	bne.n	8018964 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 80188c8:	2e03      	cmp	r6, #3
 80188ca:	d84b      	bhi.n	8018964 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 80188cc:	e8df f006 	tbb	[pc, r6]
 80188d0:	17140702 	.word	0x17140702
 80188d4:	9504      	str	r5, [sp, #16]
 80188d6:	4620      	mov	r0, r4
 80188d8:	bcf0      	pop	{r4, r5, r6, r7}
 80188da:	f7ff be09 	b.w	80184f0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>
 80188de:	6fc0      	ldr	r0, [r0, #124]	@ 0x7c
 80188e0:	2800      	cmp	r0, #0
 80188e2:	d03f      	beq.n	8018964 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 80188e4:	6806      	ldr	r6, [r0, #0]
 80188e6:	e9cd 3504 	strd	r3, r5, [sp, #16]
 80188ea:	68b5      	ldr	r5, [r6, #8]
 80188ec:	4613      	mov	r3, r2
 80188ee:	46ac      	mov	ip, r5
 80188f0:	460a      	mov	r2, r1
 80188f2:	4621      	mov	r1, r4
 80188f4:	bcf0      	pop	{r4, r5, r6, r7}
 80188f6:	4760      	bx	ip
 80188f8:	f8d0 0080 	ldr.w	r0, [r0, #128]	@ 0x80
 80188fc:	e7f0      	b.n	80188e0 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
 80188fe:	f8d0 0084 	ldr.w	r0, [r0, #132]	@ 0x84
 8018902:	e7ed      	b.n	80188e0 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
 8018904:	2e03      	cmp	r6, #3
 8018906:	d82d      	bhi.n	8018964 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 8018908:	e8df f006 	tbb	[pc, r6]
 801890c:	110e0702 	.word	0x110e0702
 8018910:	9504      	str	r5, [sp, #16]
 8018912:	4620      	mov	r0, r4
 8018914:	bcf0      	pop	{r4, r5, r6, r7}
 8018916:	f7ff bd05 	b.w	8018324 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>
 801891a:	6fc0      	ldr	r0, [r0, #124]	@ 0x7c
 801891c:	b310      	cbz	r0, 8018964 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 801891e:	6806      	ldr	r6, [r0, #0]
 8018920:	e9cd 3504 	strd	r3, r5, [sp, #16]
 8018924:	68f5      	ldr	r5, [r6, #12]
 8018926:	e7e1      	b.n	80188ec <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
 8018928:	f8d0 0080 	ldr.w	r0, [r0, #128]	@ 0x80
 801892c:	e7f6      	b.n	801891c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x70>
 801892e:	f8d0 0084 	ldr.w	r0, [r0, #132]	@ 0x84
 8018932:	e7f3      	b.n	801891c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x70>
 8018934:	2e03      	cmp	r6, #3
 8018936:	d815      	bhi.n	8018964 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 8018938:	e8df f006 	tbb	[pc, r6]
 801893c:	110e0702 	.word	0x110e0702
 8018940:	9504      	str	r5, [sp, #16]
 8018942:	4620      	mov	r0, r4
 8018944:	bcf0      	pop	{r4, r5, r6, r7}
 8018946:	f7ff be9f 	b.w	8018688 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>
 801894a:	6fc0      	ldr	r0, [r0, #124]	@ 0x7c
 801894c:	b150      	cbz	r0, 8018964 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 801894e:	6806      	ldr	r6, [r0, #0]
 8018950:	e9cd 3504 	strd	r3, r5, [sp, #16]
 8018954:	6935      	ldr	r5, [r6, #16]
 8018956:	e7c9      	b.n	80188ec <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
 8018958:	f8d0 0080 	ldr.w	r0, [r0, #128]	@ 0x80
 801895c:	e7f6      	b.n	801894c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xa0>
 801895e:	f8d0 0084 	ldr.w	r0, [r0, #132]	@ 0x84
 8018962:	e7f3      	b.n	801894c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xa0>
 8018964:	bcf0      	pop	{r4, r5, r6, r7}
 8018966:	4770      	bx	lr

08018968 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>:
 8018968:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801896c:	4604      	mov	r4, r0
 801896e:	b087      	sub	sp, #28
 8018970:	6810      	ldr	r0, [r2, #0]
 8018972:	f89d a040 	ldrb.w	sl, [sp, #64]	@ 0x40
 8018976:	f8df 9238 	ldr.w	r9, [pc, #568]	@ 8018bb0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x248>
 801897a:	460e      	mov	r6, r1
 801897c:	6851      	ldr	r1, [r2, #4]
 801897e:	ad02      	add	r5, sp, #8
 8018980:	c503      	stmia	r5!, {r0, r1}
 8018982:	6818      	ldr	r0, [r3, #0]
 8018984:	6859      	ldr	r1, [r3, #4]
 8018986:	ad04      	add	r5, sp, #16
 8018988:	4617      	mov	r7, r2
 801898a:	c503      	stmia	r5!, {r0, r1}
 801898c:	a802      	add	r0, sp, #8
 801898e:	f7f6 fd8f 	bl	800f4b0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8018992:	4639      	mov	r1, r7
 8018994:	a804      	add	r0, sp, #16
 8018996:	f7f6 fdb3 	bl	800f500 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801899a:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801899e:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 80189a2:	f8bd 100c 	ldrh.w	r1, [sp, #12]
 80189a6:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 80189aa:	f9bd 5016 	ldrsh.w	r5, [sp, #22]
 80189ae:	fb11 2103 	smlabb	r1, r1, r3, r2
 80189b2:	eb04 0441 	add.w	r4, r4, r1, lsl #1
 80189b6:	440e      	add	r6, r1
 80189b8:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 80189bc:	440a      	add	r2, r1
 80189be:	f8ad 2010 	strh.w	r2, [sp, #16]
 80189c2:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 80189c6:	4413      	add	r3, r2
 80189c8:	f8ad 3012 	strh.w	r3, [sp, #18]
 80189cc:	4b77      	ldr	r3, [pc, #476]	@ (8018bac <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 80189ce:	6818      	ldr	r0, [r3, #0]
 80189d0:	6803      	ldr	r3, [r0, #0]
 80189d2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80189d4:	4798      	blx	r3
 80189d6:	f8b9 b000 	ldrh.w	fp, [r9]
 80189da:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 80189de:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 80189e2:	fb0b 2303 	mla	r3, fp, r3, r2
 80189e6:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80189ea:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 80189ee:	ea4f 0348 	mov.w	r3, r8, lsl #1
 80189f2:	fb05 f50b 	mul.w	r5, r5, fp
 80189f6:	9300      	str	r3, [sp, #0]
 80189f8:	d069      	beq.n	8018ace <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x166>
 80189fa:	eb00 0b45 	add.w	fp, r0, r5, lsl #1
 80189fe:	4558      	cmp	r0, fp
 8018a00:	f080 80cc 	bcs.w	8018b9c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 8018a04:	9b00      	ldr	r3, [sp, #0]
 8018a06:	18c3      	adds	r3, r0, r3
 8018a08:	9301      	str	r3, [sp, #4]
 8018a0a:	4631      	mov	r1, r6
 8018a0c:	9b01      	ldr	r3, [sp, #4]
 8018a0e:	4298      	cmp	r0, r3
 8018a10:	d24f      	bcs.n	8018ab2 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x14a>
 8018a12:	f811 2b01 	ldrb.w	r2, [r1], #1
 8018a16:	2a00      	cmp	r2, #0
 8018a18:	d048      	beq.n	8018aac <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 8018a1a:	fb0a f202 	mul.w	r2, sl, r2
 8018a1e:	1c53      	adds	r3, r2, #1
 8018a20:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8018a24:	121b      	asrs	r3, r3, #8
 8018a26:	d041      	beq.n	8018aac <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 8018a28:	8802      	ldrh	r2, [r0, #0]
 8018a2a:	f8b4 c000 	ldrh.w	ip, [r4]
 8018a2e:	b29e      	uxth	r6, r3
 8018a30:	1215      	asrs	r5, r2, #8
 8018a32:	43db      	mvns	r3, r3
 8018a34:	b2db      	uxtb	r3, r3
 8018a36:	ea4f 272c 	mov.w	r7, ip, asr #8
 8018a3a:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 8018a3e:	fb15 f503 	smulbb	r5, r5, r3
 8018a42:	ea4f 0ee2 	mov.w	lr, r2, asr #3
 8018a46:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8018a4a:	00d2      	lsls	r2, r2, #3
 8018a4c:	fb07 5706 	mla	r7, r7, r6, r5
 8018a50:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
 8018a54:	ea4f 05ec 	mov.w	r5, ip, asr #3
 8018a58:	b2d2      	uxtb	r2, r2
 8018a5a:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8018a5e:	b2bf      	uxth	r7, r7
 8018a60:	fb1e fe03 	smulbb	lr, lr, r3
 8018a64:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 8018a68:	fa5f fc8c 	uxtb.w	ip, ip
 8018a6c:	fb12 f203 	smulbb	r2, r2, r3
 8018a70:	fb05 e506 	mla	r5, r5, r6, lr
 8018a74:	fb0c 2c06 	mla	ip, ip, r6, r2
 8018a78:	f107 0e01 	add.w	lr, r7, #1
 8018a7c:	fa1f fc8c 	uxth.w	ip, ip
 8018a80:	eb0e 2717 	add.w	r7, lr, r7, lsr #8
 8018a84:	f407 4e78 	and.w	lr, r7, #63488	@ 0xf800
 8018a88:	f10c 0701 	add.w	r7, ip, #1
 8018a8c:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8018a90:	b2ad      	uxth	r5, r5
 8018a92:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8018a96:	ea47 070e 	orr.w	r7, r7, lr
 8018a9a:	f105 0e01 	add.w	lr, r5, #1
 8018a9e:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 8018aa2:	096d      	lsrs	r5, r5, #5
 8018aa4:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8018aa8:	432f      	orrs	r7, r5
 8018aaa:	8007      	strh	r7, [r0, #0]
 8018aac:	3002      	adds	r0, #2
 8018aae:	3402      	adds	r4, #2
 8018ab0:	e7ac      	b.n	8018a0c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xa4>
 8018ab2:	f8b9 3000 	ldrh.w	r3, [r9]
 8018ab6:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 8018aba:	eba3 0308 	sub.w	r3, r3, r8
 8018abe:	eba6 0608 	sub.w	r6, r6, r8
 8018ac2:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 8018ac6:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8018aca:	440e      	add	r6, r1
 8018acc:	e797      	b.n	80189fe <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x96>
 8018ace:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 8018ad2:	42a8      	cmp	r0, r5
 8018ad4:	d262      	bcs.n	8018b9c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 8018ad6:	9b00      	ldr	r3, [sp, #0]
 8018ad8:	4631      	mov	r1, r6
 8018ada:	eb00 0b03 	add.w	fp, r0, r3
 8018ade:	4558      	cmp	r0, fp
 8018ae0:	d24e      	bcs.n	8018b80 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x218>
 8018ae2:	f811 3b01 	ldrb.w	r3, [r1], #1
 8018ae6:	b12b      	cbz	r3, 8018af4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 8018ae8:	2bff      	cmp	r3, #255	@ 0xff
 8018aea:	f8b4 e000 	ldrh.w	lr, [r4]
 8018aee:	d104      	bne.n	8018afa <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x192>
 8018af0:	f8a0 e000 	strh.w	lr, [r0]
 8018af4:	3002      	adds	r0, #2
 8018af6:	3402      	adds	r4, #2
 8018af8:	e7f1      	b.n	8018ade <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x176>
 8018afa:	8802      	ldrh	r2, [r0, #0]
 8018afc:	b29f      	uxth	r7, r3
 8018afe:	1216      	asrs	r6, r2, #8
 8018b00:	43db      	mvns	r3, r3
 8018b02:	b2db      	uxtb	r3, r3
 8018b04:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8018b08:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 8018b0c:	fb16 f603 	smulbb	r6, r6, r3
 8018b10:	ea4f 0ae2 	mov.w	sl, r2, asr #3
 8018b14:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8018b18:	00d2      	lsls	r2, r2, #3
 8018b1a:	fb0c 6c07 	mla	ip, ip, r7, r6
 8018b1e:	b2d2      	uxtb	r2, r2
 8018b20:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8018b24:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 8018b28:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8018b2c:	fb1a fa03 	smulbb	sl, sl, r3
 8018b30:	fa1f fc8c 	uxth.w	ip, ip
 8018b34:	fb12 f303 	smulbb	r3, r2, r3
 8018b38:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8018b3c:	fa5f fe8e 	uxtb.w	lr, lr
 8018b40:	fb06 a607 	mla	r6, r6, r7, sl
 8018b44:	f10c 0201 	add.w	r2, ip, #1
 8018b48:	fb0e 3307 	mla	r3, lr, r7, r3
 8018b4c:	b2b6      	uxth	r6, r6
 8018b4e:	b29b      	uxth	r3, r3
 8018b50:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 8018b54:	f40c 4278 	and.w	r2, ip, #63488	@ 0xf800
 8018b58:	f106 0a01 	add.w	sl, r6, #1
 8018b5c:	f103 0c01 	add.w	ip, r3, #1
 8018b60:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8018b64:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 8018b68:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8018b6c:	0976      	lsrs	r6, r6, #5
 8018b6e:	ea4c 0c02 	orr.w	ip, ip, r2
 8018b72:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 8018b76:	ea4c 0c06 	orr.w	ip, ip, r6
 8018b7a:	f8a0 c000 	strh.w	ip, [r0]
 8018b7e:	e7b9      	b.n	8018af4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 8018b80:	f8b9 3000 	ldrh.w	r3, [r9]
 8018b84:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 8018b88:	eba3 0308 	sub.w	r3, r3, r8
 8018b8c:	eba6 0608 	sub.w	r6, r6, r8
 8018b90:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 8018b94:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8018b98:	440e      	add	r6, r1
 8018b9a:	e79a      	b.n	8018ad2 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x16a>
 8018b9c:	4b03      	ldr	r3, [pc, #12]	@ (8018bac <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 8018b9e:	6818      	ldr	r0, [r3, #0]
 8018ba0:	6803      	ldr	r3, [r0, #0]
 8018ba2:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8018ba4:	4798      	blx	r3
 8018ba6:	b007      	add	sp, #28
 8018ba8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018bac:	20014044 	.word	0x20014044
 8018bb0:	2001403c 	.word	0x2001403c

08018bb4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb>:
 8018bb4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018bb8:	b089      	sub	sp, #36	@ 0x24
 8018bba:	4607      	mov	r7, r0
 8018bbc:	f89d 604c 	ldrb.w	r6, [sp, #76]	@ 0x4c
 8018bc0:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 8018bc2:	4688      	mov	r8, r1
 8018bc4:	4692      	mov	sl, r2
 8018bc6:	4699      	mov	r9, r3
 8018bc8:	2e00      	cmp	r6, #0
 8018bca:	d048      	beq.n	8018c5e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 8018bcc:	4608      	mov	r0, r1
 8018bce:	f7fa f81d 	bl	8012c0c <_ZNK8touchgfx6Bitmap8getWidthEv>
 8018bd2:	4605      	mov	r5, r0
 8018bd4:	4640      	mov	r0, r8
 8018bd6:	f7fa f84d 	bl	8012c74 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8018bda:	f8ad 000e 	strh.w	r0, [sp, #14]
 8018bde:	4640      	mov	r0, r8
 8018be0:	f8ad a008 	strh.w	sl, [sp, #8]
 8018be4:	f8ad 500c 	strh.w	r5, [sp, #12]
 8018be8:	f8ad 900a 	strh.w	r9, [sp, #10]
 8018bec:	f7fa f900 	bl	8012df0 <_ZNK8touchgfx6Bitmap7getDataEv>
 8018bf0:	4605      	mov	r5, r0
 8018bf2:	4640      	mov	r0, r8
 8018bf4:	f7fa f92c 	bl	8012e50 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 8018bf8:	4682      	mov	sl, r0
 8018bfa:	4640      	mov	r0, r8
 8018bfc:	f7fa f97c 	bl	8012ef8 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8018c00:	2810      	cmp	r0, #16
 8018c02:	d82c      	bhi.n	8018c5e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 8018c04:	e8df f010 	tbh	[pc, r0, lsl #1]
 8018c08:	00ba00ca 	.word	0x00ba00ca
 8018c0c:	002b0011 	.word	0x002b0011
 8018c10:	002b002b 	.word	0x002b002b
 8018c14:	002b002b 	.word	0x002b002b
 8018c18:	002b002b 	.word	0x002b002b
 8018c1c:	00c1002b 	.word	0x00c1002b
 8018c20:	002b002b 	.word	0x002b002b
 8018c24:	002b0180 	.word	0x002b0180
 8018c28:	0173      	.short	0x0173
 8018c2a:	4bbc      	ldr	r3, [pc, #752]	@ (8018f1c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x368>)
 8018c2c:	6818      	ldr	r0, [r3, #0]
 8018c2e:	6803      	ldr	r3, [r0, #0]
 8018c30:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8018c32:	4798      	blx	r3
 8018c34:	2eff      	cmp	r6, #255	@ 0xff
 8018c36:	d101      	bne.n	8018c3c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x88>
 8018c38:	0683      	lsls	r3, r0, #26
 8018c3a:	d506      	bpl.n	8018c4a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x96>
 8018c3c:	4633      	mov	r3, r6
 8018c3e:	4622      	mov	r2, r4
 8018c40:	a902      	add	r1, sp, #8
 8018c42:	4628      	mov	r0, r5
 8018c44:	f7ff f8fc 	bl	8017e40 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8018c48:	e009      	b.n	8018c5e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 8018c4a:	4640      	mov	r0, r8
 8018c4c:	f7fa f898 	bl	8012d80 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 8018c50:	b940      	cbnz	r0, 8018c64 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xb0>
 8018c52:	4623      	mov	r3, r4
 8018c54:	aa02      	add	r2, sp, #8
 8018c56:	4629      	mov	r1, r5
 8018c58:	4638      	mov	r0, r7
 8018c5a:	f7ff f9d7 	bl	801800c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 8018c5e:	b009      	add	sp, #36	@ 0x24
 8018c60:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018c64:	f10d 0918 	add.w	r9, sp, #24
 8018c68:	4641      	mov	r1, r8
 8018c6a:	4648      	mov	r0, r9
 8018c6c:	f7fa f836 	bl	8012cdc <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8018c70:	e899 0003 	ldmia.w	r9, {r0, r1}
 8018c74:	f10d 0810 	add.w	r8, sp, #16
 8018c78:	e888 0003 	stmia.w	r8, {r0, r1}
 8018c7c:	4640      	mov	r0, r8
 8018c7e:	4621      	mov	r1, r4
 8018c80:	f7f1 fc22 	bl	800a4c8 <_ZN8touchgfx4RectaNERKS0_>
 8018c84:	4640      	mov	r0, r8
 8018c86:	f7f1 fc62 	bl	800a54e <_ZNK8touchgfx4Rect7isEmptyEv>
 8018c8a:	2800      	cmp	r0, #0
 8018c8c:	d1d6      	bne.n	8018c3c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x88>
 8018c8e:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8018c92:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 8018c96:	4293      	cmp	r3, r2
 8018c98:	dd12      	ble.n	8018cc0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x10c>
 8018c9a:	1a9b      	subs	r3, r3, r2
 8018c9c:	f9b4 0000 	ldrsh.w	r0, [r4]
 8018ca0:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8018ca4:	f8ad 0018 	strh.w	r0, [sp, #24]
 8018ca8:	f8ad 201a 	strh.w	r2, [sp, #26]
 8018cac:	f8ad 101c 	strh.w	r1, [sp, #28]
 8018cb0:	f8ad 301e 	strh.w	r3, [sp, #30]
 8018cb4:	464a      	mov	r2, r9
 8018cb6:	4633      	mov	r3, r6
 8018cb8:	a902      	add	r1, sp, #8
 8018cba:	4628      	mov	r0, r5
 8018cbc:	f7ff f8c0 	bl	8017e40 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8018cc0:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 8018cc4:	f9b4 2000 	ldrsh.w	r2, [r4]
 8018cc8:	4293      	cmp	r3, r2
 8018cca:	dd12      	ble.n	8018cf2 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x13e>
 8018ccc:	1a9b      	subs	r3, r3, r2
 8018cce:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 8018cd2:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 8018cd6:	f8ad 2018 	strh.w	r2, [sp, #24]
 8018cda:	f8ad 001a 	strh.w	r0, [sp, #26]
 8018cde:	f8ad 301c 	strh.w	r3, [sp, #28]
 8018ce2:	f8ad 101e 	strh.w	r1, [sp, #30]
 8018ce6:	23ff      	movs	r3, #255	@ 0xff
 8018ce8:	464a      	mov	r2, r9
 8018cea:	a902      	add	r1, sp, #8
 8018cec:	4628      	mov	r0, r5
 8018cee:	f7ff f8a7 	bl	8017e40 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8018cf2:	4643      	mov	r3, r8
 8018cf4:	aa02      	add	r2, sp, #8
 8018cf6:	4629      	mov	r1, r5
 8018cf8:	4638      	mov	r0, r7
 8018cfa:	f7ff f987 	bl	801800c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 8018cfe:	88a2      	ldrh	r2, [r4, #4]
 8018d00:	8823      	ldrh	r3, [r4, #0]
 8018d02:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 8018d06:	4413      	add	r3, r2
 8018d08:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8018d0c:	440a      	add	r2, r1
 8018d0e:	b29b      	uxth	r3, r3
 8018d10:	b292      	uxth	r2, r2
 8018d12:	b211      	sxth	r1, r2
 8018d14:	b218      	sxth	r0, r3
 8018d16:	4288      	cmp	r0, r1
 8018d18:	dd12      	ble.n	8018d40 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x18c>
 8018d1a:	1a9b      	subs	r3, r3, r2
 8018d1c:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 8018d20:	f9bd 6012 	ldrsh.w	r6, [sp, #18]
 8018d24:	f8ad 1018 	strh.w	r1, [sp, #24]
 8018d28:	f8ad 301c 	strh.w	r3, [sp, #28]
 8018d2c:	f8ad 001e 	strh.w	r0, [sp, #30]
 8018d30:	23ff      	movs	r3, #255	@ 0xff
 8018d32:	464a      	mov	r2, r9
 8018d34:	a902      	add	r1, sp, #8
 8018d36:	4628      	mov	r0, r5
 8018d38:	f8ad 601a 	strh.w	r6, [sp, #26]
 8018d3c:	f7ff f880 	bl	8017e40 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8018d40:	88e2      	ldrh	r2, [r4, #6]
 8018d42:	8863      	ldrh	r3, [r4, #2]
 8018d44:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 8018d48:	4413      	add	r3, r2
 8018d4a:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8018d4e:	440a      	add	r2, r1
 8018d50:	b29b      	uxth	r3, r3
 8018d52:	b292      	uxth	r2, r2
 8018d54:	b211      	sxth	r1, r2
 8018d56:	b218      	sxth	r0, r3
 8018d58:	4288      	cmp	r0, r1
 8018d5a:	dd80      	ble.n	8018c5e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 8018d5c:	1a9b      	subs	r3, r3, r2
 8018d5e:	f9b4 6000 	ldrsh.w	r6, [r4]
 8018d62:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8018d66:	f8ad 301e 	strh.w	r3, [sp, #30]
 8018d6a:	f8ad 6018 	strh.w	r6, [sp, #24]
 8018d6e:	f8ad 101a 	strh.w	r1, [sp, #26]
 8018d72:	f8ad 001c 	strh.w	r0, [sp, #28]
 8018d76:	23ff      	movs	r3, #255	@ 0xff
 8018d78:	464a      	mov	r2, r9
 8018d7a:	e761      	b.n	8018c40 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x8c>
 8018d7c:	4633      	mov	r3, r6
 8018d7e:	4622      	mov	r2, r4
 8018d80:	a902      	add	r1, sp, #8
 8018d82:	4628      	mov	r0, r5
 8018d84:	f7ff f9b2 	bl	80180ec <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
 8018d88:	e769      	b.n	8018c5e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 8018d8a:	e9cd 4600 	strd	r4, r6, [sp]
 8018d8e:	ab02      	add	r3, sp, #8
 8018d90:	4652      	mov	r2, sl
 8018d92:	4629      	mov	r1, r5
 8018d94:	4638      	mov	r0, r7
 8018d96:	f7ff fd89 	bl	80188ac <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>
 8018d9a:	e760      	b.n	8018c5e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 8018d9c:	4640      	mov	r0, r8
 8018d9e:	f7f9 ffef 	bl	8012d80 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 8018da2:	b948      	cbnz	r0, 8018db8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x204>
 8018da4:	683b      	ldr	r3, [r7, #0]
 8018da6:	e9cd 6000 	strd	r6, r0, [sp]
 8018daa:	aa02      	add	r2, sp, #8
 8018dac:	68de      	ldr	r6, [r3, #12]
 8018dae:	4629      	mov	r1, r5
 8018db0:	4623      	mov	r3, r4
 8018db2:	4638      	mov	r0, r7
 8018db4:	47b0      	blx	r6
 8018db6:	e752      	b.n	8018c5e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 8018db8:	f10d 0918 	add.w	r9, sp, #24
 8018dbc:	4641      	mov	r1, r8
 8018dbe:	4648      	mov	r0, r9
 8018dc0:	f7f9 ff8c 	bl	8012cdc <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8018dc4:	e899 0003 	ldmia.w	r9, {r0, r1}
 8018dc8:	f10d 0810 	add.w	r8, sp, #16
 8018dcc:	e888 0003 	stmia.w	r8, {r0, r1}
 8018dd0:	4640      	mov	r0, r8
 8018dd2:	4621      	mov	r1, r4
 8018dd4:	f7f1 fb78 	bl	800a4c8 <_ZN8touchgfx4RectaNERKS0_>
 8018dd8:	4640      	mov	r0, r8
 8018dda:	f7f1 fbb8 	bl	800a54e <_ZNK8touchgfx4Rect7isEmptyEv>
 8018dde:	b138      	cbz	r0, 8018df0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x23c>
 8018de0:	9600      	str	r6, [sp, #0]
 8018de2:	4623      	mov	r3, r4
 8018de4:	aa02      	add	r2, sp, #8
 8018de6:	4651      	mov	r1, sl
 8018de8:	4628      	mov	r0, r5
 8018dea:	f7ff fdbd 	bl	8018968 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8018dee:	e736      	b.n	8018c5e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 8018df0:	683b      	ldr	r3, [r7, #0]
 8018df2:	e9cd 6000 	strd	r6, r0, [sp]
 8018df6:	aa02      	add	r2, sp, #8
 8018df8:	f8d3 b00c 	ldr.w	fp, [r3, #12]
 8018dfc:	4629      	mov	r1, r5
 8018dfe:	4643      	mov	r3, r8
 8018e00:	4638      	mov	r0, r7
 8018e02:	47d8      	blx	fp
 8018e04:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8018e08:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 8018e0c:	4293      	cmp	r3, r2
 8018e0e:	dd13      	ble.n	8018e38 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x284>
 8018e10:	f9b4 0000 	ldrsh.w	r0, [r4]
 8018e14:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8018e18:	f8ad 0018 	strh.w	r0, [sp, #24]
 8018e1c:	1a9b      	subs	r3, r3, r2
 8018e1e:	f8ad 201a 	strh.w	r2, [sp, #26]
 8018e22:	f8ad 101c 	strh.w	r1, [sp, #28]
 8018e26:	f8ad 301e 	strh.w	r3, [sp, #30]
 8018e2a:	9600      	str	r6, [sp, #0]
 8018e2c:	464b      	mov	r3, r9
 8018e2e:	aa02      	add	r2, sp, #8
 8018e30:	4651      	mov	r1, sl
 8018e32:	4628      	mov	r0, r5
 8018e34:	f7ff fd98 	bl	8018968 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8018e38:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 8018e3c:	f9b4 2000 	ldrsh.w	r2, [r4]
 8018e40:	4293      	cmp	r3, r2
 8018e42:	dd13      	ble.n	8018e6c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2b8>
 8018e44:	1a9b      	subs	r3, r3, r2
 8018e46:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 8018e4a:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 8018e4e:	f8ad 2018 	strh.w	r2, [sp, #24]
 8018e52:	f8ad 001a 	strh.w	r0, [sp, #26]
 8018e56:	f8ad 301c 	strh.w	r3, [sp, #28]
 8018e5a:	f8ad 101e 	strh.w	r1, [sp, #30]
 8018e5e:	9600      	str	r6, [sp, #0]
 8018e60:	464b      	mov	r3, r9
 8018e62:	aa02      	add	r2, sp, #8
 8018e64:	4651      	mov	r1, sl
 8018e66:	4628      	mov	r0, r5
 8018e68:	f7ff fd7e 	bl	8018968 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8018e6c:	88a2      	ldrh	r2, [r4, #4]
 8018e6e:	8823      	ldrh	r3, [r4, #0]
 8018e70:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 8018e74:	4413      	add	r3, r2
 8018e76:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8018e7a:	440a      	add	r2, r1
 8018e7c:	b29b      	uxth	r3, r3
 8018e7e:	b292      	uxth	r2, r2
 8018e80:	b211      	sxth	r1, r2
 8018e82:	b218      	sxth	r0, r3
 8018e84:	4288      	cmp	r0, r1
 8018e86:	dd13      	ble.n	8018eb0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2fc>
 8018e88:	1a9b      	subs	r3, r3, r2
 8018e8a:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 8018e8e:	f9bd 7012 	ldrsh.w	r7, [sp, #18]
 8018e92:	f8ad 1018 	strh.w	r1, [sp, #24]
 8018e96:	f8ad 301c 	strh.w	r3, [sp, #28]
 8018e9a:	f8ad 001e 	strh.w	r0, [sp, #30]
 8018e9e:	9600      	str	r6, [sp, #0]
 8018ea0:	464b      	mov	r3, r9
 8018ea2:	aa02      	add	r2, sp, #8
 8018ea4:	4651      	mov	r1, sl
 8018ea6:	4628      	mov	r0, r5
 8018ea8:	f8ad 701a 	strh.w	r7, [sp, #26]
 8018eac:	f7ff fd5c 	bl	8018968 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8018eb0:	88e2      	ldrh	r2, [r4, #6]
 8018eb2:	8863      	ldrh	r3, [r4, #2]
 8018eb4:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 8018eb8:	4413      	add	r3, r2
 8018eba:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8018ebe:	440a      	add	r2, r1
 8018ec0:	b29b      	uxth	r3, r3
 8018ec2:	b292      	uxth	r2, r2
 8018ec4:	b211      	sxth	r1, r2
 8018ec6:	b218      	sxth	r0, r3
 8018ec8:	4288      	cmp	r0, r1
 8018eca:	f77f aec8 	ble.w	8018c5e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 8018ece:	f9b4 7000 	ldrsh.w	r7, [r4]
 8018ed2:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8018ed6:	f8ad 7018 	strh.w	r7, [sp, #24]
 8018eda:	1a9b      	subs	r3, r3, r2
 8018edc:	f8ad 301e 	strh.w	r3, [sp, #30]
 8018ee0:	f8ad 101a 	strh.w	r1, [sp, #26]
 8018ee4:	f8ad 001c 	strh.w	r0, [sp, #28]
 8018ee8:	9600      	str	r6, [sp, #0]
 8018eea:	464b      	mov	r3, r9
 8018eec:	e77a      	b.n	8018de4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x230>
 8018eee:	f8d7 0088 	ldr.w	r0, [r7, #136]	@ 0x88
 8018ef2:	2800      	cmp	r0, #0
 8018ef4:	f43f aeb3 	beq.w	8018c5e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 8018ef8:	6803      	ldr	r3, [r0, #0]
 8018efa:	9600      	str	r6, [sp, #0]
 8018efc:	68de      	ldr	r6, [r3, #12]
 8018efe:	4623      	mov	r3, r4
 8018f00:	aa02      	add	r2, sp, #8
 8018f02:	4629      	mov	r1, r5
 8018f04:	47b0      	blx	r6
 8018f06:	e6aa      	b.n	8018c5e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 8018f08:	f8d7 0088 	ldr.w	r0, [r7, #136]	@ 0x88
 8018f0c:	2800      	cmp	r0, #0
 8018f0e:	f43f aea6 	beq.w	8018c5e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 8018f12:	6803      	ldr	r3, [r0, #0]
 8018f14:	9600      	str	r6, [sp, #0]
 8018f16:	689e      	ldr	r6, [r3, #8]
 8018f18:	e7f1      	b.n	8018efe <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x34a>
 8018f1a:	bf00      	nop
 8018f1c:	20014044 	.word	0x20014044

08018f20 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>:
 8018f20:	b180      	cbz	r0, 8018f44 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x24>
 8018f22:	2903      	cmp	r1, #3
 8018f24:	d81c      	bhi.n	8018f60 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 8018f26:	e8df f001 	tbb	[pc, r1]
 8018f2a:	1d02      	.short	0x1d02
 8018f2c:	1f08      	.short	0x1f08
 8018f2e:	4b10      	ldr	r3, [pc, #64]	@ (8018f70 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 8018f30:	8818      	ldrh	r0, [r3, #0]
 8018f32:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8018f36:	4240      	negs	r0, r0
 8018f38:	4770      	bx	lr
 8018f3a:	4b0d      	ldr	r3, [pc, #52]	@ (8018f70 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 8018f3c:	8818      	ldrh	r0, [r3, #0]
 8018f3e:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8018f42:	4770      	bx	lr
 8018f44:	2903      	cmp	r1, #3
 8018f46:	d80b      	bhi.n	8018f60 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 8018f48:	a301      	add	r3, pc, #4	@ (adr r3, 8018f50 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x30>)
 8018f4a:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 8018f4e:	bf00      	nop
 8018f50:	08018f65 	.word	0x08018f65
 8018f54:	08018f3b 	.word	0x08018f3b
 8018f58:	08018f69 	.word	0x08018f69
 8018f5c:	08018f2f 	.word	0x08018f2f
 8018f60:	2000      	movs	r0, #0
 8018f62:	4770      	bx	lr
 8018f64:	2001      	movs	r0, #1
 8018f66:	4770      	bx	lr
 8018f68:	f04f 30ff 	mov.w	r0, #4294967295
 8018f6c:	4770      	bx	lr
 8018f6e:	bf00      	nop
 8018f70:	2001403c 	.word	0x2001403c

08018f74 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>:
 8018f74:	b180      	cbz	r0, 8018f98 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x24>
 8018f76:	2903      	cmp	r1, #3
 8018f78:	d81c      	bhi.n	8018fb4 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 8018f7a:	e8df f001 	tbb	[pc, r1]
 8018f7e:	021d      	.short	0x021d
 8018f80:	071f      	.short	0x071f
 8018f82:	4b10      	ldr	r3, [pc, #64]	@ (8018fc4 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 8018f84:	8818      	ldrh	r0, [r3, #0]
 8018f86:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8018f8a:	4770      	bx	lr
 8018f8c:	4b0d      	ldr	r3, [pc, #52]	@ (8018fc4 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 8018f8e:	8818      	ldrh	r0, [r3, #0]
 8018f90:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8018f94:	4240      	negs	r0, r0
 8018f96:	4770      	bx	lr
 8018f98:	2903      	cmp	r1, #3
 8018f9a:	d80b      	bhi.n	8018fb4 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 8018f9c:	a301      	add	r3, pc, #4	@ (adr r3, 8018fa4 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x30>)
 8018f9e:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 8018fa2:	bf00      	nop
 8018fa4:	08018f83 	.word	0x08018f83
 8018fa8:	08018fbd 	.word	0x08018fbd
 8018fac:	08018f8d 	.word	0x08018f8d
 8018fb0:	08018fb9 	.word	0x08018fb9
 8018fb4:	2000      	movs	r0, #0
 8018fb6:	4770      	bx	lr
 8018fb8:	2001      	movs	r0, #1
 8018fba:	4770      	bx	lr
 8018fbc:	f04f 30ff 	mov.w	r0, #4294967295
 8018fc0:	4770      	bx	lr
 8018fc2:	bf00      	nop
 8018fc4:	2001403c 	.word	0x2001403c

08018fc8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE>:
 8018fc8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018fcc:	b099      	sub	sp, #100	@ 0x64
 8018fce:	910d      	str	r1, [sp, #52]	@ 0x34
 8018fd0:	a914      	add	r1, sp, #80	@ 0x50
 8018fd2:	e881 000c 	stmia.w	r1, {r2, r3}
 8018fd6:	f9bd 308c 	ldrsh.w	r3, [sp, #140]	@ 0x8c
 8018fda:	930b      	str	r3, [sp, #44]	@ 0x2c
 8018fdc:	e9dd 2126 	ldrd	r2, r1, [sp, #152]	@ 0x98
 8018fe0:	f89d 30a4 	ldrb.w	r3, [sp, #164]	@ 0xa4
 8018fe4:	9310      	str	r3, [sp, #64]	@ 0x40
 8018fe6:	f89d 30ac 	ldrb.w	r3, [sp, #172]	@ 0xac
 8018fea:	9308      	str	r3, [sp, #32]
 8018fec:	f89d 30b0 	ldrb.w	r3, [sp, #176]	@ 0xb0
 8018ff0:	9309      	str	r3, [sp, #36]	@ 0x24
 8018ff2:	7b4b      	ldrb	r3, [r1, #13]
 8018ff4:	f9bd 4088 	ldrsh.w	r4, [sp, #136]	@ 0x88
 8018ff8:	f8bd 5090 	ldrh.w	r5, [sp, #144]	@ 0x90
 8018ffc:	f8bd 6094 	ldrh.w	r6, [sp, #148]	@ 0x94
 8019000:	9f28      	ldr	r7, [sp, #160]	@ 0xa0
 8019002:	f8dd 90a8 	ldr.w	r9, [sp, #168]	@ 0xa8
 8019006:	f89d a0b4 	ldrb.w	sl, [sp, #180]	@ 0xb4
 801900a:	ea4f 1843 	mov.w	r8, r3, lsl #5
 801900e:	f408 7080 	and.w	r0, r8, #256	@ 0x100
 8019012:	f891 8006 	ldrb.w	r8, [r1, #6]
 8019016:	ea58 0800 	orrs.w	r8, r8, r0
 801901a:	f000 81ce 	beq.w	80193ba <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f2>
 801901e:	011b      	lsls	r3, r3, #4
 8019020:	79c8      	ldrb	r0, [r1, #7]
 8019022:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8019026:	4303      	orrs	r3, r0
 8019028:	930c      	str	r3, [sp, #48]	@ 0x30
 801902a:	f000 81c6 	beq.w	80193ba <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f2>
 801902e:	f991 3009 	ldrsb.w	r3, [r1, #9]
 8019032:	b29b      	uxth	r3, r3
 8019034:	2d00      	cmp	r5, #0
 8019036:	f000 812c 	beq.w	8019292 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2ca>
 801903a:	1aed      	subs	r5, r5, r3
 801903c:	b2ad      	uxth	r5, r5
 801903e:	0429      	lsls	r1, r5, #16
 8019040:	d502      	bpl.n	8019048 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x80>
 8019042:	1b64      	subs	r4, r4, r5
 8019044:	b224      	sxth	r4, r4
 8019046:	2500      	movs	r5, #0
 8019048:	f9b2 0000 	ldrsh.w	r0, [r2]
 801904c:	8891      	ldrh	r1, [r2, #4]
 801904e:	4284      	cmp	r4, r0
 8019050:	b283      	uxth	r3, r0
 8019052:	bfb8      	it	lt
 8019054:	18ed      	addlt	r5, r5, r3
 8019056:	440b      	add	r3, r1
 8019058:	b21b      	sxth	r3, r3
 801905a:	930a      	str	r3, [sp, #40]	@ 0x28
 801905c:	88d3      	ldrh	r3, [r2, #6]
 801905e:	8852      	ldrh	r2, [r2, #2]
 8019060:	4413      	add	r3, r2
 8019062:	b21b      	sxth	r3, r3
 8019064:	930f      	str	r3, [sp, #60]	@ 0x3c
 8019066:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8019068:	930e      	str	r3, [sp, #56]	@ 0x38
 801906a:	bfb8      	it	lt
 801906c:	1b2c      	sublt	r4, r5, r4
 801906e:	4bb5      	ldr	r3, [pc, #724]	@ (8019344 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x37c>)
 8019070:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8019072:	f893 b000 	ldrb.w	fp, [r3]
 8019076:	bfbc      	itt	lt
 8019078:	b2a5      	uxthlt	r5, r4
 801907a:	4604      	movlt	r4, r0
 801907c:	4653      	mov	r3, sl
 801907e:	4621      	mov	r1, r4
 8019080:	a814      	add	r0, sp, #80	@ 0x50
 8019082:	f7f6 f889 	bl	800f198 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>
 8019086:	4621      	mov	r1, r4
 8019088:	f8ad 005c 	strh.w	r0, [sp, #92]	@ 0x5c
 801908c:	4653      	mov	r3, sl
 801908e:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8019090:	a814      	add	r0, sp, #80	@ 0x50
 8019092:	f7f6 f89e 	bl	800f1d2 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>
 8019096:	a918      	add	r1, sp, #96	@ 0x60
 8019098:	f821 0d02 	strh.w	r0, [r1, #-2]!
 801909c:	a817      	add	r0, sp, #92	@ 0x5c
 801909e:	f7f6 f9c5 	bl	800f42c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>
 80190a2:	f1ba 0f00 	cmp.w	sl, #0
 80190a6:	f040 80f7 	bne.w	8019298 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2d0>
 80190aa:	f1bb 0f01 	cmp.w	fp, #1
 80190ae:	f040 80fb 	bne.w	80192a8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2e0>
 80190b2:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80190b4:	2b00      	cmp	r3, #0
 80190b6:	f040 81a8 	bne.w	801940a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x442>
 80190ba:	fa1f f288 	uxth.w	r2, r8
 80190be:	b905      	cbnz	r5, 80190c2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xfa>
 80190c0:	b15e      	cbz	r6, 80190da <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x112>
 80190c2:	9808      	ldr	r0, [sp, #32]
 80190c4:	fb06 5302 	mla	r3, r6, r2, r5
 80190c8:	4343      	muls	r3, r0
 80190ca:	4631      	mov	r1, r6
 80190cc:	eb07 07d3 	add.w	r7, r7, r3, lsr #3
 80190d0:	f003 0607 	and.w	r6, r3, #7
 80190d4:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80190d6:	1a5b      	subs	r3, r3, r1
 80190d8:	930e      	str	r3, [sp, #56]	@ 0x38
 80190da:	f10b 31ff 	add.w	r1, fp, #4294967295
 80190de:	424b      	negs	r3, r1
 80190e0:	414b      	adcs	r3, r1
 80190e2:	4618      	mov	r0, r3
 80190e4:	4651      	mov	r1, sl
 80190e6:	930c      	str	r3, [sp, #48]	@ 0x30
 80190e8:	f7ff ff1a 	bl	8018f20 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>
 80190ec:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80190ee:	4683      	mov	fp, r0
 80190f0:	4618      	mov	r0, r3
 80190f2:	f7ff ff3f 	bl	8018f74 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>
 80190f6:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 80190f8:	4603      	mov	r3, r0
 80190fa:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 80190fc:	eba1 0a00 	sub.w	sl, r1, r0
 8019100:	990e      	ldr	r1, [sp, #56]	@ 0x38
 8019102:	458a      	cmp	sl, r1
 8019104:	bfa8      	it	ge
 8019106:	468a      	movge	sl, r1
 8019108:	f1ba 0f00 	cmp.w	sl, #0
 801910c:	f340 8155 	ble.w	80193ba <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f2>
 8019110:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8019112:	1b64      	subs	r4, r4, r5
 8019114:	1b0c      	subs	r4, r1, r4
 8019116:	4544      	cmp	r4, r8
 8019118:	bfd4      	ite	le
 801911a:	ebc5 0504 	rsble	r5, r5, r4
 801911e:	ebc5 0508 	rsbgt	r5, r5, r8
 8019122:	2d00      	cmp	r5, #0
 8019124:	f340 8149 	ble.w	80193ba <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f2>
 8019128:	9908      	ldr	r1, [sp, #32]
 801912a:	1b52      	subs	r2, r2, r5
 801912c:	434a      	muls	r2, r1
 801912e:	920e      	str	r2, [sp, #56]	@ 0x38
 8019130:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 8019132:	2a00      	cmp	r2, #0
 8019134:	f040 8175 	bne.w	8019422 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x45a>
 8019138:	4a83      	ldr	r2, [pc, #524]	@ (8019348 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x380>)
 801913a:	930a      	str	r3, [sp, #40]	@ 0x28
 801913c:	6810      	ldr	r0, [r2, #0]
 801913e:	6802      	ldr	r2, [r0, #0]
 8019140:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
 8019142:	4790      	blx	r2
 8019144:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8019146:	9908      	ldr	r1, [sp, #32]
 8019148:	2201      	movs	r2, #1
 801914a:	408a      	lsls	r2, r1
 801914c:	3a01      	subs	r2, #1
 801914e:	497f      	ldr	r1, [pc, #508]	@ (801934c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x384>)
 8019150:	b2d2      	uxtb	r2, r2
 8019152:	880c      	ldrh	r4, [r1, #0]
 8019154:	920c      	str	r2, [sp, #48]	@ 0x30
 8019156:	f9bd 105c 	ldrsh.w	r1, [sp, #92]	@ 0x5c
 801915a:	f9bd 205e 	ldrsh.w	r2, [sp, #94]	@ 0x5e
 801915e:	fb04 1202 	mla	r2, r4, r2, r1
 8019162:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 8019166:	ea4f 2419 	mov.w	r4, r9, lsr #8
 801916a:	920a      	str	r2, [sp, #40]	@ 0x28
 801916c:	f3c9 4207 	ubfx	r2, r9, #16, #8
 8019170:	9212      	str	r2, [sp, #72]	@ 0x48
 8019172:	b2e2      	uxtb	r2, r4
 8019174:	9211      	str	r2, [sp, #68]	@ 0x44
 8019176:	fa5f f289 	uxtb.w	r2, r9
 801917a:	9210      	str	r2, [sp, #64]	@ 0x40
 801917c:	4a74      	ldr	r2, [pc, #464]	@ (8019350 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x388>)
 801917e:	ea4f 1159 	mov.w	r1, r9, lsr #5
 8019182:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8019186:	4022      	ands	r2, r4
 8019188:	430a      	orrs	r2, r1
 801918a:	f3c9 09c4 	ubfx	r9, r9, #3, #5
 801918e:	ea42 0209 	orr.w	r2, r2, r9
 8019192:	ea4f 014b 	mov.w	r1, fp, lsl #1
 8019196:	b292      	uxth	r2, r2
 8019198:	fb05 3b1b 	mls	fp, r5, fp, r3
 801919c:	920f      	str	r2, [sp, #60]	@ 0x3c
 801919e:	460b      	mov	r3, r1
 80191a0:	783a      	ldrb	r2, [r7, #0]
 80191a2:	910b      	str	r1, [sp, #44]	@ 0x2c
 80191a4:	436b      	muls	r3, r5
 80191a6:	4132      	asrs	r2, r6
 80191a8:	eb03 034b 	add.w	r3, r3, fp, lsl #1
 80191ac:	b2d2      	uxtb	r2, r2
 80191ae:	9313      	str	r3, [sp, #76]	@ 0x4c
 80191b0:	f11a 3aff 	adds.w	sl, sl, #4294967295
 80191b4:	f0c0 8149 	bcc.w	801944a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x482>
 80191b8:	f8dd 8028 	ldr.w	r8, [sp, #40]	@ 0x28
 80191bc:	46a9      	mov	r9, r5
 80191be:	f119 39ff 	adds.w	r9, r9, #4294967295
 80191c2:	f0c0 8132 	bcc.w	801942a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x462>
 80191c6:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80191c8:	4013      	ands	r3, r2
 80191ca:	d054      	beq.n	8019276 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2ae>
 80191cc:	20ff      	movs	r0, #255	@ 0xff
 80191ce:	990c      	ldr	r1, [sp, #48]	@ 0x30
 80191d0:	fb90 f1f1 	sdiv	r1, r0, r1
 80191d4:	434b      	muls	r3, r1
 80191d6:	2bfe      	cmp	r3, #254	@ 0xfe
 80191d8:	dd03      	ble.n	80191e2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x21a>
 80191da:	9909      	ldr	r1, [sp, #36]	@ 0x24
 80191dc:	4281      	cmp	r1, r0
 80191de:	f000 8122 	beq.w	8019426 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x45e>
 80191e2:	9909      	ldr	r1, [sp, #36]	@ 0x24
 80191e4:	f8b8 4000 	ldrh.w	r4, [r8]
 80191e8:	9812      	ldr	r0, [sp, #72]	@ 0x48
 80191ea:	fb11 f303 	smulbb	r3, r1, r3
 80191ee:	b29b      	uxth	r3, r3
 80191f0:	1c59      	adds	r1, r3, #1
 80191f2:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 80191f6:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80191fa:	fa1f fe83 	uxth.w	lr, r3
 80191fe:	1221      	asrs	r1, r4, #8
 8019200:	fb10 fb0e 	smulbb	fp, r0, lr
 8019204:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 8019208:	9811      	ldr	r0, [sp, #68]	@ 0x44
 801920a:	43db      	mvns	r3, r3
 801920c:	b2db      	uxtb	r3, r3
 801920e:	ea41 1151 	orr.w	r1, r1, r1, lsr #5
 8019212:	fb01 b103 	mla	r1, r1, r3, fp
 8019216:	ea4f 0ce4 	mov.w	ip, r4, asr #3
 801921a:	fb10 fb0e 	smulbb	fp, r0, lr
 801921e:	00e4      	lsls	r4, r4, #3
 8019220:	9810      	ldr	r0, [sp, #64]	@ 0x40
 8019222:	b2e4      	uxtb	r4, r4
 8019224:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8019228:	fb10 fe0e 	smulbb	lr, r0, lr
 801922c:	fb04 e403 	mla	r4, r4, r3, lr
 8019230:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
 8019234:	b289      	uxth	r1, r1
 8019236:	b2a4      	uxth	r4, r4
 8019238:	ea4c 1c9c 	orr.w	ip, ip, ip, lsr #6
 801923c:	fb0c bc03 	mla	ip, ip, r3, fp
 8019240:	1c4b      	adds	r3, r1, #1
 8019242:	f104 0b01 	add.w	fp, r4, #1
 8019246:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801924a:	eb0b 2b14 	add.w	fp, fp, r4, lsr #8
 801924e:	fa1f fc8c 	uxth.w	ip, ip
 8019252:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
 8019256:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
 801925a:	ea4b 0101 	orr.w	r1, fp, r1
 801925e:	f10c 0b01 	add.w	fp, ip, #1
 8019262:	eb0b 2b1c 	add.w	fp, fp, ip, lsr #8
 8019266:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 801926a:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
 801926e:	ea41 010b 	orr.w	r1, r1, fp
 8019272:	f8a8 1000 	strh.w	r1, [r8]
 8019276:	9b08      	ldr	r3, [sp, #32]
 8019278:	441e      	add	r6, r3
 801927a:	b2b6      	uxth	r6, r6
 801927c:	2e07      	cmp	r6, #7
 801927e:	bf98      	it	ls
 8019280:	411a      	asrls	r2, r3
 8019282:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8019284:	bf89      	itett	hi
 8019286:	787a      	ldrbhi	r2, [r7, #1]
 8019288:	b2d2      	uxtbls	r2, r2
 801928a:	3701      	addhi	r7, #1
 801928c:	2600      	movhi	r6, #0
 801928e:	4498      	add	r8, r3
 8019290:	e795      	b.n	80191be <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1f6>
 8019292:	441c      	add	r4, r3
 8019294:	b224      	sxth	r4, r4
 8019296:	e6d7      	b.n	8019048 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x80>
 8019298:	f1ba 0f01 	cmp.w	sl, #1
 801929c:	f47f af09 	bne.w	80190b2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xea>
 80192a0:	f1bb 0f01 	cmp.w	fp, #1
 80192a4:	f47f af05 	bne.w	80190b2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xea>
 80192a8:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 80192aa:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 80192ac:	1a99      	subs	r1, r3, r2
 80192ae:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80192b0:	1b9b      	subs	r3, r3, r6
 80192b2:	4299      	cmp	r1, r3
 80192b4:	bfa8      	it	ge
 80192b6:	4619      	movge	r1, r3
 80192b8:	2900      	cmp	r1, #0
 80192ba:	9112      	str	r1, [sp, #72]	@ 0x48
 80192bc:	dd7d      	ble.n	80193ba <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f2>
 80192be:	4a22      	ldr	r2, [pc, #136]	@ (8019348 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x380>)
 80192c0:	9211      	str	r2, [sp, #68]	@ 0x44
 80192c2:	6810      	ldr	r0, [r2, #0]
 80192c4:	6803      	ldr	r3, [r0, #0]
 80192c6:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80192c8:	4798      	blx	r3
 80192ca:	f410 7380 	ands.w	r3, r0, #256	@ 0x100
 80192ce:	9912      	ldr	r1, [sp, #72]	@ 0x48
 80192d0:	d006      	beq.n	80192e0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x318>
 80192d2:	9b08      	ldr	r3, [sp, #32]
 80192d4:	2b04      	cmp	r3, #4
 80192d6:	d133      	bne.n	8019340 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x378>
 80192d8:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80192da:	3300      	adds	r3, #0
 80192dc:	bf18      	it	ne
 80192de:	2301      	movne	r3, #1
 80192e0:	0582      	lsls	r2, r0, #22
 80192e2:	fa1f fc88 	uxth.w	ip, r8
 80192e6:	f140 80b9 	bpl.w	801945c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x494>
 80192ea:	9808      	ldr	r0, [sp, #32]
 80192ec:	2808      	cmp	r0, #8
 80192ee:	f040 80b5 	bne.w	801945c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x494>
 80192f2:	2b00      	cmp	r3, #0
 80192f4:	d064      	beq.n	80193c0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f8>
 80192f6:	f10c 0c01 	add.w	ip, ip, #1
 80192fa:	f02c 0301 	bic.w	r3, ip, #1
 80192fe:	b29b      	uxth	r3, r3
 8019300:	bb45      	cbnz	r5, 8019354 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x38c>
 8019302:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8019304:	eb08 0004 	add.w	r0, r8, r4
 8019308:	4290      	cmp	r0, r2
 801930a:	dc23      	bgt.n	8019354 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x38c>
 801930c:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 801930e:	f8bd e05e 	ldrh.w	lr, [sp, #94]	@ 0x5e
 8019312:	6810      	ldr	r0, [r2, #0]
 8019314:	f8bd 205c 	ldrh.w	r2, [sp, #92]	@ 0x5c
 8019318:	6804      	ldr	r4, [r0, #0]
 801931a:	9506      	str	r5, [sp, #24]
 801931c:	f44f 7580 	mov.w	r5, #256	@ 0x100
 8019320:	9505      	str	r5, [sp, #20]
 8019322:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 8019324:	9302      	str	r3, [sp, #8]
 8019326:	b289      	uxth	r1, r1
 8019328:	e9cd 3100 	strd	r3, r1, [sp]
 801932c:	e9cd 9503 	strd	r9, r5, [sp, #12]
 8019330:	ea4f 0c5c 	mov.w	ip, ip, lsr #1
 8019334:	6da4      	ldr	r4, [r4, #88]	@ 0x58
 8019336:	4673      	mov	r3, lr
 8019338:	fb06 710c 	mla	r1, r6, ip, r7
 801933c:	47a0      	blx	r4
 801933e:	e03c      	b.n	80193ba <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f2>
 8019340:	2300      	movs	r3, #0
 8019342:	e7cd      	b.n	80192e0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x318>
 8019344:	2001403a 	.word	0x2001403a
 8019348:	20014044 	.word	0x20014044
 801934c:	2001403c 	.word	0x2001403c
 8019350:	00fff800 	.word	0x00fff800
 8019354:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8019356:	eba4 0e05 	sub.w	lr, r4, r5
 801935a:	eba2 0e0e 	sub.w	lr, r2, lr
 801935e:	45c6      	cmp	lr, r8
 8019360:	bfd4      	ite	le
 8019362:	ebc5 0e0e 	rsble	lr, r5, lr
 8019366:	ebc5 0e08 	rsbgt	lr, r5, r8
 801936a:	f1be 0f00 	cmp.w	lr, #0
 801936e:	d024      	beq.n	80193ba <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f2>
 8019370:	07e8      	lsls	r0, r5, #31
 8019372:	f53f ae9e 	bmi.w	80190b2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xea>
 8019376:	f01e 0001 	ands.w	r0, lr, #1
 801937a:	f47f ae9a 	bne.w	80190b2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xea>
 801937e:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8019380:	f8bd 805e 	ldrh.w	r8, [sp, #94]	@ 0x5e
 8019384:	6814      	ldr	r4, [r2, #0]
 8019386:	f8bd 205c 	ldrh.w	r2, [sp, #92]	@ 0x5c
 801938a:	086d      	lsrs	r5, r5, #1
 801938c:	ea4f 0c5c 	mov.w	ip, ip, lsr #1
 8019390:	fb06 560c 	mla	r6, r6, ip, r5
 8019394:	6825      	ldr	r5, [r4, #0]
 8019396:	9006      	str	r0, [sp, #24]
 8019398:	f44f 7080 	mov.w	r0, #256	@ 0x100
 801939c:	9005      	str	r0, [sp, #20]
 801939e:	9809      	ldr	r0, [sp, #36]	@ 0x24
 80193a0:	9302      	str	r3, [sp, #8]
 80193a2:	e9cd 9003 	strd	r9, r0, [sp, #12]
 80193a6:	b289      	uxth	r1, r1
 80193a8:	fa1f f38e 	uxth.w	r3, lr
 80193ac:	9101      	str	r1, [sp, #4]
 80193ae:	9300      	str	r3, [sp, #0]
 80193b0:	6dad      	ldr	r5, [r5, #88]	@ 0x58
 80193b2:	4643      	mov	r3, r8
 80193b4:	19b9      	adds	r1, r7, r6
 80193b6:	4620      	mov	r0, r4
 80193b8:	47a8      	blx	r5
 80193ba:	b019      	add	sp, #100	@ 0x64
 80193bc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80193c0:	4a28      	ldr	r2, [pc, #160]	@ (8019464 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x49c>)
 80193c2:	f8bd e05e 	ldrh.w	lr, [sp, #94]	@ 0x5e
 80193c6:	6810      	ldr	r0, [r2, #0]
 80193c8:	f8bd 205c 	ldrh.w	r2, [sp, #92]	@ 0x5c
 80193cc:	f8d0 a000 	ldr.w	sl, [r0]
 80193d0:	9306      	str	r3, [sp, #24]
 80193d2:	f44f 7300 	mov.w	r3, #512	@ 0x200
 80193d6:	9305      	str	r3, [sp, #20]
 80193d8:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80193da:	f8cd c008 	str.w	ip, [sp, #8]
 80193de:	e9cd 9303 	strd	r9, r3, [sp, #12]
 80193e2:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80193e4:	1b64      	subs	r4, r4, r5
 80193e6:	1b1c      	subs	r4, r3, r4
 80193e8:	fb06 5608 	mla	r6, r6, r8, r5
 80193ec:	4544      	cmp	r4, r8
 80193ee:	bfd4      	ite	le
 80193f0:	ebc5 0504 	rsble	r5, r5, r4
 80193f4:	ebc5 0508 	rsbgt	r5, r5, r8
 80193f8:	b289      	uxth	r1, r1
 80193fa:	b2ad      	uxth	r5, r5
 80193fc:	9101      	str	r1, [sp, #4]
 80193fe:	9500      	str	r5, [sp, #0]
 8019400:	f8da 4058 	ldr.w	r4, [sl, #88]	@ 0x58
 8019404:	4673      	mov	r3, lr
 8019406:	19b9      	adds	r1, r7, r6
 8019408:	e798      	b.n	801933c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x374>
 801940a:	2208      	movs	r2, #8
 801940c:	9b08      	ldr	r3, [sp, #32]
 801940e:	fb92 f3f3 	sdiv	r3, r2, r3
 8019412:	1e5a      	subs	r2, r3, #1
 8019414:	4442      	add	r2, r8
 8019416:	fb92 f2f3 	sdiv	r2, r2, r3
 801941a:	fb12 f203 	smulbb	r2, r2, r3
 801941e:	b292      	uxth	r2, r2
 8019420:	e64d      	b.n	80190be <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf6>
 8019422:	980d      	ldr	r0, [sp, #52]	@ 0x34
 8019424:	e68f      	b.n	8019146 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x17e>
 8019426:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 8019428:	e723      	b.n	8019272 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2aa>
 801942a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801942c:	b143      	cbz	r3, 8019440 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x478>
 801942e:	441e      	add	r6, r3
 8019430:	b2b6      	uxth	r6, r6
 8019432:	eb07 07d6 	add.w	r7, r7, r6, lsr #3
 8019436:	f006 0607 	and.w	r6, r6, #7
 801943a:	783a      	ldrb	r2, [r7, #0]
 801943c:	4132      	asrs	r2, r6
 801943e:	b2d2      	uxtb	r2, r2
 8019440:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8019442:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 8019444:	4419      	add	r1, r3
 8019446:	910a      	str	r1, [sp, #40]	@ 0x28
 8019448:	e6b2      	b.n	80191b0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1e8>
 801944a:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801944c:	2b00      	cmp	r3, #0
 801944e:	d1b4      	bne.n	80193ba <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f2>
 8019450:	4b04      	ldr	r3, [pc, #16]	@ (8019464 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x49c>)
 8019452:	6818      	ldr	r0, [r3, #0]
 8019454:	6803      	ldr	r3, [r0, #0]
 8019456:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8019458:	4798      	blx	r3
 801945a:	e7ae      	b.n	80193ba <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f2>
 801945c:	2b00      	cmp	r3, #0
 801945e:	f47f af4a 	bne.w	80192f6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x32e>
 8019462:	e626      	b.n	80190b2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xea>
 8019464:	20014044 	.word	0x20014044

08019468 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>:
 8019468:	b538      	push	{r3, r4, r5, lr}
 801946a:	4c15      	ldr	r4, [pc, #84]	@ (80194c0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x58>)
 801946c:	7823      	ldrb	r3, [r4, #0]
 801946e:	f3bf 8f5b 	dmb	ish
 8019472:	07da      	lsls	r2, r3, #31
 8019474:	4605      	mov	r5, r0
 8019476:	d40b      	bmi.n	8019490 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 8019478:	4620      	mov	r0, r4
 801947a:	f008 fc48 	bl	8021d0e <__cxa_guard_acquire>
 801947e:	b138      	cbz	r0, 8019490 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 8019480:	4620      	mov	r0, r4
 8019482:	f008 fc50 	bl	8021d26 <__cxa_guard_release>
 8019486:	4a0f      	ldr	r2, [pc, #60]	@ (80194c4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 8019488:	490f      	ldr	r1, [pc, #60]	@ (80194c8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x60>)
 801948a:	4810      	ldr	r0, [pc, #64]	@ (80194cc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 801948c:	f008 fc38 	bl	8021d00 <__aeabi_atexit>
 8019490:	4c0f      	ldr	r4, [pc, #60]	@ (80194d0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x68>)
 8019492:	7823      	ldrb	r3, [r4, #0]
 8019494:	f3bf 8f5b 	dmb	ish
 8019498:	07db      	lsls	r3, r3, #31
 801949a:	d40b      	bmi.n	80194b4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 801949c:	4620      	mov	r0, r4
 801949e:	f008 fc36 	bl	8021d0e <__cxa_guard_acquire>
 80194a2:	b138      	cbz	r0, 80194b4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 80194a4:	4620      	mov	r0, r4
 80194a6:	f008 fc3e 	bl	8021d26 <__cxa_guard_release>
 80194aa:	4a06      	ldr	r2, [pc, #24]	@ (80194c4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 80194ac:	4909      	ldr	r1, [pc, #36]	@ (80194d4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x6c>)
 80194ae:	480a      	ldr	r0, [pc, #40]	@ (80194d8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 80194b0:	f008 fc26 	bl	8021d00 <__aeabi_atexit>
 80194b4:	4b05      	ldr	r3, [pc, #20]	@ (80194cc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 80194b6:	616b      	str	r3, [r5, #20]
 80194b8:	4b07      	ldr	r3, [pc, #28]	@ (80194d8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 80194ba:	61ab      	str	r3, [r5, #24]
 80194bc:	bd38      	pop	{r3, r4, r5, pc}
 80194be:	bf00      	nop
 80194c0:	20014128 	.word	0x20014128
 80194c4:	20000000 	.word	0x20000000
 80194c8:	08015571 	.word	0x08015571
 80194cc:	200001e0 	.word	0x200001e0
 80194d0:	2001412c 	.word	0x2001412c
 80194d4:	0801556f 	.word	0x0801556f
 80194d8:	200001e4 	.word	0x200001e4

080194dc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>:
 80194dc:	b538      	push	{r3, r4, r5, lr}
 80194de:	4c15      	ldr	r4, [pc, #84]	@ (8019534 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x58>)
 80194e0:	7823      	ldrb	r3, [r4, #0]
 80194e2:	f3bf 8f5b 	dmb	ish
 80194e6:	07da      	lsls	r2, r3, #31
 80194e8:	4605      	mov	r5, r0
 80194ea:	d40b      	bmi.n	8019504 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 80194ec:	4620      	mov	r0, r4
 80194ee:	f008 fc0e 	bl	8021d0e <__cxa_guard_acquire>
 80194f2:	b138      	cbz	r0, 8019504 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 80194f4:	4620      	mov	r0, r4
 80194f6:	f008 fc16 	bl	8021d26 <__cxa_guard_release>
 80194fa:	4a0f      	ldr	r2, [pc, #60]	@ (8019538 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 80194fc:	490f      	ldr	r1, [pc, #60]	@ (801953c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x60>)
 80194fe:	4810      	ldr	r0, [pc, #64]	@ (8019540 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 8019500:	f008 fbfe 	bl	8021d00 <__aeabi_atexit>
 8019504:	4c0f      	ldr	r4, [pc, #60]	@ (8019544 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x68>)
 8019506:	7823      	ldrb	r3, [r4, #0]
 8019508:	f3bf 8f5b 	dmb	ish
 801950c:	07db      	lsls	r3, r3, #31
 801950e:	d40b      	bmi.n	8019528 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 8019510:	4620      	mov	r0, r4
 8019512:	f008 fbfc 	bl	8021d0e <__cxa_guard_acquire>
 8019516:	b138      	cbz	r0, 8019528 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 8019518:	4620      	mov	r0, r4
 801951a:	f008 fc04 	bl	8021d26 <__cxa_guard_release>
 801951e:	4a06      	ldr	r2, [pc, #24]	@ (8019538 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 8019520:	4909      	ldr	r1, [pc, #36]	@ (8019548 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x6c>)
 8019522:	480a      	ldr	r0, [pc, #40]	@ (801954c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 8019524:	f008 fbec 	bl	8021d00 <__aeabi_atexit>
 8019528:	4b05      	ldr	r3, [pc, #20]	@ (8019540 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 801952a:	60eb      	str	r3, [r5, #12]
 801952c:	4b07      	ldr	r3, [pc, #28]	@ (801954c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 801952e:	612b      	str	r3, [r5, #16]
 8019530:	bd38      	pop	{r3, r4, r5, pc}
 8019532:	bf00      	nop
 8019534:	20014100 	.word	0x20014100
 8019538:	20000000 	.word	0x20000000
 801953c:	08015575 	.word	0x08015575
 8019540:	200001b8 	.word	0x200001b8
 8019544:	20014104 	.word	0x20014104
 8019548:	08015573 	.word	0x08015573
 801954c:	200001bc 	.word	0x200001bc

08019550 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>:
 8019550:	b510      	push	{r4, lr}
 8019552:	4604      	mov	r4, r0
 8019554:	f7ff ff88 	bl	8019468 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>
 8019558:	4620      	mov	r0, r4
 801955a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801955e:	f7ff bfbd 	b.w	80194dc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>
	...

08019564 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>:
 8019564:	b538      	push	{r3, r4, r5, lr}
 8019566:	4c15      	ldr	r4, [pc, #84]	@ (80195bc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x58>)
 8019568:	7823      	ldrb	r3, [r4, #0]
 801956a:	f3bf 8f5b 	dmb	ish
 801956e:	07da      	lsls	r2, r3, #31
 8019570:	4605      	mov	r5, r0
 8019572:	d40b      	bmi.n	801958c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 8019574:	4620      	mov	r0, r4
 8019576:	f008 fbca 	bl	8021d0e <__cxa_guard_acquire>
 801957a:	b138      	cbz	r0, 801958c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 801957c:	4620      	mov	r0, r4
 801957e:	f008 fbd2 	bl	8021d26 <__cxa_guard_release>
 8019582:	4a0f      	ldr	r2, [pc, #60]	@ (80195c0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 8019584:	490f      	ldr	r1, [pc, #60]	@ (80195c4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x60>)
 8019586:	4810      	ldr	r0, [pc, #64]	@ (80195c8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 8019588:	f008 fbba 	bl	8021d00 <__aeabi_atexit>
 801958c:	4c0f      	ldr	r4, [pc, #60]	@ (80195cc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x68>)
 801958e:	7823      	ldrb	r3, [r4, #0]
 8019590:	f3bf 8f5b 	dmb	ish
 8019594:	07db      	lsls	r3, r3, #31
 8019596:	d40b      	bmi.n	80195b0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 8019598:	4620      	mov	r0, r4
 801959a:	f008 fbb8 	bl	8021d0e <__cxa_guard_acquire>
 801959e:	b138      	cbz	r0, 80195b0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 80195a0:	4620      	mov	r0, r4
 80195a2:	f008 fbc0 	bl	8021d26 <__cxa_guard_release>
 80195a6:	4a06      	ldr	r2, [pc, #24]	@ (80195c0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 80195a8:	4909      	ldr	r1, [pc, #36]	@ (80195d0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x6c>)
 80195aa:	480a      	ldr	r0, [pc, #40]	@ (80195d4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 80195ac:	f008 fba8 	bl	8021d00 <__aeabi_atexit>
 80195b0:	4b05      	ldr	r3, [pc, #20]	@ (80195c8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 80195b2:	626b      	str	r3, [r5, #36]	@ 0x24
 80195b4:	4b07      	ldr	r3, [pc, #28]	@ (80195d4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 80195b6:	62ab      	str	r3, [r5, #40]	@ 0x28
 80195b8:	bd38      	pop	{r3, r4, r5, pc}
 80195ba:	bf00      	nop
 80195bc:	20014130 	.word	0x20014130
 80195c0:	20000000 	.word	0x20000000
 80195c4:	08015569 	.word	0x08015569
 80195c8:	200001e8 	.word	0x200001e8
 80195cc:	20014134 	.word	0x20014134
 80195d0:	08015567 	.word	0x08015567
 80195d4:	200001ec 	.word	0x200001ec

080195d8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>:
 80195d8:	b538      	push	{r3, r4, r5, lr}
 80195da:	4c15      	ldr	r4, [pc, #84]	@ (8019630 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x58>)
 80195dc:	7823      	ldrb	r3, [r4, #0]
 80195de:	f3bf 8f5b 	dmb	ish
 80195e2:	07da      	lsls	r2, r3, #31
 80195e4:	4605      	mov	r5, r0
 80195e6:	d40b      	bmi.n	8019600 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 80195e8:	4620      	mov	r0, r4
 80195ea:	f008 fb90 	bl	8021d0e <__cxa_guard_acquire>
 80195ee:	b138      	cbz	r0, 8019600 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 80195f0:	4620      	mov	r0, r4
 80195f2:	f008 fb98 	bl	8021d26 <__cxa_guard_release>
 80195f6:	4a0f      	ldr	r2, [pc, #60]	@ (8019634 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 80195f8:	490f      	ldr	r1, [pc, #60]	@ (8019638 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x60>)
 80195fa:	4810      	ldr	r0, [pc, #64]	@ (801963c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 80195fc:	f008 fb80 	bl	8021d00 <__aeabi_atexit>
 8019600:	4c0f      	ldr	r4, [pc, #60]	@ (8019640 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x68>)
 8019602:	7823      	ldrb	r3, [r4, #0]
 8019604:	f3bf 8f5b 	dmb	ish
 8019608:	07db      	lsls	r3, r3, #31
 801960a:	d40b      	bmi.n	8019624 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 801960c:	4620      	mov	r0, r4
 801960e:	f008 fb7e 	bl	8021d0e <__cxa_guard_acquire>
 8019612:	b138      	cbz	r0, 8019624 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 8019614:	4620      	mov	r0, r4
 8019616:	f008 fb86 	bl	8021d26 <__cxa_guard_release>
 801961a:	4a06      	ldr	r2, [pc, #24]	@ (8019634 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 801961c:	4909      	ldr	r1, [pc, #36]	@ (8019644 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x6c>)
 801961e:	480a      	ldr	r0, [pc, #40]	@ (8019648 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 8019620:	f008 fb6e 	bl	8021d00 <__aeabi_atexit>
 8019624:	4b05      	ldr	r3, [pc, #20]	@ (801963c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 8019626:	61eb      	str	r3, [r5, #28]
 8019628:	4b07      	ldr	r3, [pc, #28]	@ (8019648 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 801962a:	622b      	str	r3, [r5, #32]
 801962c:	bd38      	pop	{r3, r4, r5, pc}
 801962e:	bf00      	nop
 8019630:	20014108 	.word	0x20014108
 8019634:	20000000 	.word	0x20000000
 8019638:	0801556d 	.word	0x0801556d
 801963c:	200001c0 	.word	0x200001c0
 8019640:	2001410c 	.word	0x2001410c
 8019644:	0801556b 	.word	0x0801556b
 8019648:	200001c4 	.word	0x200001c4

0801964c <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>:
 801964c:	b510      	push	{r4, lr}
 801964e:	4604      	mov	r4, r0
 8019650:	f7ff ff88 	bl	8019564 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>
 8019654:	4620      	mov	r0, r4
 8019656:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801965a:	f7ff bfbd 	b.w	80195d8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>
	...

08019660 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>:
 8019660:	b538      	push	{r3, r4, r5, lr}
 8019662:	4c15      	ldr	r4, [pc, #84]	@ (80196b8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x58>)
 8019664:	7823      	ldrb	r3, [r4, #0]
 8019666:	f3bf 8f5b 	dmb	ish
 801966a:	07da      	lsls	r2, r3, #31
 801966c:	4605      	mov	r5, r0
 801966e:	d40b      	bmi.n	8019688 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 8019670:	4620      	mov	r0, r4
 8019672:	f008 fb4c 	bl	8021d0e <__cxa_guard_acquire>
 8019676:	b138      	cbz	r0, 8019688 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 8019678:	4620      	mov	r0, r4
 801967a:	f008 fb54 	bl	8021d26 <__cxa_guard_release>
 801967e:	4a0f      	ldr	r2, [pc, #60]	@ (80196bc <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 8019680:	490f      	ldr	r1, [pc, #60]	@ (80196c0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x60>)
 8019682:	4810      	ldr	r0, [pc, #64]	@ (80196c4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 8019684:	f008 fb3c 	bl	8021d00 <__aeabi_atexit>
 8019688:	4c0f      	ldr	r4, [pc, #60]	@ (80196c8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x68>)
 801968a:	7823      	ldrb	r3, [r4, #0]
 801968c:	f3bf 8f5b 	dmb	ish
 8019690:	07db      	lsls	r3, r3, #31
 8019692:	d40b      	bmi.n	80196ac <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 8019694:	4620      	mov	r0, r4
 8019696:	f008 fb3a 	bl	8021d0e <__cxa_guard_acquire>
 801969a:	b138      	cbz	r0, 80196ac <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 801969c:	4620      	mov	r0, r4
 801969e:	f008 fb42 	bl	8021d26 <__cxa_guard_release>
 80196a2:	4a06      	ldr	r2, [pc, #24]	@ (80196bc <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 80196a4:	4909      	ldr	r1, [pc, #36]	@ (80196cc <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x6c>)
 80196a6:	480a      	ldr	r0, [pc, #40]	@ (80196d0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 80196a8:	f008 fb2a 	bl	8021d00 <__aeabi_atexit>
 80196ac:	4b05      	ldr	r3, [pc, #20]	@ (80196c4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 80196ae:	636b      	str	r3, [r5, #52]	@ 0x34
 80196b0:	4b07      	ldr	r3, [pc, #28]	@ (80196d0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 80196b2:	63ab      	str	r3, [r5, #56]	@ 0x38
 80196b4:	bd38      	pop	{r3, r4, r5, pc}
 80196b6:	bf00      	nop
 80196b8:	20014140 	.word	0x20014140
 80196bc:	20000000 	.word	0x20000000
 80196c0:	08015561 	.word	0x08015561
 80196c4:	200001f8 	.word	0x200001f8
 80196c8:	20014144 	.word	0x20014144
 80196cc:	0801555f 	.word	0x0801555f
 80196d0:	200001fc 	.word	0x200001fc

080196d4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>:
 80196d4:	b538      	push	{r3, r4, r5, lr}
 80196d6:	4c15      	ldr	r4, [pc, #84]	@ (801972c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x58>)
 80196d8:	7823      	ldrb	r3, [r4, #0]
 80196da:	f3bf 8f5b 	dmb	ish
 80196de:	07da      	lsls	r2, r3, #31
 80196e0:	4605      	mov	r5, r0
 80196e2:	d40b      	bmi.n	80196fc <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 80196e4:	4620      	mov	r0, r4
 80196e6:	f008 fb12 	bl	8021d0e <__cxa_guard_acquire>
 80196ea:	b138      	cbz	r0, 80196fc <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 80196ec:	4620      	mov	r0, r4
 80196ee:	f008 fb1a 	bl	8021d26 <__cxa_guard_release>
 80196f2:	4a0f      	ldr	r2, [pc, #60]	@ (8019730 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 80196f4:	490f      	ldr	r1, [pc, #60]	@ (8019734 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x60>)
 80196f6:	4810      	ldr	r0, [pc, #64]	@ (8019738 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 80196f8:	f008 fb02 	bl	8021d00 <__aeabi_atexit>
 80196fc:	4c0f      	ldr	r4, [pc, #60]	@ (801973c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x68>)
 80196fe:	7823      	ldrb	r3, [r4, #0]
 8019700:	f3bf 8f5b 	dmb	ish
 8019704:	07db      	lsls	r3, r3, #31
 8019706:	d40b      	bmi.n	8019720 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 8019708:	4620      	mov	r0, r4
 801970a:	f008 fb00 	bl	8021d0e <__cxa_guard_acquire>
 801970e:	b138      	cbz	r0, 8019720 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 8019710:	4620      	mov	r0, r4
 8019712:	f008 fb08 	bl	8021d26 <__cxa_guard_release>
 8019716:	4a06      	ldr	r2, [pc, #24]	@ (8019730 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 8019718:	4909      	ldr	r1, [pc, #36]	@ (8019740 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x6c>)
 801971a:	480a      	ldr	r0, [pc, #40]	@ (8019744 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 801971c:	f008 faf0 	bl	8021d00 <__aeabi_atexit>
 8019720:	4b05      	ldr	r3, [pc, #20]	@ (8019738 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 8019722:	62eb      	str	r3, [r5, #44]	@ 0x2c
 8019724:	4b07      	ldr	r3, [pc, #28]	@ (8019744 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 8019726:	632b      	str	r3, [r5, #48]	@ 0x30
 8019728:	bd38      	pop	{r3, r4, r5, pc}
 801972a:	bf00      	nop
 801972c:	20014110 	.word	0x20014110
 8019730:	20000000 	.word	0x20000000
 8019734:	08015565 	.word	0x08015565
 8019738:	200001c8 	.word	0x200001c8
 801973c:	20014114 	.word	0x20014114
 8019740:	08015563 	.word	0x08015563
 8019744:	200001cc 	.word	0x200001cc

08019748 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>:
 8019748:	b510      	push	{r4, lr}
 801974a:	4604      	mov	r4, r0
 801974c:	f7ff ff88 	bl	8019660 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>
 8019750:	4620      	mov	r0, r4
 8019752:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8019756:	f7ff bfbd 	b.w	80196d4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>
	...

0801975c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>:
 801975c:	b538      	push	{r3, r4, r5, lr}
 801975e:	4c15      	ldr	r4, [pc, #84]	@ (80197b4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x58>)
 8019760:	7823      	ldrb	r3, [r4, #0]
 8019762:	f3bf 8f5b 	dmb	ish
 8019766:	07da      	lsls	r2, r3, #31
 8019768:	4605      	mov	r5, r0
 801976a:	d40b      	bmi.n	8019784 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 801976c:	4620      	mov	r0, r4
 801976e:	f008 face 	bl	8021d0e <__cxa_guard_acquire>
 8019772:	b138      	cbz	r0, 8019784 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 8019774:	4620      	mov	r0, r4
 8019776:	f008 fad6 	bl	8021d26 <__cxa_guard_release>
 801977a:	4a0f      	ldr	r2, [pc, #60]	@ (80197b8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 801977c:	490f      	ldr	r1, [pc, #60]	@ (80197bc <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x60>)
 801977e:	4810      	ldr	r0, [pc, #64]	@ (80197c0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 8019780:	f008 fabe 	bl	8021d00 <__aeabi_atexit>
 8019784:	4c0f      	ldr	r4, [pc, #60]	@ (80197c4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x68>)
 8019786:	7823      	ldrb	r3, [r4, #0]
 8019788:	f3bf 8f5b 	dmb	ish
 801978c:	07db      	lsls	r3, r3, #31
 801978e:	d40b      	bmi.n	80197a8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 8019790:	4620      	mov	r0, r4
 8019792:	f008 fabc 	bl	8021d0e <__cxa_guard_acquire>
 8019796:	b138      	cbz	r0, 80197a8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 8019798:	4620      	mov	r0, r4
 801979a:	f008 fac4 	bl	8021d26 <__cxa_guard_release>
 801979e:	4a06      	ldr	r2, [pc, #24]	@ (80197b8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 80197a0:	4909      	ldr	r1, [pc, #36]	@ (80197c8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x6c>)
 80197a2:	480a      	ldr	r0, [pc, #40]	@ (80197cc <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 80197a4:	f008 faac 	bl	8021d00 <__aeabi_atexit>
 80197a8:	4b05      	ldr	r3, [pc, #20]	@ (80197c0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 80197aa:	656b      	str	r3, [r5, #84]	@ 0x54
 80197ac:	4b07      	ldr	r3, [pc, #28]	@ (80197cc <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 80197ae:	65ab      	str	r3, [r5, #88]	@ 0x58
 80197b0:	bd38      	pop	{r3, r4, r5, pc}
 80197b2:	bf00      	nop
 80197b4:	20014148 	.word	0x20014148
 80197b8:	20000000 	.word	0x20000000
 80197bc:	08015551 	.word	0x08015551
 80197c0:	20000200 	.word	0x20000200
 80197c4:	2001414c 	.word	0x2001414c
 80197c8:	0801554f 	.word	0x0801554f
 80197cc:	20000204 	.word	0x20000204

080197d0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>:
 80197d0:	b538      	push	{r3, r4, r5, lr}
 80197d2:	4c15      	ldr	r4, [pc, #84]	@ (8019828 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x58>)
 80197d4:	7823      	ldrb	r3, [r4, #0]
 80197d6:	f3bf 8f5b 	dmb	ish
 80197da:	07da      	lsls	r2, r3, #31
 80197dc:	4605      	mov	r5, r0
 80197de:	d40b      	bmi.n	80197f8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 80197e0:	4620      	mov	r0, r4
 80197e2:	f008 fa94 	bl	8021d0e <__cxa_guard_acquire>
 80197e6:	b138      	cbz	r0, 80197f8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 80197e8:	4620      	mov	r0, r4
 80197ea:	f008 fa9c 	bl	8021d26 <__cxa_guard_release>
 80197ee:	4a0f      	ldr	r2, [pc, #60]	@ (801982c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 80197f0:	490f      	ldr	r1, [pc, #60]	@ (8019830 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x60>)
 80197f2:	4810      	ldr	r0, [pc, #64]	@ (8019834 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 80197f4:	f008 fa84 	bl	8021d00 <__aeabi_atexit>
 80197f8:	4c0f      	ldr	r4, [pc, #60]	@ (8019838 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x68>)
 80197fa:	7823      	ldrb	r3, [r4, #0]
 80197fc:	f3bf 8f5b 	dmb	ish
 8019800:	07db      	lsls	r3, r3, #31
 8019802:	d40b      	bmi.n	801981c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 8019804:	4620      	mov	r0, r4
 8019806:	f008 fa82 	bl	8021d0e <__cxa_guard_acquire>
 801980a:	b138      	cbz	r0, 801981c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 801980c:	4620      	mov	r0, r4
 801980e:	f008 fa8a 	bl	8021d26 <__cxa_guard_release>
 8019812:	4a06      	ldr	r2, [pc, #24]	@ (801982c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 8019814:	4909      	ldr	r1, [pc, #36]	@ (801983c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x6c>)
 8019816:	480a      	ldr	r0, [pc, #40]	@ (8019840 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 8019818:	f008 fa72 	bl	8021d00 <__aeabi_atexit>
 801981c:	4b05      	ldr	r3, [pc, #20]	@ (8019834 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 801981e:	64eb      	str	r3, [r5, #76]	@ 0x4c
 8019820:	4b07      	ldr	r3, [pc, #28]	@ (8019840 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 8019822:	652b      	str	r3, [r5, #80]	@ 0x50
 8019824:	bd38      	pop	{r3, r4, r5, pc}
 8019826:	bf00      	nop
 8019828:	20014150 	.word	0x20014150
 801982c:	20000000 	.word	0x20000000
 8019830:	08015555 	.word	0x08015555
 8019834:	20000208 	.word	0x20000208
 8019838:	20014154 	.word	0x20014154
 801983c:	08015553 	.word	0x08015553
 8019840:	2000020c 	.word	0x2000020c

08019844 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>:
 8019844:	b538      	push	{r3, r4, r5, lr}
 8019846:	4c15      	ldr	r4, [pc, #84]	@ (801989c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x58>)
 8019848:	7823      	ldrb	r3, [r4, #0]
 801984a:	f3bf 8f5b 	dmb	ish
 801984e:	07da      	lsls	r2, r3, #31
 8019850:	4605      	mov	r5, r0
 8019852:	d40b      	bmi.n	801986c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 8019854:	4620      	mov	r0, r4
 8019856:	f008 fa5a 	bl	8021d0e <__cxa_guard_acquire>
 801985a:	b138      	cbz	r0, 801986c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 801985c:	4620      	mov	r0, r4
 801985e:	f008 fa62 	bl	8021d26 <__cxa_guard_release>
 8019862:	4a0f      	ldr	r2, [pc, #60]	@ (80198a0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 8019864:	490f      	ldr	r1, [pc, #60]	@ (80198a4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x60>)
 8019866:	4810      	ldr	r0, [pc, #64]	@ (80198a8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 8019868:	f008 fa4a 	bl	8021d00 <__aeabi_atexit>
 801986c:	4c0f      	ldr	r4, [pc, #60]	@ (80198ac <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x68>)
 801986e:	7823      	ldrb	r3, [r4, #0]
 8019870:	f3bf 8f5b 	dmb	ish
 8019874:	07db      	lsls	r3, r3, #31
 8019876:	d40b      	bmi.n	8019890 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 8019878:	4620      	mov	r0, r4
 801987a:	f008 fa48 	bl	8021d0e <__cxa_guard_acquire>
 801987e:	b138      	cbz	r0, 8019890 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 8019880:	4620      	mov	r0, r4
 8019882:	f008 fa50 	bl	8021d26 <__cxa_guard_release>
 8019886:	4a06      	ldr	r2, [pc, #24]	@ (80198a0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 8019888:	4909      	ldr	r1, [pc, #36]	@ (80198b0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x6c>)
 801988a:	480a      	ldr	r0, [pc, #40]	@ (80198b4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 801988c:	f008 fa38 	bl	8021d00 <__aeabi_atexit>
 8019890:	4b05      	ldr	r3, [pc, #20]	@ (80198a8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 8019892:	646b      	str	r3, [r5, #68]	@ 0x44
 8019894:	4b07      	ldr	r3, [pc, #28]	@ (80198b4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 8019896:	64ab      	str	r3, [r5, #72]	@ 0x48
 8019898:	bd38      	pop	{r3, r4, r5, pc}
 801989a:	bf00      	nop
 801989c:	20014118 	.word	0x20014118
 80198a0:	20000000 	.word	0x20000000
 80198a4:	08015559 	.word	0x08015559
 80198a8:	200001d0 	.word	0x200001d0
 80198ac:	2001411c 	.word	0x2001411c
 80198b0:	08015557 	.word	0x08015557
 80198b4:	200001d4 	.word	0x200001d4

080198b8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>:
 80198b8:	b538      	push	{r3, r4, r5, lr}
 80198ba:	4c15      	ldr	r4, [pc, #84]	@ (8019910 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x58>)
 80198bc:	7823      	ldrb	r3, [r4, #0]
 80198be:	f3bf 8f5b 	dmb	ish
 80198c2:	07da      	lsls	r2, r3, #31
 80198c4:	4605      	mov	r5, r0
 80198c6:	d40b      	bmi.n	80198e0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 80198c8:	4620      	mov	r0, r4
 80198ca:	f008 fa20 	bl	8021d0e <__cxa_guard_acquire>
 80198ce:	b138      	cbz	r0, 80198e0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 80198d0:	4620      	mov	r0, r4
 80198d2:	f008 fa28 	bl	8021d26 <__cxa_guard_release>
 80198d6:	4a0f      	ldr	r2, [pc, #60]	@ (8019914 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 80198d8:	490f      	ldr	r1, [pc, #60]	@ (8019918 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x60>)
 80198da:	4810      	ldr	r0, [pc, #64]	@ (801991c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 80198dc:	f008 fa10 	bl	8021d00 <__aeabi_atexit>
 80198e0:	4c0f      	ldr	r4, [pc, #60]	@ (8019920 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x68>)
 80198e2:	7823      	ldrb	r3, [r4, #0]
 80198e4:	f3bf 8f5b 	dmb	ish
 80198e8:	07db      	lsls	r3, r3, #31
 80198ea:	d40b      	bmi.n	8019904 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 80198ec:	4620      	mov	r0, r4
 80198ee:	f008 fa0e 	bl	8021d0e <__cxa_guard_acquire>
 80198f2:	b138      	cbz	r0, 8019904 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 80198f4:	4620      	mov	r0, r4
 80198f6:	f008 fa16 	bl	8021d26 <__cxa_guard_release>
 80198fa:	4a06      	ldr	r2, [pc, #24]	@ (8019914 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 80198fc:	4909      	ldr	r1, [pc, #36]	@ (8019924 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x6c>)
 80198fe:	480a      	ldr	r0, [pc, #40]	@ (8019928 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 8019900:	f008 f9fe 	bl	8021d00 <__aeabi_atexit>
 8019904:	4b05      	ldr	r3, [pc, #20]	@ (801991c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 8019906:	63eb      	str	r3, [r5, #60]	@ 0x3c
 8019908:	4b07      	ldr	r3, [pc, #28]	@ (8019928 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 801990a:	642b      	str	r3, [r5, #64]	@ 0x40
 801990c:	bd38      	pop	{r3, r4, r5, pc}
 801990e:	bf00      	nop
 8019910:	20014138 	.word	0x20014138
 8019914:	20000000 	.word	0x20000000
 8019918:	0801555d 	.word	0x0801555d
 801991c:	200001f0 	.word	0x200001f0
 8019920:	2001413c 	.word	0x2001413c
 8019924:	0801555b 	.word	0x0801555b
 8019928:	200001f4 	.word	0x200001f4

0801992c <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>:
 801992c:	b510      	push	{r4, lr}
 801992e:	4604      	mov	r4, r0
 8019930:	f7ff ff14 	bl	801975c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>
 8019934:	4620      	mov	r0, r4
 8019936:	f7ff ff85 	bl	8019844 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>
 801993a:	4620      	mov	r0, r4
 801993c:	f7ff ff48 	bl	80197d0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>
 8019940:	4620      	mov	r0, r4
 8019942:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8019946:	f7ff bfb7 	b.w	80198b8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>
	...

0801994c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>:
 801994c:	b538      	push	{r3, r4, r5, lr}
 801994e:	4c15      	ldr	r4, [pc, #84]	@ (80199a4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x58>)
 8019950:	7823      	ldrb	r3, [r4, #0]
 8019952:	f3bf 8f5b 	dmb	ish
 8019956:	07da      	lsls	r2, r3, #31
 8019958:	4605      	mov	r5, r0
 801995a:	d40b      	bmi.n	8019974 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 801995c:	4620      	mov	r0, r4
 801995e:	f008 f9d6 	bl	8021d0e <__cxa_guard_acquire>
 8019962:	b138      	cbz	r0, 8019974 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 8019964:	4620      	mov	r0, r4
 8019966:	f008 f9de 	bl	8021d26 <__cxa_guard_release>
 801996a:	4a0f      	ldr	r2, [pc, #60]	@ (80199a8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 801996c:	490f      	ldr	r1, [pc, #60]	@ (80199ac <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x60>)
 801996e:	4810      	ldr	r0, [pc, #64]	@ (80199b0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 8019970:	f008 f9c6 	bl	8021d00 <__aeabi_atexit>
 8019974:	4c0f      	ldr	r4, [pc, #60]	@ (80199b4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x68>)
 8019976:	7823      	ldrb	r3, [r4, #0]
 8019978:	f3bf 8f5b 	dmb	ish
 801997c:	07db      	lsls	r3, r3, #31
 801997e:	d40b      	bmi.n	8019998 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 8019980:	4620      	mov	r0, r4
 8019982:	f008 f9c4 	bl	8021d0e <__cxa_guard_acquire>
 8019986:	b138      	cbz	r0, 8019998 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 8019988:	4620      	mov	r0, r4
 801998a:	f008 f9cc 	bl	8021d26 <__cxa_guard_release>
 801998e:	4a06      	ldr	r2, [pc, #24]	@ (80199a8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 8019990:	4909      	ldr	r1, [pc, #36]	@ (80199b8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x6c>)
 8019992:	480a      	ldr	r0, [pc, #40]	@ (80199bc <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 8019994:	f008 f9b4 	bl	8021d00 <__aeabi_atexit>
 8019998:	4b05      	ldr	r3, [pc, #20]	@ (80199b0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 801999a:	666b      	str	r3, [r5, #100]	@ 0x64
 801999c:	4b07      	ldr	r3, [pc, #28]	@ (80199bc <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 801999e:	66ab      	str	r3, [r5, #104]	@ 0x68
 80199a0:	bd38      	pop	{r3, r4, r5, pc}
 80199a2:	bf00      	nop
 80199a4:	20014120 	.word	0x20014120
 80199a8:	20000000 	.word	0x20000000
 80199ac:	08015549 	.word	0x08015549
 80199b0:	200001d8 	.word	0x200001d8
 80199b4:	20014124 	.word	0x20014124
 80199b8:	08015547 	.word	0x08015547
 80199bc:	200001dc 	.word	0x200001dc

080199c0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>:
 80199c0:	b538      	push	{r3, r4, r5, lr}
 80199c2:	4c15      	ldr	r4, [pc, #84]	@ (8019a18 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x58>)
 80199c4:	7823      	ldrb	r3, [r4, #0]
 80199c6:	f3bf 8f5b 	dmb	ish
 80199ca:	07da      	lsls	r2, r3, #31
 80199cc:	4605      	mov	r5, r0
 80199ce:	d40b      	bmi.n	80199e8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 80199d0:	4620      	mov	r0, r4
 80199d2:	f008 f99c 	bl	8021d0e <__cxa_guard_acquire>
 80199d6:	b138      	cbz	r0, 80199e8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 80199d8:	4620      	mov	r0, r4
 80199da:	f008 f9a4 	bl	8021d26 <__cxa_guard_release>
 80199de:	4a0f      	ldr	r2, [pc, #60]	@ (8019a1c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 80199e0:	490f      	ldr	r1, [pc, #60]	@ (8019a20 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x60>)
 80199e2:	4810      	ldr	r0, [pc, #64]	@ (8019a24 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 80199e4:	f008 f98c 	bl	8021d00 <__aeabi_atexit>
 80199e8:	4c0f      	ldr	r4, [pc, #60]	@ (8019a28 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x68>)
 80199ea:	7823      	ldrb	r3, [r4, #0]
 80199ec:	f3bf 8f5b 	dmb	ish
 80199f0:	07db      	lsls	r3, r3, #31
 80199f2:	d40b      	bmi.n	8019a0c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 80199f4:	4620      	mov	r0, r4
 80199f6:	f008 f98a 	bl	8021d0e <__cxa_guard_acquire>
 80199fa:	b138      	cbz	r0, 8019a0c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 80199fc:	4620      	mov	r0, r4
 80199fe:	f008 f992 	bl	8021d26 <__cxa_guard_release>
 8019a02:	4a06      	ldr	r2, [pc, #24]	@ (8019a1c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 8019a04:	4909      	ldr	r1, [pc, #36]	@ (8019a2c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x6c>)
 8019a06:	480a      	ldr	r0, [pc, #40]	@ (8019a30 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 8019a08:	f008 f97a 	bl	8021d00 <__aeabi_atexit>
 8019a0c:	4b05      	ldr	r3, [pc, #20]	@ (8019a24 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 8019a0e:	65eb      	str	r3, [r5, #92]	@ 0x5c
 8019a10:	4b07      	ldr	r3, [pc, #28]	@ (8019a30 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 8019a12:	662b      	str	r3, [r5, #96]	@ 0x60
 8019a14:	bd38      	pop	{r3, r4, r5, pc}
 8019a16:	bf00      	nop
 8019a18:	200140f8 	.word	0x200140f8
 8019a1c:	20000000 	.word	0x20000000
 8019a20:	0801554d 	.word	0x0801554d
 8019a24:	200001b0 	.word	0x200001b0
 8019a28:	200140fc 	.word	0x200140fc
 8019a2c:	0801554b 	.word	0x0801554b
 8019a30:	200001b4 	.word	0x200001b4

08019a34 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>:
 8019a34:	b510      	push	{r4, lr}
 8019a36:	4604      	mov	r4, r0
 8019a38:	f7ff ff88 	bl	801994c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>
 8019a3c:	4620      	mov	r0, r4
 8019a3e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8019a42:	f7ff bfbd 	b.w	80199c0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>
	...

08019a48 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>:
 8019a48:	b538      	push	{r3, r4, r5, lr}
 8019a4a:	4c15      	ldr	r4, [pc, #84]	@ (8019aa0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x58>)
 8019a4c:	7823      	ldrb	r3, [r4, #0]
 8019a4e:	f3bf 8f5b 	dmb	ish
 8019a52:	07da      	lsls	r2, r3, #31
 8019a54:	4605      	mov	r5, r0
 8019a56:	d40b      	bmi.n	8019a70 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 8019a58:	4620      	mov	r0, r4
 8019a5a:	f008 f958 	bl	8021d0e <__cxa_guard_acquire>
 8019a5e:	b138      	cbz	r0, 8019a70 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 8019a60:	4620      	mov	r0, r4
 8019a62:	f008 f960 	bl	8021d26 <__cxa_guard_release>
 8019a66:	4a0f      	ldr	r2, [pc, #60]	@ (8019aa4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 8019a68:	490f      	ldr	r1, [pc, #60]	@ (8019aa8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x60>)
 8019a6a:	4810      	ldr	r0, [pc, #64]	@ (8019aac <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 8019a6c:	f008 f948 	bl	8021d00 <__aeabi_atexit>
 8019a70:	4c0f      	ldr	r4, [pc, #60]	@ (8019ab0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x68>)
 8019a72:	7823      	ldrb	r3, [r4, #0]
 8019a74:	f3bf 8f5b 	dmb	ish
 8019a78:	07db      	lsls	r3, r3, #31
 8019a7a:	d40b      	bmi.n	8019a94 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 8019a7c:	4620      	mov	r0, r4
 8019a7e:	f008 f946 	bl	8021d0e <__cxa_guard_acquire>
 8019a82:	b138      	cbz	r0, 8019a94 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 8019a84:	4620      	mov	r0, r4
 8019a86:	f008 f94e 	bl	8021d26 <__cxa_guard_release>
 8019a8a:	4a06      	ldr	r2, [pc, #24]	@ (8019aa4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 8019a8c:	4909      	ldr	r1, [pc, #36]	@ (8019ab4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x6c>)
 8019a8e:	480a      	ldr	r0, [pc, #40]	@ (8019ab8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 8019a90:	f008 f936 	bl	8021d00 <__aeabi_atexit>
 8019a94:	4b05      	ldr	r3, [pc, #20]	@ (8019aac <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 8019a96:	676b      	str	r3, [r5, #116]	@ 0x74
 8019a98:	4b07      	ldr	r3, [pc, #28]	@ (8019ab8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 8019a9a:	67ab      	str	r3, [r5, #120]	@ 0x78
 8019a9c:	bd38      	pop	{r3, r4, r5, pc}
 8019a9e:	bf00      	nop
 8019aa0:	200140f0 	.word	0x200140f0
 8019aa4:	20000000 	.word	0x20000000
 8019aa8:	08015541 	.word	0x08015541
 8019aac:	200001a8 	.word	0x200001a8
 8019ab0:	200140f4 	.word	0x200140f4
 8019ab4:	0801553f 	.word	0x0801553f
 8019ab8:	200001ac 	.word	0x200001ac

08019abc <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>:
 8019abc:	b538      	push	{r3, r4, r5, lr}
 8019abe:	4c15      	ldr	r4, [pc, #84]	@ (8019b14 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x58>)
 8019ac0:	7823      	ldrb	r3, [r4, #0]
 8019ac2:	f3bf 8f5b 	dmb	ish
 8019ac6:	07da      	lsls	r2, r3, #31
 8019ac8:	4605      	mov	r5, r0
 8019aca:	d40b      	bmi.n	8019ae4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 8019acc:	4620      	mov	r0, r4
 8019ace:	f008 f91e 	bl	8021d0e <__cxa_guard_acquire>
 8019ad2:	b138      	cbz	r0, 8019ae4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 8019ad4:	4620      	mov	r0, r4
 8019ad6:	f008 f926 	bl	8021d26 <__cxa_guard_release>
 8019ada:	4a0f      	ldr	r2, [pc, #60]	@ (8019b18 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 8019adc:	490f      	ldr	r1, [pc, #60]	@ (8019b1c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x60>)
 8019ade:	4810      	ldr	r0, [pc, #64]	@ (8019b20 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 8019ae0:	f008 f90e 	bl	8021d00 <__aeabi_atexit>
 8019ae4:	4c0f      	ldr	r4, [pc, #60]	@ (8019b24 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x68>)
 8019ae6:	7823      	ldrb	r3, [r4, #0]
 8019ae8:	f3bf 8f5b 	dmb	ish
 8019aec:	07db      	lsls	r3, r3, #31
 8019aee:	d40b      	bmi.n	8019b08 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 8019af0:	4620      	mov	r0, r4
 8019af2:	f008 f90c 	bl	8021d0e <__cxa_guard_acquire>
 8019af6:	b138      	cbz	r0, 8019b08 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 8019af8:	4620      	mov	r0, r4
 8019afa:	f008 f914 	bl	8021d26 <__cxa_guard_release>
 8019afe:	4a06      	ldr	r2, [pc, #24]	@ (8019b18 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 8019b00:	4909      	ldr	r1, [pc, #36]	@ (8019b28 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x6c>)
 8019b02:	480a      	ldr	r0, [pc, #40]	@ (8019b2c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 8019b04:	f008 f8fc 	bl	8021d00 <__aeabi_atexit>
 8019b08:	4b05      	ldr	r3, [pc, #20]	@ (8019b20 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 8019b0a:	66eb      	str	r3, [r5, #108]	@ 0x6c
 8019b0c:	4b07      	ldr	r3, [pc, #28]	@ (8019b2c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 8019b0e:	672b      	str	r3, [r5, #112]	@ 0x70
 8019b10:	bd38      	pop	{r3, r4, r5, pc}
 8019b12:	bf00      	nop
 8019b14:	200140e8 	.word	0x200140e8
 8019b18:	20000000 	.word	0x20000000
 8019b1c:	08015545 	.word	0x08015545
 8019b20:	200001a0 	.word	0x200001a0
 8019b24:	200140ec 	.word	0x200140ec
 8019b28:	08015543 	.word	0x08015543
 8019b2c:	200001a4 	.word	0x200001a4

08019b30 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>:
 8019b30:	b510      	push	{r4, lr}
 8019b32:	4604      	mov	r4, r0
 8019b34:	f7ff ff88 	bl	8019a48 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>
 8019b38:	4620      	mov	r0, r4
 8019b3a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8019b3e:	f7ff bfbd 	b.w	8019abc <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>

08019b42 <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>:
 8019b42:	b510      	push	{r4, lr}
 8019b44:	4604      	mov	r4, r0
 8019b46:	f7ff fff3 	bl	8019b30 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>
 8019b4a:	4620      	mov	r0, r4
 8019b4c:	f7ff ff72 	bl	8019a34 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>
 8019b50:	4620      	mov	r0, r4
 8019b52:	f7ff fdf9 	bl	8019748 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>
 8019b56:	4620      	mov	r0, r4
 8019b58:	f7ff fcfa 	bl	8019550 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>
 8019b5c:	4620      	mov	r0, r4
 8019b5e:	f7ff fd75 	bl	801964c <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>
 8019b62:	4620      	mov	r0, r4
 8019b64:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8019b68:	f7ff bee0 	b.w	801992c <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>

08019b6c <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>:
 8019b6c:	b538      	push	{r3, r4, r5, lr}
 8019b6e:	4c0b      	ldr	r4, [pc, #44]	@ (8019b9c <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x30>)
 8019b70:	7823      	ldrb	r3, [r4, #0]
 8019b72:	f3bf 8f5b 	dmb	ish
 8019b76:	07db      	lsls	r3, r3, #31
 8019b78:	4605      	mov	r5, r0
 8019b7a:	d40b      	bmi.n	8019b94 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
 8019b7c:	4620      	mov	r0, r4
 8019b7e:	f008 f8c6 	bl	8021d0e <__cxa_guard_acquire>
 8019b82:	b138      	cbz	r0, 8019b94 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
 8019b84:	4620      	mov	r0, r4
 8019b86:	f008 f8ce 	bl	8021d26 <__cxa_guard_release>
 8019b8a:	4a05      	ldr	r2, [pc, #20]	@ (8019ba0 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x34>)
 8019b8c:	4905      	ldr	r1, [pc, #20]	@ (8019ba4 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x38>)
 8019b8e:	4806      	ldr	r0, [pc, #24]	@ (8019ba8 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
 8019b90:	f008 f8b6 	bl	8021d00 <__aeabi_atexit>
 8019b94:	4b04      	ldr	r3, [pc, #16]	@ (8019ba8 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
 8019b96:	67eb      	str	r3, [r5, #124]	@ 0x7c
 8019b98:	bd38      	pop	{r3, r4, r5, pc}
 8019b9a:	bf00      	nop
 8019b9c:	200140dc 	.word	0x200140dc
 8019ba0:	20000000 	.word	0x20000000
 8019ba4:	0801553d 	.word	0x0801553d
 8019ba8:	20000198 	.word	0x20000198

08019bac <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>:
 8019bac:	b538      	push	{r3, r4, r5, lr}
 8019bae:	4c0b      	ldr	r4, [pc, #44]	@ (8019bdc <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x30>)
 8019bb0:	7823      	ldrb	r3, [r4, #0]
 8019bb2:	f3bf 8f5b 	dmb	ish
 8019bb6:	07db      	lsls	r3, r3, #31
 8019bb8:	4605      	mov	r5, r0
 8019bba:	d40b      	bmi.n	8019bd4 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
 8019bbc:	4620      	mov	r0, r4
 8019bbe:	f008 f8a6 	bl	8021d0e <__cxa_guard_acquire>
 8019bc2:	b138      	cbz	r0, 8019bd4 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
 8019bc4:	4620      	mov	r0, r4
 8019bc6:	f008 f8ae 	bl	8021d26 <__cxa_guard_release>
 8019bca:	4a05      	ldr	r2, [pc, #20]	@ (8019be0 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x34>)
 8019bcc:	4905      	ldr	r1, [pc, #20]	@ (8019be4 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x38>)
 8019bce:	4806      	ldr	r0, [pc, #24]	@ (8019be8 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
 8019bd0:	f008 f896 	bl	8021d00 <__aeabi_atexit>
 8019bd4:	4b04      	ldr	r3, [pc, #16]	@ (8019be8 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
 8019bd6:	f8c5 3080 	str.w	r3, [r5, #128]	@ 0x80
 8019bda:	bd38      	pop	{r3, r4, r5, pc}
 8019bdc:	200140e0 	.word	0x200140e0
 8019be0:	20000000 	.word	0x20000000
 8019be4:	0801553b 	.word	0x0801553b
 8019be8:	2000019c 	.word	0x2000019c

08019bec <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>:
 8019bec:	b570      	push	{r4, r5, r6, lr}
 8019bee:	4d0d      	ldr	r5, [pc, #52]	@ (8019c24 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x38>)
 8019bf0:	4c0d      	ldr	r4, [pc, #52]	@ (8019c28 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x3c>)
 8019bf2:	782b      	ldrb	r3, [r5, #0]
 8019bf4:	f3bf 8f5b 	dmb	ish
 8019bf8:	f013 0f01 	tst.w	r3, #1
 8019bfc:	4606      	mov	r6, r0
 8019bfe:	d10d      	bne.n	8019c1c <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
 8019c00:	4628      	mov	r0, r5
 8019c02:	f008 f884 	bl	8021d0e <__cxa_guard_acquire>
 8019c06:	b148      	cbz	r0, 8019c1c <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
 8019c08:	4b08      	ldr	r3, [pc, #32]	@ (8019c2c <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x40>)
 8019c0a:	6023      	str	r3, [r4, #0]
 8019c0c:	4628      	mov	r0, r5
 8019c0e:	f008 f88a 	bl	8021d26 <__cxa_guard_release>
 8019c12:	4a07      	ldr	r2, [pc, #28]	@ (8019c30 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x44>)
 8019c14:	4907      	ldr	r1, [pc, #28]	@ (8019c34 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x48>)
 8019c16:	4620      	mov	r0, r4
 8019c18:	f008 f872 	bl	8021d00 <__aeabi_atexit>
 8019c1c:	f8c6 4084 	str.w	r4, [r6, #132]	@ 0x84
 8019c20:	bd70      	pop	{r4, r5, r6, pc}
 8019c22:	bf00      	nop
 8019c24:	200140e4 	.word	0x200140e4
 8019c28:	2001425c 	.word	0x2001425c
 8019c2c:	0802529c 	.word	0x0802529c
 8019c30:	20000000 	.word	0x20000000
 8019c34:	08015539 	.word	0x08015539

08019c38 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>:
 8019c38:	b510      	push	{r4, lr}
 8019c3a:	4604      	mov	r4, r0
 8019c3c:	f7ff ff96 	bl	8019b6c <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>
 8019c40:	4620      	mov	r0, r4
 8019c42:	f7ff ffb3 	bl	8019bac <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>
 8019c46:	4620      	mov	r0, r4
 8019c48:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8019c4c:	f7ff bfce 	b.w	8019bec <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>

08019c50 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv>:
 8019c50:	b570      	push	{r4, r5, r6, lr}
 8019c52:	4d0d      	ldr	r5, [pc, #52]	@ (8019c88 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x38>)
 8019c54:	4c0d      	ldr	r4, [pc, #52]	@ (8019c8c <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x3c>)
 8019c56:	782b      	ldrb	r3, [r5, #0]
 8019c58:	f3bf 8f5b 	dmb	ish
 8019c5c:	f013 0f01 	tst.w	r3, #1
 8019c60:	4606      	mov	r6, r0
 8019c62:	d10d      	bne.n	8019c80 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x30>
 8019c64:	4628      	mov	r0, r5
 8019c66:	f008 f852 	bl	8021d0e <__cxa_guard_acquire>
 8019c6a:	b148      	cbz	r0, 8019c80 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x30>
 8019c6c:	4b08      	ldr	r3, [pc, #32]	@ (8019c90 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x40>)
 8019c6e:	6023      	str	r3, [r4, #0]
 8019c70:	4628      	mov	r0, r5
 8019c72:	f008 f858 	bl	8021d26 <__cxa_guard_release>
 8019c76:	4a07      	ldr	r2, [pc, #28]	@ (8019c94 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x44>)
 8019c78:	4907      	ldr	r1, [pc, #28]	@ (8019c98 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x48>)
 8019c7a:	4620      	mov	r0, r4
 8019c7c:	f008 f840 	bl	8021d00 <__aeabi_atexit>
 8019c80:	f8c6 4088 	str.w	r4, [r6, #136]	@ 0x88
 8019c84:	bd70      	pop	{r4, r5, r6, pc}
 8019c86:	bf00      	nop
 8019c88:	200140d8 	.word	0x200140d8
 8019c8c:	20014158 	.word	0x20014158
 8019c90:	080252b8 	.word	0x080252b8
 8019c94:	20000000 	.word	0x20000000
 8019c98:	08015537 	.word	0x08015537

08019c9c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>:
 8019c9c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019ca0:	e9dd 450b 	ldrd	r4, r5, [sp, #44]	@ 0x2c
 8019ca4:	f9bd e024 	ldrsh.w	lr, [sp, #36]	@ 0x24
 8019ca8:	f9bd b028 	ldrsh.w	fp, [sp, #40]	@ 0x28
 8019cac:	f89d 9034 	ldrb.w	r9, [sp, #52]	@ 0x34
 8019cb0:	f89d 7038 	ldrb.w	r7, [sp, #56]	@ 0x38
 8019cb4:	f89d 603c 	ldrb.w	r6, [sp, #60]	@ 0x3c
 8019cb8:	8808      	ldrh	r0, [r1, #0]
 8019cba:	fb05 4c0e 	mla	ip, r5, lr, r4
 8019cbe:	2d00      	cmp	r5, #0
 8019cc0:	eb02 0a0c 	add.w	sl, r2, ip
 8019cc4:	f2c0 80b0 	blt.w	8019e28 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 8019cc8:	45ab      	cmp	fp, r5
 8019cca:	f340 80ad 	ble.w	8019e28 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 8019cce:	2c00      	cmp	r4, #0
 8019cd0:	f2c0 80a8 	blt.w	8019e24 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 8019cd4:	45a6      	cmp	lr, r4
 8019cd6:	f340 80a5 	ble.w	8019e24 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 8019cda:	f812 200c 	ldrb.w	r2, [r2, ip]
 8019cde:	f833 8012 	ldrh.w	r8, [r3, r2, lsl #1]
 8019ce2:	1c62      	adds	r2, r4, #1
 8019ce4:	f100 80a3 	bmi.w	8019e2e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 8019ce8:	4596      	cmp	lr, r2
 8019cea:	f340 80a0 	ble.w	8019e2e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 8019cee:	f1b9 0f00 	cmp.w	r9, #0
 8019cf2:	f000 809c 	beq.w	8019e2e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 8019cf6:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8019cfa:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 8019cfe:	3501      	adds	r5, #1
 8019d00:	f100 8099 	bmi.w	8019e36 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 8019d04:	45ab      	cmp	fp, r5
 8019d06:	f340 8096 	ble.w	8019e36 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 8019d0a:	2f00      	cmp	r7, #0
 8019d0c:	f000 8093 	beq.w	8019e36 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 8019d10:	2c00      	cmp	r4, #0
 8019d12:	f2c0 808e 	blt.w	8019e32 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 8019d16:	45a6      	cmp	lr, r4
 8019d18:	f340 808b 	ble.w	8019e32 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 8019d1c:	f81a 200e 	ldrb.w	r2, [sl, lr]
 8019d20:	f833 5012 	ldrh.w	r5, [r3, r2, lsl #1]
 8019d24:	3401      	adds	r4, #1
 8019d26:	f100 8089 	bmi.w	8019e3c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 8019d2a:	45a6      	cmp	lr, r4
 8019d2c:	f340 8086 	ble.w	8019e3c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 8019d30:	f1b9 0f00 	cmp.w	r9, #0
 8019d34:	f000 8082 	beq.w	8019e3c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 8019d38:	44d6      	add	lr, sl
 8019d3a:	f89e 2001 	ldrb.w	r2, [lr, #1]
 8019d3e:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 8019d42:	ea4f 4408 	mov.w	r4, r8, lsl #16
 8019d46:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 8019d4a:	f428 68fc 	bic.w	r8, r8, #2016	@ 0x7e0
 8019d4e:	fb19 fe07 	smulbb	lr, r9, r7
 8019d52:	ea44 0808 	orr.w	r8, r4, r8
 8019d56:	ea4f 440c 	mov.w	r4, ip, lsl #16
 8019d5a:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 8019d5e:	f1c7 0210 	rsb	r2, r7, #16
 8019d62:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 8019d66:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 8019d6a:	ea44 0c0c 	orr.w	ip, r4, ip
 8019d6e:	eba2 0209 	sub.w	r2, r2, r9
 8019d72:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 8019d76:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 8019d7a:	fb04 f40c 	mul.w	r4, r4, ip
 8019d7e:	fb02 4808 	mla	r8, r2, r8, r4
 8019d82:	041a      	lsls	r2, r3, #16
 8019d84:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 8019d88:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 8019d8c:	4313      	orrs	r3, r2
 8019d8e:	042a      	lsls	r2, r5, #16
 8019d90:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 8019d94:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
 8019d98:	fb0e 8303 	mla	r3, lr, r3, r8
 8019d9c:	432a      	orrs	r2, r5
 8019d9e:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 8019da2:	fb07 3202 	mla	r2, r7, r2, r3
 8019da6:	0d53      	lsrs	r3, r2, #21
 8019da8:	0952      	lsrs	r2, r2, #5
 8019daa:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8019dae:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 8019db2:	431a      	orrs	r2, r3
 8019db4:	b293      	uxth	r3, r2
 8019db6:	b2b4      	uxth	r4, r6
 8019db8:	1202      	asrs	r2, r0, #8
 8019dba:	43f6      	mvns	r6, r6
 8019dbc:	b2f6      	uxtb	r6, r6
 8019dbe:	121d      	asrs	r5, r3, #8
 8019dc0:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 8019dc4:	fb12 f206 	smulbb	r2, r2, r6
 8019dc8:	10c7      	asrs	r7, r0, #3
 8019dca:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 8019dce:	00c0      	lsls	r0, r0, #3
 8019dd0:	fb05 2504 	mla	r5, r5, r4, r2
 8019dd4:	b2c0      	uxtb	r0, r0
 8019dd6:	10da      	asrs	r2, r3, #3
 8019dd8:	00db      	lsls	r3, r3, #3
 8019dda:	b2db      	uxtb	r3, r3
 8019ddc:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8019de0:	fb10 f006 	smulbb	r0, r0, r6
 8019de4:	b2ad      	uxth	r5, r5
 8019de6:	fb03 0004 	mla	r0, r3, r4, r0
 8019dea:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 8019dee:	fb17 f706 	smulbb	r7, r7, r6
 8019df2:	b280      	uxth	r0, r0
 8019df4:	1c6b      	adds	r3, r5, #1
 8019df6:	fb02 7204 	mla	r2, r2, r4, r7
 8019dfa:	b292      	uxth	r2, r2
 8019dfc:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8019e00:	1c43      	adds	r3, r0, #1
 8019e02:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8019e06:	1c50      	adds	r0, r2, #1
 8019e08:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 8019e0c:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 8019e10:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8019e14:	0952      	lsrs	r2, r2, #5
 8019e16:	432b      	orrs	r3, r5
 8019e18:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8019e1c:	4313      	orrs	r3, r2
 8019e1e:	800b      	strh	r3, [r1, #0]
 8019e20:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019e24:	4680      	mov	r8, r0
 8019e26:	e75c      	b.n	8019ce2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x46>
 8019e28:	4684      	mov	ip, r0
 8019e2a:	4680      	mov	r8, r0
 8019e2c:	e767      	b.n	8019cfe <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 8019e2e:	4684      	mov	ip, r0
 8019e30:	e765      	b.n	8019cfe <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 8019e32:	4605      	mov	r5, r0
 8019e34:	e776      	b.n	8019d24 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x88>
 8019e36:	4603      	mov	r3, r0
 8019e38:	4605      	mov	r5, r0
 8019e3a:	e782      	b.n	8019d42 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
 8019e3c:	4603      	mov	r3, r0
 8019e3e:	e780      	b.n	8019d42 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>

08019e40 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019e40:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019e44:	b099      	sub	sp, #100	@ 0x64
 8019e46:	e9dd a523 	ldrd	sl, r5, [sp, #140]	@ 0x8c
 8019e4a:	9215      	str	r2, [sp, #84]	@ 0x54
 8019e4c:	9309      	str	r3, [sp, #36]	@ 0x24
 8019e4e:	9a27      	ldr	r2, [sp, #156]	@ 0x9c
 8019e50:	f89d 30ac 	ldrb.w	r3, [sp, #172]	@ 0xac
 8019e54:	930d      	str	r3, [sp, #52]	@ 0x34
 8019e56:	910c      	str	r1, [sp, #48]	@ 0x30
 8019e58:	e9dd 1328 	ldrd	r1, r3, [sp, #160]	@ 0xa0
 8019e5c:	9016      	str	r0, [sp, #88]	@ 0x58
 8019e5e:	6850      	ldr	r0, [r2, #4]
 8019e60:	6812      	ldr	r2, [r2, #0]
 8019e62:	fb00 1303 	mla	r3, r0, r3, r1
 8019e66:	eb02 0843 	add.w	r8, r2, r3, lsl #1
 8019e6a:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 8019e6c:	681b      	ldr	r3, [r3, #0]
 8019e6e:	930b      	str	r3, [sp, #44]	@ 0x2c
 8019e70:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 8019e72:	685e      	ldr	r6, [r3, #4]
 8019e74:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8019e76:	43db      	mvns	r3, r3
 8019e78:	b2db      	uxtb	r3, r3
 8019e7a:	3604      	adds	r6, #4
 8019e7c:	930a      	str	r3, [sp, #40]	@ 0x28
 8019e7e:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8019e80:	2b00      	cmp	r3, #0
 8019e82:	dc03      	bgt.n	8019e8c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 8019e84:	9b15      	ldr	r3, [sp, #84]	@ 0x54
 8019e86:	2b00      	cmp	r3, #0
 8019e88:	f340 8225 	ble.w	801a2d6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 8019e8c:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 8019e8e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8019e92:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8019e96:	1e48      	subs	r0, r1, #1
 8019e98:	1e57      	subs	r7, r2, #1
 8019e9a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8019e9c:	2b00      	cmp	r3, #0
 8019e9e:	f340 80e3 	ble.w	801a068 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8019ea2:	ea5f 4c2a 	movs.w	ip, sl, asr #16
 8019ea6:	ea4f 4325 	mov.w	r3, r5, asr #16
 8019eaa:	d406      	bmi.n	8019eba <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8019eac:	4584      	cmp	ip, r0
 8019eae:	da04      	bge.n	8019eba <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8019eb0:	2b00      	cmp	r3, #0
 8019eb2:	db02      	blt.n	8019eba <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8019eb4:	42bb      	cmp	r3, r7
 8019eb6:	f2c0 80d8 	blt.w	801a06a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 8019eba:	f11c 0c01 	adds.w	ip, ip, #1
 8019ebe:	f100 80c9 	bmi.w	801a054 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8019ec2:	4561      	cmp	r1, ip
 8019ec4:	f2c0 80c6 	blt.w	801a054 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8019ec8:	3301      	adds	r3, #1
 8019eca:	f100 80c3 	bmi.w	801a054 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8019ece:	429a      	cmp	r2, r3
 8019ed0:	f2c0 80c0 	blt.w	801a054 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8019ed4:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
 8019ed8:	4647      	mov	r7, r8
 8019eda:	f1bb 0f00 	cmp.w	fp, #0
 8019ede:	f340 80e3 	ble.w	801a0a8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x268>
 8019ee2:	9a2a      	ldr	r2, [sp, #168]	@ 0xa8
 8019ee4:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 8019ee6:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8019eea:	689b      	ldr	r3, [r3, #8]
 8019eec:	ea5f 422a 	movs.w	r2, sl, asr #16
 8019ef0:	ea4f 4c25 	mov.w	ip, r5, asr #16
 8019ef4:	f3ca 3003 	ubfx	r0, sl, #12, #4
 8019ef8:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8019efc:	f100 8121 	bmi.w	801a142 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 8019f00:	f103 39ff 	add.w	r9, r3, #4294967295
 8019f04:	454a      	cmp	r2, r9
 8019f06:	f280 811c 	bge.w	801a142 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 8019f0a:	f1bc 0f00 	cmp.w	ip, #0
 8019f0e:	f2c0 8118 	blt.w	801a142 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 8019f12:	f10e 39ff 	add.w	r9, lr, #4294967295
 8019f16:	45cc      	cmp	ip, r9
 8019f18:	f280 8113 	bge.w	801a142 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 8019f1c:	b21b      	sxth	r3, r3
 8019f1e:	fb0c 2203 	mla	r2, ip, r3, r2
 8019f22:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8019f24:	eb04 0902 	add.w	r9, r4, r2
 8019f28:	5ca2      	ldrb	r2, [r4, r2]
 8019f2a:	f836 e012 	ldrh.w	lr, [r6, r2, lsl #1]
 8019f2e:	2800      	cmp	r0, #0
 8019f30:	f000 80fe 	beq.w	801a130 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 8019f34:	f899 2001 	ldrb.w	r2, [r9, #1]
 8019f38:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 8019f3c:	9211      	str	r2, [sp, #68]	@ 0x44
 8019f3e:	b151      	cbz	r1, 8019f56 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8019f40:	eb09 0203 	add.w	r2, r9, r3
 8019f44:	f819 3003 	ldrb.w	r3, [r9, r3]
 8019f48:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8019f4c:	930f      	str	r3, [sp, #60]	@ 0x3c
 8019f4e:	7853      	ldrb	r3, [r2, #1]
 8019f50:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8019f54:	9312      	str	r3, [sp, #72]	@ 0x48
 8019f56:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 8019f58:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 8019f5a:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8019f5e:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 8019f62:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 8019f66:	ea4c 0c03 	orr.w	ip, ip, r3
 8019f6a:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 8019f6c:	041b      	lsls	r3, r3, #16
 8019f6e:	fb10 f201 	smulbb	r2, r0, r1
 8019f72:	f424 64fc 	bic.w	r4, r4, #2016	@ 0x7e0
 8019f76:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 8019f7a:	10d2      	asrs	r2, r2, #3
 8019f7c:	4323      	orrs	r3, r4
 8019f7e:	ebc2 0940 	rsb	r9, r2, r0, lsl #1
 8019f82:	4353      	muls	r3, r2
 8019f84:	fb09 330c 	mla	r3, r9, ip, r3
 8019f88:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 8019f8c:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 8019f90:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 8019f94:	ea4c 0e0e 	orr.w	lr, ip, lr
 8019f98:	f1c1 0c10 	rsb	ip, r1, #16
 8019f9c:	ebac 0c00 	sub.w	ip, ip, r0
 8019fa0:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8019fa4:	fb0c 3c0e 	mla	ip, ip, lr, r3
 8019fa8:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8019faa:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 8019fac:	0418      	lsls	r0, r3, #16
 8019fae:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 8019fb2:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 8019fb6:	4318      	orrs	r0, r3
 8019fb8:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 8019fbc:	fb02 c200 	mla	r2, r2, r0, ip
 8019fc0:	0d53      	lsrs	r3, r2, #21
 8019fc2:	0952      	lsrs	r2, r2, #5
 8019fc4:	8838      	ldrh	r0, [r7, #0]
 8019fc6:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8019fca:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 8019fce:	431a      	orrs	r2, r3
 8019fd0:	b292      	uxth	r2, r2
 8019fd2:	1201      	asrs	r1, r0, #8
 8019fd4:	f8bd 3034 	ldrh.w	r3, [sp, #52]	@ 0x34
 8019fd8:	ea4f 2c22 	mov.w	ip, r2, asr #8
 8019fdc:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 8019fe0:	fb11 f104 	smulbb	r1, r1, r4
 8019fe4:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 8019fe8:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8019fec:	00c0      	lsls	r0, r0, #3
 8019fee:	fb0c 1c03 	mla	ip, ip, r3, r1
 8019ff2:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
 8019ff6:	10d1      	asrs	r1, r2, #3
 8019ff8:	b2c0      	uxtb	r0, r0
 8019ffa:	00d2      	lsls	r2, r2, #3
 8019ffc:	b2d2      	uxtb	r2, r2
 8019ffe:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 801a002:	fb1e fe04 	smulbb	lr, lr, r4
 801a006:	fb10 f004 	smulbb	r0, r0, r4
 801a00a:	fa1f fc8c 	uxth.w	ip, ip
 801a00e:	fb01 e103 	mla	r1, r1, r3, lr
 801a012:	fb02 0303 	mla	r3, r2, r3, r0
 801a016:	b29a      	uxth	r2, r3
 801a018:	f10c 0301 	add.w	r3, ip, #1
 801a01c:	b289      	uxth	r1, r1
 801a01e:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 801a022:	1c53      	adds	r3, r2, #1
 801a024:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801a028:	1c4a      	adds	r2, r1, #1
 801a02a:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801a02e:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 801a032:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801a036:	0949      	lsrs	r1, r1, #5
 801a038:	ea43 030c 	orr.w	r3, r3, ip
 801a03c:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801a040:	430b      	orrs	r3, r1
 801a042:	803b      	strh	r3, [r7, #0]
 801a044:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 801a046:	449a      	add	sl, r3
 801a048:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801a04a:	3702      	adds	r7, #2
 801a04c:	441d      	add	r5, r3
 801a04e:	f10b 3bff 	add.w	fp, fp, #4294967295
 801a052:	e742      	b.n	8019eda <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801a054:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 801a056:	449a      	add	sl, r3
 801a058:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801a05a:	441d      	add	r5, r3
 801a05c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801a05e:	3b01      	subs	r3, #1
 801a060:	9309      	str	r3, [sp, #36]	@ 0x24
 801a062:	f108 0802 	add.w	r8, r8, #2
 801a066:	e718      	b.n	8019e9a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 801a068:	d023      	beq.n	801a0b2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
 801a06a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801a06c:	9825      	ldr	r0, [sp, #148]	@ 0x94
 801a06e:	3b01      	subs	r3, #1
 801a070:	fb00 a003 	mla	r0, r0, r3, sl
 801a074:	1400      	asrs	r0, r0, #16
 801a076:	f53f af2d 	bmi.w	8019ed4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801a07a:	3901      	subs	r1, #1
 801a07c:	4288      	cmp	r0, r1
 801a07e:	f6bf af29 	bge.w	8019ed4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801a082:	9926      	ldr	r1, [sp, #152]	@ 0x98
 801a084:	fb01 5303 	mla	r3, r1, r3, r5
 801a088:	141b      	asrs	r3, r3, #16
 801a08a:	f53f af23 	bmi.w	8019ed4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801a08e:	3a01      	subs	r2, #1
 801a090:	4293      	cmp	r3, r2
 801a092:	f6bf af1f 	bge.w	8019ed4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801a096:	f8dd e024 	ldr.w	lr, [sp, #36]	@ 0x24
 801a09a:	f8bd 9034 	ldrh.w	r9, [sp, #52]	@ 0x34
 801a09e:	f8cd 8038 	str.w	r8, [sp, #56]	@ 0x38
 801a0a2:	f1be 0f00 	cmp.w	lr, #0
 801a0a6:	dc6c      	bgt.n	801a182 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 801a0a8:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801a0aa:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801a0ae:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 801a0b2:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801a0b4:	2b00      	cmp	r3, #0
 801a0b6:	f340 810e 	ble.w	801a2d6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 801a0ba:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a0be:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801a0c2:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801a0c6:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 801a0c8:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a0cc:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a0d0:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a0d4:	eef0 6a62 	vmov.f32	s13, s5
 801a0d8:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a0dc:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a0e0:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a0e4:	ee16 aa90 	vmov	sl, s13
 801a0e8:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a0ec:	eef0 6a43 	vmov.f32	s13, s6
 801a0f0:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a0f4:	ee12 2a90 	vmov	r2, s5
 801a0f8:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a0fc:	fb92 f3f3 	sdiv	r3, r2, r3
 801a100:	ee13 2a10 	vmov	r2, s6
 801a104:	9325      	str	r3, [sp, #148]	@ 0x94
 801a106:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 801a108:	fb92 f3f3 	sdiv	r3, r2, r3
 801a10c:	9326      	str	r3, [sp, #152]	@ 0x98
 801a10e:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801a110:	9a15      	ldr	r2, [sp, #84]	@ 0x54
 801a112:	3b01      	subs	r3, #1
 801a114:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a118:	930c      	str	r3, [sp, #48]	@ 0x30
 801a11a:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 801a11c:	bf08      	it	eq
 801a11e:	4613      	moveq	r3, r2
 801a120:	ee16 5a90 	vmov	r5, s13
 801a124:	9309      	str	r3, [sp, #36]	@ 0x24
 801a126:	eeb0 3a67 	vmov.f32	s6, s15
 801a12a:	eef0 2a47 	vmov.f32	s5, s14
 801a12e:	e6a6      	b.n	8019e7e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801a130:	2900      	cmp	r1, #0
 801a132:	f43f af10 	beq.w	8019f56 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801a136:	f819 3003 	ldrb.w	r3, [r9, r3]
 801a13a:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801a13e:	930f      	str	r3, [sp, #60]	@ 0x3c
 801a140:	e709      	b.n	8019f56 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801a142:	f112 0901 	adds.w	r9, r2, #1
 801a146:	f53f af7d 	bmi.w	801a044 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801a14a:	454b      	cmp	r3, r9
 801a14c:	f6ff af7a 	blt.w	801a044 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801a150:	f11c 0901 	adds.w	r9, ip, #1
 801a154:	f53f af76 	bmi.w	801a044 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801a158:	45ce      	cmp	lr, r9
 801a15a:	f6ff af73 	blt.w	801a044 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801a15e:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801a160:	9202      	str	r2, [sp, #8]
 801a162:	b21b      	sxth	r3, r3
 801a164:	fa0f f28e 	sxth.w	r2, lr
 801a168:	e9cd 1405 	strd	r1, r4, [sp, #20]
 801a16c:	e9cd c003 	strd	ip, r0, [sp, #12]
 801a170:	9201      	str	r2, [sp, #4]
 801a172:	9300      	str	r3, [sp, #0]
 801a174:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 801a176:	9816      	ldr	r0, [sp, #88]	@ 0x58
 801a178:	4633      	mov	r3, r6
 801a17a:	4639      	mov	r1, r7
 801a17c:	f7ff fd8e 	bl	8019c9c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>
 801a180:	e760      	b.n	801a044 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801a182:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 801a184:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801a186:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 801a18a:	ea4f 422a 	mov.w	r2, sl, asr #16
 801a18e:	1429      	asrs	r1, r5, #16
 801a190:	fb03 2101 	mla	r1, r3, r1, r2
 801a194:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 801a196:	440a      	add	r2, r1
 801a198:	5c61      	ldrb	r1, [r4, r1]
 801a19a:	f3ca 3c03 	ubfx	ip, sl, #12, #4
 801a19e:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801a1a2:	f836 1011 	ldrh.w	r1, [r6, r1, lsl #1]
 801a1a6:	f1bc 0f00 	cmp.w	ip, #0
 801a1aa:	f000 808c 	beq.w	801a2c6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x486>
 801a1ae:	7857      	ldrb	r7, [r2, #1]
 801a1b0:	f836 4017 	ldrh.w	r4, [r6, r7, lsl #1]
 801a1b4:	9413      	str	r4, [sp, #76]	@ 0x4c
 801a1b6:	b140      	cbz	r0, 801a1ca <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801a1b8:	18d7      	adds	r7, r2, r3
 801a1ba:	5cd3      	ldrb	r3, [r2, r3]
 801a1bc:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801a1c0:	9310      	str	r3, [sp, #64]	@ 0x40
 801a1c2:	787b      	ldrb	r3, [r7, #1]
 801a1c4:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801a1c8:	9314      	str	r3, [sp, #80]	@ 0x50
 801a1ca:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 801a1cc:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801a1ce:	fb1c f200 	smulbb	r2, ip, r0
 801a1d2:	041f      	lsls	r7, r3, #16
 801a1d4:	10d2      	asrs	r2, r2, #3
 801a1d6:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801a1da:	f007 67fc 	and.w	r7, r7, #132120576	@ 0x7e00000
 801a1de:	431f      	orrs	r7, r3
 801a1e0:	ebc2 034c 	rsb	r3, r2, ip, lsl #1
 801a1e4:	9317      	str	r3, [sp, #92]	@ 0x5c
 801a1e6:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 801a1e8:	041b      	lsls	r3, r3, #16
 801a1ea:	f424 6bfc 	bic.w	fp, r4, #2016	@ 0x7e0
 801a1ee:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801a1f2:	ea43 030b 	orr.w	r3, r3, fp
 801a1f6:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
 801a1f8:	4353      	muls	r3, r2
 801a1fa:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801a1fe:	fb04 3707 	mla	r7, r4, r7, r3
 801a202:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 801a206:	f00b 63fc 	and.w	r3, fp, #132120576	@ 0x7e00000
 801a20a:	ea43 0b01 	orr.w	fp, r3, r1
 801a20e:	f1c0 0110 	rsb	r1, r0, #16
 801a212:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801a214:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 801a216:	eba1 0c0c 	sub.w	ip, r1, ip
 801a21a:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 801a21e:	fb0c 770b 	mla	r7, ip, fp, r7
 801a222:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801a226:	f423 6bfc 	bic.w	fp, r3, #2016	@ 0x7e0
 801a22a:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 801a22e:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 801a232:	ea4c 0c0b 	orr.w	ip, ip, fp
 801a236:	fb02 770c 	mla	r7, r2, ip, r7
 801a23a:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 801a23c:	0d79      	lsrs	r1, r7, #21
 801a23e:	097f      	lsrs	r7, r7, #5
 801a240:	8812      	ldrh	r2, [r2, #0]
 801a242:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801a246:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
 801a24a:	430f      	orrs	r7, r1
 801a24c:	b2bb      	uxth	r3, r7
 801a24e:	1211      	asrs	r1, r2, #8
 801a250:	1218      	asrs	r0, r3, #8
 801a252:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 801a256:	fb11 f104 	smulbb	r1, r1, r4
 801a25a:	10d7      	asrs	r7, r2, #3
 801a25c:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801a260:	00d2      	lsls	r2, r2, #3
 801a262:	fb00 1009 	mla	r0, r0, r9, r1
 801a266:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801a26a:	10d9      	asrs	r1, r3, #3
 801a26c:	b2d2      	uxtb	r2, r2
 801a26e:	00db      	lsls	r3, r3, #3
 801a270:	fb17 f704 	smulbb	r7, r7, r4
 801a274:	fb12 f204 	smulbb	r2, r2, r4
 801a278:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 801a27c:	b2db      	uxtb	r3, r3
 801a27e:	b280      	uxth	r0, r0
 801a280:	fb01 7109 	mla	r1, r1, r9, r7
 801a284:	fb03 2309 	mla	r3, r3, r9, r2
 801a288:	b29b      	uxth	r3, r3
 801a28a:	b289      	uxth	r1, r1
 801a28c:	1c42      	adds	r2, r0, #1
 801a28e:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801a292:	1c4f      	adds	r7, r1, #1
 801a294:	1c5a      	adds	r2, r3, #1
 801a296:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801a29a:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 801a29e:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
 801a2a2:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801a2a6:	0949      	lsrs	r1, r1, #5
 801a2a8:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801a2aa:	4310      	orrs	r0, r2
 801a2ac:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801a2b0:	4308      	orrs	r0, r1
 801a2b2:	f823 0b02 	strh.w	r0, [r3], #2
 801a2b6:	930e      	str	r3, [sp, #56]	@ 0x38
 801a2b8:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 801a2ba:	449a      	add	sl, r3
 801a2bc:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801a2be:	f10e 3eff 	add.w	lr, lr, #4294967295
 801a2c2:	441d      	add	r5, r3
 801a2c4:	e6ed      	b.n	801a0a2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x262>
 801a2c6:	2800      	cmp	r0, #0
 801a2c8:	f43f af7f 	beq.w	801a1ca <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801a2cc:	5cd3      	ldrb	r3, [r2, r3]
 801a2ce:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801a2d2:	9310      	str	r3, [sp, #64]	@ 0x40
 801a2d4:	e779      	b.n	801a1ca <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801a2d6:	b019      	add	sp, #100	@ 0x64
 801a2d8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801a2dc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 801a2dc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801a2e0:	e9dd 480a 	ldrd	r4, r8, [sp, #40]	@ 0x28
 801a2e4:	f9bd e020 	ldrsh.w	lr, [sp, #32]
 801a2e8:	f9bd a024 	ldrsh.w	sl, [sp, #36]	@ 0x24
 801a2ec:	f89d 5030 	ldrb.w	r5, [sp, #48]	@ 0x30
 801a2f0:	f89d 6034 	ldrb.w	r6, [sp, #52]	@ 0x34
 801a2f4:	8808      	ldrh	r0, [r1, #0]
 801a2f6:	fb08 470e 	mla	r7, r8, lr, r4
 801a2fa:	f1b8 0f00 	cmp.w	r8, #0
 801a2fe:	eb02 0907 	add.w	r9, r2, r7
 801a302:	db67      	blt.n	801a3d4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 801a304:	45c2      	cmp	sl, r8
 801a306:	dd65      	ble.n	801a3d4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 801a308:	2c00      	cmp	r4, #0
 801a30a:	db61      	blt.n	801a3d0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 801a30c:	45a6      	cmp	lr, r4
 801a30e:	dd5f      	ble.n	801a3d0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 801a310:	5dd2      	ldrb	r2, [r2, r7]
 801a312:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 801a316:	1c62      	adds	r2, r4, #1
 801a318:	d45f      	bmi.n	801a3da <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 801a31a:	4596      	cmp	lr, r2
 801a31c:	dd5d      	ble.n	801a3da <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 801a31e:	2d00      	cmp	r5, #0
 801a320:	d05b      	beq.n	801a3da <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 801a322:	f899 2001 	ldrb.w	r2, [r9, #1]
 801a326:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
 801a32a:	f118 0801 	adds.w	r8, r8, #1
 801a32e:	d458      	bmi.n	801a3e2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 801a330:	45c2      	cmp	sl, r8
 801a332:	dd56      	ble.n	801a3e2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 801a334:	2e00      	cmp	r6, #0
 801a336:	d054      	beq.n	801a3e2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 801a338:	2c00      	cmp	r4, #0
 801a33a:	db50      	blt.n	801a3de <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 801a33c:	45a6      	cmp	lr, r4
 801a33e:	dd4e      	ble.n	801a3de <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 801a340:	f819 200e 	ldrb.w	r2, [r9, lr]
 801a344:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
 801a348:	3401      	adds	r4, #1
 801a34a:	d407      	bmi.n	801a35c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 801a34c:	45a6      	cmp	lr, r4
 801a34e:	dd05      	ble.n	801a35c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 801a350:	b125      	cbz	r5, 801a35c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 801a352:	44ce      	add	lr, r9
 801a354:	f89e 0001 	ldrb.w	r0, [lr, #1]
 801a358:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 801a35c:	ea4f 430c 	mov.w	r3, ip, lsl #16
 801a360:	fb15 f406 	smulbb	r4, r5, r6
 801a364:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801a368:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 801a36c:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 801a370:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 801a374:	ea43 0c0c 	orr.w	ip, r3, ip
 801a378:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
 801a37c:	f1c6 0310 	rsb	r3, r6, #16
 801a380:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
 801a384:	1b5b      	subs	r3, r3, r5
 801a386:	ea4e 0707 	orr.w	r7, lr, r7
 801a38a:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 801a38e:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801a392:	437d      	muls	r5, r7
 801a394:	fb03 5c0c 	mla	ip, r3, ip, r5
 801a398:	0403      	lsls	r3, r0, #16
 801a39a:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801a39e:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801a3a2:	4318      	orrs	r0, r3
 801a3a4:	0413      	lsls	r3, r2, #16
 801a3a6:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801a3aa:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801a3ae:	4313      	orrs	r3, r2
 801a3b0:	fb04 c000 	mla	r0, r4, r0, ip
 801a3b4:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 801a3b8:	fb06 0003 	mla	r0, r6, r3, r0
 801a3bc:	0d43      	lsrs	r3, r0, #21
 801a3be:	0940      	lsrs	r0, r0, #5
 801a3c0:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801a3c4:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801a3c8:	4318      	orrs	r0, r3
 801a3ca:	8008      	strh	r0, [r1, #0]
 801a3cc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801a3d0:	4684      	mov	ip, r0
 801a3d2:	e7a0      	b.n	801a316 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x3a>
 801a3d4:	4607      	mov	r7, r0
 801a3d6:	4684      	mov	ip, r0
 801a3d8:	e7a7      	b.n	801a32a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 801a3da:	4607      	mov	r7, r0
 801a3dc:	e7a5      	b.n	801a32a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 801a3de:	4602      	mov	r2, r0
 801a3e0:	e7b2      	b.n	801a348 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x6c>
 801a3e2:	4602      	mov	r2, r0
 801a3e4:	e7ba      	b.n	801a35c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>

0801a3e6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a3e6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a3ea:	b093      	sub	sp, #76	@ 0x4c
 801a3ec:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	@ 0x74
 801a3f0:	920f      	str	r2, [sp, #60]	@ 0x3c
 801a3f2:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 801a3f4:	9108      	str	r1, [sp, #32]
 801a3f6:	9306      	str	r3, [sp, #24]
 801a3f8:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	@ 0x88
 801a3fc:	9010      	str	r0, [sp, #64]	@ 0x40
 801a3fe:	6850      	ldr	r0, [r2, #4]
 801a400:	6812      	ldr	r2, [r2, #0]
 801a402:	fb00 1303 	mla	r3, r0, r3, r1
 801a406:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 801a40a:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801a40c:	681b      	ldr	r3, [r3, #0]
 801a40e:	9307      	str	r3, [sp, #28]
 801a410:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801a412:	685f      	ldr	r7, [r3, #4]
 801a414:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 801a418:	3704      	adds	r7, #4
 801a41a:	9b08      	ldr	r3, [sp, #32]
 801a41c:	2b00      	cmp	r3, #0
 801a41e:	dc03      	bgt.n	801a428 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 801a420:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801a422:	2b00      	cmp	r3, #0
 801a424:	f340 81b2 	ble.w	801a78c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 801a428:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801a42a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801a42e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801a432:	1e48      	subs	r0, r1, #1
 801a434:	f102 3cff 	add.w	ip, r2, #4294967295
 801a438:	9b06      	ldr	r3, [sp, #24]
 801a43a:	2b00      	cmp	r3, #0
 801a43c:	f340 80a9 	ble.w	801a592 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 801a440:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801a444:	ea4f 4326 	mov.w	r3, r6, asr #16
 801a448:	d406      	bmi.n	801a458 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801a44a:	4586      	cmp	lr, r0
 801a44c:	da04      	bge.n	801a458 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801a44e:	2b00      	cmp	r3, #0
 801a450:	db02      	blt.n	801a458 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801a452:	4563      	cmp	r3, ip
 801a454:	f2c0 809e 	blt.w	801a594 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801a458:	f11e 0e01 	adds.w	lr, lr, #1
 801a45c:	f100 808f 	bmi.w	801a57e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801a460:	4571      	cmp	r1, lr
 801a462:	f2c0 808c 	blt.w	801a57e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801a466:	3301      	adds	r3, #1
 801a468:	f100 8089 	bmi.w	801a57e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801a46c:	429a      	cmp	r2, r3
 801a46e:	f2c0 8086 	blt.w	801a57e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801a472:	f8dd b018 	ldr.w	fp, [sp, #24]
 801a476:	46c8      	mov	r8, r9
 801a478:	f1bb 0f00 	cmp.w	fp, #0
 801a47c:	f340 80a6 	ble.w	801a5cc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 801a480:	9a24      	ldr	r2, [sp, #144]	@ 0x90
 801a482:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801a484:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801a488:	689b      	ldr	r3, [r3, #8]
 801a48a:	1422      	asrs	r2, r4, #16
 801a48c:	ea4f 4c26 	mov.w	ip, r6, asr #16
 801a490:	f3c4 3003 	ubfx	r0, r4, #12, #4
 801a494:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801a498:	f100 80e3 	bmi.w	801a662 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801a49c:	f103 3aff 	add.w	sl, r3, #4294967295
 801a4a0:	4552      	cmp	r2, sl
 801a4a2:	f280 80de 	bge.w	801a662 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801a4a6:	f1bc 0f00 	cmp.w	ip, #0
 801a4aa:	f2c0 80da 	blt.w	801a662 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801a4ae:	f10e 3aff 	add.w	sl, lr, #4294967295
 801a4b2:	45d4      	cmp	ip, sl
 801a4b4:	f280 80d5 	bge.w	801a662 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801a4b8:	b21b      	sxth	r3, r3
 801a4ba:	fb0c 2203 	mla	r2, ip, r3, r2
 801a4be:	9d07      	ldr	r5, [sp, #28]
 801a4c0:	eb05 0a02 	add.w	sl, r5, r2
 801a4c4:	5caa      	ldrb	r2, [r5, r2]
 801a4c6:	f837 e012 	ldrh.w	lr, [r7, r2, lsl #1]
 801a4ca:	2800      	cmp	r0, #0
 801a4cc:	f000 80c0 	beq.w	801a650 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26a>
 801a4d0:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801a4d4:	f837 2012 	ldrh.w	r2, [r7, r2, lsl #1]
 801a4d8:	920b      	str	r2, [sp, #44]	@ 0x2c
 801a4da:	b151      	cbz	r1, 801a4f2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 801a4dc:	eb0a 0203 	add.w	r2, sl, r3
 801a4e0:	f81a 3003 	ldrb.w	r3, [sl, r3]
 801a4e4:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801a4e8:	9309      	str	r3, [sp, #36]	@ 0x24
 801a4ea:	7853      	ldrb	r3, [r2, #1]
 801a4ec:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801a4f0:	930c      	str	r3, [sp, #48]	@ 0x30
 801a4f2:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801a4f4:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 801a4f6:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801a4fa:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 801a4fe:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801a502:	ea4c 0c03 	orr.w	ip, ip, r3
 801a506:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801a508:	041b      	lsls	r3, r3, #16
 801a50a:	fb10 f201 	smulbb	r2, r0, r1
 801a50e:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801a512:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
 801a516:	10d2      	asrs	r2, r2, #3
 801a518:	432b      	orrs	r3, r5
 801a51a:	ebc2 0a40 	rsb	sl, r2, r0, lsl #1
 801a51e:	4353      	muls	r3, r2
 801a520:	fb0a 330c 	mla	r3, sl, ip, r3
 801a524:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 801a528:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 801a52c:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 801a530:	ea4c 0e0e 	orr.w	lr, ip, lr
 801a534:	f1c1 0c10 	rsb	ip, r1, #16
 801a538:	ebac 0c00 	sub.w	ip, ip, r0
 801a53c:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 801a540:	fb0c 3c0e 	mla	ip, ip, lr, r3
 801a544:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801a546:	0418      	lsls	r0, r3, #16
 801a548:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 801a54c:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801a550:	4318      	orrs	r0, r3
 801a552:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 801a556:	fb02 c200 	mla	r2, r2, r0, ip
 801a55a:	0d53      	lsrs	r3, r2, #21
 801a55c:	0952      	lsrs	r2, r2, #5
 801a55e:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801a562:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801a566:	431a      	orrs	r2, r3
 801a568:	f8a8 2000 	strh.w	r2, [r8]
 801a56c:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801a56e:	441c      	add	r4, r3
 801a570:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801a572:	f108 0802 	add.w	r8, r8, #2
 801a576:	441e      	add	r6, r3
 801a578:	f10b 3bff 	add.w	fp, fp, #4294967295
 801a57c:	e77c      	b.n	801a478 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801a57e:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801a580:	441c      	add	r4, r3
 801a582:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801a584:	441e      	add	r6, r3
 801a586:	9b06      	ldr	r3, [sp, #24]
 801a588:	3b01      	subs	r3, #1
 801a58a:	9306      	str	r3, [sp, #24]
 801a58c:	f109 0902 	add.w	r9, r9, #2
 801a590:	e752      	b.n	801a438 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801a592:	d020      	beq.n	801a5d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801a594:	9b06      	ldr	r3, [sp, #24]
 801a596:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 801a598:	3b01      	subs	r3, #1
 801a59a:	fb00 4003 	mla	r0, r0, r3, r4
 801a59e:	1400      	asrs	r0, r0, #16
 801a5a0:	f53f af67 	bmi.w	801a472 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801a5a4:	3901      	subs	r1, #1
 801a5a6:	4288      	cmp	r0, r1
 801a5a8:	f6bf af63 	bge.w	801a472 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801a5ac:	9920      	ldr	r1, [sp, #128]	@ 0x80
 801a5ae:	fb01 6303 	mla	r3, r1, r3, r6
 801a5b2:	141b      	asrs	r3, r3, #16
 801a5b4:	f53f af5d 	bmi.w	801a472 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801a5b8:	3a01      	subs	r2, #1
 801a5ba:	4293      	cmp	r3, r2
 801a5bc:	f6bf af59 	bge.w	801a472 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801a5c0:	f8dd 8018 	ldr.w	r8, [sp, #24]
 801a5c4:	46ca      	mov	sl, r9
 801a5c6:	f1b8 0f00 	cmp.w	r8, #0
 801a5ca:	dc67      	bgt.n	801a69c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 801a5cc:	9b06      	ldr	r3, [sp, #24]
 801a5ce:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801a5d2:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 801a5d6:	9b08      	ldr	r3, [sp, #32]
 801a5d8:	2b00      	cmp	r3, #0
 801a5da:	f340 80d7 	ble.w	801a78c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 801a5de:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a5e2:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a5e6:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801a5ea:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801a5ec:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a5f0:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a5f4:	eeb0 6a62 	vmov.f32	s12, s5
 801a5f8:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a5fc:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a600:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a604:	ee16 4a10 	vmov	r4, s12
 801a608:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a60c:	eeb0 6a43 	vmov.f32	s12, s6
 801a610:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a614:	ee12 2a90 	vmov	r2, s5
 801a618:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a61c:	fb92 f3f3 	sdiv	r3, r2, r3
 801a620:	ee13 2a10 	vmov	r2, s6
 801a624:	931f      	str	r3, [sp, #124]	@ 0x7c
 801a626:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801a628:	fb92 f3f3 	sdiv	r3, r2, r3
 801a62c:	9320      	str	r3, [sp, #128]	@ 0x80
 801a62e:	9b08      	ldr	r3, [sp, #32]
 801a630:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801a632:	3b01      	subs	r3, #1
 801a634:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a638:	9308      	str	r3, [sp, #32]
 801a63a:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801a63c:	bf08      	it	eq
 801a63e:	4613      	moveq	r3, r2
 801a640:	ee16 6a10 	vmov	r6, s12
 801a644:	9306      	str	r3, [sp, #24]
 801a646:	eeb0 3a67 	vmov.f32	s6, s15
 801a64a:	eef0 2a47 	vmov.f32	s5, s14
 801a64e:	e6e4      	b.n	801a41a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 801a650:	2900      	cmp	r1, #0
 801a652:	f43f af4e 	beq.w	801a4f2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 801a656:	f81a 3003 	ldrb.w	r3, [sl, r3]
 801a65a:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801a65e:	9309      	str	r3, [sp, #36]	@ 0x24
 801a660:	e747      	b.n	801a4f2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 801a662:	f112 0a01 	adds.w	sl, r2, #1
 801a666:	d481      	bmi.n	801a56c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801a668:	4553      	cmp	r3, sl
 801a66a:	f6ff af7f 	blt.w	801a56c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801a66e:	f11c 0a01 	adds.w	sl, ip, #1
 801a672:	f53f af7b 	bmi.w	801a56c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801a676:	45d6      	cmp	lr, sl
 801a678:	f6ff af78 	blt.w	801a56c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801a67c:	e9cd 2c02 	strd	r2, ip, [sp, #8]
 801a680:	b21b      	sxth	r3, r3
 801a682:	fa0f f28e 	sxth.w	r2, lr
 801a686:	e9cd 0104 	strd	r0, r1, [sp, #16]
 801a68a:	9201      	str	r2, [sp, #4]
 801a68c:	9300      	str	r3, [sp, #0]
 801a68e:	9a07      	ldr	r2, [sp, #28]
 801a690:	9810      	ldr	r0, [sp, #64]	@ 0x40
 801a692:	463b      	mov	r3, r7
 801a694:	4641      	mov	r1, r8
 801a696:	f7ff fe21 	bl	801a2dc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 801a69a:	e767      	b.n	801a56c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801a69c:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801a69e:	9d07      	ldr	r5, [sp, #28]
 801a6a0:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 801a6a4:	1422      	asrs	r2, r4, #16
 801a6a6:	1431      	asrs	r1, r6, #16
 801a6a8:	fb03 2101 	mla	r1, r3, r1, r2
 801a6ac:	9a07      	ldr	r2, [sp, #28]
 801a6ae:	440a      	add	r2, r1
 801a6b0:	5c69      	ldrb	r1, [r5, r1]
 801a6b2:	f3c4 3e03 	ubfx	lr, r4, #12, #4
 801a6b6:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801a6ba:	f837 1011 	ldrh.w	r1, [r7, r1, lsl #1]
 801a6be:	f1be 0f00 	cmp.w	lr, #0
 801a6c2:	d05c      	beq.n	801a77e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 801a6c4:	f892 c001 	ldrb.w	ip, [r2, #1]
 801a6c8:	f837 501c 	ldrh.w	r5, [r7, ip, lsl #1]
 801a6cc:	950d      	str	r5, [sp, #52]	@ 0x34
 801a6ce:	b150      	cbz	r0, 801a6e6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 801a6d0:	eb02 0c03 	add.w	ip, r2, r3
 801a6d4:	5cd3      	ldrb	r3, [r2, r3]
 801a6d6:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801a6da:	930a      	str	r3, [sp, #40]	@ 0x28
 801a6dc:	f89c 3001 	ldrb.w	r3, [ip, #1]
 801a6e0:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801a6e4:	930e      	str	r3, [sp, #56]	@ 0x38
 801a6e6:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801a6e8:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 801a6ea:	fb1e f200 	smulbb	r2, lr, r0
 801a6ee:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801a6f2:	10d2      	asrs	r2, r2, #3
 801a6f4:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801a6f8:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 801a6fc:	ea4c 0c03 	orr.w	ip, ip, r3
 801a700:	ebc2 034e 	rsb	r3, r2, lr, lsl #1
 801a704:	9311      	str	r3, [sp, #68]	@ 0x44
 801a706:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801a708:	041b      	lsls	r3, r3, #16
 801a70a:	f425 6bfc 	bic.w	fp, r5, #2016	@ 0x7e0
 801a70e:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801a712:	ea43 030b 	orr.w	r3, r3, fp
 801a716:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801a718:	4353      	muls	r3, r2
 801a71a:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801a71e:	fb05 3c0c 	mla	ip, r5, ip, r3
 801a722:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 801a726:	f00b 63fc 	and.w	r3, fp, #132120576	@ 0x7e00000
 801a72a:	ea43 0b01 	orr.w	fp, r3, r1
 801a72e:	f1c0 0110 	rsb	r1, r0, #16
 801a732:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801a734:	eba1 0e0e 	sub.w	lr, r1, lr
 801a738:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
 801a73c:	fb0e cc0b 	mla	ip, lr, fp, ip
 801a740:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 801a744:	f423 6efc 	bic.w	lr, r3, #2016	@ 0x7e0
 801a748:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801a74c:	ea4b 0e0e 	orr.w	lr, fp, lr
 801a750:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 801a754:	fb02 cc0e 	mla	ip, r2, lr, ip
 801a758:	ea4f 535c 	mov.w	r3, ip, lsr #21
 801a75c:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801a760:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801a764:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 801a768:	ea43 0c0c 	orr.w	ip, r3, ip
 801a76c:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801a76e:	f82a cb02 	strh.w	ip, [sl], #2
 801a772:	441c      	add	r4, r3
 801a774:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801a776:	f108 38ff 	add.w	r8, r8, #4294967295
 801a77a:	441e      	add	r6, r3
 801a77c:	e723      	b.n	801a5c6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 801a77e:	2800      	cmp	r0, #0
 801a780:	d0b1      	beq.n	801a6e6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 801a782:	5cd3      	ldrb	r3, [r2, r3]
 801a784:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801a788:	930a      	str	r3, [sp, #40]	@ 0x28
 801a78a:	e7ac      	b.n	801a6e6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 801a78c:	b013      	add	sp, #76	@ 0x4c
 801a78e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801a792 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>:
 801a792:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a796:	880d      	ldrh	r5, [r1, #0]
 801a798:	b087      	sub	sp, #28
 801a79a:	10ef      	asrs	r7, r5, #3
 801a79c:	ea4f 2a25 	mov.w	sl, r5, asr #8
 801a7a0:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801a7a4:	00ed      	lsls	r5, r5, #3
 801a7a6:	9701      	str	r7, [sp, #4]
 801a7a8:	b2ed      	uxtb	r5, r5
 801a7aa:	9502      	str	r5, [sp, #8]
 801a7ac:	9d01      	ldr	r5, [sp, #4]
 801a7ae:	9103      	str	r1, [sp, #12]
 801a7b0:	e9dd 0612 	ldrd	r0, r6, [sp, #72]	@ 0x48
 801a7b4:	f9bd 9040 	ldrsh.w	r9, [sp, #64]	@ 0x40
 801a7b8:	9902      	ldr	r1, [sp, #8]
 801a7ba:	f9bd b044 	ldrsh.w	fp, [sp, #68]	@ 0x44
 801a7be:	f89d 4050 	ldrb.w	r4, [sp, #80]	@ 0x50
 801a7c2:	f89d e054 	ldrb.w	lr, [sp, #84]	@ 0x54
 801a7c6:	f89d 8058 	ldrb.w	r8, [sp, #88]	@ 0x58
 801a7ca:	f00a 0af8 	and.w	sl, sl, #248	@ 0xf8
 801a7ce:	022d      	lsls	r5, r5, #8
 801a7d0:	ea45 450a 	orr.w	r5, r5, sl, lsl #16
 801a7d4:	fb06 0709 	mla	r7, r6, r9, r0
 801a7d8:	430d      	orrs	r5, r1
 801a7da:	2e00      	cmp	r6, #0
 801a7dc:	eb02 0c07 	add.w	ip, r2, r7
 801a7e0:	9505      	str	r5, [sp, #20]
 801a7e2:	f2c0 80b6 	blt.w	801a952 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 801a7e6:	45b3      	cmp	fp, r6
 801a7e8:	f340 80b3 	ble.w	801a952 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 801a7ec:	2800      	cmp	r0, #0
 801a7ee:	f2c0 80ae 	blt.w	801a94e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 801a7f2:	4581      	cmp	r9, r0
 801a7f4:	f340 80ab 	ble.w	801a94e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 801a7f8:	5dd7      	ldrb	r7, [r2, r7]
 801a7fa:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 801a7fe:	441f      	add	r7, r3
 801a800:	1c42      	adds	r2, r0, #1
 801a802:	f100 80a9 	bmi.w	801a958 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 801a806:	4591      	cmp	r9, r2
 801a808:	f340 80a6 	ble.w	801a958 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 801a80c:	2c00      	cmp	r4, #0
 801a80e:	f000 80a3 	beq.w	801a958 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 801a812:	f89c 5001 	ldrb.w	r5, [ip, #1]
 801a816:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801a81a:	441d      	add	r5, r3
 801a81c:	3601      	adds	r6, #1
 801a81e:	f100 809f 	bmi.w	801a960 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 801a822:	45b3      	cmp	fp, r6
 801a824:	f340 809c 	ble.w	801a960 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 801a828:	f1be 0f00 	cmp.w	lr, #0
 801a82c:	f000 8098 	beq.w	801a960 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 801a830:	2800      	cmp	r0, #0
 801a832:	f2c0 8093 	blt.w	801a95c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 801a836:	4581      	cmp	r9, r0
 801a838:	f340 8090 	ble.w	801a95c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 801a83c:	f81c 6009 	ldrb.w	r6, [ip, r9]
 801a840:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801a844:	441e      	add	r6, r3
 801a846:	3001      	adds	r0, #1
 801a848:	f100 808d 	bmi.w	801a966 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 801a84c:	4581      	cmp	r9, r0
 801a84e:	f340 808a 	ble.w	801a966 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 801a852:	2c00      	cmp	r4, #0
 801a854:	f000 8087 	beq.w	801a966 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 801a858:	44e1      	add	r9, ip
 801a85a:	f899 2001 	ldrb.w	r2, [r9, #1]
 801a85e:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801a862:	4413      	add	r3, r2
 801a864:	b2a4      	uxth	r4, r4
 801a866:	fa1f fe8e 	uxth.w	lr, lr
 801a86a:	fb04 fb0e 	mul.w	fp, r4, lr
 801a86e:	0124      	lsls	r4, r4, #4
 801a870:	ebcb 1e0e 	rsb	lr, fp, lr, lsl #4
 801a874:	f5c4 7980 	rsb	r9, r4, #256	@ 0x100
 801a878:	eba4 040b 	sub.w	r4, r4, fp
 801a87c:	fa1f f08e 	uxth.w	r0, lr
 801a880:	b2a2      	uxth	r2, r4
 801a882:	78ac      	ldrb	r4, [r5, #2]
 801a884:	f897 c002 	ldrb.w	ip, [r7, #2]
 801a888:	9901      	ldr	r1, [sp, #4]
 801a88a:	eba9 0900 	sub.w	r9, r9, r0
 801a88e:	fa1f f989 	uxth.w	r9, r9
 801a892:	4354      	muls	r4, r2
 801a894:	fb09 440c 	mla	r4, r9, ip, r4
 801a898:	f896 c002 	ldrb.w	ip, [r6, #2]
 801a89c:	fb00 440c 	mla	r4, r0, ip, r4
 801a8a0:	f893 c002 	ldrb.w	ip, [r3, #2]
 801a8a4:	fa1f fe88 	uxth.w	lr, r8
 801a8a8:	ea6f 0808 	mvn.w	r8, r8
 801a8ac:	fa5f f888 	uxtb.w	r8, r8
 801a8b0:	fb0b 4c0c 	mla	ip, fp, ip, r4
 801a8b4:	fb1a fa08 	smulbb	sl, sl, r8
 801a8b8:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 801a8bc:	fb0c ac0e 	mla	ip, ip, lr, sl
 801a8c0:	f895 a001 	ldrb.w	sl, [r5, #1]
 801a8c4:	787c      	ldrb	r4, [r7, #1]
 801a8c6:	782d      	ldrb	r5, [r5, #0]
 801a8c8:	783f      	ldrb	r7, [r7, #0]
 801a8ca:	fb02 fa0a 	mul.w	sl, r2, sl
 801a8ce:	fb09 aa04 	mla	sl, r9, r4, sl
 801a8d2:	7874      	ldrb	r4, [r6, #1]
 801a8d4:	436a      	muls	r2, r5
 801a8d6:	7835      	ldrb	r5, [r6, #0]
 801a8d8:	fb00 aa04 	mla	sl, r0, r4, sl
 801a8dc:	fb09 2207 	mla	r2, r9, r7, r2
 801a8e0:	785c      	ldrb	r4, [r3, #1]
 801a8e2:	781b      	ldrb	r3, [r3, #0]
 801a8e4:	fb00 2005 	mla	r0, r0, r5, r2
 801a8e8:	fb0b a404 	mla	r4, fp, r4, sl
 801a8ec:	fb0b 0b03 	mla	fp, fp, r3, r0
 801a8f0:	9b02      	ldr	r3, [sp, #8]
 801a8f2:	fb11 fa08 	smulbb	sl, r1, r8
 801a8f6:	fa1f fc8c 	uxth.w	ip, ip
 801a8fa:	fb13 f808 	smulbb	r8, r3, r8
 801a8fe:	f3cb 2b07 	ubfx	fp, fp, #8, #8
 801a902:	f3c4 2407 	ubfx	r4, r4, #8, #8
 801a906:	fb04 a40e 	mla	r4, r4, lr, sl
 801a90a:	f10c 0301 	add.w	r3, ip, #1
 801a90e:	fb0b 8e0e 	mla	lr, fp, lr, r8
 801a912:	fa1f fe8e 	uxth.w	lr, lr
 801a916:	b2a4      	uxth	r4, r4
 801a918:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 801a91c:	f40c 4378 	and.w	r3, ip, #63488	@ 0xf800
 801a920:	f104 0a01 	add.w	sl, r4, #1
 801a924:	f10e 0c01 	add.w	ip, lr, #1
 801a928:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801a92c:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 801a930:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801a934:	0964      	lsrs	r4, r4, #5
 801a936:	ea4c 0c03 	orr.w	ip, ip, r3
 801a93a:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 801a93e:	9b03      	ldr	r3, [sp, #12]
 801a940:	ea4c 0c04 	orr.w	ip, ip, r4
 801a944:	f8a3 c000 	strh.w	ip, [r3]
 801a948:	b007      	add	sp, #28
 801a94a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a94e:	af05      	add	r7, sp, #20
 801a950:	e756      	b.n	801a800 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x6e>
 801a952:	ad05      	add	r5, sp, #20
 801a954:	462f      	mov	r7, r5
 801a956:	e761      	b.n	801a81c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 801a958:	ad05      	add	r5, sp, #20
 801a95a:	e75f      	b.n	801a81c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 801a95c:	ae05      	add	r6, sp, #20
 801a95e:	e772      	b.n	801a846 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb4>
 801a960:	ab05      	add	r3, sp, #20
 801a962:	461e      	mov	r6, r3
 801a964:	e77e      	b.n	801a864 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>
 801a966:	ab05      	add	r3, sp, #20
 801a968:	e77c      	b.n	801a864 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>

0801a96a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a96a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a96e:	b095      	sub	sp, #84	@ 0x54
 801a970:	9212      	str	r2, [sp, #72]	@ 0x48
 801a972:	9309      	str	r3, [sp, #36]	@ 0x24
 801a974:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
 801a976:	f89d 309c 	ldrb.w	r3, [sp, #156]	@ 0x9c
 801a97a:	930f      	str	r3, [sp, #60]	@ 0x3c
 801a97c:	910e      	str	r1, [sp, #56]	@ 0x38
 801a97e:	e9dd 1324 	ldrd	r1, r3, [sp, #144]	@ 0x90
 801a982:	9013      	str	r0, [sp, #76]	@ 0x4c
 801a984:	6850      	ldr	r0, [r2, #4]
 801a986:	6812      	ldr	r2, [r2, #0]
 801a988:	fb00 1303 	mla	r3, r0, r3, r1
 801a98c:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801a990:	930a      	str	r3, [sp, #40]	@ 0x28
 801a992:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801a994:	681b      	ldr	r3, [r3, #0]
 801a996:	930d      	str	r3, [sp, #52]	@ 0x34
 801a998:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801a99a:	685c      	ldr	r4, [r3, #4]
 801a99c:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801a99e:	43db      	mvns	r3, r3
 801a9a0:	b2db      	uxtb	r3, r3
 801a9a2:	3404      	adds	r4, #4
 801a9a4:	930b      	str	r3, [sp, #44]	@ 0x2c
 801a9a6:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801a9a8:	2b00      	cmp	r3, #0
 801a9aa:	dc03      	bgt.n	801a9b4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801a9ac:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 801a9ae:	2b00      	cmp	r3, #0
 801a9b0:	f340 8255 	ble.w	801ae5e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 801a9b4:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801a9b6:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801a9ba:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801a9be:	1e48      	subs	r0, r1, #1
 801a9c0:	1e55      	subs	r5, r2, #1
 801a9c2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801a9c4:	2b00      	cmp	r3, #0
 801a9c6:	f340 80f9 	ble.w	801abbc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 801a9ca:	9e1f      	ldr	r6, [sp, #124]	@ 0x7c
 801a9cc:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801a9ce:	1436      	asrs	r6, r6, #16
 801a9d0:	ea4f 4323 	mov.w	r3, r3, asr #16
 801a9d4:	d406      	bmi.n	801a9e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801a9d6:	4286      	cmp	r6, r0
 801a9d8:	da04      	bge.n	801a9e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801a9da:	2b00      	cmp	r3, #0
 801a9dc:	db02      	blt.n	801a9e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801a9de:	42ab      	cmp	r3, r5
 801a9e0:	f2c0 80ed 	blt.w	801abbe <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x254>
 801a9e4:	3601      	adds	r6, #1
 801a9e6:	f100 80da 	bmi.w	801ab9e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801a9ea:	42b1      	cmp	r1, r6
 801a9ec:	f2c0 80d7 	blt.w	801ab9e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801a9f0:	3301      	adds	r3, #1
 801a9f2:	f100 80d4 	bmi.w	801ab9e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801a9f6:	429a      	cmp	r2, r3
 801a9f8:	f2c0 80d1 	blt.w	801ab9e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801a9fc:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801a9fe:	9311      	str	r3, [sp, #68]	@ 0x44
 801aa00:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801aa02:	930c      	str	r3, [sp, #48]	@ 0x30
 801aa04:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801aa06:	2b00      	cmp	r3, #0
 801aa08:	f340 80fa 	ble.w	801ac00 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
 801aa0c:	9826      	ldr	r0, [sp, #152]	@ 0x98
 801aa0e:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801aa10:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 801aa12:	68c6      	ldr	r6, [r0, #12]
 801aa14:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 801aa16:	141d      	asrs	r5, r3, #16
 801aa18:	f3c2 3103 	ubfx	r1, r2, #12, #4
 801aa1c:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801aa1e:	9a26      	ldr	r2, [sp, #152]	@ 0x98
 801aa20:	1400      	asrs	r0, r0, #16
 801aa22:	f3c3 3303 	ubfx	r3, r3, #12, #4
 801aa26:	6892      	ldr	r2, [r2, #8]
 801aa28:	f100 813e 	bmi.w	801aca8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801aa2c:	1e57      	subs	r7, r2, #1
 801aa2e:	42b8      	cmp	r0, r7
 801aa30:	f280 813a 	bge.w	801aca8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801aa34:	2d00      	cmp	r5, #0
 801aa36:	f2c0 8137 	blt.w	801aca8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801aa3a:	1e77      	subs	r7, r6, #1
 801aa3c:	42bd      	cmp	r5, r7
 801aa3e:	f280 8133 	bge.w	801aca8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801aa42:	b212      	sxth	r2, r2
 801aa44:	fb05 0002 	mla	r0, r5, r2, r0
 801aa48:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 801aa4a:	f815 a000 	ldrb.w	sl, [r5, r0]
 801aa4e:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
 801aa52:	182e      	adds	r6, r5, r0
 801aa54:	eb04 050a 	add.w	r5, r4, sl
 801aa58:	2b00      	cmp	r3, #0
 801aa5a:	f000 8117 	beq.w	801ac8c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x322>
 801aa5e:	f896 c001 	ldrb.w	ip, [r6, #1]
 801aa62:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 801aa66:	44a4      	add	ip, r4
 801aa68:	2900      	cmp	r1, #0
 801aa6a:	f000 8117 	beq.w	801ac9c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x332>
 801aa6e:	18b0      	adds	r0, r6, r2
 801aa70:	5cb2      	ldrb	r2, [r6, r2]
 801aa72:	7840      	ldrb	r0, [r0, #1]
 801aa74:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801aa78:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801aa7c:	4422      	add	r2, r4
 801aa7e:	4420      	add	r0, r4
 801aa80:	b29b      	uxth	r3, r3
 801aa82:	b289      	uxth	r1, r1
 801aa84:	fb03 f901 	mul.w	r9, r3, r1
 801aa88:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801aa8c:	011b      	lsls	r3, r3, #4
 801aa8e:	b289      	uxth	r1, r1
 801aa90:	f89c 7002 	ldrb.w	r7, [ip, #2]
 801aa94:	f895 b002 	ldrb.w	fp, [r5, #2]
 801aa98:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 801aa9a:	f814 a00a 	ldrb.w	sl, [r4, sl]
 801aa9e:	f8b6 e000 	ldrh.w	lr, [r6]
 801aaa2:	f8bd 603c 	ldrh.w	r6, [sp, #60]	@ 0x3c
 801aaa6:	f5c3 7880 	rsb	r8, r3, #256	@ 0x100
 801aaaa:	eba3 0309 	sub.w	r3, r3, r9
 801aaae:	b29b      	uxth	r3, r3
 801aab0:	eba8 0801 	sub.w	r8, r8, r1
 801aab4:	fa1f f888 	uxth.w	r8, r8
 801aab8:	435f      	muls	r7, r3
 801aaba:	fb08 770b 	mla	r7, r8, fp, r7
 801aabe:	f892 b002 	ldrb.w	fp, [r2, #2]
 801aac2:	9310      	str	r3, [sp, #64]	@ 0x40
 801aac4:	fb01 770b 	mla	r7, r1, fp, r7
 801aac8:	f890 b002 	ldrb.w	fp, [r0, #2]
 801aacc:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801aace:	fb09 770b 	mla	r7, r9, fp, r7
 801aad2:	ea4f 2b2e 	mov.w	fp, lr, asr #8
 801aad6:	f00b 0bf8 	and.w	fp, fp, #248	@ 0xf8
 801aada:	fb1b fb03 	smulbb	fp, fp, r3
 801aade:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801aae2:	fb07 b706 	mla	r7, r7, r6, fp
 801aae6:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801aae8:	f895 b001 	ldrb.w	fp, [r5, #1]
 801aaec:	f89c 5001 	ldrb.w	r5, [ip, #1]
 801aaf0:	f89c c000 	ldrb.w	ip, [ip]
 801aaf4:	435d      	muls	r5, r3
 801aaf6:	fb08 550b 	mla	r5, r8, fp, r5
 801aafa:	f892 b001 	ldrb.w	fp, [r2, #1]
 801aafe:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801ab00:	fb01 550b 	mla	r5, r1, fp, r5
 801ab04:	f890 b001 	ldrb.w	fp, [r0, #1]
 801ab08:	fb09 550b 	mla	r5, r9, fp, r5
 801ab0c:	ea4f 0bee 	mov.w	fp, lr, asr #3
 801ab10:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
 801ab14:	fb1b fb03 	smulbb	fp, fp, r3
 801ab18:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801ab1a:	fb03 f30c 	mul.w	r3, r3, ip
 801ab1e:	f892 c000 	ldrb.w	ip, [r2]
 801ab22:	fb08 330a 	mla	r3, r8, sl, r3
 801ab26:	fb01 330c 	mla	r3, r1, ip, r3
 801ab2a:	f890 c000 	ldrb.w	ip, [r0]
 801ab2e:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801ab32:	fb09 3c0c 	mla	ip, r9, ip, r3
 801ab36:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801ab38:	fa5f fe8e 	uxtb.w	lr, lr
 801ab3c:	b2bf      	uxth	r7, r7
 801ab3e:	fb1e fe03 	smulbb	lr, lr, r3
 801ab42:	f3c5 2507 	ubfx	r5, r5, #8, #8
 801ab46:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 801ab4a:	fb05 b506 	mla	r5, r5, r6, fp
 801ab4e:	1c7b      	adds	r3, r7, #1
 801ab50:	fb0c e606 	mla	r6, ip, r6, lr
 801ab54:	b2ad      	uxth	r5, r5
 801ab56:	b2b6      	uxth	r6, r6
 801ab58:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 801ab5c:	f407 4378 	and.w	r3, r7, #63488	@ 0xf800
 801ab60:	f105 0b01 	add.w	fp, r5, #1
 801ab64:	1c77      	adds	r7, r6, #1
 801ab66:	eb07 2716 	add.w	r7, r7, r6, lsr #8
 801ab6a:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 801ab6e:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801ab72:	096d      	lsrs	r5, r5, #5
 801ab74:	431f      	orrs	r7, r3
 801ab76:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801ab7a:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801ab7c:	433d      	orrs	r5, r7
 801ab7e:	801d      	strh	r5, [r3, #0]
 801ab80:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801ab82:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 801ab84:	3302      	adds	r3, #2
 801ab86:	930c      	str	r3, [sp, #48]	@ 0x30
 801ab88:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801ab8a:	4413      	add	r3, r2
 801ab8c:	931f      	str	r3, [sp, #124]	@ 0x7c
 801ab8e:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 801ab90:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801ab92:	4413      	add	r3, r2
 801ab94:	9320      	str	r3, [sp, #128]	@ 0x80
 801ab96:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801ab98:	3b01      	subs	r3, #1
 801ab9a:	9311      	str	r3, [sp, #68]	@ 0x44
 801ab9c:	e732      	b.n	801aa04 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801ab9e:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801aba0:	9e21      	ldr	r6, [sp, #132]	@ 0x84
 801aba2:	4433      	add	r3, r6
 801aba4:	931f      	str	r3, [sp, #124]	@ 0x7c
 801aba6:	9e22      	ldr	r6, [sp, #136]	@ 0x88
 801aba8:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801abaa:	4433      	add	r3, r6
 801abac:	9320      	str	r3, [sp, #128]	@ 0x80
 801abae:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801abb0:	3b01      	subs	r3, #1
 801abb2:	9309      	str	r3, [sp, #36]	@ 0x24
 801abb4:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801abb6:	3302      	adds	r3, #2
 801abb8:	930a      	str	r3, [sp, #40]	@ 0x28
 801abba:	e702      	b.n	801a9c2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801abbc:	d027      	beq.n	801ac0e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a4>
 801abbe:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801abc0:	9821      	ldr	r0, [sp, #132]	@ 0x84
 801abc2:	9d1f      	ldr	r5, [sp, #124]	@ 0x7c
 801abc4:	3b01      	subs	r3, #1
 801abc6:	fb00 5003 	mla	r0, r0, r3, r5
 801abca:	1400      	asrs	r0, r0, #16
 801abcc:	f53f af16 	bmi.w	801a9fc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801abd0:	3901      	subs	r1, #1
 801abd2:	4288      	cmp	r0, r1
 801abd4:	f6bf af12 	bge.w	801a9fc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801abd8:	9922      	ldr	r1, [sp, #136]	@ 0x88
 801abda:	9820      	ldr	r0, [sp, #128]	@ 0x80
 801abdc:	fb01 0303 	mla	r3, r1, r3, r0
 801abe0:	141b      	asrs	r3, r3, #16
 801abe2:	f53f af0b 	bmi.w	801a9fc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801abe6:	3a01      	subs	r2, #1
 801abe8:	4293      	cmp	r3, r2
 801abea:	f6bf af07 	bge.w	801a9fc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801abee:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801abf0:	9311      	str	r3, [sp, #68]	@ 0x44
 801abf2:	f8bd a03c 	ldrh.w	sl, [sp, #60]	@ 0x3c
 801abf6:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801abf8:	930c      	str	r3, [sp, #48]	@ 0x30
 801abfa:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801abfc:	2b00      	cmp	r3, #0
 801abfe:	dc70      	bgt.n	801ace2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 801ac00:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801ac02:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 801ac04:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801ac08:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801ac0c:	930a      	str	r3, [sp, #40]	@ 0x28
 801ac0e:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801ac10:	2b00      	cmp	r3, #0
 801ac12:	f340 8124 	ble.w	801ae5e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 801ac16:	ee30 0a04 	vadd.f32	s0, s0, s8
 801ac1a:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801ac1e:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801ac22:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 801ac24:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801ac28:	ee31 1a05 	vadd.f32	s2, s2, s10
 801ac2c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801ac30:	eef0 6a62 	vmov.f32	s13, s5
 801ac34:	ee61 7a27 	vmul.f32	s15, s2, s15
 801ac38:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801ac3c:	ee77 2a62 	vsub.f32	s5, s14, s5
 801ac40:	edcd 6a1f 	vstr	s13, [sp, #124]	@ 0x7c
 801ac44:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801ac48:	eef0 6a43 	vmov.f32	s13, s6
 801ac4c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801ac50:	ee12 2a90 	vmov	r2, s5
 801ac54:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801ac58:	fb92 f3f3 	sdiv	r3, r2, r3
 801ac5c:	ee13 2a10 	vmov	r2, s6
 801ac60:	9321      	str	r3, [sp, #132]	@ 0x84
 801ac62:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 801ac64:	fb92 f3f3 	sdiv	r3, r2, r3
 801ac68:	9322      	str	r3, [sp, #136]	@ 0x88
 801ac6a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801ac6c:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 801ac6e:	3b01      	subs	r3, #1
 801ac70:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801ac74:	930e      	str	r3, [sp, #56]	@ 0x38
 801ac76:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 801ac78:	edcd 6a20 	vstr	s13, [sp, #128]	@ 0x80
 801ac7c:	bf08      	it	eq
 801ac7e:	4613      	moveq	r3, r2
 801ac80:	9309      	str	r3, [sp, #36]	@ 0x24
 801ac82:	eeb0 3a67 	vmov.f32	s6, s15
 801ac86:	eef0 2a47 	vmov.f32	s5, s14
 801ac8a:	e68c      	b.n	801a9a6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801ac8c:	b149      	cbz	r1, 801aca2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x338>
 801ac8e:	5cb2      	ldrb	r2, [r6, r2]
 801ac90:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801ac94:	4422      	add	r2, r4
 801ac96:	4628      	mov	r0, r5
 801ac98:	46ac      	mov	ip, r5
 801ac9a:	e6f1      	b.n	801aa80 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801ac9c:	4628      	mov	r0, r5
 801ac9e:	462a      	mov	r2, r5
 801aca0:	e6ee      	b.n	801aa80 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801aca2:	4628      	mov	r0, r5
 801aca4:	462a      	mov	r2, r5
 801aca6:	e7f7      	b.n	801ac98 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32e>
 801aca8:	1c47      	adds	r7, r0, #1
 801acaa:	f53f af69 	bmi.w	801ab80 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801acae:	42ba      	cmp	r2, r7
 801acb0:	f6ff af66 	blt.w	801ab80 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801acb4:	1c6f      	adds	r7, r5, #1
 801acb6:	f53f af63 	bmi.w	801ab80 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801acba:	42be      	cmp	r6, r7
 801acbc:	f6ff af60 	blt.w	801ab80 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801acc0:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 801acc2:	9002      	str	r0, [sp, #8]
 801acc4:	b236      	sxth	r6, r6
 801acc6:	b212      	sxth	r2, r2
 801acc8:	e9cd 1705 	strd	r1, r7, [sp, #20]
 801accc:	e9cd 5303 	strd	r5, r3, [sp, #12]
 801acd0:	9200      	str	r2, [sp, #0]
 801acd2:	9601      	str	r6, [sp, #4]
 801acd4:	4623      	mov	r3, r4
 801acd6:	e9dd 120c 	ldrd	r1, r2, [sp, #48]	@ 0x30
 801acda:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 801acdc:	f7ff fd59 	bl	801a792 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>
 801ace0:	e74e      	b.n	801ab80 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801ace2:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 801ace4:	9820      	ldr	r0, [sp, #128]	@ 0x80
 801ace6:	9d1f      	ldr	r5, [sp, #124]	@ 0x7c
 801ace8:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801acea:	f3c2 3103 	ubfx	r1, r2, #12, #4
 801acee:	9a26      	ldr	r2, [sp, #152]	@ 0x98
 801acf0:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 801acf4:	142d      	asrs	r5, r5, #16
 801acf6:	1400      	asrs	r0, r0, #16
 801acf8:	fb02 5000 	mla	r0, r2, r0, r5
 801acfc:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 801acfe:	f815 9000 	ldrb.w	r9, [r5, r0]
 801ad02:	f3c3 3303 	ubfx	r3, r3, #12, #4
 801ad06:	eb09 0949 	add.w	r9, r9, r9, lsl #1
 801ad0a:	182e      	adds	r6, r5, r0
 801ad0c:	eb04 0509 	add.w	r5, r4, r9
 801ad10:	2b00      	cmp	r3, #0
 801ad12:	f000 8096 	beq.w	801ae42 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 801ad16:	7877      	ldrb	r7, [r6, #1]
 801ad18:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 801ad1c:	4427      	add	r7, r4
 801ad1e:	2900      	cmp	r1, #0
 801ad20:	f000 8097 	beq.w	801ae52 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e8>
 801ad24:	18b0      	adds	r0, r6, r2
 801ad26:	5cb2      	ldrb	r2, [r6, r2]
 801ad28:	7840      	ldrb	r0, [r0, #1]
 801ad2a:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801ad2e:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801ad32:	4422      	add	r2, r4
 801ad34:	4420      	add	r0, r4
 801ad36:	b29b      	uxth	r3, r3
 801ad38:	b289      	uxth	r1, r1
 801ad3a:	fb03 f801 	mul.w	r8, r3, r1
 801ad3e:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 801ad40:	f895 b002 	ldrb.w	fp, [r5, #2]
 801ad44:	f8b6 c000 	ldrh.w	ip, [r6]
 801ad48:	78be      	ldrb	r6, [r7, #2]
 801ad4a:	f814 9009 	ldrb.w	r9, [r4, r9]
 801ad4e:	011b      	lsls	r3, r3, #4
 801ad50:	ebc8 1101 	rsb	r1, r8, r1, lsl #4
 801ad54:	b289      	uxth	r1, r1
 801ad56:	f5c3 7e80 	rsb	lr, r3, #256	@ 0x100
 801ad5a:	eba3 0308 	sub.w	r3, r3, r8
 801ad5e:	b29b      	uxth	r3, r3
 801ad60:	ebae 0e01 	sub.w	lr, lr, r1
 801ad64:	fa1f fe8e 	uxth.w	lr, lr
 801ad68:	435e      	muls	r6, r3
 801ad6a:	fb0e 660b 	mla	r6, lr, fp, r6
 801ad6e:	f892 b002 	ldrb.w	fp, [r2, #2]
 801ad72:	9310      	str	r3, [sp, #64]	@ 0x40
 801ad74:	fb01 660b 	mla	r6, r1, fp, r6
 801ad78:	f890 b002 	ldrb.w	fp, [r0, #2]
 801ad7c:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801ad7e:	fb08 660b 	mla	r6, r8, fp, r6
 801ad82:	ea4f 2b2c 	mov.w	fp, ip, asr #8
 801ad86:	f00b 0bf8 	and.w	fp, fp, #248	@ 0xf8
 801ad8a:	fb1b fb03 	smulbb	fp, fp, r3
 801ad8e:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801ad92:	fb06 b60a 	mla	r6, r6, sl, fp
 801ad96:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801ad98:	f895 b001 	ldrb.w	fp, [r5, #1]
 801ad9c:	787d      	ldrb	r5, [r7, #1]
 801ad9e:	783f      	ldrb	r7, [r7, #0]
 801ada0:	435d      	muls	r5, r3
 801ada2:	fb0e 550b 	mla	r5, lr, fp, r5
 801ada6:	f892 b001 	ldrb.w	fp, [r2, #1]
 801adaa:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801adac:	fb01 550b 	mla	r5, r1, fp, r5
 801adb0:	f890 b001 	ldrb.w	fp, [r0, #1]
 801adb4:	fb08 550b 	mla	r5, r8, fp, r5
 801adb8:	ea4f 0bec 	mov.w	fp, ip, asr #3
 801adbc:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
 801adc0:	fb1b fb03 	smulbb	fp, fp, r3
 801adc4:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801adc6:	437b      	muls	r3, r7
 801adc8:	7817      	ldrb	r7, [r2, #0]
 801adca:	fb0e 3309 	mla	r3, lr, r9, r3
 801adce:	fb01 3307 	mla	r3, r1, r7, r3
 801add2:	7807      	ldrb	r7, [r0, #0]
 801add4:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801add8:	fb08 3707 	mla	r7, r8, r7, r3
 801addc:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801adde:	fa5f fc8c 	uxtb.w	ip, ip
 801ade2:	fb1c fc03 	smulbb	ip, ip, r3
 801ade6:	f3c5 2507 	ubfx	r5, r5, #8, #8
 801adea:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801adee:	fb05 b50a 	mla	r5, r5, sl, fp
 801adf2:	fb07 c70a 	mla	r7, r7, sl, ip
 801adf6:	b2b6      	uxth	r6, r6
 801adf8:	b2ad      	uxth	r5, r5
 801adfa:	b2bf      	uxth	r7, r7
 801adfc:	1c73      	adds	r3, r6, #1
 801adfe:	1c7a      	adds	r2, r7, #1
 801ae00:	f105 0b01 	add.w	fp, r5, #1
 801ae04:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 801ae08:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 801ae0c:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 801ae10:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801ae14:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
 801ae18:	096d      	lsrs	r5, r5, #5
 801ae1a:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801ae1c:	4316      	orrs	r6, r2
 801ae1e:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801ae22:	432e      	orrs	r6, r5
 801ae24:	f823 6b02 	strh.w	r6, [r3], #2
 801ae28:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 801ae2a:	930c      	str	r3, [sp, #48]	@ 0x30
 801ae2c:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801ae2e:	4413      	add	r3, r2
 801ae30:	931f      	str	r3, [sp, #124]	@ 0x7c
 801ae32:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 801ae34:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801ae36:	4413      	add	r3, r2
 801ae38:	9320      	str	r3, [sp, #128]	@ 0x80
 801ae3a:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801ae3c:	3b01      	subs	r3, #1
 801ae3e:	9311      	str	r3, [sp, #68]	@ 0x44
 801ae40:	e6db      	b.n	801abfa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x290>
 801ae42:	b149      	cbz	r1, 801ae58 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 801ae44:	5cb2      	ldrb	r2, [r6, r2]
 801ae46:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801ae4a:	4422      	add	r2, r4
 801ae4c:	4628      	mov	r0, r5
 801ae4e:	462f      	mov	r7, r5
 801ae50:	e771      	b.n	801ad36 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 801ae52:	4628      	mov	r0, r5
 801ae54:	462a      	mov	r2, r5
 801ae56:	e76e      	b.n	801ad36 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 801ae58:	4628      	mov	r0, r5
 801ae5a:	462a      	mov	r2, r5
 801ae5c:	e7f7      	b.n	801ae4e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801ae5e:	b015      	add	sp, #84	@ 0x54
 801ae60:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801ae64 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>:
 801ae64:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ae68:	880f      	ldrh	r7, [r1, #0]
 801ae6a:	f9bd e030 	ldrsh.w	lr, [sp, #48]	@ 0x30
 801ae6e:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	@ 0x34
 801ae72:	f89d 0040 	ldrb.w	r0, [sp, #64]	@ 0x40
 801ae76:	f89d 6044 	ldrb.w	r6, [sp, #68]	@ 0x44
 801ae7a:	023c      	lsls	r4, r7, #8
 801ae7c:	e9dd c50e 	ldrd	ip, r5, [sp, #56]	@ 0x38
 801ae80:	f404 0b78 	and.w	fp, r4, #16252928	@ 0xf80000
 801ae84:	017c      	lsls	r4, r7, #5
 801ae86:	f404 447c 	and.w	r4, r4, #64512	@ 0xfc00
 801ae8a:	00ff      	lsls	r7, r7, #3
 801ae8c:	ea4b 0404 	orr.w	r4, fp, r4
 801ae90:	b2ff      	uxtb	r7, r7
 801ae92:	fb05 ca0e 	mla	sl, r5, lr, ip
 801ae96:	4327      	orrs	r7, r4
 801ae98:	2d00      	cmp	r5, #0
 801ae9a:	eb02 080a 	add.w	r8, r2, sl
 801ae9e:	9701      	str	r7, [sp, #4]
 801aea0:	db7e      	blt.n	801afa0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 801aea2:	45a9      	cmp	r9, r5
 801aea4:	dd7c      	ble.n	801afa0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 801aea6:	f1bc 0f00 	cmp.w	ip, #0
 801aeaa:	db77      	blt.n	801af9c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 801aeac:	45e6      	cmp	lr, ip
 801aeae:	dd75      	ble.n	801af9c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 801aeb0:	f812 700a 	ldrb.w	r7, [r2, sl]
 801aeb4:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 801aeb8:	441f      	add	r7, r3
 801aeba:	f11c 0201 	adds.w	r2, ip, #1
 801aebe:	d472      	bmi.n	801afa6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 801aec0:	4596      	cmp	lr, r2
 801aec2:	dd70      	ble.n	801afa6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 801aec4:	2800      	cmp	r0, #0
 801aec6:	d06e      	beq.n	801afa6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 801aec8:	f898 4001 	ldrb.w	r4, [r8, #1]
 801aecc:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 801aed0:	441c      	add	r4, r3
 801aed2:	3501      	adds	r5, #1
 801aed4:	d46b      	bmi.n	801afae <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 801aed6:	45a9      	cmp	r9, r5
 801aed8:	dd69      	ble.n	801afae <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 801aeda:	2e00      	cmp	r6, #0
 801aedc:	d067      	beq.n	801afae <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 801aede:	f1bc 0f00 	cmp.w	ip, #0
 801aee2:	db62      	blt.n	801afaa <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 801aee4:	45e6      	cmp	lr, ip
 801aee6:	dd60      	ble.n	801afaa <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 801aee8:	f818 500e 	ldrb.w	r5, [r8, lr]
 801aeec:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801aef0:	441d      	add	r5, r3
 801aef2:	f11c 0201 	adds.w	r2, ip, #1
 801aef6:	d45d      	bmi.n	801afb4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 801aef8:	4596      	cmp	lr, r2
 801aefa:	dd5b      	ble.n	801afb4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 801aefc:	2800      	cmp	r0, #0
 801aefe:	d059      	beq.n	801afb4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 801af00:	44c6      	add	lr, r8
 801af02:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801af06:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801af0a:	4413      	add	r3, r2
 801af0c:	b280      	uxth	r0, r0
 801af0e:	b2b2      	uxth	r2, r6
 801af10:	fb00 f602 	mul.w	r6, r0, r2
 801af14:	0100      	lsls	r0, r0, #4
 801af16:	ebc6 1202 	rsb	r2, r6, r2, lsl #4
 801af1a:	f5c0 7880 	rsb	r8, r0, #256	@ 0x100
 801af1e:	1b80      	subs	r0, r0, r6
 801af20:	fa1f fc82 	uxth.w	ip, r2
 801af24:	b282      	uxth	r2, r0
 801af26:	78a0      	ldrb	r0, [r4, #2]
 801af28:	f897 e002 	ldrb.w	lr, [r7, #2]
 801af2c:	f897 9000 	ldrb.w	r9, [r7]
 801af30:	787f      	ldrb	r7, [r7, #1]
 801af32:	eba8 080c 	sub.w	r8, r8, ip
 801af36:	fa1f f888 	uxth.w	r8, r8
 801af3a:	4350      	muls	r0, r2
 801af3c:	fb08 0e0e 	mla	lr, r8, lr, r0
 801af40:	78a8      	ldrb	r0, [r5, #2]
 801af42:	fb0c e000 	mla	r0, ip, r0, lr
 801af46:	f893 e002 	ldrb.w	lr, [r3, #2]
 801af4a:	fb06 0e0e 	mla	lr, r6, lr, r0
 801af4e:	f40e 4078 	and.w	r0, lr, #63488	@ 0xf800
 801af52:	f894 e000 	ldrb.w	lr, [r4]
 801af56:	fb02 fe0e 	mul.w	lr, r2, lr
 801af5a:	fb08 e909 	mla	r9, r8, r9, lr
 801af5e:	f895 e000 	ldrb.w	lr, [r5]
 801af62:	fb0c 990e 	mla	r9, ip, lr, r9
 801af66:	f893 e000 	ldrb.w	lr, [r3]
 801af6a:	785b      	ldrb	r3, [r3, #1]
 801af6c:	fb06 9e0e 	mla	lr, r6, lr, r9
 801af70:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 801af74:	ea4e 0e00 	orr.w	lr, lr, r0
 801af78:	7860      	ldrb	r0, [r4, #1]
 801af7a:	4350      	muls	r0, r2
 801af7c:	786a      	ldrb	r2, [r5, #1]
 801af7e:	fb08 0007 	mla	r0, r8, r7, r0
 801af82:	fb0c 0202 	mla	r2, ip, r2, r0
 801af86:	fb06 2303 	mla	r3, r6, r3, r2
 801af8a:	095b      	lsrs	r3, r3, #5
 801af8c:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801af90:	ea4e 0303 	orr.w	r3, lr, r3
 801af94:	800b      	strh	r3, [r1, #0]
 801af96:	b003      	add	sp, #12
 801af98:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801af9c:	af01      	add	r7, sp, #4
 801af9e:	e78c      	b.n	801aeba <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x56>
 801afa0:	ac01      	add	r4, sp, #4
 801afa2:	4627      	mov	r7, r4
 801afa4:	e795      	b.n	801aed2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 801afa6:	ac01      	add	r4, sp, #4
 801afa8:	e793      	b.n	801aed2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 801afaa:	ad01      	add	r5, sp, #4
 801afac:	e7a1      	b.n	801aef2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x8e>
 801afae:	ab01      	add	r3, sp, #4
 801afb0:	461d      	mov	r5, r3
 801afb2:	e7ab      	b.n	801af0c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>
 801afb4:	ab01      	add	r3, sp, #4
 801afb6:	e7a9      	b.n	801af0c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>

0801afb8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801afb8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801afbc:	b08f      	sub	sp, #60	@ 0x3c
 801afbe:	e9dd b519 	ldrd	fp, r5, [sp, #100]	@ 0x64
 801afc2:	920c      	str	r2, [sp, #48]	@ 0x30
 801afc4:	9a1d      	ldr	r2, [sp, #116]	@ 0x74
 801afc6:	910a      	str	r1, [sp, #40]	@ 0x28
 801afc8:	9306      	str	r3, [sp, #24]
 801afca:	e9dd 131e 	ldrd	r1, r3, [sp, #120]	@ 0x78
 801afce:	900d      	str	r0, [sp, #52]	@ 0x34
 801afd0:	6850      	ldr	r0, [r2, #4]
 801afd2:	6812      	ldr	r2, [r2, #0]
 801afd4:	fb00 1303 	mla	r3, r0, r3, r1
 801afd8:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801afdc:	9307      	str	r3, [sp, #28]
 801afde:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801afe0:	681b      	ldr	r3, [r3, #0]
 801afe2:	9308      	str	r3, [sp, #32]
 801afe4:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801afe6:	685c      	ldr	r4, [r3, #4]
 801afe8:	3404      	adds	r4, #4
 801afea:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801afec:	2b00      	cmp	r3, #0
 801afee:	dc03      	bgt.n	801aff8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 801aff0:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801aff2:	2b00      	cmp	r3, #0
 801aff4:	f340 81d6 	ble.w	801b3a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 801aff8:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801affa:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801affe:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801b002:	1e48      	subs	r0, r1, #1
 801b004:	1e56      	subs	r6, r2, #1
 801b006:	9b06      	ldr	r3, [sp, #24]
 801b008:	2b00      	cmp	r3, #0
 801b00a:	f340 80b7 	ble.w	801b17c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c4>
 801b00e:	ea5f 472b 	movs.w	r7, fp, asr #16
 801b012:	ea4f 4325 	mov.w	r3, r5, asr #16
 801b016:	d406      	bmi.n	801b026 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801b018:	4287      	cmp	r7, r0
 801b01a:	da04      	bge.n	801b026 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801b01c:	2b00      	cmp	r3, #0
 801b01e:	db02      	blt.n	801b026 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801b020:	42b3      	cmp	r3, r6
 801b022:	f2c0 80ac 	blt.w	801b17e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 801b026:	3701      	adds	r7, #1
 801b028:	f100 809d 	bmi.w	801b166 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801b02c:	42b9      	cmp	r1, r7
 801b02e:	f2c0 809a 	blt.w	801b166 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801b032:	3301      	adds	r3, #1
 801b034:	f100 8097 	bmi.w	801b166 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801b038:	429a      	cmp	r2, r3
 801b03a:	f2c0 8094 	blt.w	801b166 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801b03e:	9b06      	ldr	r3, [sp, #24]
 801b040:	930b      	str	r3, [sp, #44]	@ 0x2c
 801b042:	9b07      	ldr	r3, [sp, #28]
 801b044:	9309      	str	r3, [sp, #36]	@ 0x24
 801b046:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801b048:	2b00      	cmp	r3, #0
 801b04a:	f340 80b5 	ble.w	801b1b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801b04e:	9820      	ldr	r0, [sp, #128]	@ 0x80
 801b050:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 801b052:	68c7      	ldr	r7, [r0, #12]
 801b054:	6892      	ldr	r2, [r2, #8]
 801b056:	ea5f 402b 	movs.w	r0, fp, asr #16
 801b05a:	ea4f 4625 	mov.w	r6, r5, asr #16
 801b05e:	f3cb 3303 	ubfx	r3, fp, #12, #4
 801b062:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801b066:	f100 80fb 	bmi.w	801b260 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801b06a:	f102 3cff 	add.w	ip, r2, #4294967295
 801b06e:	4560      	cmp	r0, ip
 801b070:	f280 80f6 	bge.w	801b260 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801b074:	2e00      	cmp	r6, #0
 801b076:	f2c0 80f3 	blt.w	801b260 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801b07a:	f107 3cff 	add.w	ip, r7, #4294967295
 801b07e:	4566      	cmp	r6, ip
 801b080:	f280 80ee 	bge.w	801b260 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801b084:	b212      	sxth	r2, r2
 801b086:	fb06 0002 	mla	r0, r6, r2, r0
 801b08a:	9e08      	ldr	r6, [sp, #32]
 801b08c:	1837      	adds	r7, r6, r0
 801b08e:	5c30      	ldrb	r0, [r6, r0]
 801b090:	eb00 0840 	add.w	r8, r0, r0, lsl #1
 801b094:	eb04 0c08 	add.w	ip, r4, r8
 801b098:	2b00      	cmp	r3, #0
 801b09a:	f000 80d3 	beq.w	801b244 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801b09e:	787e      	ldrb	r6, [r7, #1]
 801b0a0:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801b0a4:	4426      	add	r6, r4
 801b0a6:	2900      	cmp	r1, #0
 801b0a8:	f000 80d4 	beq.w	801b254 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29c>
 801b0ac:	18b8      	adds	r0, r7, r2
 801b0ae:	5cba      	ldrb	r2, [r7, r2]
 801b0b0:	7840      	ldrb	r0, [r0, #1]
 801b0b2:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801b0b6:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801b0ba:	4422      	add	r2, r4
 801b0bc:	4420      	add	r0, r4
 801b0be:	b29b      	uxth	r3, r3
 801b0c0:	b289      	uxth	r1, r1
 801b0c2:	fb03 f901 	mul.w	r9, r3, r1
 801b0c6:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801b0ca:	011b      	lsls	r3, r3, #4
 801b0cc:	b289      	uxth	r1, r1
 801b0ce:	78b7      	ldrb	r7, [r6, #2]
 801b0d0:	f89c a002 	ldrb.w	sl, [ip, #2]
 801b0d4:	f89c c001 	ldrb.w	ip, [ip, #1]
 801b0d8:	f5c3 7e80 	rsb	lr, r3, #256	@ 0x100
 801b0dc:	eba3 0309 	sub.w	r3, r3, r9
 801b0e0:	b29b      	uxth	r3, r3
 801b0e2:	ebae 0e01 	sub.w	lr, lr, r1
 801b0e6:	fa1f fe8e 	uxth.w	lr, lr
 801b0ea:	435f      	muls	r7, r3
 801b0ec:	fb0e 770a 	mla	r7, lr, sl, r7
 801b0f0:	f892 a002 	ldrb.w	sl, [r2, #2]
 801b0f4:	fb01 770a 	mla	r7, r1, sl, r7
 801b0f8:	f890 a002 	ldrb.w	sl, [r0, #2]
 801b0fc:	fb09 7a0a 	mla	sl, r9, sl, r7
 801b100:	f814 7008 	ldrb.w	r7, [r4, r8]
 801b104:	f896 8000 	ldrb.w	r8, [r6]
 801b108:	7876      	ldrb	r6, [r6, #1]
 801b10a:	fb03 f808 	mul.w	r8, r3, r8
 801b10e:	fb0e 8807 	mla	r8, lr, r7, r8
 801b112:	7817      	ldrb	r7, [r2, #0]
 801b114:	fb01 8807 	mla	r8, r1, r7, r8
 801b118:	7807      	ldrb	r7, [r0, #0]
 801b11a:	fb09 8707 	mla	r7, r9, r7, r8
 801b11e:	f40a 4a78 	and.w	sl, sl, #63488	@ 0xf800
 801b122:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801b126:	ea47 070a 	orr.w	r7, r7, sl
 801b12a:	4373      	muls	r3, r6
 801b12c:	f892 a001 	ldrb.w	sl, [r2, #1]
 801b130:	fb0e 330c 	mla	r3, lr, ip, r3
 801b134:	fb01 310a 	mla	r1, r1, sl, r3
 801b138:	f890 a001 	ldrb.w	sl, [r0, #1]
 801b13c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801b13e:	fb09 1a0a 	mla	sl, r9, sl, r1
 801b142:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801b146:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 801b14a:	ea47 070a 	orr.w	r7, r7, sl
 801b14e:	801f      	strh	r7, [r3, #0]
 801b150:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801b152:	3302      	adds	r3, #2
 801b154:	9309      	str	r3, [sp, #36]	@ 0x24
 801b156:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 801b158:	449b      	add	fp, r3
 801b15a:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801b15c:	441d      	add	r5, r3
 801b15e:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801b160:	3b01      	subs	r3, #1
 801b162:	930b      	str	r3, [sp, #44]	@ 0x2c
 801b164:	e76f      	b.n	801b046 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801b166:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 801b168:	449b      	add	fp, r3
 801b16a:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801b16c:	441d      	add	r5, r3
 801b16e:	9b06      	ldr	r3, [sp, #24]
 801b170:	3b01      	subs	r3, #1
 801b172:	9306      	str	r3, [sp, #24]
 801b174:	9b07      	ldr	r3, [sp, #28]
 801b176:	3302      	adds	r3, #2
 801b178:	9307      	str	r3, [sp, #28]
 801b17a:	e744      	b.n	801b006 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e>
 801b17c:	d023      	beq.n	801b1c6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 801b17e:	9b06      	ldr	r3, [sp, #24]
 801b180:	981b      	ldr	r0, [sp, #108]	@ 0x6c
 801b182:	3b01      	subs	r3, #1
 801b184:	fb00 b003 	mla	r0, r0, r3, fp
 801b188:	1400      	asrs	r0, r0, #16
 801b18a:	f53f af58 	bmi.w	801b03e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801b18e:	3901      	subs	r1, #1
 801b190:	4288      	cmp	r0, r1
 801b192:	f6bf af54 	bge.w	801b03e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801b196:	991c      	ldr	r1, [sp, #112]	@ 0x70
 801b198:	fb01 5303 	mla	r3, r1, r3, r5
 801b19c:	141b      	asrs	r3, r3, #16
 801b19e:	f53f af4e 	bmi.w	801b03e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801b1a2:	3a01      	subs	r2, #1
 801b1a4:	4293      	cmp	r3, r2
 801b1a6:	f6bf af4a 	bge.w	801b03e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801b1aa:	9b06      	ldr	r3, [sp, #24]
 801b1ac:	9309      	str	r3, [sp, #36]	@ 0x24
 801b1ae:	9b07      	ldr	r3, [sp, #28]
 801b1b0:	930b      	str	r3, [sp, #44]	@ 0x2c
 801b1b2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801b1b4:	2b00      	cmp	r3, #0
 801b1b6:	dc70      	bgt.n	801b29a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e2>
 801b1b8:	9b06      	ldr	r3, [sp, #24]
 801b1ba:	9a07      	ldr	r2, [sp, #28]
 801b1bc:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801b1c0:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801b1c4:	9307      	str	r3, [sp, #28]
 801b1c6:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801b1c8:	2b00      	cmp	r3, #0
 801b1ca:	f340 80eb 	ble.w	801b3a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 801b1ce:	ee30 0a04 	vadd.f32	s0, s0, s8
 801b1d2:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801b1d6:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801b1da:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801b1dc:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801b1e0:	ee31 1a05 	vadd.f32	s2, s2, s10
 801b1e4:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801b1e8:	eef0 6a62 	vmov.f32	s13, s5
 801b1ec:	ee61 7a27 	vmul.f32	s15, s2, s15
 801b1f0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801b1f4:	ee77 2a62 	vsub.f32	s5, s14, s5
 801b1f8:	ee16 ba90 	vmov	fp, s13
 801b1fc:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801b200:	eef0 6a43 	vmov.f32	s13, s6
 801b204:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801b208:	ee12 2a90 	vmov	r2, s5
 801b20c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801b210:	fb92 f3f3 	sdiv	r3, r2, r3
 801b214:	ee13 2a10 	vmov	r2, s6
 801b218:	931b      	str	r3, [sp, #108]	@ 0x6c
 801b21a:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801b21c:	fb92 f3f3 	sdiv	r3, r2, r3
 801b220:	931c      	str	r3, [sp, #112]	@ 0x70
 801b222:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801b224:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 801b226:	3b01      	subs	r3, #1
 801b228:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801b22c:	930a      	str	r3, [sp, #40]	@ 0x28
 801b22e:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801b230:	bf08      	it	eq
 801b232:	4613      	moveq	r3, r2
 801b234:	ee16 5a90 	vmov	r5, s13
 801b238:	9306      	str	r3, [sp, #24]
 801b23a:	eeb0 3a67 	vmov.f32	s6, s15
 801b23e:	eef0 2a47 	vmov.f32	s5, s14
 801b242:	e6d2      	b.n	801afea <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 801b244:	b149      	cbz	r1, 801b25a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 801b246:	5cba      	ldrb	r2, [r7, r2]
 801b248:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801b24c:	4422      	add	r2, r4
 801b24e:	4660      	mov	r0, ip
 801b250:	4666      	mov	r6, ip
 801b252:	e734      	b.n	801b0be <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 801b254:	4660      	mov	r0, ip
 801b256:	4662      	mov	r2, ip
 801b258:	e731      	b.n	801b0be <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 801b25a:	4660      	mov	r0, ip
 801b25c:	4662      	mov	r2, ip
 801b25e:	e7f7      	b.n	801b250 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x298>
 801b260:	f110 0c01 	adds.w	ip, r0, #1
 801b264:	f53f af74 	bmi.w	801b150 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801b268:	4562      	cmp	r2, ip
 801b26a:	f6ff af71 	blt.w	801b150 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801b26e:	f116 0c01 	adds.w	ip, r6, #1
 801b272:	f53f af6d 	bmi.w	801b150 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801b276:	4567      	cmp	r7, ip
 801b278:	f6ff af6a 	blt.w	801b150 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801b27c:	b23f      	sxth	r7, r7
 801b27e:	b212      	sxth	r2, r2
 801b280:	e9cd 3104 	strd	r3, r1, [sp, #16]
 801b284:	e9cd 0602 	strd	r0, r6, [sp, #8]
 801b288:	9200      	str	r2, [sp, #0]
 801b28a:	9701      	str	r7, [sp, #4]
 801b28c:	4623      	mov	r3, r4
 801b28e:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 801b292:	980d      	ldr	r0, [sp, #52]	@ 0x34
 801b294:	f7ff fde6 	bl	801ae64 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>
 801b298:	e75a      	b.n	801b150 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801b29a:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 801b29c:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 801b2a0:	ea4f 462b 	mov.w	r6, fp, asr #16
 801b2a4:	1428      	asrs	r0, r5, #16
 801b2a6:	fb02 6000 	mla	r0, r2, r0, r6
 801b2aa:	9e08      	ldr	r6, [sp, #32]
 801b2ac:	f816 8000 	ldrb.w	r8, [r6, r0]
 801b2b0:	f3cb 3303 	ubfx	r3, fp, #12, #4
 801b2b4:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 801b2b8:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801b2bc:	1837      	adds	r7, r6, r0
 801b2be:	eb04 0c08 	add.w	ip, r4, r8
 801b2c2:	2b00      	cmp	r3, #0
 801b2c4:	d060      	beq.n	801b388 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d0>
 801b2c6:	787e      	ldrb	r6, [r7, #1]
 801b2c8:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801b2cc:	4426      	add	r6, r4
 801b2ce:	2900      	cmp	r1, #0
 801b2d0:	d062      	beq.n	801b398 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e0>
 801b2d2:	18b8      	adds	r0, r7, r2
 801b2d4:	5cba      	ldrb	r2, [r7, r2]
 801b2d6:	7840      	ldrb	r0, [r0, #1]
 801b2d8:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801b2dc:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801b2e0:	4422      	add	r2, r4
 801b2e2:	4420      	add	r0, r4
 801b2e4:	b29b      	uxth	r3, r3
 801b2e6:	b289      	uxth	r1, r1
 801b2e8:	fb03 f901 	mul.w	r9, r3, r1
 801b2ec:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801b2f0:	011b      	lsls	r3, r3, #4
 801b2f2:	b289      	uxth	r1, r1
 801b2f4:	78b7      	ldrb	r7, [r6, #2]
 801b2f6:	f89c a002 	ldrb.w	sl, [ip, #2]
 801b2fa:	f89c c001 	ldrb.w	ip, [ip, #1]
 801b2fe:	f5c3 7e80 	rsb	lr, r3, #256	@ 0x100
 801b302:	eba3 0309 	sub.w	r3, r3, r9
 801b306:	b29b      	uxth	r3, r3
 801b308:	ebae 0e01 	sub.w	lr, lr, r1
 801b30c:	fa1f fe8e 	uxth.w	lr, lr
 801b310:	435f      	muls	r7, r3
 801b312:	fb0e 770a 	mla	r7, lr, sl, r7
 801b316:	f892 a002 	ldrb.w	sl, [r2, #2]
 801b31a:	fb01 770a 	mla	r7, r1, sl, r7
 801b31e:	f890 a002 	ldrb.w	sl, [r0, #2]
 801b322:	fb09 7a0a 	mla	sl, r9, sl, r7
 801b326:	f814 7008 	ldrb.w	r7, [r4, r8]
 801b32a:	f896 8000 	ldrb.w	r8, [r6]
 801b32e:	7876      	ldrb	r6, [r6, #1]
 801b330:	fb03 f808 	mul.w	r8, r3, r8
 801b334:	fb0e 8807 	mla	r8, lr, r7, r8
 801b338:	7817      	ldrb	r7, [r2, #0]
 801b33a:	fb01 8807 	mla	r8, r1, r7, r8
 801b33e:	7807      	ldrb	r7, [r0, #0]
 801b340:	fb09 8707 	mla	r7, r9, r7, r8
 801b344:	f40a 4a78 	and.w	sl, sl, #63488	@ 0xf800
 801b348:	4373      	muls	r3, r6
 801b34a:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801b34e:	7856      	ldrb	r6, [r2, #1]
 801b350:	ea47 070a 	orr.w	r7, r7, sl
 801b354:	fb0e 330c 	mla	r3, lr, ip, r3
 801b358:	f890 a001 	ldrb.w	sl, [r0, #1]
 801b35c:	fb01 3306 	mla	r3, r1, r6, r3
 801b360:	fb09 3a0a 	mla	sl, r9, sl, r3
 801b364:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801b368:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801b36a:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 801b36e:	ea47 070a 	orr.w	r7, r7, sl
 801b372:	f823 7b02 	strh.w	r7, [r3], #2
 801b376:	930b      	str	r3, [sp, #44]	@ 0x2c
 801b378:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 801b37a:	449b      	add	fp, r3
 801b37c:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801b37e:	441d      	add	r5, r3
 801b380:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801b382:	3b01      	subs	r3, #1
 801b384:	9309      	str	r3, [sp, #36]	@ 0x24
 801b386:	e714      	b.n	801b1b2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 801b388:	b149      	cbz	r1, 801b39e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 801b38a:	5cba      	ldrb	r2, [r7, r2]
 801b38c:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801b390:	4422      	add	r2, r4
 801b392:	4660      	mov	r0, ip
 801b394:	4666      	mov	r6, ip
 801b396:	e7a5      	b.n	801b2e4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 801b398:	4660      	mov	r0, ip
 801b39a:	4662      	mov	r2, ip
 801b39c:	e7a2      	b.n	801b2e4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 801b39e:	4660      	mov	r0, ip
 801b3a0:	4662      	mov	r2, ip
 801b3a2:	e7f7      	b.n	801b394 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3dc>
 801b3a4:	b00f      	add	sp, #60	@ 0x3c
 801b3a6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801b3aa <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>:
 801b3aa:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b3ae:	b085      	sub	sp, #20
 801b3b0:	e9dd 7410 	ldrd	r7, r4, [sp, #64]	@ 0x40
 801b3b4:	f9bd c038 	ldrsh.w	ip, [sp, #56]	@ 0x38
 801b3b8:	9102      	str	r1, [sp, #8]
 801b3ba:	2c00      	cmp	r4, #0
 801b3bc:	fb04 710c 	mla	r1, r4, ip, r7
 801b3c0:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	@ 0x3c
 801b3c4:	f89d 6048 	ldrb.w	r6, [sp, #72]	@ 0x48
 801b3c8:	f89d 004c 	ldrb.w	r0, [sp, #76]	@ 0x4c
 801b3cc:	eb02 0e01 	add.w	lr, r2, r1
 801b3d0:	f2c0 8122 	blt.w	801b618 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 801b3d4:	45a0      	cmp	r8, r4
 801b3d6:	f340 811f 	ble.w	801b618 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 801b3da:	2f00      	cmp	r7, #0
 801b3dc:	f2c0 811a 	blt.w	801b614 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 801b3e0:	45bc      	cmp	ip, r7
 801b3e2:	f340 8117 	ble.w	801b614 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 801b3e6:	5c52      	ldrb	r2, [r2, r1]
 801b3e8:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 801b3ec:	1c7a      	adds	r2, r7, #1
 801b3ee:	f100 8116 	bmi.w	801b61e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 801b3f2:	4594      	cmp	ip, r2
 801b3f4:	f340 8113 	ble.w	801b61e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 801b3f8:	2e00      	cmp	r6, #0
 801b3fa:	f000 8112 	beq.w	801b622 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x278>
 801b3fe:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801b402:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 801b406:	3401      	adds	r4, #1
 801b408:	f100 810f 	bmi.w	801b62a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 801b40c:	45a0      	cmp	r8, r4
 801b40e:	f340 810c 	ble.w	801b62a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 801b412:	2800      	cmp	r0, #0
 801b414:	f000 810c 	beq.w	801b630 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x286>
 801b418:	2f00      	cmp	r7, #0
 801b41a:	f2c0 8104 	blt.w	801b626 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 801b41e:	45bc      	cmp	ip, r7
 801b420:	f340 8101 	ble.w	801b626 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 801b424:	f81e 200c 	ldrb.w	r2, [lr, ip]
 801b428:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
 801b42c:	3701      	adds	r7, #1
 801b42e:	f100 8102 	bmi.w	801b636 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 801b432:	45bc      	cmp	ip, r7
 801b434:	f340 80ff 	ble.w	801b636 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 801b438:	2e00      	cmp	r6, #0
 801b43a:	f000 80fe 	beq.w	801b63a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x290>
 801b43e:	44f4      	add	ip, lr
 801b440:	f89c 2001 	ldrb.w	r2, [ip, #1]
 801b444:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 801b448:	b2b6      	uxth	r6, r6
 801b44a:	b280      	uxth	r0, r0
 801b44c:	fb00 fe06 	mul.w	lr, r0, r6
 801b450:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 801b454:	0136      	lsls	r6, r6, #4
 801b456:	eba6 070e 	sub.w	r7, r6, lr
 801b45a:	b280      	uxth	r0, r0
 801b45c:	f5c6 7380 	rsb	r3, r6, #256	@ 0x100
 801b460:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 801b464:	b2bf      	uxth	r7, r7
 801b466:	1a1b      	subs	r3, r3, r0
 801b468:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 801b46c:	b29b      	uxth	r3, r3
 801b46e:	fb0a f607 	mul.w	r6, sl, r7
 801b472:	ea4f 6914 	mov.w	r9, r4, lsr #24
 801b476:	fb0b 6603 	mla	r6, fp, r3, r6
 801b47a:	ea4f 6812 	mov.w	r8, r2, lsr #24
 801b47e:	fb00 6609 	mla	r6, r0, r9, r6
 801b482:	fb0e 6608 	mla	r6, lr, r8, r6
 801b486:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801b48a:	9600      	str	r6, [sp, #0]
 801b48c:	2e00      	cmp	r6, #0
 801b48e:	f000 80be 	beq.w	801b60e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x264>
 801b492:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 801b496:	fb0b fc0c 	mul.w	ip, fp, ip
 801b49a:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
 801b49e:	fb0b f505 	mul.w	r5, fp, r5
 801b4a2:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 801b4a6:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
 801b4aa:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801b4ae:	44dc      	add	ip, fp
 801b4b0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b4b4:	9501      	str	r5, [sp, #4]
 801b4b6:	f00c 15ff 	and.w	r5, ip, #16711935	@ 0xff00ff
 801b4ba:	9503      	str	r5, [sp, #12]
 801b4bc:	9d01      	ldr	r5, [sp, #4]
 801b4be:	9e02      	ldr	r6, [sp, #8]
 801b4c0:	f505 7c80 	add.w	ip, r5, #256	@ 0x100
 801b4c4:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801b4c8:	f001 1cff 	and.w	ip, r1, #16711935	@ 0xff00ff
 801b4cc:	fb0a fc0c 	mul.w	ip, sl, ip
 801b4d0:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 801b4d4:	ea4f 251c 	mov.w	r5, ip, lsr #8
 801b4d8:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 801b4dc:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801b4e0:	4465      	add	r5, ip
 801b4e2:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 801b4e6:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
 801b4ea:	fb09 fc0c 	mul.w	ip, r9, ip
 801b4ee:	fb09 f904 	mul.w	r9, r9, r4
 801b4f2:	f509 7480 	add.w	r4, r9, #256	@ 0x100
 801b4f6:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 801b4fa:	f002 14ff 	and.w	r4, r2, #16711935	@ 0xff00ff
 801b4fe:	fb08 f404 	mul.w	r4, r8, r4
 801b502:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 801b506:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 801b50a:	fb08 f802 	mul.w	r8, r8, r2
 801b50e:	fb0a fa01 	mul.w	sl, sl, r1
 801b512:	0a22      	lsrs	r2, r4, #8
 801b514:	f50a 7180 	add.w	r1, sl, #256	@ 0x100
 801b518:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 801b51c:	f104 1401 	add.w	r4, r4, #65537	@ 0x10001
 801b520:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 801b524:	4414      	add	r4, r2
 801b526:	ea4f 211c 	mov.w	r1, ip, lsr #8
 801b52a:	f508 7280 	add.w	r2, r8, #256	@ 0x100
 801b52e:	0a2d      	lsrs	r5, r5, #8
 801b530:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 801b534:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 801b538:	9a03      	ldr	r2, [sp, #12]
 801b53a:	8836      	ldrh	r6, [r6, #0]
 801b53c:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 801b540:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801b544:	437d      	muls	r5, r7
 801b546:	4461      	add	r1, ip
 801b548:	0a24      	lsrs	r4, r4, #8
 801b54a:	fb02 5503 	mla	r5, r2, r3, r5
 801b54e:	0a09      	lsrs	r1, r1, #8
 801b550:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
 801b554:	fb04 540e 	mla	r4, r4, lr, r5
 801b558:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 801b55c:	fb01 4100 	mla	r1, r1, r0, r4
 801b560:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b564:	0a09      	lsrs	r1, r1, #8
 801b566:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801b56a:	f001 14ff 	and.w	r4, r1, #16711935	@ 0xff00ff
 801b56e:	fb07 f70a 	mul.w	r7, r7, sl
 801b572:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801b576:	f40b 417f 	and.w	r1, fp, #65280	@ 0xff00
 801b57a:	fb03 7101 	mla	r1, r3, r1, r7
 801b57e:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801b582:	f408 487f 	and.w	r8, r8, #65280	@ 0xff00
 801b586:	fb0e 1e08 	mla	lr, lr, r8, r1
 801b58a:	f409 417f 	and.w	r1, r9, #65280	@ 0xff00
 801b58e:	fb00 e101 	mla	r1, r0, r1, lr
 801b592:	f89d 0050 	ldrb.w	r0, [sp, #80]	@ 0x50
 801b596:	9a00      	ldr	r2, [sp, #0]
 801b598:	b287      	uxth	r7, r0
 801b59a:	437a      	muls	r2, r7
 801b59c:	0a09      	lsrs	r1, r1, #8
 801b59e:	1c53      	adds	r3, r2, #1
 801b5a0:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 801b5a4:	4321      	orrs	r1, r4
 801b5a6:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801b5aa:	1235      	asrs	r5, r6, #8
 801b5ac:	0c0a      	lsrs	r2, r1, #16
 801b5ae:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 801b5b2:	b2db      	uxtb	r3, r3
 801b5b4:	fb12 f207 	smulbb	r2, r2, r7
 801b5b8:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 801b5bc:	fb05 2503 	mla	r5, r5, r3, r2
 801b5c0:	f3c1 2407 	ubfx	r4, r1, #8, #8
 801b5c4:	10f2      	asrs	r2, r6, #3
 801b5c6:	b2c8      	uxtb	r0, r1
 801b5c8:	00f6      	lsls	r6, r6, #3
 801b5ca:	fb14 f407 	smulbb	r4, r4, r7
 801b5ce:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 801b5d2:	b2f6      	uxtb	r6, r6
 801b5d4:	fb10 f007 	smulbb	r0, r0, r7
 801b5d8:	fb02 4203 	mla	r2, r2, r3, r4
 801b5dc:	b2ad      	uxth	r5, r5
 801b5de:	fb06 0303 	mla	r3, r6, r3, r0
 801b5e2:	b299      	uxth	r1, r3
 801b5e4:	b294      	uxth	r4, r2
 801b5e6:	1c6b      	adds	r3, r5, #1
 801b5e8:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801b5ec:	1c62      	adds	r2, r4, #1
 801b5ee:	1c4b      	adds	r3, r1, #1
 801b5f0:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801b5f4:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 801b5f8:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 801b5fc:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801b600:	0952      	lsrs	r2, r2, #5
 801b602:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801b606:	432b      	orrs	r3, r5
 801b608:	4313      	orrs	r3, r2
 801b60a:	9a02      	ldr	r2, [sp, #8]
 801b60c:	8013      	strh	r3, [r2, #0]
 801b60e:	b005      	add	sp, #20
 801b610:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b614:	2500      	movs	r5, #0
 801b616:	e6e9      	b.n	801b3ec <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x42>
 801b618:	2100      	movs	r1, #0
 801b61a:	460d      	mov	r5, r1
 801b61c:	e6f3      	b.n	801b406 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 801b61e:	2100      	movs	r1, #0
 801b620:	e6f1      	b.n	801b406 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 801b622:	4631      	mov	r1, r6
 801b624:	e6ef      	b.n	801b406 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 801b626:	2400      	movs	r4, #0
 801b628:	e700      	b.n	801b42c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x82>
 801b62a:	2200      	movs	r2, #0
 801b62c:	4614      	mov	r4, r2
 801b62e:	e70b      	b.n	801b448 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 801b630:	4602      	mov	r2, r0
 801b632:	4604      	mov	r4, r0
 801b634:	e708      	b.n	801b448 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 801b636:	2200      	movs	r2, #0
 801b638:	e706      	b.n	801b448 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 801b63a:	4632      	mov	r2, r6
 801b63c:	e704      	b.n	801b448 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>

0801b63e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801b63e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b642:	b09f      	sub	sp, #124	@ 0x7c
 801b644:	921b      	str	r2, [sp, #108]	@ 0x6c
 801b646:	9309      	str	r3, [sp, #36]	@ 0x24
 801b648:	9a2d      	ldr	r2, [sp, #180]	@ 0xb4
 801b64a:	f89d 30c4 	ldrb.w	r3, [sp, #196]	@ 0xc4
 801b64e:	931c      	str	r3, [sp, #112]	@ 0x70
 801b650:	9119      	str	r1, [sp, #100]	@ 0x64
 801b652:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	@ 0xb8
 801b656:	901d      	str	r0, [sp, #116]	@ 0x74
 801b658:	6850      	ldr	r0, [r2, #4]
 801b65a:	6812      	ldr	r2, [r2, #0]
 801b65c:	9d2a      	ldr	r5, [sp, #168]	@ 0xa8
 801b65e:	fb00 1303 	mla	r3, r0, r3, r1
 801b662:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801b666:	930c      	str	r3, [sp, #48]	@ 0x30
 801b668:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 801b66a:	681b      	ldr	r3, [r3, #0]
 801b66c:	9312      	str	r3, [sp, #72]	@ 0x48
 801b66e:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 801b670:	685e      	ldr	r6, [r3, #4]
 801b672:	f8bd 3070 	ldrh.w	r3, [sp, #112]	@ 0x70
 801b676:	930d      	str	r3, [sp, #52]	@ 0x34
 801b678:	3604      	adds	r6, #4
 801b67a:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 801b67c:	2b00      	cmp	r3, #0
 801b67e:	dc03      	bgt.n	801b688 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801b680:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 801b682:	2b00      	cmp	r3, #0
 801b684:	f340 8388 	ble.w	801bd98 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 801b688:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 801b68a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801b68e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801b692:	1e48      	subs	r0, r1, #1
 801b694:	1e57      	subs	r7, r2, #1
 801b696:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801b698:	2b00      	cmp	r3, #0
 801b69a:	f340 8195 	ble.w	801b9c8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801b69e:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
 801b6a0:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801b6a4:	ea4f 4325 	mov.w	r3, r5, asr #16
 801b6a8:	d406      	bmi.n	801b6b8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801b6aa:	4584      	cmp	ip, r0
 801b6ac:	da04      	bge.n	801b6b8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801b6ae:	2b00      	cmp	r3, #0
 801b6b0:	db02      	blt.n	801b6b8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801b6b2:	42bb      	cmp	r3, r7
 801b6b4:	f2c0 8189 	blt.w	801b9ca <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38c>
 801b6b8:	f11c 0c01 	adds.w	ip, ip, #1
 801b6bc:	f100 8177 	bmi.w	801b9ae <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801b6c0:	4561      	cmp	r1, ip
 801b6c2:	f2c0 8174 	blt.w	801b9ae <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801b6c6:	3301      	adds	r3, #1
 801b6c8:	f100 8171 	bmi.w	801b9ae <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801b6cc:	429a      	cmp	r2, r3
 801b6ce:	f2c0 816e 	blt.w	801b9ae <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801b6d2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801b6d4:	9f0c      	ldr	r7, [sp, #48]	@ 0x30
 801b6d6:	931a      	str	r3, [sp, #104]	@ 0x68
 801b6d8:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
 801b6da:	2b00      	cmp	r3, #0
 801b6dc:	f340 8193 	ble.w	801ba06 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c8>
 801b6e0:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 801b6e2:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801b6e6:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 801b6e8:	e9d3 0e02 	ldrd	r0, lr, [r3, #8]
 801b6ec:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 801b6ee:	141b      	asrs	r3, r3, #16
 801b6f0:	ea4f 4c25 	mov.w	ip, r5, asr #16
 801b6f4:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801b6f8:	f100 81d6 	bmi.w	801baa8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 801b6fc:	f100 38ff 	add.w	r8, r0, #4294967295
 801b700:	4543      	cmp	r3, r8
 801b702:	f280 81d1 	bge.w	801baa8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 801b706:	f1bc 0f00 	cmp.w	ip, #0
 801b70a:	f2c0 81cd 	blt.w	801baa8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 801b70e:	f10e 38ff 	add.w	r8, lr, #4294967295
 801b712:	45c4      	cmp	ip, r8
 801b714:	f280 81c8 	bge.w	801baa8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 801b718:	b200      	sxth	r0, r0
 801b71a:	fb0c 3300 	mla	r3, ip, r0, r3
 801b71e:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 801b720:	eb04 0803 	add.w	r8, r4, r3
 801b724:	5ce3      	ldrb	r3, [r4, r3]
 801b726:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801b72a:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 801b72e:	2a00      	cmp	r2, #0
 801b730:	f000 81af 	beq.w	801ba92 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 801b734:	f898 c001 	ldrb.w	ip, [r8, #1]
 801b738:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 801b73c:	940e      	str	r4, [sp, #56]	@ 0x38
 801b73e:	0e24      	lsrs	r4, r4, #24
 801b740:	9415      	str	r4, [sp, #84]	@ 0x54
 801b742:	b179      	cbz	r1, 801b764 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 801b744:	eb08 0c00 	add.w	ip, r8, r0
 801b748:	f818 0000 	ldrb.w	r0, [r8, r0]
 801b74c:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 801b750:	900a      	str	r0, [sp, #40]	@ 0x28
 801b752:	0e00      	lsrs	r0, r0, #24
 801b754:	9013      	str	r0, [sp, #76]	@ 0x4c
 801b756:	f89c 0001 	ldrb.w	r0, [ip, #1]
 801b75a:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 801b75e:	900f      	str	r0, [sp, #60]	@ 0x3c
 801b760:	0e00      	lsrs	r0, r0, #24
 801b762:	9016      	str	r0, [sp, #88]	@ 0x58
 801b764:	b292      	uxth	r2, r2
 801b766:	b289      	uxth	r1, r1
 801b768:	fb02 f901 	mul.w	r9, r2, r1
 801b76c:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801b770:	0112      	lsls	r2, r2, #4
 801b772:	eba2 0809 	sub.w	r8, r2, r9
 801b776:	b289      	uxth	r1, r1
 801b778:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
 801b77c:	9815      	ldr	r0, [sp, #84]	@ 0x54
 801b77e:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801b780:	fa1f f888 	uxth.w	r8, r8
 801b784:	1a52      	subs	r2, r2, r1
 801b786:	b292      	uxth	r2, r2
 801b788:	fb08 f000 	mul.w	r0, r8, r0
 801b78c:	fb02 000e 	mla	r0, r2, lr, r0
 801b790:	fb01 0004 	mla	r0, r1, r4, r0
 801b794:	9c16      	ldr	r4, [sp, #88]	@ 0x58
 801b796:	fb09 0004 	mla	r0, r9, r4, r0
 801b79a:	f3c0 2007 	ubfx	r0, r0, #8, #8
 801b79e:	2800      	cmp	r0, #0
 801b7a0:	f000 80fa 	beq.w	801b998 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801b7a4:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
 801b7a8:	d01b      	beq.n	801b7e2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801b7aa:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 801b7ae:	fb0e fa0a 	mul.w	sl, lr, sl
 801b7b2:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801b7b6:	fb0e fe03 	mul.w	lr, lr, r3
 801b7ba:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801b7be:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801b7c2:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 801b7c6:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
 801b7ca:	4453      	add	r3, sl
 801b7cc:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801b7d0:	0a1b      	lsrs	r3, r3, #8
 801b7d2:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b7d6:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801b7da:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 801b7de:	ea43 030c 	orr.w	r3, r3, ip
 801b7e2:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 801b7e4:	2cff      	cmp	r4, #255	@ 0xff
 801b7e6:	d021      	beq.n	801b82c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801b7e8:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801b7ea:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 801b7ee:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 801b7f0:	fb04 fb0b 	mul.w	fp, r4, fp
 801b7f4:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801b7f6:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801b7fa:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 801b7fc:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801b800:	fb04 fa0a 	mul.w	sl, r4, sl
 801b804:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801b808:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801b80c:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801b810:	44de      	add	lr, fp
 801b812:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801b816:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801b81a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b81e:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801b822:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801b826:	ea4e 040a 	orr.w	r4, lr, sl
 801b82a:	940e      	str	r4, [sp, #56]	@ 0x38
 801b82c:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801b82e:	2cff      	cmp	r4, #255	@ 0xff
 801b830:	d021      	beq.n	801b876 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 801b832:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 801b834:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 801b838:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801b83a:	fb04 fb0b 	mul.w	fp, r4, fp
 801b83e:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 801b840:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801b844:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801b846:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801b84a:	fb04 fa0a 	mul.w	sl, r4, sl
 801b84e:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801b852:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801b856:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801b85a:	44de      	add	lr, fp
 801b85c:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801b860:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801b864:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b868:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801b86c:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801b870:	ea4e 040a 	orr.w	r4, lr, sl
 801b874:	940a      	str	r4, [sp, #40]	@ 0x28
 801b876:	9c16      	ldr	r4, [sp, #88]	@ 0x58
 801b878:	2cff      	cmp	r4, #255	@ 0xff
 801b87a:	d021      	beq.n	801b8c0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 801b87c:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 801b87e:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 801b882:	9c16      	ldr	r4, [sp, #88]	@ 0x58
 801b884:	fb04 fb0b 	mul.w	fp, r4, fp
 801b888:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 801b88a:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801b88e:	9c16      	ldr	r4, [sp, #88]	@ 0x58
 801b890:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801b894:	fb04 fa0a 	mul.w	sl, r4, sl
 801b898:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801b89c:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801b8a0:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801b8a4:	44de      	add	lr, fp
 801b8a6:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801b8aa:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801b8ae:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b8b2:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801b8b6:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801b8ba:	ea4e 040a 	orr.w	r4, lr, sl
 801b8be:	940f      	str	r4, [sp, #60]	@ 0x3c
 801b8c0:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801b8c2:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 801b8c6:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 801b8c8:	f003 1eff 	and.w	lr, r3, #16711935	@ 0xff00ff
 801b8cc:	fb08 fc0c 	mul.w	ip, r8, ip
 801b8d0:	fb02 cc0e 	mla	ip, r2, lr, ip
 801b8d4:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
 801b8d8:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 801b8da:	fb01 cc0e 	mla	ip, r1, lr, ip
 801b8de:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
 801b8e2:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801b8e4:	fb09 cc0e 	mla	ip, r9, lr, ip
 801b8e8:	f404 4e7f 	and.w	lr, r4, #65280	@ 0xff00
 801b8ec:	fb08 f80e 	mul.w	r8, r8, lr
 801b8f0:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801b8f4:	fb02 8303 	mla	r3, r2, r3, r8
 801b8f8:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 801b8fa:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801b8fc:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
 801b900:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801b902:	fb01 330a 	mla	r3, r1, sl, r3
 801b906:	f402 417f 	and.w	r1, r2, #65280	@ 0xff00
 801b90a:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 801b90c:	fb09 3901 	mla	r9, r9, r1, r3
 801b910:	4342      	muls	r2, r0
 801b912:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b916:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801b91a:	883b      	ldrh	r3, [r7, #0]
 801b91c:	1c50      	adds	r0, r2, #1
 801b91e:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801b922:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
 801b926:	ea4c 0c09 	orr.w	ip, ip, r9
 801b92a:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 801b92e:	1219      	asrs	r1, r3, #8
 801b930:	ea4f 421c 	mov.w	r2, ip, lsr #16
 801b934:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 801b938:	b2c0      	uxtb	r0, r0
 801b93a:	fb12 f204 	smulbb	r2, r2, r4
 801b93e:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 801b942:	fb01 2100 	mla	r1, r1, r0, r2
 801b946:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 801b94a:	10da      	asrs	r2, r3, #3
 801b94c:	fa5f fc8c 	uxtb.w	ip, ip
 801b950:	00db      	lsls	r3, r3, #3
 801b952:	fb1c fc04 	smulbb	ip, ip, r4
 801b956:	b2db      	uxtb	r3, r3
 801b958:	b289      	uxth	r1, r1
 801b95a:	fb03 c300 	mla	r3, r3, r0, ip
 801b95e:	fa1f fc83 	uxth.w	ip, r3
 801b962:	1c4b      	adds	r3, r1, #1
 801b964:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801b968:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 801b96c:	fb1e fe04 	smulbb	lr, lr, r4
 801b970:	f10c 0301 	add.w	r3, ip, #1
 801b974:	fb02 e200 	mla	r2, r2, r0, lr
 801b978:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 801b97c:	b292      	uxth	r2, r2
 801b97e:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
 801b982:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801b986:	430b      	orrs	r3, r1
 801b988:	1c51      	adds	r1, r2, #1
 801b98a:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801b98e:	0952      	lsrs	r2, r2, #5
 801b990:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801b994:	4313      	orrs	r3, r2
 801b996:	803b      	strh	r3, [r7, #0]
 801b998:	9b2b      	ldr	r3, [sp, #172]	@ 0xac
 801b99a:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 801b99c:	441a      	add	r2, r3
 801b99e:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801b9a0:	9229      	str	r2, [sp, #164]	@ 0xa4
 801b9a2:	441d      	add	r5, r3
 801b9a4:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
 801b9a6:	3b01      	subs	r3, #1
 801b9a8:	3702      	adds	r7, #2
 801b9aa:	931a      	str	r3, [sp, #104]	@ 0x68
 801b9ac:	e694      	b.n	801b6d8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801b9ae:	9b2b      	ldr	r3, [sp, #172]	@ 0xac
 801b9b0:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
 801b9b2:	441c      	add	r4, r3
 801b9b4:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801b9b6:	9429      	str	r4, [sp, #164]	@ 0xa4
 801b9b8:	441d      	add	r5, r3
 801b9ba:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801b9bc:	3b01      	subs	r3, #1
 801b9be:	9309      	str	r3, [sp, #36]	@ 0x24
 801b9c0:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801b9c2:	3302      	adds	r3, #2
 801b9c4:	930c      	str	r3, [sp, #48]	@ 0x30
 801b9c6:	e666      	b.n	801b696 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801b9c8:	d024      	beq.n	801ba14 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d6>
 801b9ca:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801b9cc:	982b      	ldr	r0, [sp, #172]	@ 0xac
 801b9ce:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
 801b9d0:	3b01      	subs	r3, #1
 801b9d2:	fb00 4003 	mla	r0, r0, r3, r4
 801b9d6:	1400      	asrs	r0, r0, #16
 801b9d8:	f53f ae7b 	bmi.w	801b6d2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801b9dc:	3901      	subs	r1, #1
 801b9de:	4288      	cmp	r0, r1
 801b9e0:	f6bf ae77 	bge.w	801b6d2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801b9e4:	992c      	ldr	r1, [sp, #176]	@ 0xb0
 801b9e6:	fb01 5303 	mla	r3, r1, r3, r5
 801b9ea:	141b      	asrs	r3, r3, #16
 801b9ec:	f53f ae71 	bmi.w	801b6d2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801b9f0:	3a01      	subs	r2, #1
 801b9f2:	4293      	cmp	r3, r2
 801b9f4:	f6bf ae6d 	bge.w	801b6d2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801b9f8:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
 801b9fc:	f8dd 9030 	ldr.w	r9, [sp, #48]	@ 0x30
 801ba00:	f1bb 0f00 	cmp.w	fp, #0
 801ba04:	dc70      	bgt.n	801bae8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4aa>
 801ba06:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801ba08:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801ba0c:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801ba0e:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801ba12:	930c      	str	r3, [sp, #48]	@ 0x30
 801ba14:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 801ba16:	2b00      	cmp	r3, #0
 801ba18:	f340 81be 	ble.w	801bd98 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 801ba1c:	ee30 0a04 	vadd.f32	s0, s0, s8
 801ba20:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801ba24:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801ba28:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801ba2a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801ba2e:	ee31 1a05 	vadd.f32	s2, s2, s10
 801ba32:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801ba36:	eef0 6a62 	vmov.f32	s13, s5
 801ba3a:	ee61 7a27 	vmul.f32	s15, s2, s15
 801ba3e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801ba42:	ee77 2a62 	vsub.f32	s5, s14, s5
 801ba46:	edcd 6a29 	vstr	s13, [sp, #164]	@ 0xa4
 801ba4a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801ba4e:	eef0 6a43 	vmov.f32	s13, s6
 801ba52:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801ba56:	ee12 2a90 	vmov	r2, s5
 801ba5a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801ba5e:	fb92 f3f3 	sdiv	r3, r2, r3
 801ba62:	ee13 2a10 	vmov	r2, s6
 801ba66:	932b      	str	r3, [sp, #172]	@ 0xac
 801ba68:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801ba6a:	fb92 f3f3 	sdiv	r3, r2, r3
 801ba6e:	932c      	str	r3, [sp, #176]	@ 0xb0
 801ba70:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 801ba72:	9a1b      	ldr	r2, [sp, #108]	@ 0x6c
 801ba74:	3b01      	subs	r3, #1
 801ba76:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801ba7a:	9319      	str	r3, [sp, #100]	@ 0x64
 801ba7c:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801ba7e:	bf08      	it	eq
 801ba80:	4613      	moveq	r3, r2
 801ba82:	ee16 5a90 	vmov	r5, s13
 801ba86:	9309      	str	r3, [sp, #36]	@ 0x24
 801ba88:	eeb0 3a67 	vmov.f32	s6, s15
 801ba8c:	eef0 2a47 	vmov.f32	s5, s14
 801ba90:	e5f3      	b.n	801b67a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801ba92:	2900      	cmp	r1, #0
 801ba94:	f43f ae66 	beq.w	801b764 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 801ba98:	f818 0000 	ldrb.w	r0, [r8, r0]
 801ba9c:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 801baa0:	900a      	str	r0, [sp, #40]	@ 0x28
 801baa2:	0e00      	lsrs	r0, r0, #24
 801baa4:	9013      	str	r0, [sp, #76]	@ 0x4c
 801baa6:	e65d      	b.n	801b764 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 801baa8:	f113 0801 	adds.w	r8, r3, #1
 801baac:	f53f af74 	bmi.w	801b998 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801bab0:	4540      	cmp	r0, r8
 801bab2:	f6ff af71 	blt.w	801b998 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801bab6:	f11c 0801 	adds.w	r8, ip, #1
 801baba:	f53f af6d 	bmi.w	801b998 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801babe:	45c6      	cmp	lr, r8
 801bac0:	f6ff af6a 	blt.w	801b998 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801bac4:	9c1c      	ldr	r4, [sp, #112]	@ 0x70
 801bac6:	9302      	str	r3, [sp, #8]
 801bac8:	b200      	sxth	r0, r0
 801baca:	fa0f f38e 	sxth.w	r3, lr
 801bace:	e9cd 1405 	strd	r1, r4, [sp, #20]
 801bad2:	e9cd c203 	strd	ip, r2, [sp, #12]
 801bad6:	9301      	str	r3, [sp, #4]
 801bad8:	9000      	str	r0, [sp, #0]
 801bada:	4633      	mov	r3, r6
 801badc:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 801bade:	981d      	ldr	r0, [sp, #116]	@ 0x74
 801bae0:	4639      	mov	r1, r7
 801bae2:	f7ff fc62 	bl	801b3aa <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>
 801bae6:	e757      	b.n	801b998 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801bae8:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 801baea:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
 801baec:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801baf0:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 801baf2:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801baf6:	1427      	asrs	r7, r4, #16
 801baf8:	142b      	asrs	r3, r5, #16
 801bafa:	fb01 7303 	mla	r3, r1, r3, r7
 801bafe:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 801bb00:	18e7      	adds	r7, r4, r3
 801bb02:	5ce3      	ldrb	r3, [r4, r3]
 801bb04:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801bb08:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801bb0c:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801bb10:	2a00      	cmp	r2, #0
 801bb12:	f000 8137 	beq.w	801bd84 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 801bb16:	f897 e001 	ldrb.w	lr, [r7, #1]
 801bb1a:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 801bb1e:	9410      	str	r4, [sp, #64]	@ 0x40
 801bb20:	0e24      	lsrs	r4, r4, #24
 801bb22:	9417      	str	r4, [sp, #92]	@ 0x5c
 801bb24:	b170      	cbz	r0, 801bb44 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 801bb26:	eb07 0e01 	add.w	lr, r7, r1
 801bb2a:	5c79      	ldrb	r1, [r7, r1]
 801bb2c:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801bb30:	910b      	str	r1, [sp, #44]	@ 0x2c
 801bb32:	0e09      	lsrs	r1, r1, #24
 801bb34:	9114      	str	r1, [sp, #80]	@ 0x50
 801bb36:	f89e 1001 	ldrb.w	r1, [lr, #1]
 801bb3a:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801bb3e:	9111      	str	r1, [sp, #68]	@ 0x44
 801bb40:	0e09      	lsrs	r1, r1, #24
 801bb42:	9118      	str	r1, [sp, #96]	@ 0x60
 801bb44:	b292      	uxth	r2, r2
 801bb46:	b280      	uxth	r0, r0
 801bb48:	fb02 f800 	mul.w	r8, r2, r0
 801bb4c:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 801bb50:	0112      	lsls	r2, r2, #4
 801bb52:	eba2 0e08 	sub.w	lr, r2, r8
 801bb56:	b280      	uxth	r0, r0
 801bb58:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
 801bb5c:	9917      	ldr	r1, [sp, #92]	@ 0x5c
 801bb5e:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801bb60:	fa1f fe8e 	uxth.w	lr, lr
 801bb64:	1a12      	subs	r2, r2, r0
 801bb66:	b292      	uxth	r2, r2
 801bb68:	fb0e f101 	mul.w	r1, lr, r1
 801bb6c:	fb02 110c 	mla	r1, r2, ip, r1
 801bb70:	fb00 1104 	mla	r1, r0, r4, r1
 801bb74:	9c18      	ldr	r4, [sp, #96]	@ 0x60
 801bb76:	fb08 1104 	mla	r1, r8, r4, r1
 801bb7a:	f3c1 2107 	ubfx	r1, r1, #8, #8
 801bb7e:	2900      	cmp	r1, #0
 801bb80:	f000 80f5 	beq.w	801bd6e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 801bb84:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
 801bb88:	d019      	beq.n	801bbbe <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x580>
 801bb8a:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 801bb8e:	fb0c fa0a 	mul.w	sl, ip, sl
 801bb92:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801bb96:	fb0c fc03 	mul.w	ip, ip, r3
 801bb9a:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801bb9e:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801bba2:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 801bba6:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
 801bbaa:	4453      	add	r3, sl
 801bbac:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801bbb0:	0a1b      	lsrs	r3, r3, #8
 801bbb2:	0a3f      	lsrs	r7, r7, #8
 801bbb4:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801bbb8:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 801bbbc:	433b      	orrs	r3, r7
 801bbbe:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
 801bbc0:	2cff      	cmp	r4, #255	@ 0xff
 801bbc2:	d020      	beq.n	801bc06 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c8>
 801bbc4:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801bbc6:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 801bbca:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
 801bbcc:	4367      	muls	r7, r4
 801bbce:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801bbd0:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801bbd4:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
 801bbd6:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801bbda:	fb04 fa0a 	mul.w	sl, r4, sl
 801bbde:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801bbe2:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801bbe6:	44bc      	add	ip, r7
 801bbe8:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801bbec:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801bbf0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801bbf4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801bbf8:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801bbfc:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801bc00:	ea4c 040a 	orr.w	r4, ip, sl
 801bc04:	9410      	str	r4, [sp, #64]	@ 0x40
 801bc06:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801bc08:	2cff      	cmp	r4, #255	@ 0xff
 801bc0a:	d020      	beq.n	801bc4e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x610>
 801bc0c:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801bc0e:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 801bc12:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801bc14:	4367      	muls	r7, r4
 801bc16:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801bc18:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801bc1c:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801bc1e:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801bc22:	fb04 fa0a 	mul.w	sl, r4, sl
 801bc26:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801bc2a:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801bc2e:	44bc      	add	ip, r7
 801bc30:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801bc34:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801bc38:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801bc3c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801bc40:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801bc44:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801bc48:	ea4c 040a 	orr.w	r4, ip, sl
 801bc4c:	940b      	str	r4, [sp, #44]	@ 0x2c
 801bc4e:	9c18      	ldr	r4, [sp, #96]	@ 0x60
 801bc50:	2cff      	cmp	r4, #255	@ 0xff
 801bc52:	d020      	beq.n	801bc96 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x658>
 801bc54:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 801bc56:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 801bc5a:	9c18      	ldr	r4, [sp, #96]	@ 0x60
 801bc5c:	4367      	muls	r7, r4
 801bc5e:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 801bc60:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801bc64:	9c18      	ldr	r4, [sp, #96]	@ 0x60
 801bc66:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801bc6a:	fb04 fa0a 	mul.w	sl, r4, sl
 801bc6e:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801bc72:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801bc76:	44bc      	add	ip, r7
 801bc78:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801bc7c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801bc80:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801bc84:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801bc88:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801bc8c:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801bc90:	ea4c 040a 	orr.w	r4, ip, sl
 801bc94:	9411      	str	r4, [sp, #68]	@ 0x44
 801bc96:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801bc98:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 801bc9c:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801bc9e:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
 801bca2:	fb0e f707 	mul.w	r7, lr, r7
 801bca6:	fb02 770c 	mla	r7, r2, ip, r7
 801bcaa:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 801bcae:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 801bcb0:	fb00 770c 	mla	r7, r0, ip, r7
 801bcb4:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 801bcb8:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801bcba:	fb08 770c 	mla	r7, r8, ip, r7
 801bcbe:	f404 4c7f 	and.w	ip, r4, #65280	@ 0xff00
 801bcc2:	fb0e fe0c 	mul.w	lr, lr, ip
 801bcc6:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801bcca:	fb02 e303 	mla	r3, r2, r3, lr
 801bcce:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 801bcd0:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801bcd2:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
 801bcd6:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 801bcd8:	fb00 330a 	mla	r3, r0, sl, r3
 801bcdc:	f402 4c7f 	and.w	ip, r2, #65280	@ 0xff00
 801bce0:	fb08 3c0c 	mla	ip, r8, ip, r3
 801bce4:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801bce6:	f8b9 0000 	ldrh.w	r0, [r9]
 801bcea:	434b      	muls	r3, r1
 801bcec:	0a3f      	lsrs	r7, r7, #8
 801bcee:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801bcf2:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 801bcf6:	1c59      	adds	r1, r3, #1
 801bcf8:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
 801bcfc:	ea47 070c 	orr.w	r7, r7, ip
 801bd00:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 801bd04:	1202      	asrs	r2, r0, #8
 801bd06:	0c3b      	lsrs	r3, r7, #16
 801bd08:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 801bd0c:	b2c9      	uxtb	r1, r1
 801bd0e:	fb13 f304 	smulbb	r3, r3, r4
 801bd12:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 801bd16:	fb02 3201 	mla	r2, r2, r1, r3
 801bd1a:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 801bd1e:	10c3      	asrs	r3, r0, #3
 801bd20:	b2ff      	uxtb	r7, r7
 801bd22:	00c0      	lsls	r0, r0, #3
 801bd24:	b292      	uxth	r2, r2
 801bd26:	fb1c fc04 	smulbb	ip, ip, r4
 801bd2a:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 801bd2e:	b2c0      	uxtb	r0, r0
 801bd30:	fb17 f704 	smulbb	r7, r7, r4
 801bd34:	fb03 c301 	mla	r3, r3, r1, ip
 801bd38:	fb00 7001 	mla	r0, r0, r1, r7
 801bd3c:	f102 0c01 	add.w	ip, r2, #1
 801bd40:	b280      	uxth	r0, r0
 801bd42:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 801bd46:	f402 4c78 	and.w	ip, r2, #63488	@ 0xf800
 801bd4a:	1c42      	adds	r2, r0, #1
 801bd4c:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 801bd50:	b29b      	uxth	r3, r3
 801bd52:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801bd56:	ea42 020c 	orr.w	r2, r2, ip
 801bd5a:	f103 0c01 	add.w	ip, r3, #1
 801bd5e:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 801bd62:	095b      	lsrs	r3, r3, #5
 801bd64:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801bd68:	431a      	orrs	r2, r3
 801bd6a:	f8a9 2000 	strh.w	r2, [r9]
 801bd6e:	9b2b      	ldr	r3, [sp, #172]	@ 0xac
 801bd70:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 801bd72:	441a      	add	r2, r3
 801bd74:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801bd76:	9229      	str	r2, [sp, #164]	@ 0xa4
 801bd78:	f109 0902 	add.w	r9, r9, #2
 801bd7c:	441d      	add	r5, r3
 801bd7e:	f10b 3bff 	add.w	fp, fp, #4294967295
 801bd82:	e63d      	b.n	801ba00 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 801bd84:	2800      	cmp	r0, #0
 801bd86:	f43f aedd 	beq.w	801bb44 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 801bd8a:	5c79      	ldrb	r1, [r7, r1]
 801bd8c:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801bd90:	910b      	str	r1, [sp, #44]	@ 0x2c
 801bd92:	0e09      	lsrs	r1, r1, #24
 801bd94:	9114      	str	r1, [sp, #80]	@ 0x50
 801bd96:	e6d5      	b.n	801bb44 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 801bd98:	b01f      	add	sp, #124	@ 0x7c
 801bd9a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801bd9e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>:
 801bd9e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801bda2:	b089      	sub	sp, #36	@ 0x24
 801bda4:	9101      	str	r1, [sp, #4]
 801bda6:	9801      	ldr	r0, [sp, #4]
 801bda8:	f9bd c048 	ldrsh.w	ip, [sp, #72]	@ 0x48
 801bdac:	8800      	ldrh	r0, [r0, #0]
 801bdae:	f9bd 804c 	ldrsh.w	r8, [sp, #76]	@ 0x4c
 801bdb2:	f89d 5058 	ldrb.w	r5, [sp, #88]	@ 0x58
 801bdb6:	f89d 405c 	ldrb.w	r4, [sp, #92]	@ 0x5c
 801bdba:	1206      	asrs	r6, r0, #8
 801bdbc:	e9dd 1714 	ldrd	r1, r7, [sp, #80]	@ 0x50
 801bdc0:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 801bdc4:	9602      	str	r6, [sp, #8]
 801bdc6:	10c6      	asrs	r6, r0, #3
 801bdc8:	00c0      	lsls	r0, r0, #3
 801bdca:	b2c0      	uxtb	r0, r0
 801bdcc:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 801bdd0:	9004      	str	r0, [sp, #16]
 801bdd2:	2f00      	cmp	r7, #0
 801bdd4:	fb07 100c 	mla	r0, r7, ip, r1
 801bdd8:	9603      	str	r6, [sp, #12]
 801bdda:	eb02 0e00 	add.w	lr, r2, r0
 801bdde:	f2c0 810a 	blt.w	801bff6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 801bde2:	45b8      	cmp	r8, r7
 801bde4:	f340 8107 	ble.w	801bff6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 801bde8:	2900      	cmp	r1, #0
 801bdea:	f2c0 8102 	blt.w	801bff2 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 801bdee:	458c      	cmp	ip, r1
 801bdf0:	f340 80ff 	ble.w	801bff2 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 801bdf4:	5c12      	ldrb	r2, [r2, r0]
 801bdf6:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 801bdfa:	1c4a      	adds	r2, r1, #1
 801bdfc:	f100 80fe 	bmi.w	801bffc <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 801be00:	4594      	cmp	ip, r2
 801be02:	f340 80fb 	ble.w	801bffc <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 801be06:	2d00      	cmp	r5, #0
 801be08:	f000 80fa 	beq.w	801c000 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x262>
 801be0c:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801be10:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 801be14:	3701      	adds	r7, #1
 801be16:	f100 80f7 	bmi.w	801c008 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 801be1a:	45b8      	cmp	r8, r7
 801be1c:	f340 80f4 	ble.w	801c008 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 801be20:	2c00      	cmp	r4, #0
 801be22:	f000 80f4 	beq.w	801c00e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x270>
 801be26:	2900      	cmp	r1, #0
 801be28:	eb0e 020c 	add.w	r2, lr, ip
 801be2c:	f2c0 80ea 	blt.w	801c004 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 801be30:	458c      	cmp	ip, r1
 801be32:	f340 80e7 	ble.w	801c004 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 801be36:	f81e 700c 	ldrb.w	r7, [lr, ip]
 801be3a:	f853 7027 	ldr.w	r7, [r3, r7, lsl #2]
 801be3e:	3101      	adds	r1, #1
 801be40:	f100 80e8 	bmi.w	801c014 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 801be44:	458c      	cmp	ip, r1
 801be46:	f340 80e5 	ble.w	801c014 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 801be4a:	2d00      	cmp	r5, #0
 801be4c:	f000 80e4 	beq.w	801c018 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x27a>
 801be50:	7852      	ldrb	r2, [r2, #1]
 801be52:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 801be56:	0e0b      	lsrs	r3, r1, #24
 801be58:	ea4f 6a10 	mov.w	sl, r0, lsr #24
 801be5c:	9300      	str	r3, [sp, #0]
 801be5e:	b2a4      	uxth	r4, r4
 801be60:	b2ab      	uxth	r3, r5
 801be62:	f000 15ff 	and.w	r5, r0, #16711935	@ 0xff00ff
 801be66:	fb03 f904 	mul.w	r9, r3, r4
 801be6a:	fb0a f505 	mul.w	r5, sl, r5
 801be6e:	011b      	lsls	r3, r3, #4
 801be70:	eba3 0e09 	sub.w	lr, r3, r9
 801be74:	f5c3 7280 	rsb	r2, r3, #256	@ 0x100
 801be78:	f400 437f 	and.w	r3, r0, #65280	@ 0xff00
 801be7c:	0a28      	lsrs	r0, r5, #8
 801be7e:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 801be82:	f105 1501 	add.w	r5, r5, #65537	@ 0x10001
 801be86:	4405      	add	r5, r0
 801be88:	0a2d      	lsrs	r5, r5, #8
 801be8a:	fb0a f303 	mul.w	r3, sl, r3
 801be8e:	f005 10ff 	and.w	r0, r5, #16711935	@ 0xff00ff
 801be92:	9005      	str	r0, [sp, #20]
 801be94:	f503 7080 	add.w	r0, r3, #256	@ 0x100
 801be98:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 801be9c:	0a1b      	lsrs	r3, r3, #8
 801be9e:	ea4f 6b16 	mov.w	fp, r6, lsr #24
 801bea2:	9306      	str	r3, [sp, #24]
 801bea4:	f006 13ff 	and.w	r3, r6, #16711935	@ 0xff00ff
 801bea8:	fb0b f303 	mul.w	r3, fp, r3
 801beac:	0a1d      	lsrs	r5, r3, #8
 801beae:	f406 467f 	and.w	r6, r6, #65280	@ 0xff00
 801beb2:	ea4f 6817 	mov.w	r8, r7, lsr #24
 801beb6:	fb0b f606 	mul.w	r6, fp, r6
 801beba:	f103 1301 	add.w	r3, r3, #65537	@ 0x10001
 801bebe:	f007 1cff 	and.w	ip, r7, #16711935	@ 0xff00ff
 801bec2:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 801bec6:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 801beca:	fb08 f707 	mul.w	r7, r8, r7
 801bece:	441d      	add	r5, r3
 801bed0:	f506 7380 	add.w	r3, r6, #256	@ 0x100
 801bed4:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 801bed8:	f507 7380 	add.w	r3, r7, #256	@ 0x100
 801bedc:	eb03 2317 	add.w	r3, r3, r7, lsr #8
 801bee0:	fb08 fc0c 	mul.w	ip, r8, ip
 801bee4:	0a1b      	lsrs	r3, r3, #8
 801bee6:	9307      	str	r3, [sp, #28]
 801bee8:	ea4f 201c 	mov.w	r0, ip, lsr #8
 801beec:	0e0b      	lsrs	r3, r1, #24
 801beee:	f001 17ff 	and.w	r7, r1, #16711935	@ 0xff00ff
 801bef2:	435f      	muls	r7, r3
 801bef4:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801bef8:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 801befc:	ebc9 1404 	rsb	r4, r9, r4, lsl #4
 801bf00:	4460      	add	r0, ip
 801bf02:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801bf06:	b2a4      	uxth	r4, r4
 801bf08:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801bf0c:	0a2d      	lsrs	r5, r5, #8
 801bf0e:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 801bf12:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801bf16:	fa1f fe8e 	uxth.w	lr, lr
 801bf1a:	4359      	muls	r1, r3
 801bf1c:	1b12      	subs	r2, r2, r4
 801bf1e:	9b05      	ldr	r3, [sp, #20]
 801bf20:	44bc      	add	ip, r7
 801bf22:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 801bf26:	b292      	uxth	r2, r2
 801bf28:	fb05 f50e 	mul.w	r5, r5, lr
 801bf2c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801bf30:	fb03 5502 	mla	r5, r3, r2, r5
 801bf34:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801bf38:	9b06      	ldr	r3, [sp, #24]
 801bf3a:	f501 7780 	add.w	r7, r1, #256	@ 0x100
 801bf3e:	0a36      	lsrs	r6, r6, #8
 801bf40:	0a00      	lsrs	r0, r0, #8
 801bf42:	fb0c 5509 	mla	r5, ip, r9, r5
 801bf46:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 801bf4a:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 801bf4e:	f406 467f 	and.w	r6, r6, #65280	@ 0xff00
 801bf52:	fb00 5504 	mla	r5, r0, r4, r5
 801bf56:	fb0e f606 	mul.w	r6, lr, r6
 801bf5a:	f403 407f 	and.w	r0, r3, #65280	@ 0xff00
 801bf5e:	0a09      	lsrs	r1, r1, #8
 801bf60:	9b07      	ldr	r3, [sp, #28]
 801bf62:	fb02 6000 	mla	r0, r2, r0, r6
 801bf66:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 801bf6a:	fb09 0001 	mla	r0, r9, r1, r0
 801bf6e:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801bf72:	fb0e fe0b 	mul.w	lr, lr, fp
 801bf76:	fb04 0003 	mla	r0, r4, r3, r0
 801bf7a:	fb02 e20a 	mla	r2, r2, sl, lr
 801bf7e:	9b00      	ldr	r3, [sp, #0]
 801bf80:	fb04 2408 	mla	r4, r4, r8, r2
 801bf84:	fb09 4903 	mla	r9, r9, r3, r4
 801bf88:	ea6f 2929 	mvn.w	r9, r9, asr #8
 801bf8c:	9b02      	ldr	r3, [sp, #8]
 801bf8e:	9a04      	ldr	r2, [sp, #16]
 801bf90:	fa5f f989 	uxtb.w	r9, r9
 801bf94:	fb03 f109 	mul.w	r1, r3, r9
 801bf98:	9b03      	ldr	r3, [sp, #12]
 801bf9a:	0a2d      	lsrs	r5, r5, #8
 801bf9c:	0a00      	lsrs	r0, r0, #8
 801bf9e:	fb03 f309 	mul.w	r3, r3, r9
 801bfa2:	f400 407f 	and.w	r0, r0, #65280	@ 0xff00
 801bfa6:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 801bfaa:	4305      	orrs	r5, r0
 801bfac:	fb02 f909 	mul.w	r9, r2, r9
 801bfb0:	1c58      	adds	r0, r3, #1
 801bfb2:	1c4a      	adds	r2, r1, #1
 801bfb4:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 801bfb8:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801bfbc:	0a2b      	lsrs	r3, r5, #8
 801bfbe:	0c2a      	lsrs	r2, r5, #16
 801bfc0:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801bfc4:	eb02 2211 	add.w	r2, r2, r1, lsr #8
 801bfc8:	00db      	lsls	r3, r3, #3
 801bfca:	0212      	lsls	r2, r2, #8
 801bfcc:	f402 4278 	and.w	r2, r2, #63488	@ 0xf800
 801bfd0:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801bfd4:	4313      	orrs	r3, r2
 801bfd6:	f109 0201 	add.w	r2, r9, #1
 801bfda:	eb02 2919 	add.w	r9, r2, r9, lsr #8
 801bfde:	eb05 2519 	add.w	r5, r5, r9, lsr #8
 801bfe2:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801bfe6:	431d      	orrs	r5, r3
 801bfe8:	9b01      	ldr	r3, [sp, #4]
 801bfea:	801d      	strh	r5, [r3, #0]
 801bfec:	b009      	add	sp, #36	@ 0x24
 801bfee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801bff2:	2000      	movs	r0, #0
 801bff4:	e701      	b.n	801bdfa <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x5c>
 801bff6:	2600      	movs	r6, #0
 801bff8:	4630      	mov	r0, r6
 801bffa:	e70b      	b.n	801be14 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 801bffc:	2600      	movs	r6, #0
 801bffe:	e709      	b.n	801be14 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 801c000:	462e      	mov	r6, r5
 801c002:	e707      	b.n	801be14 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 801c004:	2700      	movs	r7, #0
 801c006:	e71a      	b.n	801be3e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa0>
 801c008:	2100      	movs	r1, #0
 801c00a:	460f      	mov	r7, r1
 801c00c:	e723      	b.n	801be56 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 801c00e:	4621      	mov	r1, r4
 801c010:	4627      	mov	r7, r4
 801c012:	e720      	b.n	801be56 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 801c014:	2100      	movs	r1, #0
 801c016:	e71e      	b.n	801be56 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 801c018:	4629      	mov	r1, r5
 801c01a:	e71c      	b.n	801be56 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>

0801c01c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801c01c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c020:	b09b      	sub	sp, #108	@ 0x6c
 801c022:	9218      	str	r2, [sp, #96]	@ 0x60
 801c024:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 801c026:	9116      	str	r1, [sp, #88]	@ 0x58
 801c028:	9307      	str	r3, [sp, #28]
 801c02a:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	@ 0xa8
 801c02e:	9019      	str	r0, [sp, #100]	@ 0x64
 801c030:	6850      	ldr	r0, [r2, #4]
 801c032:	6812      	ldr	r2, [r2, #0]
 801c034:	9d26      	ldr	r5, [sp, #152]	@ 0x98
 801c036:	fb00 1303 	mla	r3, r0, r3, r1
 801c03a:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801c03e:	930a      	str	r3, [sp, #40]	@ 0x28
 801c040:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801c042:	681b      	ldr	r3, [r3, #0]
 801c044:	930f      	str	r3, [sp, #60]	@ 0x3c
 801c046:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801c048:	685e      	ldr	r6, [r3, #4]
 801c04a:	3604      	adds	r6, #4
 801c04c:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 801c04e:	2b00      	cmp	r3, #0
 801c050:	dc03      	bgt.n	801c05a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801c052:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801c054:	2b00      	cmp	r3, #0
 801c056:	f340 8373 	ble.w	801c740 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 801c05a:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801c05c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801c060:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801c064:	1e48      	subs	r0, r1, #1
 801c066:	1e57      	subs	r7, r2, #1
 801c068:	9b07      	ldr	r3, [sp, #28]
 801c06a:	2b00      	cmp	r3, #0
 801c06c:	f340 8190 	ble.w	801c390 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 801c070:	9c25      	ldr	r4, [sp, #148]	@ 0x94
 801c072:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801c076:	ea4f 4325 	mov.w	r3, r5, asr #16
 801c07a:	d406      	bmi.n	801c08a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801c07c:	4584      	cmp	ip, r0
 801c07e:	da04      	bge.n	801c08a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801c080:	2b00      	cmp	r3, #0
 801c082:	db02      	blt.n	801c08a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801c084:	42bb      	cmp	r3, r7
 801c086:	f2c0 8184 	blt.w	801c392 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x376>
 801c08a:	f11c 0c01 	adds.w	ip, ip, #1
 801c08e:	f100 8172 	bmi.w	801c376 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801c092:	4561      	cmp	r1, ip
 801c094:	f2c0 816f 	blt.w	801c376 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801c098:	3301      	adds	r3, #1
 801c09a:	f100 816c 	bmi.w	801c376 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801c09e:	429a      	cmp	r2, r3
 801c0a0:	f2c0 8169 	blt.w	801c376 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801c0a4:	9b07      	ldr	r3, [sp, #28]
 801c0a6:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
 801c0a8:	9317      	str	r3, [sp, #92]	@ 0x5c
 801c0aa:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 801c0ac:	2b00      	cmp	r3, #0
 801c0ae:	f340 818e 	ble.w	801c3ce <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b2>
 801c0b2:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 801c0b4:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801c0b8:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801c0ba:	e9d3 1e02 	ldrd	r1, lr, [r3, #8]
 801c0be:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 801c0c0:	141b      	asrs	r3, r3, #16
 801c0c2:	ea4f 4c25 	mov.w	ip, r5, asr #16
 801c0c6:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801c0ca:	f100 81d1 	bmi.w	801c470 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 801c0ce:	f101 38ff 	add.w	r8, r1, #4294967295
 801c0d2:	4543      	cmp	r3, r8
 801c0d4:	f280 81cc 	bge.w	801c470 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 801c0d8:	f1bc 0f00 	cmp.w	ip, #0
 801c0dc:	f2c0 81c8 	blt.w	801c470 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 801c0e0:	f10e 38ff 	add.w	r8, lr, #4294967295
 801c0e4:	45c4      	cmp	ip, r8
 801c0e6:	f280 81c3 	bge.w	801c470 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 801c0ea:	b209      	sxth	r1, r1
 801c0ec:	fb0c 3301 	mla	r3, ip, r1, r3
 801c0f0:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 801c0f2:	eb04 0803 	add.w	r8, r4, r3
 801c0f6:	5ce3      	ldrb	r3, [r4, r3]
 801c0f8:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801c0fc:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 801c100:	2a00      	cmp	r2, #0
 801c102:	f000 81aa 	beq.w	801c45a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x43e>
 801c106:	f898 c001 	ldrb.w	ip, [r8, #1]
 801c10a:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 801c10e:	940b      	str	r4, [sp, #44]	@ 0x2c
 801c110:	0e24      	lsrs	r4, r4, #24
 801c112:	9412      	str	r4, [sp, #72]	@ 0x48
 801c114:	b178      	cbz	r0, 801c136 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 801c116:	eb08 0c01 	add.w	ip, r8, r1
 801c11a:	f818 1001 	ldrb.w	r1, [r8, r1]
 801c11e:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801c122:	9108      	str	r1, [sp, #32]
 801c124:	0e09      	lsrs	r1, r1, #24
 801c126:	9110      	str	r1, [sp, #64]	@ 0x40
 801c128:	f89c 1001 	ldrb.w	r1, [ip, #1]
 801c12c:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801c130:	910c      	str	r1, [sp, #48]	@ 0x30
 801c132:	0e09      	lsrs	r1, r1, #24
 801c134:	9113      	str	r1, [sp, #76]	@ 0x4c
 801c136:	b292      	uxth	r2, r2
 801c138:	b280      	uxth	r0, r0
 801c13a:	fb02 f900 	mul.w	r9, r2, r0
 801c13e:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 801c142:	0112      	lsls	r2, r2, #4
 801c144:	eba2 0809 	sub.w	r8, r2, r9
 801c148:	b280      	uxth	r0, r0
 801c14a:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
 801c14e:	9912      	ldr	r1, [sp, #72]	@ 0x48
 801c150:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801c152:	fa1f f888 	uxth.w	r8, r8
 801c156:	1a12      	subs	r2, r2, r0
 801c158:	b292      	uxth	r2, r2
 801c15a:	fb08 f101 	mul.w	r1, r8, r1
 801c15e:	fb02 110e 	mla	r1, r2, lr, r1
 801c162:	fb00 1104 	mla	r1, r0, r4, r1
 801c166:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801c168:	fb09 1104 	mla	r1, r9, r4, r1
 801c16c:	f3c1 2107 	ubfx	r1, r1, #8, #8
 801c170:	2900      	cmp	r1, #0
 801c172:	f000 80f5 	beq.w	801c360 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801c176:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
 801c17a:	d01b      	beq.n	801c1b4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801c17c:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 801c180:	fb0e fa0a 	mul.w	sl, lr, sl
 801c184:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801c188:	fb0e fe03 	mul.w	lr, lr, r3
 801c18c:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801c190:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801c194:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 801c198:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
 801c19c:	4453      	add	r3, sl
 801c19e:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801c1a2:	0a1b      	lsrs	r3, r3, #8
 801c1a4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801c1a8:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801c1ac:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 801c1b0:	ea43 030c 	orr.w	r3, r3, ip
 801c1b4:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 801c1b6:	2cff      	cmp	r4, #255	@ 0xff
 801c1b8:	d021      	beq.n	801c1fe <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e2>
 801c1ba:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801c1bc:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 801c1c0:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 801c1c2:	fb04 fb0b 	mul.w	fp, r4, fp
 801c1c6:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801c1c8:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801c1cc:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 801c1ce:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801c1d2:	fb04 fa0a 	mul.w	sl, r4, sl
 801c1d6:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801c1da:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801c1de:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801c1e2:	44de      	add	lr, fp
 801c1e4:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801c1e8:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801c1ec:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801c1f0:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801c1f4:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801c1f8:	ea4e 040a 	orr.w	r4, lr, sl
 801c1fc:	940b      	str	r4, [sp, #44]	@ 0x2c
 801c1fe:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801c200:	2cff      	cmp	r4, #255	@ 0xff
 801c202:	d021      	beq.n	801c248 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22c>
 801c204:	9c08      	ldr	r4, [sp, #32]
 801c206:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 801c20a:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801c20c:	fb04 fb0b 	mul.w	fp, r4, fp
 801c210:	9c08      	ldr	r4, [sp, #32]
 801c212:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801c216:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801c218:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801c21c:	fb04 fa0a 	mul.w	sl, r4, sl
 801c220:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801c224:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801c228:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801c22c:	44de      	add	lr, fp
 801c22e:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801c232:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801c236:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801c23a:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801c23e:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801c242:	ea4e 040a 	orr.w	r4, lr, sl
 801c246:	9408      	str	r4, [sp, #32]
 801c248:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801c24a:	2cff      	cmp	r4, #255	@ 0xff
 801c24c:	d021      	beq.n	801c292 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 801c24e:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 801c250:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 801c254:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801c256:	fb04 fb0b 	mul.w	fp, r4, fp
 801c25a:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 801c25c:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801c260:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801c262:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801c266:	fb04 fa0a 	mul.w	sl, r4, sl
 801c26a:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801c26e:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801c272:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801c276:	44de      	add	lr, fp
 801c278:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801c27c:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801c280:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801c284:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801c288:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801c28c:	ea4e 040a 	orr.w	r4, lr, sl
 801c290:	940c      	str	r4, [sp, #48]	@ 0x30
 801c292:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801c294:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 801c298:	9c08      	ldr	r4, [sp, #32]
 801c29a:	f003 1eff 	and.w	lr, r3, #16711935	@ 0xff00ff
 801c29e:	fb08 fc0c 	mul.w	ip, r8, ip
 801c2a2:	fb02 cc0e 	mla	ip, r2, lr, ip
 801c2a6:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
 801c2aa:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 801c2ac:	fb00 cc0e 	mla	ip, r0, lr, ip
 801c2b0:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
 801c2b4:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801c2b6:	fb09 cc0e 	mla	ip, r9, lr, ip
 801c2ba:	f404 4e7f 	and.w	lr, r4, #65280	@ 0xff00
 801c2be:	fb08 f80e 	mul.w	r8, r8, lr
 801c2c2:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801c2c6:	fb02 8303 	mla	r3, r2, r3, r8
 801c2ca:	9a08      	ldr	r2, [sp, #32]
 801c2cc:	f8b7 8000 	ldrh.w	r8, [r7]
 801c2d0:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
 801c2d4:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 801c2d6:	fb00 330a 	mla	r3, r0, sl, r3
 801c2da:	f402 407f 	and.w	r0, r2, #65280	@ 0xff00
 801c2de:	fb09 3900 	mla	r9, r9, r0, r3
 801c2e2:	43c9      	mvns	r1, r1
 801c2e4:	ea4f 2228 	mov.w	r2, r8, asr #8
 801c2e8:	fa5f fe81 	uxtb.w	lr, r1
 801c2ec:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801c2f0:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801c2f4:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 801c2f8:	fb02 f20e 	mul.w	r2, r2, lr
 801c2fc:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801c300:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
 801c304:	ea4c 0c09 	orr.w	ip, ip, r9
 801c308:	1c53      	adds	r3, r2, #1
 801c30a:	eb03 2212 	add.w	r2, r3, r2, lsr #8
 801c30e:	ea4f 00e8 	mov.w	r0, r8, asr #3
 801c312:	ea4f 431c 	mov.w	r3, ip, lsr #16
 801c316:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801c31a:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 801c31e:	4a63      	ldr	r2, [pc, #396]	@ (801c4ac <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>)
 801c320:	fb00 f00e 	mul.w	r0, r0, lr
 801c324:	b2db      	uxtb	r3, r3
 801c326:	ea02 2203 	and.w	r2, r2, r3, lsl #8
 801c32a:	1c43      	adds	r3, r0, #1
 801c32c:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801c330:	ea4f 231c 	mov.w	r3, ip, lsr #8
 801c334:	ea4f 01c8 	mov.w	r1, r8, lsl #3
 801c338:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801c33c:	b2c9      	uxtb	r1, r1
 801c33e:	00db      	lsls	r3, r3, #3
 801c340:	fb01 f10e 	mul.w	r1, r1, lr
 801c344:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801c348:	4313      	orrs	r3, r2
 801c34a:	1c4a      	adds	r2, r1, #1
 801c34c:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801c350:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 801c354:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 801c358:	ea4c 0c03 	orr.w	ip, ip, r3
 801c35c:	f8a7 c000 	strh.w	ip, [r7]
 801c360:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 801c362:	9a25      	ldr	r2, [sp, #148]	@ 0x94
 801c364:	441a      	add	r2, r3
 801c366:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801c368:	9225      	str	r2, [sp, #148]	@ 0x94
 801c36a:	441d      	add	r5, r3
 801c36c:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 801c36e:	3b01      	subs	r3, #1
 801c370:	3702      	adds	r7, #2
 801c372:	9317      	str	r3, [sp, #92]	@ 0x5c
 801c374:	e699      	b.n	801c0aa <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801c376:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 801c378:	9c25      	ldr	r4, [sp, #148]	@ 0x94
 801c37a:	441c      	add	r4, r3
 801c37c:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801c37e:	9425      	str	r4, [sp, #148]	@ 0x94
 801c380:	441d      	add	r5, r3
 801c382:	9b07      	ldr	r3, [sp, #28]
 801c384:	3b01      	subs	r3, #1
 801c386:	9307      	str	r3, [sp, #28]
 801c388:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801c38a:	3302      	adds	r3, #2
 801c38c:	930a      	str	r3, [sp, #40]	@ 0x28
 801c38e:	e66b      	b.n	801c068 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801c390:	d024      	beq.n	801c3dc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c0>
 801c392:	9b07      	ldr	r3, [sp, #28]
 801c394:	9827      	ldr	r0, [sp, #156]	@ 0x9c
 801c396:	9c25      	ldr	r4, [sp, #148]	@ 0x94
 801c398:	3b01      	subs	r3, #1
 801c39a:	fb00 4003 	mla	r0, r0, r3, r4
 801c39e:	1400      	asrs	r0, r0, #16
 801c3a0:	f53f ae80 	bmi.w	801c0a4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801c3a4:	3901      	subs	r1, #1
 801c3a6:	4288      	cmp	r0, r1
 801c3a8:	f6bf ae7c 	bge.w	801c0a4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801c3ac:	9928      	ldr	r1, [sp, #160]	@ 0xa0
 801c3ae:	fb01 5303 	mla	r3, r1, r3, r5
 801c3b2:	141b      	asrs	r3, r3, #16
 801c3b4:	f53f ae76 	bmi.w	801c0a4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801c3b8:	3a01      	subs	r2, #1
 801c3ba:	4293      	cmp	r3, r2
 801c3bc:	f6bf ae72 	bge.w	801c0a4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801c3c0:	f8dd b01c 	ldr.w	fp, [sp, #28]
 801c3c4:	f8dd 9028 	ldr.w	r9, [sp, #40]	@ 0x28
 801c3c8:	f1bb 0f00 	cmp.w	fp, #0
 801c3cc:	dc70      	bgt.n	801c4b0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
 801c3ce:	9b07      	ldr	r3, [sp, #28]
 801c3d0:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801c3d4:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801c3d6:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801c3da:	930a      	str	r3, [sp, #40]	@ 0x28
 801c3dc:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 801c3de:	2b00      	cmp	r3, #0
 801c3e0:	f340 81ae 	ble.w	801c740 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 801c3e4:	ee30 0a04 	vadd.f32	s0, s0, s8
 801c3e8:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801c3ec:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801c3f0:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801c3f2:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801c3f6:	ee31 1a05 	vadd.f32	s2, s2, s10
 801c3fa:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801c3fe:	eef0 6a62 	vmov.f32	s13, s5
 801c402:	ee61 7a27 	vmul.f32	s15, s2, s15
 801c406:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801c40a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801c40e:	edcd 6a25 	vstr	s13, [sp, #148]	@ 0x94
 801c412:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801c416:	eef0 6a43 	vmov.f32	s13, s6
 801c41a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801c41e:	ee12 2a90 	vmov	r2, s5
 801c422:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801c426:	fb92 f3f3 	sdiv	r3, r2, r3
 801c42a:	ee13 2a10 	vmov	r2, s6
 801c42e:	9327      	str	r3, [sp, #156]	@ 0x9c
 801c430:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801c432:	fb92 f3f3 	sdiv	r3, r2, r3
 801c436:	9328      	str	r3, [sp, #160]	@ 0xa0
 801c438:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 801c43a:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 801c43c:	3b01      	subs	r3, #1
 801c43e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801c442:	9316      	str	r3, [sp, #88]	@ 0x58
 801c444:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801c446:	bf08      	it	eq
 801c448:	4613      	moveq	r3, r2
 801c44a:	ee16 5a90 	vmov	r5, s13
 801c44e:	9307      	str	r3, [sp, #28]
 801c450:	eeb0 3a67 	vmov.f32	s6, s15
 801c454:	eef0 2a47 	vmov.f32	s5, s14
 801c458:	e5f8      	b.n	801c04c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801c45a:	2800      	cmp	r0, #0
 801c45c:	f43f ae6b 	beq.w	801c136 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 801c460:	f818 1001 	ldrb.w	r1, [r8, r1]
 801c464:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801c468:	9108      	str	r1, [sp, #32]
 801c46a:	0e09      	lsrs	r1, r1, #24
 801c46c:	9110      	str	r1, [sp, #64]	@ 0x40
 801c46e:	e662      	b.n	801c136 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 801c470:	f113 0801 	adds.w	r8, r3, #1
 801c474:	f53f af74 	bmi.w	801c360 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801c478:	4541      	cmp	r1, r8
 801c47a:	f6ff af71 	blt.w	801c360 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801c47e:	f11c 0801 	adds.w	r8, ip, #1
 801c482:	f53f af6d 	bmi.w	801c360 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801c486:	45c6      	cmp	lr, r8
 801c488:	f6ff af6a 	blt.w	801c360 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801c48c:	e9cd 3c02 	strd	r3, ip, [sp, #8]
 801c490:	b209      	sxth	r1, r1
 801c492:	fa0f f38e 	sxth.w	r3, lr
 801c496:	e9cd 2004 	strd	r2, r0, [sp, #16]
 801c49a:	9301      	str	r3, [sp, #4]
 801c49c:	9100      	str	r1, [sp, #0]
 801c49e:	4633      	mov	r3, r6
 801c4a0:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801c4a2:	9819      	ldr	r0, [sp, #100]	@ 0x64
 801c4a4:	4639      	mov	r1, r7
 801c4a6:	f7ff fc7a 	bl	801bd9e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>
 801c4aa:	e759      	b.n	801c360 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801c4ac:	fffff800 	.word	0xfffff800
 801c4b0:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 801c4b2:	9c25      	ldr	r4, [sp, #148]	@ 0x94
 801c4b4:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801c4b8:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801c4ba:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801c4be:	1427      	asrs	r7, r4, #16
 801c4c0:	142b      	asrs	r3, r5, #16
 801c4c2:	fb01 7303 	mla	r3, r1, r3, r7
 801c4c6:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 801c4c8:	18e7      	adds	r7, r4, r3
 801c4ca:	5ce3      	ldrb	r3, [r4, r3]
 801c4cc:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801c4d0:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801c4d4:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801c4d8:	2a00      	cmp	r2, #0
 801c4da:	f000 8127 	beq.w	801c72c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 801c4de:	f897 e001 	ldrb.w	lr, [r7, #1]
 801c4e2:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 801c4e6:	940d      	str	r4, [sp, #52]	@ 0x34
 801c4e8:	0e24      	lsrs	r4, r4, #24
 801c4ea:	9414      	str	r4, [sp, #80]	@ 0x50
 801c4ec:	b170      	cbz	r0, 801c50c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 801c4ee:	eb07 0e01 	add.w	lr, r7, r1
 801c4f2:	5c79      	ldrb	r1, [r7, r1]
 801c4f4:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801c4f8:	9109      	str	r1, [sp, #36]	@ 0x24
 801c4fa:	0e09      	lsrs	r1, r1, #24
 801c4fc:	9111      	str	r1, [sp, #68]	@ 0x44
 801c4fe:	f89e 1001 	ldrb.w	r1, [lr, #1]
 801c502:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801c506:	910e      	str	r1, [sp, #56]	@ 0x38
 801c508:	0e09      	lsrs	r1, r1, #24
 801c50a:	9115      	str	r1, [sp, #84]	@ 0x54
 801c50c:	b292      	uxth	r2, r2
 801c50e:	b280      	uxth	r0, r0
 801c510:	fb02 f800 	mul.w	r8, r2, r0
 801c514:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 801c518:	0112      	lsls	r2, r2, #4
 801c51a:	eba2 0e08 	sub.w	lr, r2, r8
 801c51e:	b280      	uxth	r0, r0
 801c520:	f5c2 7180 	rsb	r1, r2, #256	@ 0x100
 801c524:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801c526:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 801c528:	fa1f fe8e 	uxth.w	lr, lr
 801c52c:	1a09      	subs	r1, r1, r0
 801c52e:	b289      	uxth	r1, r1
 801c530:	fb0e f202 	mul.w	r2, lr, r2
 801c534:	fb01 220c 	mla	r2, r1, ip, r2
 801c538:	fb00 2204 	mla	r2, r0, r4, r2
 801c53c:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 801c53e:	fb08 2204 	mla	r2, r8, r4, r2
 801c542:	f3c2 2207 	ubfx	r2, r2, #8, #8
 801c546:	2a00      	cmp	r2, #0
 801c548:	f000 80e5 	beq.w	801c716 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6fa>
 801c54c:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
 801c550:	d019      	beq.n	801c586 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56a>
 801c552:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 801c556:	fb0c fa0a 	mul.w	sl, ip, sl
 801c55a:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801c55e:	fb0c fc03 	mul.w	ip, ip, r3
 801c562:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801c566:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801c56a:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 801c56e:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
 801c572:	4453      	add	r3, sl
 801c574:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801c578:	0a1b      	lsrs	r3, r3, #8
 801c57a:	0a3f      	lsrs	r7, r7, #8
 801c57c:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801c580:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 801c584:	433b      	orrs	r3, r7
 801c586:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801c588:	2cff      	cmp	r4, #255	@ 0xff
 801c58a:	d020      	beq.n	801c5ce <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5b2>
 801c58c:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801c58e:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 801c592:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801c594:	4367      	muls	r7, r4
 801c596:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801c598:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801c59c:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801c59e:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801c5a2:	fb04 fa0a 	mul.w	sl, r4, sl
 801c5a6:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801c5aa:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801c5ae:	44bc      	add	ip, r7
 801c5b0:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801c5b4:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801c5b8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801c5bc:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801c5c0:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801c5c4:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801c5c8:	ea4c 040a 	orr.w	r4, ip, sl
 801c5cc:	940d      	str	r4, [sp, #52]	@ 0x34
 801c5ce:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 801c5d0:	2cff      	cmp	r4, #255	@ 0xff
 801c5d2:	d020      	beq.n	801c616 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fa>
 801c5d4:	9c09      	ldr	r4, [sp, #36]	@ 0x24
 801c5d6:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 801c5da:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 801c5dc:	4367      	muls	r7, r4
 801c5de:	9c09      	ldr	r4, [sp, #36]	@ 0x24
 801c5e0:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801c5e4:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 801c5e6:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801c5ea:	fb04 fa0a 	mul.w	sl, r4, sl
 801c5ee:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801c5f2:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801c5f6:	44bc      	add	ip, r7
 801c5f8:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801c5fc:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801c600:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801c604:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801c608:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801c60c:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801c610:	ea4c 040a 	orr.w	r4, ip, sl
 801c614:	9409      	str	r4, [sp, #36]	@ 0x24
 801c616:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 801c618:	2cff      	cmp	r4, #255	@ 0xff
 801c61a:	d020      	beq.n	801c65e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x642>
 801c61c:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801c61e:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 801c622:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 801c624:	4367      	muls	r7, r4
 801c626:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801c628:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801c62c:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 801c62e:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801c632:	fb04 fa0a 	mul.w	sl, r4, sl
 801c636:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801c63a:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801c63e:	44bc      	add	ip, r7
 801c640:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801c644:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801c648:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801c64c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801c650:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801c654:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801c658:	ea4c 040a 	orr.w	r4, ip, sl
 801c65c:	940e      	str	r4, [sp, #56]	@ 0x38
 801c65e:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801c660:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 801c664:	9c09      	ldr	r4, [sp, #36]	@ 0x24
 801c666:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
 801c66a:	fb0e f707 	mul.w	r7, lr, r7
 801c66e:	fb01 770c 	mla	r7, r1, ip, r7
 801c672:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 801c676:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801c678:	fb00 770c 	mla	r7, r0, ip, r7
 801c67c:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 801c680:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801c682:	fb08 770c 	mla	r7, r8, ip, r7
 801c686:	f404 4c7f 	and.w	ip, r4, #65280	@ 0xff00
 801c68a:	fb0e fe0c 	mul.w	lr, lr, ip
 801c68e:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801c692:	fb01 e303 	mla	r3, r1, r3, lr
 801c696:	9909      	ldr	r1, [sp, #36]	@ 0x24
 801c698:	f401 4a7f 	and.w	sl, r1, #65280	@ 0xff00
 801c69c:	990e      	ldr	r1, [sp, #56]	@ 0x38
 801c69e:	fb00 330a 	mla	r3, r0, sl, r3
 801c6a2:	f401 4c7f 	and.w	ip, r1, #65280	@ 0xff00
 801c6a6:	fb08 3c0c 	mla	ip, r8, ip, r3
 801c6aa:	f8b9 3000 	ldrh.w	r3, [r9]
 801c6ae:	43d2      	mvns	r2, r2
 801c6b0:	1218      	asrs	r0, r3, #8
 801c6b2:	b2d2      	uxtb	r2, r2
 801c6b4:	10d9      	asrs	r1, r3, #3
 801c6b6:	0a3f      	lsrs	r7, r7, #8
 801c6b8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801c6bc:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801c6c0:	00db      	lsls	r3, r3, #3
 801c6c2:	4350      	muls	r0, r2
 801c6c4:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
 801c6c8:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 801c6cc:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 801c6d0:	b2db      	uxtb	r3, r3
 801c6d2:	ea47 070c 	orr.w	r7, r7, ip
 801c6d6:	4351      	muls	r1, r2
 801c6d8:	4353      	muls	r3, r2
 801c6da:	1c42      	adds	r2, r0, #1
 801c6dc:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801c6e0:	0c3a      	lsrs	r2, r7, #16
 801c6e2:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801c6e6:	4a18      	ldr	r2, [pc, #96]	@ (801c748 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72c>)
 801c6e8:	b2c0      	uxtb	r0, r0
 801c6ea:	ea02 2000 	and.w	r0, r2, r0, lsl #8
 801c6ee:	1c4a      	adds	r2, r1, #1
 801c6f0:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801c6f4:	0a3a      	lsrs	r2, r7, #8
 801c6f6:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801c6fa:	00c9      	lsls	r1, r1, #3
 801c6fc:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801c700:	4301      	orrs	r1, r0
 801c702:	1c58      	adds	r0, r3, #1
 801c704:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 801c708:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 801c70c:	f3c7 00c4 	ubfx	r0, r7, #3, #5
 801c710:	4308      	orrs	r0, r1
 801c712:	f8a9 0000 	strh.w	r0, [r9]
 801c716:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 801c718:	9a25      	ldr	r2, [sp, #148]	@ 0x94
 801c71a:	441a      	add	r2, r3
 801c71c:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801c71e:	9225      	str	r2, [sp, #148]	@ 0x94
 801c720:	f109 0902 	add.w	r9, r9, #2
 801c724:	441d      	add	r5, r3
 801c726:	f10b 3bff 	add.w	fp, fp, #4294967295
 801c72a:	e64d      	b.n	801c3c8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ac>
 801c72c:	2800      	cmp	r0, #0
 801c72e:	f43f aeed 	beq.w	801c50c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 801c732:	5c79      	ldrb	r1, [r7, r1]
 801c734:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801c738:	9109      	str	r1, [sp, #36]	@ 0x24
 801c73a:	0e09      	lsrs	r1, r1, #24
 801c73c:	9111      	str	r1, [sp, #68]	@ 0x44
 801c73e:	e6e5      	b.n	801c50c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 801c740:	b01b      	add	sp, #108	@ 0x6c
 801c742:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c746:	bf00      	nop
 801c748:	fffff800 	.word	0xfffff800

0801c74c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>:
 801c74c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c750:	b085      	sub	sp, #20
 801c752:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	@ 0x40
 801c756:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	@ 0x38
 801c75a:	9103      	str	r1, [sp, #12]
 801c75c:	fb00 7406 	mla	r4, r0, r6, r7
 801c760:	eb02 0544 	add.w	r5, r2, r4, lsl #1
 801c764:	2800      	cmp	r0, #0
 801c766:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	@ 0x3c
 801c76a:	f89d 1048 	ldrb.w	r1, [sp, #72]	@ 0x48
 801c76e:	f89d e04c 	ldrb.w	lr, [sp, #76]	@ 0x4c
 801c772:	9501      	str	r5, [sp, #4]
 801c774:	eb03 0904 	add.w	r9, r3, r4
 801c778:	f2c0 8150 	blt.w	801ca1c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 801c77c:	4583      	cmp	fp, r0
 801c77e:	f340 814d 	ble.w	801ca1c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 801c782:	2f00      	cmp	r7, #0
 801c784:	f2c0 8146 	blt.w	801ca14 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 801c788:	42be      	cmp	r6, r7
 801c78a:	f340 8143 	ble.w	801ca14 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 801c78e:	f813 c004 	ldrb.w	ip, [r3, r4]
 801c792:	f832 3014 	ldrh.w	r3, [r2, r4, lsl #1]
 801c796:	ea4f 02ec 	mov.w	r2, ip, asr #3
 801c79a:	f423 65fc 	bic.w	r5, r3, #2016	@ 0x7e0
 801c79e:	4355      	muls	r5, r2
 801c7a0:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801c7a4:	f64f 041f 	movw	r4, #63519	@ 0xf81f
 801c7a8:	fb0c f203 	mul.w	r2, ip, r3
 801c7ac:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 801c7b0:	f605 0501 	addw	r5, r5, #2049	@ 0x801
 801c7b4:	441d      	add	r5, r3
 801c7b6:	f102 0320 	add.w	r3, r2, #32
 801c7ba:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801c7be:	0a1b      	lsrs	r3, r3, #8
 801c7c0:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 801c7c4:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801c7c8:	431c      	orrs	r4, r3
 801c7ca:	1c7b      	adds	r3, r7, #1
 801c7cc:	f100 812b 	bmi.w	801ca26 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 801c7d0:	429e      	cmp	r6, r3
 801c7d2:	f340 8128 	ble.w	801ca26 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 801c7d6:	2900      	cmp	r1, #0
 801c7d8:	f000 8128 	beq.w	801ca2c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e0>
 801c7dc:	9a01      	ldr	r2, [sp, #4]
 801c7de:	f899 3001 	ldrb.w	r3, [r9, #1]
 801c7e2:	8855      	ldrh	r5, [r2, #2]
 801c7e4:	ea4f 08e3 	mov.w	r8, r3, asr #3
 801c7e8:	f425 62fc 	bic.w	r2, r5, #2016	@ 0x7e0
 801c7ec:	fb08 f802 	mul.w	r8, r8, r2
 801c7f0:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801c7f4:	f64f 021f 	movw	r2, #63519	@ 0xf81f
 801c7f8:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 801c7fc:	435d      	muls	r5, r3
 801c7fe:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801c802:	44d0      	add	r8, sl
 801c804:	f105 0a20 	add.w	sl, r5, #32
 801c808:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 801c80c:	0a2d      	lsrs	r5, r5, #8
 801c80e:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 801c812:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801c816:	432a      	orrs	r2, r5
 801c818:	3001      	adds	r0, #1
 801c81a:	f100 810d 	bmi.w	801ca38 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 801c81e:	4583      	cmp	fp, r0
 801c820:	f340 810a 	ble.w	801ca38 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 801c824:	f1be 0f00 	cmp.w	lr, #0
 801c828:	f000 810b 	beq.w	801ca42 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2f6>
 801c82c:	2f00      	cmp	r7, #0
 801c82e:	f2c0 8100 	blt.w	801ca32 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 801c832:	42be      	cmp	r6, r7
 801c834:	f340 80fd 	ble.w	801ca32 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 801c838:	9801      	ldr	r0, [sp, #4]
 801c83a:	f819 5006 	ldrb.w	r5, [r9, r6]
 801c83e:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 801c842:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801c846:	f428 60fc 	bic.w	r0, r8, #2016	@ 0x7e0
 801c84a:	fb0a fa00 	mul.w	sl, sl, r0
 801c84e:	f64f 0b1f 	movw	fp, #63519	@ 0xf81f
 801c852:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 801c856:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 801c85a:	fb05 f808 	mul.w	r8, r5, r8
 801c85e:	f60a 0a01 	addw	sl, sl, #2049	@ 0x801
 801c862:	4482      	add	sl, r0
 801c864:	f108 0020 	add.w	r0, r8, #32
 801c868:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801c86c:	0a00      	lsrs	r0, r0, #8
 801c86e:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 801c872:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801c876:	ea4b 0b00 	orr.w	fp, fp, r0
 801c87a:	3701      	adds	r7, #1
 801c87c:	f100 80e6 	bmi.w	801ca4c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 801c880:	42be      	cmp	r6, r7
 801c882:	f340 80e3 	ble.w	801ca4c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 801c886:	2900      	cmp	r1, #0
 801c888:	f000 80e3 	beq.w	801ca52 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x306>
 801c88c:	3601      	adds	r6, #1
 801c88e:	9801      	ldr	r0, [sp, #4]
 801c890:	f819 7006 	ldrb.w	r7, [r9, r6]
 801c894:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 801c898:	ea4f 09e7 	mov.w	r9, r7, asr #3
 801c89c:	f420 66fc 	bic.w	r6, r0, #2016	@ 0x7e0
 801c8a0:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801c8a4:	fb09 f906 	mul.w	r9, r9, r6
 801c8a8:	fb07 f800 	mul.w	r8, r7, r0
 801c8ac:	f64f 001f 	movw	r0, #63519	@ 0xf81f
 801c8b0:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 801c8b4:	f609 0901 	addw	r9, r9, #2049	@ 0x801
 801c8b8:	44d1      	add	r9, sl
 801c8ba:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 801c8be:	f108 0020 	add.w	r0, r8, #32
 801c8c2:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801c8c6:	0a00      	lsrs	r0, r0, #8
 801c8c8:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801c8cc:	4330      	orrs	r0, r6
 801c8ce:	b28e      	uxth	r6, r1
 801c8d0:	fa1f f98e 	uxth.w	r9, lr
 801c8d4:	fb06 f809 	mul.w	r8, r6, r9
 801c8d8:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 801c8dc:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 801c8e0:	0136      	lsls	r6, r6, #4
 801c8e2:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801c8e6:	f424 64fc 	bic.w	r4, r4, #2016	@ 0x7e0
 801c8ea:	9601      	str	r6, [sp, #4]
 801c8ec:	ea4a 0404 	orr.w	r4, sl, r4
 801c8f0:	fa1f f689 	uxth.w	r6, r9
 801c8f4:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801c8f8:	fb11 f90e 	smulbb	r9, r1, lr
 801c8fc:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 801c900:	9602      	str	r6, [sp, #8]
 801c902:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801c906:	4626      	mov	r6, r4
 801c908:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801c90c:	f1ce 0410 	rsb	r4, lr, #16
 801c910:	1a64      	subs	r4, r4, r1
 801c912:	ea4a 0202 	orr.w	r2, sl, r2
 801c916:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 801c91a:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 801c91e:	434a      	muls	r2, r1
 801c920:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 801c924:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801c928:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801c92c:	fb04 2406 	mla	r4, r4, r6, r2
 801c930:	ea4a 0000 	orr.w	r0, sl, r0
 801c934:	fb09 4200 	mla	r2, r9, r0, r4
 801c938:	ea4f 440b 	mov.w	r4, fp, lsl #16
 801c93c:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 801c940:	f42b 6bfc 	bic.w	fp, fp, #2016	@ 0x7e0
 801c944:	ea44 0b0b 	orr.w	fp, r4, fp
 801c948:	9c01      	ldr	r4, [sp, #4]
 801c94a:	9e02      	ldr	r6, [sp, #8]
 801c94c:	9903      	ldr	r1, [sp, #12]
 801c94e:	f5c4 7480 	rsb	r4, r4, #256	@ 0x100
 801c952:	1ba4      	subs	r4, r4, r6
 801c954:	9e01      	ldr	r6, [sp, #4]
 801c956:	8808      	ldrh	r0, [r1, #0]
 801c958:	f89d 1050 	ldrb.w	r1, [sp, #80]	@ 0x50
 801c95c:	eba6 0608 	sub.w	r6, r6, r8
 801c960:	b2b6      	uxth	r6, r6
 801c962:	b2a4      	uxth	r4, r4
 801c964:	4373      	muls	r3, r6
 801c966:	fb0c 3304 	mla	r3, ip, r4, r3
 801c96a:	9c02      	ldr	r4, [sp, #8]
 801c96c:	fb04 3505 	mla	r5, r4, r5, r3
 801c970:	fb08 5707 	mla	r7, r8, r7, r5
 801c974:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 801c978:	b289      	uxth	r1, r1
 801c97a:	fb0e 2e0b 	mla	lr, lr, fp, r2
 801c97e:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801c982:	434f      	muls	r7, r1
 801c984:	ea4f 525e 	mov.w	r2, lr, lsr #21
 801c988:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801c98c:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801c990:	1c7b      	adds	r3, r7, #1
 801c992:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 801c996:	ea42 0e0e 	orr.w	lr, r2, lr
 801c99a:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 801c99e:	fa1f f28e 	uxth.w	r2, lr
 801c9a2:	1203      	asrs	r3, r0, #8
 801c9a4:	ea6f 2717 	mvn.w	r7, r7, lsr #8
 801c9a8:	b2ff      	uxtb	r7, r7
 801c9aa:	1215      	asrs	r5, r2, #8
 801c9ac:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 801c9b0:	fb13 f307 	smulbb	r3, r3, r7
 801c9b4:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 801c9b8:	fb05 3501 	mla	r5, r5, r1, r3
 801c9bc:	10c3      	asrs	r3, r0, #3
 801c9be:	10d4      	asrs	r4, r2, #3
 801c9c0:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 801c9c4:	fb13 f307 	smulbb	r3, r3, r7
 801c9c8:	f004 04fc 	and.w	r4, r4, #252	@ 0xfc
 801c9cc:	fb04 3401 	mla	r4, r4, r1, r3
 801c9d0:	00c3      	lsls	r3, r0, #3
 801c9d2:	00d2      	lsls	r2, r2, #3
 801c9d4:	b2db      	uxtb	r3, r3
 801c9d6:	fb13 f307 	smulbb	r3, r3, r7
 801c9da:	b2d2      	uxtb	r2, r2
 801c9dc:	fb02 3101 	mla	r1, r2, r1, r3
 801c9e0:	b2ad      	uxth	r5, r5
 801c9e2:	b289      	uxth	r1, r1
 801c9e4:	b2a4      	uxth	r4, r4
 801c9e6:	1c6b      	adds	r3, r5, #1
 801c9e8:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801c9ec:	1c62      	adds	r2, r4, #1
 801c9ee:	1c4b      	adds	r3, r1, #1
 801c9f0:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801c9f4:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 801c9f8:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 801c9fc:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801ca00:	0964      	lsrs	r4, r4, #5
 801ca02:	432b      	orrs	r3, r5
 801ca04:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 801ca08:	9a03      	ldr	r2, [sp, #12]
 801ca0a:	4323      	orrs	r3, r4
 801ca0c:	8013      	strh	r3, [r2, #0]
 801ca0e:	b005      	add	sp, #20
 801ca10:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ca14:	f04f 0c00 	mov.w	ip, #0
 801ca18:	4664      	mov	r4, ip
 801ca1a:	e6d6      	b.n	801c7ca <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x7e>
 801ca1c:	2300      	movs	r3, #0
 801ca1e:	469c      	mov	ip, r3
 801ca20:	461a      	mov	r2, r3
 801ca22:	461c      	mov	r4, r3
 801ca24:	e6f8      	b.n	801c818 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 801ca26:	2300      	movs	r3, #0
 801ca28:	461a      	mov	r2, r3
 801ca2a:	e6f5      	b.n	801c818 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 801ca2c:	460b      	mov	r3, r1
 801ca2e:	460a      	mov	r2, r1
 801ca30:	e6f2      	b.n	801c818 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 801ca32:	2500      	movs	r5, #0
 801ca34:	46ab      	mov	fp, r5
 801ca36:	e720      	b.n	801c87a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x12e>
 801ca38:	2700      	movs	r7, #0
 801ca3a:	463d      	mov	r5, r7
 801ca3c:	4638      	mov	r0, r7
 801ca3e:	46bb      	mov	fp, r7
 801ca40:	e745      	b.n	801c8ce <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 801ca42:	4677      	mov	r7, lr
 801ca44:	4675      	mov	r5, lr
 801ca46:	4670      	mov	r0, lr
 801ca48:	46f3      	mov	fp, lr
 801ca4a:	e740      	b.n	801c8ce <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 801ca4c:	2700      	movs	r7, #0
 801ca4e:	4638      	mov	r0, r7
 801ca50:	e73d      	b.n	801c8ce <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 801ca52:	460f      	mov	r7, r1
 801ca54:	4608      	mov	r0, r1
 801ca56:	e73a      	b.n	801c8ce <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>

0801ca58 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801ca58:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ca5c:	b097      	sub	sp, #92	@ 0x5c
 801ca5e:	9214      	str	r2, [sp, #80]	@ 0x50
 801ca60:	9308      	str	r3, [sp, #32]
 801ca62:	9a25      	ldr	r2, [sp, #148]	@ 0x94
 801ca64:	f89d 30a4 	ldrb.w	r3, [sp, #164]	@ 0xa4
 801ca68:	9312      	str	r3, [sp, #72]	@ 0x48
 801ca6a:	9111      	str	r1, [sp, #68]	@ 0x44
 801ca6c:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	@ 0x98
 801ca70:	9015      	str	r0, [sp, #84]	@ 0x54
 801ca72:	6850      	ldr	r0, [r2, #4]
 801ca74:	6812      	ldr	r2, [r2, #0]
 801ca76:	fb00 1303 	mla	r3, r0, r3, r1
 801ca7a:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801ca7e:	9309      	str	r3, [sp, #36]	@ 0x24
 801ca80:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801ca82:	681b      	ldr	r3, [r3, #0]
 801ca84:	930b      	str	r3, [sp, #44]	@ 0x2c
 801ca86:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801ca88:	685b      	ldr	r3, [r3, #4]
 801ca8a:	930c      	str	r3, [sp, #48]	@ 0x30
 801ca8c:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 801ca90:	930a      	str	r3, [sp, #40]	@ 0x28
 801ca92:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801ca94:	2b00      	cmp	r3, #0
 801ca96:	dc03      	bgt.n	801caa0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801ca98:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 801ca9a:	2b00      	cmp	r3, #0
 801ca9c:	f340 83cb 	ble.w	801d236 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7de>
 801caa0:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801caa2:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801caa6:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801caaa:	1e48      	subs	r0, r1, #1
 801caac:	1e55      	subs	r5, r2, #1
 801caae:	9b08      	ldr	r3, [sp, #32]
 801cab0:	2b00      	cmp	r3, #0
 801cab2:	f340 81a3 	ble.w	801cdfc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a4>
 801cab6:	9e21      	ldr	r6, [sp, #132]	@ 0x84
 801cab8:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 801caba:	1436      	asrs	r6, r6, #16
 801cabc:	ea4f 4323 	mov.w	r3, r3, asr #16
 801cac0:	d406      	bmi.n	801cad0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801cac2:	4286      	cmp	r6, r0
 801cac4:	da04      	bge.n	801cad0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801cac6:	2b00      	cmp	r3, #0
 801cac8:	db02      	blt.n	801cad0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801caca:	42ab      	cmp	r3, r5
 801cacc:	f2c0 8197 	blt.w	801cdfe <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 801cad0:	3601      	adds	r6, #1
 801cad2:	f100 8184 	bmi.w	801cdde <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 801cad6:	42b1      	cmp	r1, r6
 801cad8:	f2c0 8181 	blt.w	801cdde <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 801cadc:	3301      	adds	r3, #1
 801cade:	f100 817e 	bmi.w	801cdde <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 801cae2:	429a      	cmp	r2, r3
 801cae4:	f2c0 817b 	blt.w	801cdde <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 801cae8:	9b08      	ldr	r3, [sp, #32]
 801caea:	9f09      	ldr	r7, [sp, #36]	@ 0x24
 801caec:	9313      	str	r3, [sp, #76]	@ 0x4c
 801caee:	f64f 061f 	movw	r6, #63519	@ 0xf81f
 801caf2:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 801caf4:	2b00      	cmp	r3, #0
 801caf6:	f340 81a4 	ble.w	801ce42 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 801cafa:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 801cafc:	9d21      	ldr	r5, [sp, #132]	@ 0x84
 801cafe:	1418      	asrs	r0, r3, #16
 801cb00:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 801cb02:	f3c3 3103 	ubfx	r1, r3, #12, #4
 801cb06:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 801cb08:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 801cb0c:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801cb0e:	142d      	asrs	r5, r5, #16
 801cb10:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 801cb14:	f100 81f8 	bmi.w	801cf08 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 801cb18:	f102 3eff 	add.w	lr, r2, #4294967295
 801cb1c:	4575      	cmp	r5, lr
 801cb1e:	f280 81f3 	bge.w	801cf08 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 801cb22:	2800      	cmp	r0, #0
 801cb24:	f2c0 81f0 	blt.w	801cf08 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 801cb28:	f103 3eff 	add.w	lr, r3, #4294967295
 801cb2c:	4570      	cmp	r0, lr
 801cb2e:	f280 81eb 	bge.w	801cf08 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 801cb32:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801cb34:	b212      	sxth	r2, r2
 801cb36:	fb00 5002 	mla	r0, r0, r2, r5
 801cb3a:	fa1f fe81 	uxth.w	lr, r1
 801cb3e:	eb03 0a00 	add.w	sl, r3, r0
 801cb42:	ea4f 150e 	mov.w	r5, lr, lsl #4
 801cb46:	f813 9000 	ldrb.w	r9, [r3, r0]
 801cb4a:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801cb4e:	f5c5 7380 	rsb	r3, r5, #256	@ 0x100
 801cb52:	b29b      	uxth	r3, r3
 801cb54:	f1bc 0f00 	cmp.w	ip, #0
 801cb58:	f000 81b9 	beq.w	801cece <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x476>
 801cb5c:	f81a 4002 	ldrb.w	r4, [sl, r2]
 801cb60:	940d      	str	r4, [sp, #52]	@ 0x34
 801cb62:	eb0a 0b02 	add.w	fp, sl, r2
 801cb66:	fa1f fa8c 	uxth.w	sl, ip
 801cb6a:	fb0a fe0e 	mul.w	lr, sl, lr
 801cb6e:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 801cb72:	fa1f fa8a 	uxth.w	sl, sl
 801cb76:	eba5 050e 	sub.w	r5, r5, lr
 801cb7a:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801cb7e:	940e      	str	r4, [sp, #56]	@ 0x38
 801cb80:	eba3 030a 	sub.w	r3, r3, sl
 801cb84:	b2ad      	uxth	r5, r5
 801cb86:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801cb88:	b29b      	uxth	r3, r3
 801cb8a:	fb08 f505 	mul.w	r5, r8, r5
 801cb8e:	fb09 5303 	mla	r3, r9, r3, r5
 801cb92:	fb0a 3304 	mla	r3, sl, r4, r3
 801cb96:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801cb98:	fb0e 3304 	mla	r3, lr, r4, r3
 801cb9c:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801cba0:	2b00      	cmp	r3, #0
 801cba2:	f000 810f 	beq.w	801cdc4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801cba6:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801cba8:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 801cbac:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 801cbb0:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 801cbb4:	f000 8190 	beq.w	801ced8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x480>
 801cbb8:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
 801cbbc:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801cbc0:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801cbc4:	fb09 f000 	mul.w	r0, r9, r0
 801cbc8:	fb0a fe0e 	mul.w	lr, sl, lr
 801cbcc:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 801cbd0:	f100 0b20 	add.w	fp, r0, #32
 801cbd4:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
 801cbd8:	44ce      	add	lr, r9
 801cbda:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 801cbde:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801cbe2:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801cbe6:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 801cbea:	ea4e 0909 	orr.w	r9, lr, r9
 801cbee:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
 801cbf2:	8868      	ldrh	r0, [r5, #2]
 801cbf4:	d019      	beq.n	801cc2a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 801cbf6:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
 801cbfa:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801cbfe:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801cc02:	fb08 f800 	mul.w	r8, r8, r0
 801cc06:	fb0a fe0e 	mul.w	lr, sl, lr
 801cc0a:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 801cc0e:	f108 0b20 	add.w	fp, r8, #32
 801cc12:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
 801cc16:	4486      	add	lr, r0
 801cc18:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 801cc1c:	0a00      	lsrs	r0, r0, #8
 801cc1e:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801cc22:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801cc26:	ea4e 0000 	orr.w	r0, lr, r0
 801cc2a:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 801cc2e:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 801cc32:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
 801cc36:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 801cc3a:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801cc3e:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801cc42:	ea4e 0909 	orr.w	r9, lr, r9
 801cc46:	ea4a 0000 	orr.w	r0, sl, r0
 801cc4a:	f1bc 0f00 	cmp.w	ip, #0
 801cc4e:	f000 8145 	beq.w	801cedc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>
 801cc52:	f102 4200 	add.w	r2, r2, #2147483648	@ 0x80000000
 801cc56:	3a01      	subs	r2, #1
 801cc58:	0052      	lsls	r2, r2, #1
 801cc5a:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801cc5c:	3202      	adds	r2, #2
 801cc5e:	2cff      	cmp	r4, #255	@ 0xff
 801cc60:	eb05 0e02 	add.w	lr, r5, r2
 801cc64:	5aaa      	ldrh	r2, [r5, r2]
 801cc66:	d018      	beq.n	801cc9a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801cc68:	f422 65fc 	bic.w	r5, r2, #2016	@ 0x7e0
 801cc6c:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801cc70:	fb04 fa02 	mul.w	sl, r4, r2
 801cc74:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801cc78:	fb08 f805 	mul.w	r8, r8, r5
 801cc7c:	f10a 0520 	add.w	r5, sl, #32
 801cc80:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 801cc84:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 801cc88:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801cc8c:	4442      	add	r2, r8
 801cc8e:	0a2d      	lsrs	r5, r5, #8
 801cc90:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 801cc94:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801cc98:	432a      	orrs	r2, r5
 801cc9a:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801cc9c:	f8be 5002 	ldrh.w	r5, [lr, #2]
 801cca0:	2cff      	cmp	r4, #255	@ 0xff
 801cca2:	d01a      	beq.n	801ccda <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 801cca4:	f425 6efc 	bic.w	lr, r5, #2016	@ 0x7e0
 801cca8:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801ccac:	fb04 fa05 	mul.w	sl, r4, r5
 801ccb0:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801ccb4:	fb08 f80e 	mul.w	r8, r8, lr
 801ccb8:	f10a 0e20 	add.w	lr, sl, #32
 801ccbc:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 801ccc0:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 801ccc4:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801ccc8:	4445      	add	r5, r8
 801ccca:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801ccce:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 801ccd2:	f40e 6efc 	and.w	lr, lr, #2016	@ 0x7e0
 801ccd6:	ea45 050e 	orr.w	r5, r5, lr
 801ccda:	fb1c fe01 	smulbb	lr, ip, r1
 801ccde:	ea4f 0eee 	mov.w	lr, lr, asr #3
 801cce2:	f1cc 0810 	rsb	r8, ip, #16
 801cce6:	eba8 0801 	sub.w	r8, r8, r1
 801ccea:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801ccee:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 801ccf2:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 801ccf6:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 801ccfa:	4341      	muls	r1, r0
 801ccfc:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801cd00:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801cd04:	ea4a 0202 	orr.w	r2, sl, r2
 801cd08:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 801cd0c:	fb09 1108 	mla	r1, r9, r8, r1
 801cd10:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801cd14:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
 801cd18:	fb0c 1102 	mla	r1, ip, r2, r1
 801cd1c:	ea4b 0505 	orr.w	r5, fp, r5
 801cd20:	fb0e 1e05 	mla	lr, lr, r5, r1
 801cd24:	ea4f 525e 	mov.w	r2, lr, lsr #21
 801cd28:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801cd2c:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801cd30:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 801cd34:	ea42 0e0e 	orr.w	lr, r2, lr
 801cd38:	fa1f f28e 	uxth.w	r2, lr
 801cd3c:	2bff      	cmp	r3, #255	@ 0xff
 801cd3e:	d103      	bne.n	801cd48 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801cd40:	9912      	ldr	r1, [sp, #72]	@ 0x48
 801cd42:	29ff      	cmp	r1, #255	@ 0xff
 801cd44:	f000 80de 	beq.w	801cf04 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>
 801cd48:	990a      	ldr	r1, [sp, #40]	@ 0x28
 801cd4a:	8838      	ldrh	r0, [r7, #0]
 801cd4c:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 801cd4e:	434b      	muls	r3, r1
 801cd50:	f103 0c01 	add.w	ip, r3, #1
 801cd54:	eb0c 2323 	add.w	r3, ip, r3, asr #8
 801cd58:	ea6f 2323 	mvn.w	r3, r3, asr #8
 801cd5c:	fa5f fc83 	uxtb.w	ip, r3
 801cd60:	1203      	asrs	r3, r0, #8
 801cd62:	1215      	asrs	r5, r2, #8
 801cd64:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 801cd68:	fb13 f30c 	smulbb	r3, r3, ip
 801cd6c:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 801cd70:	fb05 3501 	mla	r5, r5, r1, r3
 801cd74:	10c3      	asrs	r3, r0, #3
 801cd76:	10d1      	asrs	r1, r2, #3
 801cd78:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 801cd7c:	fb13 f30c 	smulbb	r3, r3, ip
 801cd80:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 801cd84:	fb01 3104 	mla	r1, r1, r4, r3
 801cd88:	00c3      	lsls	r3, r0, #3
 801cd8a:	00d2      	lsls	r2, r2, #3
 801cd8c:	b2db      	uxtb	r3, r3
 801cd8e:	b2d2      	uxtb	r2, r2
 801cd90:	fb13 f30c 	smulbb	r3, r3, ip
 801cd94:	b2ad      	uxth	r5, r5
 801cd96:	fb02 3304 	mla	r3, r2, r4, r3
 801cd9a:	b29a      	uxth	r2, r3
 801cd9c:	1c6b      	adds	r3, r5, #1
 801cd9e:	b289      	uxth	r1, r1
 801cda0:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801cda4:	1c53      	adds	r3, r2, #1
 801cda6:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801cdaa:	1c4a      	adds	r2, r1, #1
 801cdac:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801cdb0:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 801cdb4:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801cdb8:	0949      	lsrs	r1, r1, #5
 801cdba:	432b      	orrs	r3, r5
 801cdbc:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801cdc0:	430b      	orrs	r3, r1
 801cdc2:	803b      	strh	r3, [r7, #0]
 801cdc4:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 801cdc6:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
 801cdc8:	4413      	add	r3, r2
 801cdca:	9321      	str	r3, [sp, #132]	@ 0x84
 801cdcc:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 801cdce:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801cdd0:	441a      	add	r2, r3
 801cdd2:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 801cdd4:	9222      	str	r2, [sp, #136]	@ 0x88
 801cdd6:	3b01      	subs	r3, #1
 801cdd8:	3702      	adds	r7, #2
 801cdda:	9313      	str	r3, [sp, #76]	@ 0x4c
 801cddc:	e689      	b.n	801caf2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801cdde:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 801cde0:	9e23      	ldr	r6, [sp, #140]	@ 0x8c
 801cde2:	9c22      	ldr	r4, [sp, #136]	@ 0x88
 801cde4:	4433      	add	r3, r6
 801cde6:	9321      	str	r3, [sp, #132]	@ 0x84
 801cde8:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801cdea:	441c      	add	r4, r3
 801cdec:	9b08      	ldr	r3, [sp, #32]
 801cdee:	9422      	str	r4, [sp, #136]	@ 0x88
 801cdf0:	3b01      	subs	r3, #1
 801cdf2:	9308      	str	r3, [sp, #32]
 801cdf4:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801cdf6:	3302      	adds	r3, #2
 801cdf8:	9309      	str	r3, [sp, #36]	@ 0x24
 801cdfa:	e658      	b.n	801caae <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56>
 801cdfc:	d028      	beq.n	801ce50 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 801cdfe:	9b08      	ldr	r3, [sp, #32]
 801ce00:	9823      	ldr	r0, [sp, #140]	@ 0x8c
 801ce02:	9d21      	ldr	r5, [sp, #132]	@ 0x84
 801ce04:	3b01      	subs	r3, #1
 801ce06:	fb00 5003 	mla	r0, r0, r3, r5
 801ce0a:	1400      	asrs	r0, r0, #16
 801ce0c:	f53f ae6c 	bmi.w	801cae8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801ce10:	3901      	subs	r1, #1
 801ce12:	4288      	cmp	r0, r1
 801ce14:	f6bf ae68 	bge.w	801cae8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801ce18:	9924      	ldr	r1, [sp, #144]	@ 0x90
 801ce1a:	9822      	ldr	r0, [sp, #136]	@ 0x88
 801ce1c:	fb01 0303 	mla	r3, r1, r3, r0
 801ce20:	141b      	asrs	r3, r3, #16
 801ce22:	f53f ae61 	bmi.w	801cae8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801ce26:	3a01      	subs	r2, #1
 801ce28:	4293      	cmp	r3, r2
 801ce2a:	f6bf ae5d 	bge.w	801cae8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801ce2e:	9b08      	ldr	r3, [sp, #32]
 801ce30:	f8dd e024 	ldr.w	lr, [sp, #36]	@ 0x24
 801ce34:	9313      	str	r3, [sp, #76]	@ 0x4c
 801ce36:	f64f 061f 	movw	r6, #63519	@ 0xf81f
 801ce3a:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 801ce3c:	2b00      	cmp	r3, #0
 801ce3e:	f300 8082 	bgt.w	801cf46 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 801ce42:	9b08      	ldr	r3, [sp, #32]
 801ce44:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801ce48:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801ce4a:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801ce4e:	9309      	str	r3, [sp, #36]	@ 0x24
 801ce50:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801ce52:	2b00      	cmp	r3, #0
 801ce54:	f340 81ef 	ble.w	801d236 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7de>
 801ce58:	ee30 0a04 	vadd.f32	s0, s0, s8
 801ce5c:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801ce60:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801ce64:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801ce66:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801ce6a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801ce6e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801ce72:	eef0 6a62 	vmov.f32	s13, s5
 801ce76:	ee61 7a27 	vmul.f32	s15, s2, s15
 801ce7a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801ce7e:	ee77 2a62 	vsub.f32	s5, s14, s5
 801ce82:	edcd 6a21 	vstr	s13, [sp, #132]	@ 0x84
 801ce86:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801ce8a:	eef0 6a43 	vmov.f32	s13, s6
 801ce8e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801ce92:	ee12 2a90 	vmov	r2, s5
 801ce96:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801ce9a:	fb92 f3f3 	sdiv	r3, r2, r3
 801ce9e:	ee13 2a10 	vmov	r2, s6
 801cea2:	9323      	str	r3, [sp, #140]	@ 0x8c
 801cea4:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801cea6:	fb92 f3f3 	sdiv	r3, r2, r3
 801ceaa:	9324      	str	r3, [sp, #144]	@ 0x90
 801ceac:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801ceae:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801ceb0:	3b01      	subs	r3, #1
 801ceb2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801ceb6:	9311      	str	r3, [sp, #68]	@ 0x44
 801ceb8:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801ceba:	edcd 6a22 	vstr	s13, [sp, #136]	@ 0x88
 801cebe:	bf08      	it	eq
 801cec0:	4613      	moveq	r3, r2
 801cec2:	9308      	str	r3, [sp, #32]
 801cec4:	eeb0 3a67 	vmov.f32	s6, s15
 801cec8:	eef0 2a47 	vmov.f32	s5, s14
 801cecc:	e5e1      	b.n	801ca92 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801cece:	fb08 f505 	mul.w	r5, r8, r5
 801ced2:	fb09 5303 	mla	r3, r9, r3, r5
 801ced6:	e661      	b.n	801cb9c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x144>
 801ced8:	4681      	mov	r9, r0
 801ceda:	e688      	b.n	801cbee <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 801cedc:	f1c1 0210 	rsb	r2, r1, #16
 801cee0:	4341      	muls	r1, r0
 801cee2:	fb09 1902 	mla	r9, r9, r2, r1
 801cee6:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801ceea:	ea4f 5259 	mov.w	r2, r9, lsr #21
 801ceee:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801cef2:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801cef6:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 801cefa:	ea42 0909 	orr.w	r9, r2, r9
 801cefe:	fa1f f289 	uxth.w	r2, r9
 801cf02:	e71b      	b.n	801cd3c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 801cf04:	803a      	strh	r2, [r7, #0]
 801cf06:	e75d      	b.n	801cdc4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801cf08:	f115 0e01 	adds.w	lr, r5, #1
 801cf0c:	f53f af5a 	bmi.w	801cdc4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801cf10:	4572      	cmp	r2, lr
 801cf12:	f6ff af57 	blt.w	801cdc4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801cf16:	f110 0e01 	adds.w	lr, r0, #1
 801cf1a:	f53f af53 	bmi.w	801cdc4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801cf1e:	4573      	cmp	r3, lr
 801cf20:	f6ff af50 	blt.w	801cdc4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801cf24:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 801cf26:	9502      	str	r5, [sp, #8]
 801cf28:	b21b      	sxth	r3, r3
 801cf2a:	b212      	sxth	r2, r2
 801cf2c:	e9cd 0103 	strd	r0, r1, [sp, #12]
 801cf30:	9301      	str	r3, [sp, #4]
 801cf32:	9200      	str	r2, [sp, #0]
 801cf34:	e9cd c405 	strd	ip, r4, [sp, #20]
 801cf38:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	@ 0x2c
 801cf3c:	4639      	mov	r1, r7
 801cf3e:	9815      	ldr	r0, [sp, #84]	@ 0x54
 801cf40:	f7ff fc04 	bl	801c74c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>
 801cf44:	e73e      	b.n	801cdc4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801cf46:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 801cf48:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801cf4c:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 801cf4e:	f3c3 3503 	ubfx	r5, r3, #12, #4
 801cf52:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801cf54:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801cf58:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 801cf5a:	141f      	asrs	r7, r3, #16
 801cf5c:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 801cf5e:	141b      	asrs	r3, r3, #16
 801cf60:	fb01 3707 	mla	r7, r1, r7, r3
 801cf64:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801cf66:	fa1f fc82 	uxth.w	ip, r2
 801cf6a:	eb03 0a07 	add.w	sl, r3, r7
 801cf6e:	ea4f 100c 	mov.w	r0, ip, lsl #4
 801cf72:	f813 9007 	ldrb.w	r9, [r3, r7]
 801cf76:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801cf7a:	f5c0 7380 	rsb	r3, r0, #256	@ 0x100
 801cf7e:	b29b      	uxth	r3, r3
 801cf80:	2d00      	cmp	r5, #0
 801cf82:	f000 813d 	beq.w	801d200 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a8>
 801cf86:	f81a 4001 	ldrb.w	r4, [sl, r1]
 801cf8a:	940f      	str	r4, [sp, #60]	@ 0x3c
 801cf8c:	eb0a 0b01 	add.w	fp, sl, r1
 801cf90:	fa1f fa85 	uxth.w	sl, r5
 801cf94:	fb0a fc0c 	mul.w	ip, sl, ip
 801cf98:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 801cf9c:	fa1f fa8a 	uxth.w	sl, sl
 801cfa0:	eba0 000c 	sub.w	r0, r0, ip
 801cfa4:	eba3 030a 	sub.w	r3, r3, sl
 801cfa8:	b280      	uxth	r0, r0
 801cfaa:	fb08 f000 	mul.w	r0, r8, r0
 801cfae:	b29b      	uxth	r3, r3
 801cfb0:	fb09 0303 	mla	r3, r9, r3, r0
 801cfb4:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 801cfb6:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801cfba:	9410      	str	r4, [sp, #64]	@ 0x40
 801cfbc:	fb0a 3300 	mla	r3, sl, r0, r3
 801cfc0:	fb0c 3304 	mla	r3, ip, r4, r3
 801cfc4:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801cfc8:	2b00      	cmp	r3, #0
 801cfca:	f000 810b 	beq.w	801d1e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78c>
 801cfce:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 801cfd0:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801cfd2:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 801cfd6:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 801cfda:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 801cfde:	f000 8114 	beq.w	801d20a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b2>
 801cfe2:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
 801cfe6:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801cfea:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801cfee:	fb09 f707 	mul.w	r7, r9, r7
 801cff2:	fb0a fc0c 	mul.w	ip, sl, ip
 801cff6:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 801cffa:	f107 0b20 	add.w	fp, r7, #32
 801cffe:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
 801d002:	44cc      	add	ip, r9
 801d004:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 801d008:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801d00c:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801d010:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 801d014:	ea4c 0909 	orr.w	r9, ip, r9
 801d018:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
 801d01c:	8847      	ldrh	r7, [r0, #2]
 801d01e:	d019      	beq.n	801d054 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fc>
 801d020:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
 801d024:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801d028:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801d02c:	fb08 f807 	mul.w	r8, r8, r7
 801d030:	fb0a fc0c 	mul.w	ip, sl, ip
 801d034:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 801d038:	f108 0b20 	add.w	fp, r8, #32
 801d03c:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
 801d040:	44bc      	add	ip, r7
 801d042:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 801d046:	0a3f      	lsrs	r7, r7, #8
 801d048:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801d04c:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801d050:	ea4c 0707 	orr.w	r7, ip, r7
 801d054:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 801d058:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 801d05c:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 801d060:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 801d064:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801d068:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
 801d06c:	ea4c 0909 	orr.w	r9, ip, r9
 801d070:	ea4a 0707 	orr.w	r7, sl, r7
 801d074:	2d00      	cmp	r5, #0
 801d076:	f000 80ca 	beq.w	801d20e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b6>
 801d07a:	f101 4100 	add.w	r1, r1, #2147483648	@ 0x80000000
 801d07e:	3901      	subs	r1, #1
 801d080:	0049      	lsls	r1, r1, #1
 801d082:	3102      	adds	r1, #2
 801d084:	eb00 0c01 	add.w	ip, r0, r1
 801d088:	5a41      	ldrh	r1, [r0, r1]
 801d08a:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 801d08c:	28ff      	cmp	r0, #255	@ 0xff
 801d08e:	d019      	beq.n	801d0c4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66c>
 801d090:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 801d092:	f421 60fc 	bic.w	r0, r1, #2016	@ 0x7e0
 801d096:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801d09a:	fb04 fa01 	mul.w	sl, r4, r1
 801d09e:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801d0a2:	fb08 f800 	mul.w	r8, r8, r0
 801d0a6:	f10a 0020 	add.w	r0, sl, #32
 801d0aa:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 801d0ae:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 801d0b2:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801d0b6:	4441      	add	r1, r8
 801d0b8:	0a00      	lsrs	r0, r0, #8
 801d0ba:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 801d0be:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801d0c2:	4301      	orrs	r1, r0
 801d0c4:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801d0c6:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 801d0ca:	2cff      	cmp	r4, #255	@ 0xff
 801d0cc:	d01a      	beq.n	801d104 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ac>
 801d0ce:	f420 6cfc 	bic.w	ip, r0, #2016	@ 0x7e0
 801d0d2:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801d0d6:	fb04 fa00 	mul.w	sl, r4, r0
 801d0da:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801d0de:	fb08 f80c 	mul.w	r8, r8, ip
 801d0e2:	f10a 0c20 	add.w	ip, sl, #32
 801d0e6:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 801d0ea:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 801d0ee:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801d0f2:	4440      	add	r0, r8
 801d0f4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801d0f8:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 801d0fc:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 801d100:	ea40 000c 	orr.w	r0, r0, ip
 801d104:	fb15 fc02 	smulbb	ip, r5, r2
 801d108:	ea4f 0cec 	mov.w	ip, ip, asr #3
 801d10c:	f1c5 0810 	rsb	r8, r5, #16
 801d110:	eba8 0802 	sub.w	r8, r8, r2
 801d114:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 801d118:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 801d11c:	437a      	muls	r2, r7
 801d11e:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 801d122:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 801d126:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801d12a:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 801d12e:	fb09 2208 	mla	r2, r9, r8, r2
 801d132:	ea4a 0101 	orr.w	r1, sl, r1
 801d136:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 801d13a:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801d13e:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801d142:	fb05 2201 	mla	r2, r5, r1, r2
 801d146:	ea4b 0000 	orr.w	r0, fp, r0
 801d14a:	fb0c 2200 	mla	r2, ip, r0, r2
 801d14e:	0d57      	lsrs	r7, r2, #21
 801d150:	0952      	lsrs	r2, r2, #5
 801d152:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801d156:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801d15a:	433a      	orrs	r2, r7
 801d15c:	2bff      	cmp	r3, #255	@ 0xff
 801d15e:	b292      	uxth	r2, r2
 801d160:	d102      	bne.n	801d168 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 801d162:	9912      	ldr	r1, [sp, #72]	@ 0x48
 801d164:	29ff      	cmp	r1, #255	@ 0xff
 801d166:	d063      	beq.n	801d230 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7d8>
 801d168:	980a      	ldr	r0, [sp, #40]	@ 0x28
 801d16a:	f8be 1000 	ldrh.w	r1, [lr]
 801d16e:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 801d170:	4343      	muls	r3, r0
 801d172:	1c58      	adds	r0, r3, #1
 801d174:	eb00 2323 	add.w	r3, r0, r3, asr #8
 801d178:	ea6f 2323 	mvn.w	r3, r3, asr #8
 801d17c:	1208      	asrs	r0, r1, #8
 801d17e:	b2db      	uxtb	r3, r3
 801d180:	1215      	asrs	r5, r2, #8
 801d182:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801d186:	fb10 f003 	smulbb	r0, r0, r3
 801d18a:	10cf      	asrs	r7, r1, #3
 801d18c:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 801d190:	00c9      	lsls	r1, r1, #3
 801d192:	fb05 0504 	mla	r5, r5, r4, r0
 801d196:	b2c9      	uxtb	r1, r1
 801d198:	10d0      	asrs	r0, r2, #3
 801d19a:	00d2      	lsls	r2, r2, #3
 801d19c:	fb11 f103 	smulbb	r1, r1, r3
 801d1a0:	b2d2      	uxtb	r2, r2
 801d1a2:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801d1a6:	fb02 1204 	mla	r2, r2, r4, r1
 801d1aa:	fb17 f703 	smulbb	r7, r7, r3
 801d1ae:	b2ad      	uxth	r5, r5
 801d1b0:	b292      	uxth	r2, r2
 801d1b2:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 801d1b6:	fb00 7004 	mla	r0, r0, r4, r7
 801d1ba:	1c6b      	adds	r3, r5, #1
 801d1bc:	1c57      	adds	r7, r2, #1
 801d1be:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801d1c2:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 801d1c6:	b280      	uxth	r0, r0
 801d1c8:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801d1cc:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 801d1d0:	433d      	orrs	r5, r7
 801d1d2:	1c47      	adds	r7, r0, #1
 801d1d4:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 801d1d8:	097f      	lsrs	r7, r7, #5
 801d1da:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801d1de:	433d      	orrs	r5, r7
 801d1e0:	f8ae 5000 	strh.w	r5, [lr]
 801d1e4:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 801d1e6:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
 801d1e8:	4413      	add	r3, r2
 801d1ea:	9321      	str	r3, [sp, #132]	@ 0x84
 801d1ec:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 801d1ee:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801d1f0:	441a      	add	r2, r3
 801d1f2:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 801d1f4:	9222      	str	r2, [sp, #136]	@ 0x88
 801d1f6:	3b01      	subs	r3, #1
 801d1f8:	f10e 0e02 	add.w	lr, lr, #2
 801d1fc:	9313      	str	r3, [sp, #76]	@ 0x4c
 801d1fe:	e61c      	b.n	801ce3a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e2>
 801d200:	fb08 f000 	mul.w	r0, r8, r0
 801d204:	fb09 0303 	mla	r3, r9, r3, r0
 801d208:	e6dc      	b.n	801cfc4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56c>
 801d20a:	46b9      	mov	r9, r7
 801d20c:	e704      	b.n	801d018 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c0>
 801d20e:	f1c2 0110 	rsb	r1, r2, #16
 801d212:	437a      	muls	r2, r7
 801d214:	fb09 2901 	mla	r9, r9, r1, r2
 801d218:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801d21c:	ea4f 5059 	mov.w	r0, r9, lsr #21
 801d220:	ea4f 1259 	mov.w	r2, r9, lsr #5
 801d224:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801d228:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801d22c:	4302      	orrs	r2, r0
 801d22e:	e795      	b.n	801d15c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x704>
 801d230:	f8ae 2000 	strh.w	r2, [lr]
 801d234:	e7d6      	b.n	801d1e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78c>
 801d236:	b017      	add	sp, #92	@ 0x5c
 801d238:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801d23c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 801d23c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d240:	b085      	sub	sp, #20
 801d242:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	@ 0x40
 801d246:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	@ 0x38
 801d24a:	9103      	str	r1, [sp, #12]
 801d24c:	fb00 7406 	mla	r4, r0, r6, r7
 801d250:	eb03 0544 	add.w	r5, r3, r4, lsl #1
 801d254:	2800      	cmp	r0, #0
 801d256:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	@ 0x3c
 801d25a:	f89d 1048 	ldrb.w	r1, [sp, #72]	@ 0x48
 801d25e:	f89d e04c 	ldrb.w	lr, [sp, #76]	@ 0x4c
 801d262:	9501      	str	r5, [sp, #4]
 801d264:	eb02 0904 	add.w	r9, r2, r4
 801d268:	f2c0 8141 	blt.w	801d4ee <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 801d26c:	4583      	cmp	fp, r0
 801d26e:	f340 813e 	ble.w	801d4ee <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 801d272:	2f00      	cmp	r7, #0
 801d274:	f2c0 8137 	blt.w	801d4e6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 801d278:	42be      	cmp	r6, r7
 801d27a:	f340 8134 	ble.w	801d4e6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 801d27e:	f812 c004 	ldrb.w	ip, [r2, r4]
 801d282:	f833 3014 	ldrh.w	r3, [r3, r4, lsl #1]
 801d286:	ea4f 02ec 	mov.w	r2, ip, asr #3
 801d28a:	f423 65fc 	bic.w	r5, r3, #2016	@ 0x7e0
 801d28e:	4355      	muls	r5, r2
 801d290:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801d294:	f64f 041f 	movw	r4, #63519	@ 0xf81f
 801d298:	fb0c f203 	mul.w	r2, ip, r3
 801d29c:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 801d2a0:	f605 0501 	addw	r5, r5, #2049	@ 0x801
 801d2a4:	441d      	add	r5, r3
 801d2a6:	f102 0320 	add.w	r3, r2, #32
 801d2aa:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801d2ae:	0a1b      	lsrs	r3, r3, #8
 801d2b0:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 801d2b4:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801d2b8:	431c      	orrs	r4, r3
 801d2ba:	1c7b      	adds	r3, r7, #1
 801d2bc:	f100 811c 	bmi.w	801d4f8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 801d2c0:	429e      	cmp	r6, r3
 801d2c2:	f340 8119 	ble.w	801d4f8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 801d2c6:	2900      	cmp	r1, #0
 801d2c8:	f000 8119 	beq.w	801d4fe <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c2>
 801d2cc:	9a01      	ldr	r2, [sp, #4]
 801d2ce:	f899 3001 	ldrb.w	r3, [r9, #1]
 801d2d2:	8855      	ldrh	r5, [r2, #2]
 801d2d4:	ea4f 08e3 	mov.w	r8, r3, asr #3
 801d2d8:	f425 62fc 	bic.w	r2, r5, #2016	@ 0x7e0
 801d2dc:	fb08 f802 	mul.w	r8, r8, r2
 801d2e0:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801d2e4:	f64f 021f 	movw	r2, #63519	@ 0xf81f
 801d2e8:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 801d2ec:	435d      	muls	r5, r3
 801d2ee:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801d2f2:	44d0      	add	r8, sl
 801d2f4:	f105 0a20 	add.w	sl, r5, #32
 801d2f8:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 801d2fc:	0a2d      	lsrs	r5, r5, #8
 801d2fe:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 801d302:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801d306:	432a      	orrs	r2, r5
 801d308:	3001      	adds	r0, #1
 801d30a:	f100 80fe 	bmi.w	801d50a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 801d30e:	4583      	cmp	fp, r0
 801d310:	f340 80fb 	ble.w	801d50a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 801d314:	f1be 0f00 	cmp.w	lr, #0
 801d318:	f000 80fc 	beq.w	801d514 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2d8>
 801d31c:	2f00      	cmp	r7, #0
 801d31e:	f2c0 80f1 	blt.w	801d504 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 801d322:	42be      	cmp	r6, r7
 801d324:	f340 80ee 	ble.w	801d504 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 801d328:	9801      	ldr	r0, [sp, #4]
 801d32a:	f819 5006 	ldrb.w	r5, [r9, r6]
 801d32e:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 801d332:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801d336:	f428 60fc 	bic.w	r0, r8, #2016	@ 0x7e0
 801d33a:	fb0a fa00 	mul.w	sl, sl, r0
 801d33e:	f64f 0b1f 	movw	fp, #63519	@ 0xf81f
 801d342:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 801d346:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 801d34a:	fb05 f808 	mul.w	r8, r5, r8
 801d34e:	f60a 0a01 	addw	sl, sl, #2049	@ 0x801
 801d352:	4482      	add	sl, r0
 801d354:	f108 0020 	add.w	r0, r8, #32
 801d358:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801d35c:	0a00      	lsrs	r0, r0, #8
 801d35e:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 801d362:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801d366:	ea4b 0b00 	orr.w	fp, fp, r0
 801d36a:	3701      	adds	r7, #1
 801d36c:	f100 80d7 	bmi.w	801d51e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 801d370:	42be      	cmp	r6, r7
 801d372:	f340 80d4 	ble.w	801d51e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 801d376:	2900      	cmp	r1, #0
 801d378:	f000 80d4 	beq.w	801d524 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e8>
 801d37c:	3601      	adds	r6, #1
 801d37e:	9801      	ldr	r0, [sp, #4]
 801d380:	f819 7006 	ldrb.w	r7, [r9, r6]
 801d384:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 801d388:	ea4f 09e7 	mov.w	r9, r7, asr #3
 801d38c:	f420 66fc 	bic.w	r6, r0, #2016	@ 0x7e0
 801d390:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801d394:	fb09 f906 	mul.w	r9, r9, r6
 801d398:	fb07 f800 	mul.w	r8, r7, r0
 801d39c:	f64f 001f 	movw	r0, #63519	@ 0xf81f
 801d3a0:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 801d3a4:	f609 0901 	addw	r9, r9, #2049	@ 0x801
 801d3a8:	44d1      	add	r9, sl
 801d3aa:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 801d3ae:	f108 0020 	add.w	r0, r8, #32
 801d3b2:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801d3b6:	0a00      	lsrs	r0, r0, #8
 801d3b8:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801d3bc:	4330      	orrs	r0, r6
 801d3be:	b28e      	uxth	r6, r1
 801d3c0:	fa1f f98e 	uxth.w	r9, lr
 801d3c4:	fb06 f809 	mul.w	r8, r6, r9
 801d3c8:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 801d3cc:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 801d3d0:	0136      	lsls	r6, r6, #4
 801d3d2:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801d3d6:	f424 64fc 	bic.w	r4, r4, #2016	@ 0x7e0
 801d3da:	9601      	str	r6, [sp, #4]
 801d3dc:	ea4a 0404 	orr.w	r4, sl, r4
 801d3e0:	fa1f f689 	uxth.w	r6, r9
 801d3e4:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801d3e8:	fb11 f90e 	smulbb	r9, r1, lr
 801d3ec:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 801d3f0:	9602      	str	r6, [sp, #8]
 801d3f2:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801d3f6:	4626      	mov	r6, r4
 801d3f8:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801d3fc:	f1ce 0410 	rsb	r4, lr, #16
 801d400:	1a64      	subs	r4, r4, r1
 801d402:	ea4a 0202 	orr.w	r2, sl, r2
 801d406:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 801d40a:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 801d40e:	434a      	muls	r2, r1
 801d410:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 801d414:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801d418:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801d41c:	fb04 2406 	mla	r4, r4, r6, r2
 801d420:	ea4a 0000 	orr.w	r0, sl, r0
 801d424:	fb09 4200 	mla	r2, r9, r0, r4
 801d428:	ea4f 440b 	mov.w	r4, fp, lsl #16
 801d42c:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 801d430:	9801      	ldr	r0, [sp, #4]
 801d432:	9903      	ldr	r1, [sp, #12]
 801d434:	f42b 6bfc 	bic.w	fp, fp, #2016	@ 0x7e0
 801d438:	ea44 0b0b 	orr.w	fp, r4, fp
 801d43c:	9c02      	ldr	r4, [sp, #8]
 801d43e:	8809      	ldrh	r1, [r1, #0]
 801d440:	f5c0 7080 	rsb	r0, r0, #256	@ 0x100
 801d444:	1b00      	subs	r0, r0, r4
 801d446:	9c01      	ldr	r4, [sp, #4]
 801d448:	eba4 0608 	sub.w	r6, r4, r8
 801d44c:	b2b6      	uxth	r6, r6
 801d44e:	b280      	uxth	r0, r0
 801d450:	4373      	muls	r3, r6
 801d452:	fb0c 3300 	mla	r3, ip, r0, r3
 801d456:	9802      	ldr	r0, [sp, #8]
 801d458:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 801d45c:	fb00 3505 	mla	r5, r0, r5, r3
 801d460:	fb0e 2e0b 	mla	lr, lr, fp, r2
 801d464:	fb08 5707 	mla	r7, r8, r7, r5
 801d468:	ea4f 525e 	mov.w	r2, lr, lsr #21
 801d46c:	120b      	asrs	r3, r1, #8
 801d46e:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801d472:	ea6f 2727 	mvn.w	r7, r7, asr #8
 801d476:	b2ff      	uxtb	r7, r7
 801d478:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801d47c:	10c8      	asrs	r0, r1, #3
 801d47e:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 801d482:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 801d486:	00c9      	lsls	r1, r1, #3
 801d488:	437b      	muls	r3, r7
 801d48a:	ea42 0e0e 	orr.w	lr, r2, lr
 801d48e:	b2c9      	uxtb	r1, r1
 801d490:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 801d494:	fa1f f28e 	uxth.w	r2, lr
 801d498:	4378      	muls	r0, r7
 801d49a:	434f      	muls	r7, r1
 801d49c:	1c59      	adds	r1, r3, #1
 801d49e:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 801d4a2:	1213      	asrs	r3, r2, #8
 801d4a4:	f023 0307 	bic.w	r3, r3, #7
 801d4a8:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801d4ac:	1c41      	adds	r1, r0, #1
 801d4ae:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 801d4b2:	10d1      	asrs	r1, r2, #3
 801d4b4:	f021 0103 	bic.w	r1, r1, #3
 801d4b8:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 801d4bc:	021b      	lsls	r3, r3, #8
 801d4be:	00c9      	lsls	r1, r1, #3
 801d4c0:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801d4c4:	f403 4378 	and.w	r3, r3, #63488	@ 0xf800
 801d4c8:	430b      	orrs	r3, r1
 801d4ca:	1c79      	adds	r1, r7, #1
 801d4cc:	eb01 2717 	add.w	r7, r1, r7, lsr #8
 801d4d0:	00d2      	lsls	r2, r2, #3
 801d4d2:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 801d4d6:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801d4da:	431a      	orrs	r2, r3
 801d4dc:	9b03      	ldr	r3, [sp, #12]
 801d4de:	801a      	strh	r2, [r3, #0]
 801d4e0:	b005      	add	sp, #20
 801d4e2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d4e6:	f04f 0c00 	mov.w	ip, #0
 801d4ea:	4664      	mov	r4, ip
 801d4ec:	e6e5      	b.n	801d2ba <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7e>
 801d4ee:	2300      	movs	r3, #0
 801d4f0:	469c      	mov	ip, r3
 801d4f2:	461a      	mov	r2, r3
 801d4f4:	461c      	mov	r4, r3
 801d4f6:	e707      	b.n	801d308 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 801d4f8:	2300      	movs	r3, #0
 801d4fa:	461a      	mov	r2, r3
 801d4fc:	e704      	b.n	801d308 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 801d4fe:	460b      	mov	r3, r1
 801d500:	460a      	mov	r2, r1
 801d502:	e701      	b.n	801d308 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 801d504:	2500      	movs	r5, #0
 801d506:	46ab      	mov	fp, r5
 801d508:	e72f      	b.n	801d36a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x12e>
 801d50a:	2700      	movs	r7, #0
 801d50c:	463d      	mov	r5, r7
 801d50e:	4638      	mov	r0, r7
 801d510:	46bb      	mov	fp, r7
 801d512:	e754      	b.n	801d3be <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 801d514:	4677      	mov	r7, lr
 801d516:	4675      	mov	r5, lr
 801d518:	4670      	mov	r0, lr
 801d51a:	46f3      	mov	fp, lr
 801d51c:	e74f      	b.n	801d3be <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 801d51e:	2700      	movs	r7, #0
 801d520:	4638      	mov	r0, r7
 801d522:	e74c      	b.n	801d3be <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 801d524:	460f      	mov	r7, r1
 801d526:	4608      	mov	r0, r1
 801d528:	e749      	b.n	801d3be <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
	...

0801d52c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801d52c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d530:	b093      	sub	sp, #76	@ 0x4c
 801d532:	9210      	str	r2, [sp, #64]	@ 0x40
 801d534:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 801d536:	910e      	str	r1, [sp, #56]	@ 0x38
 801d538:	9306      	str	r3, [sp, #24]
 801d53a:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	@ 0x88
 801d53e:	9011      	str	r0, [sp, #68]	@ 0x44
 801d540:	6850      	ldr	r0, [r2, #4]
 801d542:	6812      	ldr	r2, [r2, #0]
 801d544:	fb00 1303 	mla	r3, r0, r3, r1
 801d548:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801d54c:	9307      	str	r3, [sp, #28]
 801d54e:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801d550:	681b      	ldr	r3, [r3, #0]
 801d552:	9308      	str	r3, [sp, #32]
 801d554:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801d556:	685b      	ldr	r3, [r3, #4]
 801d558:	9309      	str	r3, [sp, #36]	@ 0x24
 801d55a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801d55c:	2b00      	cmp	r3, #0
 801d55e:	dc03      	bgt.n	801d568 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801d560:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801d562:	2b00      	cmp	r3, #0
 801d564:	f340 83b4 	ble.w	801dcd0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 801d568:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801d56a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801d56e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801d572:	1e48      	subs	r0, r1, #1
 801d574:	1e55      	subs	r5, r2, #1
 801d576:	9b06      	ldr	r3, [sp, #24]
 801d578:	2b00      	cmp	r3, #0
 801d57a:	f340 8163 	ble.w	801d844 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x318>
 801d57e:	9e1d      	ldr	r6, [sp, #116]	@ 0x74
 801d580:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 801d582:	1436      	asrs	r6, r6, #16
 801d584:	ea4f 4323 	mov.w	r3, r3, asr #16
 801d588:	d406      	bmi.n	801d598 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801d58a:	4286      	cmp	r6, r0
 801d58c:	da04      	bge.n	801d598 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801d58e:	2b00      	cmp	r3, #0
 801d590:	db02      	blt.n	801d598 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801d592:	42ab      	cmp	r3, r5
 801d594:	f2c0 8157 	blt.w	801d846 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31a>
 801d598:	3601      	adds	r6, #1
 801d59a:	f100 8144 	bmi.w	801d826 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 801d59e:	42b1      	cmp	r1, r6
 801d5a0:	f2c0 8141 	blt.w	801d826 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 801d5a4:	3301      	adds	r3, #1
 801d5a6:	f100 813e 	bmi.w	801d826 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 801d5aa:	429a      	cmp	r2, r3
 801d5ac:	f2c0 813b 	blt.w	801d826 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 801d5b0:	9b06      	ldr	r3, [sp, #24]
 801d5b2:	9f07      	ldr	r7, [sp, #28]
 801d5b4:	930f      	str	r3, [sp, #60]	@ 0x3c
 801d5b6:	f64f 061f 	movw	r6, #63519	@ 0xf81f
 801d5ba:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801d5bc:	2b00      	cmp	r3, #0
 801d5be:	f340 8164 	ble.w	801d88a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35e>
 801d5c2:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 801d5c4:	9d1d      	ldr	r5, [sp, #116]	@ 0x74
 801d5c6:	1418      	asrs	r0, r3, #16
 801d5c8:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 801d5ca:	f3c3 3103 	ubfx	r1, r3, #12, #4
 801d5ce:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 801d5d0:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 801d5d4:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801d5d6:	142d      	asrs	r5, r5, #16
 801d5d8:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 801d5dc:	f100 81ee 	bmi.w	801d9bc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 801d5e0:	f102 3eff 	add.w	lr, r2, #4294967295
 801d5e4:	4575      	cmp	r5, lr
 801d5e6:	f280 81e9 	bge.w	801d9bc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 801d5ea:	2800      	cmp	r0, #0
 801d5ec:	f2c0 81e6 	blt.w	801d9bc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 801d5f0:	f103 3eff 	add.w	lr, r3, #4294967295
 801d5f4:	4570      	cmp	r0, lr
 801d5f6:	f280 81e1 	bge.w	801d9bc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 801d5fa:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801d5fc:	b212      	sxth	r2, r2
 801d5fe:	fb00 5002 	mla	r0, r0, r2, r5
 801d602:	fa1f fe81 	uxth.w	lr, r1
 801d606:	eb03 0a00 	add.w	sl, r3, r0
 801d60a:	ea4f 150e 	mov.w	r5, lr, lsl #4
 801d60e:	f813 9000 	ldrb.w	r9, [r3, r0]
 801d612:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801d616:	f5c5 7380 	rsb	r3, r5, #256	@ 0x100
 801d61a:	b29b      	uxth	r3, r3
 801d61c:	f1bc 0f00 	cmp.w	ip, #0
 801d620:	f000 8179 	beq.w	801d916 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 801d624:	f81a 4002 	ldrb.w	r4, [sl, r2]
 801d628:	940a      	str	r4, [sp, #40]	@ 0x28
 801d62a:	eb0a 0b02 	add.w	fp, sl, r2
 801d62e:	fa1f fa8c 	uxth.w	sl, ip
 801d632:	fb0a fe0e 	mul.w	lr, sl, lr
 801d636:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 801d63a:	fa1f fa8a 	uxth.w	sl, sl
 801d63e:	eba5 050e 	sub.w	r5, r5, lr
 801d642:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801d646:	940b      	str	r4, [sp, #44]	@ 0x2c
 801d648:	eba3 030a 	sub.w	r3, r3, sl
 801d64c:	b2ad      	uxth	r5, r5
 801d64e:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 801d650:	b29b      	uxth	r3, r3
 801d652:	fb08 f505 	mul.w	r5, r8, r5
 801d656:	fb09 5303 	mla	r3, r9, r3, r5
 801d65a:	fb0a 3304 	mla	r3, sl, r4, r3
 801d65e:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801d660:	fb0e 3304 	mla	r3, lr, r4, r3
 801d664:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801d668:	2b00      	cmp	r3, #0
 801d66a:	f000 80cf 	beq.w	801d80c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801d66e:	9c08      	ldr	r4, [sp, #32]
 801d670:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 801d674:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 801d678:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 801d67c:	f000 8150 	beq.w	801d920 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
 801d680:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
 801d684:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801d688:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801d68c:	fb09 f000 	mul.w	r0, r9, r0
 801d690:	fb0a fe0e 	mul.w	lr, sl, lr
 801d694:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 801d698:	f100 0b20 	add.w	fp, r0, #32
 801d69c:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
 801d6a0:	44ce      	add	lr, r9
 801d6a2:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 801d6a6:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801d6aa:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801d6ae:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 801d6b2:	ea4e 0909 	orr.w	r9, lr, r9
 801d6b6:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
 801d6ba:	8868      	ldrh	r0, [r5, #2]
 801d6bc:	d019      	beq.n	801d6f2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 801d6be:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
 801d6c2:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801d6c6:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801d6ca:	fb08 f800 	mul.w	r8, r8, r0
 801d6ce:	fb0a fe0e 	mul.w	lr, sl, lr
 801d6d2:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 801d6d6:	f108 0b20 	add.w	fp, r8, #32
 801d6da:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
 801d6de:	4486      	add	lr, r0
 801d6e0:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 801d6e4:	0a00      	lsrs	r0, r0, #8
 801d6e6:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801d6ea:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801d6ee:	ea4e 0000 	orr.w	r0, lr, r0
 801d6f2:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 801d6f6:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 801d6fa:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
 801d6fe:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 801d702:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801d706:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801d70a:	ea4e 0909 	orr.w	r9, lr, r9
 801d70e:	ea4a 0000 	orr.w	r0, sl, r0
 801d712:	f1bc 0f00 	cmp.w	ip, #0
 801d716:	f000 8105 	beq.w	801d924 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 801d71a:	f102 4200 	add.w	r2, r2, #2147483648	@ 0x80000000
 801d71e:	3a01      	subs	r2, #1
 801d720:	0052      	lsls	r2, r2, #1
 801d722:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 801d724:	3202      	adds	r2, #2
 801d726:	2cff      	cmp	r4, #255	@ 0xff
 801d728:	eb05 0e02 	add.w	lr, r5, r2
 801d72c:	5aaa      	ldrh	r2, [r5, r2]
 801d72e:	d018      	beq.n	801d762 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 801d730:	f422 65fc 	bic.w	r5, r2, #2016	@ 0x7e0
 801d734:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801d738:	fb04 fa02 	mul.w	sl, r4, r2
 801d73c:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801d740:	fb08 f805 	mul.w	r8, r8, r5
 801d744:	f10a 0520 	add.w	r5, sl, #32
 801d748:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 801d74c:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 801d750:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801d754:	4442      	add	r2, r8
 801d756:	0a2d      	lsrs	r5, r5, #8
 801d758:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 801d75c:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801d760:	432a      	orrs	r2, r5
 801d762:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801d764:	f8be 5002 	ldrh.w	r5, [lr, #2]
 801d768:	2cff      	cmp	r4, #255	@ 0xff
 801d76a:	d01a      	beq.n	801d7a2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 801d76c:	f425 6efc 	bic.w	lr, r5, #2016	@ 0x7e0
 801d770:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801d774:	fb04 fa05 	mul.w	sl, r4, r5
 801d778:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801d77c:	fb08 f80e 	mul.w	r8, r8, lr
 801d780:	f10a 0e20 	add.w	lr, sl, #32
 801d784:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 801d788:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 801d78c:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801d790:	4445      	add	r5, r8
 801d792:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801d796:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 801d79a:	f40e 6efc 	and.w	lr, lr, #2016	@ 0x7e0
 801d79e:	ea45 050e 	orr.w	r5, r5, lr
 801d7a2:	fb1c fe01 	smulbb	lr, ip, r1
 801d7a6:	ea4f 0eee 	mov.w	lr, lr, asr #3
 801d7aa:	f1cc 0810 	rsb	r8, ip, #16
 801d7ae:	eba8 0801 	sub.w	r8, r8, r1
 801d7b2:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801d7b6:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 801d7ba:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 801d7be:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 801d7c2:	4341      	muls	r1, r0
 801d7c4:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801d7c8:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801d7cc:	ea4a 0202 	orr.w	r2, sl, r2
 801d7d0:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 801d7d4:	fb09 1108 	mla	r1, r9, r8, r1
 801d7d8:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801d7dc:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
 801d7e0:	fb0c 1102 	mla	r1, ip, r2, r1
 801d7e4:	ea4b 0505 	orr.w	r5, fp, r5
 801d7e8:	fb0e 1e05 	mla	lr, lr, r5, r1
 801d7ec:	ea4f 525e 	mov.w	r2, lr, lsr #21
 801d7f0:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801d7f4:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801d7f8:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 801d7fc:	ea42 0e0e 	orr.w	lr, r2, lr
 801d800:	fa1f f28e 	uxth.w	r2, lr
 801d804:	2bff      	cmp	r3, #255	@ 0xff
 801d806:	f040 80a1 	bne.w	801d94c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x420>
 801d80a:	803a      	strh	r2, [r7, #0]
 801d80c:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 801d80e:	9a1f      	ldr	r2, [sp, #124]	@ 0x7c
 801d810:	4413      	add	r3, r2
 801d812:	931d      	str	r3, [sp, #116]	@ 0x74
 801d814:	9a1e      	ldr	r2, [sp, #120]	@ 0x78
 801d816:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801d818:	441a      	add	r2, r3
 801d81a:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801d81c:	921e      	str	r2, [sp, #120]	@ 0x78
 801d81e:	3b01      	subs	r3, #1
 801d820:	3702      	adds	r7, #2
 801d822:	930f      	str	r3, [sp, #60]	@ 0x3c
 801d824:	e6c9      	b.n	801d5ba <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801d826:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 801d828:	9e1f      	ldr	r6, [sp, #124]	@ 0x7c
 801d82a:	9c1e      	ldr	r4, [sp, #120]	@ 0x78
 801d82c:	4433      	add	r3, r6
 801d82e:	931d      	str	r3, [sp, #116]	@ 0x74
 801d830:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801d832:	441c      	add	r4, r3
 801d834:	9b06      	ldr	r3, [sp, #24]
 801d836:	941e      	str	r4, [sp, #120]	@ 0x78
 801d838:	3b01      	subs	r3, #1
 801d83a:	9306      	str	r3, [sp, #24]
 801d83c:	9b07      	ldr	r3, [sp, #28]
 801d83e:	3302      	adds	r3, #2
 801d840:	9307      	str	r3, [sp, #28]
 801d842:	e698      	b.n	801d576 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801d844:	d028      	beq.n	801d898 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801d846:	9b06      	ldr	r3, [sp, #24]
 801d848:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 801d84a:	9d1d      	ldr	r5, [sp, #116]	@ 0x74
 801d84c:	3b01      	subs	r3, #1
 801d84e:	fb00 5003 	mla	r0, r0, r3, r5
 801d852:	1400      	asrs	r0, r0, #16
 801d854:	f53f aeac 	bmi.w	801d5b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801d858:	3901      	subs	r1, #1
 801d85a:	4288      	cmp	r0, r1
 801d85c:	f6bf aea8 	bge.w	801d5b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801d860:	9920      	ldr	r1, [sp, #128]	@ 0x80
 801d862:	981e      	ldr	r0, [sp, #120]	@ 0x78
 801d864:	fb01 0303 	mla	r3, r1, r3, r0
 801d868:	141b      	asrs	r3, r3, #16
 801d86a:	f53f aea1 	bmi.w	801d5b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801d86e:	3a01      	subs	r2, #1
 801d870:	4293      	cmp	r3, r2
 801d872:	f6bf ae9d 	bge.w	801d5b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801d876:	9b06      	ldr	r3, [sp, #24]
 801d878:	f8dd e01c 	ldr.w	lr, [sp, #28]
 801d87c:	930f      	str	r3, [sp, #60]	@ 0x3c
 801d87e:	f64f 061f 	movw	r6, #63519	@ 0xf81f
 801d882:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801d884:	2b00      	cmp	r3, #0
 801d886:	f300 80b6 	bgt.w	801d9f6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ca>
 801d88a:	9b06      	ldr	r3, [sp, #24]
 801d88c:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801d890:	9b07      	ldr	r3, [sp, #28]
 801d892:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801d896:	9307      	str	r3, [sp, #28]
 801d898:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801d89a:	2b00      	cmp	r3, #0
 801d89c:	f340 8218 	ble.w	801dcd0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 801d8a0:	ee30 0a04 	vadd.f32	s0, s0, s8
 801d8a4:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801d8a8:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801d8ac:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801d8ae:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801d8b2:	ee31 1a05 	vadd.f32	s2, s2, s10
 801d8b6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801d8ba:	eef0 6a62 	vmov.f32	s13, s5
 801d8be:	ee61 7a27 	vmul.f32	s15, s2, s15
 801d8c2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801d8c6:	ee77 2a62 	vsub.f32	s5, s14, s5
 801d8ca:	edcd 6a1d 	vstr	s13, [sp, #116]	@ 0x74
 801d8ce:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801d8d2:	eef0 6a43 	vmov.f32	s13, s6
 801d8d6:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801d8da:	ee12 2a90 	vmov	r2, s5
 801d8de:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801d8e2:	fb92 f3f3 	sdiv	r3, r2, r3
 801d8e6:	ee13 2a10 	vmov	r2, s6
 801d8ea:	931f      	str	r3, [sp, #124]	@ 0x7c
 801d8ec:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801d8ee:	fb92 f3f3 	sdiv	r3, r2, r3
 801d8f2:	9320      	str	r3, [sp, #128]	@ 0x80
 801d8f4:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801d8f6:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 801d8f8:	3b01      	subs	r3, #1
 801d8fa:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801d8fe:	930e      	str	r3, [sp, #56]	@ 0x38
 801d900:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801d902:	edcd 6a1e 	vstr	s13, [sp, #120]	@ 0x78
 801d906:	bf08      	it	eq
 801d908:	4613      	moveq	r3, r2
 801d90a:	9306      	str	r3, [sp, #24]
 801d90c:	eeb0 3a67 	vmov.f32	s6, s15
 801d910:	eef0 2a47 	vmov.f32	s5, s14
 801d914:	e621      	b.n	801d55a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 801d916:	fb08 f505 	mul.w	r5, r8, r5
 801d91a:	fb09 5303 	mla	r3, r9, r3, r5
 801d91e:	e6a1      	b.n	801d664 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x138>
 801d920:	4681      	mov	r9, r0
 801d922:	e6c8      	b.n	801d6b6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18a>
 801d924:	f1c1 0210 	rsb	r2, r1, #16
 801d928:	4341      	muls	r1, r0
 801d92a:	fb09 1902 	mla	r9, r9, r2, r1
 801d92e:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801d932:	ea4f 5259 	mov.w	r2, r9, lsr #21
 801d936:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801d93a:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801d93e:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 801d942:	ea42 0909 	orr.w	r9, r2, r9
 801d946:	fa1f f289 	uxth.w	r2, r9
 801d94a:	e75b      	b.n	801d804 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 801d94c:	f8b7 c000 	ldrh.w	ip, [r7]
 801d950:	43db      	mvns	r3, r3
 801d952:	ea4f 202c 	mov.w	r0, ip, asr #8
 801d956:	fa5f fe83 	uxtb.w	lr, r3
 801d95a:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801d95e:	fb00 f00e 	mul.w	r0, r0, lr
 801d962:	1c41      	adds	r1, r0, #1
 801d964:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 801d968:	1211      	asrs	r1, r2, #8
 801d96a:	ea4f 05ec 	mov.w	r5, ip, asr #3
 801d96e:	f021 0107 	bic.w	r1, r1, #7
 801d972:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 801d976:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 801d97a:	48d7      	ldr	r0, [pc, #860]	@ (801dcd8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>)
 801d97c:	fb05 f50e 	mul.w	r5, r5, lr
 801d980:	b2c9      	uxtb	r1, r1
 801d982:	ea00 2001 	and.w	r0, r0, r1, lsl #8
 801d986:	1c69      	adds	r1, r5, #1
 801d988:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 801d98c:	10d1      	asrs	r1, r2, #3
 801d98e:	f021 0103 	bic.w	r1, r1, #3
 801d992:	ea4f 03cc 	mov.w	r3, ip, lsl #3
 801d996:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 801d99a:	b2db      	uxtb	r3, r3
 801d99c:	00c9      	lsls	r1, r1, #3
 801d99e:	fb03 f30e 	mul.w	r3, r3, lr
 801d9a2:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801d9a6:	4301      	orrs	r1, r0
 801d9a8:	1c58      	adds	r0, r3, #1
 801d9aa:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 801d9ae:	00d2      	lsls	r2, r2, #3
 801d9b0:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801d9b4:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801d9b8:	430a      	orrs	r2, r1
 801d9ba:	e726      	b.n	801d80a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2de>
 801d9bc:	f115 0e01 	adds.w	lr, r5, #1
 801d9c0:	f53f af24 	bmi.w	801d80c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801d9c4:	4572      	cmp	r2, lr
 801d9c6:	f6ff af21 	blt.w	801d80c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801d9ca:	f110 0e01 	adds.w	lr, r0, #1
 801d9ce:	f53f af1d 	bmi.w	801d80c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801d9d2:	4573      	cmp	r3, lr
 801d9d4:	f6ff af1a 	blt.w	801d80c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801d9d8:	b21b      	sxth	r3, r3
 801d9da:	b212      	sxth	r2, r2
 801d9dc:	e9cd 1c04 	strd	r1, ip, [sp, #16]
 801d9e0:	e9cd 5002 	strd	r5, r0, [sp, #8]
 801d9e4:	9301      	str	r3, [sp, #4]
 801d9e6:	9200      	str	r2, [sp, #0]
 801d9e8:	4639      	mov	r1, r7
 801d9ea:	e9dd 3208 	ldrd	r3, r2, [sp, #32]
 801d9ee:	9811      	ldr	r0, [sp, #68]	@ 0x44
 801d9f0:	f7ff fc24 	bl	801d23c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 801d9f4:	e70a      	b.n	801d80c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801d9f6:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 801d9f8:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801d9fc:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 801d9fe:	f3c3 3503 	ubfx	r5, r3, #12, #4
 801da02:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801da04:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801da08:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 801da0a:	141f      	asrs	r7, r3, #16
 801da0c:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 801da0e:	141b      	asrs	r3, r3, #16
 801da10:	fb01 3707 	mla	r7, r1, r7, r3
 801da14:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801da16:	fa1f fc82 	uxth.w	ip, r2
 801da1a:	eb03 0a07 	add.w	sl, r3, r7
 801da1e:	ea4f 100c 	mov.w	r0, ip, lsl #4
 801da22:	f813 9007 	ldrb.w	r9, [r3, r7]
 801da26:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801da2a:	f5c0 7380 	rsb	r3, r0, #256	@ 0x100
 801da2e:	b29b      	uxth	r3, r3
 801da30:	2d00      	cmp	r5, #0
 801da32:	f000 80fe 	beq.w	801dc32 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x706>
 801da36:	f81a 4001 	ldrb.w	r4, [sl, r1]
 801da3a:	940c      	str	r4, [sp, #48]	@ 0x30
 801da3c:	eb0a 0b01 	add.w	fp, sl, r1
 801da40:	fa1f fa85 	uxth.w	sl, r5
 801da44:	fb0a fc0c 	mul.w	ip, sl, ip
 801da48:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 801da4c:	fa1f fa8a 	uxth.w	sl, sl
 801da50:	eba0 000c 	sub.w	r0, r0, ip
 801da54:	eba3 030a 	sub.w	r3, r3, sl
 801da58:	b280      	uxth	r0, r0
 801da5a:	fb08 f000 	mul.w	r0, r8, r0
 801da5e:	b29b      	uxth	r3, r3
 801da60:	fb09 0303 	mla	r3, r9, r3, r0
 801da64:	980c      	ldr	r0, [sp, #48]	@ 0x30
 801da66:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801da6a:	940d      	str	r4, [sp, #52]	@ 0x34
 801da6c:	fb0a 3300 	mla	r3, sl, r0, r3
 801da70:	fb0c 3304 	mla	r3, ip, r4, r3
 801da74:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801da78:	2b00      	cmp	r3, #0
 801da7a:	f000 80cc 	beq.w	801dc16 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ea>
 801da7e:	9808      	ldr	r0, [sp, #32]
 801da80:	9c08      	ldr	r4, [sp, #32]
 801da82:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 801da86:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 801da8a:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 801da8e:	f000 80d5 	beq.w	801dc3c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 801da92:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
 801da96:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801da9a:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801da9e:	fb09 f707 	mul.w	r7, r9, r7
 801daa2:	fb0a fc0c 	mul.w	ip, sl, ip
 801daa6:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 801daaa:	f107 0b20 	add.w	fp, r7, #32
 801daae:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
 801dab2:	44cc      	add	ip, r9
 801dab4:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 801dab8:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801dabc:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801dac0:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 801dac4:	ea4c 0909 	orr.w	r9, ip, r9
 801dac8:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
 801dacc:	8847      	ldrh	r7, [r0, #2]
 801dace:	d019      	beq.n	801db04 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5d8>
 801dad0:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
 801dad4:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801dad8:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801dadc:	fb08 f807 	mul.w	r8, r8, r7
 801dae0:	fb0a fc0c 	mul.w	ip, sl, ip
 801dae4:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 801dae8:	f108 0b20 	add.w	fp, r8, #32
 801daec:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
 801daf0:	44bc      	add	ip, r7
 801daf2:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 801daf6:	0a3f      	lsrs	r7, r7, #8
 801daf8:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801dafc:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801db00:	ea4c 0707 	orr.w	r7, ip, r7
 801db04:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 801db08:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 801db0c:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 801db10:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 801db14:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801db18:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
 801db1c:	ea4c 0909 	orr.w	r9, ip, r9
 801db20:	ea4a 0707 	orr.w	r7, sl, r7
 801db24:	2d00      	cmp	r5, #0
 801db26:	f000 808b 	beq.w	801dc40 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x714>
 801db2a:	f101 4100 	add.w	r1, r1, #2147483648	@ 0x80000000
 801db2e:	3901      	subs	r1, #1
 801db30:	0049      	lsls	r1, r1, #1
 801db32:	3102      	adds	r1, #2
 801db34:	eb00 0c01 	add.w	ip, r0, r1
 801db38:	5a41      	ldrh	r1, [r0, r1]
 801db3a:	980c      	ldr	r0, [sp, #48]	@ 0x30
 801db3c:	28ff      	cmp	r0, #255	@ 0xff
 801db3e:	d019      	beq.n	801db74 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x648>
 801db40:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 801db42:	f421 60fc 	bic.w	r0, r1, #2016	@ 0x7e0
 801db46:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801db4a:	fb04 fa01 	mul.w	sl, r4, r1
 801db4e:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801db52:	fb08 f800 	mul.w	r8, r8, r0
 801db56:	f10a 0020 	add.w	r0, sl, #32
 801db5a:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 801db5e:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 801db62:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801db66:	4441      	add	r1, r8
 801db68:	0a00      	lsrs	r0, r0, #8
 801db6a:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 801db6e:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801db72:	4301      	orrs	r1, r0
 801db74:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801db76:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 801db7a:	2cff      	cmp	r4, #255	@ 0xff
 801db7c:	d01a      	beq.n	801dbb4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x688>
 801db7e:	f420 6cfc 	bic.w	ip, r0, #2016	@ 0x7e0
 801db82:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801db86:	fb04 fa00 	mul.w	sl, r4, r0
 801db8a:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801db8e:	fb08 f80c 	mul.w	r8, r8, ip
 801db92:	f10a 0c20 	add.w	ip, sl, #32
 801db96:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 801db9a:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 801db9e:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801dba2:	4440      	add	r0, r8
 801dba4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801dba8:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 801dbac:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 801dbb0:	ea40 000c 	orr.w	r0, r0, ip
 801dbb4:	fb15 fc02 	smulbb	ip, r5, r2
 801dbb8:	ea4f 0cec 	mov.w	ip, ip, asr #3
 801dbbc:	f1c5 0810 	rsb	r8, r5, #16
 801dbc0:	eba8 0802 	sub.w	r8, r8, r2
 801dbc4:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 801dbc8:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 801dbcc:	437a      	muls	r2, r7
 801dbce:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 801dbd2:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 801dbd6:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801dbda:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 801dbde:	fb09 2208 	mla	r2, r9, r8, r2
 801dbe2:	ea4a 0101 	orr.w	r1, sl, r1
 801dbe6:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 801dbea:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801dbee:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801dbf2:	fb05 2201 	mla	r2, r5, r1, r2
 801dbf6:	ea4b 0000 	orr.w	r0, fp, r0
 801dbfa:	fb0c 2200 	mla	r2, ip, r0, r2
 801dbfe:	0d57      	lsrs	r7, r2, #21
 801dc00:	0952      	lsrs	r2, r2, #5
 801dc02:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801dc06:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801dc0a:	433a      	orrs	r2, r7
 801dc0c:	2bff      	cmp	r3, #255	@ 0xff
 801dc0e:	b292      	uxth	r2, r2
 801dc10:	d127      	bne.n	801dc62 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x736>
 801dc12:	f8ae 2000 	strh.w	r2, [lr]
 801dc16:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 801dc18:	9a1f      	ldr	r2, [sp, #124]	@ 0x7c
 801dc1a:	4413      	add	r3, r2
 801dc1c:	931d      	str	r3, [sp, #116]	@ 0x74
 801dc1e:	9a1e      	ldr	r2, [sp, #120]	@ 0x78
 801dc20:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801dc22:	441a      	add	r2, r3
 801dc24:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801dc26:	921e      	str	r2, [sp, #120]	@ 0x78
 801dc28:	3b01      	subs	r3, #1
 801dc2a:	f10e 0e02 	add.w	lr, lr, #2
 801dc2e:	930f      	str	r3, [sp, #60]	@ 0x3c
 801dc30:	e627      	b.n	801d882 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 801dc32:	fb08 f000 	mul.w	r0, r8, r0
 801dc36:	fb09 0303 	mla	r3, r9, r3, r0
 801dc3a:	e71b      	b.n	801da74 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x548>
 801dc3c:	46b9      	mov	r9, r7
 801dc3e:	e743      	b.n	801dac8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x59c>
 801dc40:	f1c2 0110 	rsb	r1, r2, #16
 801dc44:	437a      	muls	r2, r7
 801dc46:	fb09 2901 	mla	r9, r9, r1, r2
 801dc4a:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801dc4e:	ea4f 5059 	mov.w	r0, r9, lsr #21
 801dc52:	ea4f 1259 	mov.w	r2, r9, lsr #5
 801dc56:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801dc5a:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801dc5e:	4302      	orrs	r2, r0
 801dc60:	e7d4      	b.n	801dc0c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e0>
 801dc62:	f8be 7000 	ldrh.w	r7, [lr]
 801dc66:	4c1c      	ldr	r4, [pc, #112]	@ (801dcd8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>)
 801dc68:	43db      	mvns	r3, r3
 801dc6a:	1238      	asrs	r0, r7, #8
 801dc6c:	fa5f fc83 	uxtb.w	ip, r3
 801dc70:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801dc74:	10fd      	asrs	r5, r7, #3
 801dc76:	fb00 f00c 	mul.w	r0, r0, ip
 801dc7a:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 801dc7e:	fb05 f10c 	mul.w	r1, r5, ip
 801dc82:	1c45      	adds	r5, r0, #1
 801dc84:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 801dc88:	1215      	asrs	r5, r2, #8
 801dc8a:	f025 0507 	bic.w	r5, r5, #7
 801dc8e:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 801dc92:	1c4d      	adds	r5, r1, #1
 801dc94:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 801dc98:	10d1      	asrs	r1, r2, #3
 801dc9a:	f021 0103 	bic.w	r1, r1, #3
 801dc9e:	00fb      	lsls	r3, r7, #3
 801dca0:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 801dca4:	b2db      	uxtb	r3, r3
 801dca6:	b2c0      	uxtb	r0, r0
 801dca8:	00c9      	lsls	r1, r1, #3
 801dcaa:	fb03 f30c 	mul.w	r3, r3, ip
 801dcae:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801dcb2:	ea04 2000 	and.w	r0, r4, r0, lsl #8
 801dcb6:	4308      	orrs	r0, r1
 801dcb8:	1c59      	adds	r1, r3, #1
 801dcba:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801dcbe:	00d2      	lsls	r2, r2, #3
 801dcc0:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 801dcc4:	f3c3 03c4 	ubfx	r3, r3, #3, #5
 801dcc8:	4318      	orrs	r0, r3
 801dcca:	f8ae 0000 	strh.w	r0, [lr]
 801dcce:	e7a2      	b.n	801dc16 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ea>
 801dcd0:	b013      	add	sp, #76	@ 0x4c
 801dcd2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801dcd6:	bf00      	nop
 801dcd8:	fffff800 	.word	0xfffff800

0801dcdc <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>:
 801dcdc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801dce0:	e9dd 4509 	ldrd	r4, r5, [sp, #36]	@ 0x24
 801dce4:	fb05 4c03 	mla	ip, r5, r3, r4
 801dce8:	2d00      	cmp	r5, #0
 801dcea:	f9bd a020 	ldrsh.w	sl, [sp, #32]
 801dcee:	f89d 902c 	ldrb.w	r9, [sp, #44]	@ 0x2c
 801dcf2:	f89d 7030 	ldrb.w	r7, [sp, #48]	@ 0x30
 801dcf6:	f89d 6034 	ldrb.w	r6, [sp, #52]	@ 0x34
 801dcfa:	8808      	ldrh	r0, [r1, #0]
 801dcfc:	eb02 0e4c 	add.w	lr, r2, ip, lsl #1
 801dd00:	f2c0 80a7 	blt.w	801de52 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 801dd04:	45aa      	cmp	sl, r5
 801dd06:	f340 80a4 	ble.w	801de52 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 801dd0a:	2c00      	cmp	r4, #0
 801dd0c:	f2c0 809f 	blt.w	801de4e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 801dd10:	42a3      	cmp	r3, r4
 801dd12:	f340 809c 	ble.w	801de4e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 801dd16:	f832 801c 	ldrh.w	r8, [r2, ip, lsl #1]
 801dd1a:	1c62      	adds	r2, r4, #1
 801dd1c:	f100 809c 	bmi.w	801de58 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 801dd20:	4293      	cmp	r3, r2
 801dd22:	f340 8099 	ble.w	801de58 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 801dd26:	f1b9 0f00 	cmp.w	r9, #0
 801dd2a:	f000 8095 	beq.w	801de58 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 801dd2e:	f8be c002 	ldrh.w	ip, [lr, #2]
 801dd32:	3501      	adds	r5, #1
 801dd34:	f100 8094 	bmi.w	801de60 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 801dd38:	45aa      	cmp	sl, r5
 801dd3a:	f340 8091 	ble.w	801de60 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 801dd3e:	2f00      	cmp	r7, #0
 801dd40:	f000 808e 	beq.w	801de60 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 801dd44:	2c00      	cmp	r4, #0
 801dd46:	f2c0 8089 	blt.w	801de5c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 801dd4a:	42a3      	cmp	r3, r4
 801dd4c:	f340 8086 	ble.w	801de5c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 801dd50:	f83e 5013 	ldrh.w	r5, [lr, r3, lsl #1]
 801dd54:	3401      	adds	r4, #1
 801dd56:	f100 8086 	bmi.w	801de66 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 801dd5a:	42a3      	cmp	r3, r4
 801dd5c:	f340 8083 	ble.w	801de66 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 801dd60:	f1b9 0f00 	cmp.w	r9, #0
 801dd64:	d07f      	beq.n	801de66 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 801dd66:	3301      	adds	r3, #1
 801dd68:	f83e 3013 	ldrh.w	r3, [lr, r3, lsl #1]
 801dd6c:	ea4f 4408 	mov.w	r4, r8, lsl #16
 801dd70:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 801dd74:	f428 68fc 	bic.w	r8, r8, #2016	@ 0x7e0
 801dd78:	fb19 fe07 	smulbb	lr, r9, r7
 801dd7c:	ea44 0808 	orr.w	r8, r4, r8
 801dd80:	ea4f 440c 	mov.w	r4, ip, lsl #16
 801dd84:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 801dd88:	f1c7 0210 	rsb	r2, r7, #16
 801dd8c:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 801dd90:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 801dd94:	ea44 0c0c 	orr.w	ip, r4, ip
 801dd98:	eba2 0209 	sub.w	r2, r2, r9
 801dd9c:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 801dda0:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 801dda4:	fb04 f40c 	mul.w	r4, r4, ip
 801dda8:	fb02 4808 	mla	r8, r2, r8, r4
 801ddac:	041a      	lsls	r2, r3, #16
 801ddae:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 801ddb2:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801ddb6:	4313      	orrs	r3, r2
 801ddb8:	042a      	lsls	r2, r5, #16
 801ddba:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 801ddbe:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
 801ddc2:	fb0e 8303 	mla	r3, lr, r3, r8
 801ddc6:	432a      	orrs	r2, r5
 801ddc8:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 801ddcc:	fb07 3202 	mla	r2, r7, r2, r3
 801ddd0:	0d53      	lsrs	r3, r2, #21
 801ddd2:	0952      	lsrs	r2, r2, #5
 801ddd4:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801ddd8:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801dddc:	431a      	orrs	r2, r3
 801ddde:	b293      	uxth	r3, r2
 801dde0:	b2b4      	uxth	r4, r6
 801dde2:	1202      	asrs	r2, r0, #8
 801dde4:	43f6      	mvns	r6, r6
 801dde6:	b2f6      	uxtb	r6, r6
 801dde8:	121d      	asrs	r5, r3, #8
 801ddea:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 801ddee:	fb12 f206 	smulbb	r2, r2, r6
 801ddf2:	10c7      	asrs	r7, r0, #3
 801ddf4:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 801ddf8:	00c0      	lsls	r0, r0, #3
 801ddfa:	fb05 2504 	mla	r5, r5, r4, r2
 801ddfe:	b2c0      	uxtb	r0, r0
 801de00:	10da      	asrs	r2, r3, #3
 801de02:	00db      	lsls	r3, r3, #3
 801de04:	b2db      	uxtb	r3, r3
 801de06:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801de0a:	fb10 f006 	smulbb	r0, r0, r6
 801de0e:	b2ad      	uxth	r5, r5
 801de10:	fb03 0004 	mla	r0, r3, r4, r0
 801de14:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 801de18:	fb17 f706 	smulbb	r7, r7, r6
 801de1c:	b280      	uxth	r0, r0
 801de1e:	1c6b      	adds	r3, r5, #1
 801de20:	fb02 7204 	mla	r2, r2, r4, r7
 801de24:	b292      	uxth	r2, r2
 801de26:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801de2a:	1c43      	adds	r3, r0, #1
 801de2c:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801de30:	1c50      	adds	r0, r2, #1
 801de32:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 801de36:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 801de3a:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801de3e:	0952      	lsrs	r2, r2, #5
 801de40:	432b      	orrs	r3, r5
 801de42:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801de46:	4313      	orrs	r3, r2
 801de48:	800b      	strh	r3, [r1, #0]
 801de4a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801de4e:	4680      	mov	r8, r0
 801de50:	e763      	b.n	801dd1a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x3e>
 801de52:	4684      	mov	ip, r0
 801de54:	4680      	mov	r8, r0
 801de56:	e76c      	b.n	801dd32 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 801de58:	4684      	mov	ip, r0
 801de5a:	e76a      	b.n	801dd32 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 801de5c:	4605      	mov	r5, r0
 801de5e:	e779      	b.n	801dd54 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x78>
 801de60:	4603      	mov	r3, r0
 801de62:	4605      	mov	r5, r0
 801de64:	e782      	b.n	801dd6c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>
 801de66:	4603      	mov	r3, r0
 801de68:	e780      	b.n	801dd6c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>

0801de6a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801de6a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801de6e:	b093      	sub	sp, #76	@ 0x4c
 801de70:	461d      	mov	r5, r3
 801de72:	9210      	str	r2, [sp, #64]	@ 0x40
 801de74:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 801de76:	f89d 2094 	ldrb.w	r2, [sp, #148]	@ 0x94
 801de7a:	920b      	str	r2, [sp, #44]	@ 0x2c
 801de7c:	e9dd 2722 	ldrd	r2, r7, [sp, #136]	@ 0x88
 801de80:	910a      	str	r1, [sp, #40]	@ 0x28
 801de82:	6859      	ldr	r1, [r3, #4]
 801de84:	681b      	ldr	r3, [r3, #0]
 801de86:	9011      	str	r0, [sp, #68]	@ 0x44
 801de88:	fb01 2707 	mla	r7, r1, r7, r2
 801de8c:	eb03 0347 	add.w	r3, r3, r7, lsl #1
 801de90:	9307      	str	r3, [sp, #28]
 801de92:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801de94:	681b      	ldr	r3, [r3, #0]
 801de96:	9309      	str	r3, [sp, #36]	@ 0x24
 801de98:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801de9a:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	@ 0x74
 801de9e:	43db      	mvns	r3, r3
 801dea0:	b2db      	uxtb	r3, r3
 801dea2:	9308      	str	r3, [sp, #32]
 801dea4:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801dea6:	2b00      	cmp	r3, #0
 801dea8:	dc03      	bgt.n	801deb2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801deaa:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801deac:	2b00      	cmp	r3, #0
 801deae:	f340 8203 	ble.w	801e2b8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 801deb2:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801deb4:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801deb8:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801debc:	1e48      	subs	r0, r1, #1
 801debe:	f102 3cff 	add.w	ip, r2, #4294967295
 801dec2:	2d00      	cmp	r5, #0
 801dec4:	f340 80da 	ble.w	801e07c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 801dec8:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801decc:	ea4f 4326 	mov.w	r3, r6, asr #16
 801ded0:	d406      	bmi.n	801dee0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801ded2:	4586      	cmp	lr, r0
 801ded4:	da04      	bge.n	801dee0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801ded6:	2b00      	cmp	r3, #0
 801ded8:	db02      	blt.n	801dee0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801deda:	4563      	cmp	r3, ip
 801dedc:	f2c0 80cf 	blt.w	801e07e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801dee0:	f11e 0e01 	adds.w	lr, lr, #1
 801dee4:	f100 80c1 	bmi.w	801e06a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801dee8:	4571      	cmp	r1, lr
 801deea:	f2c0 80be 	blt.w	801e06a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801deee:	3301      	adds	r3, #1
 801def0:	f100 80bb 	bmi.w	801e06a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801def4:	429a      	cmp	r2, r3
 801def6:	f2c0 80b8 	blt.w	801e06a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801defa:	f8dd 801c 	ldr.w	r8, [sp, #28]
 801defe:	46a9      	mov	r9, r5
 801df00:	f1b9 0f00 	cmp.w	r9, #0
 801df04:	f340 80d8 	ble.w	801e0b8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24e>
 801df08:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801df0a:	1421      	asrs	r1, r4, #16
 801df0c:	ea4f 4026 	mov.w	r0, r6, asr #16
 801df10:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801df14:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 801df18:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 801df1c:	f100 8111 	bmi.w	801e142 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 801df20:	f10e 3aff 	add.w	sl, lr, #4294967295
 801df24:	4551      	cmp	r1, sl
 801df26:	f280 810c 	bge.w	801e142 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 801df2a:	2800      	cmp	r0, #0
 801df2c:	f2c0 8109 	blt.w	801e142 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 801df30:	f103 3aff 	add.w	sl, r3, #4294967295
 801df34:	4550      	cmp	r0, sl
 801df36:	f280 8104 	bge.w	801e142 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 801df3a:	fa0f f38e 	sxth.w	r3, lr
 801df3e:	fb00 1103 	mla	r1, r0, r3, r1
 801df42:	9809      	ldr	r0, [sp, #36]	@ 0x24
 801df44:	eb00 0a41 	add.w	sl, r0, r1, lsl #1
 801df48:	f830 e011 	ldrh.w	lr, [r0, r1, lsl #1]
 801df4c:	f8ba 1002 	ldrh.w	r1, [sl, #2]
 801df50:	f1bc 0f00 	cmp.w	ip, #0
 801df54:	d007      	beq.n	801df66 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfc>
 801df56:	005b      	lsls	r3, r3, #1
 801df58:	eb0a 0003 	add.w	r0, sl, r3
 801df5c:	f83a 3003 	ldrh.w	r3, [sl, r3]
 801df60:	930c      	str	r3, [sp, #48]	@ 0x30
 801df62:	8843      	ldrh	r3, [r0, #2]
 801df64:	930d      	str	r3, [sp, #52]	@ 0x34
 801df66:	ea4f 400e 	mov.w	r0, lr, lsl #16
 801df6a:	fb12 f30c 	smulbb	r3, r2, ip
 801df6e:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 801df72:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 801df76:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 801df7a:	10db      	asrs	r3, r3, #3
 801df7c:	ea40 000e 	orr.w	r0, r0, lr
 801df80:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801df84:	f1cc 0e10 	rsb	lr, ip, #16
 801df88:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 801df8c:	ebae 0e02 	sub.w	lr, lr, r2
 801df90:	ea4a 0101 	orr.w	r1, sl, r1
 801df94:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801df98:	4351      	muls	r1, r2
 801df9a:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 801df9c:	9f08      	ldr	r7, [sp, #32]
 801df9e:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 801dfa2:	fb0e 1e00 	mla	lr, lr, r0, r1
 801dfa6:	0410      	lsls	r0, r2, #16
 801dfa8:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 801dfac:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801dfb0:	4310      	orrs	r0, r2
 801dfb2:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 801dfb4:	990c      	ldr	r1, [sp, #48]	@ 0x30
 801dfb6:	0412      	lsls	r2, r2, #16
 801dfb8:	fb03 e000 	mla	r0, r3, r0, lr
 801dfbc:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 801dfc0:	f421 6efc 	bic.w	lr, r1, #2016	@ 0x7e0
 801dfc4:	ea42 020e 	orr.w	r2, r2, lr
 801dfc8:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 801dfcc:	fb03 0302 	mla	r3, r3, r2, r0
 801dfd0:	0d5a      	lsrs	r2, r3, #21
 801dfd2:	095b      	lsrs	r3, r3, #5
 801dfd4:	f8b8 0000 	ldrh.w	r0, [r8]
 801dfd8:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801dfdc:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801dfe0:	4313      	orrs	r3, r2
 801dfe2:	b29b      	uxth	r3, r3
 801dfe4:	1201      	asrs	r1, r0, #8
 801dfe6:	f8bd 202c 	ldrh.w	r2, [sp, #44]	@ 0x2c
 801dfea:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801dfee:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 801dff2:	fb11 f107 	smulbb	r1, r1, r7
 801dff6:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 801dffa:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801dffe:	00c0      	lsls	r0, r0, #3
 801e000:	fb0c 1c02 	mla	ip, ip, r2, r1
 801e004:	b2c0      	uxtb	r0, r0
 801e006:	10d9      	asrs	r1, r3, #3
 801e008:	00db      	lsls	r3, r3, #3
 801e00a:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
 801e00e:	b2db      	uxtb	r3, r3
 801e010:	fb10 f007 	smulbb	r0, r0, r7
 801e014:	fa1f fc8c 	uxth.w	ip, ip
 801e018:	fb03 0302 	mla	r3, r3, r2, r0
 801e01c:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 801e020:	fb1e fe07 	smulbb	lr, lr, r7
 801e024:	fb01 e102 	mla	r1, r1, r2, lr
 801e028:	b29a      	uxth	r2, r3
 801e02a:	f10c 0301 	add.w	r3, ip, #1
 801e02e:	b289      	uxth	r1, r1
 801e030:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 801e034:	1c53      	adds	r3, r2, #1
 801e036:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801e03a:	1c4a      	adds	r2, r1, #1
 801e03c:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801e040:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 801e044:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801e048:	0949      	lsrs	r1, r1, #5
 801e04a:	ea43 030c 	orr.w	r3, r3, ip
 801e04e:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801e052:	430b      	orrs	r3, r1
 801e054:	f8a8 3000 	strh.w	r3, [r8]
 801e058:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801e05a:	441c      	add	r4, r3
 801e05c:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801e05e:	f108 0802 	add.w	r8, r8, #2
 801e062:	441e      	add	r6, r3
 801e064:	f109 39ff 	add.w	r9, r9, #4294967295
 801e068:	e74a      	b.n	801df00 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801e06a:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801e06c:	441c      	add	r4, r3
 801e06e:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801e070:	441e      	add	r6, r3
 801e072:	9b07      	ldr	r3, [sp, #28]
 801e074:	3302      	adds	r3, #2
 801e076:	3d01      	subs	r5, #1
 801e078:	9307      	str	r3, [sp, #28]
 801e07a:	e722      	b.n	801dec2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801e07c:	d022      	beq.n	801e0c4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25a>
 801e07e:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 801e080:	1e6b      	subs	r3, r5, #1
 801e082:	fb00 4003 	mla	r0, r0, r3, r4
 801e086:	1400      	asrs	r0, r0, #16
 801e088:	f53f af37 	bmi.w	801defa <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801e08c:	3901      	subs	r1, #1
 801e08e:	4288      	cmp	r0, r1
 801e090:	f6bf af33 	bge.w	801defa <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801e094:	9920      	ldr	r1, [sp, #128]	@ 0x80
 801e096:	fb01 6303 	mla	r3, r1, r3, r6
 801e09a:	141b      	asrs	r3, r3, #16
 801e09c:	f53f af2d 	bmi.w	801defa <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801e0a0:	3a01      	subs	r2, #1
 801e0a2:	4293      	cmp	r3, r2
 801e0a4:	f6bf af29 	bge.w	801defa <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801e0a8:	f8dd 901c 	ldr.w	r9, [sp, #28]
 801e0ac:	f8bd a02c 	ldrh.w	sl, [sp, #44]	@ 0x2c
 801e0b0:	46a8      	mov	r8, r5
 801e0b2:	f1b8 0f00 	cmp.w	r8, #0
 801e0b6:	dc5e      	bgt.n	801e176 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 801e0b8:	9b07      	ldr	r3, [sp, #28]
 801e0ba:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 801e0be:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 801e0c2:	9307      	str	r3, [sp, #28]
 801e0c4:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801e0c6:	2b00      	cmp	r3, #0
 801e0c8:	f340 80f6 	ble.w	801e2b8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 801e0cc:	ee30 0a04 	vadd.f32	s0, s0, s8
 801e0d0:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801e0d4:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801e0d8:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801e0da:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801e0de:	ee31 1a05 	vadd.f32	s2, s2, s10
 801e0e2:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801e0e6:	eef0 6a62 	vmov.f32	s13, s5
 801e0ea:	ee61 7a27 	vmul.f32	s15, s2, s15
 801e0ee:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801e0f2:	ee77 2a62 	vsub.f32	s5, s14, s5
 801e0f6:	ee16 4a90 	vmov	r4, s13
 801e0fa:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801e0fe:	eef0 6a43 	vmov.f32	s13, s6
 801e102:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801e106:	ee12 2a90 	vmov	r2, s5
 801e10a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801e10e:	fb92 f3f3 	sdiv	r3, r2, r3
 801e112:	ee13 2a10 	vmov	r2, s6
 801e116:	931f      	str	r3, [sp, #124]	@ 0x7c
 801e118:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801e11a:	fb92 f3f3 	sdiv	r3, r2, r3
 801e11e:	9320      	str	r3, [sp, #128]	@ 0x80
 801e120:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801e122:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 801e124:	3b01      	subs	r3, #1
 801e126:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801e12a:	930a      	str	r3, [sp, #40]	@ 0x28
 801e12c:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801e12e:	ee16 6a90 	vmov	r6, s13
 801e132:	bf14      	ite	ne
 801e134:	461d      	movne	r5, r3
 801e136:	4615      	moveq	r5, r2
 801e138:	eeb0 3a67 	vmov.f32	s6, s15
 801e13c:	eef0 2a47 	vmov.f32	s5, s14
 801e140:	e6b0      	b.n	801dea4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801e142:	f111 0a01 	adds.w	sl, r1, #1
 801e146:	d487      	bmi.n	801e058 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801e148:	45d6      	cmp	lr, sl
 801e14a:	db85      	blt.n	801e058 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801e14c:	f110 0a01 	adds.w	sl, r0, #1
 801e150:	d482      	bmi.n	801e058 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801e152:	4553      	cmp	r3, sl
 801e154:	db80      	blt.n	801e058 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801e156:	9f0b      	ldr	r7, [sp, #44]	@ 0x2c
 801e158:	9101      	str	r1, [sp, #4]
 801e15a:	b21b      	sxth	r3, r3
 801e15c:	e9cd 0202 	strd	r0, r2, [sp, #8]
 801e160:	9300      	str	r3, [sp, #0]
 801e162:	e9cd c704 	strd	ip, r7, [sp, #16]
 801e166:	fa0f f38e 	sxth.w	r3, lr
 801e16a:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 801e16c:	9811      	ldr	r0, [sp, #68]	@ 0x44
 801e16e:	4641      	mov	r1, r8
 801e170:	f7ff fdb4 	bl	801dcdc <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>
 801e174:	e770      	b.n	801e058 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801e176:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801e178:	9f09      	ldr	r7, [sp, #36]	@ 0x24
 801e17a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801e17e:	1430      	asrs	r0, r6, #16
 801e180:	1423      	asrs	r3, r4, #16
 801e182:	fb01 3000 	mla	r0, r1, r0, r3
 801e186:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801e188:	f837 c010 	ldrh.w	ip, [r7, r0, lsl #1]
 801e18c:	eb03 0340 	add.w	r3, r3, r0, lsl #1
 801e190:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 801e194:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801e198:	8858      	ldrh	r0, [r3, #2]
 801e19a:	f1be 0f00 	cmp.w	lr, #0
 801e19e:	d00b      	beq.n	801e1b8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34e>
 801e1a0:	f101 4100 	add.w	r1, r1, #2147483648	@ 0x80000000
 801e1a4:	3901      	subs	r1, #1
 801e1a6:	0049      	lsls	r1, r1, #1
 801e1a8:	3102      	adds	r1, #2
 801e1aa:	eb03 0b01 	add.w	fp, r3, r1
 801e1ae:	5a5b      	ldrh	r3, [r3, r1]
 801e1b0:	930e      	str	r3, [sp, #56]	@ 0x38
 801e1b2:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 801e1b6:	930f      	str	r3, [sp, #60]	@ 0x3c
 801e1b8:	ea4f 410c 	mov.w	r1, ip, lsl #16
 801e1bc:	fb12 f30e 	smulbb	r3, r2, lr
 801e1c0:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 801e1c4:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 801e1c8:	f001 61fc 	and.w	r1, r1, #132120576	@ 0x7e00000
 801e1cc:	10db      	asrs	r3, r3, #3
 801e1ce:	ea41 010c 	orr.w	r1, r1, ip
 801e1d2:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801e1d6:	f1ce 0c10 	rsb	ip, lr, #16
 801e1da:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801e1de:	ebac 0c02 	sub.w	ip, ip, r2
 801e1e2:	ea4b 0000 	orr.w	r0, fp, r0
 801e1e6:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801e1ea:	4350      	muls	r0, r2
 801e1ec:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801e1ee:	9f08      	ldr	r7, [sp, #32]
 801e1f0:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 801e1f4:	fb0c 0c01 	mla	ip, ip, r1, r0
 801e1f8:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 801e1fc:	f422 61fc 	bic.w	r1, r2, #2016	@ 0x7e0
 801e200:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 801e202:	980e      	ldr	r0, [sp, #56]	@ 0x38
 801e204:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801e208:	0412      	lsls	r2, r2, #16
 801e20a:	ea4b 0101 	orr.w	r1, fp, r1
 801e20e:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801e212:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 801e216:	fb03 c101 	mla	r1, r3, r1, ip
 801e21a:	4302      	orrs	r2, r0
 801e21c:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 801e220:	fb03 1202 	mla	r2, r3, r2, r1
 801e224:	ea4f 5b52 	mov.w	fp, r2, lsr #21
 801e228:	0952      	lsrs	r2, r2, #5
 801e22a:	f422 63fc 	bic.w	r3, r2, #2016	@ 0x7e0
 801e22e:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
 801e232:	f8b9 2000 	ldrh.w	r2, [r9]
 801e236:	ea4b 0303 	orr.w	r3, fp, r3
 801e23a:	b29b      	uxth	r3, r3
 801e23c:	1211      	asrs	r1, r2, #8
 801e23e:	1218      	asrs	r0, r3, #8
 801e240:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 801e244:	fb11 f107 	smulbb	r1, r1, r7
 801e248:	ea4f 0ce2 	mov.w	ip, r2, asr #3
 801e24c:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801e250:	00d2      	lsls	r2, r2, #3
 801e252:	fb00 100a 	mla	r0, r0, sl, r1
 801e256:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
 801e25a:	10d9      	asrs	r1, r3, #3
 801e25c:	b2d2      	uxtb	r2, r2
 801e25e:	00db      	lsls	r3, r3, #3
 801e260:	fb1c fc07 	smulbb	ip, ip, r7
 801e264:	fb12 f207 	smulbb	r2, r2, r7
 801e268:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 801e26c:	b2db      	uxtb	r3, r3
 801e26e:	b280      	uxth	r0, r0
 801e270:	fb01 c10a 	mla	r1, r1, sl, ip
 801e274:	fb03 230a 	mla	r3, r3, sl, r2
 801e278:	b29b      	uxth	r3, r3
 801e27a:	b289      	uxth	r1, r1
 801e27c:	1c42      	adds	r2, r0, #1
 801e27e:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801e282:	f101 0c01 	add.w	ip, r1, #1
 801e286:	1c5a      	adds	r2, r3, #1
 801e288:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801e28c:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 801e290:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801e292:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
 801e296:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801e29a:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801e29e:	4310      	orrs	r0, r2
 801e2a0:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 801e2a4:	441c      	add	r4, r3
 801e2a6:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801e2a8:	ea40 000c 	orr.w	r0, r0, ip
 801e2ac:	f829 0b02 	strh.w	r0, [r9], #2
 801e2b0:	441e      	add	r6, r3
 801e2b2:	f108 38ff 	add.w	r8, r8, #4294967295
 801e2b6:	e6fc      	b.n	801e0b2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x248>
 801e2b8:	b013      	add	sp, #76	@ 0x4c
 801e2ba:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801e2be <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>:
 801e2be:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801e2c2:	e9dd 4e08 	ldrd	r4, lr, [sp, #32]
 801e2c6:	fb0e 4703 	mla	r7, lr, r3, r4
 801e2ca:	f1be 0f00 	cmp.w	lr, #0
 801e2ce:	f9bd 901c 	ldrsh.w	r9, [sp, #28]
 801e2d2:	f89d 5028 	ldrb.w	r5, [sp, #40]	@ 0x28
 801e2d6:	f89d 602c 	ldrb.w	r6, [sp, #44]	@ 0x2c
 801e2da:	8808      	ldrh	r0, [r1, #0]
 801e2dc:	eb02 0847 	add.w	r8, r2, r7, lsl #1
 801e2e0:	db60      	blt.n	801e3a4 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 801e2e2:	45f1      	cmp	r9, lr
 801e2e4:	dd5e      	ble.n	801e3a4 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 801e2e6:	2c00      	cmp	r4, #0
 801e2e8:	db5a      	blt.n	801e3a0 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 801e2ea:	42a3      	cmp	r3, r4
 801e2ec:	dd58      	ble.n	801e3a0 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 801e2ee:	f832 c017 	ldrh.w	ip, [r2, r7, lsl #1]
 801e2f2:	1c62      	adds	r2, r4, #1
 801e2f4:	d459      	bmi.n	801e3aa <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 801e2f6:	4293      	cmp	r3, r2
 801e2f8:	dd57      	ble.n	801e3aa <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 801e2fa:	2d00      	cmp	r5, #0
 801e2fc:	d055      	beq.n	801e3aa <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 801e2fe:	f8b8 7002 	ldrh.w	r7, [r8, #2]
 801e302:	f11e 0e01 	adds.w	lr, lr, #1
 801e306:	d454      	bmi.n	801e3b2 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 801e308:	45f1      	cmp	r9, lr
 801e30a:	dd52      	ble.n	801e3b2 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 801e30c:	2e00      	cmp	r6, #0
 801e30e:	d050      	beq.n	801e3b2 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 801e310:	2c00      	cmp	r4, #0
 801e312:	db4c      	blt.n	801e3ae <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 801e314:	42a3      	cmp	r3, r4
 801e316:	dd4a      	ble.n	801e3ae <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 801e318:	f838 2013 	ldrh.w	r2, [r8, r3, lsl #1]
 801e31c:	3401      	adds	r4, #1
 801e31e:	d405      	bmi.n	801e32c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 801e320:	42a3      	cmp	r3, r4
 801e322:	dd03      	ble.n	801e32c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 801e324:	b115      	cbz	r5, 801e32c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 801e326:	3301      	adds	r3, #1
 801e328:	f838 0013 	ldrh.w	r0, [r8, r3, lsl #1]
 801e32c:	ea4f 430c 	mov.w	r3, ip, lsl #16
 801e330:	fb15 f406 	smulbb	r4, r5, r6
 801e334:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801e338:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 801e33c:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 801e340:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 801e344:	ea43 0c0c 	orr.w	ip, r3, ip
 801e348:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
 801e34c:	f1c6 0310 	rsb	r3, r6, #16
 801e350:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
 801e354:	1b5b      	subs	r3, r3, r5
 801e356:	ea4e 0707 	orr.w	r7, lr, r7
 801e35a:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 801e35e:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801e362:	437d      	muls	r5, r7
 801e364:	fb03 5c0c 	mla	ip, r3, ip, r5
 801e368:	0403      	lsls	r3, r0, #16
 801e36a:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801e36e:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801e372:	4318      	orrs	r0, r3
 801e374:	0413      	lsls	r3, r2, #16
 801e376:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801e37a:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801e37e:	4313      	orrs	r3, r2
 801e380:	fb04 c000 	mla	r0, r4, r0, ip
 801e384:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 801e388:	fb06 0003 	mla	r0, r6, r3, r0
 801e38c:	0d43      	lsrs	r3, r0, #21
 801e38e:	0940      	lsrs	r0, r0, #5
 801e390:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801e394:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801e398:	4318      	orrs	r0, r3
 801e39a:	8008      	strh	r0, [r1, #0]
 801e39c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801e3a0:	4684      	mov	ip, r0
 801e3a2:	e7a6      	b.n	801e2f2 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x34>
 801e3a4:	4607      	mov	r7, r0
 801e3a6:	4684      	mov	ip, r0
 801e3a8:	e7ab      	b.n	801e302 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 801e3aa:	4607      	mov	r7, r0
 801e3ac:	e7a9      	b.n	801e302 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 801e3ae:	4602      	mov	r2, r0
 801e3b0:	e7b4      	b.n	801e31c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x5e>
 801e3b2:	4602      	mov	r2, r0
 801e3b4:	e7ba      	b.n	801e32c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>

0801e3b6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801e3b6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e3ba:	b08f      	sub	sp, #60	@ 0x3c
 801e3bc:	461d      	mov	r5, r3
 801e3be:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 801e3c0:	920c      	str	r2, [sp, #48]	@ 0x30
 801e3c2:	e9dd 271e 	ldrd	r2, r7, [sp, #120]	@ 0x78
 801e3c6:	9107      	str	r1, [sp, #28]
 801e3c8:	6859      	ldr	r1, [r3, #4]
 801e3ca:	681b      	ldr	r3, [r3, #0]
 801e3cc:	900d      	str	r0, [sp, #52]	@ 0x34
 801e3ce:	fb01 2707 	mla	r7, r1, r7, r2
 801e3d2:	eb03 0747 	add.w	r7, r3, r7, lsl #1
 801e3d6:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801e3d8:	e9dd 4619 	ldrd	r4, r6, [sp, #100]	@ 0x64
 801e3dc:	f8d3 8000 	ldr.w	r8, [r3]
 801e3e0:	9b07      	ldr	r3, [sp, #28]
 801e3e2:	2b00      	cmp	r3, #0
 801e3e4:	dc03      	bgt.n	801e3ee <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801e3e6:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801e3e8:	2b00      	cmp	r3, #0
 801e3ea:	f340 8181 	ble.w	801e6f0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 801e3ee:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801e3f0:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801e3f4:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801e3f8:	1e48      	subs	r0, r1, #1
 801e3fa:	f102 3cff 	add.w	ip, r2, #4294967295
 801e3fe:	2d00      	cmp	r5, #0
 801e400:	f340 809b 	ble.w	801e53a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x184>
 801e404:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801e408:	ea4f 4326 	mov.w	r3, r6, asr #16
 801e40c:	d406      	bmi.n	801e41c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801e40e:	4586      	cmp	lr, r0
 801e410:	da04      	bge.n	801e41c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801e412:	2b00      	cmp	r3, #0
 801e414:	db02      	blt.n	801e41c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801e416:	4563      	cmp	r3, ip
 801e418:	f2c0 8090 	blt.w	801e53c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801e41c:	f11e 0e01 	adds.w	lr, lr, #1
 801e420:	f100 8084 	bmi.w	801e52c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801e424:	4571      	cmp	r1, lr
 801e426:	f2c0 8081 	blt.w	801e52c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801e42a:	3301      	adds	r3, #1
 801e42c:	d47e      	bmi.n	801e52c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801e42e:	429a      	cmp	r2, r3
 801e430:	db7c      	blt.n	801e52c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801e432:	46aa      	mov	sl, r5
 801e434:	46b9      	mov	r9, r7
 801e436:	f1ba 0f00 	cmp.w	sl, #0
 801e43a:	f340 8099 	ble.w	801e570 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
 801e43e:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801e440:	1421      	asrs	r1, r4, #16
 801e442:	ea4f 4026 	mov.w	r0, r6, asr #16
 801e446:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801e44a:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 801e44e:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 801e452:	f100 80d0 	bmi.w	801e5f6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 801e456:	f10e 3bff 	add.w	fp, lr, #4294967295
 801e45a:	4559      	cmp	r1, fp
 801e45c:	f280 80cb 	bge.w	801e5f6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 801e460:	2800      	cmp	r0, #0
 801e462:	f2c0 80c8 	blt.w	801e5f6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 801e466:	f103 3bff 	add.w	fp, r3, #4294967295
 801e46a:	4558      	cmp	r0, fp
 801e46c:	f280 80c3 	bge.w	801e5f6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 801e470:	fa0f fe8e 	sxth.w	lr, lr
 801e474:	fb00 110e 	mla	r1, r0, lr, r1
 801e478:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 801e47c:	f838 b011 	ldrh.w	fp, [r8, r1, lsl #1]
 801e480:	8841      	ldrh	r1, [r0, #2]
 801e482:	f1bc 0f00 	cmp.w	ip, #0
 801e486:	d00b      	beq.n	801e4a0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xea>
 801e488:	f10e 4300 	add.w	r3, lr, #2147483648	@ 0x80000000
 801e48c:	3b01      	subs	r3, #1
 801e48e:	005b      	lsls	r3, r3, #1
 801e490:	3302      	adds	r3, #2
 801e492:	eb00 0e03 	add.w	lr, r0, r3
 801e496:	5ac3      	ldrh	r3, [r0, r3]
 801e498:	9308      	str	r3, [sp, #32]
 801e49a:	f8be 3002 	ldrh.w	r3, [lr, #2]
 801e49e:	9309      	str	r3, [sp, #36]	@ 0x24
 801e4a0:	ea4f 400b 	mov.w	r0, fp, lsl #16
 801e4a4:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 801e4a8:	f42b 6bfc 	bic.w	fp, fp, #2016	@ 0x7e0
 801e4ac:	ea40 000b 	orr.w	r0, r0, fp
 801e4b0:	fb12 f30c 	smulbb	r3, r2, ip
 801e4b4:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801e4b8:	10db      	asrs	r3, r3, #3
 801e4ba:	f1cc 0e10 	rsb	lr, ip, #16
 801e4be:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801e4c2:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 801e4c6:	ebae 0e02 	sub.w	lr, lr, r2
 801e4ca:	ea4b 0101 	orr.w	r1, fp, r1
 801e4ce:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801e4d2:	4351      	muls	r1, r2
 801e4d4:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 801e4d6:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 801e4da:	fb0e 1e00 	mla	lr, lr, r0, r1
 801e4de:	0410      	lsls	r0, r2, #16
 801e4e0:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 801e4e4:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801e4e8:	4310      	orrs	r0, r2
 801e4ea:	9a08      	ldr	r2, [sp, #32]
 801e4ec:	9908      	ldr	r1, [sp, #32]
 801e4ee:	0412      	lsls	r2, r2, #16
 801e4f0:	fb03 e000 	mla	r0, r3, r0, lr
 801e4f4:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 801e4f8:	f421 6efc 	bic.w	lr, r1, #2016	@ 0x7e0
 801e4fc:	ea42 020e 	orr.w	r2, r2, lr
 801e500:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 801e504:	fb03 0302 	mla	r3, r3, r2, r0
 801e508:	0d5a      	lsrs	r2, r3, #21
 801e50a:	095b      	lsrs	r3, r3, #5
 801e50c:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801e510:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801e514:	4313      	orrs	r3, r2
 801e516:	f8a9 3000 	strh.w	r3, [r9]
 801e51a:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 801e51c:	441c      	add	r4, r3
 801e51e:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801e520:	f109 0902 	add.w	r9, r9, #2
 801e524:	441e      	add	r6, r3
 801e526:	f10a 3aff 	add.w	sl, sl, #4294967295
 801e52a:	e784      	b.n	801e436 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801e52c:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 801e52e:	441c      	add	r4, r3
 801e530:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801e532:	3d01      	subs	r5, #1
 801e534:	441e      	add	r6, r3
 801e536:	3702      	adds	r7, #2
 801e538:	e761      	b.n	801e3fe <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801e53a:	d01d      	beq.n	801e578 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 801e53c:	981b      	ldr	r0, [sp, #108]	@ 0x6c
 801e53e:	1e6b      	subs	r3, r5, #1
 801e540:	fb00 4003 	mla	r0, r0, r3, r4
 801e544:	1400      	asrs	r0, r0, #16
 801e546:	f53f af74 	bmi.w	801e432 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801e54a:	3901      	subs	r1, #1
 801e54c:	4288      	cmp	r0, r1
 801e54e:	f6bf af70 	bge.w	801e432 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801e552:	991c      	ldr	r1, [sp, #112]	@ 0x70
 801e554:	fb01 6303 	mla	r3, r1, r3, r6
 801e558:	141b      	asrs	r3, r3, #16
 801e55a:	f53f af6a 	bmi.w	801e432 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801e55e:	3a01      	subs	r2, #1
 801e560:	4293      	cmp	r3, r2
 801e562:	f6bf af66 	bge.w	801e432 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801e566:	46a9      	mov	r9, r5
 801e568:	46ba      	mov	sl, r7
 801e56a:	f1b9 0f00 	cmp.w	r9, #0
 801e56e:	dc5a      	bgt.n	801e626 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x270>
 801e570:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 801e574:	eb07 0745 	add.w	r7, r7, r5, lsl #1
 801e578:	9b07      	ldr	r3, [sp, #28]
 801e57a:	2b00      	cmp	r3, #0
 801e57c:	f340 80b8 	ble.w	801e6f0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 801e580:	ee30 0a04 	vadd.f32	s0, s0, s8
 801e584:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801e588:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801e58c:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801e58e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801e592:	ee31 1a05 	vadd.f32	s2, s2, s10
 801e596:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801e59a:	eef0 6a62 	vmov.f32	s13, s5
 801e59e:	ee61 7a27 	vmul.f32	s15, s2, s15
 801e5a2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801e5a6:	ee77 2a62 	vsub.f32	s5, s14, s5
 801e5aa:	ee16 4a90 	vmov	r4, s13
 801e5ae:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801e5b2:	eef0 6a43 	vmov.f32	s13, s6
 801e5b6:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801e5ba:	ee12 2a90 	vmov	r2, s5
 801e5be:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801e5c2:	fb92 f3f3 	sdiv	r3, r2, r3
 801e5c6:	ee13 2a10 	vmov	r2, s6
 801e5ca:	931b      	str	r3, [sp, #108]	@ 0x6c
 801e5cc:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801e5ce:	fb92 f3f3 	sdiv	r3, r2, r3
 801e5d2:	931c      	str	r3, [sp, #112]	@ 0x70
 801e5d4:	9b07      	ldr	r3, [sp, #28]
 801e5d6:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 801e5d8:	3b01      	subs	r3, #1
 801e5da:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801e5de:	9307      	str	r3, [sp, #28]
 801e5e0:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801e5e2:	ee16 6a90 	vmov	r6, s13
 801e5e6:	bf14      	ite	ne
 801e5e8:	461d      	movne	r5, r3
 801e5ea:	4615      	moveq	r5, r2
 801e5ec:	eeb0 3a67 	vmov.f32	s6, s15
 801e5f0:	eef0 2a47 	vmov.f32	s5, s14
 801e5f4:	e6f4      	b.n	801e3e0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 801e5f6:	f111 0b01 	adds.w	fp, r1, #1
 801e5fa:	d48e      	bmi.n	801e51a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801e5fc:	45de      	cmp	lr, fp
 801e5fe:	db8c      	blt.n	801e51a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801e600:	f110 0b01 	adds.w	fp, r0, #1
 801e604:	d489      	bmi.n	801e51a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801e606:	455b      	cmp	r3, fp
 801e608:	db87      	blt.n	801e51a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801e60a:	b21b      	sxth	r3, r3
 801e60c:	e9cd 1001 	strd	r1, r0, [sp, #4]
 801e610:	e9cd 2c03 	strd	r2, ip, [sp, #12]
 801e614:	9300      	str	r3, [sp, #0]
 801e616:	4642      	mov	r2, r8
 801e618:	fa0f f38e 	sxth.w	r3, lr
 801e61c:	4649      	mov	r1, r9
 801e61e:	980d      	ldr	r0, [sp, #52]	@ 0x34
 801e620:	f7ff fe4d 	bl	801e2be <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>
 801e624:	e779      	b.n	801e51a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801e626:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801e628:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 801e62c:	1420      	asrs	r0, r4, #16
 801e62e:	1431      	asrs	r1, r6, #16
 801e630:	fb03 0101 	mla	r1, r3, r1, r0
 801e634:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 801e638:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 801e63c:	f838 c011 	ldrh.w	ip, [r8, r1, lsl #1]
 801e640:	8841      	ldrh	r1, [r0, #2]
 801e642:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801e646:	f1be 0f00 	cmp.w	lr, #0
 801e64a:	d00b      	beq.n	801e664 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 801e64c:	f103 4300 	add.w	r3, r3, #2147483648	@ 0x80000000
 801e650:	3b01      	subs	r3, #1
 801e652:	005b      	lsls	r3, r3, #1
 801e654:	3302      	adds	r3, #2
 801e656:	eb00 0b03 	add.w	fp, r0, r3
 801e65a:	5ac3      	ldrh	r3, [r0, r3]
 801e65c:	930a      	str	r3, [sp, #40]	@ 0x28
 801e65e:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 801e662:	930b      	str	r3, [sp, #44]	@ 0x2c
 801e664:	ea4f 400c 	mov.w	r0, ip, lsl #16
 801e668:	fb12 f30e 	smulbb	r3, r2, lr
 801e66c:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 801e670:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801e674:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 801e678:	10db      	asrs	r3, r3, #3
 801e67a:	ea40 000c 	orr.w	r0, r0, ip
 801e67e:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801e682:	f1ce 0c10 	rsb	ip, lr, #16
 801e686:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 801e68a:	ebac 0c02 	sub.w	ip, ip, r2
 801e68e:	ea4b 0101 	orr.w	r1, fp, r1
 801e692:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801e696:	4351      	muls	r1, r2
 801e698:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 801e69a:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 801e69e:	fb0c 1c00 	mla	ip, ip, r0, r1
 801e6a2:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 801e6a6:	f422 60fc 	bic.w	r0, r2, #2016	@ 0x7e0
 801e6aa:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 801e6ac:	990a      	ldr	r1, [sp, #40]	@ 0x28
 801e6ae:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801e6b2:	0412      	lsls	r2, r2, #16
 801e6b4:	ea4b 0000 	orr.w	r0, fp, r0
 801e6b8:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 801e6bc:	f421 6bfc 	bic.w	fp, r1, #2016	@ 0x7e0
 801e6c0:	fb03 c000 	mla	r0, r3, r0, ip
 801e6c4:	ea42 0b0b 	orr.w	fp, r2, fp
 801e6c8:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 801e6cc:	fb03 000b 	mla	r0, r3, fp, r0
 801e6d0:	0d43      	lsrs	r3, r0, #21
 801e6d2:	0940      	lsrs	r0, r0, #5
 801e6d4:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801e6d8:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801e6dc:	4318      	orrs	r0, r3
 801e6de:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 801e6e0:	f82a 0b02 	strh.w	r0, [sl], #2
 801e6e4:	441c      	add	r4, r3
 801e6e6:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801e6e8:	f109 39ff 	add.w	r9, r9, #4294967295
 801e6ec:	441e      	add	r6, r3
 801e6ee:	e73c      	b.n	801e56a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
 801e6f0:	b00f      	add	sp, #60	@ 0x3c
 801e6f2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801e6f6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>:
 801e6f6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e6fa:	b085      	sub	sp, #20
 801e6fc:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	@ 0x3c
 801e700:	9102      	str	r1, [sp, #8]
 801e702:	2c00      	cmp	r4, #0
 801e704:	fb04 7103 	mla	r1, r4, r3, r7
 801e708:	f9bd e038 	ldrsh.w	lr, [sp, #56]	@ 0x38
 801e70c:	f89d 6044 	ldrb.w	r6, [sp, #68]	@ 0x44
 801e710:	f89d 0048 	ldrb.w	r0, [sp, #72]	@ 0x48
 801e714:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 801e718:	f2c0 811b 	blt.w	801e952 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 801e71c:	45a6      	cmp	lr, r4
 801e71e:	f340 8118 	ble.w	801e952 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 801e722:	2f00      	cmp	r7, #0
 801e724:	f2c0 8113 	blt.w	801e94e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 801e728:	42bb      	cmp	r3, r7
 801e72a:	f340 8110 	ble.w	801e94e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 801e72e:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 801e732:	1c7a      	adds	r2, r7, #1
 801e734:	f100 8110 	bmi.w	801e958 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 801e738:	4293      	cmp	r3, r2
 801e73a:	f340 810d 	ble.w	801e958 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 801e73e:	2e00      	cmp	r6, #0
 801e740:	f000 810c 	beq.w	801e95c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x266>
 801e744:	f8dc 1004 	ldr.w	r1, [ip, #4]
 801e748:	3401      	adds	r4, #1
 801e74a:	f100 810b 	bmi.w	801e964 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 801e74e:	45a6      	cmp	lr, r4
 801e750:	f340 8108 	ble.w	801e964 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 801e754:	2800      	cmp	r0, #0
 801e756:	f000 8108 	beq.w	801e96a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x274>
 801e75a:	2f00      	cmp	r7, #0
 801e75c:	f2c0 8100 	blt.w	801e960 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 801e760:	42bb      	cmp	r3, r7
 801e762:	f340 80fd 	ble.w	801e960 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 801e766:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 801e76a:	3701      	adds	r7, #1
 801e76c:	f100 8100 	bmi.w	801e970 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 801e770:	42bb      	cmp	r3, r7
 801e772:	f340 80fd 	ble.w	801e970 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 801e776:	2e00      	cmp	r6, #0
 801e778:	f000 80fc 	beq.w	801e974 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27e>
 801e77c:	3301      	adds	r3, #1
 801e77e:	f85c 2023 	ldr.w	r2, [ip, r3, lsl #2]
 801e782:	b2b6      	uxth	r6, r6
 801e784:	b280      	uxth	r0, r0
 801e786:	fb00 fe06 	mul.w	lr, r0, r6
 801e78a:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 801e78e:	0136      	lsls	r6, r6, #4
 801e790:	eba6 070e 	sub.w	r7, r6, lr
 801e794:	b280      	uxth	r0, r0
 801e796:	f5c6 7380 	rsb	r3, r6, #256	@ 0x100
 801e79a:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 801e79e:	b2bf      	uxth	r7, r7
 801e7a0:	1a1b      	subs	r3, r3, r0
 801e7a2:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 801e7a6:	b29b      	uxth	r3, r3
 801e7a8:	fb0a f607 	mul.w	r6, sl, r7
 801e7ac:	ea4f 6914 	mov.w	r9, r4, lsr #24
 801e7b0:	fb0b 6603 	mla	r6, fp, r3, r6
 801e7b4:	ea4f 6812 	mov.w	r8, r2, lsr #24
 801e7b8:	fb00 6609 	mla	r6, r0, r9, r6
 801e7bc:	fb0e 6608 	mla	r6, lr, r8, r6
 801e7c0:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801e7c4:	9600      	str	r6, [sp, #0]
 801e7c6:	2e00      	cmp	r6, #0
 801e7c8:	f000 80be 	beq.w	801e948 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x252>
 801e7cc:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 801e7d0:	fb0b fc0c 	mul.w	ip, fp, ip
 801e7d4:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
 801e7d8:	fb0b f505 	mul.w	r5, fp, r5
 801e7dc:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 801e7e0:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
 801e7e4:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801e7e8:	44dc      	add	ip, fp
 801e7ea:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e7ee:	9501      	str	r5, [sp, #4]
 801e7f0:	f00c 15ff 	and.w	r5, ip, #16711935	@ 0xff00ff
 801e7f4:	9503      	str	r5, [sp, #12]
 801e7f6:	9d01      	ldr	r5, [sp, #4]
 801e7f8:	9e02      	ldr	r6, [sp, #8]
 801e7fa:	f505 7c80 	add.w	ip, r5, #256	@ 0x100
 801e7fe:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801e802:	f001 1cff 	and.w	ip, r1, #16711935	@ 0xff00ff
 801e806:	fb0a fc0c 	mul.w	ip, sl, ip
 801e80a:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 801e80e:	ea4f 251c 	mov.w	r5, ip, lsr #8
 801e812:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 801e816:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801e81a:	4465      	add	r5, ip
 801e81c:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 801e820:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
 801e824:	fb09 fc0c 	mul.w	ip, r9, ip
 801e828:	fb09 f904 	mul.w	r9, r9, r4
 801e82c:	f509 7480 	add.w	r4, r9, #256	@ 0x100
 801e830:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 801e834:	f002 14ff 	and.w	r4, r2, #16711935	@ 0xff00ff
 801e838:	fb08 f404 	mul.w	r4, r8, r4
 801e83c:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 801e840:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 801e844:	fb08 f802 	mul.w	r8, r8, r2
 801e848:	fb0a fa01 	mul.w	sl, sl, r1
 801e84c:	0a22      	lsrs	r2, r4, #8
 801e84e:	f50a 7180 	add.w	r1, sl, #256	@ 0x100
 801e852:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 801e856:	f104 1401 	add.w	r4, r4, #65537	@ 0x10001
 801e85a:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 801e85e:	4414      	add	r4, r2
 801e860:	ea4f 211c 	mov.w	r1, ip, lsr #8
 801e864:	f508 7280 	add.w	r2, r8, #256	@ 0x100
 801e868:	0a2d      	lsrs	r5, r5, #8
 801e86a:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 801e86e:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 801e872:	9a03      	ldr	r2, [sp, #12]
 801e874:	8836      	ldrh	r6, [r6, #0]
 801e876:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 801e87a:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801e87e:	437d      	muls	r5, r7
 801e880:	4461      	add	r1, ip
 801e882:	0a24      	lsrs	r4, r4, #8
 801e884:	fb02 5503 	mla	r5, r2, r3, r5
 801e888:	0a09      	lsrs	r1, r1, #8
 801e88a:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
 801e88e:	fb04 540e 	mla	r4, r4, lr, r5
 801e892:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 801e896:	fb01 4100 	mla	r1, r1, r0, r4
 801e89a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801e89e:	0a09      	lsrs	r1, r1, #8
 801e8a0:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801e8a4:	f001 14ff 	and.w	r4, r1, #16711935	@ 0xff00ff
 801e8a8:	fb07 f70a 	mul.w	r7, r7, sl
 801e8ac:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801e8b0:	f40b 417f 	and.w	r1, fp, #65280	@ 0xff00
 801e8b4:	fb03 7101 	mla	r1, r3, r1, r7
 801e8b8:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801e8bc:	f408 487f 	and.w	r8, r8, #65280	@ 0xff00
 801e8c0:	fb0e 1e08 	mla	lr, lr, r8, r1
 801e8c4:	f409 417f 	and.w	r1, r9, #65280	@ 0xff00
 801e8c8:	fb00 e101 	mla	r1, r0, r1, lr
 801e8cc:	f89d 004c 	ldrb.w	r0, [sp, #76]	@ 0x4c
 801e8d0:	9a00      	ldr	r2, [sp, #0]
 801e8d2:	b287      	uxth	r7, r0
 801e8d4:	437a      	muls	r2, r7
 801e8d6:	0a09      	lsrs	r1, r1, #8
 801e8d8:	1c53      	adds	r3, r2, #1
 801e8da:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 801e8de:	4321      	orrs	r1, r4
 801e8e0:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801e8e4:	1235      	asrs	r5, r6, #8
 801e8e6:	0c0a      	lsrs	r2, r1, #16
 801e8e8:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 801e8ec:	b2db      	uxtb	r3, r3
 801e8ee:	fb12 f207 	smulbb	r2, r2, r7
 801e8f2:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 801e8f6:	fb05 2503 	mla	r5, r5, r3, r2
 801e8fa:	f3c1 2407 	ubfx	r4, r1, #8, #8
 801e8fe:	10f2      	asrs	r2, r6, #3
 801e900:	b2c8      	uxtb	r0, r1
 801e902:	00f6      	lsls	r6, r6, #3
 801e904:	fb14 f407 	smulbb	r4, r4, r7
 801e908:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 801e90c:	b2f6      	uxtb	r6, r6
 801e90e:	fb10 f007 	smulbb	r0, r0, r7
 801e912:	fb02 4203 	mla	r2, r2, r3, r4
 801e916:	b2ad      	uxth	r5, r5
 801e918:	fb06 0303 	mla	r3, r6, r3, r0
 801e91c:	b299      	uxth	r1, r3
 801e91e:	b294      	uxth	r4, r2
 801e920:	1c6b      	adds	r3, r5, #1
 801e922:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801e926:	1c62      	adds	r2, r4, #1
 801e928:	1c4b      	adds	r3, r1, #1
 801e92a:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801e92e:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 801e932:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 801e936:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801e93a:	0952      	lsrs	r2, r2, #5
 801e93c:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801e940:	432b      	orrs	r3, r5
 801e942:	4313      	orrs	r3, r2
 801e944:	9a02      	ldr	r2, [sp, #8]
 801e946:	8013      	strh	r3, [r2, #0]
 801e948:	b005      	add	sp, #20
 801e94a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e94e:	2500      	movs	r5, #0
 801e950:	e6ef      	b.n	801e732 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x3c>
 801e952:	2100      	movs	r1, #0
 801e954:	460d      	mov	r5, r1
 801e956:	e6f7      	b.n	801e748 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 801e958:	2100      	movs	r1, #0
 801e95a:	e6f5      	b.n	801e748 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 801e95c:	4631      	mov	r1, r6
 801e95e:	e6f3      	b.n	801e748 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 801e960:	2400      	movs	r4, #0
 801e962:	e702      	b.n	801e76a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x74>
 801e964:	2200      	movs	r2, #0
 801e966:	4614      	mov	r4, r2
 801e968:	e70b      	b.n	801e782 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 801e96a:	4602      	mov	r2, r0
 801e96c:	4604      	mov	r4, r0
 801e96e:	e708      	b.n	801e782 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 801e970:	2200      	movs	r2, #0
 801e972:	e706      	b.n	801e782 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 801e974:	4632      	mov	r2, r6
 801e976:	e704      	b.n	801e782 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>

0801e978 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801e978:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e97c:	b09d      	sub	sp, #116	@ 0x74
 801e97e:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	@ 0x9c
 801e982:	9219      	str	r2, [sp, #100]	@ 0x64
 801e984:	9307      	str	r3, [sp, #28]
 801e986:	9a2b      	ldr	r2, [sp, #172]	@ 0xac
 801e988:	f89d 30bc 	ldrb.w	r3, [sp, #188]	@ 0xbc
 801e98c:	931a      	str	r3, [sp, #104]	@ 0x68
 801e98e:	9117      	str	r1, [sp, #92]	@ 0x5c
 801e990:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	@ 0xb0
 801e994:	901b      	str	r0, [sp, #108]	@ 0x6c
 801e996:	6850      	ldr	r0, [r2, #4]
 801e998:	6812      	ldr	r2, [r2, #0]
 801e99a:	fb00 1303 	mla	r3, r0, r3, r1
 801e99e:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801e9a2:	930a      	str	r3, [sp, #40]	@ 0x28
 801e9a4:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 801e9a6:	681b      	ldr	r3, [r3, #0]
 801e9a8:	9310      	str	r3, [sp, #64]	@ 0x40
 801e9aa:	f8bd 3068 	ldrh.w	r3, [sp, #104]	@ 0x68
 801e9ae:	930b      	str	r3, [sp, #44]	@ 0x2c
 801e9b0:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 801e9b2:	2b00      	cmp	r3, #0
 801e9b4:	dc03      	bgt.n	801e9be <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 801e9b6:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 801e9b8:	2b00      	cmp	r3, #0
 801e9ba:	f340 8375 	ble.w	801f0a8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 801e9be:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 801e9c0:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801e9c4:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801e9c8:	1e48      	subs	r0, r1, #1
 801e9ca:	1e57      	subs	r7, r2, #1
 801e9cc:	9b07      	ldr	r3, [sp, #28]
 801e9ce:	2b00      	cmp	r3, #0
 801e9d0:	f340 818e 	ble.w	801ecf0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 801e9d4:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801e9d8:	ea4f 4326 	mov.w	r3, r6, asr #16
 801e9dc:	d406      	bmi.n	801e9ec <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801e9de:	4584      	cmp	ip, r0
 801e9e0:	da04      	bge.n	801e9ec <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801e9e2:	2b00      	cmp	r3, #0
 801e9e4:	db02      	blt.n	801e9ec <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801e9e6:	42bb      	cmp	r3, r7
 801e9e8:	f2c0 8183 	blt.w	801ecf2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 801e9ec:	f11c 0c01 	adds.w	ip, ip, #1
 801e9f0:	f100 8173 	bmi.w	801ecda <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801e9f4:	4561      	cmp	r1, ip
 801e9f6:	f2c0 8170 	blt.w	801ecda <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801e9fa:	3301      	adds	r3, #1
 801e9fc:	f100 816d 	bmi.w	801ecda <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801ea00:	429a      	cmp	r2, r3
 801ea02:	f2c0 816a 	blt.w	801ecda <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801ea06:	9b07      	ldr	r3, [sp, #28]
 801ea08:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
 801ea0a:	9318      	str	r3, [sp, #96]	@ 0x60
 801ea0c:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801ea0e:	2b00      	cmp	r3, #0
 801ea10:	f340 818c 	ble.w	801ed2c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b4>
 801ea14:	9a2e      	ldr	r2, [sp, #184]	@ 0xb8
 801ea16:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 801ea18:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801ea1c:	689b      	ldr	r3, [r3, #8]
 801ea1e:	1422      	asrs	r2, r4, #16
 801ea20:	ea4f 4c26 	mov.w	ip, r6, asr #16
 801ea24:	f3c4 3003 	ubfx	r0, r4, #12, #4
 801ea28:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801ea2c:	f100 81cd 	bmi.w	801edca <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801ea30:	f103 38ff 	add.w	r8, r3, #4294967295
 801ea34:	4542      	cmp	r2, r8
 801ea36:	f280 81c8 	bge.w	801edca <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801ea3a:	f1bc 0f00 	cmp.w	ip, #0
 801ea3e:	f2c0 81c4 	blt.w	801edca <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801ea42:	f10e 38ff 	add.w	r8, lr, #4294967295
 801ea46:	45c4      	cmp	ip, r8
 801ea48:	f280 81bf 	bge.w	801edca <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801ea4c:	b21b      	sxth	r3, r3
 801ea4e:	fb0c 2203 	mla	r2, ip, r3, r2
 801ea52:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 801ea54:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 801ea58:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 801ea5c:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 801ea60:	2800      	cmp	r0, #0
 801ea62:	f000 81a9 	beq.w	801edb8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x440>
 801ea66:	f8d8 5004 	ldr.w	r5, [r8, #4]
 801ea6a:	950c      	str	r5, [sp, #48]	@ 0x30
 801ea6c:	0e2d      	lsrs	r5, r5, #24
 801ea6e:	9513      	str	r5, [sp, #76]	@ 0x4c
 801ea70:	b181      	cbz	r1, 801ea94 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801ea72:	f103 4380 	add.w	r3, r3, #1073741824	@ 0x40000000
 801ea76:	3b01      	subs	r3, #1
 801ea78:	009b      	lsls	r3, r3, #2
 801ea7a:	3304      	adds	r3, #4
 801ea7c:	eb08 0c03 	add.w	ip, r8, r3
 801ea80:	f858 3003 	ldr.w	r3, [r8, r3]
 801ea84:	9308      	str	r3, [sp, #32]
 801ea86:	0e1b      	lsrs	r3, r3, #24
 801ea88:	9311      	str	r3, [sp, #68]	@ 0x44
 801ea8a:	f8dc 3004 	ldr.w	r3, [ip, #4]
 801ea8e:	930d      	str	r3, [sp, #52]	@ 0x34
 801ea90:	0e1b      	lsrs	r3, r3, #24
 801ea92:	9314      	str	r3, [sp, #80]	@ 0x50
 801ea94:	b280      	uxth	r0, r0
 801ea96:	b289      	uxth	r1, r1
 801ea98:	fb00 f901 	mul.w	r9, r0, r1
 801ea9c:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801eaa0:	0100      	lsls	r0, r0, #4
 801eaa2:	eba0 0809 	sub.w	r8, r0, r9
 801eaa6:	b289      	uxth	r1, r1
 801eaa8:	f5c0 7380 	rsb	r3, r0, #256	@ 0x100
 801eaac:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 801eaae:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801eab0:	fa1f f888 	uxth.w	r8, r8
 801eab4:	1a5b      	subs	r3, r3, r1
 801eab6:	b29b      	uxth	r3, r3
 801eab8:	fb08 f000 	mul.w	r0, r8, r0
 801eabc:	fb03 000e 	mla	r0, r3, lr, r0
 801eac0:	fb01 0005 	mla	r0, r1, r5, r0
 801eac4:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 801eac6:	fb09 0005 	mla	r0, r9, r5, r0
 801eaca:	f3c0 2007 	ubfx	r0, r0, #8, #8
 801eace:	2800      	cmp	r0, #0
 801ead0:	f000 80fa 	beq.w	801ecc8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801ead4:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
 801ead8:	d01b      	beq.n	801eb12 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 801eada:	f002 1aff 	and.w	sl, r2, #16711935	@ 0xff00ff
 801eade:	fb0e fa0a 	mul.w	sl, lr, sl
 801eae2:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 801eae6:	fb0e fe02 	mul.w	lr, lr, r2
 801eaea:	ea4f 221a 	mov.w	r2, sl, lsr #8
 801eaee:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 801eaf2:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 801eaf6:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
 801eafa:	4452      	add	r2, sl
 801eafc:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801eb00:	0a12      	lsrs	r2, r2, #8
 801eb02:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801eb06:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 801eb0a:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 801eb0e:	ea42 020c 	orr.w	r2, r2, ip
 801eb12:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 801eb14:	2dff      	cmp	r5, #255	@ 0xff
 801eb16:	d021      	beq.n	801eb5c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 801eb18:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 801eb1a:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 801eb1e:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 801eb20:	fb05 fb0b 	mul.w	fp, r5, fp
 801eb24:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 801eb26:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 801eb2a:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 801eb2c:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801eb30:	fb05 fa0a 	mul.w	sl, r5, sl
 801eb34:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801eb38:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801eb3c:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801eb40:	44de      	add	lr, fp
 801eb42:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801eb46:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801eb4a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801eb4e:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801eb52:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801eb56:	ea4e 050a 	orr.w	r5, lr, sl
 801eb5a:	950c      	str	r5, [sp, #48]	@ 0x30
 801eb5c:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801eb5e:	2dff      	cmp	r5, #255	@ 0xff
 801eb60:	d021      	beq.n	801eba6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22e>
 801eb62:	9d08      	ldr	r5, [sp, #32]
 801eb64:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 801eb68:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801eb6a:	fb05 fb0b 	mul.w	fp, r5, fp
 801eb6e:	9d08      	ldr	r5, [sp, #32]
 801eb70:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 801eb74:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801eb76:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801eb7a:	fb05 fa0a 	mul.w	sl, r5, sl
 801eb7e:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801eb82:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801eb86:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801eb8a:	44de      	add	lr, fp
 801eb8c:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801eb90:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801eb94:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801eb98:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801eb9c:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801eba0:	ea4e 050a 	orr.w	r5, lr, sl
 801eba4:	9508      	str	r5, [sp, #32]
 801eba6:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 801eba8:	2dff      	cmp	r5, #255	@ 0xff
 801ebaa:	d021      	beq.n	801ebf0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x278>
 801ebac:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 801ebae:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 801ebb2:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 801ebb4:	fb05 fb0b 	mul.w	fp, r5, fp
 801ebb8:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 801ebba:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 801ebbe:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 801ebc0:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801ebc4:	fb05 fa0a 	mul.w	sl, r5, sl
 801ebc8:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801ebcc:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801ebd0:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801ebd4:	44de      	add	lr, fp
 801ebd6:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801ebda:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801ebde:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801ebe2:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801ebe6:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801ebea:	ea4e 050a 	orr.w	r5, lr, sl
 801ebee:	950d      	str	r5, [sp, #52]	@ 0x34
 801ebf0:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 801ebf2:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 801ebf6:	9d08      	ldr	r5, [sp, #32]
 801ebf8:	f002 1eff 	and.w	lr, r2, #16711935	@ 0xff00ff
 801ebfc:	fb08 fc0c 	mul.w	ip, r8, ip
 801ec00:	fb03 cc0e 	mla	ip, r3, lr, ip
 801ec04:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
 801ec08:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 801ec0a:	fb01 cc0e 	mla	ip, r1, lr, ip
 801ec0e:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
 801ec12:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 801ec14:	fb09 cc0e 	mla	ip, r9, lr, ip
 801ec18:	f405 4e7f 	and.w	lr, r5, #65280	@ 0xff00
 801ec1c:	fb08 f80e 	mul.w	r8, r8, lr
 801ec20:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 801ec24:	fb03 8202 	mla	r2, r3, r2, r8
 801ec28:	9b08      	ldr	r3, [sp, #32]
 801ec2a:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 801ec2c:	f403 4a7f 	and.w	sl, r3, #65280	@ 0xff00
 801ec30:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801ec32:	fb01 220a 	mla	r2, r1, sl, r2
 801ec36:	f403 417f 	and.w	r1, r3, #65280	@ 0xff00
 801ec3a:	fb09 2901 	mla	r9, r9, r1, r2
 801ec3e:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 801ec40:	883b      	ldrh	r3, [r7, #0]
 801ec42:	4342      	muls	r2, r0
 801ec44:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801ec48:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801ec4c:	1c50      	adds	r0, r2, #1
 801ec4e:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801ec52:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
 801ec56:	ea4c 0c09 	orr.w	ip, ip, r9
 801ec5a:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 801ec5e:	1219      	asrs	r1, r3, #8
 801ec60:	ea4f 421c 	mov.w	r2, ip, lsr #16
 801ec64:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 801ec68:	b2c0      	uxtb	r0, r0
 801ec6a:	fb12 f205 	smulbb	r2, r2, r5
 801ec6e:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 801ec72:	fb01 2100 	mla	r1, r1, r0, r2
 801ec76:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 801ec7a:	10da      	asrs	r2, r3, #3
 801ec7c:	fa5f fc8c 	uxtb.w	ip, ip
 801ec80:	00db      	lsls	r3, r3, #3
 801ec82:	fb1c fc05 	smulbb	ip, ip, r5
 801ec86:	b2db      	uxtb	r3, r3
 801ec88:	b289      	uxth	r1, r1
 801ec8a:	fb03 c300 	mla	r3, r3, r0, ip
 801ec8e:	fa1f fc83 	uxth.w	ip, r3
 801ec92:	1c4b      	adds	r3, r1, #1
 801ec94:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801ec98:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 801ec9c:	fb1e fe05 	smulbb	lr, lr, r5
 801eca0:	f10c 0301 	add.w	r3, ip, #1
 801eca4:	fb02 e200 	mla	r2, r2, r0, lr
 801eca8:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 801ecac:	b292      	uxth	r2, r2
 801ecae:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
 801ecb2:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801ecb6:	430b      	orrs	r3, r1
 801ecb8:	1c51      	adds	r1, r2, #1
 801ecba:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801ecbe:	0952      	lsrs	r2, r2, #5
 801ecc0:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801ecc4:	4313      	orrs	r3, r2
 801ecc6:	803b      	strh	r3, [r7, #0]
 801ecc8:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 801ecca:	441c      	add	r4, r3
 801eccc:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 801ecce:	441e      	add	r6, r3
 801ecd0:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801ecd2:	3b01      	subs	r3, #1
 801ecd4:	3702      	adds	r7, #2
 801ecd6:	9318      	str	r3, [sp, #96]	@ 0x60
 801ecd8:	e698      	b.n	801ea0c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801ecda:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 801ecdc:	441c      	add	r4, r3
 801ecde:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 801ece0:	441e      	add	r6, r3
 801ece2:	9b07      	ldr	r3, [sp, #28]
 801ece4:	3b01      	subs	r3, #1
 801ece6:	9307      	str	r3, [sp, #28]
 801ece8:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801ecea:	3302      	adds	r3, #2
 801ecec:	930a      	str	r3, [sp, #40]	@ 0x28
 801ecee:	e66d      	b.n	801e9cc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 801ecf0:	d023      	beq.n	801ed3a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 801ecf2:	9b07      	ldr	r3, [sp, #28]
 801ecf4:	9829      	ldr	r0, [sp, #164]	@ 0xa4
 801ecf6:	3b01      	subs	r3, #1
 801ecf8:	fb00 4003 	mla	r0, r0, r3, r4
 801ecfc:	1400      	asrs	r0, r0, #16
 801ecfe:	f53f ae82 	bmi.w	801ea06 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801ed02:	3901      	subs	r1, #1
 801ed04:	4288      	cmp	r0, r1
 801ed06:	f6bf ae7e 	bge.w	801ea06 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801ed0a:	992a      	ldr	r1, [sp, #168]	@ 0xa8
 801ed0c:	fb01 6303 	mla	r3, r1, r3, r6
 801ed10:	141b      	asrs	r3, r3, #16
 801ed12:	f53f ae78 	bmi.w	801ea06 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801ed16:	3a01      	subs	r2, #1
 801ed18:	4293      	cmp	r3, r2
 801ed1a:	f6bf ae74 	bge.w	801ea06 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801ed1e:	f8dd b01c 	ldr.w	fp, [sp, #28]
 801ed22:	f8dd 9028 	ldr.w	r9, [sp, #40]	@ 0x28
 801ed26:	f1bb 0f00 	cmp.w	fp, #0
 801ed2a:	dc6c      	bgt.n	801ee06 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 801ed2c:	9b07      	ldr	r3, [sp, #28]
 801ed2e:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801ed32:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801ed34:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 801ed38:	930a      	str	r3, [sp, #40]	@ 0x28
 801ed3a:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 801ed3c:	2b00      	cmp	r3, #0
 801ed3e:	f340 81b3 	ble.w	801f0a8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 801ed42:	ee30 0a04 	vadd.f32	s0, s0, s8
 801ed46:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801ed4a:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801ed4e:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801ed50:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801ed54:	ee31 1a05 	vadd.f32	s2, s2, s10
 801ed58:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801ed5c:	eef0 6a62 	vmov.f32	s13, s5
 801ed60:	ee61 7a27 	vmul.f32	s15, s2, s15
 801ed64:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801ed68:	ee77 2a62 	vsub.f32	s5, s14, s5
 801ed6c:	ee16 4a90 	vmov	r4, s13
 801ed70:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801ed74:	eef0 6a43 	vmov.f32	s13, s6
 801ed78:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801ed7c:	ee12 2a90 	vmov	r2, s5
 801ed80:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801ed84:	fb92 f3f3 	sdiv	r3, r2, r3
 801ed88:	ee13 2a10 	vmov	r2, s6
 801ed8c:	9329      	str	r3, [sp, #164]	@ 0xa4
 801ed8e:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801ed90:	fb92 f3f3 	sdiv	r3, r2, r3
 801ed94:	932a      	str	r3, [sp, #168]	@ 0xa8
 801ed96:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 801ed98:	9a19      	ldr	r2, [sp, #100]	@ 0x64
 801ed9a:	3b01      	subs	r3, #1
 801ed9c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801eda0:	9317      	str	r3, [sp, #92]	@ 0x5c
 801eda2:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801eda4:	bf08      	it	eq
 801eda6:	4613      	moveq	r3, r2
 801eda8:	ee16 6a90 	vmov	r6, s13
 801edac:	9307      	str	r3, [sp, #28]
 801edae:	eeb0 3a67 	vmov.f32	s6, s15
 801edb2:	eef0 2a47 	vmov.f32	s5, s14
 801edb6:	e5fb      	b.n	801e9b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801edb8:	2900      	cmp	r1, #0
 801edba:	f43f ae6b 	beq.w	801ea94 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801edbe:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 801edc2:	9308      	str	r3, [sp, #32]
 801edc4:	0e1b      	lsrs	r3, r3, #24
 801edc6:	9311      	str	r3, [sp, #68]	@ 0x44
 801edc8:	e664      	b.n	801ea94 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801edca:	f112 0801 	adds.w	r8, r2, #1
 801edce:	f53f af7b 	bmi.w	801ecc8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801edd2:	4543      	cmp	r3, r8
 801edd4:	f6ff af78 	blt.w	801ecc8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801edd8:	f11c 0801 	adds.w	r8, ip, #1
 801eddc:	f53f af74 	bmi.w	801ecc8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801ede0:	45c6      	cmp	lr, r8
 801ede2:	f6ff af71 	blt.w	801ecc8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801ede6:	9d1a      	ldr	r5, [sp, #104]	@ 0x68
 801ede8:	9201      	str	r2, [sp, #4]
 801edea:	fa0f f28e 	sxth.w	r2, lr
 801edee:	e9cd 1504 	strd	r1, r5, [sp, #16]
 801edf2:	e9cd c002 	strd	ip, r0, [sp, #8]
 801edf6:	9200      	str	r2, [sp, #0]
 801edf8:	b21b      	sxth	r3, r3
 801edfa:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 801edfc:	981b      	ldr	r0, [sp, #108]	@ 0x6c
 801edfe:	4639      	mov	r1, r7
 801ee00:	f7ff fc79 	bl	801e6f6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>
 801ee04:	e760      	b.n	801ecc8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801ee06:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 801ee08:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 801ee0a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801ee0e:	1427      	asrs	r7, r4, #16
 801ee10:	1433      	asrs	r3, r6, #16
 801ee12:	fb01 7303 	mla	r3, r1, r3, r7
 801ee16:	eb05 0783 	add.w	r7, r5, r3, lsl #2
 801ee1a:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 801ee1e:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801ee22:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801ee26:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801ee2a:	2a00      	cmp	r2, #0
 801ee2c:	f000 8133 	beq.w	801f096 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x71e>
 801ee30:	687d      	ldr	r5, [r7, #4]
 801ee32:	950e      	str	r5, [sp, #56]	@ 0x38
 801ee34:	0e2d      	lsrs	r5, r5, #24
 801ee36:	9515      	str	r5, [sp, #84]	@ 0x54
 801ee38:	b178      	cbz	r0, 801ee5a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 801ee3a:	f101 4180 	add.w	r1, r1, #1073741824	@ 0x40000000
 801ee3e:	3901      	subs	r1, #1
 801ee40:	0089      	lsls	r1, r1, #2
 801ee42:	3104      	adds	r1, #4
 801ee44:	eb07 0e01 	add.w	lr, r7, r1
 801ee48:	5879      	ldr	r1, [r7, r1]
 801ee4a:	9109      	str	r1, [sp, #36]	@ 0x24
 801ee4c:	0e09      	lsrs	r1, r1, #24
 801ee4e:	9112      	str	r1, [sp, #72]	@ 0x48
 801ee50:	f8de 1004 	ldr.w	r1, [lr, #4]
 801ee54:	910f      	str	r1, [sp, #60]	@ 0x3c
 801ee56:	0e09      	lsrs	r1, r1, #24
 801ee58:	9116      	str	r1, [sp, #88]	@ 0x58
 801ee5a:	b292      	uxth	r2, r2
 801ee5c:	b280      	uxth	r0, r0
 801ee5e:	fb02 f800 	mul.w	r8, r2, r0
 801ee62:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 801ee66:	0112      	lsls	r2, r2, #4
 801ee68:	eba2 0e08 	sub.w	lr, r2, r8
 801ee6c:	b280      	uxth	r0, r0
 801ee6e:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
 801ee72:	9915      	ldr	r1, [sp, #84]	@ 0x54
 801ee74:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 801ee76:	fa1f fe8e 	uxth.w	lr, lr
 801ee7a:	1a12      	subs	r2, r2, r0
 801ee7c:	b292      	uxth	r2, r2
 801ee7e:	fb0e f101 	mul.w	r1, lr, r1
 801ee82:	fb02 110c 	mla	r1, r2, ip, r1
 801ee86:	fb00 1105 	mla	r1, r0, r5, r1
 801ee8a:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 801ee8c:	fb08 1105 	mla	r1, r8, r5, r1
 801ee90:	f3c1 2107 	ubfx	r1, r1, #8, #8
 801ee94:	2900      	cmp	r1, #0
 801ee96:	f000 80f5 	beq.w	801f084 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70c>
 801ee9a:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
 801ee9e:	d019      	beq.n	801eed4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55c>
 801eea0:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 801eea4:	fb0c fa0a 	mul.w	sl, ip, sl
 801eea8:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801eeac:	fb0c fc03 	mul.w	ip, ip, r3
 801eeb0:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801eeb4:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801eeb8:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 801eebc:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
 801eec0:	4453      	add	r3, sl
 801eec2:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801eec6:	0a1b      	lsrs	r3, r3, #8
 801eec8:	0a3f      	lsrs	r7, r7, #8
 801eeca:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801eece:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 801eed2:	433b      	orrs	r3, r7
 801eed4:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 801eed6:	2dff      	cmp	r5, #255	@ 0xff
 801eed8:	d020      	beq.n	801ef1c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a4>
 801eeda:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 801eedc:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 801eee0:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 801eee2:	436f      	muls	r7, r5
 801eee4:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 801eee6:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 801eeea:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 801eeec:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801eef0:	fb05 fa0a 	mul.w	sl, r5, sl
 801eef4:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801eef8:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801eefc:	44bc      	add	ip, r7
 801eefe:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801ef02:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801ef06:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801ef0a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801ef0e:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801ef12:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801ef16:	ea4c 050a 	orr.w	r5, ip, sl
 801ef1a:	950e      	str	r5, [sp, #56]	@ 0x38
 801ef1c:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 801ef1e:	2dff      	cmp	r5, #255	@ 0xff
 801ef20:	d020      	beq.n	801ef64 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ec>
 801ef22:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 801ef24:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 801ef28:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 801ef2a:	436f      	muls	r7, r5
 801ef2c:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 801ef2e:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 801ef32:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 801ef34:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801ef38:	fb05 fa0a 	mul.w	sl, r5, sl
 801ef3c:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801ef40:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801ef44:	44bc      	add	ip, r7
 801ef46:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801ef4a:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801ef4e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801ef52:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801ef56:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801ef5a:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801ef5e:	ea4c 050a 	orr.w	r5, ip, sl
 801ef62:	9509      	str	r5, [sp, #36]	@ 0x24
 801ef64:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 801ef66:	2dff      	cmp	r5, #255	@ 0xff
 801ef68:	d020      	beq.n	801efac <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x634>
 801ef6a:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 801ef6c:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 801ef70:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 801ef72:	436f      	muls	r7, r5
 801ef74:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 801ef76:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 801ef7a:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 801ef7c:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801ef80:	fb05 fa0a 	mul.w	sl, r5, sl
 801ef84:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801ef88:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801ef8c:	44bc      	add	ip, r7
 801ef8e:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801ef92:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801ef96:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801ef9a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801ef9e:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801efa2:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801efa6:	ea4c 050a 	orr.w	r5, ip, sl
 801efaa:	950f      	str	r5, [sp, #60]	@ 0x3c
 801efac:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 801efae:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 801efb2:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 801efb4:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
 801efb8:	fb0e f707 	mul.w	r7, lr, r7
 801efbc:	fb02 770c 	mla	r7, r2, ip, r7
 801efc0:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 801efc4:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 801efc6:	fb00 770c 	mla	r7, r0, ip, r7
 801efca:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 801efce:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 801efd0:	fb08 770c 	mla	r7, r8, ip, r7
 801efd4:	f405 4c7f 	and.w	ip, r5, #65280	@ 0xff00
 801efd8:	fb0e fe0c 	mul.w	lr, lr, ip
 801efdc:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801efe0:	fb02 e303 	mla	r3, r2, r3, lr
 801efe4:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 801efe6:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 801efe8:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
 801efec:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801efee:	fb00 330a 	mla	r3, r0, sl, r3
 801eff2:	f402 4c7f 	and.w	ip, r2, #65280	@ 0xff00
 801eff6:	fb08 3c0c 	mla	ip, r8, ip, r3
 801effa:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801effc:	f8b9 0000 	ldrh.w	r0, [r9]
 801f000:	4359      	muls	r1, r3
 801f002:	0a3f      	lsrs	r7, r7, #8
 801f004:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801f008:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 801f00c:	1c4b      	adds	r3, r1, #1
 801f00e:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
 801f012:	ea47 070c 	orr.w	r7, r7, ip
 801f016:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801f01a:	1202      	asrs	r2, r0, #8
 801f01c:	0c3b      	lsrs	r3, r7, #16
 801f01e:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 801f022:	b2c9      	uxtb	r1, r1
 801f024:	fb13 f305 	smulbb	r3, r3, r5
 801f028:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 801f02c:	fb02 3201 	mla	r2, r2, r1, r3
 801f030:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 801f034:	10c3      	asrs	r3, r0, #3
 801f036:	b2ff      	uxtb	r7, r7
 801f038:	00c0      	lsls	r0, r0, #3
 801f03a:	b2c0      	uxtb	r0, r0
 801f03c:	fb17 f705 	smulbb	r7, r7, r5
 801f040:	fb00 7001 	mla	r0, r0, r1, r7
 801f044:	b292      	uxth	r2, r2
 801f046:	fb1c fc05 	smulbb	ip, ip, r5
 801f04a:	b280      	uxth	r0, r0
 801f04c:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 801f050:	fb03 c301 	mla	r3, r3, r1, ip
 801f054:	1c51      	adds	r1, r2, #1
 801f056:	f100 0c01 	add.w	ip, r0, #1
 801f05a:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801f05e:	eb0c 2c10 	add.w	ip, ip, r0, lsr #8
 801f062:	b29b      	uxth	r3, r3
 801f064:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801f068:	f402 4278 	and.w	r2, r2, #63488	@ 0xf800
 801f06c:	ea4c 0202 	orr.w	r2, ip, r2
 801f070:	f103 0c01 	add.w	ip, r3, #1
 801f074:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 801f078:	095b      	lsrs	r3, r3, #5
 801f07a:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801f07e:	431a      	orrs	r2, r3
 801f080:	f8a9 2000 	strh.w	r2, [r9]
 801f084:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 801f086:	441c      	add	r4, r3
 801f088:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 801f08a:	f109 0902 	add.w	r9, r9, #2
 801f08e:	441e      	add	r6, r3
 801f090:	f10b 3bff 	add.w	fp, fp, #4294967295
 801f094:	e647      	b.n	801ed26 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 801f096:	2800      	cmp	r0, #0
 801f098:	f43f aedf 	beq.w	801ee5a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 801f09c:	f857 1021 	ldr.w	r1, [r7, r1, lsl #2]
 801f0a0:	9109      	str	r1, [sp, #36]	@ 0x24
 801f0a2:	0e09      	lsrs	r1, r1, #24
 801f0a4:	9112      	str	r1, [sp, #72]	@ 0x48
 801f0a6:	e6d8      	b.n	801ee5a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 801f0a8:	b01d      	add	sp, #116	@ 0x74
 801f0aa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801f0ae <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>:
 801f0ae:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f0b2:	b085      	sub	sp, #20
 801f0b4:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	@ 0x3c
 801f0b8:	9102      	str	r1, [sp, #8]
 801f0ba:	2c00      	cmp	r4, #0
 801f0bc:	fb04 7103 	mla	r1, r4, r3, r7
 801f0c0:	f9bd e038 	ldrsh.w	lr, [sp, #56]	@ 0x38
 801f0c4:	f89d 6044 	ldrb.w	r6, [sp, #68]	@ 0x44
 801f0c8:	f89d 0048 	ldrb.w	r0, [sp, #72]	@ 0x48
 801f0cc:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 801f0d0:	f2c0 810c 	blt.w	801f2ec <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 801f0d4:	45a6      	cmp	lr, r4
 801f0d6:	f340 8109 	ble.w	801f2ec <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 801f0da:	2f00      	cmp	r7, #0
 801f0dc:	f2c0 8104 	blt.w	801f2e8 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 801f0e0:	42bb      	cmp	r3, r7
 801f0e2:	f340 8101 	ble.w	801f2e8 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 801f0e6:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 801f0ea:	1c7a      	adds	r2, r7, #1
 801f0ec:	f100 8101 	bmi.w	801f2f2 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 801f0f0:	4293      	cmp	r3, r2
 801f0f2:	f340 80fe 	ble.w	801f2f2 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 801f0f6:	2e00      	cmp	r6, #0
 801f0f8:	f000 80fd 	beq.w	801f2f6 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x248>
 801f0fc:	f8dc 1004 	ldr.w	r1, [ip, #4]
 801f100:	3401      	adds	r4, #1
 801f102:	f100 80fc 	bmi.w	801f2fe <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 801f106:	45a6      	cmp	lr, r4
 801f108:	f340 80f9 	ble.w	801f2fe <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 801f10c:	2800      	cmp	r0, #0
 801f10e:	f000 80f9 	beq.w	801f304 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x256>
 801f112:	2f00      	cmp	r7, #0
 801f114:	eb0c 0283 	add.w	r2, ip, r3, lsl #2
 801f118:	f2c0 80ef 	blt.w	801f2fa <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 801f11c:	42bb      	cmp	r3, r7
 801f11e:	f340 80ec 	ble.w	801f2fa <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 801f122:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 801f126:	3701      	adds	r7, #1
 801f128:	f100 80ef 	bmi.w	801f30a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 801f12c:	42bb      	cmp	r3, r7
 801f12e:	f340 80ec 	ble.w	801f30a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 801f132:	2e00      	cmp	r6, #0
 801f134:	f000 80eb 	beq.w	801f30e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x260>
 801f138:	6852      	ldr	r2, [r2, #4]
 801f13a:	b2b6      	uxth	r6, r6
 801f13c:	b280      	uxth	r0, r0
 801f13e:	fb00 fe06 	mul.w	lr, r0, r6
 801f142:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 801f146:	0136      	lsls	r6, r6, #4
 801f148:	eba6 070e 	sub.w	r7, r6, lr
 801f14c:	b280      	uxth	r0, r0
 801f14e:	f5c6 7380 	rsb	r3, r6, #256	@ 0x100
 801f152:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 801f156:	b2bf      	uxth	r7, r7
 801f158:	1a1b      	subs	r3, r3, r0
 801f15a:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 801f15e:	b29b      	uxth	r3, r3
 801f160:	fb07 f60a 	mul.w	r6, r7, sl
 801f164:	ea4f 6914 	mov.w	r9, r4, lsr #24
 801f168:	fb0b 6603 	mla	r6, fp, r3, r6
 801f16c:	ea4f 6812 	mov.w	r8, r2, lsr #24
 801f170:	fb00 6609 	mla	r6, r0, r9, r6
 801f174:	fb0e 6608 	mla	r6, lr, r8, r6
 801f178:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801f17c:	9600      	str	r6, [sp, #0]
 801f17e:	2e00      	cmp	r6, #0
 801f180:	f000 80af 	beq.w	801f2e2 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x234>
 801f184:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 801f188:	fb0b fc0c 	mul.w	ip, fp, ip
 801f18c:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
 801f190:	fb0b f505 	mul.w	r5, fp, r5
 801f194:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 801f198:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
 801f19c:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801f1a0:	44dc      	add	ip, fp
 801f1a2:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801f1a6:	9501      	str	r5, [sp, #4]
 801f1a8:	f00c 15ff 	and.w	r5, ip, #16711935	@ 0xff00ff
 801f1ac:	9503      	str	r5, [sp, #12]
 801f1ae:	9d01      	ldr	r5, [sp, #4]
 801f1b0:	9e02      	ldr	r6, [sp, #8]
 801f1b2:	f505 7c80 	add.w	ip, r5, #256	@ 0x100
 801f1b6:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801f1ba:	f001 1cff 	and.w	ip, r1, #16711935	@ 0xff00ff
 801f1be:	fb0a fc0c 	mul.w	ip, sl, ip
 801f1c2:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 801f1c6:	ea4f 251c 	mov.w	r5, ip, lsr #8
 801f1ca:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 801f1ce:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801f1d2:	4465      	add	r5, ip
 801f1d4:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 801f1d8:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
 801f1dc:	fb09 fc0c 	mul.w	ip, r9, ip
 801f1e0:	fb09 f904 	mul.w	r9, r9, r4
 801f1e4:	f509 7480 	add.w	r4, r9, #256	@ 0x100
 801f1e8:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 801f1ec:	f002 14ff 	and.w	r4, r2, #16711935	@ 0xff00ff
 801f1f0:	fb08 f404 	mul.w	r4, r8, r4
 801f1f4:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 801f1f8:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 801f1fc:	fb08 f802 	mul.w	r8, r8, r2
 801f200:	fb0a fa01 	mul.w	sl, sl, r1
 801f204:	0a22      	lsrs	r2, r4, #8
 801f206:	f50a 7180 	add.w	r1, sl, #256	@ 0x100
 801f20a:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 801f20e:	f104 1401 	add.w	r4, r4, #65537	@ 0x10001
 801f212:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 801f216:	4414      	add	r4, r2
 801f218:	ea4f 211c 	mov.w	r1, ip, lsr #8
 801f21c:	f508 7280 	add.w	r2, r8, #256	@ 0x100
 801f220:	0a2d      	lsrs	r5, r5, #8
 801f222:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 801f226:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 801f22a:	9a03      	ldr	r2, [sp, #12]
 801f22c:	8836      	ldrh	r6, [r6, #0]
 801f22e:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 801f232:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801f236:	437d      	muls	r5, r7
 801f238:	4461      	add	r1, ip
 801f23a:	0a24      	lsrs	r4, r4, #8
 801f23c:	fb02 5503 	mla	r5, r2, r3, r5
 801f240:	0a09      	lsrs	r1, r1, #8
 801f242:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
 801f246:	fb04 540e 	mla	r4, r4, lr, r5
 801f24a:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 801f24e:	fb01 4100 	mla	r1, r1, r0, r4
 801f252:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801f256:	0a09      	lsrs	r1, r1, #8
 801f258:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801f25c:	f001 14ff 	and.w	r4, r1, #16711935	@ 0xff00ff
 801f260:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801f264:	f40b 417f 	and.w	r1, fp, #65280	@ 0xff00
 801f268:	fb07 f70a 	mul.w	r7, r7, sl
 801f26c:	fb03 7101 	mla	r1, r3, r1, r7
 801f270:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801f274:	9b00      	ldr	r3, [sp, #0]
 801f276:	f408 487f 	and.w	r8, r8, #65280	@ 0xff00
 801f27a:	fb0e 1e08 	mla	lr, lr, r8, r1
 801f27e:	f409 417f 	and.w	r1, r9, #65280	@ 0xff00
 801f282:	fb00 e101 	mla	r1, r0, r1, lr
 801f286:	43da      	mvns	r2, r3
 801f288:	1233      	asrs	r3, r6, #8
 801f28a:	b2d2      	uxtb	r2, r2
 801f28c:	10f0      	asrs	r0, r6, #3
 801f28e:	0a09      	lsrs	r1, r1, #8
 801f290:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 801f294:	00f6      	lsls	r6, r6, #3
 801f296:	4353      	muls	r3, r2
 801f298:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 801f29c:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 801f2a0:	b2f6      	uxtb	r6, r6
 801f2a2:	4321      	orrs	r1, r4
 801f2a4:	4350      	muls	r0, r2
 801f2a6:	4356      	muls	r6, r2
 801f2a8:	1c5a      	adds	r2, r3, #1
 801f2aa:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801f2ae:	0c0b      	lsrs	r3, r1, #16
 801f2b0:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801f2b4:	1c42      	adds	r2, r0, #1
 801f2b6:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801f2ba:	0a0a      	lsrs	r2, r1, #8
 801f2bc:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 801f2c0:	021b      	lsls	r3, r3, #8
 801f2c2:	00d2      	lsls	r2, r2, #3
 801f2c4:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801f2c8:	f403 4378 	and.w	r3, r3, #63488	@ 0xf800
 801f2cc:	4313      	orrs	r3, r2
 801f2ce:	1c72      	adds	r2, r6, #1
 801f2d0:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 801f2d4:	eb01 2116 	add.w	r1, r1, r6, lsr #8
 801f2d8:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 801f2dc:	4319      	orrs	r1, r3
 801f2de:	9b02      	ldr	r3, [sp, #8]
 801f2e0:	8019      	strh	r1, [r3, #0]
 801f2e2:	b005      	add	sp, #20
 801f2e4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f2e8:	2500      	movs	r5, #0
 801f2ea:	e6fe      	b.n	801f0ea <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x3c>
 801f2ec:	2100      	movs	r1, #0
 801f2ee:	460d      	mov	r5, r1
 801f2f0:	e706      	b.n	801f100 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 801f2f2:	2100      	movs	r1, #0
 801f2f4:	e704      	b.n	801f100 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 801f2f6:	4631      	mov	r1, r6
 801f2f8:	e702      	b.n	801f100 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 801f2fa:	2400      	movs	r4, #0
 801f2fc:	e713      	b.n	801f126 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x78>
 801f2fe:	2200      	movs	r2, #0
 801f300:	4614      	mov	r4, r2
 801f302:	e71a      	b.n	801f13a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 801f304:	4602      	mov	r2, r0
 801f306:	4604      	mov	r4, r0
 801f308:	e717      	b.n	801f13a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 801f30a:	2200      	movs	r2, #0
 801f30c:	e715      	b.n	801f13a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 801f30e:	4632      	mov	r2, r6
 801f310:	e713      	b.n	801f13a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
	...

0801f314 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801f314:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f318:	b09b      	sub	sp, #108	@ 0x6c
 801f31a:	e9dd 4625 	ldrd	r4, r6, [sp, #148]	@ 0x94
 801f31e:	9218      	str	r2, [sp, #96]	@ 0x60
 801f320:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 801f322:	9116      	str	r1, [sp, #88]	@ 0x58
 801f324:	9307      	str	r3, [sp, #28]
 801f326:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	@ 0xa8
 801f32a:	9019      	str	r0, [sp, #100]	@ 0x64
 801f32c:	6850      	ldr	r0, [r2, #4]
 801f32e:	6812      	ldr	r2, [r2, #0]
 801f330:	fb00 1303 	mla	r3, r0, r3, r1
 801f334:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801f338:	930a      	str	r3, [sp, #40]	@ 0x28
 801f33a:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801f33c:	681b      	ldr	r3, [r3, #0]
 801f33e:	930f      	str	r3, [sp, #60]	@ 0x3c
 801f340:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 801f342:	2b00      	cmp	r3, #0
 801f344:	dc03      	bgt.n	801f34e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801f346:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801f348:	2b00      	cmp	r3, #0
 801f34a:	f340 8386 	ble.w	801fa5a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 801f34e:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801f350:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801f354:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801f358:	1e48      	subs	r0, r1, #1
 801f35a:	1e57      	subs	r7, r2, #1
 801f35c:	9b07      	ldr	r3, [sp, #28]
 801f35e:	2b00      	cmp	r3, #0
 801f360:	f340 8166 	ble.w	801f630 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 801f364:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801f368:	ea4f 4326 	mov.w	r3, r6, asr #16
 801f36c:	d406      	bmi.n	801f37c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801f36e:	4584      	cmp	ip, r0
 801f370:	da04      	bge.n	801f37c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801f372:	2b00      	cmp	r3, #0
 801f374:	db02      	blt.n	801f37c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801f376:	42bb      	cmp	r3, r7
 801f378:	f2c0 815b 	blt.w	801f632 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 801f37c:	f11c 0c01 	adds.w	ip, ip, #1
 801f380:	f100 814b 	bmi.w	801f61a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 801f384:	4561      	cmp	r1, ip
 801f386:	f2c0 8148 	blt.w	801f61a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 801f38a:	3301      	adds	r3, #1
 801f38c:	f100 8145 	bmi.w	801f61a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 801f390:	429a      	cmp	r2, r3
 801f392:	f2c0 8142 	blt.w	801f61a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 801f396:	9b07      	ldr	r3, [sp, #28]
 801f398:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
 801f39a:	9317      	str	r3, [sp, #92]	@ 0x5c
 801f39c:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 801f39e:	2b00      	cmp	r3, #0
 801f3a0:	f340 8165 	ble.w	801f66e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801f3a4:	9a2c      	ldr	r2, [sp, #176]	@ 0xb0
 801f3a6:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801f3a8:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801f3ac:	689b      	ldr	r3, [r3, #8]
 801f3ae:	1422      	asrs	r2, r4, #16
 801f3b0:	ea4f 4c26 	mov.w	ip, r6, asr #16
 801f3b4:	f3c4 3103 	ubfx	r1, r4, #12, #4
 801f3b8:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801f3bc:	f100 81d5 	bmi.w	801f76a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 801f3c0:	f103 38ff 	add.w	r8, r3, #4294967295
 801f3c4:	4542      	cmp	r2, r8
 801f3c6:	f280 81d0 	bge.w	801f76a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 801f3ca:	f1bc 0f00 	cmp.w	ip, #0
 801f3ce:	f2c0 81cc 	blt.w	801f76a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 801f3d2:	f10e 38ff 	add.w	r8, lr, #4294967295
 801f3d6:	45c4      	cmp	ip, r8
 801f3d8:	f280 81c7 	bge.w	801f76a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 801f3dc:	b21b      	sxth	r3, r3
 801f3de:	fb0c 2203 	mla	r2, ip, r3, r2
 801f3e2:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 801f3e4:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 801f3e8:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 801f3ec:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 801f3f0:	2900      	cmp	r1, #0
 801f3f2:	f000 8182 	beq.w	801f6fa <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 801f3f6:	f8d8 5004 	ldr.w	r5, [r8, #4]
 801f3fa:	950b      	str	r5, [sp, #44]	@ 0x2c
 801f3fc:	0e2d      	lsrs	r5, r5, #24
 801f3fe:	9512      	str	r5, [sp, #72]	@ 0x48
 801f400:	b180      	cbz	r0, 801f424 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 801f402:	f103 4380 	add.w	r3, r3, #1073741824	@ 0x40000000
 801f406:	3b01      	subs	r3, #1
 801f408:	009b      	lsls	r3, r3, #2
 801f40a:	3304      	adds	r3, #4
 801f40c:	eb08 0c03 	add.w	ip, r8, r3
 801f410:	f858 3003 	ldr.w	r3, [r8, r3]
 801f414:	9308      	str	r3, [sp, #32]
 801f416:	0e1b      	lsrs	r3, r3, #24
 801f418:	9310      	str	r3, [sp, #64]	@ 0x40
 801f41a:	f8dc 3004 	ldr.w	r3, [ip, #4]
 801f41e:	930c      	str	r3, [sp, #48]	@ 0x30
 801f420:	0e1b      	lsrs	r3, r3, #24
 801f422:	9313      	str	r3, [sp, #76]	@ 0x4c
 801f424:	b289      	uxth	r1, r1
 801f426:	b280      	uxth	r0, r0
 801f428:	fb01 f900 	mul.w	r9, r1, r0
 801f42c:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 801f430:	0109      	lsls	r1, r1, #4
 801f432:	eba1 0809 	sub.w	r8, r1, r9
 801f436:	b280      	uxth	r0, r0
 801f438:	f5c1 7180 	rsb	r1, r1, #256	@ 0x100
 801f43c:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 801f43e:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 801f440:	fa1f f888 	uxth.w	r8, r8
 801f444:	1a09      	subs	r1, r1, r0
 801f446:	b289      	uxth	r1, r1
 801f448:	fb08 f303 	mul.w	r3, r8, r3
 801f44c:	fb01 330e 	mla	r3, r1, lr, r3
 801f450:	fb00 3305 	mla	r3, r0, r5, r3
 801f454:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 801f456:	fb09 3305 	mla	r3, r9, r5, r3
 801f45a:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801f45e:	2b00      	cmp	r3, #0
 801f460:	f000 80d2 	beq.w	801f608 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801f464:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
 801f468:	d01b      	beq.n	801f4a2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18e>
 801f46a:	f002 1aff 	and.w	sl, r2, #16711935	@ 0xff00ff
 801f46e:	fb0e fa0a 	mul.w	sl, lr, sl
 801f472:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 801f476:	fb0e fe02 	mul.w	lr, lr, r2
 801f47a:	ea4f 221a 	mov.w	r2, sl, lsr #8
 801f47e:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 801f482:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 801f486:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
 801f48a:	4452      	add	r2, sl
 801f48c:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801f490:	0a12      	lsrs	r2, r2, #8
 801f492:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801f496:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 801f49a:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 801f49e:	ea42 020c 	orr.w	r2, r2, ip
 801f4a2:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 801f4a4:	2dff      	cmp	r5, #255	@ 0xff
 801f4a6:	d021      	beq.n	801f4ec <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d8>
 801f4a8:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 801f4aa:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 801f4ae:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 801f4b0:	fb05 fb0b 	mul.w	fp, r5, fp
 801f4b4:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 801f4b6:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 801f4ba:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 801f4bc:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801f4c0:	fb05 fa0a 	mul.w	sl, r5, sl
 801f4c4:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801f4c8:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801f4cc:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801f4d0:	44de      	add	lr, fp
 801f4d2:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801f4d6:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801f4da:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801f4de:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801f4e2:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801f4e6:	ea4e 050a 	orr.w	r5, lr, sl
 801f4ea:	950b      	str	r5, [sp, #44]	@ 0x2c
 801f4ec:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 801f4ee:	2dff      	cmp	r5, #255	@ 0xff
 801f4f0:	d021      	beq.n	801f536 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 801f4f2:	9d08      	ldr	r5, [sp, #32]
 801f4f4:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 801f4f8:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 801f4fa:	fb05 fb0b 	mul.w	fp, r5, fp
 801f4fe:	9d08      	ldr	r5, [sp, #32]
 801f500:	f405 4e7f 	and.w	lr, r5, #65280	@ 0xff00
 801f504:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 801f506:	fb05 fa0e 	mul.w	sl, r5, lr
 801f50a:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801f50e:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801f512:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801f516:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801f51a:	44de      	add	lr, fp
 801f51c:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801f520:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801f524:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801f528:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801f52c:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801f530:	ea4e 050a 	orr.w	r5, lr, sl
 801f534:	9508      	str	r5, [sp, #32]
 801f536:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 801f538:	2dff      	cmp	r5, #255	@ 0xff
 801f53a:	d021      	beq.n	801f580 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26c>
 801f53c:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 801f53e:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 801f542:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 801f544:	fb05 fb0b 	mul.w	fp, r5, fp
 801f548:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 801f54a:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 801f54e:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 801f550:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801f554:	fb05 fa0a 	mul.w	sl, r5, sl
 801f558:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801f55c:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801f560:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801f564:	44de      	add	lr, fp
 801f566:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801f56a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801f56e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801f572:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801f576:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801f57a:	ea4e 050a 	orr.w	r5, lr, sl
 801f57e:	950c      	str	r5, [sp, #48]	@ 0x30
 801f580:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 801f582:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 801f586:	9d08      	ldr	r5, [sp, #32]
 801f588:	f002 1eff 	and.w	lr, r2, #16711935	@ 0xff00ff
 801f58c:	fb08 fc0c 	mul.w	ip, r8, ip
 801f590:	fb01 cc0e 	mla	ip, r1, lr, ip
 801f594:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
 801f598:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 801f59a:	fb00 cc0e 	mla	ip, r0, lr, ip
 801f59e:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
 801f5a2:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 801f5a4:	fb09 cc0e 	mla	ip, r9, lr, ip
 801f5a8:	f405 4e7f 	and.w	lr, r5, #65280	@ 0xff00
 801f5ac:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 801f5b0:	fb08 f80e 	mul.w	r8, r8, lr
 801f5b4:	fb01 8202 	mla	r2, r1, r2, r8
 801f5b8:	9908      	ldr	r1, [sp, #32]
 801f5ba:	f401 4a7f 	and.w	sl, r1, #65280	@ 0xff00
 801f5be:	990c      	ldr	r1, [sp, #48]	@ 0x30
 801f5c0:	fb00 220a 	mla	r2, r0, sl, r2
 801f5c4:	f401 407f 	and.w	r0, r1, #65280	@ 0xff00
 801f5c8:	fb09 2900 	mla	r9, r9, r0, r2
 801f5cc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801f5d0:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801f5d4:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801f5d8:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
 801f5dc:	ea4c 0c09 	orr.w	ip, ip, r9
 801f5e0:	2bff      	cmp	r3, #255	@ 0xff
 801f5e2:	ea4f 221c 	mov.w	r2, ip, lsr #8
 801f5e6:	f040 8091 	bne.w	801f70c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 801f5ea:	ea4f 135c 	mov.w	r3, ip, lsr #5
 801f5ee:	f422 62ff 	bic.w	r2, r2, #2040	@ 0x7f8
 801f5f2:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801f5f6:	f022 0207 	bic.w	r2, r2, #7
 801f5fa:	431a      	orrs	r2, r3
 801f5fc:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 801f600:	ea4c 0c02 	orr.w	ip, ip, r2
 801f604:	f8a7 c000 	strh.w	ip, [r7]
 801f608:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 801f60a:	441c      	add	r4, r3
 801f60c:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801f60e:	441e      	add	r6, r3
 801f610:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 801f612:	3b01      	subs	r3, #1
 801f614:	3702      	adds	r7, #2
 801f616:	9317      	str	r3, [sp, #92]	@ 0x5c
 801f618:	e6c0      	b.n	801f39c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801f61a:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 801f61c:	441c      	add	r4, r3
 801f61e:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801f620:	441e      	add	r6, r3
 801f622:	9b07      	ldr	r3, [sp, #28]
 801f624:	3b01      	subs	r3, #1
 801f626:	9307      	str	r3, [sp, #28]
 801f628:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801f62a:	3302      	adds	r3, #2
 801f62c:	930a      	str	r3, [sp, #40]	@ 0x28
 801f62e:	e695      	b.n	801f35c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801f630:	d024      	beq.n	801f67c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 801f632:	9b07      	ldr	r3, [sp, #28]
 801f634:	9827      	ldr	r0, [sp, #156]	@ 0x9c
 801f636:	3b01      	subs	r3, #1
 801f638:	fb00 4003 	mla	r0, r0, r3, r4
 801f63c:	1400      	asrs	r0, r0, #16
 801f63e:	f53f aeaa 	bmi.w	801f396 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801f642:	3901      	subs	r1, #1
 801f644:	4288      	cmp	r0, r1
 801f646:	f6bf aea6 	bge.w	801f396 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801f64a:	9928      	ldr	r1, [sp, #160]	@ 0xa0
 801f64c:	fb01 6303 	mla	r3, r1, r3, r6
 801f650:	141b      	asrs	r3, r3, #16
 801f652:	f53f aea0 	bmi.w	801f396 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801f656:	3a01      	subs	r2, #1
 801f658:	4293      	cmp	r3, r2
 801f65a:	f6bf ae9c 	bge.w	801f396 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801f65e:	f8dd b01c 	ldr.w	fp, [sp, #28]
 801f662:	f8dd 8028 	ldr.w	r8, [sp, #40]	@ 0x28
 801f666:	f1bb 0f00 	cmp.w	fp, #0
 801f66a:	f300 809a 	bgt.w	801f7a2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 801f66e:	9b07      	ldr	r3, [sp, #28]
 801f670:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801f674:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801f676:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 801f67a:	930a      	str	r3, [sp, #40]	@ 0x28
 801f67c:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 801f67e:	2b00      	cmp	r3, #0
 801f680:	f340 81eb 	ble.w	801fa5a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 801f684:	ee30 0a04 	vadd.f32	s0, s0, s8
 801f688:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801f68c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801f690:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801f692:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801f696:	ee31 1a05 	vadd.f32	s2, s2, s10
 801f69a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801f69e:	eef0 6a62 	vmov.f32	s13, s5
 801f6a2:	ee61 7a27 	vmul.f32	s15, s2, s15
 801f6a6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801f6aa:	ee77 2a62 	vsub.f32	s5, s14, s5
 801f6ae:	ee16 4a90 	vmov	r4, s13
 801f6b2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801f6b6:	eef0 6a43 	vmov.f32	s13, s6
 801f6ba:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801f6be:	ee12 2a90 	vmov	r2, s5
 801f6c2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801f6c6:	fb92 f3f3 	sdiv	r3, r2, r3
 801f6ca:	ee13 2a10 	vmov	r2, s6
 801f6ce:	9327      	str	r3, [sp, #156]	@ 0x9c
 801f6d0:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801f6d2:	fb92 f3f3 	sdiv	r3, r2, r3
 801f6d6:	9328      	str	r3, [sp, #160]	@ 0xa0
 801f6d8:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 801f6da:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 801f6dc:	3b01      	subs	r3, #1
 801f6de:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801f6e2:	9316      	str	r3, [sp, #88]	@ 0x58
 801f6e4:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801f6e6:	bf08      	it	eq
 801f6e8:	4613      	moveq	r3, r2
 801f6ea:	ee16 6a90 	vmov	r6, s13
 801f6ee:	9307      	str	r3, [sp, #28]
 801f6f0:	eeb0 3a67 	vmov.f32	s6, s15
 801f6f4:	eef0 2a47 	vmov.f32	s5, s14
 801f6f8:	e622      	b.n	801f340 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c>
 801f6fa:	2800      	cmp	r0, #0
 801f6fc:	f43f ae92 	beq.w	801f424 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 801f700:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 801f704:	9308      	str	r3, [sp, #32]
 801f706:	0e1b      	lsrs	r3, r3, #24
 801f708:	9310      	str	r3, [sp, #64]	@ 0x40
 801f70a:	e68b      	b.n	801f424 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 801f70c:	8839      	ldrh	r1, [r7, #0]
 801f70e:	4dd4      	ldr	r5, [pc, #848]	@ (801fa60 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74c>)
 801f710:	43db      	mvns	r3, r3
 801f712:	ea4f 2e21 	mov.w	lr, r1, asr #8
 801f716:	fa5f f883 	uxtb.w	r8, r3
 801f71a:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
 801f71e:	fb0e fe08 	mul.w	lr, lr, r8
 801f722:	10c8      	asrs	r0, r1, #3
 801f724:	00cb      	lsls	r3, r1, #3
 801f726:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 801f72a:	f10e 0101 	add.w	r1, lr, #1
 801f72e:	eb01 2e1e 	add.w	lr, r1, lr, lsr #8
 801f732:	fb00 f008 	mul.w	r0, r0, r8
 801f736:	ea4f 411c 	mov.w	r1, ip, lsr #16
 801f73a:	eb01 211e 	add.w	r1, r1, lr, lsr #8
 801f73e:	f100 0e01 	add.w	lr, r0, #1
 801f742:	eb0e 2010 	add.w	r0, lr, r0, lsr #8
 801f746:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 801f74a:	b2db      	uxtb	r3, r3
 801f74c:	b2c9      	uxtb	r1, r1
 801f74e:	00d2      	lsls	r2, r2, #3
 801f750:	fb03 f308 	mul.w	r3, r3, r8
 801f754:	ea05 2101 	and.w	r1, r5, r1, lsl #8
 801f758:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801f75c:	430a      	orrs	r2, r1
 801f75e:	1c59      	adds	r1, r3, #1
 801f760:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801f764:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801f768:	e748      	b.n	801f5fc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>
 801f76a:	f112 0801 	adds.w	r8, r2, #1
 801f76e:	f53f af4b 	bmi.w	801f608 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801f772:	4543      	cmp	r3, r8
 801f774:	f6ff af48 	blt.w	801f608 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801f778:	f11c 0801 	adds.w	r8, ip, #1
 801f77c:	f53f af44 	bmi.w	801f608 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801f780:	45c6      	cmp	lr, r8
 801f782:	f6ff af41 	blt.w	801f608 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801f786:	e9cd 2c01 	strd	r2, ip, [sp, #4]
 801f78a:	fa0f f28e 	sxth.w	r2, lr
 801f78e:	e9cd 1003 	strd	r1, r0, [sp, #12]
 801f792:	9200      	str	r2, [sp, #0]
 801f794:	b21b      	sxth	r3, r3
 801f796:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801f798:	9819      	ldr	r0, [sp, #100]	@ 0x64
 801f79a:	4639      	mov	r1, r7
 801f79c:	f7ff fc87 	bl	801f0ae <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>
 801f7a0:	e732      	b.n	801f608 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801f7a2:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801f7a4:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 801f7a6:	f9b3 7008 	ldrsh.w	r7, [r3, #8]
 801f7aa:	1421      	asrs	r1, r4, #16
 801f7ac:	1433      	asrs	r3, r6, #16
 801f7ae:	fb07 1303 	mla	r3, r7, r3, r1
 801f7b2:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 801f7b4:	eb01 0183 	add.w	r1, r1, r3, lsl #2
 801f7b8:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 801f7bc:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801f7c0:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801f7c4:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801f7c8:	2a00      	cmp	r2, #0
 801f7ca:	f000 8107 	beq.w	801f9dc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c8>
 801f7ce:	684d      	ldr	r5, [r1, #4]
 801f7d0:	950d      	str	r5, [sp, #52]	@ 0x34
 801f7d2:	0e2d      	lsrs	r5, r5, #24
 801f7d4:	9514      	str	r5, [sp, #80]	@ 0x50
 801f7d6:	b178      	cbz	r0, 801f7f8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801f7d8:	f107 4780 	add.w	r7, r7, #1073741824	@ 0x40000000
 801f7dc:	3f01      	subs	r7, #1
 801f7de:	00bf      	lsls	r7, r7, #2
 801f7e0:	3704      	adds	r7, #4
 801f7e2:	eb01 0e07 	add.w	lr, r1, r7
 801f7e6:	59c9      	ldr	r1, [r1, r7]
 801f7e8:	9109      	str	r1, [sp, #36]	@ 0x24
 801f7ea:	0e09      	lsrs	r1, r1, #24
 801f7ec:	9111      	str	r1, [sp, #68]	@ 0x44
 801f7ee:	f8de 1004 	ldr.w	r1, [lr, #4]
 801f7f2:	910e      	str	r1, [sp, #56]	@ 0x38
 801f7f4:	0e09      	lsrs	r1, r1, #24
 801f7f6:	9115      	str	r1, [sp, #84]	@ 0x54
 801f7f8:	b292      	uxth	r2, r2
 801f7fa:	b280      	uxth	r0, r0
 801f7fc:	fb02 f900 	mul.w	r9, r2, r0
 801f800:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 801f804:	0112      	lsls	r2, r2, #4
 801f806:	eba2 0e09 	sub.w	lr, r2, r9
 801f80a:	b280      	uxth	r0, r0
 801f80c:	f5c2 7180 	rsb	r1, r2, #256	@ 0x100
 801f810:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801f812:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801f814:	fa1f fe8e 	uxth.w	lr, lr
 801f818:	1a09      	subs	r1, r1, r0
 801f81a:	b289      	uxth	r1, r1
 801f81c:	fb0e f202 	mul.w	r2, lr, r2
 801f820:	fb01 220c 	mla	r2, r1, ip, r2
 801f824:	fb00 2205 	mla	r2, r0, r5, r2
 801f828:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 801f82a:	fb09 2205 	mla	r2, r9, r5, r2
 801f82e:	f3c2 2207 	ubfx	r2, r2, #8, #8
 801f832:	2a00      	cmp	r2, #0
 801f834:	f000 80c9 	beq.w	801f9ca <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b6>
 801f838:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
 801f83c:	d019      	beq.n	801f872 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55e>
 801f83e:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 801f842:	fb0c fa0a 	mul.w	sl, ip, sl
 801f846:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801f84a:	fb0c fc03 	mul.w	ip, ip, r3
 801f84e:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801f852:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801f856:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 801f85a:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
 801f85e:	4453      	add	r3, sl
 801f860:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801f864:	0a1b      	lsrs	r3, r3, #8
 801f866:	0a3f      	lsrs	r7, r7, #8
 801f868:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801f86c:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 801f870:	433b      	orrs	r3, r7
 801f872:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 801f874:	2dff      	cmp	r5, #255	@ 0xff
 801f876:	d020      	beq.n	801f8ba <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a6>
 801f878:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 801f87a:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 801f87e:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 801f880:	436f      	muls	r7, r5
 801f882:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 801f884:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 801f888:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 801f88a:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801f88e:	fb05 fa0a 	mul.w	sl, r5, sl
 801f892:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801f896:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801f89a:	44bc      	add	ip, r7
 801f89c:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801f8a0:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801f8a4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801f8a8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801f8ac:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801f8b0:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801f8b4:	ea4c 050a 	orr.w	r5, ip, sl
 801f8b8:	950d      	str	r5, [sp, #52]	@ 0x34
 801f8ba:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801f8bc:	2dff      	cmp	r5, #255	@ 0xff
 801f8be:	d020      	beq.n	801f902 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ee>
 801f8c0:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 801f8c2:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 801f8c6:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801f8c8:	436f      	muls	r7, r5
 801f8ca:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 801f8cc:	f405 4c7f 	and.w	ip, r5, #65280	@ 0xff00
 801f8d0:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801f8d2:	fb05 fa0c 	mul.w	sl, r5, ip
 801f8d6:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801f8da:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801f8de:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801f8e2:	44bc      	add	ip, r7
 801f8e4:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801f8e8:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801f8ec:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801f8f0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801f8f4:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801f8f8:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801f8fc:	ea4c 050a 	orr.w	r5, ip, sl
 801f900:	9509      	str	r5, [sp, #36]	@ 0x24
 801f902:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 801f904:	2dff      	cmp	r5, #255	@ 0xff
 801f906:	d020      	beq.n	801f94a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x636>
 801f908:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 801f90a:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 801f90e:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 801f910:	436f      	muls	r7, r5
 801f912:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 801f914:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 801f918:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 801f91a:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801f91e:	fb05 fa0a 	mul.w	sl, r5, sl
 801f922:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801f926:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801f92a:	44bc      	add	ip, r7
 801f92c:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801f930:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801f934:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801f938:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801f93c:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801f940:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801f944:	ea4c 050a 	orr.w	r5, ip, sl
 801f948:	950e      	str	r5, [sp, #56]	@ 0x38
 801f94a:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 801f94c:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 801f950:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 801f952:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
 801f956:	fb0e f707 	mul.w	r7, lr, r7
 801f95a:	fb01 770c 	mla	r7, r1, ip, r7
 801f95e:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 801f962:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 801f964:	fb00 770c 	mla	r7, r0, ip, r7
 801f968:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 801f96c:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 801f96e:	fb09 770c 	mla	r7, r9, ip, r7
 801f972:	f405 4c7f 	and.w	ip, r5, #65280	@ 0xff00
 801f976:	fb0e fe0c 	mul.w	lr, lr, ip
 801f97a:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801f97e:	fb01 e303 	mla	r3, r1, r3, lr
 801f982:	9909      	ldr	r1, [sp, #36]	@ 0x24
 801f984:	f401 4a7f 	and.w	sl, r1, #65280	@ 0xff00
 801f988:	990e      	ldr	r1, [sp, #56]	@ 0x38
 801f98a:	fb00 330a 	mla	r3, r0, sl, r3
 801f98e:	f401 4c7f 	and.w	ip, r1, #65280	@ 0xff00
 801f992:	fb09 3c0c 	mla	ip, r9, ip, r3
 801f996:	0a3f      	lsrs	r7, r7, #8
 801f998:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801f99c:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
 801f9a0:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 801f9a4:	ea47 070c 	orr.w	r7, r7, ip
 801f9a8:	2aff      	cmp	r2, #255	@ 0xff
 801f9aa:	ea4f 2317 	mov.w	r3, r7, lsr #8
 801f9ae:	d11e      	bne.n	801f9ee <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6da>
 801f9b0:	097a      	lsrs	r2, r7, #5
 801f9b2:	f423 63ff 	bic.w	r3, r3, #2040	@ 0x7f8
 801f9b6:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801f9ba:	f023 0307 	bic.w	r3, r3, #7
 801f9be:	4313      	orrs	r3, r2
 801f9c0:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 801f9c4:	431f      	orrs	r7, r3
 801f9c6:	f8a8 7000 	strh.w	r7, [r8]
 801f9ca:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 801f9cc:	441c      	add	r4, r3
 801f9ce:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801f9d0:	f108 0802 	add.w	r8, r8, #2
 801f9d4:	441e      	add	r6, r3
 801f9d6:	f10b 3bff 	add.w	fp, fp, #4294967295
 801f9da:	e644      	b.n	801f666 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
 801f9dc:	2800      	cmp	r0, #0
 801f9de:	f43f af0b 	beq.w	801f7f8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801f9e2:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
 801f9e6:	9109      	str	r1, [sp, #36]	@ 0x24
 801f9e8:	0e09      	lsrs	r1, r1, #24
 801f9ea:	9111      	str	r1, [sp, #68]	@ 0x44
 801f9ec:	e704      	b.n	801f7f8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801f9ee:	f8b8 1000 	ldrh.w	r1, [r8]
 801f9f2:	43d2      	mvns	r2, r2
 801f9f4:	ea4f 2c21 	mov.w	ip, r1, asr #8
 801f9f8:	fa5f fe82 	uxtb.w	lr, r2
 801f9fc:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801fa00:	fb0c fc0e 	mul.w	ip, ip, lr
 801fa04:	10c8      	asrs	r0, r1, #3
 801fa06:	00ca      	lsls	r2, r1, #3
 801fa08:	f10c 0101 	add.w	r1, ip, #1
 801fa0c:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 801fa10:	0c39      	lsrs	r1, r7, #16
 801fa12:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 801fa16:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 801fa1a:	4911      	ldr	r1, [pc, #68]	@ (801fa60 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74c>)
 801fa1c:	fb00 f00e 	mul.w	r0, r0, lr
 801fa20:	fa5f fc8c 	uxtb.w	ip, ip
 801fa24:	ea01 2c0c 	and.w	ip, r1, ip, lsl #8
 801fa28:	b2d2      	uxtb	r2, r2
 801fa2a:	1c41      	adds	r1, r0, #1
 801fa2c:	fb02 f20e 	mul.w	r2, r2, lr
 801fa30:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 801fa34:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801fa38:	1c51      	adds	r1, r2, #1
 801fa3a:	00c0      	lsls	r0, r0, #3
 801fa3c:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801fa40:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801fa44:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 801fa48:	ea4c 0c00 	orr.w	ip, ip, r0
 801fa4c:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 801fa50:	ea47 0c0c 	orr.w	ip, r7, ip
 801fa54:	f8a8 c000 	strh.w	ip, [r8]
 801fa58:	e7b7      	b.n	801f9ca <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b6>
 801fa5a:	b01b      	add	sp, #108	@ 0x6c
 801fa5c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801fa60:	fffff800 	.word	0xfffff800

0801fa64 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>:
 801fa64:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801fa68:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	@ 0x28
 801fa6c:	2d00      	cmp	r5, #0
 801fa6e:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 801fa72:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	@ 0x24
 801fa76:	f89d 7030 	ldrb.w	r7, [sp, #48]	@ 0x30
 801fa7a:	f89d c034 	ldrb.w	ip, [sp, #52]	@ 0x34
 801fa7e:	fb05 0e03 	mla	lr, r5, r3, r0
 801fa82:	f2c0 808c 	blt.w	801fb9e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 801fa86:	45a9      	cmp	r9, r5
 801fa88:	f340 8089 	ble.w	801fb9e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 801fa8c:	2800      	cmp	r0, #0
 801fa8e:	f2c0 8084 	blt.w	801fb9a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 801fa92:	4580      	cmp	r8, r0
 801fa94:	f340 8081 	ble.w	801fb9a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 801fa98:	ea4f 045e 	mov.w	r4, lr, lsr #1
 801fa9c:	f01e 0f01 	tst.w	lr, #1
 801faa0:	5d16      	ldrb	r6, [r2, r4]
 801faa2:	bf0c      	ite	eq
 801faa4:	f006 060f 	andeq.w	r6, r6, #15
 801faa8:	1136      	asrne	r6, r6, #4
 801faaa:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 801faae:	b2f6      	uxtb	r6, r6
 801fab0:	1c44      	adds	r4, r0, #1
 801fab2:	d477      	bmi.n	801fba4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 801fab4:	45a0      	cmp	r8, r4
 801fab6:	dd75      	ble.n	801fba4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 801fab8:	2f00      	cmp	r7, #0
 801faba:	d075      	beq.n	801fba8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x144>
 801fabc:	f10e 0a01 	add.w	sl, lr, #1
 801fac0:	ea4f 045a 	mov.w	r4, sl, lsr #1
 801fac4:	f01a 0f01 	tst.w	sl, #1
 801fac8:	5d14      	ldrb	r4, [r2, r4]
 801faca:	bf0c      	ite	eq
 801facc:	f004 040f 	andeq.w	r4, r4, #15
 801fad0:	1124      	asrne	r4, r4, #4
 801fad2:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 801fad6:	b2e4      	uxtb	r4, r4
 801fad8:	3501      	adds	r5, #1
 801fada:	d469      	bmi.n	801fbb0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 801fadc:	45a9      	cmp	r9, r5
 801fade:	dd67      	ble.n	801fbb0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 801fae0:	f1bc 0f00 	cmp.w	ip, #0
 801fae4:	d067      	beq.n	801fbb6 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x152>
 801fae6:	2800      	cmp	r0, #0
 801fae8:	db60      	blt.n	801fbac <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 801faea:	4580      	cmp	r8, r0
 801faec:	dd5e      	ble.n	801fbac <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 801faee:	eb03 090e 	add.w	r9, r3, lr
 801faf2:	ea4f 0559 	mov.w	r5, r9, lsr #1
 801faf6:	f019 0f01 	tst.w	r9, #1
 801fafa:	5d55      	ldrb	r5, [r2, r5]
 801fafc:	bf0c      	ite	eq
 801fafe:	f005 050f 	andeq.w	r5, r5, #15
 801fb02:	112d      	asrne	r5, r5, #4
 801fb04:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 801fb08:	b2ed      	uxtb	r5, r5
 801fb0a:	3001      	adds	r0, #1
 801fb0c:	d456      	bmi.n	801fbbc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 801fb0e:	4580      	cmp	r8, r0
 801fb10:	dd54      	ble.n	801fbbc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 801fb12:	2f00      	cmp	r7, #0
 801fb14:	d054      	beq.n	801fbc0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x15c>
 801fb16:	3301      	adds	r3, #1
 801fb18:	449e      	add	lr, r3
 801fb1a:	ea4f 035e 	mov.w	r3, lr, lsr #1
 801fb1e:	f01e 0f01 	tst.w	lr, #1
 801fb22:	5cd0      	ldrb	r0, [r2, r3]
 801fb24:	bf0c      	ite	eq
 801fb26:	f000 000f 	andeq.w	r0, r0, #15
 801fb2a:	1100      	asrne	r0, r0, #4
 801fb2c:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801fb30:	b2c3      	uxtb	r3, r0
 801fb32:	b2ba      	uxth	r2, r7
 801fb34:	fa1f fc8c 	uxth.w	ip, ip
 801fb38:	fb02 f00c 	mul.w	r0, r2, ip
 801fb3c:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 801fb40:	0112      	lsls	r2, r2, #4
 801fb42:	fa1f fc8c 	uxth.w	ip, ip
 801fb46:	f5c2 7780 	rsb	r7, r2, #256	@ 0x100
 801fb4a:	1a12      	subs	r2, r2, r0
 801fb4c:	eba7 070c 	sub.w	r7, r7, ip
 801fb50:	b292      	uxth	r2, r2
 801fb52:	b2bf      	uxth	r7, r7
 801fb54:	4362      	muls	r2, r4
 801fb56:	fb06 2207 	mla	r2, r6, r7, r2
 801fb5a:	fb0c 2505 	mla	r5, ip, r5, r2
 801fb5e:	fb00 5303 	mla	r3, r0, r3, r5
 801fb62:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801fb66:	b1b3      	cbz	r3, 801fb96 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 801fb68:	f89d 2038 	ldrb.w	r2, [sp, #56]	@ 0x38
 801fb6c:	435a      	muls	r2, r3
 801fb6e:	1c53      	adds	r3, r2, #1
 801fb70:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801fb74:	4a2d      	ldr	r2, [pc, #180]	@ (801fc2c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1c8>)
 801fb76:	121b      	asrs	r3, r3, #8
 801fb78:	6812      	ldr	r2, [r2, #0]
 801fb7a:	2bff      	cmp	r3, #255	@ 0xff
 801fb7c:	ea4f 2612 	mov.w	r6, r2, lsr #8
 801fb80:	d120      	bne.n	801fbc4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x160>
 801fb82:	4b2b      	ldr	r3, [pc, #172]	@ (801fc30 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1cc>)
 801fb84:	0950      	lsrs	r0, r2, #5
 801fb86:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801fb8a:	4033      	ands	r3, r6
 801fb8c:	4318      	orrs	r0, r3
 801fb8e:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801fb92:	4302      	orrs	r2, r0
 801fb94:	800a      	strh	r2, [r1, #0]
 801fb96:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801fb9a:	2600      	movs	r6, #0
 801fb9c:	e788      	b.n	801fab0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x4c>
 801fb9e:	2400      	movs	r4, #0
 801fba0:	4626      	mov	r6, r4
 801fba2:	e799      	b.n	801fad8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 801fba4:	2400      	movs	r4, #0
 801fba6:	e797      	b.n	801fad8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 801fba8:	463c      	mov	r4, r7
 801fbaa:	e795      	b.n	801fad8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 801fbac:	2500      	movs	r5, #0
 801fbae:	e7ac      	b.n	801fb0a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xa6>
 801fbb0:	2300      	movs	r3, #0
 801fbb2:	461d      	mov	r5, r3
 801fbb4:	e7bd      	b.n	801fb32 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 801fbb6:	4663      	mov	r3, ip
 801fbb8:	4665      	mov	r5, ip
 801fbba:	e7ba      	b.n	801fb32 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 801fbbc:	2300      	movs	r3, #0
 801fbbe:	e7b8      	b.n	801fb32 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 801fbc0:	463b      	mov	r3, r7
 801fbc2:	e7b6      	b.n	801fb32 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 801fbc4:	880d      	ldrh	r5, [r1, #0]
 801fbc6:	b29f      	uxth	r7, r3
 801fbc8:	122c      	asrs	r4, r5, #8
 801fbca:	f3c2 4007 	ubfx	r0, r2, #16, #8
 801fbce:	43db      	mvns	r3, r3
 801fbd0:	b2db      	uxtb	r3, r3
 801fbd2:	fb10 f007 	smulbb	r0, r0, r7
 801fbd6:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 801fbda:	fb04 0403 	mla	r4, r4, r3, r0
 801fbde:	b2f6      	uxtb	r6, r6
 801fbe0:	10e8      	asrs	r0, r5, #3
 801fbe2:	b2d2      	uxtb	r2, r2
 801fbe4:	00ed      	lsls	r5, r5, #3
 801fbe6:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 801fbea:	fb12 f207 	smulbb	r2, r2, r7
 801fbee:	fb16 f607 	smulbb	r6, r6, r7
 801fbf2:	b2ed      	uxtb	r5, r5
 801fbf4:	b2a4      	uxth	r4, r4
 801fbf6:	fb00 6603 	mla	r6, r0, r3, r6
 801fbfa:	fb05 2303 	mla	r3, r5, r3, r2
 801fbfe:	b29a      	uxth	r2, r3
 801fc00:	1c63      	adds	r3, r4, #1
 801fc02:	b2b0      	uxth	r0, r6
 801fc04:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 801fc08:	1c53      	adds	r3, r2, #1
 801fc0a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801fc0e:	1c42      	adds	r2, r0, #1
 801fc10:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801fc14:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
 801fc18:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801fc1c:	0940      	lsrs	r0, r0, #5
 801fc1e:	4323      	orrs	r3, r4
 801fc20:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801fc24:	4303      	orrs	r3, r0
 801fc26:	800b      	strh	r3, [r1, #0]
 801fc28:	e7b5      	b.n	801fb96 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 801fc2a:	bf00      	nop
 801fc2c:	20014054 	.word	0x20014054
 801fc30:	00fff800 	.word	0x00fff800

0801fc34 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801fc34:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801fc38:	b097      	sub	sp, #92	@ 0x5c
 801fc3a:	e9dd 4621 	ldrd	r4, r6, [sp, #132]	@ 0x84
 801fc3e:	9214      	str	r2, [sp, #80]	@ 0x50
 801fc40:	9309      	str	r3, [sp, #36]	@ 0x24
 801fc42:	9a25      	ldr	r2, [sp, #148]	@ 0x94
 801fc44:	f89d 30a4 	ldrb.w	r3, [sp, #164]	@ 0xa4
 801fc48:	910d      	str	r1, [sp, #52]	@ 0x34
 801fc4a:	930f      	str	r3, [sp, #60]	@ 0x3c
 801fc4c:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	@ 0x98
 801fc50:	9015      	str	r0, [sp, #84]	@ 0x54
 801fc52:	6850      	ldr	r0, [r2, #4]
 801fc54:	6812      	ldr	r2, [r2, #0]
 801fc56:	fb00 1303 	mla	r3, r0, r3, r1
 801fc5a:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 801fc5e:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801fc60:	689b      	ldr	r3, [r3, #8]
 801fc62:	3301      	adds	r3, #1
 801fc64:	f023 0301 	bic.w	r3, r3, #1
 801fc68:	930a      	str	r3, [sp, #40]	@ 0x28
 801fc6a:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801fc6c:	681f      	ldr	r7, [r3, #0]
 801fc6e:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801fc70:	2b00      	cmp	r3, #0
 801fc72:	dc03      	bgt.n	801fc7c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801fc74:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 801fc76:	2b00      	cmp	r3, #0
 801fc78:	f340 8287 	ble.w	802018a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x556>
 801fc7c:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801fc7e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801fc82:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801fc86:	1e48      	subs	r0, r1, #1
 801fc88:	f102 3cff 	add.w	ip, r2, #4294967295
 801fc8c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801fc8e:	2b00      	cmp	r3, #0
 801fc90:	f340 80c4 	ble.w	801fe1c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801fc94:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801fc98:	ea4f 4326 	mov.w	r3, r6, asr #16
 801fc9c:	d406      	bmi.n	801fcac <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801fc9e:	4586      	cmp	lr, r0
 801fca0:	da04      	bge.n	801fcac <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801fca2:	2b00      	cmp	r3, #0
 801fca4:	db02      	blt.n	801fcac <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801fca6:	4563      	cmp	r3, ip
 801fca8:	f2c0 80b9 	blt.w	801fe1e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 801fcac:	f11e 0e01 	adds.w	lr, lr, #1
 801fcb0:	f100 80aa 	bmi.w	801fe08 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801fcb4:	4571      	cmp	r1, lr
 801fcb6:	f2c0 80a7 	blt.w	801fe08 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801fcba:	3301      	adds	r3, #1
 801fcbc:	f100 80a4 	bmi.w	801fe08 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801fcc0:	429a      	cmp	r2, r3
 801fcc2:	f2c0 80a1 	blt.w	801fe08 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801fcc6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801fcc8:	f9bd a028 	ldrsh.w	sl, [sp, #40]	@ 0x28
 801fccc:	930e      	str	r3, [sp, #56]	@ 0x38
 801fcce:	46c8      	mov	r8, r9
 801fcd0:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801fcd2:	2b00      	cmp	r3, #0
 801fcd4:	f340 80c3 	ble.w	801fe5e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 801fcd8:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801fcda:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 801fcde:	1423      	asrs	r3, r4, #16
 801fce0:	ea4f 4026 	mov.w	r0, r6, asr #16
 801fce4:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801fce8:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801fcec:	f100 814d 	bmi.w	801ff8a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 801fcf0:	f10c 3bff 	add.w	fp, ip, #4294967295
 801fcf4:	455b      	cmp	r3, fp
 801fcf6:	f280 8148 	bge.w	801ff8a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 801fcfa:	2800      	cmp	r0, #0
 801fcfc:	f2c0 8145 	blt.w	801ff8a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 801fd00:	f10e 3bff 	add.w	fp, lr, #4294967295
 801fd04:	4558      	cmp	r0, fp
 801fd06:	f280 8140 	bge.w	801ff8a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 801fd0a:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
 801fd0c:	fb00 3305 	mla	r3, r0, r5, r3
 801fd10:	0858      	lsrs	r0, r3, #1
 801fd12:	07dd      	lsls	r5, r3, #31
 801fd14:	f817 c000 	ldrb.w	ip, [r7, r0]
 801fd18:	bf54      	ite	pl
 801fd1a:	f00c 0c0f 	andpl.w	ip, ip, #15
 801fd1e:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801fd22:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801fd26:	fa5f fc8c 	uxtb.w	ip, ip
 801fd2a:	2a00      	cmp	r2, #0
 801fd2c:	f000 80db 	beq.w	801fee6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b2>
 801fd30:	1c58      	adds	r0, r3, #1
 801fd32:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 801fd36:	07c0      	lsls	r0, r0, #31
 801fd38:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801fd3c:	bf54      	ite	pl
 801fd3e:	f00e 0e0f 	andpl.w	lr, lr, #15
 801fd42:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 801fd46:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 801fd4a:	fa5f f08e 	uxtb.w	r0, lr
 801fd4e:	9010      	str	r0, [sp, #64]	@ 0x40
 801fd50:	b1c9      	cbz	r1, 801fd86 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801fd52:	4453      	add	r3, sl
 801fd54:	0858      	lsrs	r0, r3, #1
 801fd56:	07dd      	lsls	r5, r3, #31
 801fd58:	5c38      	ldrb	r0, [r7, r0]
 801fd5a:	bf54      	ite	pl
 801fd5c:	f000 000f 	andpl.w	r0, r0, #15
 801fd60:	1100      	asrmi	r0, r0, #4
 801fd62:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801fd66:	3301      	adds	r3, #1
 801fd68:	b2c0      	uxtb	r0, r0
 801fd6a:	900b      	str	r0, [sp, #44]	@ 0x2c
 801fd6c:	0858      	lsrs	r0, r3, #1
 801fd6e:	07dd      	lsls	r5, r3, #31
 801fd70:	f817 e000 	ldrb.w	lr, [r7, r0]
 801fd74:	bf54      	ite	pl
 801fd76:	f00e 030f 	andpl.w	r3, lr, #15
 801fd7a:	ea4f 132e 	movmi.w	r3, lr, asr #4
 801fd7e:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801fd82:	b2db      	uxtb	r3, r3
 801fd84:	9311      	str	r3, [sp, #68]	@ 0x44
 801fd86:	b292      	uxth	r2, r2
 801fd88:	b289      	uxth	r1, r1
 801fd8a:	fb02 f301 	mul.w	r3, r2, r1
 801fd8e:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 801fd92:	0112      	lsls	r2, r2, #4
 801fd94:	b289      	uxth	r1, r1
 801fd96:	f5c2 7080 	rsb	r0, r2, #256	@ 0x100
 801fd9a:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 801fd9c:	1ad2      	subs	r2, r2, r3
 801fd9e:	1a40      	subs	r0, r0, r1
 801fda0:	b292      	uxth	r2, r2
 801fda2:	436a      	muls	r2, r5
 801fda4:	b280      	uxth	r0, r0
 801fda6:	fb0c 2c00 	mla	ip, ip, r0, r2
 801fdaa:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 801fdac:	fb01 c102 	mla	r1, r1, r2, ip
 801fdb0:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 801fdb2:	fb03 1302 	mla	r3, r3, r2, r1
 801fdb6:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801fdba:	b1db      	cbz	r3, 801fdf4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801fdbc:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801fdbe:	4353      	muls	r3, r2
 801fdc0:	1c5a      	adds	r2, r3, #1
 801fdc2:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 801fdc6:	4ac6      	ldr	r2, [pc, #792]	@ (80200e0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 801fdc8:	121b      	asrs	r3, r3, #8
 801fdca:	6812      	ldr	r2, [r2, #0]
 801fdcc:	2bff      	cmp	r3, #255	@ 0xff
 801fdce:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 801fdd2:	f040 8099 	bne.w	801ff08 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d4>
 801fdd6:	0953      	lsrs	r3, r2, #5
 801fdd8:	f42c 6cff 	bic.w	ip, ip, #2040	@ 0x7f8
 801fddc:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801fde0:	f02c 0c07 	bic.w	ip, ip, #7
 801fde4:	ea43 0c0c 	orr.w	ip, r3, ip
 801fde8:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801fdec:	ea4c 0202 	orr.w	r2, ip, r2
 801fdf0:	f8a8 2000 	strh.w	r2, [r8]
 801fdf4:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 801fdf6:	441c      	add	r4, r3
 801fdf8:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801fdfa:	441e      	add	r6, r3
 801fdfc:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801fdfe:	3b01      	subs	r3, #1
 801fe00:	f108 0802 	add.w	r8, r8, #2
 801fe04:	930e      	str	r3, [sp, #56]	@ 0x38
 801fe06:	e763      	b.n	801fcd0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801fe08:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 801fe0a:	441c      	add	r4, r3
 801fe0c:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801fe0e:	441e      	add	r6, r3
 801fe10:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801fe12:	3b01      	subs	r3, #1
 801fe14:	9309      	str	r3, [sp, #36]	@ 0x24
 801fe16:	f109 0902 	add.w	r9, r9, #2
 801fe1a:	e737      	b.n	801fc8c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801fe1c:	d024      	beq.n	801fe68 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801fe1e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801fe20:	9823      	ldr	r0, [sp, #140]	@ 0x8c
 801fe22:	3b01      	subs	r3, #1
 801fe24:	fb00 4003 	mla	r0, r0, r3, r4
 801fe28:	1400      	asrs	r0, r0, #16
 801fe2a:	f53f af4c 	bmi.w	801fcc6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801fe2e:	3901      	subs	r1, #1
 801fe30:	4288      	cmp	r0, r1
 801fe32:	f6bf af48 	bge.w	801fcc6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801fe36:	9924      	ldr	r1, [sp, #144]	@ 0x90
 801fe38:	fb01 6303 	mla	r3, r1, r3, r6
 801fe3c:	141b      	asrs	r3, r3, #16
 801fe3e:	f53f af42 	bmi.w	801fcc6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801fe42:	3a01      	subs	r2, #1
 801fe44:	4293      	cmp	r3, r2
 801fe46:	f6bf af3e 	bge.w	801fcc6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801fe4a:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	@ 0x28
 801fe4e:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
 801fe52:	930e      	str	r3, [sp, #56]	@ 0x38
 801fe54:	46c8      	mov	r8, r9
 801fe56:	f1bb 0f00 	cmp.w	fp, #0
 801fe5a:	f300 80b7 	bgt.w	801ffcc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 801fe5e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801fe60:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801fe64:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 801fe68:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801fe6a:	2b00      	cmp	r3, #0
 801fe6c:	f340 818d 	ble.w	802018a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x556>
 801fe70:	ee30 0a04 	vadd.f32	s0, s0, s8
 801fe74:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801fe78:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801fe7c:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801fe7e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801fe82:	ee31 1a05 	vadd.f32	s2, s2, s10
 801fe86:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801fe8a:	eef0 6a62 	vmov.f32	s13, s5
 801fe8e:	ee61 7a27 	vmul.f32	s15, s2, s15
 801fe92:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801fe96:	ee77 2a62 	vsub.f32	s5, s14, s5
 801fe9a:	ee16 4a90 	vmov	r4, s13
 801fe9e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801fea2:	eef0 6a43 	vmov.f32	s13, s6
 801fea6:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801feaa:	ee12 2a90 	vmov	r2, s5
 801feae:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801feb2:	fb92 f3f3 	sdiv	r3, r2, r3
 801feb6:	ee13 2a10 	vmov	r2, s6
 801feba:	9323      	str	r3, [sp, #140]	@ 0x8c
 801febc:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801febe:	fb92 f3f3 	sdiv	r3, r2, r3
 801fec2:	9324      	str	r3, [sp, #144]	@ 0x90
 801fec4:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801fec6:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801fec8:	3b01      	subs	r3, #1
 801feca:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801fece:	930d      	str	r3, [sp, #52]	@ 0x34
 801fed0:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801fed2:	bf08      	it	eq
 801fed4:	4613      	moveq	r3, r2
 801fed6:	ee16 6a90 	vmov	r6, s13
 801feda:	9309      	str	r3, [sp, #36]	@ 0x24
 801fedc:	eeb0 3a67 	vmov.f32	s6, s15
 801fee0:	eef0 2a47 	vmov.f32	s5, s14
 801fee4:	e6c3      	b.n	801fc6e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801fee6:	2900      	cmp	r1, #0
 801fee8:	f43f af4d 	beq.w	801fd86 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801feec:	eb0a 0003 	add.w	r0, sl, r3
 801fef0:	0843      	lsrs	r3, r0, #1
 801fef2:	07c0      	lsls	r0, r0, #31
 801fef4:	5cfb      	ldrb	r3, [r7, r3]
 801fef6:	bf54      	ite	pl
 801fef8:	f003 030f 	andpl.w	r3, r3, #15
 801fefc:	111b      	asrmi	r3, r3, #4
 801fefe:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801ff02:	b2db      	uxtb	r3, r3
 801ff04:	930b      	str	r3, [sp, #44]	@ 0x2c
 801ff06:	e73e      	b.n	801fd86 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801ff08:	f8b8 e000 	ldrh.w	lr, [r8]
 801ff0c:	fa1f fb83 	uxth.w	fp, r3
 801ff10:	ea4f 202e 	mov.w	r0, lr, asr #8
 801ff14:	f3c2 4107 	ubfx	r1, r2, #16, #8
 801ff18:	43db      	mvns	r3, r3
 801ff1a:	b2db      	uxtb	r3, r3
 801ff1c:	fb11 f10b 	smulbb	r1, r1, fp
 801ff20:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801ff24:	fb00 1003 	mla	r0, r0, r3, r1
 801ff28:	fa5f fc8c 	uxtb.w	ip, ip
 801ff2c:	ea4f 01ee 	mov.w	r1, lr, asr #3
 801ff30:	b2d2      	uxtb	r2, r2
 801ff32:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801ff36:	b280      	uxth	r0, r0
 801ff38:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 801ff3c:	fb1c fc0b 	smulbb	ip, ip, fp
 801ff40:	fa5f fe8e 	uxtb.w	lr, lr
 801ff44:	fb12 fb0b 	smulbb	fp, r2, fp
 801ff48:	fb01 cc03 	mla	ip, r1, r3, ip
 801ff4c:	fb0e bb03 	mla	fp, lr, r3, fp
 801ff50:	1c43      	adds	r3, r0, #1
 801ff52:	fa1f fc8c 	uxth.w	ip, ip
 801ff56:	fa1f fb8b 	uxth.w	fp, fp
 801ff5a:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801ff5e:	f400 4378 	and.w	r3, r0, #63488	@ 0xf800
 801ff62:	f10c 0101 	add.w	r1, ip, #1
 801ff66:	f10b 0001 	add.w	r0, fp, #1
 801ff6a:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 801ff6e:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 801ff72:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 801ff76:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801ff7a:	4318      	orrs	r0, r3
 801ff7c:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 801ff80:	ea40 000c 	orr.w	r0, r0, ip
 801ff84:	f8a8 0000 	strh.w	r0, [r8]
 801ff88:	e734      	b.n	801fdf4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801ff8a:	f113 0b01 	adds.w	fp, r3, #1
 801ff8e:	f53f af31 	bmi.w	801fdf4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801ff92:	45dc      	cmp	ip, fp
 801ff94:	f6ff af2e 	blt.w	801fdf4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801ff98:	f110 0b01 	adds.w	fp, r0, #1
 801ff9c:	f53f af2a 	bmi.w	801fdf4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801ffa0:	45de      	cmp	lr, fp
 801ffa2:	f6ff af27 	blt.w	801fdf4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801ffa6:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 801ffa8:	9302      	str	r3, [sp, #8]
 801ffaa:	fa0f f38e 	sxth.w	r3, lr
 801ffae:	9301      	str	r3, [sp, #4]
 801ffb0:	fa0f f38c 	sxth.w	r3, ip
 801ffb4:	e9cd 0203 	strd	r0, r2, [sp, #12]
 801ffb8:	e9cd 1505 	strd	r1, r5, [sp, #20]
 801ffbc:	9300      	str	r3, [sp, #0]
 801ffbe:	463a      	mov	r2, r7
 801ffc0:	4653      	mov	r3, sl
 801ffc2:	4641      	mov	r1, r8
 801ffc4:	9815      	ldr	r0, [sp, #84]	@ 0x54
 801ffc6:	f7ff fd4d 	bl	801fa64 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>
 801ffca:	e713      	b.n	801fdf4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801ffcc:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
 801ffce:	1422      	asrs	r2, r4, #16
 801ffd0:	1433      	asrs	r3, r6, #16
 801ffd2:	fb05 2303 	mla	r3, r5, r3, r2
 801ffd6:	085a      	lsrs	r2, r3, #1
 801ffd8:	07dd      	lsls	r5, r3, #31
 801ffda:	5cba      	ldrb	r2, [r7, r2]
 801ffdc:	bf54      	ite	pl
 801ffde:	f002 020f 	andpl.w	r2, r2, #15
 801ffe2:	1112      	asrmi	r2, r2, #4
 801ffe4:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801ffe8:	f3c4 3103 	ubfx	r1, r4, #12, #4
 801ffec:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801fff0:	b2d2      	uxtb	r2, r2
 801fff2:	2900      	cmp	r1, #0
 801fff4:	d076      	beq.n	80200e4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 801fff6:	f103 0e01 	add.w	lr, r3, #1
 801fffa:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 801fffe:	f01e 0f01 	tst.w	lr, #1
 8020002:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8020006:	bf0c      	ite	eq
 8020008:	f00c 0c0f 	andeq.w	ip, ip, #15
 802000c:	ea4f 1c2c 	movne.w	ip, ip, asr #4
 8020010:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8020014:	fa5f f58c 	uxtb.w	r5, ip
 8020018:	9512      	str	r5, [sp, #72]	@ 0x48
 802001a:	b300      	cbz	r0, 802005e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 802001c:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 802001e:	442b      	add	r3, r5
 8020020:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8020024:	07dd      	lsls	r5, r3, #31
 8020026:	f817 c00c 	ldrb.w	ip, [r7, ip]
 802002a:	bf54      	ite	pl
 802002c:	f00c 0c0f 	andpl.w	ip, ip, #15
 8020030:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8020034:	3301      	adds	r3, #1
 8020036:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 802003a:	fa5f f58c 	uxtb.w	r5, ip
 802003e:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8020042:	950c      	str	r5, [sp, #48]	@ 0x30
 8020044:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8020048:	07dd      	lsls	r5, r3, #31
 802004a:	bf54      	ite	pl
 802004c:	f00c 0c0f 	andpl.w	ip, ip, #15
 8020050:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8020054:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8020058:	fa5f f38c 	uxtb.w	r3, ip
 802005c:	9313      	str	r3, [sp, #76]	@ 0x4c
 802005e:	b289      	uxth	r1, r1
 8020060:	b280      	uxth	r0, r0
 8020062:	fb01 f300 	mul.w	r3, r1, r0
 8020066:	ebc3 1000 	rsb	r0, r3, r0, lsl #4
 802006a:	0109      	lsls	r1, r1, #4
 802006c:	b280      	uxth	r0, r0
 802006e:	f5c1 7c80 	rsb	ip, r1, #256	@ 0x100
 8020072:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 8020074:	1ac9      	subs	r1, r1, r3
 8020076:	ebac 0c00 	sub.w	ip, ip, r0
 802007a:	b289      	uxth	r1, r1
 802007c:	4369      	muls	r1, r5
 802007e:	fa1f fc8c 	uxth.w	ip, ip
 8020082:	fb02 120c 	mla	r2, r2, ip, r1
 8020086:	990c      	ldr	r1, [sp, #48]	@ 0x30
 8020088:	fb00 2001 	mla	r0, r0, r1, r2
 802008c:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 802008e:	fb03 0302 	mla	r3, r3, r2, r0
 8020092:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8020096:	b1d3      	cbz	r3, 80200ce <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 8020098:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 802009a:	4353      	muls	r3, r2
 802009c:	1c5a      	adds	r2, r3, #1
 802009e:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 80200a2:	4a0f      	ldr	r2, [pc, #60]	@ (80200e0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 80200a4:	121b      	asrs	r3, r3, #8
 80200a6:	6812      	ldr	r2, [r2, #0]
 80200a8:	2bff      	cmp	r3, #255	@ 0xff
 80200aa:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 80200ae:	d12d      	bne.n	802010c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 80200b0:	0953      	lsrs	r3, r2, #5
 80200b2:	f42c 6cff 	bic.w	ip, ip, #2040	@ 0x7f8
 80200b6:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 80200ba:	f02c 0c07 	bic.w	ip, ip, #7
 80200be:	ea43 0c0c 	orr.w	ip, r3, ip
 80200c2:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80200c6:	ea4c 0202 	orr.w	r2, ip, r2
 80200ca:	f8a8 2000 	strh.w	r2, [r8]
 80200ce:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 80200d0:	441c      	add	r4, r3
 80200d2:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 80200d4:	f108 0802 	add.w	r8, r8, #2
 80200d8:	441e      	add	r6, r3
 80200da:	f10b 3bff 	add.w	fp, fp, #4294967295
 80200de:	e6ba      	b.n	801fe56 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 80200e0:	20014054 	.word	0x20014054
 80200e4:	2800      	cmp	r0, #0
 80200e6:	d0ba      	beq.n	802005e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 80200e8:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 80200ea:	442b      	add	r3, r5
 80200ec:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 80200f0:	07db      	lsls	r3, r3, #31
 80200f2:	f817 c00c 	ldrb.w	ip, [r7, ip]
 80200f6:	bf54      	ite	pl
 80200f8:	f00c 0c0f 	andpl.w	ip, ip, #15
 80200fc:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8020100:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8020104:	fa5f f38c 	uxtb.w	r3, ip
 8020108:	930c      	str	r3, [sp, #48]	@ 0x30
 802010a:	e7a8      	b.n	802005e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 802010c:	f8b8 e000 	ldrh.w	lr, [r8]
 8020110:	fa1f fa83 	uxth.w	sl, r3
 8020114:	ea4f 202e 	mov.w	r0, lr, asr #8
 8020118:	f3c2 4107 	ubfx	r1, r2, #16, #8
 802011c:	43db      	mvns	r3, r3
 802011e:	b2db      	uxtb	r3, r3
 8020120:	fb11 f10a 	smulbb	r1, r1, sl
 8020124:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 8020128:	fb00 1003 	mla	r0, r0, r3, r1
 802012c:	b2d2      	uxtb	r2, r2
 802012e:	ea4f 01ee 	mov.w	r1, lr, asr #3
 8020132:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8020136:	fa5f fe8e 	uxtb.w	lr, lr
 802013a:	fb12 f20a 	smulbb	r2, r2, sl
 802013e:	fb0e 2203 	mla	r2, lr, r3, r2
 8020142:	fa5f fc8c 	uxtb.w	ip, ip
 8020146:	b280      	uxth	r0, r0
 8020148:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 802014c:	b292      	uxth	r2, r2
 802014e:	fb1c fc0a 	smulbb	ip, ip, sl
 8020152:	fb01 cc03 	mla	ip, r1, r3, ip
 8020156:	1c43      	adds	r3, r0, #1
 8020158:	1c51      	adds	r1, r2, #1
 802015a:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 802015e:	eb01 2112 	add.w	r1, r1, r2, lsr #8
 8020162:	fa1f fc8c 	uxth.w	ip, ip
 8020166:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 802016a:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
 802016e:	4308      	orrs	r0, r1
 8020170:	f10c 0101 	add.w	r1, ip, #1
 8020174:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8020178:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 802017c:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 8020180:	ea40 000c 	orr.w	r0, r0, ip
 8020184:	f8a8 0000 	strh.w	r0, [r8]
 8020188:	e7a1      	b.n	80200ce <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 802018a:	b017      	add	sp, #92	@ 0x5c
 802018c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08020190 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>:
 8020190:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8020194:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	@ 0x28
 8020198:	2d00      	cmp	r5, #0
 802019a:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 802019e:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	@ 0x24
 80201a2:	f89d 7030 	ldrb.w	r7, [sp, #48]	@ 0x30
 80201a6:	f89d c034 	ldrb.w	ip, [sp, #52]	@ 0x34
 80201aa:	fb05 0e03 	mla	lr, r5, r3, r0
 80201ae:	f2c0 80b0 	blt.w	8020312 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 80201b2:	45a9      	cmp	r9, r5
 80201b4:	f340 80ad 	ble.w	8020312 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 80201b8:	2800      	cmp	r0, #0
 80201ba:	f2c0 80a8 	blt.w	802030e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 80201be:	4580      	cmp	r8, r0
 80201c0:	f340 80a5 	ble.w	802030e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 80201c4:	ea4f 045e 	mov.w	r4, lr, lsr #1
 80201c8:	f01e 0f01 	tst.w	lr, #1
 80201cc:	5d16      	ldrb	r6, [r2, r4]
 80201ce:	bf0c      	ite	eq
 80201d0:	f006 060f 	andeq.w	r6, r6, #15
 80201d4:	1136      	asrne	r6, r6, #4
 80201d6:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 80201da:	b2f6      	uxtb	r6, r6
 80201dc:	1c44      	adds	r4, r0, #1
 80201de:	f100 809b 	bmi.w	8020318 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 80201e2:	45a0      	cmp	r8, r4
 80201e4:	f340 8098 	ble.w	8020318 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 80201e8:	2f00      	cmp	r7, #0
 80201ea:	f000 8097 	beq.w	802031c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x18c>
 80201ee:	f10e 0a01 	add.w	sl, lr, #1
 80201f2:	ea4f 045a 	mov.w	r4, sl, lsr #1
 80201f6:	f01a 0f01 	tst.w	sl, #1
 80201fa:	5d14      	ldrb	r4, [r2, r4]
 80201fc:	bf0c      	ite	eq
 80201fe:	f004 040f 	andeq.w	r4, r4, #15
 8020202:	1124      	asrne	r4, r4, #4
 8020204:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 8020208:	b2e4      	uxtb	r4, r4
 802020a:	3501      	adds	r5, #1
 802020c:	f100 808a 	bmi.w	8020324 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 8020210:	45a9      	cmp	r9, r5
 8020212:	f340 8087 	ble.w	8020324 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 8020216:	f1bc 0f00 	cmp.w	ip, #0
 802021a:	f000 8086 	beq.w	802032a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x19a>
 802021e:	2800      	cmp	r0, #0
 8020220:	db7e      	blt.n	8020320 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 8020222:	4580      	cmp	r8, r0
 8020224:	dd7c      	ble.n	8020320 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 8020226:	eb03 090e 	add.w	r9, r3, lr
 802022a:	ea4f 0559 	mov.w	r5, r9, lsr #1
 802022e:	f019 0f01 	tst.w	r9, #1
 8020232:	5d55      	ldrb	r5, [r2, r5]
 8020234:	bf0c      	ite	eq
 8020236:	f005 050f 	andeq.w	r5, r5, #15
 802023a:	112d      	asrne	r5, r5, #4
 802023c:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 8020240:	b2ed      	uxtb	r5, r5
 8020242:	3001      	adds	r0, #1
 8020244:	d474      	bmi.n	8020330 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 8020246:	4580      	cmp	r8, r0
 8020248:	dd72      	ble.n	8020330 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 802024a:	2f00      	cmp	r7, #0
 802024c:	d072      	beq.n	8020334 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a4>
 802024e:	3301      	adds	r3, #1
 8020250:	449e      	add	lr, r3
 8020252:	ea4f 035e 	mov.w	r3, lr, lsr #1
 8020256:	f01e 0f01 	tst.w	lr, #1
 802025a:	5cd0      	ldrb	r0, [r2, r3]
 802025c:	bf0c      	ite	eq
 802025e:	f000 000f 	andeq.w	r0, r0, #15
 8020262:	1100      	asrne	r0, r0, #4
 8020264:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8020268:	b2c3      	uxtb	r3, r0
 802026a:	b2ba      	uxth	r2, r7
 802026c:	fa1f fc8c 	uxth.w	ip, ip
 8020270:	fb02 f00c 	mul.w	r0, r2, ip
 8020274:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 8020278:	0112      	lsls	r2, r2, #4
 802027a:	fa1f fc8c 	uxth.w	ip, ip
 802027e:	f5c2 7780 	rsb	r7, r2, #256	@ 0x100
 8020282:	1a12      	subs	r2, r2, r0
 8020284:	eba7 070c 	sub.w	r7, r7, ip
 8020288:	b292      	uxth	r2, r2
 802028a:	b2bf      	uxth	r7, r7
 802028c:	4362      	muls	r2, r4
 802028e:	fb06 2207 	mla	r2, r6, r7, r2
 8020292:	fb0c 2505 	mla	r5, ip, r5, r2
 8020296:	fb00 5303 	mla	r3, r0, r3, r5
 802029a:	f3c3 2307 	ubfx	r3, r3, #8, #8
 802029e:	b3a3      	cbz	r3, 802030a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17a>
 80202a0:	4a25      	ldr	r2, [pc, #148]	@ (8020338 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a8>)
 80202a2:	880e      	ldrh	r6, [r1, #0]
 80202a4:	6815      	ldr	r5, [r2, #0]
 80202a6:	1234      	asrs	r4, r6, #8
 80202a8:	b29a      	uxth	r2, r3
 80202aa:	f3c5 4007 	ubfx	r0, r5, #16, #8
 80202ae:	43db      	mvns	r3, r3
 80202b0:	b2db      	uxtb	r3, r3
 80202b2:	fb10 f002 	smulbb	r0, r0, r2
 80202b6:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 80202ba:	fb04 0403 	mla	r4, r4, r3, r0
 80202be:	f3c5 2707 	ubfx	r7, r5, #8, #8
 80202c2:	10f0      	asrs	r0, r6, #3
 80202c4:	b2ed      	uxtb	r5, r5
 80202c6:	00f6      	lsls	r6, r6, #3
 80202c8:	fb17 f702 	smulbb	r7, r7, r2
 80202cc:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 80202d0:	fb15 f202 	smulbb	r2, r5, r2
 80202d4:	b2f6      	uxtb	r6, r6
 80202d6:	b2a4      	uxth	r4, r4
 80202d8:	fb00 7003 	mla	r0, r0, r3, r7
 80202dc:	fb06 2303 	mla	r3, r6, r3, r2
 80202e0:	b29a      	uxth	r2, r3
 80202e2:	1c63      	adds	r3, r4, #1
 80202e4:	b280      	uxth	r0, r0
 80202e6:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 80202ea:	1c53      	adds	r3, r2, #1
 80202ec:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80202f0:	1c42      	adds	r2, r0, #1
 80202f2:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 80202f6:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
 80202fa:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80202fe:	0940      	lsrs	r0, r0, #5
 8020300:	4323      	orrs	r3, r4
 8020302:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8020306:	4303      	orrs	r3, r0
 8020308:	800b      	strh	r3, [r1, #0]
 802030a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802030e:	2600      	movs	r6, #0
 8020310:	e764      	b.n	80201dc <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x4c>
 8020312:	2400      	movs	r4, #0
 8020314:	4626      	mov	r6, r4
 8020316:	e778      	b.n	802020a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 8020318:	2400      	movs	r4, #0
 802031a:	e776      	b.n	802020a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 802031c:	463c      	mov	r4, r7
 802031e:	e774      	b.n	802020a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 8020320:	2500      	movs	r5, #0
 8020322:	e78e      	b.n	8020242 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xb2>
 8020324:	2300      	movs	r3, #0
 8020326:	461d      	mov	r5, r3
 8020328:	e79f      	b.n	802026a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 802032a:	4663      	mov	r3, ip
 802032c:	4665      	mov	r5, ip
 802032e:	e79c      	b.n	802026a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8020330:	2300      	movs	r3, #0
 8020332:	e79a      	b.n	802026a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8020334:	463b      	mov	r3, r7
 8020336:	e798      	b.n	802026a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8020338:	20014054 	.word	0x20014054

0802033c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 802033c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020340:	b093      	sub	sp, #76	@ 0x4c
 8020342:	461d      	mov	r5, r3
 8020344:	920c      	str	r2, [sp, #48]	@ 0x30
 8020346:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 8020348:	9107      	str	r1, [sp, #28]
 802034a:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	@ 0x88
 802034e:	9011      	str	r0, [sp, #68]	@ 0x44
 8020350:	6850      	ldr	r0, [r2, #4]
 8020352:	6812      	ldr	r2, [r2, #0]
 8020354:	fb00 1303 	mla	r3, r0, r3, r1
 8020358:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 802035c:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 802035e:	689b      	ldr	r3, [r3, #8]
 8020360:	3301      	adds	r3, #1
 8020362:	f023 0301 	bic.w	r3, r3, #1
 8020366:	9306      	str	r3, [sp, #24]
 8020368:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 802036a:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	@ 0x74
 802036e:	681f      	ldr	r7, [r3, #0]
 8020370:	9b07      	ldr	r3, [sp, #28]
 8020372:	2b00      	cmp	r3, #0
 8020374:	dc03      	bgt.n	802037e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 8020376:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8020378:	2b00      	cmp	r3, #0
 802037a:	f340 8267 	ble.w	802084c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 802037e:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8020380:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8020384:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8020388:	1e48      	subs	r0, r1, #1
 802038a:	f102 3cff 	add.w	ip, r2, #4294967295
 802038e:	2d00      	cmp	r5, #0
 8020390:	f340 80b8 	ble.w	8020504 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8020394:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8020398:	ea4f 4326 	mov.w	r3, r6, asr #16
 802039c:	d406      	bmi.n	80203ac <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 802039e:	4586      	cmp	lr, r0
 80203a0:	da04      	bge.n	80203ac <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80203a2:	2b00      	cmp	r3, #0
 80203a4:	db02      	blt.n	80203ac <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80203a6:	4563      	cmp	r3, ip
 80203a8:	f2c0 80ad 	blt.w	8020506 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ca>
 80203ac:	f11e 0e01 	adds.w	lr, lr, #1
 80203b0:	f100 80a0 	bmi.w	80204f4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 80203b4:	4571      	cmp	r1, lr
 80203b6:	f2c0 809d 	blt.w	80204f4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 80203ba:	3301      	adds	r3, #1
 80203bc:	f100 809a 	bmi.w	80204f4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 80203c0:	429a      	cmp	r2, r3
 80203c2:	f2c0 8097 	blt.w	80204f4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 80203c6:	f9bd a018 	ldrsh.w	sl, [sp, #24]
 80203ca:	9509      	str	r5, [sp, #36]	@ 0x24
 80203cc:	46c8      	mov	r8, r9
 80203ce:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80203d0:	2b00      	cmp	r3, #0
 80203d2:	f340 80b6 	ble.w	8020542 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x206>
 80203d6:	f3c4 3303 	ubfx	r3, r4, #12, #4
 80203da:	9308      	str	r3, [sp, #32]
 80203dc:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 80203de:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 80203e2:	1423      	asrs	r3, r4, #16
 80203e4:	ea4f 4026 	mov.w	r0, r6, asr #16
 80203e8:	f3c6 3103 	ubfx	r1, r6, #12, #4
 80203ec:	f100 813e 	bmi.w	802066c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 80203f0:	f10c 3bff 	add.w	fp, ip, #4294967295
 80203f4:	455b      	cmp	r3, fp
 80203f6:	f280 8139 	bge.w	802066c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 80203fa:	2800      	cmp	r0, #0
 80203fc:	f2c0 8136 	blt.w	802066c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8020400:	f10e 3bff 	add.w	fp, lr, #4294967295
 8020404:	4558      	cmp	r0, fp
 8020406:	f280 8131 	bge.w	802066c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 802040a:	9a06      	ldr	r2, [sp, #24]
 802040c:	fb00 3302 	mla	r3, r0, r2, r3
 8020410:	0858      	lsrs	r0, r3, #1
 8020412:	07da      	lsls	r2, r3, #31
 8020414:	f817 c000 	ldrb.w	ip, [r7, r0]
 8020418:	9a08      	ldr	r2, [sp, #32]
 802041a:	bf54      	ite	pl
 802041c:	f00c 0c0f 	andpl.w	ip, ip, #15
 8020420:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8020424:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8020428:	fa5f fc8c 	uxtb.w	ip, ip
 802042c:	2a00      	cmp	r2, #0
 802042e:	f000 80cb 	beq.w	80205c8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8020432:	1c58      	adds	r0, r3, #1
 8020434:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 8020438:	07c0      	lsls	r0, r0, #31
 802043a:	f817 e00e 	ldrb.w	lr, [r7, lr]
 802043e:	bf54      	ite	pl
 8020440:	f00e 0e0f 	andpl.w	lr, lr, #15
 8020444:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 8020448:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 802044c:	fa5f fe8e 	uxtb.w	lr, lr
 8020450:	f8cd e034 	str.w	lr, [sp, #52]	@ 0x34
 8020454:	b1b9      	cbz	r1, 8020486 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 8020456:	4453      	add	r3, sl
 8020458:	0858      	lsrs	r0, r3, #1
 802045a:	07da      	lsls	r2, r3, #31
 802045c:	5c38      	ldrb	r0, [r7, r0]
 802045e:	bf54      	ite	pl
 8020460:	f000 000f 	andpl.w	r0, r0, #15
 8020464:	1100      	asrmi	r0, r0, #4
 8020466:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 802046a:	b2c0      	uxtb	r0, r0
 802046c:	900a      	str	r0, [sp, #40]	@ 0x28
 802046e:	1c58      	adds	r0, r3, #1
 8020470:	0843      	lsrs	r3, r0, #1
 8020472:	07c2      	lsls	r2, r0, #31
 8020474:	5cfb      	ldrb	r3, [r7, r3]
 8020476:	bf54      	ite	pl
 8020478:	f003 030f 	andpl.w	r3, r3, #15
 802047c:	111b      	asrmi	r3, r3, #4
 802047e:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8020482:	b2db      	uxtb	r3, r3
 8020484:	930e      	str	r3, [sp, #56]	@ 0x38
 8020486:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 802048a:	b289      	uxth	r1, r1
 802048c:	fb02 f301 	mul.w	r3, r2, r1
 8020490:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 8020494:	0112      	lsls	r2, r2, #4
 8020496:	b289      	uxth	r1, r1
 8020498:	f5c2 7080 	rsb	r0, r2, #256	@ 0x100
 802049c:	1a40      	subs	r0, r0, r1
 802049e:	fa1f fe80 	uxth.w	lr, r0
 80204a2:	1ad2      	subs	r2, r2, r3
 80204a4:	980d      	ldr	r0, [sp, #52]	@ 0x34
 80204a6:	b292      	uxth	r2, r2
 80204a8:	4342      	muls	r2, r0
 80204aa:	fb0c 2c0e 	mla	ip, ip, lr, r2
 80204ae:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 80204b0:	fb01 c102 	mla	r1, r1, r2, ip
 80204b4:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 80204b6:	fb03 1302 	mla	r3, r3, r2, r1
 80204ba:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80204be:	2bff      	cmp	r3, #255	@ 0xff
 80204c0:	f040 8093 	bne.w	80205ea <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 80204c4:	4bbe      	ldr	r3, [pc, #760]	@ (80207c0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 80204c6:	681a      	ldr	r2, [r3, #0]
 80204c8:	4bbe      	ldr	r3, [pc, #760]	@ (80207c4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 80204ca:	0951      	lsrs	r1, r2, #5
 80204cc:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 80204d0:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 80204d4:	430b      	orrs	r3, r1
 80204d6:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80204da:	4313      	orrs	r3, r2
 80204dc:	f8a8 3000 	strh.w	r3, [r8]
 80204e0:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 80204e2:	441c      	add	r4, r3
 80204e4:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 80204e6:	441e      	add	r6, r3
 80204e8:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80204ea:	3b01      	subs	r3, #1
 80204ec:	f108 0802 	add.w	r8, r8, #2
 80204f0:	9309      	str	r3, [sp, #36]	@ 0x24
 80204f2:	e76c      	b.n	80203ce <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80204f4:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 80204f6:	441c      	add	r4, r3
 80204f8:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 80204fa:	3d01      	subs	r5, #1
 80204fc:	441e      	add	r6, r3
 80204fe:	f109 0902 	add.w	r9, r9, #2
 8020502:	e744      	b.n	802038e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8020504:	d021      	beq.n	802054a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 8020506:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 8020508:	1e6b      	subs	r3, r5, #1
 802050a:	fb00 4003 	mla	r0, r0, r3, r4
 802050e:	1400      	asrs	r0, r0, #16
 8020510:	f53f af59 	bmi.w	80203c6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8020514:	3901      	subs	r1, #1
 8020516:	4288      	cmp	r0, r1
 8020518:	f6bf af55 	bge.w	80203c6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 802051c:	9920      	ldr	r1, [sp, #128]	@ 0x80
 802051e:	fb01 6303 	mla	r3, r1, r3, r6
 8020522:	141b      	asrs	r3, r3, #16
 8020524:	f53f af4f 	bmi.w	80203c6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8020528:	3a01      	subs	r2, #1
 802052a:	4293      	cmp	r3, r2
 802052c:	f6bf af4b 	bge.w	80203c6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8020530:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8020534:	9308      	str	r3, [sp, #32]
 8020536:	46a8      	mov	r8, r5
 8020538:	46ce      	mov	lr, r9
 802053a:	f1b8 0f00 	cmp.w	r8, #0
 802053e:	f300 80b5 	bgt.w	80206ac <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8020542:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8020546:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 802054a:	9b07      	ldr	r3, [sp, #28]
 802054c:	2b00      	cmp	r3, #0
 802054e:	f340 817d 	ble.w	802084c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 8020552:	ee30 0a04 	vadd.f32	s0, s0, s8
 8020556:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 802055a:	eec7 7a00 	vdiv.f32	s15, s14, s0
 802055e:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8020560:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8020564:	ee31 1a05 	vadd.f32	s2, s2, s10
 8020568:	ee20 7aa7 	vmul.f32	s14, s1, s15
 802056c:	eef0 6a62 	vmov.f32	s13, s5
 8020570:	ee61 7a27 	vmul.f32	s15, s2, s15
 8020574:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8020578:	ee77 2a62 	vsub.f32	s5, s14, s5
 802057c:	ee16 4a90 	vmov	r4, s13
 8020580:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8020584:	eef0 6a43 	vmov.f32	s13, s6
 8020588:	ee37 3ac3 	vsub.f32	s6, s15, s6
 802058c:	ee12 2a90 	vmov	r2, s5
 8020590:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8020594:	fb92 f3f3 	sdiv	r3, r2, r3
 8020598:	ee13 2a10 	vmov	r2, s6
 802059c:	931f      	str	r3, [sp, #124]	@ 0x7c
 802059e:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 80205a0:	fb92 f3f3 	sdiv	r3, r2, r3
 80205a4:	9320      	str	r3, [sp, #128]	@ 0x80
 80205a6:	9b07      	ldr	r3, [sp, #28]
 80205a8:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 80205aa:	3b01      	subs	r3, #1
 80205ac:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80205b0:	9307      	str	r3, [sp, #28]
 80205b2:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 80205b4:	ee16 6a90 	vmov	r6, s13
 80205b8:	bf14      	ite	ne
 80205ba:	461d      	movne	r5, r3
 80205bc:	4615      	moveq	r5, r2
 80205be:	eeb0 3a67 	vmov.f32	s6, s15
 80205c2:	eef0 2a47 	vmov.f32	s5, s14
 80205c6:	e6d3      	b.n	8020370 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 80205c8:	2900      	cmp	r1, #0
 80205ca:	f43f af5c 	beq.w	8020486 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 80205ce:	eb0a 0003 	add.w	r0, sl, r3
 80205d2:	0843      	lsrs	r3, r0, #1
 80205d4:	07c0      	lsls	r0, r0, #31
 80205d6:	5cfb      	ldrb	r3, [r7, r3]
 80205d8:	bf54      	ite	pl
 80205da:	f003 030f 	andpl.w	r3, r3, #15
 80205de:	111b      	asrmi	r3, r3, #4
 80205e0:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 80205e4:	b2db      	uxtb	r3, r3
 80205e6:	930a      	str	r3, [sp, #40]	@ 0x28
 80205e8:	e74d      	b.n	8020486 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 80205ea:	2b00      	cmp	r3, #0
 80205ec:	f43f af78 	beq.w	80204e0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 80205f0:	4a73      	ldr	r2, [pc, #460]	@ (80207c0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 80205f2:	f8b8 c000 	ldrh.w	ip, [r8]
 80205f6:	6810      	ldr	r0, [r2, #0]
 80205f8:	fa1f fe83 	uxth.w	lr, r3
 80205fc:	ea4f 212c 	mov.w	r1, ip, asr #8
 8020600:	f3c0 4207 	ubfx	r2, r0, #16, #8
 8020604:	43db      	mvns	r3, r3
 8020606:	b2db      	uxtb	r3, r3
 8020608:	fb12 f20e 	smulbb	r2, r2, lr
 802060c:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 8020610:	fb01 2103 	mla	r1, r1, r3, r2
 8020614:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 8020618:	ea4f 02ec 	mov.w	r2, ip, asr #3
 802061c:	b2c0      	uxtb	r0, r0
 802061e:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8020622:	fb1b fb0e 	smulbb	fp, fp, lr
 8020626:	b289      	uxth	r1, r1
 8020628:	fb10 fe0e 	smulbb	lr, r0, lr
 802062c:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 8020630:	fa5f fc8c 	uxtb.w	ip, ip
 8020634:	fb02 b203 	mla	r2, r2, r3, fp
 8020638:	1c48      	adds	r0, r1, #1
 802063a:	fb0c e303 	mla	r3, ip, r3, lr
 802063e:	b292      	uxth	r2, r2
 8020640:	b29b      	uxth	r3, r3
 8020642:	eb00 2111 	add.w	r1, r0, r1, lsr #8
 8020646:	f401 4078 	and.w	r0, r1, #63488	@ 0xf800
 802064a:	f102 0b01 	add.w	fp, r2, #1
 802064e:	1c59      	adds	r1, r3, #1
 8020650:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 8020654:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 8020658:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 802065c:	0952      	lsrs	r2, r2, #5
 802065e:	4301      	orrs	r1, r0
 8020660:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8020664:	4311      	orrs	r1, r2
 8020666:	f8a8 1000 	strh.w	r1, [r8]
 802066a:	e739      	b.n	80204e0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 802066c:	f113 0b01 	adds.w	fp, r3, #1
 8020670:	f53f af36 	bmi.w	80204e0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8020674:	45dc      	cmp	ip, fp
 8020676:	f6ff af33 	blt.w	80204e0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 802067a:	f110 0b01 	adds.w	fp, r0, #1
 802067e:	f53f af2f 	bmi.w	80204e0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8020682:	45de      	cmp	lr, fp
 8020684:	f6ff af2c 	blt.w	80204e0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8020688:	9a08      	ldr	r2, [sp, #32]
 802068a:	9302      	str	r3, [sp, #8]
 802068c:	fa0f f38e 	sxth.w	r3, lr
 8020690:	9301      	str	r3, [sp, #4]
 8020692:	fa0f f38c 	sxth.w	r3, ip
 8020696:	e9cd 0203 	strd	r0, r2, [sp, #12]
 802069a:	9105      	str	r1, [sp, #20]
 802069c:	9300      	str	r3, [sp, #0]
 802069e:	463a      	mov	r2, r7
 80206a0:	4653      	mov	r3, sl
 80206a2:	4641      	mov	r1, r8
 80206a4:	9811      	ldr	r0, [sp, #68]	@ 0x44
 80206a6:	f7ff fd73 	bl	8020190 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>
 80206aa:	e719      	b.n	80204e0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 80206ac:	9906      	ldr	r1, [sp, #24]
 80206ae:	1422      	asrs	r2, r4, #16
 80206b0:	1433      	asrs	r3, r6, #16
 80206b2:	fb01 2303 	mla	r3, r1, r3, r2
 80206b6:	085a      	lsrs	r2, r3, #1
 80206b8:	07d9      	lsls	r1, r3, #31
 80206ba:	5cba      	ldrb	r2, [r7, r2]
 80206bc:	bf54      	ite	pl
 80206be:	f002 020f 	andpl.w	r2, r2, #15
 80206c2:	1112      	asrmi	r2, r2, #4
 80206c4:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 80206c8:	f3c4 3003 	ubfx	r0, r4, #12, #4
 80206cc:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 80206d0:	b2d2      	uxtb	r2, r2
 80206d2:	2800      	cmp	r0, #0
 80206d4:	d062      	beq.n	802079c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x460>
 80206d6:	f103 0a01 	add.w	sl, r3, #1
 80206da:	ea4f 015a 	mov.w	r1, sl, lsr #1
 80206de:	f01a 0f01 	tst.w	sl, #1
 80206e2:	5c79      	ldrb	r1, [r7, r1]
 80206e4:	bf0c      	ite	eq
 80206e6:	f001 010f 	andeq.w	r1, r1, #15
 80206ea:	1109      	asrne	r1, r1, #4
 80206ec:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 80206f0:	b2c9      	uxtb	r1, r1
 80206f2:	910f      	str	r1, [sp, #60]	@ 0x3c
 80206f4:	f1bc 0f00 	cmp.w	ip, #0
 80206f8:	d019      	beq.n	802072e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 80206fa:	9908      	ldr	r1, [sp, #32]
 80206fc:	440b      	add	r3, r1
 80206fe:	0859      	lsrs	r1, r3, #1
 8020700:	f013 0f01 	tst.w	r3, #1
 8020704:	5c79      	ldrb	r1, [r7, r1]
 8020706:	bf0c      	ite	eq
 8020708:	f001 010f 	andeq.w	r1, r1, #15
 802070c:	1109      	asrne	r1, r1, #4
 802070e:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8020712:	b2c9      	uxtb	r1, r1
 8020714:	3301      	adds	r3, #1
 8020716:	910b      	str	r1, [sp, #44]	@ 0x2c
 8020718:	0859      	lsrs	r1, r3, #1
 802071a:	07db      	lsls	r3, r3, #31
 802071c:	5c79      	ldrb	r1, [r7, r1]
 802071e:	bf54      	ite	pl
 8020720:	f001 010f 	andpl.w	r1, r1, #15
 8020724:	1109      	asrmi	r1, r1, #4
 8020726:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 802072a:	b2c9      	uxtb	r1, r1
 802072c:	9110      	str	r1, [sp, #64]	@ 0x40
 802072e:	b280      	uxth	r0, r0
 8020730:	fa1f fc8c 	uxth.w	ip, ip
 8020734:	fb00 f30c 	mul.w	r3, r0, ip
 8020738:	ebc3 1c0c 	rsb	ip, r3, ip, lsl #4
 802073c:	0100      	lsls	r0, r0, #4
 802073e:	fa1f fc8c 	uxth.w	ip, ip
 8020742:	f5c0 7180 	rsb	r1, r0, #256	@ 0x100
 8020746:	eba1 010c 	sub.w	r1, r1, ip
 802074a:	fa1f fa81 	uxth.w	sl, r1
 802074e:	1ac0      	subs	r0, r0, r3
 8020750:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 8020752:	b280      	uxth	r0, r0
 8020754:	4348      	muls	r0, r1
 8020756:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8020758:	fb02 020a 	mla	r2, r2, sl, r0
 802075c:	fb0c 2c01 	mla	ip, ip, r1, r2
 8020760:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8020762:	fb03 c302 	mla	r3, r3, r2, ip
 8020766:	f3c3 2307 	ubfx	r3, r3, #8, #8
 802076a:	2bff      	cmp	r3, #255	@ 0xff
 802076c:	d12c      	bne.n	80207c8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48c>
 802076e:	4b14      	ldr	r3, [pc, #80]	@ (80207c0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 8020770:	681a      	ldr	r2, [r3, #0]
 8020772:	4b14      	ldr	r3, [pc, #80]	@ (80207c4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 8020774:	0951      	lsrs	r1, r2, #5
 8020776:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 802077a:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 802077e:	430b      	orrs	r3, r1
 8020780:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8020784:	4313      	orrs	r3, r2
 8020786:	f8ae 3000 	strh.w	r3, [lr]
 802078a:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 802078c:	441c      	add	r4, r3
 802078e:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8020790:	f10e 0e02 	add.w	lr, lr, #2
 8020794:	441e      	add	r6, r3
 8020796:	f108 38ff 	add.w	r8, r8, #4294967295
 802079a:	e6ce      	b.n	802053a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 802079c:	f1bc 0f00 	cmp.w	ip, #0
 80207a0:	d0c5      	beq.n	802072e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 80207a2:	9908      	ldr	r1, [sp, #32]
 80207a4:	440b      	add	r3, r1
 80207a6:	0859      	lsrs	r1, r3, #1
 80207a8:	07db      	lsls	r3, r3, #31
 80207aa:	5c79      	ldrb	r1, [r7, r1]
 80207ac:	bf54      	ite	pl
 80207ae:	f001 010f 	andpl.w	r1, r1, #15
 80207b2:	1109      	asrmi	r1, r1, #4
 80207b4:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 80207b8:	b2c9      	uxtb	r1, r1
 80207ba:	910b      	str	r1, [sp, #44]	@ 0x2c
 80207bc:	e7b7      	b.n	802072e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 80207be:	bf00      	nop
 80207c0:	20014054 	.word	0x20014054
 80207c4:	fffff800 	.word	0xfffff800
 80207c8:	2b00      	cmp	r3, #0
 80207ca:	d0de      	beq.n	802078a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 80207cc:	4a21      	ldr	r2, [pc, #132]	@ (8020854 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>)
 80207ce:	f8be c000 	ldrh.w	ip, [lr]
 80207d2:	6810      	ldr	r0, [r2, #0]
 80207d4:	fa1f fa83 	uxth.w	sl, r3
 80207d8:	ea4f 212c 	mov.w	r1, ip, asr #8
 80207dc:	f3c0 4207 	ubfx	r2, r0, #16, #8
 80207e0:	43db      	mvns	r3, r3
 80207e2:	b2db      	uxtb	r3, r3
 80207e4:	fb12 f20a 	smulbb	r2, r2, sl
 80207e8:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 80207ec:	fb01 2103 	mla	r1, r1, r3, r2
 80207f0:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 80207f4:	ea4f 02ec 	mov.w	r2, ip, asr #3
 80207f8:	b2c0      	uxtb	r0, r0
 80207fa:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80207fe:	fa5f fc8c 	uxtb.w	ip, ip
 8020802:	fb10 f00a 	smulbb	r0, r0, sl
 8020806:	fb0c 0003 	mla	r0, ip, r3, r0
 802080a:	b289      	uxth	r1, r1
 802080c:	fb1b fb0a 	smulbb	fp, fp, sl
 8020810:	b280      	uxth	r0, r0
 8020812:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 8020816:	fb02 b203 	mla	r2, r2, r3, fp
 802081a:	1c4b      	adds	r3, r1, #1
 802081c:	f100 0b01 	add.w	fp, r0, #1
 8020820:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8020824:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
 8020828:	b292      	uxth	r2, r2
 802082a:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
 802082e:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
 8020832:	ea4b 0101 	orr.w	r1, fp, r1
 8020836:	f102 0b01 	add.w	fp, r2, #1
 802083a:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 802083e:	0952      	lsrs	r2, r2, #5
 8020840:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8020844:	4311      	orrs	r1, r2
 8020846:	f8ae 1000 	strh.w	r1, [lr]
 802084a:	e79e      	b.n	802078a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 802084c:	b013      	add	sp, #76	@ 0x4c
 802084e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8020852:	bf00      	nop
 8020854:	20014054 	.word	0x20014054

08020858 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>:
 8020858:	b570      	push	{r4, r5, r6, lr}
 802085a:	1208      	asrs	r0, r1, #8
 802085c:	b29e      	uxth	r6, r3
 802085e:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 8020862:	1213      	asrs	r3, r2, #8
 8020864:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 8020868:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 802086c:	fb13 f305 	smulbb	r3, r3, r5
 8020870:	fb10 f006 	smulbb	r0, r0, r6
 8020874:	4418      	add	r0, r3
 8020876:	10cc      	asrs	r4, r1, #3
 8020878:	10d3      	asrs	r3, r2, #3
 802087a:	f004 04fc 	and.w	r4, r4, #252	@ 0xfc
 802087e:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 8020882:	fb13 f305 	smulbb	r3, r3, r5
 8020886:	fb14 f406 	smulbb	r4, r4, r6
 802088a:	00c9      	lsls	r1, r1, #3
 802088c:	00d2      	lsls	r2, r2, #3
 802088e:	441c      	add	r4, r3
 8020890:	b2d2      	uxtb	r2, r2
 8020892:	b2cb      	uxtb	r3, r1
 8020894:	fb12 f205 	smulbb	r2, r2, r5
 8020898:	b280      	uxth	r0, r0
 802089a:	fb13 f306 	smulbb	r3, r3, r6
 802089e:	4413      	add	r3, r2
 80208a0:	1c42      	adds	r2, r0, #1
 80208a2:	b29b      	uxth	r3, r3
 80208a4:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 80208a8:	f400 4278 	and.w	r2, r0, #63488	@ 0xf800
 80208ac:	1c58      	adds	r0, r3, #1
 80208ae:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 80208b2:	b2a4      	uxth	r4, r4
 80208b4:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 80208b8:	4310      	orrs	r0, r2
 80208ba:	1c62      	adds	r2, r4, #1
 80208bc:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 80208c0:	0964      	lsrs	r4, r4, #5
 80208c2:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 80208c6:	4320      	orrs	r0, r4
 80208c8:	bd70      	pop	{r4, r5, r6, pc}
	...

080208cc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 80208cc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80208d0:	b08f      	sub	sp, #60	@ 0x3c
 80208d2:	461c      	mov	r4, r3
 80208d4:	f89d 7064 	ldrb.w	r7, [sp, #100]	@ 0x64
 80208d8:	9004      	str	r0, [sp, #16]
 80208da:	460d      	mov	r5, r1
 80208dc:	4616      	mov	r6, r2
 80208de:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 80208e0:	2f00      	cmp	r7, #0
 80208e2:	f000 80f6 	beq.w	8020ad2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x206>
 80208e6:	6820      	ldr	r0, [r4, #0]
 80208e8:	6861      	ldr	r1, [r4, #4]
 80208ea:	aa0a      	add	r2, sp, #40	@ 0x28
 80208ec:	c203      	stmia	r2!, {r0, r1}
 80208ee:	6818      	ldr	r0, [r3, #0]
 80208f0:	6859      	ldr	r1, [r3, #4]
 80208f2:	aa0c      	add	r2, sp, #48	@ 0x30
 80208f4:	c203      	stmia	r2!, {r0, r1}
 80208f6:	a80a      	add	r0, sp, #40	@ 0x28
 80208f8:	f7ee fdda 	bl	800f4b0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80208fc:	4621      	mov	r1, r4
 80208fe:	a80c      	add	r0, sp, #48	@ 0x30
 8020900:	f7ee fdfe 	bl	800f500 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8020904:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	@ 0x30
 8020908:	f9bd b036 	ldrsh.w	fp, [sp, #54]	@ 0x36
 802090c:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	@ 0x34
 8020910:	f002 0301 	and.w	r3, r2, #1
 8020914:	9306      	str	r3, [sp, #24]
 8020916:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 802091a:	f003 0101 	and.w	r1, r3, #1
 802091e:	9105      	str	r1, [sp, #20]
 8020920:	9805      	ldr	r0, [sp, #20]
 8020922:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	@ 0x32
 8020926:	4403      	add	r3, r0
 8020928:	fb01 2303 	mla	r3, r1, r3, r2
 802092c:	f04f 0802 	mov.w	r8, #2
 8020930:	fb93 f3f8 	sdiv	r3, r3, r8
 8020934:	441d      	add	r5, r3
 8020936:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 802093a:	441a      	add	r2, r3
 802093c:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 8020940:	f8ad 2030 	strh.w	r2, [sp, #48]	@ 0x30
 8020944:	4419      	add	r1, r3
 8020946:	4b64      	ldr	r3, [pc, #400]	@ (8020ad8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
 8020948:	f8ad 1032 	strh.w	r1, [sp, #50]	@ 0x32
 802094c:	6818      	ldr	r0, [r3, #0]
 802094e:	6803      	ldr	r3, [r0, #0]
 8020950:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8020952:	4798      	blx	r3
 8020954:	4a61      	ldr	r2, [pc, #388]	@ (8020adc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x210>)
 8020956:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	@ 0x32
 802095a:	8813      	ldrh	r3, [r2, #0]
 802095c:	f9bd a030 	ldrsh.w	sl, [sp, #48]	@ 0x30
 8020960:	2fff      	cmp	r7, #255	@ 0xff
 8020962:	fb03 a404 	mla	r4, r3, r4, sl
 8020966:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 802096a:	f106 0604 	add.w	r6, r6, #4
 802096e:	4611      	mov	r1, r2
 8020970:	fb03 fb0b 	mul.w	fp, r3, fp
 8020974:	d06b      	beq.n	8020a4e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x182>
 8020976:	f1c7 03ff 	rsb	r3, r7, #255	@ 0xff
 802097a:	9303      	str	r3, [sp, #12]
 802097c:	eb04 034b 	add.w	r3, r4, fp, lsl #1
 8020980:	e9cd 3207 	strd	r3, r2, [sp, #28]
 8020984:	f8cd 8024 	str.w	r8, [sp, #36]	@ 0x24
 8020988:	9b07      	ldr	r3, [sp, #28]
 802098a:	42a3      	cmp	r3, r4
 802098c:	f240 809c 	bls.w	8020ac8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
 8020990:	9b06      	ldr	r3, [sp, #24]
 8020992:	2b00      	cmp	r3, #0
 8020994:	d039      	beq.n	8020a0a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13e>
 8020996:	782b      	ldrb	r3, [r5, #0]
 8020998:	8822      	ldrh	r2, [r4, #0]
 802099a:	9804      	ldr	r0, [sp, #16]
 802099c:	f003 030f 	and.w	r3, r3, #15
 80209a0:	f105 0801 	add.w	r8, r5, #1
 80209a4:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 80209a8:	9b03      	ldr	r3, [sp, #12]
 80209aa:	9300      	str	r3, [sp, #0]
 80209ac:	463b      	mov	r3, r7
 80209ae:	f7ff ff53 	bl	8020858 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 80209b2:	f824 0b02 	strh.w	r0, [r4], #2
 80209b6:	f109 3bff 	add.w	fp, r9, #4294967295
 80209ba:	f1bb 0f01 	cmp.w	fp, #1
 80209be:	46a2      	mov	sl, r4
 80209c0:	f104 0404 	add.w	r4, r4, #4
 80209c4:	dd24      	ble.n	8020a10 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x144>
 80209c6:	f898 3000 	ldrb.w	r3, [r8]
 80209ca:	f834 2c04 	ldrh.w	r2, [r4, #-4]
 80209ce:	9804      	ldr	r0, [sp, #16]
 80209d0:	091b      	lsrs	r3, r3, #4
 80209d2:	f1ab 0b02 	sub.w	fp, fp, #2
 80209d6:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 80209da:	9b03      	ldr	r3, [sp, #12]
 80209dc:	9300      	str	r3, [sp, #0]
 80209de:	463b      	mov	r3, r7
 80209e0:	f7ff ff3a 	bl	8020858 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 80209e4:	f824 0c04 	strh.w	r0, [r4, #-4]
 80209e8:	f818 3b01 	ldrb.w	r3, [r8], #1
 80209ec:	f834 2c02 	ldrh.w	r2, [r4, #-2]
 80209f0:	9804      	ldr	r0, [sp, #16]
 80209f2:	f003 030f 	and.w	r3, r3, #15
 80209f6:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 80209fa:	9b03      	ldr	r3, [sp, #12]
 80209fc:	9300      	str	r3, [sp, #0]
 80209fe:	463b      	mov	r3, r7
 8020a00:	f7ff ff2a 	bl	8020858 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 8020a04:	f824 0c02 	strh.w	r0, [r4, #-2]
 8020a08:	e7d7      	b.n	80209ba <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xee>
 8020a0a:	46a8      	mov	r8, r5
 8020a0c:	46cb      	mov	fp, r9
 8020a0e:	e7d4      	b.n	80209ba <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xee>
 8020a10:	d10e      	bne.n	8020a30 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x164>
 8020a12:	f898 3000 	ldrb.w	r3, [r8]
 8020a16:	f8ba 2000 	ldrh.w	r2, [sl]
 8020a1a:	9804      	ldr	r0, [sp, #16]
 8020a1c:	091b      	lsrs	r3, r3, #4
 8020a1e:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 8020a22:	9b03      	ldr	r3, [sp, #12]
 8020a24:	9300      	str	r3, [sp, #0]
 8020a26:	463b      	mov	r3, r7
 8020a28:	f7ff ff16 	bl	8020858 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 8020a2c:	f82a 0b02 	strh.w	r0, [sl], #2
 8020a30:	9b08      	ldr	r3, [sp, #32]
 8020a32:	9a05      	ldr	r2, [sp, #20]
 8020a34:	881c      	ldrh	r4, [r3, #0]
 8020a36:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 8020a3a:	eba4 0409 	sub.w	r4, r4, r9
 8020a3e:	4413      	add	r3, r2
 8020a40:	eb0a 0444 	add.w	r4, sl, r4, lsl #1
 8020a44:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8020a46:	fb93 f3f2 	sdiv	r3, r3, r2
 8020a4a:	441d      	add	r5, r3
 8020a4c:	e79c      	b.n	8020988 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xbc>
 8020a4e:	eb04 0b4b 	add.w	fp, r4, fp, lsl #1
 8020a52:	45a3      	cmp	fp, r4
 8020a54:	d938      	bls.n	8020ac8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
 8020a56:	9b06      	ldr	r3, [sp, #24]
 8020a58:	b1f3      	cbz	r3, 8020a98 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1cc>
 8020a5a:	782b      	ldrb	r3, [r5, #0]
 8020a5c:	f003 030f 	and.w	r3, r3, #15
 8020a60:	1c6a      	adds	r2, r5, #1
 8020a62:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8020a66:	8023      	strh	r3, [r4, #0]
 8020a68:	f109 30ff 	add.w	r0, r9, #4294967295
 8020a6c:	3402      	adds	r4, #2
 8020a6e:	2801      	cmp	r0, #1
 8020a70:	4623      	mov	r3, r4
 8020a72:	f104 0404 	add.w	r4, r4, #4
 8020a76:	dd12      	ble.n	8020a9e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1d2>
 8020a78:	7813      	ldrb	r3, [r2, #0]
 8020a7a:	091b      	lsrs	r3, r3, #4
 8020a7c:	3802      	subs	r0, #2
 8020a7e:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8020a82:	f824 3c04 	strh.w	r3, [r4, #-4]
 8020a86:	f812 3b01 	ldrb.w	r3, [r2], #1
 8020a8a:	f003 030f 	and.w	r3, r3, #15
 8020a8e:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8020a92:	f824 3c02 	strh.w	r3, [r4, #-2]
 8020a96:	e7ea      	b.n	8020a6e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
 8020a98:	462a      	mov	r2, r5
 8020a9a:	4648      	mov	r0, r9
 8020a9c:	e7e7      	b.n	8020a6e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
 8020a9e:	d106      	bne.n	8020aae <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e2>
 8020aa0:	7812      	ldrb	r2, [r2, #0]
 8020aa2:	0912      	lsrs	r2, r2, #4
 8020aa4:	3302      	adds	r3, #2
 8020aa6:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 8020aaa:	f823 2c02 	strh.w	r2, [r3, #-2]
 8020aae:	880c      	ldrh	r4, [r1, #0]
 8020ab0:	9a05      	ldr	r2, [sp, #20]
 8020ab2:	eba4 0409 	sub.w	r4, r4, r9
 8020ab6:	eb03 0444 	add.w	r4, r3, r4, lsl #1
 8020aba:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 8020abe:	4413      	add	r3, r2
 8020ac0:	fb93 f3f8 	sdiv	r3, r3, r8
 8020ac4:	441d      	add	r5, r3
 8020ac6:	e7c4      	b.n	8020a52 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x186>
 8020ac8:	4b03      	ldr	r3, [pc, #12]	@ (8020ad8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
 8020aca:	6818      	ldr	r0, [r3, #0]
 8020acc:	6803      	ldr	r3, [r0, #0]
 8020ace:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8020ad0:	4798      	blx	r3
 8020ad2:	b00f      	add	sp, #60	@ 0x3c
 8020ad4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8020ad8:	20014044 	.word	0x20014044
 8020adc:	2001403c 	.word	0x2001403c

08020ae0 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>:
 8020ae0:	b5f0      	push	{r4, r5, r6, r7, lr}
 8020ae2:	f89d 5014 	ldrb.w	r5, [sp, #20]
 8020ae6:	2dff      	cmp	r5, #255	@ 0xff
 8020ae8:	ea4f 2711 	mov.w	r7, r1, lsr #8
 8020aec:	d10c      	bne.n	8020b08 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x28>
 8020aee:	2bff      	cmp	r3, #255	@ 0xff
 8020af0:	d10a      	bne.n	8020b08 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x28>
 8020af2:	4b25      	ldr	r3, [pc, #148]	@ (8020b88 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0xa8>)
 8020af4:	0948      	lsrs	r0, r1, #5
 8020af6:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8020afa:	403b      	ands	r3, r7
 8020afc:	4318      	orrs	r0, r3
 8020afe:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8020b02:	4308      	orrs	r0, r1
 8020b04:	b280      	uxth	r0, r0
 8020b06:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8020b08:	fb15 f503 	smulbb	r5, r5, r3
 8020b0c:	b2ab      	uxth	r3, r5
 8020b0e:	1c5d      	adds	r5, r3, #1
 8020b10:	eb05 2513 	add.w	r5, r5, r3, lsr #8
 8020b14:	1214      	asrs	r4, r2, #8
 8020b16:	f3c5 2507 	ubfx	r5, r5, #8, #8
 8020b1a:	fa1f fc85 	uxth.w	ip, r5
 8020b1e:	10d6      	asrs	r6, r2, #3
 8020b20:	00d0      	lsls	r0, r2, #3
 8020b22:	43ed      	mvns	r5, r5
 8020b24:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 8020b28:	f3c1 4207 	ubfx	r2, r1, #16, #8
 8020b2c:	b2eb      	uxtb	r3, r5
 8020b2e:	b2c0      	uxtb	r0, r0
 8020b30:	fb12 f20c 	smulbb	r2, r2, ip
 8020b34:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8020b38:	fb04 2403 	mla	r4, r4, r3, r2
 8020b3c:	ea40 1250 	orr.w	r2, r0, r0, lsr #5
 8020b40:	b2c8      	uxtb	r0, r1
 8020b42:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8020b46:	b2fd      	uxtb	r5, r7
 8020b48:	fb10 f00c 	smulbb	r0, r0, ip
 8020b4c:	b2a4      	uxth	r4, r4
 8020b4e:	fb02 0003 	mla	r0, r2, r3, r0
 8020b52:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 8020b56:	fb15 f50c 	smulbb	r5, r5, ip
 8020b5a:	fb06 5503 	mla	r5, r6, r3, r5
 8020b5e:	b283      	uxth	r3, r0
 8020b60:	1c60      	adds	r0, r4, #1
 8020b62:	b2ad      	uxth	r5, r5
 8020b64:	eb00 2414 	add.w	r4, r0, r4, lsr #8
 8020b68:	1c58      	adds	r0, r3, #1
 8020b6a:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8020b6e:	1c6b      	adds	r3, r5, #1
 8020b70:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8020b74:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
 8020b78:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8020b7c:	096d      	lsrs	r5, r5, #5
 8020b7e:	4320      	orrs	r0, r4
 8020b80:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8020b84:	4328      	orrs	r0, r5
 8020b86:	e7be      	b.n	8020b06 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x26>
 8020b88:	00fff800 	.word	0x00fff800

08020b8c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 8020b8c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020b90:	461c      	mov	r4, r3
 8020b92:	b08d      	sub	sp, #52	@ 0x34
 8020b94:	460d      	mov	r5, r1
 8020b96:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 8020b98:	6861      	ldr	r1, [r4, #4]
 8020b9a:	f89d 905c 	ldrb.w	r9, [sp, #92]	@ 0x5c
 8020b9e:	4680      	mov	r8, r0
 8020ba0:	6820      	ldr	r0, [r4, #0]
 8020ba2:	4616      	mov	r6, r2
 8020ba4:	aa08      	add	r2, sp, #32
 8020ba6:	c203      	stmia	r2!, {r0, r1}
 8020ba8:	6818      	ldr	r0, [r3, #0]
 8020baa:	6859      	ldr	r1, [r3, #4]
 8020bac:	aa0a      	add	r2, sp, #40	@ 0x28
 8020bae:	c203      	stmia	r2!, {r0, r1}
 8020bb0:	a808      	add	r0, sp, #32
 8020bb2:	f7ee fc7d 	bl	800f4b0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8020bb6:	4621      	mov	r1, r4
 8020bb8:	a80a      	add	r0, sp, #40	@ 0x28
 8020bba:	f7ee fca1 	bl	800f500 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8020bbe:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	@ 0x28
 8020bc2:	f9bd 702e 	ldrsh.w	r7, [sp, #46]	@ 0x2e
 8020bc6:	f9bd b02c 	ldrsh.w	fp, [sp, #44]	@ 0x2c
 8020bca:	f002 0301 	and.w	r3, r2, #1
 8020bce:	9303      	str	r3, [sp, #12]
 8020bd0:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	@ 0x24
 8020bd4:	f003 0101 	and.w	r1, r3, #1
 8020bd8:	9102      	str	r1, [sp, #8]
 8020bda:	9802      	ldr	r0, [sp, #8]
 8020bdc:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	@ 0x2a
 8020be0:	4403      	add	r3, r0
 8020be2:	fb01 2303 	mla	r3, r1, r3, r2
 8020be6:	f04f 0a02 	mov.w	sl, #2
 8020bea:	fb93 f3fa 	sdiv	r3, r3, sl
 8020bee:	441d      	add	r5, r3
 8020bf0:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 8020bf4:	441a      	add	r2, r3
 8020bf6:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
 8020bfa:	f8bd 3022 	ldrh.w	r3, [sp, #34]	@ 0x22
 8020bfe:	4a3f      	ldr	r2, [pc, #252]	@ (8020cfc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x170>)
 8020c00:	9205      	str	r2, [sp, #20]
 8020c02:	4419      	add	r1, r3
 8020c04:	6810      	ldr	r0, [r2, #0]
 8020c06:	f8ad 102a 	strh.w	r1, [sp, #42]	@ 0x2a
 8020c0a:	6803      	ldr	r3, [r0, #0]
 8020c0c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8020c0e:	4798      	blx	r3
 8020c10:	4b3b      	ldr	r3, [pc, #236]	@ (8020d00 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x174>)
 8020c12:	f9bd 402a 	ldrsh.w	r4, [sp, #42]	@ 0x2a
 8020c16:	8819      	ldrh	r1, [r3, #0]
 8020c18:	f9bd c028 	ldrsh.w	ip, [sp, #40]	@ 0x28
 8020c1c:	fb01 c404 	mla	r4, r1, r4, ip
 8020c20:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8020c24:	434f      	muls	r7, r1
 8020c26:	e9cd 3a06 	strd	r3, sl, [sp, #24]
 8020c2a:	eb04 0247 	add.w	r2, r4, r7, lsl #1
 8020c2e:	3604      	adds	r6, #4
 8020c30:	9204      	str	r2, [sp, #16]
 8020c32:	9b04      	ldr	r3, [sp, #16]
 8020c34:	429c      	cmp	r4, r3
 8020c36:	d258      	bcs.n	8020cea <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x15e>
 8020c38:	9b03      	ldr	r3, [sp, #12]
 8020c3a:	2b00      	cmp	r3, #0
 8020c3c:	d034      	beq.n	8020ca8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x11c>
 8020c3e:	782b      	ldrb	r3, [r5, #0]
 8020c40:	f003 030f 	and.w	r3, r3, #15
 8020c44:	1c6f      	adds	r7, r5, #1
 8020c46:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 8020c4a:	0e0b      	lsrs	r3, r1, #24
 8020c4c:	d006      	beq.n	8020c5c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd0>
 8020c4e:	8822      	ldrh	r2, [r4, #0]
 8020c50:	9300      	str	r3, [sp, #0]
 8020c52:	4640      	mov	r0, r8
 8020c54:	464b      	mov	r3, r9
 8020c56:	f7ff ff43 	bl	8020ae0 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 8020c5a:	8020      	strh	r0, [r4, #0]
 8020c5c:	3402      	adds	r4, #2
 8020c5e:	f10b 3aff 	add.w	sl, fp, #4294967295
 8020c62:	f1ba 0f01 	cmp.w	sl, #1
 8020c66:	dd22      	ble.n	8020cae <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x122>
 8020c68:	783b      	ldrb	r3, [r7, #0]
 8020c6a:	091b      	lsrs	r3, r3, #4
 8020c6c:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 8020c70:	0e0b      	lsrs	r3, r1, #24
 8020c72:	d006      	beq.n	8020c82 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xf6>
 8020c74:	8822      	ldrh	r2, [r4, #0]
 8020c76:	9300      	str	r3, [sp, #0]
 8020c78:	4640      	mov	r0, r8
 8020c7a:	464b      	mov	r3, r9
 8020c7c:	f7ff ff30 	bl	8020ae0 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 8020c80:	8020      	strh	r0, [r4, #0]
 8020c82:	f817 3b01 	ldrb.w	r3, [r7], #1
 8020c86:	f003 030f 	and.w	r3, r3, #15
 8020c8a:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 8020c8e:	0e0b      	lsrs	r3, r1, #24
 8020c90:	d006      	beq.n	8020ca0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x114>
 8020c92:	8862      	ldrh	r2, [r4, #2]
 8020c94:	9300      	str	r3, [sp, #0]
 8020c96:	4640      	mov	r0, r8
 8020c98:	464b      	mov	r3, r9
 8020c9a:	f7ff ff21 	bl	8020ae0 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 8020c9e:	8060      	strh	r0, [r4, #2]
 8020ca0:	3404      	adds	r4, #4
 8020ca2:	f1aa 0a02 	sub.w	sl, sl, #2
 8020ca6:	e7dc      	b.n	8020c62 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
 8020ca8:	462f      	mov	r7, r5
 8020caa:	46da      	mov	sl, fp
 8020cac:	e7d9      	b.n	8020c62 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
 8020cae:	d10d      	bne.n	8020ccc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x140>
 8020cb0:	783b      	ldrb	r3, [r7, #0]
 8020cb2:	091b      	lsrs	r3, r3, #4
 8020cb4:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 8020cb8:	0e0b      	lsrs	r3, r1, #24
 8020cba:	d006      	beq.n	8020cca <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x13e>
 8020cbc:	8822      	ldrh	r2, [r4, #0]
 8020cbe:	9300      	str	r3, [sp, #0]
 8020cc0:	4640      	mov	r0, r8
 8020cc2:	464b      	mov	r3, r9
 8020cc4:	f7ff ff0c 	bl	8020ae0 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 8020cc8:	8020      	strh	r0, [r4, #0]
 8020cca:	3402      	adds	r4, #2
 8020ccc:	9b06      	ldr	r3, [sp, #24]
 8020cce:	9a02      	ldr	r2, [sp, #8]
 8020cd0:	881b      	ldrh	r3, [r3, #0]
 8020cd2:	eba3 030b 	sub.w	r3, r3, fp
 8020cd6:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8020cda:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	@ 0x24
 8020cde:	4413      	add	r3, r2
 8020ce0:	9a07      	ldr	r2, [sp, #28]
 8020ce2:	fb93 f3f2 	sdiv	r3, r3, r2
 8020ce6:	441d      	add	r5, r3
 8020ce8:	e7a3      	b.n	8020c32 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xa6>
 8020cea:	9b05      	ldr	r3, [sp, #20]
 8020cec:	6818      	ldr	r0, [r3, #0]
 8020cee:	6803      	ldr	r3, [r0, #0]
 8020cf0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8020cf2:	4798      	blx	r3
 8020cf4:	b00d      	add	sp, #52	@ 0x34
 8020cf6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8020cfa:	bf00      	nop
 8020cfc:	20014044 	.word	0x20014044
 8020d00:	2001403c 	.word	0x2001403c

08020d04 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>:
 8020d04:	b570      	push	{r4, r5, r6, lr}
 8020d06:	1214      	asrs	r4, r2, #8
 8020d08:	788d      	ldrb	r5, [r1, #2]
 8020d0a:	f89d 6010 	ldrb.w	r6, [sp, #16]
 8020d0e:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 8020d12:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8020d16:	fb15 f503 	smulbb	r5, r5, r3
 8020d1a:	fb04 5506 	mla	r5, r4, r6, r5
 8020d1e:	10d0      	asrs	r0, r2, #3
 8020d20:	784c      	ldrb	r4, [r1, #1]
 8020d22:	7809      	ldrb	r1, [r1, #0]
 8020d24:	00d2      	lsls	r2, r2, #3
 8020d26:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 8020d2a:	b2d2      	uxtb	r2, r2
 8020d2c:	ea40 1090 	orr.w	r0, r0, r0, lsr #6
 8020d30:	fb14 f403 	smulbb	r4, r4, r3
 8020d34:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8020d38:	fb11 f303 	smulbb	r3, r1, r3
 8020d3c:	fb00 4406 	mla	r4, r0, r6, r4
 8020d40:	fb02 3306 	mla	r3, r2, r6, r3
 8020d44:	b2ad      	uxth	r5, r5
 8020d46:	b29b      	uxth	r3, r3
 8020d48:	b2a4      	uxth	r4, r4
 8020d4a:	1c68      	adds	r0, r5, #1
 8020d4c:	eb00 2515 	add.w	r5, r0, r5, lsr #8
 8020d50:	1c62      	adds	r2, r4, #1
 8020d52:	1c58      	adds	r0, r3, #1
 8020d54:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8020d58:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 8020d5c:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 8020d60:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8020d64:	0964      	lsrs	r4, r4, #5
 8020d66:	4328      	orrs	r0, r5
 8020d68:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 8020d6c:	4320      	orrs	r0, r4
 8020d6e:	bd70      	pop	{r4, r5, r6, pc}

08020d70 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 8020d70:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020d74:	b08f      	sub	sp, #60	@ 0x3c
 8020d76:	461c      	mov	r4, r3
 8020d78:	f89d 7064 	ldrb.w	r7, [sp, #100]	@ 0x64
 8020d7c:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 8020d7e:	4682      	mov	sl, r0
 8020d80:	460e      	mov	r6, r1
 8020d82:	4615      	mov	r5, r2
 8020d84:	2f00      	cmp	r7, #0
 8020d86:	f000 8142 	beq.w	802100e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x29e>
 8020d8a:	6820      	ldr	r0, [r4, #0]
 8020d8c:	6861      	ldr	r1, [r4, #4]
 8020d8e:	aa0a      	add	r2, sp, #40	@ 0x28
 8020d90:	c203      	stmia	r2!, {r0, r1}
 8020d92:	6818      	ldr	r0, [r3, #0]
 8020d94:	6859      	ldr	r1, [r3, #4]
 8020d96:	aa0c      	add	r2, sp, #48	@ 0x30
 8020d98:	c203      	stmia	r2!, {r0, r1}
 8020d9a:	a80a      	add	r0, sp, #40	@ 0x28
 8020d9c:	f7ee fb88 	bl	800f4b0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8020da0:	4621      	mov	r1, r4
 8020da2:	a80c      	add	r0, sp, #48	@ 0x30
 8020da4:	f7ee fbac 	bl	800f500 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8020da8:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	@ 0x30
 8020dac:	f9bd b036 	ldrsh.w	fp, [sp, #54]	@ 0x36
 8020db0:	f002 0301 	and.w	r3, r2, #1
 8020db4:	9306      	str	r3, [sp, #24]
 8020db6:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 8020dba:	f003 0101 	and.w	r1, r3, #1
 8020dbe:	9105      	str	r1, [sp, #20]
 8020dc0:	9805      	ldr	r0, [sp, #20]
 8020dc2:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	@ 0x32
 8020dc6:	4403      	add	r3, r0
 8020dc8:	fb01 2303 	mla	r3, r1, r3, r2
 8020dcc:	f04f 0802 	mov.w	r8, #2
 8020dd0:	fb93 f3f8 	sdiv	r3, r3, r8
 8020dd4:	441e      	add	r6, r3
 8020dd6:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 8020dda:	441a      	add	r2, r3
 8020ddc:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 8020de0:	f8ad 2030 	strh.w	r2, [sp, #48]	@ 0x30
 8020de4:	4419      	add	r1, r3
 8020de6:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
 8020dea:	9303      	str	r3, [sp, #12]
 8020dec:	4b89      	ldr	r3, [pc, #548]	@ (8021014 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
 8020dee:	f8ad 1032 	strh.w	r1, [sp, #50]	@ 0x32
 8020df2:	6818      	ldr	r0, [r3, #0]
 8020df4:	6803      	ldr	r3, [r0, #0]
 8020df6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8020df8:	4798      	blx	r3
 8020dfa:	4a87      	ldr	r2, [pc, #540]	@ (8021018 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a8>)
 8020dfc:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	@ 0x32
 8020e00:	8813      	ldrh	r3, [r2, #0]
 8020e02:	f9bd 9030 	ldrsh.w	r9, [sp, #48]	@ 0x30
 8020e06:	2fff      	cmp	r7, #255	@ 0xff
 8020e08:	fb03 9404 	mla	r4, r3, r4, r9
 8020e0c:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8020e10:	f105 0504 	add.w	r5, r5, #4
 8020e14:	4694      	mov	ip, r2
 8020e16:	fb03 f30b 	mul.w	r3, r3, fp
 8020e1a:	d071      	beq.n	8020f00 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x190>
 8020e1c:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8020e20:	43f9      	mvns	r1, r7
 8020e22:	e9cd 3207 	strd	r3, r2, [sp, #28]
 8020e26:	b2c9      	uxtb	r1, r1
 8020e28:	9104      	str	r1, [sp, #16]
 8020e2a:	f8cd 8024 	str.w	r8, [sp, #36]	@ 0x24
 8020e2e:	9b07      	ldr	r3, [sp, #28]
 8020e30:	42a3      	cmp	r3, r4
 8020e32:	f240 80e7 	bls.w	8021004 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x294>
 8020e36:	9b06      	ldr	r3, [sp, #24]
 8020e38:	2b00      	cmp	r3, #0
 8020e3a:	d03d      	beq.n	8020eb8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x148>
 8020e3c:	7831      	ldrb	r1, [r6, #0]
 8020e3e:	9b04      	ldr	r3, [sp, #16]
 8020e40:	8822      	ldrh	r2, [r4, #0]
 8020e42:	9300      	str	r3, [sp, #0]
 8020e44:	f001 010f 	and.w	r1, r1, #15
 8020e48:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8020e4c:	463b      	mov	r3, r7
 8020e4e:	4429      	add	r1, r5
 8020e50:	4650      	mov	r0, sl
 8020e52:	f7ff ff57 	bl	8020d04 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 8020e56:	9b03      	ldr	r3, [sp, #12]
 8020e58:	f824 0b02 	strh.w	r0, [r4], #2
 8020e5c:	f106 0801 	add.w	r8, r6, #1
 8020e60:	f103 3bff 	add.w	fp, r3, #4294967295
 8020e64:	f1bb 0f01 	cmp.w	fp, #1
 8020e68:	46a1      	mov	r9, r4
 8020e6a:	f104 0404 	add.w	r4, r4, #4
 8020e6e:	dd27      	ble.n	8020ec0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x150>
 8020e70:	f898 1000 	ldrb.w	r1, [r8]
 8020e74:	9b04      	ldr	r3, [sp, #16]
 8020e76:	f834 2c04 	ldrh.w	r2, [r4, #-4]
 8020e7a:	9300      	str	r3, [sp, #0]
 8020e7c:	0909      	lsrs	r1, r1, #4
 8020e7e:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8020e82:	463b      	mov	r3, r7
 8020e84:	4429      	add	r1, r5
 8020e86:	4650      	mov	r0, sl
 8020e88:	f7ff ff3c 	bl	8020d04 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 8020e8c:	f824 0c04 	strh.w	r0, [r4, #-4]
 8020e90:	f818 1b01 	ldrb.w	r1, [r8], #1
 8020e94:	9b04      	ldr	r3, [sp, #16]
 8020e96:	f834 2c02 	ldrh.w	r2, [r4, #-2]
 8020e9a:	9300      	str	r3, [sp, #0]
 8020e9c:	f001 010f 	and.w	r1, r1, #15
 8020ea0:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8020ea4:	463b      	mov	r3, r7
 8020ea6:	4429      	add	r1, r5
 8020ea8:	4650      	mov	r0, sl
 8020eaa:	f7ff ff2b 	bl	8020d04 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 8020eae:	f1ab 0b02 	sub.w	fp, fp, #2
 8020eb2:	f824 0c02 	strh.w	r0, [r4, #-2]
 8020eb6:	e7d5      	b.n	8020e64 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 8020eb8:	46b0      	mov	r8, r6
 8020eba:	f8dd b00c 	ldr.w	fp, [sp, #12]
 8020ebe:	e7d1      	b.n	8020e64 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 8020ec0:	d10f      	bne.n	8020ee2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x172>
 8020ec2:	f898 1000 	ldrb.w	r1, [r8]
 8020ec6:	9b04      	ldr	r3, [sp, #16]
 8020ec8:	f8b9 2000 	ldrh.w	r2, [r9]
 8020ecc:	9300      	str	r3, [sp, #0]
 8020ece:	0909      	lsrs	r1, r1, #4
 8020ed0:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8020ed4:	463b      	mov	r3, r7
 8020ed6:	4429      	add	r1, r5
 8020ed8:	4650      	mov	r0, sl
 8020eda:	f7ff ff13 	bl	8020d04 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 8020ede:	f829 0b02 	strh.w	r0, [r9], #2
 8020ee2:	9b08      	ldr	r3, [sp, #32]
 8020ee4:	9a05      	ldr	r2, [sp, #20]
 8020ee6:	881c      	ldrh	r4, [r3, #0]
 8020ee8:	9b03      	ldr	r3, [sp, #12]
 8020eea:	1ae4      	subs	r4, r4, r3
 8020eec:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 8020ef0:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 8020ef4:	4413      	add	r3, r2
 8020ef6:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8020ef8:	fb93 f3f2 	sdiv	r3, r3, r2
 8020efc:	441e      	add	r6, r3
 8020efe:	e796      	b.n	8020e2e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xbe>
 8020f00:	4f46      	ldr	r7, [pc, #280]	@ (802101c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2ac>)
 8020f02:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8020f06:	42a3      	cmp	r3, r4
 8020f08:	d97c      	bls.n	8021004 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x294>
 8020f0a:	9a06      	ldr	r2, [sp, #24]
 8020f0c:	2a00      	cmp	r2, #0
 8020f0e:	d054      	beq.n	8020fba <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24a>
 8020f10:	7830      	ldrb	r0, [r6, #0]
 8020f12:	f000 000f 	and.w	r0, r0, #15
 8020f16:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8020f1a:	eb05 0e00 	add.w	lr, r5, r0
 8020f1e:	5c28      	ldrb	r0, [r5, r0]
 8020f20:	f89e 2002 	ldrb.w	r2, [lr, #2]
 8020f24:	f89e e001 	ldrb.w	lr, [lr, #1]
 8020f28:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8020f2c:	f40e 6efc 	and.w	lr, lr, #2016	@ 0x7e0
 8020f30:	ea07 2202 	and.w	r2, r7, r2, lsl #8
 8020f34:	ea42 020e 	orr.w	r2, r2, lr
 8020f38:	ea42 02d0 	orr.w	r2, r2, r0, lsr #3
 8020f3c:	f824 2b02 	strh.w	r2, [r4], #2
 8020f40:	9a03      	ldr	r2, [sp, #12]
 8020f42:	1c71      	adds	r1, r6, #1
 8020f44:	f102 3eff 	add.w	lr, r2, #4294967295
 8020f48:	f1be 0f01 	cmp.w	lr, #1
 8020f4c:	4620      	mov	r0, r4
 8020f4e:	f104 0404 	add.w	r4, r4, #4
 8020f52:	dd36      	ble.n	8020fc2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x252>
 8020f54:	7808      	ldrb	r0, [r1, #0]
 8020f56:	0900      	lsrs	r0, r0, #4
 8020f58:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8020f5c:	eb05 0a00 	add.w	sl, r5, r0
 8020f60:	f1ae 0e02 	sub.w	lr, lr, #2
 8020f64:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8020f68:	f89a 9002 	ldrb.w	r9, [sl, #2]
 8020f6c:	00d2      	lsls	r2, r2, #3
 8020f6e:	ea07 2909 	and.w	r9, r7, r9, lsl #8
 8020f72:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8020f76:	ea49 0202 	orr.w	r2, r9, r2
 8020f7a:	f815 9000 	ldrb.w	r9, [r5, r0]
 8020f7e:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 8020f82:	f824 2c04 	strh.w	r2, [r4, #-4]
 8020f86:	f811 0b01 	ldrb.w	r0, [r1], #1
 8020f8a:	f000 000f 	and.w	r0, r0, #15
 8020f8e:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8020f92:	eb05 0a00 	add.w	sl, r5, r0
 8020f96:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8020f9a:	f89a 9002 	ldrb.w	r9, [sl, #2]
 8020f9e:	00d2      	lsls	r2, r2, #3
 8020fa0:	ea07 2909 	and.w	r9, r7, r9, lsl #8
 8020fa4:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8020fa8:	ea49 0202 	orr.w	r2, r9, r2
 8020fac:	f815 9000 	ldrb.w	r9, [r5, r0]
 8020fb0:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 8020fb4:	f824 2c02 	strh.w	r2, [r4, #-2]
 8020fb8:	e7c6      	b.n	8020f48 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d8>
 8020fba:	4631      	mov	r1, r6
 8020fbc:	f8dd e00c 	ldr.w	lr, [sp, #12]
 8020fc0:	e7c2      	b.n	8020f48 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d8>
 8020fc2:	d111      	bne.n	8020fe8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>
 8020fc4:	7809      	ldrb	r1, [r1, #0]
 8020fc6:	0909      	lsrs	r1, r1, #4
 8020fc8:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8020fcc:	186c      	adds	r4, r5, r1
 8020fce:	5c69      	ldrb	r1, [r5, r1]
 8020fd0:	78a2      	ldrb	r2, [r4, #2]
 8020fd2:	7864      	ldrb	r4, [r4, #1]
 8020fd4:	00e4      	lsls	r4, r4, #3
 8020fd6:	ea07 2202 	and.w	r2, r7, r2, lsl #8
 8020fda:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 8020fde:	4322      	orrs	r2, r4
 8020fe0:	ea42 02d1 	orr.w	r2, r2, r1, lsr #3
 8020fe4:	f820 2b02 	strh.w	r2, [r0], #2
 8020fe8:	9a03      	ldr	r2, [sp, #12]
 8020fea:	f8bc 4000 	ldrh.w	r4, [ip]
 8020fee:	9905      	ldr	r1, [sp, #20]
 8020ff0:	1aa4      	subs	r4, r4, r2
 8020ff2:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
 8020ff6:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8020ffa:	440a      	add	r2, r1
 8020ffc:	fb92 f2f8 	sdiv	r2, r2, r8
 8021000:	4416      	add	r6, r2
 8021002:	e780      	b.n	8020f06 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x196>
 8021004:	4b03      	ldr	r3, [pc, #12]	@ (8021014 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
 8021006:	6818      	ldr	r0, [r3, #0]
 8021008:	6803      	ldr	r3, [r0, #0]
 802100a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 802100c:	4798      	blx	r3
 802100e:	b00f      	add	sp, #60	@ 0x3c
 8021010:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8021014:	20014044 	.word	0x20014044
 8021018:	2001403c 	.word	0x2001403c
 802101c:	fffff800 	.word	0xfffff800

08021020 <CRC_Lock>:
 8021020:	b530      	push	{r4, r5, lr}
 8021022:	4a2d      	ldr	r2, [pc, #180]	@ (80210d8 <CRC_Lock+0xb8>)
 8021024:	6813      	ldr	r3, [r2, #0]
 8021026:	f023 0301 	bic.w	r3, r3, #1
 802102a:	6013      	str	r3, [r2, #0]
 802102c:	4b2b      	ldr	r3, [pc, #172]	@ (80210dc <CRC_Lock+0xbc>)
 802102e:	681c      	ldr	r4, [r3, #0]
 8021030:	f64f 72f0 	movw	r2, #65520	@ 0xfff0
 8021034:	4014      	ands	r4, r2
 8021036:	f24c 2540 	movw	r5, #49728	@ 0xc240
 802103a:	42ac      	cmp	r4, r5
 802103c:	d005      	beq.n	802104a <CRC_Lock+0x2a>
 802103e:	681c      	ldr	r4, [r3, #0]
 8021040:	f24c 2570 	movw	r5, #49776	@ 0xc270
 8021044:	4014      	ands	r4, r2
 8021046:	42ac      	cmp	r4, r5
 8021048:	d125      	bne.n	8021096 <CRC_Lock+0x76>
 802104a:	4b25      	ldr	r3, [pc, #148]	@ (80210e0 <CRC_Lock+0xc0>)
 802104c:	681b      	ldr	r3, [r3, #0]
 802104e:	2b00      	cmp	r3, #0
 8021050:	d139      	bne.n	80210c6 <CRC_Lock+0xa6>
 8021052:	4b24      	ldr	r3, [pc, #144]	@ (80210e4 <CRC_Lock+0xc4>)
 8021054:	681a      	ldr	r2, [r3, #0]
 8021056:	f3c2 020b 	ubfx	r2, r2, #0, #12
 802105a:	f5b2 6f8a 	cmp.w	r2, #1104	@ 0x450
 802105e:	d00d      	beq.n	802107c <CRC_Lock+0x5c>
 8021060:	681a      	ldr	r2, [r3, #0]
 8021062:	f240 4483 	movw	r4, #1155	@ 0x483
 8021066:	f3c2 020b 	ubfx	r2, r2, #0, #12
 802106a:	42a2      	cmp	r2, r4
 802106c:	d006      	beq.n	802107c <CRC_Lock+0x5c>
 802106e:	681b      	ldr	r3, [r3, #0]
 8021070:	f240 4285 	movw	r2, #1157	@ 0x485
 8021074:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8021078:	4293      	cmp	r3, r2
 802107a:	d124      	bne.n	80210c6 <CRC_Lock+0xa6>
 802107c:	4b1a      	ldr	r3, [pc, #104]	@ (80210e8 <CRC_Lock+0xc8>)
 802107e:	2201      	movs	r2, #1
 8021080:	601a      	str	r2, [r3, #0]
 8021082:	681a      	ldr	r2, [r3, #0]
 8021084:	2a00      	cmp	r2, #0
 8021086:	d1fc      	bne.n	8021082 <CRC_Lock+0x62>
 8021088:	4b18      	ldr	r3, [pc, #96]	@ (80210ec <CRC_Lock+0xcc>)
 802108a:	6018      	str	r0, [r3, #0]
 802108c:	6818      	ldr	r0, [r3, #0]
 802108e:	1a43      	subs	r3, r0, r1
 8021090:	4258      	negs	r0, r3
 8021092:	4158      	adcs	r0, r3
 8021094:	e00e      	b.n	80210b4 <CRC_Lock+0x94>
 8021096:	681b      	ldr	r3, [r3, #0]
 8021098:	4013      	ands	r3, r2
 802109a:	f24d 2220 	movw	r2, #53792	@ 0xd220
 802109e:	4293      	cmp	r3, r2
 80210a0:	d111      	bne.n	80210c6 <CRC_Lock+0xa6>
 80210a2:	4b13      	ldr	r3, [pc, #76]	@ (80210f0 <CRC_Lock+0xd0>)
 80210a4:	681b      	ldr	r3, [r3, #0]
 80210a6:	f240 4286 	movw	r2, #1158	@ 0x486
 80210aa:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80210ae:	4293      	cmp	r3, r2
 80210b0:	d001      	beq.n	80210b6 <CRC_Lock+0x96>
 80210b2:	2000      	movs	r0, #0
 80210b4:	bd30      	pop	{r4, r5, pc}
 80210b6:	4b0f      	ldr	r3, [pc, #60]	@ (80210f4 <CRC_Lock+0xd4>)
 80210b8:	2201      	movs	r2, #1
 80210ba:	601a      	str	r2, [r3, #0]
 80210bc:	681a      	ldr	r2, [r3, #0]
 80210be:	2a00      	cmp	r2, #0
 80210c0:	d1fc      	bne.n	80210bc <CRC_Lock+0x9c>
 80210c2:	4b0d      	ldr	r3, [pc, #52]	@ (80210f8 <CRC_Lock+0xd8>)
 80210c4:	e7e1      	b.n	802108a <CRC_Lock+0x6a>
 80210c6:	4b0d      	ldr	r3, [pc, #52]	@ (80210fc <CRC_Lock+0xdc>)
 80210c8:	2201      	movs	r2, #1
 80210ca:	601a      	str	r2, [r3, #0]
 80210cc:	681a      	ldr	r2, [r3, #0]
 80210ce:	2a00      	cmp	r2, #0
 80210d0:	d1fc      	bne.n	80210cc <CRC_Lock+0xac>
 80210d2:	4b0b      	ldr	r3, [pc, #44]	@ (8021100 <CRC_Lock+0xe0>)
 80210d4:	e7d9      	b.n	802108a <CRC_Lock+0x6a>
 80210d6:	bf00      	nop
 80210d8:	e0002000 	.word	0xe0002000
 80210dc:	e000ed00 	.word	0xe000ed00
 80210e0:	e0042000 	.word	0xe0042000
 80210e4:	5c001000 	.word	0x5c001000
 80210e8:	58024c08 	.word	0x58024c08
 80210ec:	58024c00 	.word	0x58024c00
 80210f0:	46008ff0 	.word	0x46008ff0
 80210f4:	46024c08 	.word	0x46024c08
 80210f8:	46024c00 	.word	0x46024c00
 80210fc:	40023008 	.word	0x40023008
 8021100:	40023000 	.word	0x40023000

08021104 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>:
 8021104:	6101      	str	r1, [r0, #16]
 8021106:	4770      	bx	lr

08021108 <_ZN8touchgfx8Gestures4tickEv>:
 8021108:	7b83      	ldrb	r3, [r0, #14]
 802110a:	b14b      	cbz	r3, 8021120 <_ZN8touchgfx8Gestures4tickEv+0x18>
 802110c:	8903      	ldrh	r3, [r0, #8]
 802110e:	3301      	adds	r3, #1
 8021110:	b29b      	uxth	r3, r3
 8021112:	2b07      	cmp	r3, #7
 8021114:	8103      	strh	r3, [r0, #8]
 8021116:	bf81      	itttt	hi
 8021118:	2300      	movhi	r3, #0
 802111a:	8143      	strhhi	r3, [r0, #10]
 802111c:	8183      	strhhi	r3, [r0, #12]
 802111e:	7383      	strbhi	r3, [r0, #14]
 8021120:	4770      	bx	lr
	...

08021124 <_ZN8touchgfx8Gestures17registerDragEventEtttt>:
 8021124:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8021128:	4698      	mov	r8, r3
 802112a:	8883      	ldrh	r3, [r0, #4]
 802112c:	f8ad 3006 	strh.w	r3, [sp, #6]
 8021130:	eba8 0303 	sub.w	r3, r8, r3
 8021134:	b21b      	sxth	r3, r3
 8021136:	4604      	mov	r4, r0
 8021138:	2b00      	cmp	r3, #0
 802113a:	4617      	mov	r7, r2
 802113c:	4a18      	ldr	r2, [pc, #96]	@ (80211a0 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x7c>)
 802113e:	9200      	str	r2, [sp, #0]
 8021140:	bfb8      	it	lt
 8021142:	425b      	neglt	r3, r3
 8021144:	8aa2      	ldrh	r2, [r4, #20]
 8021146:	f8bd 5028 	ldrh.w	r5, [sp, #40]	@ 0x28
 802114a:	f8ad 800a 	strh.w	r8, [sp, #10]
 802114e:	b21b      	sxth	r3, r3
 8021150:	460e      	mov	r6, r1
 8021152:	4293      	cmp	r3, r2
 8021154:	88c1      	ldrh	r1, [r0, #6]
 8021156:	f8ad 1008 	strh.w	r1, [sp, #8]
 802115a:	f04f 0000 	mov.w	r0, #0
 802115e:	f88d 0004 	strb.w	r0, [sp, #4]
 8021162:	f8ad 500c 	strh.w	r5, [sp, #12]
 8021166:	dc07      	bgt.n	8021178 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x54>
 8021168:	1a69      	subs	r1, r5, r1
 802116a:	b209      	sxth	r1, r1
 802116c:	2900      	cmp	r1, #0
 802116e:	bfb8      	it	lt
 8021170:	4249      	neglt	r1, r1
 8021172:	b209      	sxth	r1, r1
 8021174:	428a      	cmp	r2, r1
 8021176:	da10      	bge.n	802119a <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x76>
 8021178:	6920      	ldr	r0, [r4, #16]
 802117a:	6803      	ldr	r3, [r0, #0]
 802117c:	4669      	mov	r1, sp
 802117e:	685b      	ldr	r3, [r3, #4]
 8021180:	4798      	blx	r3
 8021182:	eba8 0606 	sub.w	r6, r8, r6
 8021186:	2300      	movs	r3, #0
 8021188:	1bef      	subs	r7, r5, r7
 802118a:	2001      	movs	r0, #1
 802118c:	8123      	strh	r3, [r4, #8]
 802118e:	8166      	strh	r6, [r4, #10]
 8021190:	81a7      	strh	r7, [r4, #12]
 8021192:	f8a4 8004 	strh.w	r8, [r4, #4]
 8021196:	80e5      	strh	r5, [r4, #6]
 8021198:	73a0      	strb	r0, [r4, #14]
 802119a:	b004      	add	sp, #16
 802119c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80211a0:	08025208 	.word	0x08025208

080211a4 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>:
 80211a4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80211a6:	461e      	mov	r6, r3
 80211a8:	1e4b      	subs	r3, r1, #1
 80211aa:	2b01      	cmp	r3, #1
 80211ac:	b085      	sub	sp, #20
 80211ae:	4604      	mov	r4, r0
 80211b0:	460d      	mov	r5, r1
 80211b2:	4617      	mov	r7, r2
 80211b4:	d84b      	bhi.n	802124e <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xaa>
 80211b6:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 80211ba:	1cd3      	adds	r3, r2, #3
 80211bc:	b29b      	uxth	r3, r3
 80211be:	2b06      	cmp	r3, #6
 80211c0:	d916      	bls.n	80211f0 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x4c>
 80211c2:	f8df c0a0 	ldr.w	ip, [pc, #160]	@ 8021264 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 80211c6:	f8cd c004 	str.w	ip, [sp, #4]
 80211ca:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 80211ce:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 80211d2:	6900      	ldr	r0, [r0, #16]
 80211d4:	f8ad 100c 	strh.w	r1, [sp, #12]
 80211d8:	f04f 0c00 	mov.w	ip, #0
 80211dc:	f88d c008 	strb.w	ip, [sp, #8]
 80211e0:	f8ad 200a 	strh.w	r2, [sp, #10]
 80211e4:	f8ad 300e 	strh.w	r3, [sp, #14]
 80211e8:	6803      	ldr	r3, [r0, #0]
 80211ea:	a901      	add	r1, sp, #4
 80211ec:	689b      	ldr	r3, [r3, #8]
 80211ee:	4798      	blx	r3
 80211f0:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 80211f4:	1cd3      	adds	r3, r2, #3
 80211f6:	b29b      	uxth	r3, r3
 80211f8:	2b06      	cmp	r3, #6
 80211fa:	d916      	bls.n	802122a <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 80211fc:	f8df c064 	ldr.w	ip, [pc, #100]	@ 8021264 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 8021200:	f8cd c004 	str.w	ip, [sp, #4]
 8021204:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8021208:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 802120c:	6920      	ldr	r0, [r4, #16]
 802120e:	f8ad 100c 	strh.w	r1, [sp, #12]
 8021212:	f04f 0c01 	mov.w	ip, #1
 8021216:	f88d c008 	strb.w	ip, [sp, #8]
 802121a:	f8ad 200a 	strh.w	r2, [sp, #10]
 802121e:	f8ad 300e 	strh.w	r3, [sp, #14]
 8021222:	6803      	ldr	r3, [r0, #0]
 8021224:	a901      	add	r1, sp, #4
 8021226:	689b      	ldr	r3, [r3, #8]
 8021228:	4798      	blx	r3
 802122a:	4b0d      	ldr	r3, [pc, #52]	@ (8021260 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xbc>)
 802122c:	9301      	str	r3, [sp, #4]
 802122e:	6920      	ldr	r0, [r4, #16]
 8021230:	f88d 5008 	strb.w	r5, [sp, #8]
 8021234:	2300      	movs	r3, #0
 8021236:	f8ad 700a 	strh.w	r7, [sp, #10]
 802123a:	f8ad 600c 	strh.w	r6, [sp, #12]
 802123e:	f8ad 300e 	strh.w	r3, [sp, #14]
 8021242:	6803      	ldr	r3, [r0, #0]
 8021244:	a901      	add	r1, sp, #4
 8021246:	681b      	ldr	r3, [r3, #0]
 8021248:	4798      	blx	r3
 802124a:	b005      	add	sp, #20
 802124c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 802124e:	2900      	cmp	r1, #0
 8021250:	d1eb      	bne.n	802122a <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 8021252:	80a2      	strh	r2, [r4, #4]
 8021254:	80c6      	strh	r6, [r0, #6]
 8021256:	60a1      	str	r1, [r4, #8]
 8021258:	81a1      	strh	r1, [r4, #12]
 802125a:	73a1      	strb	r1, [r4, #14]
 802125c:	e7e5      	b.n	802122a <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 802125e:	bf00      	nop
 8021260:	080251f4 	.word	0x080251f4
 8021264:	0802521c 	.word	0x0802521c

08021268 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1>:
 8021268:	10c9      	asrs	r1, r1, #3
 802126a:	2900      	cmp	r1, #0
 802126c:	bfb8      	it	lt
 802126e:	4249      	neglt	r1, r1
 8021270:	2801      	cmp	r0, #1
 8021272:	d108      	bne.n	8021286 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1+0x1e>
 8021274:	f3c1 0008 	ubfx	r0, r1, #0, #9
 8021278:	f5b0 7f80 	cmp.w	r0, #256	@ 0x100
 802127c:	4601      	mov	r1, r0
 802127e:	dd02      	ble.n	8021286 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1+0x1e>
 8021280:	f5c0 7000 	rsb	r0, r0, #512	@ 0x200
 8021284:	4770      	bx	lr
 8021286:	29ff      	cmp	r1, #255	@ 0xff
 8021288:	bfa8      	it	ge
 802128a:	21ff      	movge	r1, #255	@ 0xff
 802128c:	4608      	mov	r0, r1
 802128e:	4770      	bx	lr

08021290 <_ZN8touchgfx10Rasterizer6lineToEii>:
 8021290:	b410      	push	{r4}
 8021292:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 8021296:	429c      	cmp	r4, r3
 8021298:	d803      	bhi.n	80212a2 <_ZN8touchgfx10Rasterizer6lineToEii+0x12>
 802129a:	f85d 4b04 	ldr.w	r4, [sp], #4
 802129e:	f7ed b8a3 	b.w	800e3e8 <_ZN8touchgfx7Outline6lineToEii>
 80212a2:	f85d 4b04 	ldr.w	r4, [sp], #4
 80212a6:	4770      	bx	lr

080212a8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>:
 80212a8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80212ac:	b08b      	sub	sp, #44	@ 0x2c
 80212ae:	e9cd 2306 	strd	r2, r3, [sp, #24]
 80212b2:	f89d 3050 	ldrb.w	r3, [sp, #80]	@ 0x50
 80212b6:	9308      	str	r3, [sp, #32]
 80212b8:	4606      	mov	r6, r0
 80212ba:	f89d 3054 	ldrb.w	r3, [sp, #84]	@ 0x54
 80212be:	9309      	str	r3, [sp, #36]	@ 0x24
 80212c0:	468a      	mov	sl, r1
 80212c2:	f7ed f9fe 	bl	800e6c2 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>
 80212c6:	68b5      	ldr	r5, [r6, #8]
 80212c8:	4604      	mov	r4, r0
 80212ca:	2d00      	cmp	r5, #0
 80212cc:	d044      	beq.n	8021358 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 80212ce:	6873      	ldr	r3, [r6, #4]
 80212d0:	42ab      	cmp	r3, r5
 80212d2:	d33d      	bcc.n	8021350 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa8>
 80212d4:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 80212d8:	f9b6 2034 	ldrsh.w	r2, [r6, #52]	@ 0x34
 80212dc:	eb02 0b03 	add.w	fp, r2, r3
 80212e0:	e9dd 1206 	ldrd	r1, r2, [sp, #24]
 80212e4:	fb02 1203 	mla	r2, r2, r3, r1
 80212e8:	9205      	str	r2, [sp, #20]
 80212ea:	1e6a      	subs	r2, r5, #1
 80212ec:	9204      	str	r2, [sp, #16]
 80212ee:	f04f 0800 	mov.w	r8, #0
 80212f2:	f9b4 9002 	ldrsh.w	r9, [r4, #2]
 80212f6:	f9b4 7000 	ldrsh.w	r7, [r4]
 80212fa:	454b      	cmp	r3, r9
 80212fc:	463a      	mov	r2, r7
 80212fe:	d008      	beq.n	8021312 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x6a>
 8021300:	f9b6 3034 	ldrsh.w	r3, [r6, #52]	@ 0x34
 8021304:	eb03 0b09 	add.w	fp, r3, r9
 8021308:	e9dd 1306 	ldrd	r1, r3, [sp, #24]
 802130c:	fb03 1309 	mla	r3, r3, r9, r1
 8021310:	9305      	str	r3, [sp, #20]
 8021312:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 8021316:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 802131a:	4498      	add	r8, r3
 802131c:	9b04      	ldr	r3, [sp, #16]
 802131e:	3b01      	subs	r3, #1
 8021320:	9304      	str	r3, [sp, #16]
 8021322:	9b04      	ldr	r3, [sp, #16]
 8021324:	3301      	adds	r3, #1
 8021326:	d015      	beq.n	8021354 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xac>
 8021328:	f934 3f08 	ldrsh.w	r3, [r4, #8]!
 802132c:	42bb      	cmp	r3, r7
 802132e:	d117      	bne.n	8021360 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb8>
 8021330:	f9b4 0002 	ldrsh.w	r0, [r4, #2]
 8021334:	9b04      	ldr	r3, [sp, #16]
 8021336:	4548      	cmp	r0, r9
 8021338:	f103 33ff 	add.w	r3, r3, #4294967295
 802133c:	d17f      	bne.n	802143e <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x196>
 802133e:	f9b4 0006 	ldrsh.w	r0, [r4, #6]
 8021342:	4401      	add	r1, r0
 8021344:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8021348:	4480      	add	r8, r0
 802134a:	e7e9      	b.n	8021320 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x78>
 802134c:	461f      	mov	r7, r3
 802134e:	e044      	b.n	80213da <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x132>
 8021350:	2000      	movs	r0, #0
 8021352:	e002      	b.n	802135a <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb2>
 8021354:	2900      	cmp	r1, #0
 8021356:	d16f      	bne.n	8021438 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x190>
 8021358:	2001      	movs	r0, #1
 802135a:	b00b      	add	sp, #44	@ 0x2c
 802135c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8021360:	2900      	cmp	r1, #0
 8021362:	d030      	beq.n	80213c6 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x11e>
 8021364:	2f00      	cmp	r7, #0
 8021366:	db29      	blt.n	80213bc <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 8021368:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	@ 0x36
 802136c:	42bb      	cmp	r3, r7
 802136e:	dd25      	ble.n	80213bc <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 8021370:	ebc1 1188 	rsb	r1, r1, r8, lsl #6
 8021374:	f896 0030 	ldrb.w	r0, [r6, #48]	@ 0x30
 8021378:	f7ff ff76 	bl	8021268 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1>
 802137c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 802137e:	fb10 f003 	smulbb	r0, r0, r3
 8021382:	b280      	uxth	r0, r0
 8021384:	1c41      	adds	r1, r0, #1
 8021386:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 802138a:	1209      	asrs	r1, r1, #8
 802138c:	f011 0fff 	tst.w	r1, #255	@ 0xff
 8021390:	d014      	beq.n	80213bc <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 8021392:	9808      	ldr	r0, [sp, #32]
 8021394:	8e73      	ldrh	r3, [r6, #50]	@ 0x32
 8021396:	b2c9      	uxtb	r1, r1
 8021398:	b2ba      	uxth	r2, r7
 802139a:	9102      	str	r1, [sp, #8]
 802139c:	2101      	movs	r1, #1
 802139e:	4413      	add	r3, r2
 80213a0:	9101      	str	r1, [sp, #4]
 80213a2:	4402      	add	r2, r0
 80213a4:	fa0f f18b 	sxth.w	r1, fp
 80213a8:	f8da 0000 	ldr.w	r0, [sl]
 80213ac:	9100      	str	r1, [sp, #0]
 80213ae:	6941      	ldr	r1, [r0, #20]
 80213b0:	b21b      	sxth	r3, r3
 80213b2:	460d      	mov	r5, r1
 80213b4:	b212      	sxth	r2, r2
 80213b6:	9905      	ldr	r1, [sp, #20]
 80213b8:	4650      	mov	r0, sl
 80213ba:	47a8      	blx	r5
 80213bc:	9b04      	ldr	r3, [sp, #16]
 80213be:	3301      	adds	r3, #1
 80213c0:	f107 0201 	add.w	r2, r7, #1
 80213c4:	d0c8      	beq.n	8021358 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 80213c6:	f9b4 7000 	ldrsh.w	r7, [r4]
 80213ca:	1abb      	subs	r3, r7, r2
 80213cc:	2b00      	cmp	r3, #0
 80213ce:	dd31      	ble.n	8021434 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 80213d0:	2a00      	cmp	r2, #0
 80213d2:	dabb      	bge.n	802134c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa4>
 80213d4:	2f00      	cmp	r7, #0
 80213d6:	dd2d      	ble.n	8021434 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 80213d8:	2200      	movs	r2, #0
 80213da:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	@ 0x36
 80213de:	19d1      	adds	r1, r2, r7
 80213e0:	4299      	cmp	r1, r3
 80213e2:	db02      	blt.n	80213ea <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x142>
 80213e4:	1a9f      	subs	r7, r3, r2
 80213e6:	2f00      	cmp	r7, #0
 80213e8:	dd24      	ble.n	8021434 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 80213ea:	ea4f 1188 	mov.w	r1, r8, lsl #6
 80213ee:	f896 0030 	ldrb.w	r0, [r6, #48]	@ 0x30
 80213f2:	f7ff ff39 	bl	8021268 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1>
 80213f6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80213f8:	fb10 f003 	smulbb	r0, r0, r3
 80213fc:	b280      	uxth	r0, r0
 80213fe:	1c41      	adds	r1, r0, #1
 8021400:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8021404:	1209      	asrs	r1, r1, #8
 8021406:	f011 0fff 	tst.w	r1, #255	@ 0xff
 802140a:	d013      	beq.n	8021434 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 802140c:	9808      	ldr	r0, [sp, #32]
 802140e:	8e73      	ldrh	r3, [r6, #50]	@ 0x32
 8021410:	b292      	uxth	r2, r2
 8021412:	b2c9      	uxtb	r1, r1
 8021414:	4413      	add	r3, r2
 8021416:	9102      	str	r1, [sp, #8]
 8021418:	4402      	add	r2, r0
 802141a:	b23f      	sxth	r7, r7
 802141c:	f8da 0000 	ldr.w	r0, [sl]
 8021420:	9701      	str	r7, [sp, #4]
 8021422:	fa0f f18b 	sxth.w	r1, fp
 8021426:	9100      	str	r1, [sp, #0]
 8021428:	6947      	ldr	r7, [r0, #20]
 802142a:	9905      	ldr	r1, [sp, #20]
 802142c:	b21b      	sxth	r3, r3
 802142e:	b212      	sxth	r2, r2
 8021430:	4650      	mov	r0, sl
 8021432:	47b8      	blx	r7
 8021434:	464b      	mov	r3, r9
 8021436:	e75c      	b.n	80212f2 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x4a>
 8021438:	2f00      	cmp	r7, #0
 802143a:	da95      	bge.n	8021368 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xc0>
 802143c:	e78c      	b.n	8021358 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 802143e:	2900      	cmp	r1, #0
 8021440:	d0f8      	beq.n	8021434 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8021442:	e78f      	b.n	8021364 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xbc>

08021444 <_ZN8touchgfx6CanvasC1EPKNS_15AbstractPainterERKNS_4RectES6_h>:
 8021444:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8021448:	461e      	mov	r6, r3
 802144a:	4b36      	ldr	r3, [pc, #216]	@ (8021524 <_ZN8touchgfx6CanvasC1EPKNS_15AbstractPainterERKNS_4RectES6_h+0xe0>)
 802144c:	e9c0 3100 	strd	r3, r1, [r0]
 8021450:	f9b2 3004 	ldrsh.w	r3, [r2, #4]
 8021454:	8103      	strh	r3, [r0, #8]
 8021456:	2500      	movs	r5, #0
 8021458:	f89d 3020 	ldrb.w	r3, [sp, #32]
 802145c:	7283      	strb	r3, [r0, #10]
 802145e:	f100 0814 	add.w	r8, r0, #20
 8021462:	4604      	mov	r4, r0
 8021464:	8185      	strh	r5, [r0, #12]
 8021466:	81c5      	strh	r5, [r0, #14]
 8021468:	8205      	strh	r5, [r0, #16]
 802146a:	8245      	strh	r5, [r0, #18]
 802146c:	4640      	mov	r0, r8
 802146e:	4617      	mov	r7, r2
 8021470:	f7ec faf2 	bl	800da58 <_ZN8touchgfx7OutlineC1Ev>
 8021474:	e9c4 5513 	strd	r5, r5, [r4, #76]	@ 0x4c
 8021478:	e9c4 5515 	strd	r5, r5, [r4, #84]	@ 0x54
 802147c:	e9c4 5518 	strd	r5, r5, [r4, #96]	@ 0x60
 8021480:	e9c4 551b 	strd	r5, r5, [r4, #108]	@ 0x6c
 8021484:	f884 5044 	strb.w	r5, [r4, #68]	@ 0x44
 8021488:	f8a4 5046 	strh.w	r5, [r4, #70]	@ 0x46
 802148c:	f8a4 5048 	strh.w	r5, [r4, #72]	@ 0x48
 8021490:	f8a4 504a 	strh.w	r5, [r4, #74]	@ 0x4a
 8021494:	f884 505c 	strb.w	r5, [r4, #92]	@ 0x5c
 8021498:	f884 505d 	strb.w	r5, [r4, #93]	@ 0x5d
 802149c:	f8a4 5068 	strh.w	r5, [r4, #104]	@ 0x68
 80214a0:	6830      	ldr	r0, [r6, #0]
 80214a2:	6871      	ldr	r1, [r6, #4]
 80214a4:	8872      	ldrh	r2, [r6, #2]
 80214a6:	8835      	ldrh	r5, [r6, #0]
 80214a8:	466b      	mov	r3, sp
 80214aa:	c303      	stmia	r3!, {r0, r1}
 80214ac:	887b      	ldrh	r3, [r7, #2]
 80214ae:	f9b6 0004 	ldrsh.w	r0, [r6, #4]
 80214b2:	f9b6 1006 	ldrsh.w	r1, [r6, #6]
 80214b6:	4413      	add	r3, r2
 80214b8:	883a      	ldrh	r2, [r7, #0]
 80214ba:	81e3      	strh	r3, [r4, #14]
 80214bc:	442a      	add	r2, r5
 80214be:	81a2      	strh	r2, [r4, #12]
 80214c0:	8220      	strh	r0, [r4, #16]
 80214c2:	8261      	strh	r1, [r4, #18]
 80214c4:	4668      	mov	r0, sp
 80214c6:	4639      	mov	r1, r7
 80214c8:	f7ee f81a 	bl	800f500 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80214cc:	f104 000c 	add.w	r0, r4, #12
 80214d0:	f7ed ffee 	bl	800f4b0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80214d4:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 80214d8:	f8bd 2000 	ldrh.w	r2, [sp]
 80214dc:	f8a4 2046 	strh.w	r2, [r4, #70]	@ 0x46
 80214e0:	f8a4 3048 	strh.w	r3, [r4, #72]	@ 0x48
 80214e4:	4640      	mov	r0, r8
 80214e6:	f7ec fa9c 	bl	800da22 <_ZN8touchgfx7Outline5resetEv>
 80214ea:	f9bd 3000 	ldrsh.w	r3, [sp]
 80214ee:	f9b4 2012 	ldrsh.w	r2, [r4, #18]
 80214f2:	015b      	lsls	r3, r3, #5
 80214f4:	64e3      	str	r3, [r4, #76]	@ 0x4c
 80214f6:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 80214fa:	015b      	lsls	r3, r3, #5
 80214fc:	6523      	str	r3, [r4, #80]	@ 0x50
 80214fe:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 8021502:	015b      	lsls	r3, r3, #5
 8021504:	6563      	str	r3, [r4, #84]	@ 0x54
 8021506:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 802150a:	015b      	lsls	r3, r3, #5
 802150c:	65a3      	str	r3, [r4, #88]	@ 0x58
 802150e:	f9b4 3010 	ldrsh.w	r3, [r4, #16]
 8021512:	f8a4 304a 	strh.w	r3, [r4, #74]	@ 0x4a
 8021516:	4620      	mov	r0, r4
 8021518:	e9c4 320f 	strd	r3, r2, [r4, #60]	@ 0x3c
 802151c:	b002      	add	sp, #8
 802151e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8021522:	bf00      	nop
 8021524:	08025558 	.word	0x08025558

08021528 <_ZN8touchgfx6Canvas5closeEv>:
 8021528:	b538      	push	{r3, r4, r5, lr}
 802152a:	f890 305c 	ldrb.w	r3, [r0, #92]	@ 0x5c
 802152e:	4604      	mov	r4, r0
 8021530:	b193      	cbz	r3, 8021558 <_ZN8touchgfx6Canvas5closeEv+0x30>
 8021532:	f890 3068 	ldrb.w	r3, [r0, #104]	@ 0x68
 8021536:	f890 2069 	ldrb.w	r2, [r0, #105]	@ 0x69
 802153a:	4213      	tst	r3, r2
 802153c:	d10c      	bne.n	8021558 <_ZN8touchgfx6Canvas5closeEv+0x30>
 802153e:	f100 0514 	add.w	r5, r0, #20
 8021542:	b123      	cbz	r3, 802154e <_ZN8touchgfx6Canvas5closeEv+0x26>
 8021544:	e9d0 1218 	ldrd	r1, r2, [r0, #96]	@ 0x60
 8021548:	4628      	mov	r0, r5
 802154a:	f7ff fea1 	bl	8021290 <_ZN8touchgfx10Rasterizer6lineToEii>
 802154e:	e9d4 121b 	ldrd	r1, r2, [r4, #108]	@ 0x6c
 8021552:	4628      	mov	r0, r5
 8021554:	f7ff fe9c 	bl	8021290 <_ZN8touchgfx10Rasterizer6lineToEii>
 8021558:	2300      	movs	r3, #0
 802155a:	f884 305c 	strb.w	r3, [r4, #92]	@ 0x5c
 802155e:	e9d4 0306 	ldrd	r0, r3, [r4, #24]
 8021562:	4298      	cmp	r0, r3
 8021564:	bf34      	ite	cc
 8021566:	2000      	movcc	r0, #0
 8021568:	2001      	movcs	r0, #1
 802156a:	bd38      	pop	{r3, r4, r5, pc}

0802156c <_ZN8touchgfx6Canvas6renderEh>:
 802156c:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8021570:	7a85      	ldrb	r5, [r0, #10]
 8021572:	4369      	muls	r1, r5
 8021574:	1c4d      	adds	r5, r1, #1
 8021576:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 802157a:	122d      	asrs	r5, r5, #8
 802157c:	4604      	mov	r4, r0
 802157e:	f000 8099 	beq.w	80216b4 <_ZN8touchgfx6Canvas6renderEh+0x148>
 8021582:	f890 305d 	ldrb.w	r3, [r0, #93]	@ 0x5d
 8021586:	2b00      	cmp	r3, #0
 8021588:	f000 8094 	beq.w	80216b4 <_ZN8touchgfx6Canvas6renderEh+0x148>
 802158c:	f7ff ffcc 	bl	8021528 <_ZN8touchgfx6Canvas5closeEv>
 8021590:	4607      	mov	r7, r0
 8021592:	2800      	cmp	r0, #0
 8021594:	d045      	beq.n	8021622 <_ZN8touchgfx6Canvas6renderEh+0xb6>
 8021596:	6860      	ldr	r0, [r4, #4]
 8021598:	4e47      	ldr	r6, [pc, #284]	@ (80216b8 <_ZN8touchgfx6Canvas6renderEh+0x14c>)
 802159a:	6803      	ldr	r3, [r0, #0]
 802159c:	6837      	ldr	r7, [r6, #0]
 802159e:	689b      	ldr	r3, [r3, #8]
 80215a0:	4798      	blx	r3
 80215a2:	4601      	mov	r1, r0
 80215a4:	4638      	mov	r0, r7
 80215a6:	f7e9 feb9 	bl	800b31c <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>
 80215aa:	4607      	mov	r7, r0
 80215ac:	f7e1 fa16 	bl	80029dc <_ZN8touchgfx3HAL3lcdEv>
 80215b0:	6803      	ldr	r3, [r0, #0]
 80215b2:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80215b4:	4798      	blx	r3
 80215b6:	4680      	mov	r8, r0
 80215b8:	f7e1 fa10 	bl	80029dc <_ZN8touchgfx3HAL3lcdEv>
 80215bc:	6803      	ldr	r3, [r0, #0]
 80215be:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80215c0:	4798      	blx	r3
 80215c2:	280b      	cmp	r0, #11
 80215c4:	d85b      	bhi.n	802167e <_ZN8touchgfx6Canvas6renderEh+0x112>
 80215c6:	e8df f000 	tbb	[pc, r0]
 80215ca:	5c51      	.short	0x5c51
 80215cc:	305a066c 	.word	0x305a066c
 80215d0:	65656540 	.word	0x65656540
 80215d4:	6565      	.short	0x6565
 80215d6:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
 80215da:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
 80215de:	2208      	movs	r2, #8
 80215e0:	fb91 f2f2 	sdiv	r2, r1, r2
 80215e4:	fb08 2303 	mla	r3, r8, r3, r2
 80215e8:	441f      	add	r7, r3
 80215ea:	424b      	negs	r3, r1
 80215ec:	f003 0307 	and.w	r3, r3, #7
 80215f0:	f001 0107 	and.w	r1, r1, #7
 80215f4:	bf58      	it	pl
 80215f6:	4259      	negpl	r1, r3
 80215f8:	b2c9      	uxtb	r1, r1
 80215fa:	b2ed      	uxtb	r5, r5
 80215fc:	463a      	mov	r2, r7
 80215fe:	e9cd 1500 	strd	r1, r5, [sp]
 8021602:	fa0f f388 	sxth.w	r3, r8
 8021606:	6861      	ldr	r1, [r4, #4]
 8021608:	f104 0014 	add.w	r0, r4, #20
 802160c:	f7ff fe4c 	bl	80212a8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>
 8021610:	4607      	mov	r7, r0
 8021612:	6860      	ldr	r0, [r4, #4]
 8021614:	6803      	ldr	r3, [r0, #0]
 8021616:	691b      	ldr	r3, [r3, #16]
 8021618:	4798      	blx	r3
 802161a:	6830      	ldr	r0, [r6, #0]
 802161c:	6803      	ldr	r3, [r0, #0]
 802161e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8021620:	4798      	blx	r3
 8021622:	4638      	mov	r0, r7
 8021624:	b002      	add	sp, #8
 8021626:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802162a:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
 802162e:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
 8021632:	2204      	movs	r2, #4
 8021634:	fb91 f2f2 	sdiv	r2, r1, r2
 8021638:	fb08 2303 	mla	r3, r8, r3, r2
 802163c:	441f      	add	r7, r3
 802163e:	424b      	negs	r3, r1
 8021640:	f003 0303 	and.w	r3, r3, #3
 8021644:	f001 0103 	and.w	r1, r1, #3
 8021648:	e7d4      	b.n	80215f4 <_ZN8touchgfx6Canvas6renderEh+0x88>
 802164a:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
 802164e:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
 8021652:	2900      	cmp	r1, #0
 8021654:	f04f 0202 	mov.w	r2, #2
 8021658:	fb91 f2f2 	sdiv	r2, r1, r2
 802165c:	f001 0101 	and.w	r1, r1, #1
 8021660:	fb08 2303 	mla	r3, r8, r3, r2
 8021664:	441f      	add	r7, r3
 8021666:	bfb8      	it	lt
 8021668:	4249      	neglt	r1, r1
 802166a:	e7c5      	b.n	80215f8 <_ZN8touchgfx6Canvas6renderEh+0x8c>
 802166c:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
 8021670:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8021674:	fb08 f303 	mul.w	r3, r8, r3
 8021678:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 802167c:	441f      	add	r7, r3
 802167e:	2100      	movs	r1, #0
 8021680:	e7bb      	b.n	80215fa <_ZN8touchgfx6Canvas6renderEh+0x8e>
 8021682:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
 8021686:	fb08 f203 	mul.w	r2, r8, r3
 802168a:	89a3      	ldrh	r3, [r4, #12]
 802168c:	2103      	movs	r1, #3
 802168e:	fb13 2301 	smlabb	r3, r3, r1, r2
 8021692:	e7f3      	b.n	802167c <_ZN8touchgfx6Canvas6renderEh+0x110>
 8021694:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
 8021698:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 802169c:	fb08 2303 	mla	r3, r8, r3, r2
 80216a0:	e7ec      	b.n	802167c <_ZN8touchgfx6Canvas6renderEh+0x110>
 80216a2:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
 80216a6:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 80216aa:	fb08 f303 	mul.w	r3, r8, r3
 80216ae:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 80216b2:	e7e3      	b.n	802167c <_ZN8touchgfx6Canvas6renderEh+0x110>
 80216b4:	2701      	movs	r7, #1
 80216b6:	e7b4      	b.n	8021622 <_ZN8touchgfx6Canvas6renderEh+0xb6>
 80216b8:	20014044 	.word	0x20014044

080216bc <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>:
 80216bc:	b510      	push	{r4, lr}
 80216be:	4b06      	ldr	r3, [pc, #24]	@ (80216d8 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x1c>)
 80216c0:	781b      	ldrb	r3, [r3, #0]
 80216c2:	2b01      	cmp	r3, #1
 80216c4:	d107      	bne.n	80216d6 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x1a>
 80216c6:	f9b0 0008 	ldrsh.w	r0, [r0, #8]
 80216ca:	680b      	ldr	r3, [r1, #0]
 80216cc:	6814      	ldr	r4, [r2, #0]
 80216ce:	ebc3 1340 	rsb	r3, r3, r0, lsl #5
 80216d2:	6013      	str	r3, [r2, #0]
 80216d4:	600c      	str	r4, [r1, #0]
 80216d6:	bd10      	pop	{r4, pc}
 80216d8:	2001403a 	.word	0x2001403a

080216dc <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>:
 80216dc:	b513      	push	{r0, r1, r4, lr}
 80216de:	f890 305c 	ldrb.w	r3, [r0, #92]	@ 0x5c
 80216e2:	4604      	mov	r4, r0
 80216e4:	e9cd 2100 	strd	r2, r1, [sp]
 80216e8:	b9a3      	cbnz	r3, 8021714 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x38>
 80216ea:	466a      	mov	r2, sp
 80216ec:	a901      	add	r1, sp, #4
 80216ee:	4620      	mov	r0, r4
 80216f0:	f7ff ffe4 	bl	80216bc <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
 80216f4:	6ce3      	ldr	r3, [r4, #76]	@ 0x4c
 80216f6:	9901      	ldr	r1, [sp, #4]
 80216f8:	9a00      	ldr	r2, [sp, #0]
 80216fa:	1ac9      	subs	r1, r1, r3
 80216fc:	6d23      	ldr	r3, [r4, #80]	@ 0x50
 80216fe:	9101      	str	r1, [sp, #4]
 8021700:	1ad2      	subs	r2, r2, r3
 8021702:	2a00      	cmp	r2, #0
 8021704:	9200      	str	r2, [sp, #0]
 8021706:	da0b      	bge.n	8021720 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x44>
 8021708:	2301      	movs	r3, #1
 802170a:	2900      	cmp	r1, #0
 802170c:	da0e      	bge.n	802172c <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x50>
 802170e:	f043 0304 	orr.w	r3, r3, #4
 8021712:	e013      	b.n	802173c <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x60>
 8021714:	f7ff ff08 	bl	8021528 <_ZN8touchgfx6Canvas5closeEv>
 8021718:	2800      	cmp	r0, #0
 802171a:	d1e6      	bne.n	80216ea <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0xe>
 802171c:	b002      	add	sp, #8
 802171e:	bd10      	pop	{r4, pc}
 8021720:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 8021722:	429a      	cmp	r2, r3
 8021724:	bfac      	ite	ge
 8021726:	2302      	movge	r3, #2
 8021728:	2300      	movlt	r3, #0
 802172a:	e7ee      	b.n	802170a <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x2e>
 802172c:	6d60      	ldr	r0, [r4, #84]	@ 0x54
 802172e:	4281      	cmp	r1, r0
 8021730:	bfac      	ite	ge
 8021732:	2008      	movge	r0, #8
 8021734:	2000      	movlt	r0, #0
 8021736:	4318      	orrs	r0, r3
 8021738:	b2c3      	uxtb	r3, r0
 802173a:	b158      	cbz	r0, 8021754 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x78>
 802173c:	2200      	movs	r2, #0
 802173e:	f884 205c 	strb.w	r2, [r4, #92]	@ 0x5c
 8021742:	9901      	ldr	r1, [sp, #4]
 8021744:	9a00      	ldr	r2, [sp, #0]
 8021746:	66e1      	str	r1, [r4, #108]	@ 0x6c
 8021748:	6722      	str	r2, [r4, #112]	@ 0x70
 802174a:	e9c4 1218 	strd	r1, r2, [r4, #96]	@ 0x60
 802174e:	f884 3068 	strb.w	r3, [r4, #104]	@ 0x68
 8021752:	e7e3      	b.n	802171c <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x40>
 8021754:	f884 0069 	strb.w	r0, [r4, #105]	@ 0x69
 8021758:	e9d4 3006 	ldrd	r3, r0, [r4, #24]
 802175c:	4298      	cmp	r0, r3
 802175e:	d803      	bhi.n	8021768 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x8c>
 8021760:	f104 0014 	add.w	r0, r4, #20
 8021764:	f7ec fe5a 	bl	800e41c <_ZN8touchgfx7Outline6moveToEii>
 8021768:	2301      	movs	r3, #1
 802176a:	f884 305c 	strb.w	r3, [r4, #92]	@ 0x5c
 802176e:	f884 305d 	strb.w	r3, [r4, #93]	@ 0x5d
 8021772:	2300      	movs	r3, #0
 8021774:	e7e5      	b.n	8021742 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x66>

08021776 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>:
 8021776:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8021778:	ab02      	add	r3, sp, #8
 802177a:	4604      	mov	r4, r0
 802177c:	f843 2d08 	str.w	r2, [r3, #-8]!
 8021780:	9101      	str	r1, [sp, #4]
 8021782:	461a      	mov	r2, r3
 8021784:	a901      	add	r1, sp, #4
 8021786:	f7ff ff99 	bl	80216bc <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
 802178a:	6ce3      	ldr	r3, [r4, #76]	@ 0x4c
 802178c:	9901      	ldr	r1, [sp, #4]
 802178e:	9a00      	ldr	r2, [sp, #0]
 8021790:	1ac9      	subs	r1, r1, r3
 8021792:	6d23      	ldr	r3, [r4, #80]	@ 0x50
 8021794:	9101      	str	r1, [sp, #4]
 8021796:	1ad2      	subs	r2, r2, r3
 8021798:	2a00      	cmp	r2, #0
 802179a:	9200      	str	r2, [sp, #0]
 802179c:	db1c      	blt.n	80217d8 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x62>
 802179e:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 80217a0:	429a      	cmp	r2, r3
 80217a2:	bfac      	ite	ge
 80217a4:	2002      	movge	r0, #2
 80217a6:	2000      	movlt	r0, #0
 80217a8:	2900      	cmp	r1, #0
 80217aa:	db17      	blt.n	80217dc <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x66>
 80217ac:	6d63      	ldr	r3, [r4, #84]	@ 0x54
 80217ae:	4299      	cmp	r1, r3
 80217b0:	bfac      	ite	ge
 80217b2:	2308      	movge	r3, #8
 80217b4:	2300      	movlt	r3, #0
 80217b6:	4303      	orrs	r3, r0
 80217b8:	f894 0068 	ldrb.w	r0, [r4, #104]	@ 0x68
 80217bc:	b2dd      	uxtb	r5, r3
 80217be:	b978      	cbnz	r0, 80217e0 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x6a>
 80217c0:	f104 0014 	add.w	r0, r4, #20
 80217c4:	f7ff fd64 	bl	8021290 <_ZN8touchgfx10Rasterizer6lineToEii>
 80217c8:	9b01      	ldr	r3, [sp, #4]
 80217ca:	6623      	str	r3, [r4, #96]	@ 0x60
 80217cc:	9b00      	ldr	r3, [sp, #0]
 80217ce:	6663      	str	r3, [r4, #100]	@ 0x64
 80217d0:	f884 5068 	strb.w	r5, [r4, #104]	@ 0x68
 80217d4:	b002      	add	sp, #8
 80217d6:	bd70      	pop	{r4, r5, r6, pc}
 80217d8:	2001      	movs	r0, #1
 80217da:	e7e5      	b.n	80217a8 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x32>
 80217dc:	2304      	movs	r3, #4
 80217de:	e7ea      	b.n	80217b6 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x40>
 80217e0:	b113      	cbz	r3, 80217e8 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x72>
 80217e2:	ea10 0305 	ands.w	r3, r0, r5
 80217e6:	d11c      	bne.n	8021822 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xac>
 80217e8:	f894 305c 	ldrb.w	r3, [r4, #92]	@ 0x5c
 80217ec:	f104 0614 	add.w	r6, r4, #20
 80217f0:	e9d4 1218 	ldrd	r1, r2, [r4, #96]	@ 0x60
 80217f4:	b98b      	cbnz	r3, 802181a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xa4>
 80217f6:	f884 0069 	strb.w	r0, [r4, #105]	@ 0x69
 80217fa:	e9d4 3006 	ldrd	r3, r0, [r4, #24]
 80217fe:	4298      	cmp	r0, r3
 8021800:	d802      	bhi.n	8021808 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x92>
 8021802:	4630      	mov	r0, r6
 8021804:	f7ec fe0a 	bl	800e41c <_ZN8touchgfx7Outline6moveToEii>
 8021808:	2301      	movs	r3, #1
 802180a:	f884 305c 	strb.w	r3, [r4, #92]	@ 0x5c
 802180e:	f884 305d 	strb.w	r3, [r4, #93]	@ 0x5d
 8021812:	e9dd 2100 	ldrd	r2, r1, [sp]
 8021816:	4630      	mov	r0, r6
 8021818:	e7d4      	b.n	80217c4 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x4e>
 802181a:	4630      	mov	r0, r6
 802181c:	f7ff fd38 	bl	8021290 <_ZN8touchgfx10Rasterizer6lineToEii>
 8021820:	e7f7      	b.n	8021812 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x9c>
 8021822:	461d      	mov	r5, r3
 8021824:	e7d0      	b.n	80217c8 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x52>
	...

08021828 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj>:
 8021828:	b538      	push	{r3, r4, r5, lr}
 802182a:	ed2d 8b10 	vpush	{d8-d15}
 802182e:	eef6 ba00 	vmov.f32	s23, #96	@ 0x3f000000  0.5
 8021832:	ed9f ba5a 	vldr	s22, [pc, #360]	@ 802199c <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x174>
 8021836:	4605      	mov	r5, r0
 8021838:	eeb0 ca40 	vmov.f32	s24, s0
 802183c:	eef0 ca60 	vmov.f32	s25, s1
 8021840:	eeb0 da41 	vmov.f32	s26, s2
 8021844:	eef0 da61 	vmov.f32	s27, s3
 8021848:	eeb0 ea42 	vmov.f32	s28, s4
 802184c:	eef0 ea62 	vmov.f32	s29, s5
 8021850:	460c      	mov	r4, r1
 8021852:	eef0 aa6b 	vmov.f32	s21, s23
 8021856:	2c08      	cmp	r4, #8
 8021858:	d86e      	bhi.n	8021938 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x110>
 802185a:	ee7e 6a4c 	vsub.f32	s13, s28, s24
 802185e:	ee7d 7aee 	vsub.f32	s15, s27, s29
 8021862:	ee3d 6a4e 	vsub.f32	s12, s26, s28
 8021866:	ee3e 7aec 	vsub.f32	s14, s29, s25
 802186a:	ee66 7ae7 	vnmul.f32	s15, s13, s15
 802186e:	ee3c fa0d 	vadd.f32	s30, s24, s26
 8021872:	eee6 7a07 	vfma.f32	s15, s12, s14
 8021876:	ee7c faad 	vadd.f32	s31, s25, s27
 802187a:	ee7d 9a0e 	vadd.f32	s19, s26, s28
 802187e:	ee3d aaae 	vadd.f32	s20, s27, s29
 8021882:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8021886:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802188a:	ee2f fa2b 	vmul.f32	s30, s30, s23
 802188e:	ee6f faab 	vmul.f32	s31, s31, s23
 8021892:	ee69 9aab 	vmul.f32	s19, s19, s23
 8021896:	ee2a aa2b 	vmul.f32	s20, s20, s23
 802189a:	bf48      	it	mi
 802189c:	eef1 7a67 	vnegmi.f32	s15, s15
 80218a0:	ee7f 8a29 	vadd.f32	s17, s30, s19
 80218a4:	ee3f 9a8a 	vadd.f32	s18, s31, s20
 80218a8:	eef4 7acb 	vcmpe.f32	s15, s22
 80218ac:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80218b0:	ee68 8aab 	vmul.f32	s17, s17, s23
 80218b4:	ee29 9a2b 	vmul.f32	s18, s18, s23
 80218b8:	eeb5 6a00 	vmov.f32	s12, #80	@ 0x3e800000  0.250
 80218bc:	dd3f      	ble.n	802193e <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x116>
 80218be:	ee27 7a07 	vmul.f32	s14, s14, s14
 80218c2:	ee67 7aa7 	vmul.f32	s15, s15, s15
 80218c6:	eea6 7aa6 	vfma.f32	s14, s13, s13
 80218ca:	ee27 7a06 	vmul.f32	s14, s14, s12
 80218ce:	eef4 7ac7 	vcmpe.f32	s15, s14
 80218d2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80218d6:	d847      	bhi.n	8021968 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x140>
 80218d8:	ee7e 0a4d 	vsub.f32	s1, s28, s26
 80218dc:	ee3e 0aed 	vsub.f32	s0, s29, s27
 80218e0:	f000 fa3b 	bl	8021d5a <atan2f>
 80218e4:	ee7d 0a4c 	vsub.f32	s1, s26, s24
 80218e8:	eeb0 8a40 	vmov.f32	s16, s0
 80218ec:	ee3d 0aec 	vsub.f32	s0, s27, s25
 80218f0:	f000 fa33 	bl	8021d5a <atan2f>
 80218f4:	ee38 0a40 	vsub.f32	s0, s16, s0
 80218f8:	eddf 7a29 	vldr	s15, [pc, #164]	@ 80219a0 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x178>
 80218fc:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8021900:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8021904:	bf48      	it	mi
 8021906:	eeb1 0a40 	vnegmi.f32	s0, s0
 802190a:	eeb4 0ae7 	vcmpe.f32	s0, s15
 802190e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8021912:	bfa4      	itt	ge
 8021914:	eddf 7a23 	vldrge	s15, [pc, #140]	@ 80219a4 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x17c>
 8021918:	ee37 0ac0 	vsubge.f32	s0, s15, s0
 802191c:	eddf 7a22 	vldr	s15, [pc, #136]	@ 80219a8 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x180>
 8021920:	eeb4 0ae7 	vcmpe.f32	s0, s15
 8021924:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8021928:	d51e      	bpl.n	8021968 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x140>
 802192a:	eef0 0a49 	vmov.f32	s1, s18
 802192e:	eeb0 0a68 	vmov.f32	s0, s17
 8021932:	4628      	mov	r0, r5
 8021934:	f7ea fee4 	bl	800c700 <_ZN8touchgfx6Canvas6lineToIfEEvT_S2_>
 8021938:	ecbd 8b10 	vpop	{d8-d15}
 802193c:	bd38      	pop	{r3, r4, r5, pc}
 802193e:	ee7c 7a0e 	vadd.f32	s15, s24, s28
 8021942:	eeb0 7a68 	vmov.f32	s14, s17
 8021946:	eea7 7aea 	vfms.f32	s14, s15, s21
 802194a:	ee7c 7aae 	vadd.f32	s15, s25, s29
 802194e:	eef0 6a49 	vmov.f32	s13, s18
 8021952:	eee7 6aea 	vfms.f32	s13, s15, s21
 8021956:	ee66 7aa6 	vmul.f32	s15, s13, s13
 802195a:	eee7 7a07 	vfma.f32	s15, s14, s14
 802195e:	eef4 7ac6 	vcmpe.f32	s15, s12
 8021962:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8021966:	d9e0      	bls.n	802192a <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x102>
 8021968:	3401      	adds	r4, #1
 802196a:	eef0 0a6c 	vmov.f32	s1, s25
 802196e:	eeb0 0a4c 	vmov.f32	s0, s24
 8021972:	4621      	mov	r1, r4
 8021974:	eef0 2a49 	vmov.f32	s5, s18
 8021978:	eeb0 2a68 	vmov.f32	s4, s17
 802197c:	eef0 1a6f 	vmov.f32	s3, s31
 8021980:	eeb0 1a4f 	vmov.f32	s2, s30
 8021984:	4628      	mov	r0, r5
 8021986:	f7ff ff4f 	bl	8021828 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj>
 802198a:	eef0 da4a 	vmov.f32	s27, s20
 802198e:	eeb0 da69 	vmov.f32	s26, s19
 8021992:	eef0 ca49 	vmov.f32	s25, s18
 8021996:	eeb0 ca68 	vmov.f32	s24, s17
 802199a:	e75c      	b.n	8021856 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x2e>
 802199c:	2edbe6ff 	.word	0x2edbe6ff
 80219a0:	40490fdb 	.word	0x40490fdb
 80219a4:	40c90fdb 	.word	0x40c90fdb
 80219a8:	3dcccccd 	.word	0x3dcccccd

080219ac <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj>:
 80219ac:	b530      	push	{r4, r5, lr}
 80219ae:	ed2d 8b10 	vpush	{d8-d15}
 80219b2:	4604      	mov	r4, r0
 80219b4:	b085      	sub	sp, #20
 80219b6:	eef0 8a40 	vmov.f32	s17, s0
 80219ba:	eef0 9a60 	vmov.f32	s19, s1
 80219be:	eef0 fa41 	vmov.f32	s31, s2
 80219c2:	eeb0 fa61 	vmov.f32	s30, s3
 80219c6:	eef0 ba42 	vmov.f32	s23, s4
 80219ca:	eeb0 ca62 	vmov.f32	s24, s5
 80219ce:	eef0 aa43 	vmov.f32	s21, s6
 80219d2:	eeb0 ba63 	vmov.f32	s22, s7
 80219d6:	460d      	mov	r5, r1
 80219d8:	2d08      	cmp	r5, #8
 80219da:	f200 8115 	bhi.w	8021c08 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x25c>
 80219de:	ee3b 6aaa 	vadd.f32	s12, s23, s21
 80219e2:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 80219e6:	ee7f 6aab 	vadd.f32	s13, s31, s23
 80219ea:	ee26 6a27 	vmul.f32	s12, s12, s15
 80219ee:	ee38 daaf 	vadd.f32	s26, s17, s31
 80219f2:	ed8d 6a01 	vstr	s12, [sp, #4]
 80219f6:	eea6 6aa7 	vfma.f32	s12, s13, s15
 80219fa:	ee2d da27 	vmul.f32	s26, s26, s15
 80219fe:	ee7c ca0b 	vadd.f32	s25, s24, s22
 8021a02:	eeb0 ea4d 	vmov.f32	s28, s26
 8021a06:	eea6 eaa7 	vfma.f32	s28, s13, s15
 8021a0a:	ee6c caa7 	vmul.f32	s25, s25, s15
 8021a0e:	ee66 6a27 	vmul.f32	s13, s12, s15
 8021a12:	ee3f 7a0c 	vadd.f32	s14, s30, s24
 8021a16:	edcd 6a03 	vstr	s13, [sp, #12]
 8021a1a:	ee79 da8f 	vadd.f32	s27, s19, s30
 8021a1e:	eef0 6a6c 	vmov.f32	s13, s25
 8021a22:	eee7 6a27 	vfma.f32	s13, s14, s15
 8021a26:	ee6d daa7 	vmul.f32	s27, s27, s15
 8021a2a:	ee2e ea27 	vmul.f32	s28, s28, s15
 8021a2e:	eef0 ea6d 	vmov.f32	s29, s27
 8021a32:	eee7 ea27 	vfma.f32	s29, s14, s15
 8021a36:	ee26 7aa7 	vmul.f32	s14, s13, s15
 8021a3a:	ee6e eaa7 	vmul.f32	s29, s29, s15
 8021a3e:	ed8d 7a02 	vstr	s14, [sp, #8]
 8021a42:	ed9d 7a03 	vldr	s14, [sp, #12]
 8021a46:	ee3e 9a07 	vadd.f32	s18, s28, s14
 8021a4a:	ed9d 7a02 	vldr	s14, [sp, #8]
 8021a4e:	ee3e aa87 	vadd.f32	s20, s29, s14
 8021a52:	ee29 9a27 	vmul.f32	s18, s18, s15
 8021a56:	ee2a aa27 	vmul.f32	s20, s20, s15
 8021a5a:	eef0 6a67 	vmov.f32	s13, s15
 8021a5e:	2d00      	cmp	r5, #0
 8021a60:	f000 810d 	beq.w	8021c7e <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2d2>
 8021a64:	ee7a 5ae8 	vsub.f32	s11, s21, s17
 8021a68:	ee3f 7a4b 	vsub.f32	s14, s30, s22
 8021a6c:	ee7b 7a69 	vsub.f32	s15, s22, s19
 8021a70:	ee3f 6aea 	vsub.f32	s12, s31, s21
 8021a74:	ee25 7ac7 	vnmul.f32	s14, s11, s14
 8021a78:	ee3b 5aea 	vsub.f32	s10, s23, s21
 8021a7c:	eea6 7a27 	vfma.f32	s14, s12, s15
 8021a80:	ee3c 6a4b 	vsub.f32	s12, s24, s22
 8021a84:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 8021a88:	ee25 6ac6 	vnmul.f32	s12, s11, s12
 8021a8c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8021a90:	eea5 6a27 	vfma.f32	s12, s10, s15
 8021a94:	eddf 4a8b 	vldr	s9, [pc, #556]	@ 8021cc4 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x318>
 8021a98:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
 8021a9c:	bf48      	it	mi
 8021a9e:	eeb1 7a47 	vnegmi.f32	s14, s14
 8021aa2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8021aa6:	eeb4 7ae4 	vcmpe.f32	s14, s9
 8021aaa:	bf48      	it	mi
 8021aac:	eeb1 6a46 	vnegmi.f32	s12, s12
 8021ab0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8021ab4:	eeb5 5a00 	vmov.f32	s10, #80	@ 0x3e800000  0.250
 8021ab8:	f340 80aa 	ble.w	8021c10 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x264>
 8021abc:	eeb4 6ae4 	vcmpe.f32	s12, s9
 8021ac0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8021ac4:	dd5c      	ble.n	8021b80 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x1d4>
 8021ac6:	ee65 5aa5 	vmul.f32	s11, s11, s11
 8021aca:	ee37 7a06 	vadd.f32	s14, s14, s12
 8021ace:	eee7 5aa7 	vfma.f32	s11, s15, s15
 8021ad2:	ee27 7a07 	vmul.f32	s14, s14, s14
 8021ad6:	ee65 7a85 	vmul.f32	s15, s11, s10
 8021ada:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8021ade:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8021ae2:	f200 80cc 	bhi.w	8021c7e <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2d2>
 8021ae6:	ee7b 0aef 	vsub.f32	s1, s23, s31
 8021aea:	ee3c 0a4f 	vsub.f32	s0, s24, s30
 8021aee:	f000 f934 	bl	8021d5a <atan2f>
 8021af2:	ee7f 0ae8 	vsub.f32	s1, s31, s17
 8021af6:	eeb0 8a40 	vmov.f32	s16, s0
 8021afa:	ee3f 0a69 	vsub.f32	s0, s30, s19
 8021afe:	f000 f92c 	bl	8021d5a <atan2f>
 8021b02:	ee38 fa40 	vsub.f32	s30, s16, s0
 8021b06:	ee7a 0aeb 	vsub.f32	s1, s21, s23
 8021b0a:	eeb5 fac0 	vcmpe.f32	s30, #0.0
 8021b0e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8021b12:	ee3b 0a4c 	vsub.f32	s0, s22, s24
 8021b16:	bf48      	it	mi
 8021b18:	eeb1 fa4f 	vnegmi.f32	s30, s30
 8021b1c:	f000 f91d 	bl	8021d5a <atan2f>
 8021b20:	ee30 0a48 	vsub.f32	s0, s0, s16
 8021b24:	eddf 7a68 	vldr	s15, [pc, #416]	@ 8021cc8 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x31c>
 8021b28:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8021b2c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8021b30:	eeb4 fae7 	vcmpe.f32	s30, s15
 8021b34:	bf48      	it	mi
 8021b36:	eeb1 0a40 	vnegmi.f32	s0, s0
 8021b3a:	eddf 7a63 	vldr	s15, [pc, #396]	@ 8021cc8 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x31c>
 8021b3e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8021b42:	bfa8      	it	ge
 8021b44:	ed9f 7a61 	vldrge	s14, [pc, #388]	@ 8021ccc <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x320>
 8021b48:	eeb4 0ae7 	vcmpe.f32	s0, s15
 8021b4c:	bfa8      	it	ge
 8021b4e:	ee37 fa4f 	vsubge.f32	s30, s14, s30
 8021b52:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8021b56:	bfa8      	it	ge
 8021b58:	ed9f 7a5c 	vldrge	s14, [pc, #368]	@ 8021ccc <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x320>
 8021b5c:	eddf 7a5c 	vldr	s15, [pc, #368]	@ 8021cd0 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x324>
 8021b60:	bfa8      	it	ge
 8021b62:	ee37 0a40 	vsubge.f32	s0, s14, s0
 8021b66:	ee3f 0a00 	vadd.f32	s0, s30, s0
 8021b6a:	eeb4 0ae7 	vcmpe.f32	s0, s15
 8021b6e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8021b72:	f140 8084 	bpl.w	8021c7e <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2d2>
 8021b76:	eef0 0a4a 	vmov.f32	s1, s20
 8021b7a:	eeb0 0a49 	vmov.f32	s0, s18
 8021b7e:	e040      	b.n	8021c02 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x256>
 8021b80:	ee67 7aa7 	vmul.f32	s15, s15, s15
 8021b84:	ee27 7a07 	vmul.f32	s14, s14, s14
 8021b88:	eee5 7aa5 	vfma.f32	s15, s11, s11
 8021b8c:	ee67 7a85 	vmul.f32	s15, s15, s10
 8021b90:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8021b94:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8021b98:	d871      	bhi.n	8021c7e <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2d2>
 8021b9a:	ee7b 0aef 	vsub.f32	s1, s23, s31
 8021b9e:	ee3c 0a4f 	vsub.f32	s0, s24, s30
 8021ba2:	f000 f8da 	bl	8021d5a <atan2f>
 8021ba6:	ee7f 0ae8 	vsub.f32	s1, s31, s17
 8021baa:	eeb0 8a40 	vmov.f32	s16, s0
 8021bae:	ee3f 0a69 	vsub.f32	s0, s30, s19
 8021bb2:	f000 f8d2 	bl	8021d5a <atan2f>
 8021bb6:	ee38 0a40 	vsub.f32	s0, s16, s0
 8021bba:	eddf 7a43 	vldr	s15, [pc, #268]	@ 8021cc8 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x31c>
 8021bbe:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8021bc2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8021bc6:	bf48      	it	mi
 8021bc8:	eeb1 0a40 	vnegmi.f32	s0, s0
 8021bcc:	eeb4 0ae7 	vcmpe.f32	s0, s15
 8021bd0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8021bd4:	bfa4      	itt	ge
 8021bd6:	eddf 7a3d 	vldrge	s15, [pc, #244]	@ 8021ccc <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x320>
 8021bda:	ee37 0ac0 	vsubge.f32	s0, s15, s0
 8021bde:	eddf 7a3c 	vldr	s15, [pc, #240]	@ 8021cd0 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x324>
 8021be2:	eeb4 0ae7 	vcmpe.f32	s0, s15
 8021be6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8021bea:	d548      	bpl.n	8021c7e <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2d2>
 8021bec:	eef0 0a4f 	vmov.f32	s1, s30
 8021bf0:	eeb0 0a6f 	vmov.f32	s0, s31
 8021bf4:	4620      	mov	r0, r4
 8021bf6:	f7ea fd83 	bl	800c700 <_ZN8touchgfx6Canvas6lineToIfEEvT_S2_>
 8021bfa:	eef0 0a4c 	vmov.f32	s1, s24
 8021bfe:	eeb0 0a6b 	vmov.f32	s0, s23
 8021c02:	4620      	mov	r0, r4
 8021c04:	f7ea fd7c 	bl	800c700 <_ZN8touchgfx6Canvas6lineToIfEEvT_S2_>
 8021c08:	b005      	add	sp, #20
 8021c0a:	ecbd 8b10 	vpop	{d8-d15}
 8021c0e:	bd30      	pop	{r4, r5, pc}
 8021c10:	ed9f 7a2c 	vldr	s14, [pc, #176]	@ 8021cc4 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x318>
 8021c14:	eeb4 6ac7 	vcmpe.f32	s12, s14
 8021c18:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8021c1c:	dd19      	ble.n	8021c52 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2a6>
 8021c1e:	ee67 7aa7 	vmul.f32	s15, s15, s15
 8021c22:	ee26 7a06 	vmul.f32	s14, s12, s12
 8021c26:	eee5 7aa5 	vfma.f32	s15, s11, s11
 8021c2a:	ee67 7a85 	vmul.f32	s15, s15, s10
 8021c2e:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8021c32:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8021c36:	d822      	bhi.n	8021c7e <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2d2>
 8021c38:	ee7a 0aeb 	vsub.f32	s1, s21, s23
 8021c3c:	ee3b 0a4c 	vsub.f32	s0, s22, s24
 8021c40:	f000 f88b 	bl	8021d5a <atan2f>
 8021c44:	ee7b 0aef 	vsub.f32	s1, s23, s31
 8021c48:	eeb0 8a40 	vmov.f32	s16, s0
 8021c4c:	ee3c 0a4f 	vsub.f32	s0, s24, s30
 8021c50:	e7af      	b.n	8021bb2 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x206>
 8021c52:	ee78 7aaa 	vadd.f32	s15, s17, s21
 8021c56:	eeb0 7a49 	vmov.f32	s14, s18
 8021c5a:	eea7 7ae6 	vfms.f32	s14, s15, s13
 8021c5e:	ee79 7a8b 	vadd.f32	s15, s19, s22
 8021c62:	eeb0 6a4a 	vmov.f32	s12, s20
 8021c66:	eea7 6ae6 	vfms.f32	s12, s15, s13
 8021c6a:	ee66 7a06 	vmul.f32	s15, s12, s12
 8021c6e:	eee7 7a07 	vfma.f32	s15, s14, s14
 8021c72:	eef4 7ac5 	vcmpe.f32	s15, s10
 8021c76:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8021c7a:	f67f af7c 	bls.w	8021b76 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x1ca>
 8021c7e:	3501      	adds	r5, #1
 8021c80:	eef0 0a69 	vmov.f32	s1, s19
 8021c84:	eeb0 0a68 	vmov.f32	s0, s17
 8021c88:	4629      	mov	r1, r5
 8021c8a:	eef0 3a4a 	vmov.f32	s7, s20
 8021c8e:	eeb0 3a49 	vmov.f32	s6, s18
 8021c92:	eef0 2a6e 	vmov.f32	s5, s29
 8021c96:	eeb0 2a4e 	vmov.f32	s4, s28
 8021c9a:	eef0 1a6d 	vmov.f32	s3, s27
 8021c9e:	eeb0 1a4d 	vmov.f32	s2, s26
 8021ca2:	4620      	mov	r0, r4
 8021ca4:	f7ff fe82 	bl	80219ac <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj>
 8021ca8:	eeb0 ca6c 	vmov.f32	s24, s25
 8021cac:	eddd ba01 	vldr	s23, [sp, #4]
 8021cb0:	ed9d fa02 	vldr	s30, [sp, #8]
 8021cb4:	eddd fa03 	vldr	s31, [sp, #12]
 8021cb8:	eef0 9a4a 	vmov.f32	s19, s20
 8021cbc:	eef0 8a49 	vmov.f32	s17, s18
 8021cc0:	e68a      	b.n	80219d8 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2c>
 8021cc2:	bf00      	nop
 8021cc4:	2edbe6ff 	.word	0x2edbe6ff
 8021cc8:	40490fdb 	.word	0x40490fdb
 8021ccc:	40c90fdb 	.word	0x40c90fdb
 8021cd0:	3dcccccd 	.word	0x3dcccccd

08021cd4 <_ZN8touchgfx6CanvasD1Ev>:
 8021cd4:	b510      	push	{r4, lr}
 8021cd6:	4b04      	ldr	r3, [pc, #16]	@ (8021ce8 <_ZN8touchgfx6CanvasD1Ev+0x14>)
 8021cd8:	4604      	mov	r4, r0
 8021cda:	f840 3b14 	str.w	r3, [r0], #20
 8021cde:	f7eb fe98 	bl	800da12 <_ZN8touchgfx7OutlineD1Ev>
 8021ce2:	4620      	mov	r0, r4
 8021ce4:	bd10      	pop	{r4, pc}
 8021ce6:	bf00      	nop
 8021ce8:	08025558 	.word	0x08025558

08021cec <_ZN8touchgfx6CanvasD0Ev>:
 8021cec:	b510      	push	{r4, lr}
 8021cee:	4604      	mov	r4, r0
 8021cf0:	f7ff fff0 	bl	8021cd4 <_ZN8touchgfx6CanvasD1Ev>
 8021cf4:	4620      	mov	r0, r4
 8021cf6:	2174      	movs	r1, #116	@ 0x74
 8021cf8:	f000 f807 	bl	8021d0a <_ZdlPvj>
 8021cfc:	4620      	mov	r0, r4
 8021cfe:	bd10      	pop	{r4, pc}

08021d00 <__aeabi_atexit>:
 8021d00:	460b      	mov	r3, r1
 8021d02:	4601      	mov	r1, r0
 8021d04:	4618      	mov	r0, r3
 8021d06:	f001 b81f 	b.w	8022d48 <__cxa_atexit>

08021d0a <_ZdlPvj>:
 8021d0a:	f000 b812 	b.w	8021d32 <_ZdlPv>

08021d0e <__cxa_guard_acquire>:
 8021d0e:	6802      	ldr	r2, [r0, #0]
 8021d10:	07d2      	lsls	r2, r2, #31
 8021d12:	4603      	mov	r3, r0
 8021d14:	d405      	bmi.n	8021d22 <__cxa_guard_acquire+0x14>
 8021d16:	7842      	ldrb	r2, [r0, #1]
 8021d18:	b102      	cbz	r2, 8021d1c <__cxa_guard_acquire+0xe>
 8021d1a:	deff      	udf	#255	@ 0xff
 8021d1c:	2001      	movs	r0, #1
 8021d1e:	7058      	strb	r0, [r3, #1]
 8021d20:	4770      	bx	lr
 8021d22:	2000      	movs	r0, #0
 8021d24:	4770      	bx	lr

08021d26 <__cxa_guard_release>:
 8021d26:	2301      	movs	r3, #1
 8021d28:	6003      	str	r3, [r0, #0]
 8021d2a:	4770      	bx	lr

08021d2c <__cxa_pure_virtual>:
 8021d2c:	b508      	push	{r3, lr}
 8021d2e:	f000 f80f 	bl	8021d50 <_ZSt9terminatev>

08021d32 <_ZdlPv>:
 8021d32:	f000 bf53 	b.w	8022bdc <free>

08021d36 <_ZN10__cxxabiv111__terminateEPFvvE>:
 8021d36:	b508      	push	{r3, lr}
 8021d38:	4780      	blx	r0
 8021d3a:	f000 ff1b 	bl	8022b74 <abort>
	...

08021d40 <_ZSt13get_terminatev>:
 8021d40:	4b02      	ldr	r3, [pc, #8]	@ (8021d4c <_ZSt13get_terminatev+0xc>)
 8021d42:	6818      	ldr	r0, [r3, #0]
 8021d44:	f3bf 8f5b 	dmb	ish
 8021d48:	4770      	bx	lr
 8021d4a:	bf00      	nop
 8021d4c:	20000210 	.word	0x20000210

08021d50 <_ZSt9terminatev>:
 8021d50:	b508      	push	{r3, lr}
 8021d52:	f7ff fff5 	bl	8021d40 <_ZSt13get_terminatev>
 8021d56:	f7ff ffee 	bl	8021d36 <_ZN10__cxxabiv111__terminateEPFvvE>

08021d5a <atan2f>:
 8021d5a:	f000 b94d 	b.w	8021ff8 <__ieee754_atan2f>
	...

08021d60 <sqrtf>:
 8021d60:	b508      	push	{r3, lr}
 8021d62:	ed2d 8b02 	vpush	{d8}
 8021d66:	eeb0 8a40 	vmov.f32	s16, s0
 8021d6a:	f000 f8a1 	bl	8021eb0 <__ieee754_sqrtf>
 8021d6e:	eeb4 8a48 	vcmp.f32	s16, s16
 8021d72:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8021d76:	d60c      	bvs.n	8021d92 <sqrtf+0x32>
 8021d78:	eddf 8a07 	vldr	s17, [pc, #28]	@ 8021d98 <sqrtf+0x38>
 8021d7c:	eeb4 8ae8 	vcmpe.f32	s16, s17
 8021d80:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8021d84:	d505      	bpl.n	8021d92 <sqrtf+0x32>
 8021d86:	f001 f9a7 	bl	80230d8 <__errno>
 8021d8a:	ee88 0aa8 	vdiv.f32	s0, s17, s17
 8021d8e:	2321      	movs	r3, #33	@ 0x21
 8021d90:	6003      	str	r3, [r0, #0]
 8021d92:	ecbd 8b02 	vpop	{d8}
 8021d96:	bd08      	pop	{r3, pc}
 8021d98:	00000000 	.word	0x00000000

08021d9c <cosf>:
 8021d9c:	ee10 3a10 	vmov	r3, s0
 8021da0:	b507      	push	{r0, r1, r2, lr}
 8021da2:	4a1e      	ldr	r2, [pc, #120]	@ (8021e1c <cosf+0x80>)
 8021da4:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 8021da8:	4293      	cmp	r3, r2
 8021daa:	d806      	bhi.n	8021dba <cosf+0x1e>
 8021dac:	eddf 0a1c 	vldr	s1, [pc, #112]	@ 8021e20 <cosf+0x84>
 8021db0:	b003      	add	sp, #12
 8021db2:	f85d eb04 	ldr.w	lr, [sp], #4
 8021db6:	f000 b87f 	b.w	8021eb8 <__kernel_cosf>
 8021dba:	f1b3 4fff 	cmp.w	r3, #2139095040	@ 0x7f800000
 8021dbe:	d304      	bcc.n	8021dca <cosf+0x2e>
 8021dc0:	ee30 0a40 	vsub.f32	s0, s0, s0
 8021dc4:	b003      	add	sp, #12
 8021dc6:	f85d fb04 	ldr.w	pc, [sp], #4
 8021dca:	4668      	mov	r0, sp
 8021dcc:	f000 f9b4 	bl	8022138 <__ieee754_rem_pio2f>
 8021dd0:	f000 0003 	and.w	r0, r0, #3
 8021dd4:	2801      	cmp	r0, #1
 8021dd6:	d009      	beq.n	8021dec <cosf+0x50>
 8021dd8:	2802      	cmp	r0, #2
 8021dda:	d010      	beq.n	8021dfe <cosf+0x62>
 8021ddc:	b9b0      	cbnz	r0, 8021e0c <cosf+0x70>
 8021dde:	eddd 0a01 	vldr	s1, [sp, #4]
 8021de2:	ed9d 0a00 	vldr	s0, [sp]
 8021de6:	f000 f867 	bl	8021eb8 <__kernel_cosf>
 8021dea:	e7eb      	b.n	8021dc4 <cosf+0x28>
 8021dec:	eddd 0a01 	vldr	s1, [sp, #4]
 8021df0:	ed9d 0a00 	vldr	s0, [sp]
 8021df4:	f000 f8b8 	bl	8021f68 <__kernel_sinf>
 8021df8:	eeb1 0a40 	vneg.f32	s0, s0
 8021dfc:	e7e2      	b.n	8021dc4 <cosf+0x28>
 8021dfe:	eddd 0a01 	vldr	s1, [sp, #4]
 8021e02:	ed9d 0a00 	vldr	s0, [sp]
 8021e06:	f000 f857 	bl	8021eb8 <__kernel_cosf>
 8021e0a:	e7f5      	b.n	8021df8 <cosf+0x5c>
 8021e0c:	eddd 0a01 	vldr	s1, [sp, #4]
 8021e10:	ed9d 0a00 	vldr	s0, [sp]
 8021e14:	2001      	movs	r0, #1
 8021e16:	f000 f8a7 	bl	8021f68 <__kernel_sinf>
 8021e1a:	e7d3      	b.n	8021dc4 <cosf+0x28>
 8021e1c:	3f490fd8 	.word	0x3f490fd8
 8021e20:	00000000 	.word	0x00000000

08021e24 <sinf>:
 8021e24:	ee10 3a10 	vmov	r3, s0
 8021e28:	b507      	push	{r0, r1, r2, lr}
 8021e2a:	4a1f      	ldr	r2, [pc, #124]	@ (8021ea8 <sinf+0x84>)
 8021e2c:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 8021e30:	4293      	cmp	r3, r2
 8021e32:	d807      	bhi.n	8021e44 <sinf+0x20>
 8021e34:	eddf 0a1d 	vldr	s1, [pc, #116]	@ 8021eac <sinf+0x88>
 8021e38:	2000      	movs	r0, #0
 8021e3a:	b003      	add	sp, #12
 8021e3c:	f85d eb04 	ldr.w	lr, [sp], #4
 8021e40:	f000 b892 	b.w	8021f68 <__kernel_sinf>
 8021e44:	f1b3 4fff 	cmp.w	r3, #2139095040	@ 0x7f800000
 8021e48:	d304      	bcc.n	8021e54 <sinf+0x30>
 8021e4a:	ee30 0a40 	vsub.f32	s0, s0, s0
 8021e4e:	b003      	add	sp, #12
 8021e50:	f85d fb04 	ldr.w	pc, [sp], #4
 8021e54:	4668      	mov	r0, sp
 8021e56:	f000 f96f 	bl	8022138 <__ieee754_rem_pio2f>
 8021e5a:	f000 0003 	and.w	r0, r0, #3
 8021e5e:	2801      	cmp	r0, #1
 8021e60:	d00a      	beq.n	8021e78 <sinf+0x54>
 8021e62:	2802      	cmp	r0, #2
 8021e64:	d00f      	beq.n	8021e86 <sinf+0x62>
 8021e66:	b9c0      	cbnz	r0, 8021e9a <sinf+0x76>
 8021e68:	eddd 0a01 	vldr	s1, [sp, #4]
 8021e6c:	ed9d 0a00 	vldr	s0, [sp]
 8021e70:	2001      	movs	r0, #1
 8021e72:	f000 f879 	bl	8021f68 <__kernel_sinf>
 8021e76:	e7ea      	b.n	8021e4e <sinf+0x2a>
 8021e78:	eddd 0a01 	vldr	s1, [sp, #4]
 8021e7c:	ed9d 0a00 	vldr	s0, [sp]
 8021e80:	f000 f81a 	bl	8021eb8 <__kernel_cosf>
 8021e84:	e7e3      	b.n	8021e4e <sinf+0x2a>
 8021e86:	eddd 0a01 	vldr	s1, [sp, #4]
 8021e8a:	ed9d 0a00 	vldr	s0, [sp]
 8021e8e:	2001      	movs	r0, #1
 8021e90:	f000 f86a 	bl	8021f68 <__kernel_sinf>
 8021e94:	eeb1 0a40 	vneg.f32	s0, s0
 8021e98:	e7d9      	b.n	8021e4e <sinf+0x2a>
 8021e9a:	eddd 0a01 	vldr	s1, [sp, #4]
 8021e9e:	ed9d 0a00 	vldr	s0, [sp]
 8021ea2:	f000 f809 	bl	8021eb8 <__kernel_cosf>
 8021ea6:	e7f5      	b.n	8021e94 <sinf+0x70>
 8021ea8:	3f490fd8 	.word	0x3f490fd8
 8021eac:	00000000 	.word	0x00000000

08021eb0 <__ieee754_sqrtf>:
 8021eb0:	eeb1 0ac0 	vsqrt.f32	s0, s0
 8021eb4:	4770      	bx	lr
	...

08021eb8 <__kernel_cosf>:
 8021eb8:	ee10 3a10 	vmov	r3, s0
 8021ebc:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 8021ec0:	f1b3 5f48 	cmp.w	r3, #838860800	@ 0x32000000
 8021ec4:	eef0 6a40 	vmov.f32	s13, s0
 8021ec8:	eeb7 0a00 	vmov.f32	s0, #112	@ 0x3f800000  1.0
 8021ecc:	d204      	bcs.n	8021ed8 <__kernel_cosf+0x20>
 8021ece:	eefd 7ae6 	vcvt.s32.f32	s15, s13
 8021ed2:	ee17 2a90 	vmov	r2, s15
 8021ed6:	b342      	cbz	r2, 8021f2a <__kernel_cosf+0x72>
 8021ed8:	ee26 7aa6 	vmul.f32	s14, s13, s13
 8021edc:	eddf 7a1a 	vldr	s15, [pc, #104]	@ 8021f48 <__kernel_cosf+0x90>
 8021ee0:	ed9f 6a1a 	vldr	s12, [pc, #104]	@ 8021f4c <__kernel_cosf+0x94>
 8021ee4:	4a1a      	ldr	r2, [pc, #104]	@ (8021f50 <__kernel_cosf+0x98>)
 8021ee6:	eea7 6a27 	vfma.f32	s12, s14, s15
 8021eea:	4293      	cmp	r3, r2
 8021eec:	eddf 7a19 	vldr	s15, [pc, #100]	@ 8021f54 <__kernel_cosf+0x9c>
 8021ef0:	eee6 7a07 	vfma.f32	s15, s12, s14
 8021ef4:	ed9f 6a18 	vldr	s12, [pc, #96]	@ 8021f58 <__kernel_cosf+0xa0>
 8021ef8:	eea7 6a87 	vfma.f32	s12, s15, s14
 8021efc:	eddf 7a17 	vldr	s15, [pc, #92]	@ 8021f5c <__kernel_cosf+0xa4>
 8021f00:	eee6 7a07 	vfma.f32	s15, s12, s14
 8021f04:	ed9f 6a16 	vldr	s12, [pc, #88]	@ 8021f60 <__kernel_cosf+0xa8>
 8021f08:	eea7 6a87 	vfma.f32	s12, s15, s14
 8021f0c:	ee60 0ae6 	vnmul.f32	s1, s1, s13
 8021f10:	ee26 6a07 	vmul.f32	s12, s12, s14
 8021f14:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 8021f18:	eee7 0a06 	vfma.f32	s1, s14, s12
 8021f1c:	ee67 7a27 	vmul.f32	s15, s14, s15
 8021f20:	d804      	bhi.n	8021f2c <__kernel_cosf+0x74>
 8021f22:	ee77 7ae0 	vsub.f32	s15, s15, s1
 8021f26:	ee30 0a67 	vsub.f32	s0, s0, s15
 8021f2a:	4770      	bx	lr
 8021f2c:	4a0d      	ldr	r2, [pc, #52]	@ (8021f64 <__kernel_cosf+0xac>)
 8021f2e:	4293      	cmp	r3, r2
 8021f30:	bf9a      	itte	ls
 8021f32:	f103 437f 	addls.w	r3, r3, #4278190080	@ 0xff000000
 8021f36:	ee07 3a10 	vmovls	s14, r3
 8021f3a:	eeb5 7a02 	vmovhi.f32	s14, #82	@ 0x3e900000  0.2812500
 8021f3e:	ee30 0a47 	vsub.f32	s0, s0, s14
 8021f42:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8021f46:	e7ec      	b.n	8021f22 <__kernel_cosf+0x6a>
 8021f48:	ad47d74e 	.word	0xad47d74e
 8021f4c:	310f74f6 	.word	0x310f74f6
 8021f50:	3e999999 	.word	0x3e999999
 8021f54:	b493f27c 	.word	0xb493f27c
 8021f58:	37d00d01 	.word	0x37d00d01
 8021f5c:	bab60b61 	.word	0xbab60b61
 8021f60:	3d2aaaab 	.word	0x3d2aaaab
 8021f64:	3f480000 	.word	0x3f480000

08021f68 <__kernel_sinf>:
 8021f68:	ee10 3a10 	vmov	r3, s0
 8021f6c:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 8021f70:	f1b3 5f48 	cmp.w	r3, #838860800	@ 0x32000000
 8021f74:	d204      	bcs.n	8021f80 <__kernel_sinf+0x18>
 8021f76:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 8021f7a:	ee17 3a90 	vmov	r3, s15
 8021f7e:	b35b      	cbz	r3, 8021fd8 <__kernel_sinf+0x70>
 8021f80:	ee20 7a00 	vmul.f32	s14, s0, s0
 8021f84:	eddf 7a15 	vldr	s15, [pc, #84]	@ 8021fdc <__kernel_sinf+0x74>
 8021f88:	ed9f 6a15 	vldr	s12, [pc, #84]	@ 8021fe0 <__kernel_sinf+0x78>
 8021f8c:	eea7 6a27 	vfma.f32	s12, s14, s15
 8021f90:	eddf 7a14 	vldr	s15, [pc, #80]	@ 8021fe4 <__kernel_sinf+0x7c>
 8021f94:	eee6 7a07 	vfma.f32	s15, s12, s14
 8021f98:	ed9f 6a13 	vldr	s12, [pc, #76]	@ 8021fe8 <__kernel_sinf+0x80>
 8021f9c:	eea7 6a87 	vfma.f32	s12, s15, s14
 8021fa0:	eddf 7a12 	vldr	s15, [pc, #72]	@ 8021fec <__kernel_sinf+0x84>
 8021fa4:	ee60 6a07 	vmul.f32	s13, s0, s14
 8021fa8:	eee6 7a07 	vfma.f32	s15, s12, s14
 8021fac:	b930      	cbnz	r0, 8021fbc <__kernel_sinf+0x54>
 8021fae:	ed9f 6a10 	vldr	s12, [pc, #64]	@ 8021ff0 <__kernel_sinf+0x88>
 8021fb2:	eea7 6a27 	vfma.f32	s12, s14, s15
 8021fb6:	eea6 0a26 	vfma.f32	s0, s12, s13
 8021fba:	4770      	bx	lr
 8021fbc:	ee67 7ae6 	vnmul.f32	s15, s15, s13
 8021fc0:	eeb6 6a00 	vmov.f32	s12, #96	@ 0x3f000000  0.5
 8021fc4:	eee0 7a86 	vfma.f32	s15, s1, s12
 8021fc8:	eed7 0a87 	vfnms.f32	s1, s15, s14
 8021fcc:	eddf 7a09 	vldr	s15, [pc, #36]	@ 8021ff4 <__kernel_sinf+0x8c>
 8021fd0:	eee6 0aa7 	vfma.f32	s1, s13, s15
 8021fd4:	ee30 0a60 	vsub.f32	s0, s0, s1
 8021fd8:	4770      	bx	lr
 8021fda:	bf00      	nop
 8021fdc:	2f2ec9d3 	.word	0x2f2ec9d3
 8021fe0:	b2d72f34 	.word	0xb2d72f34
 8021fe4:	3638ef1b 	.word	0x3638ef1b
 8021fe8:	b9500d01 	.word	0xb9500d01
 8021fec:	3c088889 	.word	0x3c088889
 8021ff0:	be2aaaab 	.word	0xbe2aaaab
 8021ff4:	3e2aaaab 	.word	0x3e2aaaab

08021ff8 <__ieee754_atan2f>:
 8021ff8:	ee10 2a90 	vmov	r2, s1
 8021ffc:	f022 4100 	bic.w	r1, r2, #2147483648	@ 0x80000000
 8022000:	f1b1 4fff 	cmp.w	r1, #2139095040	@ 0x7f800000
 8022004:	b510      	push	{r4, lr}
 8022006:	eef0 7a40 	vmov.f32	s15, s0
 802200a:	d806      	bhi.n	802201a <__ieee754_atan2f+0x22>
 802200c:	ee10 0a10 	vmov	r0, s0
 8022010:	f020 4300 	bic.w	r3, r0, #2147483648	@ 0x80000000
 8022014:	f1b3 4fff 	cmp.w	r3, #2139095040	@ 0x7f800000
 8022018:	d904      	bls.n	8022024 <__ieee754_atan2f+0x2c>
 802201a:	ee77 7aa0 	vadd.f32	s15, s15, s1
 802201e:	eeb0 0a67 	vmov.f32	s0, s15
 8022022:	bd10      	pop	{r4, pc}
 8022024:	f1b2 5f7e 	cmp.w	r2, #1065353216	@ 0x3f800000
 8022028:	d103      	bne.n	8022032 <__ieee754_atan2f+0x3a>
 802202a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802202e:	f000 b9b3 	b.w	8022398 <atanf>
 8022032:	1794      	asrs	r4, r2, #30
 8022034:	f004 0402 	and.w	r4, r4, #2
 8022038:	ea44 74d0 	orr.w	r4, r4, r0, lsr #31
 802203c:	b943      	cbnz	r3, 8022050 <__ieee754_atan2f+0x58>
 802203e:	2c02      	cmp	r4, #2
 8022040:	d05e      	beq.n	8022100 <__ieee754_atan2f+0x108>
 8022042:	ed9f 7a34 	vldr	s14, [pc, #208]	@ 8022114 <__ieee754_atan2f+0x11c>
 8022046:	2c03      	cmp	r4, #3
 8022048:	bf08      	it	eq
 802204a:	eef0 7a47 	vmoveq.f32	s15, s14
 802204e:	e7e6      	b.n	802201e <__ieee754_atan2f+0x26>
 8022050:	b941      	cbnz	r1, 8022064 <__ieee754_atan2f+0x6c>
 8022052:	eddf 7a31 	vldr	s15, [pc, #196]	@ 8022118 <__ieee754_atan2f+0x120>
 8022056:	ed9f 7a31 	vldr	s14, [pc, #196]	@ 802211c <__ieee754_atan2f+0x124>
 802205a:	2800      	cmp	r0, #0
 802205c:	bfa8      	it	ge
 802205e:	eef0 7a47 	vmovge.f32	s15, s14
 8022062:	e7dc      	b.n	802201e <__ieee754_atan2f+0x26>
 8022064:	f1b1 4fff 	cmp.w	r1, #2139095040	@ 0x7f800000
 8022068:	d110      	bne.n	802208c <__ieee754_atan2f+0x94>
 802206a:	f1b3 4fff 	cmp.w	r3, #2139095040	@ 0x7f800000
 802206e:	f104 34ff 	add.w	r4, r4, #4294967295
 8022072:	d107      	bne.n	8022084 <__ieee754_atan2f+0x8c>
 8022074:	2c02      	cmp	r4, #2
 8022076:	d846      	bhi.n	8022106 <__ieee754_atan2f+0x10e>
 8022078:	4b29      	ldr	r3, [pc, #164]	@ (8022120 <__ieee754_atan2f+0x128>)
 802207a:	eb03 0384 	add.w	r3, r3, r4, lsl #2
 802207e:	edd3 7a00 	vldr	s15, [r3]
 8022082:	e7cc      	b.n	802201e <__ieee754_atan2f+0x26>
 8022084:	2c02      	cmp	r4, #2
 8022086:	d841      	bhi.n	802210c <__ieee754_atan2f+0x114>
 8022088:	4b26      	ldr	r3, [pc, #152]	@ (8022124 <__ieee754_atan2f+0x12c>)
 802208a:	e7f6      	b.n	802207a <__ieee754_atan2f+0x82>
 802208c:	f1b3 4fff 	cmp.w	r3, #2139095040	@ 0x7f800000
 8022090:	d0df      	beq.n	8022052 <__ieee754_atan2f+0x5a>
 8022092:	1a5b      	subs	r3, r3, r1
 8022094:	f1b3 5ff4 	cmp.w	r3, #511705088	@ 0x1e800000
 8022098:	ea4f 51e3 	mov.w	r1, r3, asr #23
 802209c:	da1a      	bge.n	80220d4 <__ieee754_atan2f+0xdc>
 802209e:	2a00      	cmp	r2, #0
 80220a0:	da01      	bge.n	80220a6 <__ieee754_atan2f+0xae>
 80220a2:	313c      	adds	r1, #60	@ 0x3c
 80220a4:	db19      	blt.n	80220da <__ieee754_atan2f+0xe2>
 80220a6:	ee87 0aa0 	vdiv.f32	s0, s15, s1
 80220aa:	f000 fa49 	bl	8022540 <fabsf>
 80220ae:	f000 f973 	bl	8022398 <atanf>
 80220b2:	eef0 7a40 	vmov.f32	s15, s0
 80220b6:	2c01      	cmp	r4, #1
 80220b8:	d012      	beq.n	80220e0 <__ieee754_atan2f+0xe8>
 80220ba:	2c02      	cmp	r4, #2
 80220bc:	d017      	beq.n	80220ee <__ieee754_atan2f+0xf6>
 80220be:	2c00      	cmp	r4, #0
 80220c0:	d0ad      	beq.n	802201e <__ieee754_atan2f+0x26>
 80220c2:	ed9f 7a19 	vldr	s14, [pc, #100]	@ 8022128 <__ieee754_atan2f+0x130>
 80220c6:	ee77 7a87 	vadd.f32	s15, s15, s14
 80220ca:	ed9f 7a18 	vldr	s14, [pc, #96]	@ 802212c <__ieee754_atan2f+0x134>
 80220ce:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80220d2:	e7a4      	b.n	802201e <__ieee754_atan2f+0x26>
 80220d4:	eddf 7a11 	vldr	s15, [pc, #68]	@ 802211c <__ieee754_atan2f+0x124>
 80220d8:	e7ed      	b.n	80220b6 <__ieee754_atan2f+0xbe>
 80220da:	eddf 7a15 	vldr	s15, [pc, #84]	@ 8022130 <__ieee754_atan2f+0x138>
 80220de:	e7ea      	b.n	80220b6 <__ieee754_atan2f+0xbe>
 80220e0:	ee17 3a90 	vmov	r3, s15
 80220e4:	f103 4300 	add.w	r3, r3, #2147483648	@ 0x80000000
 80220e8:	ee07 3a90 	vmov	s15, r3
 80220ec:	e797      	b.n	802201e <__ieee754_atan2f+0x26>
 80220ee:	ed9f 7a0e 	vldr	s14, [pc, #56]	@ 8022128 <__ieee754_atan2f+0x130>
 80220f2:	ee77 7a87 	vadd.f32	s15, s15, s14
 80220f6:	ed9f 7a0d 	vldr	s14, [pc, #52]	@ 802212c <__ieee754_atan2f+0x134>
 80220fa:	ee77 7a67 	vsub.f32	s15, s14, s15
 80220fe:	e78e      	b.n	802201e <__ieee754_atan2f+0x26>
 8022100:	eddf 7a0a 	vldr	s15, [pc, #40]	@ 802212c <__ieee754_atan2f+0x134>
 8022104:	e78b      	b.n	802201e <__ieee754_atan2f+0x26>
 8022106:	eddf 7a0b 	vldr	s15, [pc, #44]	@ 8022134 <__ieee754_atan2f+0x13c>
 802210a:	e788      	b.n	802201e <__ieee754_atan2f+0x26>
 802210c:	eddf 7a08 	vldr	s15, [pc, #32]	@ 8022130 <__ieee754_atan2f+0x138>
 8022110:	e785      	b.n	802201e <__ieee754_atan2f+0x26>
 8022112:	bf00      	nop
 8022114:	c0490fdb 	.word	0xc0490fdb
 8022118:	bfc90fdb 	.word	0xbfc90fdb
 802211c:	3fc90fdb 	.word	0x3fc90fdb
 8022120:	08025570 	.word	0x08025570
 8022124:	08025564 	.word	0x08025564
 8022128:	33bbbd2e 	.word	0x33bbbd2e
 802212c:	40490fdb 	.word	0x40490fdb
 8022130:	00000000 	.word	0x00000000
 8022134:	3f490fdb 	.word	0x3f490fdb

08022138 <__ieee754_rem_pio2f>:
 8022138:	b5f0      	push	{r4, r5, r6, r7, lr}
 802213a:	ee10 6a10 	vmov	r6, s0
 802213e:	4b88      	ldr	r3, [pc, #544]	@ (8022360 <__ieee754_rem_pio2f+0x228>)
 8022140:	f026 4500 	bic.w	r5, r6, #2147483648	@ 0x80000000
 8022144:	429d      	cmp	r5, r3
 8022146:	b087      	sub	sp, #28
 8022148:	4604      	mov	r4, r0
 802214a:	d805      	bhi.n	8022158 <__ieee754_rem_pio2f+0x20>
 802214c:	2300      	movs	r3, #0
 802214e:	ed80 0a00 	vstr	s0, [r0]
 8022152:	6043      	str	r3, [r0, #4]
 8022154:	2000      	movs	r0, #0
 8022156:	e022      	b.n	802219e <__ieee754_rem_pio2f+0x66>
 8022158:	4b82      	ldr	r3, [pc, #520]	@ (8022364 <__ieee754_rem_pio2f+0x22c>)
 802215a:	429d      	cmp	r5, r3
 802215c:	d83a      	bhi.n	80221d4 <__ieee754_rem_pio2f+0x9c>
 802215e:	f026 4300 	bic.w	r3, r6, #2147483648	@ 0x80000000
 8022162:	2e00      	cmp	r6, #0
 8022164:	ed9f 7a80 	vldr	s14, [pc, #512]	@ 8022368 <__ieee754_rem_pio2f+0x230>
 8022168:	4a80      	ldr	r2, [pc, #512]	@ (802236c <__ieee754_rem_pio2f+0x234>)
 802216a:	f023 030f 	bic.w	r3, r3, #15
 802216e:	dd18      	ble.n	80221a2 <__ieee754_rem_pio2f+0x6a>
 8022170:	4293      	cmp	r3, r2
 8022172:	ee70 7a47 	vsub.f32	s15, s0, s14
 8022176:	bf09      	itett	eq
 8022178:	ed9f 7a7d 	vldreq	s14, [pc, #500]	@ 8022370 <__ieee754_rem_pio2f+0x238>
 802217c:	eddf 6a7d 	vldrne	s13, [pc, #500]	@ 8022374 <__ieee754_rem_pio2f+0x23c>
 8022180:	eddf 6a7d 	vldreq	s13, [pc, #500]	@ 8022378 <__ieee754_rem_pio2f+0x240>
 8022184:	ee77 7ac7 	vsubeq.f32	s15, s15, s14
 8022188:	ee37 7ae6 	vsub.f32	s14, s15, s13
 802218c:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8022190:	ed80 7a00 	vstr	s14, [r0]
 8022194:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8022198:	edc0 7a01 	vstr	s15, [r0, #4]
 802219c:	2001      	movs	r0, #1
 802219e:	b007      	add	sp, #28
 80221a0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80221a2:	4293      	cmp	r3, r2
 80221a4:	ee70 7a07 	vadd.f32	s15, s0, s14
 80221a8:	bf09      	itett	eq
 80221aa:	ed9f 7a71 	vldreq	s14, [pc, #452]	@ 8022370 <__ieee754_rem_pio2f+0x238>
 80221ae:	eddf 6a71 	vldrne	s13, [pc, #452]	@ 8022374 <__ieee754_rem_pio2f+0x23c>
 80221b2:	eddf 6a71 	vldreq	s13, [pc, #452]	@ 8022378 <__ieee754_rem_pio2f+0x240>
 80221b6:	ee77 7a87 	vaddeq.f32	s15, s15, s14
 80221ba:	ee37 7aa6 	vadd.f32	s14, s15, s13
 80221be:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80221c2:	ed80 7a00 	vstr	s14, [r0]
 80221c6:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80221ca:	edc0 7a01 	vstr	s15, [r0, #4]
 80221ce:	f04f 30ff 	mov.w	r0, #4294967295
 80221d2:	e7e4      	b.n	802219e <__ieee754_rem_pio2f+0x66>
 80221d4:	4b69      	ldr	r3, [pc, #420]	@ (802237c <__ieee754_rem_pio2f+0x244>)
 80221d6:	429d      	cmp	r5, r3
 80221d8:	d873      	bhi.n	80222c2 <__ieee754_rem_pio2f+0x18a>
 80221da:	f000 f9b1 	bl	8022540 <fabsf>
 80221de:	ed9f 7a68 	vldr	s14, [pc, #416]	@ 8022380 <__ieee754_rem_pio2f+0x248>
 80221e2:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 80221e6:	eee0 7a07 	vfma.f32	s15, s0, s14
 80221ea:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80221ee:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 80221f2:	ee17 0a90 	vmov	r0, s15
 80221f6:	eddf 7a5c 	vldr	s15, [pc, #368]	@ 8022368 <__ieee754_rem_pio2f+0x230>
 80221fa:	eea7 0a67 	vfms.f32	s0, s14, s15
 80221fe:	281f      	cmp	r0, #31
 8022200:	eddf 7a5c 	vldr	s15, [pc, #368]	@ 8022374 <__ieee754_rem_pio2f+0x23c>
 8022204:	ee67 7a27 	vmul.f32	s15, s14, s15
 8022208:	eeb1 6a47 	vneg.f32	s12, s14
 802220c:	ee70 6a67 	vsub.f32	s13, s0, s15
 8022210:	ee16 1a90 	vmov	r1, s13
 8022214:	dc09      	bgt.n	802222a <__ieee754_rem_pio2f+0xf2>
 8022216:	4a5b      	ldr	r2, [pc, #364]	@ (8022384 <__ieee754_rem_pio2f+0x24c>)
 8022218:	1e47      	subs	r7, r0, #1
 802221a:	f026 4300 	bic.w	r3, r6, #2147483648	@ 0x80000000
 802221e:	f852 2027 	ldr.w	r2, [r2, r7, lsl #2]
 8022222:	f023 03ff 	bic.w	r3, r3, #255	@ 0xff
 8022226:	4293      	cmp	r3, r2
 8022228:	d107      	bne.n	802223a <__ieee754_rem_pio2f+0x102>
 802222a:	f3c1 52c7 	ubfx	r2, r1, #23, #8
 802222e:	ebc2 52d5 	rsb	r2, r2, r5, lsr #23
 8022232:	2a08      	cmp	r2, #8
 8022234:	ea4f 53e5 	mov.w	r3, r5, asr #23
 8022238:	dc14      	bgt.n	8022264 <__ieee754_rem_pio2f+0x12c>
 802223a:	6021      	str	r1, [r4, #0]
 802223c:	ed94 7a00 	vldr	s14, [r4]
 8022240:	ee30 0a47 	vsub.f32	s0, s0, s14
 8022244:	2e00      	cmp	r6, #0
 8022246:	ee30 0a67 	vsub.f32	s0, s0, s15
 802224a:	ed84 0a01 	vstr	s0, [r4, #4]
 802224e:	daa6      	bge.n	802219e <__ieee754_rem_pio2f+0x66>
 8022250:	eeb1 7a47 	vneg.f32	s14, s14
 8022254:	eeb1 0a40 	vneg.f32	s0, s0
 8022258:	ed84 7a00 	vstr	s14, [r4]
 802225c:	ed84 0a01 	vstr	s0, [r4, #4]
 8022260:	4240      	negs	r0, r0
 8022262:	e79c      	b.n	802219e <__ieee754_rem_pio2f+0x66>
 8022264:	eddf 5a42 	vldr	s11, [pc, #264]	@ 8022370 <__ieee754_rem_pio2f+0x238>
 8022268:	eef0 6a40 	vmov.f32	s13, s0
 802226c:	eee6 6a25 	vfma.f32	s13, s12, s11
 8022270:	ee70 7a66 	vsub.f32	s15, s0, s13
 8022274:	eee6 7a25 	vfma.f32	s15, s12, s11
 8022278:	eddf 5a3f 	vldr	s11, [pc, #252]	@ 8022378 <__ieee754_rem_pio2f+0x240>
 802227c:	eed7 7a25 	vfnms.f32	s15, s14, s11
 8022280:	ee76 5ae7 	vsub.f32	s11, s13, s15
 8022284:	ee15 2a90 	vmov	r2, s11
 8022288:	f3c2 51c7 	ubfx	r1, r2, #23, #8
 802228c:	1a5b      	subs	r3, r3, r1
 802228e:	2b19      	cmp	r3, #25
 8022290:	dc04      	bgt.n	802229c <__ieee754_rem_pio2f+0x164>
 8022292:	edc4 5a00 	vstr	s11, [r4]
 8022296:	eeb0 0a66 	vmov.f32	s0, s13
 802229a:	e7cf      	b.n	802223c <__ieee754_rem_pio2f+0x104>
 802229c:	eddf 5a3a 	vldr	s11, [pc, #232]	@ 8022388 <__ieee754_rem_pio2f+0x250>
 80222a0:	eeb0 0a66 	vmov.f32	s0, s13
 80222a4:	eea6 0a25 	vfma.f32	s0, s12, s11
 80222a8:	ee76 7ac0 	vsub.f32	s15, s13, s0
 80222ac:	eddf 6a37 	vldr	s13, [pc, #220]	@ 802238c <__ieee754_rem_pio2f+0x254>
 80222b0:	eee6 7a25 	vfma.f32	s15, s12, s11
 80222b4:	eed7 7a26 	vfnms.f32	s15, s14, s13
 80222b8:	ee30 7a67 	vsub.f32	s14, s0, s15
 80222bc:	ed84 7a00 	vstr	s14, [r4]
 80222c0:	e7bc      	b.n	802223c <__ieee754_rem_pio2f+0x104>
 80222c2:	f1b5 4fff 	cmp.w	r5, #2139095040	@ 0x7f800000
 80222c6:	d306      	bcc.n	80222d6 <__ieee754_rem_pio2f+0x19e>
 80222c8:	ee70 7a40 	vsub.f32	s15, s0, s0
 80222cc:	edc0 7a01 	vstr	s15, [r0, #4]
 80222d0:	edc0 7a00 	vstr	s15, [r0]
 80222d4:	e73e      	b.n	8022154 <__ieee754_rem_pio2f+0x1c>
 80222d6:	15ea      	asrs	r2, r5, #23
 80222d8:	3a86      	subs	r2, #134	@ 0x86
 80222da:	eba5 53c2 	sub.w	r3, r5, r2, lsl #23
 80222de:	ee07 3a90 	vmov	s15, r3
 80222e2:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80222e6:	eddf 6a2a 	vldr	s13, [pc, #168]	@ 8022390 <__ieee754_rem_pio2f+0x258>
 80222ea:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80222ee:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80222f2:	ed8d 7a03 	vstr	s14, [sp, #12]
 80222f6:	ee67 7aa6 	vmul.f32	s15, s15, s13
 80222fa:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80222fe:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8022302:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8022306:	ed8d 7a04 	vstr	s14, [sp, #16]
 802230a:	ee67 7aa6 	vmul.f32	s15, s15, s13
 802230e:	eef5 7a40 	vcmp.f32	s15, #0.0
 8022312:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8022316:	edcd 7a05 	vstr	s15, [sp, #20]
 802231a:	d11e      	bne.n	802235a <__ieee754_rem_pio2f+0x222>
 802231c:	eeb5 7a40 	vcmp.f32	s14, #0.0
 8022320:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8022324:	bf0c      	ite	eq
 8022326:	2301      	moveq	r3, #1
 8022328:	2302      	movne	r3, #2
 802232a:	491a      	ldr	r1, [pc, #104]	@ (8022394 <__ieee754_rem_pio2f+0x25c>)
 802232c:	9101      	str	r1, [sp, #4]
 802232e:	2102      	movs	r1, #2
 8022330:	9100      	str	r1, [sp, #0]
 8022332:	a803      	add	r0, sp, #12
 8022334:	4621      	mov	r1, r4
 8022336:	f000 f90b 	bl	8022550 <__kernel_rem_pio2f>
 802233a:	2e00      	cmp	r6, #0
 802233c:	f6bf af2f 	bge.w	802219e <__ieee754_rem_pio2f+0x66>
 8022340:	edd4 7a00 	vldr	s15, [r4]
 8022344:	eef1 7a67 	vneg.f32	s15, s15
 8022348:	edc4 7a00 	vstr	s15, [r4]
 802234c:	edd4 7a01 	vldr	s15, [r4, #4]
 8022350:	eef1 7a67 	vneg.f32	s15, s15
 8022354:	edc4 7a01 	vstr	s15, [r4, #4]
 8022358:	e782      	b.n	8022260 <__ieee754_rem_pio2f+0x128>
 802235a:	2303      	movs	r3, #3
 802235c:	e7e5      	b.n	802232a <__ieee754_rem_pio2f+0x1f2>
 802235e:	bf00      	nop
 8022360:	3f490fd8 	.word	0x3f490fd8
 8022364:	4016cbe3 	.word	0x4016cbe3
 8022368:	3fc90f80 	.word	0x3fc90f80
 802236c:	3fc90fd0 	.word	0x3fc90fd0
 8022370:	37354400 	.word	0x37354400
 8022374:	37354443 	.word	0x37354443
 8022378:	2e85a308 	.word	0x2e85a308
 802237c:	43490f80 	.word	0x43490f80
 8022380:	3f22f984 	.word	0x3f22f984
 8022384:	0802557c 	.word	0x0802557c
 8022388:	2e85a300 	.word	0x2e85a300
 802238c:	248d3132 	.word	0x248d3132
 8022390:	43800000 	.word	0x43800000
 8022394:	080255fc 	.word	0x080255fc

08022398 <atanf>:
 8022398:	b538      	push	{r3, r4, r5, lr}
 802239a:	ee10 5a10 	vmov	r5, s0
 802239e:	f025 4400 	bic.w	r4, r5, #2147483648	@ 0x80000000
 80223a2:	f1b4 4fa1 	cmp.w	r4, #1350565888	@ 0x50800000
 80223a6:	eef0 7a40 	vmov.f32	s15, s0
 80223aa:	d310      	bcc.n	80223ce <atanf+0x36>
 80223ac:	f1b4 4fff 	cmp.w	r4, #2139095040	@ 0x7f800000
 80223b0:	d904      	bls.n	80223bc <atanf+0x24>
 80223b2:	ee70 7a00 	vadd.f32	s15, s0, s0
 80223b6:	eeb0 0a67 	vmov.f32	s0, s15
 80223ba:	bd38      	pop	{r3, r4, r5, pc}
 80223bc:	eddf 7a4d 	vldr	s15, [pc, #308]	@ 80224f4 <atanf+0x15c>
 80223c0:	ed9f 7a4d 	vldr	s14, [pc, #308]	@ 80224f8 <atanf+0x160>
 80223c4:	2d00      	cmp	r5, #0
 80223c6:	bfc8      	it	gt
 80223c8:	eef0 7a47 	vmovgt.f32	s15, s14
 80223cc:	e7f3      	b.n	80223b6 <atanf+0x1e>
 80223ce:	4b4b      	ldr	r3, [pc, #300]	@ (80224fc <atanf+0x164>)
 80223d0:	429c      	cmp	r4, r3
 80223d2:	d810      	bhi.n	80223f6 <atanf+0x5e>
 80223d4:	f1b4 5f44 	cmp.w	r4, #822083584	@ 0x31000000
 80223d8:	d20a      	bcs.n	80223f0 <atanf+0x58>
 80223da:	ed9f 7a49 	vldr	s14, [pc, #292]	@ 8022500 <atanf+0x168>
 80223de:	ee30 7a07 	vadd.f32	s14, s0, s14
 80223e2:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 80223e6:	eeb4 7ae6 	vcmpe.f32	s14, s13
 80223ea:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80223ee:	dce2      	bgt.n	80223b6 <atanf+0x1e>
 80223f0:	f04f 33ff 	mov.w	r3, #4294967295
 80223f4:	e013      	b.n	802241e <atanf+0x86>
 80223f6:	f000 f8a3 	bl	8022540 <fabsf>
 80223fa:	4b42      	ldr	r3, [pc, #264]	@ (8022504 <atanf+0x16c>)
 80223fc:	429c      	cmp	r4, r3
 80223fe:	d84f      	bhi.n	80224a0 <atanf+0x108>
 8022400:	f5a3 03d0 	sub.w	r3, r3, #6815744	@ 0x680000
 8022404:	429c      	cmp	r4, r3
 8022406:	d841      	bhi.n	802248c <atanf+0xf4>
 8022408:	eef0 7a00 	vmov.f32	s15, #0	@ 0x40000000  2.0
 802240c:	eebf 7a00 	vmov.f32	s14, #240	@ 0xbf800000 -1.0
 8022410:	eea0 7a27 	vfma.f32	s14, s0, s15
 8022414:	2300      	movs	r3, #0
 8022416:	ee30 0a27 	vadd.f32	s0, s0, s15
 802241a:	eec7 7a00 	vdiv.f32	s15, s14, s0
 802241e:	1c5a      	adds	r2, r3, #1
 8022420:	ee27 6aa7 	vmul.f32	s12, s15, s15
 8022424:	ed9f 7a38 	vldr	s14, [pc, #224]	@ 8022508 <atanf+0x170>
 8022428:	eddf 5a38 	vldr	s11, [pc, #224]	@ 802250c <atanf+0x174>
 802242c:	ed9f 5a38 	vldr	s10, [pc, #224]	@ 8022510 <atanf+0x178>
 8022430:	ee66 6a06 	vmul.f32	s13, s12, s12
 8022434:	eee6 5a87 	vfma.f32	s11, s13, s14
 8022438:	ed9f 7a36 	vldr	s14, [pc, #216]	@ 8022514 <atanf+0x17c>
 802243c:	eea5 7aa6 	vfma.f32	s14, s11, s13
 8022440:	eddf 5a35 	vldr	s11, [pc, #212]	@ 8022518 <atanf+0x180>
 8022444:	eee7 5a26 	vfma.f32	s11, s14, s13
 8022448:	ed9f 7a34 	vldr	s14, [pc, #208]	@ 802251c <atanf+0x184>
 802244c:	eea5 7aa6 	vfma.f32	s14, s11, s13
 8022450:	eddf 5a33 	vldr	s11, [pc, #204]	@ 8022520 <atanf+0x188>
 8022454:	eee7 5a26 	vfma.f32	s11, s14, s13
 8022458:	ed9f 7a32 	vldr	s14, [pc, #200]	@ 8022524 <atanf+0x18c>
 802245c:	eea6 5a87 	vfma.f32	s10, s13, s14
 8022460:	ed9f 7a31 	vldr	s14, [pc, #196]	@ 8022528 <atanf+0x190>
 8022464:	eea5 7a26 	vfma.f32	s14, s10, s13
 8022468:	ed9f 5a30 	vldr	s10, [pc, #192]	@ 802252c <atanf+0x194>
 802246c:	eea7 5a26 	vfma.f32	s10, s14, s13
 8022470:	ed9f 7a2f 	vldr	s14, [pc, #188]	@ 8022530 <atanf+0x198>
 8022474:	eea5 7a26 	vfma.f32	s14, s10, s13
 8022478:	ee27 7a26 	vmul.f32	s14, s14, s13
 802247c:	eea5 7a86 	vfma.f32	s14, s11, s12
 8022480:	ee27 7a87 	vmul.f32	s14, s15, s14
 8022484:	d121      	bne.n	80224ca <atanf+0x132>
 8022486:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802248a:	e794      	b.n	80223b6 <atanf+0x1e>
 802248c:	eef7 7a00 	vmov.f32	s15, #112	@ 0x3f800000  1.0
 8022490:	ee30 7a67 	vsub.f32	s14, s0, s15
 8022494:	ee30 0a27 	vadd.f32	s0, s0, s15
 8022498:	2301      	movs	r3, #1
 802249a:	eec7 7a00 	vdiv.f32	s15, s14, s0
 802249e:	e7be      	b.n	802241e <atanf+0x86>
 80224a0:	4b24      	ldr	r3, [pc, #144]	@ (8022534 <atanf+0x19c>)
 80224a2:	429c      	cmp	r4, r3
 80224a4:	d80b      	bhi.n	80224be <atanf+0x126>
 80224a6:	eef7 7a08 	vmov.f32	s15, #120	@ 0x3fc00000  1.5
 80224aa:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 80224ae:	eea0 7a27 	vfma.f32	s14, s0, s15
 80224b2:	2302      	movs	r3, #2
 80224b4:	ee70 6a67 	vsub.f32	s13, s0, s15
 80224b8:	eec6 7a87 	vdiv.f32	s15, s13, s14
 80224bc:	e7af      	b.n	802241e <atanf+0x86>
 80224be:	eebf 7a00 	vmov.f32	s14, #240	@ 0xbf800000 -1.0
 80224c2:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80224c6:	2303      	movs	r3, #3
 80224c8:	e7a9      	b.n	802241e <atanf+0x86>
 80224ca:	4a1b      	ldr	r2, [pc, #108]	@ (8022538 <atanf+0x1a0>)
 80224cc:	491b      	ldr	r1, [pc, #108]	@ (802253c <atanf+0x1a4>)
 80224ce:	eb02 0283 	add.w	r2, r2, r3, lsl #2
 80224d2:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 80224d6:	edd3 6a00 	vldr	s13, [r3]
 80224da:	ee37 7a66 	vsub.f32	s14, s14, s13
 80224de:	2d00      	cmp	r5, #0
 80224e0:	ee37 7a67 	vsub.f32	s14, s14, s15
 80224e4:	edd2 7a00 	vldr	s15, [r2]
 80224e8:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80224ec:	bfb8      	it	lt
 80224ee:	eef1 7a67 	vneglt.f32	s15, s15
 80224f2:	e760      	b.n	80223b6 <atanf+0x1e>
 80224f4:	bfc90fdb 	.word	0xbfc90fdb
 80224f8:	3fc90fdb 	.word	0x3fc90fdb
 80224fc:	3edfffff 	.word	0x3edfffff
 8022500:	7149f2ca 	.word	0x7149f2ca
 8022504:	3f97ffff 	.word	0x3f97ffff
 8022508:	3c8569d7 	.word	0x3c8569d7
 802250c:	3d4bda59 	.word	0x3d4bda59
 8022510:	bd6ef16b 	.word	0xbd6ef16b
 8022514:	3d886b35 	.word	0x3d886b35
 8022518:	3dba2e6e 	.word	0x3dba2e6e
 802251c:	3e124925 	.word	0x3e124925
 8022520:	3eaaaaab 	.word	0x3eaaaaab
 8022524:	bd15a221 	.word	0xbd15a221
 8022528:	bd9d8795 	.word	0xbd9d8795
 802252c:	bde38e38 	.word	0xbde38e38
 8022530:	be4ccccd 	.word	0xbe4ccccd
 8022534:	401bffff 	.word	0x401bffff
 8022538:	08025924 	.word	0x08025924
 802253c:	08025914 	.word	0x08025914

08022540 <fabsf>:
 8022540:	ee10 3a10 	vmov	r3, s0
 8022544:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 8022548:	ee00 3a10 	vmov	s0, r3
 802254c:	4770      	bx	lr
	...

08022550 <__kernel_rem_pio2f>:
 8022550:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022554:	ed2d 8b04 	vpush	{d8-d9}
 8022558:	b0d9      	sub	sp, #356	@ 0x164
 802255a:	4690      	mov	r8, r2
 802255c:	9001      	str	r0, [sp, #4]
 802255e:	4ab6      	ldr	r2, [pc, #728]	@ (8022838 <__kernel_rem_pio2f+0x2e8>)
 8022560:	9866      	ldr	r0, [sp, #408]	@ 0x198
 8022562:	f118 0f04 	cmn.w	r8, #4
 8022566:	f852 a020 	ldr.w	sl, [r2, r0, lsl #2]
 802256a:	460f      	mov	r7, r1
 802256c:	f103 3bff 	add.w	fp, r3, #4294967295
 8022570:	db26      	blt.n	80225c0 <__kernel_rem_pio2f+0x70>
 8022572:	f1b8 0203 	subs.w	r2, r8, #3
 8022576:	bf48      	it	mi
 8022578:	f108 0204 	addmi.w	r2, r8, #4
 802257c:	10d2      	asrs	r2, r2, #3
 802257e:	1c55      	adds	r5, r2, #1
 8022580:	9967      	ldr	r1, [sp, #412]	@ 0x19c
 8022582:	ed9f 7ab1 	vldr	s14, [pc, #708]	@ 8022848 <__kernel_rem_pio2f+0x2f8>
 8022586:	00e8      	lsls	r0, r5, #3
 8022588:	eba2 060b 	sub.w	r6, r2, fp
 802258c:	9002      	str	r0, [sp, #8]
 802258e:	eba8 05c5 	sub.w	r5, r8, r5, lsl #3
 8022592:	eb0a 0c0b 	add.w	ip, sl, fp
 8022596:	ac1c      	add	r4, sp, #112	@ 0x70
 8022598:	eb01 0e86 	add.w	lr, r1, r6, lsl #2
 802259c:	2000      	movs	r0, #0
 802259e:	4560      	cmp	r0, ip
 80225a0:	dd10      	ble.n	80225c4 <__kernel_rem_pio2f+0x74>
 80225a2:	a91c      	add	r1, sp, #112	@ 0x70
 80225a4:	eb01 0083 	add.w	r0, r1, r3, lsl #2
 80225a8:	f50d 7988 	add.w	r9, sp, #272	@ 0x110
 80225ac:	2600      	movs	r6, #0
 80225ae:	4556      	cmp	r6, sl
 80225b0:	dc24      	bgt.n	80225fc <__kernel_rem_pio2f+0xac>
 80225b2:	f8dd e004 	ldr.w	lr, [sp, #4]
 80225b6:	eddf 7aa4 	vldr	s15, [pc, #656]	@ 8022848 <__kernel_rem_pio2f+0x2f8>
 80225ba:	4684      	mov	ip, r0
 80225bc:	2400      	movs	r4, #0
 80225be:	e016      	b.n	80225ee <__kernel_rem_pio2f+0x9e>
 80225c0:	2200      	movs	r2, #0
 80225c2:	e7dc      	b.n	802257e <__kernel_rem_pio2f+0x2e>
 80225c4:	42c6      	cmn	r6, r0
 80225c6:	bf5d      	ittte	pl
 80225c8:	f85e 1020 	ldrpl.w	r1, [lr, r0, lsl #2]
 80225cc:	ee07 1a90 	vmovpl	s15, r1
 80225d0:	eef8 7ae7 	vcvtpl.f32.s32	s15, s15
 80225d4:	eef0 7a47 	vmovmi.f32	s15, s14
 80225d8:	ece4 7a01 	vstmia	r4!, {s15}
 80225dc:	3001      	adds	r0, #1
 80225de:	e7de      	b.n	802259e <__kernel_rem_pio2f+0x4e>
 80225e0:	ecfe 6a01 	vldmia	lr!, {s13}
 80225e4:	ed3c 7a01 	vldmdb	ip!, {s14}
 80225e8:	eee6 7a87 	vfma.f32	s15, s13, s14
 80225ec:	3401      	adds	r4, #1
 80225ee:	455c      	cmp	r4, fp
 80225f0:	ddf6      	ble.n	80225e0 <__kernel_rem_pio2f+0x90>
 80225f2:	ece9 7a01 	vstmia	r9!, {s15}
 80225f6:	3601      	adds	r6, #1
 80225f8:	3004      	adds	r0, #4
 80225fa:	e7d8      	b.n	80225ae <__kernel_rem_pio2f+0x5e>
 80225fc:	a908      	add	r1, sp, #32
 80225fe:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 8022602:	9104      	str	r1, [sp, #16]
 8022604:	9967      	ldr	r1, [sp, #412]	@ 0x19c
 8022606:	eddf 8a8f 	vldr	s17, [pc, #572]	@ 8022844 <__kernel_rem_pio2f+0x2f4>
 802260a:	ed9f 9a8d 	vldr	s18, [pc, #564]	@ 8022840 <__kernel_rem_pio2f+0x2f0>
 802260e:	eb01 0282 	add.w	r2, r1, r2, lsl #2
 8022612:	9203      	str	r2, [sp, #12]
 8022614:	4654      	mov	r4, sl
 8022616:	00a2      	lsls	r2, r4, #2
 8022618:	9205      	str	r2, [sp, #20]
 802261a:	aa58      	add	r2, sp, #352	@ 0x160
 802261c:	eb02 0284 	add.w	r2, r2, r4, lsl #2
 8022620:	ed12 0a14 	vldr	s0, [r2, #-80]	@ 0xffffffb0
 8022624:	a944      	add	r1, sp, #272	@ 0x110
 8022626:	aa08      	add	r2, sp, #32
 8022628:	eb01 0084 	add.w	r0, r1, r4, lsl #2
 802262c:	4694      	mov	ip, r2
 802262e:	4626      	mov	r6, r4
 8022630:	2e00      	cmp	r6, #0
 8022632:	dc4c      	bgt.n	80226ce <__kernel_rem_pio2f+0x17e>
 8022634:	4628      	mov	r0, r5
 8022636:	e9cd 2306 	strd	r2, r3, [sp, #24]
 802263a:	f000 f9f1 	bl	8022a20 <scalbnf>
 802263e:	eeb0 8a40 	vmov.f32	s16, s0
 8022642:	eeb4 0a00 	vmov.f32	s0, #64	@ 0x3e000000  0.125
 8022646:	ee28 0a00 	vmul.f32	s0, s16, s0
 802264a:	f000 fa4f 	bl	8022aec <floorf>
 802264e:	eef2 7a00 	vmov.f32	s15, #32	@ 0x41000000  8.0
 8022652:	eea0 8a67 	vfms.f32	s16, s0, s15
 8022656:	2d00      	cmp	r5, #0
 8022658:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 802265c:	eefd 7ac8 	vcvt.s32.f32	s15, s16
 8022660:	ee17 9a90 	vmov	r9, s15
 8022664:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8022668:	ee38 8a67 	vsub.f32	s16, s16, s15
 802266c:	dd41      	ble.n	80226f2 <__kernel_rem_pio2f+0x1a2>
 802266e:	f104 3cff 	add.w	ip, r4, #4294967295
 8022672:	a908      	add	r1, sp, #32
 8022674:	f1c5 0e08 	rsb	lr, r5, #8
 8022678:	f851 602c 	ldr.w	r6, [r1, ip, lsl #2]
 802267c:	fa46 f00e 	asr.w	r0, r6, lr
 8022680:	4481      	add	r9, r0
 8022682:	fa00 f00e 	lsl.w	r0, r0, lr
 8022686:	1a36      	subs	r6, r6, r0
 8022688:	f1c5 0007 	rsb	r0, r5, #7
 802268c:	f841 602c 	str.w	r6, [r1, ip, lsl #2]
 8022690:	4106      	asrs	r6, r0
 8022692:	2e00      	cmp	r6, #0
 8022694:	dd3c      	ble.n	8022710 <__kernel_rem_pio2f+0x1c0>
 8022696:	f04f 0e00 	mov.w	lr, #0
 802269a:	f109 0901 	add.w	r9, r9, #1
 802269e:	4670      	mov	r0, lr
 80226a0:	4574      	cmp	r4, lr
 80226a2:	dc68      	bgt.n	8022776 <__kernel_rem_pio2f+0x226>
 80226a4:	2d00      	cmp	r5, #0
 80226a6:	dd03      	ble.n	80226b0 <__kernel_rem_pio2f+0x160>
 80226a8:	2d01      	cmp	r5, #1
 80226aa:	d074      	beq.n	8022796 <__kernel_rem_pio2f+0x246>
 80226ac:	2d02      	cmp	r5, #2
 80226ae:	d07d      	beq.n	80227ac <__kernel_rem_pio2f+0x25c>
 80226b0:	2e02      	cmp	r6, #2
 80226b2:	d12d      	bne.n	8022710 <__kernel_rem_pio2f+0x1c0>
 80226b4:	eeb7 0a00 	vmov.f32	s0, #112	@ 0x3f800000  1.0
 80226b8:	ee30 8a48 	vsub.f32	s16, s0, s16
 80226bc:	b340      	cbz	r0, 8022710 <__kernel_rem_pio2f+0x1c0>
 80226be:	4628      	mov	r0, r5
 80226c0:	9306      	str	r3, [sp, #24]
 80226c2:	f000 f9ad 	bl	8022a20 <scalbnf>
 80226c6:	9b06      	ldr	r3, [sp, #24]
 80226c8:	ee38 8a40 	vsub.f32	s16, s16, s0
 80226cc:	e020      	b.n	8022710 <__kernel_rem_pio2f+0x1c0>
 80226ce:	ee60 7a28 	vmul.f32	s15, s0, s17
 80226d2:	3e01      	subs	r6, #1
 80226d4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80226d8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80226dc:	eea7 0ac9 	vfms.f32	s0, s15, s18
 80226e0:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 80226e4:	ecac 0a01 	vstmia	ip!, {s0}
 80226e8:	ed30 0a01 	vldmdb	r0!, {s0}
 80226ec:	ee37 0a80 	vadd.f32	s0, s15, s0
 80226f0:	e79e      	b.n	8022630 <__kernel_rem_pio2f+0xe0>
 80226f2:	d105      	bne.n	8022700 <__kernel_rem_pio2f+0x1b0>
 80226f4:	1e60      	subs	r0, r4, #1
 80226f6:	a908      	add	r1, sp, #32
 80226f8:	f851 6020 	ldr.w	r6, [r1, r0, lsl #2]
 80226fc:	11f6      	asrs	r6, r6, #7
 80226fe:	e7c8      	b.n	8022692 <__kernel_rem_pio2f+0x142>
 8022700:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 8022704:	eeb4 8ae7 	vcmpe.f32	s16, s15
 8022708:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802270c:	da31      	bge.n	8022772 <__kernel_rem_pio2f+0x222>
 802270e:	2600      	movs	r6, #0
 8022710:	eeb5 8a40 	vcmp.f32	s16, #0.0
 8022714:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8022718:	f040 8098 	bne.w	802284c <__kernel_rem_pio2f+0x2fc>
 802271c:	1e60      	subs	r0, r4, #1
 802271e:	2200      	movs	r2, #0
 8022720:	4550      	cmp	r0, sl
 8022722:	da4b      	bge.n	80227bc <__kernel_rem_pio2f+0x26c>
 8022724:	2a00      	cmp	r2, #0
 8022726:	d065      	beq.n	80227f4 <__kernel_rem_pio2f+0x2a4>
 8022728:	3c01      	subs	r4, #1
 802272a:	ab08      	add	r3, sp, #32
 802272c:	3d08      	subs	r5, #8
 802272e:	f853 3024 	ldr.w	r3, [r3, r4, lsl #2]
 8022732:	2b00      	cmp	r3, #0
 8022734:	d0f8      	beq.n	8022728 <__kernel_rem_pio2f+0x1d8>
 8022736:	4628      	mov	r0, r5
 8022738:	eeb7 0a00 	vmov.f32	s0, #112	@ 0x3f800000  1.0
 802273c:	f000 f970 	bl	8022a20 <scalbnf>
 8022740:	1c63      	adds	r3, r4, #1
 8022742:	aa44      	add	r2, sp, #272	@ 0x110
 8022744:	ed9f 7a3f 	vldr	s14, [pc, #252]	@ 8022844 <__kernel_rem_pio2f+0x2f4>
 8022748:	0099      	lsls	r1, r3, #2
 802274a:	eb02 0283 	add.w	r2, r2, r3, lsl #2
 802274e:	4623      	mov	r3, r4
 8022750:	2b00      	cmp	r3, #0
 8022752:	f280 80a9 	bge.w	80228a8 <__kernel_rem_pio2f+0x358>
 8022756:	4623      	mov	r3, r4
 8022758:	2b00      	cmp	r3, #0
 802275a:	f2c0 80c7 	blt.w	80228ec <__kernel_rem_pio2f+0x39c>
 802275e:	aa44      	add	r2, sp, #272	@ 0x110
 8022760:	eb02 0583 	add.w	r5, r2, r3, lsl #2
 8022764:	f8df c0d4 	ldr.w	ip, [pc, #212]	@ 802283c <__kernel_rem_pio2f+0x2ec>
 8022768:	eddf 7a37 	vldr	s15, [pc, #220]	@ 8022848 <__kernel_rem_pio2f+0x2f8>
 802276c:	2000      	movs	r0, #0
 802276e:	1ae2      	subs	r2, r4, r3
 8022770:	e0b1      	b.n	80228d6 <__kernel_rem_pio2f+0x386>
 8022772:	2602      	movs	r6, #2
 8022774:	e78f      	b.n	8022696 <__kernel_rem_pio2f+0x146>
 8022776:	f852 1b04 	ldr.w	r1, [r2], #4
 802277a:	b948      	cbnz	r0, 8022790 <__kernel_rem_pio2f+0x240>
 802277c:	b121      	cbz	r1, 8022788 <__kernel_rem_pio2f+0x238>
 802277e:	f5c1 7180 	rsb	r1, r1, #256	@ 0x100
 8022782:	f842 1c04 	str.w	r1, [r2, #-4]
 8022786:	2101      	movs	r1, #1
 8022788:	f10e 0e01 	add.w	lr, lr, #1
 802278c:	4608      	mov	r0, r1
 802278e:	e787      	b.n	80226a0 <__kernel_rem_pio2f+0x150>
 8022790:	f1c1 01ff 	rsb	r1, r1, #255	@ 0xff
 8022794:	e7f5      	b.n	8022782 <__kernel_rem_pio2f+0x232>
 8022796:	f104 3cff 	add.w	ip, r4, #4294967295
 802279a:	aa08      	add	r2, sp, #32
 802279c:	f852 202c 	ldr.w	r2, [r2, ip, lsl #2]
 80227a0:	f002 027f 	and.w	r2, r2, #127	@ 0x7f
 80227a4:	a908      	add	r1, sp, #32
 80227a6:	f841 202c 	str.w	r2, [r1, ip, lsl #2]
 80227aa:	e781      	b.n	80226b0 <__kernel_rem_pio2f+0x160>
 80227ac:	f104 3cff 	add.w	ip, r4, #4294967295
 80227b0:	aa08      	add	r2, sp, #32
 80227b2:	f852 202c 	ldr.w	r2, [r2, ip, lsl #2]
 80227b6:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 80227ba:	e7f3      	b.n	80227a4 <__kernel_rem_pio2f+0x254>
 80227bc:	a908      	add	r1, sp, #32
 80227be:	f851 1020 	ldr.w	r1, [r1, r0, lsl #2]
 80227c2:	3801      	subs	r0, #1
 80227c4:	430a      	orrs	r2, r1
 80227c6:	e7ab      	b.n	8022720 <__kernel_rem_pio2f+0x1d0>
 80227c8:	3201      	adds	r2, #1
 80227ca:	f850 6d04 	ldr.w	r6, [r0, #-4]!
 80227ce:	2e00      	cmp	r6, #0
 80227d0:	d0fa      	beq.n	80227c8 <__kernel_rem_pio2f+0x278>
 80227d2:	9905      	ldr	r1, [sp, #20]
 80227d4:	f501 71b0 	add.w	r1, r1, #352	@ 0x160
 80227d8:	eb0d 0001 	add.w	r0, sp, r1
 80227dc:	18e6      	adds	r6, r4, r3
 80227de:	a91c      	add	r1, sp, #112	@ 0x70
 80227e0:	f104 0c01 	add.w	ip, r4, #1
 80227e4:	384c      	subs	r0, #76	@ 0x4c
 80227e6:	eb01 0686 	add.w	r6, r1, r6, lsl #2
 80227ea:	4422      	add	r2, r4
 80227ec:	4562      	cmp	r2, ip
 80227ee:	da04      	bge.n	80227fa <__kernel_rem_pio2f+0x2aa>
 80227f0:	4614      	mov	r4, r2
 80227f2:	e710      	b.n	8022616 <__kernel_rem_pio2f+0xc6>
 80227f4:	9804      	ldr	r0, [sp, #16]
 80227f6:	2201      	movs	r2, #1
 80227f8:	e7e7      	b.n	80227ca <__kernel_rem_pio2f+0x27a>
 80227fa:	9903      	ldr	r1, [sp, #12]
 80227fc:	f8dd e004 	ldr.w	lr, [sp, #4]
 8022800:	f851 102c 	ldr.w	r1, [r1, ip, lsl #2]
 8022804:	9105      	str	r1, [sp, #20]
 8022806:	ee07 1a90 	vmov	s15, r1
 802280a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802280e:	2400      	movs	r4, #0
 8022810:	ece6 7a01 	vstmia	r6!, {s15}
 8022814:	eddf 7a0c 	vldr	s15, [pc, #48]	@ 8022848 <__kernel_rem_pio2f+0x2f8>
 8022818:	46b1      	mov	r9, r6
 802281a:	455c      	cmp	r4, fp
 802281c:	dd04      	ble.n	8022828 <__kernel_rem_pio2f+0x2d8>
 802281e:	ece0 7a01 	vstmia	r0!, {s15}
 8022822:	f10c 0c01 	add.w	ip, ip, #1
 8022826:	e7e1      	b.n	80227ec <__kernel_rem_pio2f+0x29c>
 8022828:	ecfe 6a01 	vldmia	lr!, {s13}
 802282c:	ed39 7a01 	vldmdb	r9!, {s14}
 8022830:	3401      	adds	r4, #1
 8022832:	eee6 7a87 	vfma.f32	s15, s13, s14
 8022836:	e7f0      	b.n	802281a <__kernel_rem_pio2f+0x2ca>
 8022838:	08025960 	.word	0x08025960
 802283c:	08025934 	.word	0x08025934
 8022840:	43800000 	.word	0x43800000
 8022844:	3b800000 	.word	0x3b800000
 8022848:	00000000 	.word	0x00000000
 802284c:	9b02      	ldr	r3, [sp, #8]
 802284e:	eeb0 0a48 	vmov.f32	s0, s16
 8022852:	eba3 0008 	sub.w	r0, r3, r8
 8022856:	f000 f8e3 	bl	8022a20 <scalbnf>
 802285a:	ed1f 7a07 	vldr	s14, [pc, #-28]	@ 8022840 <__kernel_rem_pio2f+0x2f0>
 802285e:	eeb4 0ac7 	vcmpe.f32	s0, s14
 8022862:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8022866:	db19      	blt.n	802289c <__kernel_rem_pio2f+0x34c>
 8022868:	ed5f 7a0a 	vldr	s15, [pc, #-40]	@ 8022844 <__kernel_rem_pio2f+0x2f4>
 802286c:	ee60 7a27 	vmul.f32	s15, s0, s15
 8022870:	aa08      	add	r2, sp, #32
 8022872:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8022876:	3508      	adds	r5, #8
 8022878:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802287c:	eea7 0ac7 	vfms.f32	s0, s15, s14
 8022880:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8022884:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 8022888:	ee10 3a10 	vmov	r3, s0
 802288c:	f842 3024 	str.w	r3, [r2, r4, lsl #2]
 8022890:	ee17 3a90 	vmov	r3, s15
 8022894:	3401      	adds	r4, #1
 8022896:	f842 3024 	str.w	r3, [r2, r4, lsl #2]
 802289a:	e74c      	b.n	8022736 <__kernel_rem_pio2f+0x1e6>
 802289c:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 80228a0:	aa08      	add	r2, sp, #32
 80228a2:	ee10 3a10 	vmov	r3, s0
 80228a6:	e7f6      	b.n	8022896 <__kernel_rem_pio2f+0x346>
 80228a8:	a808      	add	r0, sp, #32
 80228aa:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
 80228ae:	9001      	str	r0, [sp, #4]
 80228b0:	ee07 0a90 	vmov	s15, r0
 80228b4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80228b8:	3b01      	subs	r3, #1
 80228ba:	ee67 7a80 	vmul.f32	s15, s15, s0
 80228be:	ee20 0a07 	vmul.f32	s0, s0, s14
 80228c2:	ed62 7a01 	vstmdb	r2!, {s15}
 80228c6:	e743      	b.n	8022750 <__kernel_rem_pio2f+0x200>
 80228c8:	ecfc 6a01 	vldmia	ip!, {s13}
 80228cc:	ecb5 7a01 	vldmia	r5!, {s14}
 80228d0:	eee6 7a87 	vfma.f32	s15, s13, s14
 80228d4:	3001      	adds	r0, #1
 80228d6:	4550      	cmp	r0, sl
 80228d8:	dc01      	bgt.n	80228de <__kernel_rem_pio2f+0x38e>
 80228da:	4290      	cmp	r0, r2
 80228dc:	ddf4      	ble.n	80228c8 <__kernel_rem_pio2f+0x378>
 80228de:	a858      	add	r0, sp, #352	@ 0x160
 80228e0:	eb00 0282 	add.w	r2, r0, r2, lsl #2
 80228e4:	ed42 7a28 	vstr	s15, [r2, #-160]	@ 0xffffff60
 80228e8:	3b01      	subs	r3, #1
 80228ea:	e735      	b.n	8022758 <__kernel_rem_pio2f+0x208>
 80228ec:	9b66      	ldr	r3, [sp, #408]	@ 0x198
 80228ee:	2b02      	cmp	r3, #2
 80228f0:	dc09      	bgt.n	8022906 <__kernel_rem_pio2f+0x3b6>
 80228f2:	2b00      	cmp	r3, #0
 80228f4:	dc27      	bgt.n	8022946 <__kernel_rem_pio2f+0x3f6>
 80228f6:	d040      	beq.n	802297a <__kernel_rem_pio2f+0x42a>
 80228f8:	f009 0007 	and.w	r0, r9, #7
 80228fc:	b059      	add	sp, #356	@ 0x164
 80228fe:	ecbd 8b04 	vpop	{d8-d9}
 8022902:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8022906:	9b66      	ldr	r3, [sp, #408]	@ 0x198
 8022908:	2b03      	cmp	r3, #3
 802290a:	d1f5      	bne.n	80228f8 <__kernel_rem_pio2f+0x3a8>
 802290c:	aa30      	add	r2, sp, #192	@ 0xc0
 802290e:	1f0b      	subs	r3, r1, #4
 8022910:	4413      	add	r3, r2
 8022912:	461a      	mov	r2, r3
 8022914:	4620      	mov	r0, r4
 8022916:	2800      	cmp	r0, #0
 8022918:	dc50      	bgt.n	80229bc <__kernel_rem_pio2f+0x46c>
 802291a:	4622      	mov	r2, r4
 802291c:	2a01      	cmp	r2, #1
 802291e:	dc5d      	bgt.n	80229dc <__kernel_rem_pio2f+0x48c>
 8022920:	ab30      	add	r3, sp, #192	@ 0xc0
 8022922:	ed5f 7a37 	vldr	s15, [pc, #-220]	@ 8022848 <__kernel_rem_pio2f+0x2f8>
 8022926:	440b      	add	r3, r1
 8022928:	2c01      	cmp	r4, #1
 802292a:	dc67      	bgt.n	80229fc <__kernel_rem_pio2f+0x4ac>
 802292c:	eddd 6a30 	vldr	s13, [sp, #192]	@ 0xc0
 8022930:	ed9d 7a31 	vldr	s14, [sp, #196]	@ 0xc4
 8022934:	2e00      	cmp	r6, #0
 8022936:	d167      	bne.n	8022a08 <__kernel_rem_pio2f+0x4b8>
 8022938:	edc7 6a00 	vstr	s13, [r7]
 802293c:	ed87 7a01 	vstr	s14, [r7, #4]
 8022940:	edc7 7a02 	vstr	s15, [r7, #8]
 8022944:	e7d8      	b.n	80228f8 <__kernel_rem_pio2f+0x3a8>
 8022946:	ab30      	add	r3, sp, #192	@ 0xc0
 8022948:	ed1f 7a41 	vldr	s14, [pc, #-260]	@ 8022848 <__kernel_rem_pio2f+0x2f8>
 802294c:	440b      	add	r3, r1
 802294e:	4622      	mov	r2, r4
 8022950:	2a00      	cmp	r2, #0
 8022952:	da24      	bge.n	802299e <__kernel_rem_pio2f+0x44e>
 8022954:	b34e      	cbz	r6, 80229aa <__kernel_rem_pio2f+0x45a>
 8022956:	eef1 7a47 	vneg.f32	s15, s14
 802295a:	edc7 7a00 	vstr	s15, [r7]
 802295e:	eddd 7a30 	vldr	s15, [sp, #192]	@ 0xc0
 8022962:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8022966:	aa31      	add	r2, sp, #196	@ 0xc4
 8022968:	2301      	movs	r3, #1
 802296a:	429c      	cmp	r4, r3
 802296c:	da20      	bge.n	80229b0 <__kernel_rem_pio2f+0x460>
 802296e:	b10e      	cbz	r6, 8022974 <__kernel_rem_pio2f+0x424>
 8022970:	eef1 7a67 	vneg.f32	s15, s15
 8022974:	edc7 7a01 	vstr	s15, [r7, #4]
 8022978:	e7be      	b.n	80228f8 <__kernel_rem_pio2f+0x3a8>
 802297a:	ab30      	add	r3, sp, #192	@ 0xc0
 802297c:	ed5f 7a4e 	vldr	s15, [pc, #-312]	@ 8022848 <__kernel_rem_pio2f+0x2f8>
 8022980:	440b      	add	r3, r1
 8022982:	2c00      	cmp	r4, #0
 8022984:	da05      	bge.n	8022992 <__kernel_rem_pio2f+0x442>
 8022986:	b10e      	cbz	r6, 802298c <__kernel_rem_pio2f+0x43c>
 8022988:	eef1 7a67 	vneg.f32	s15, s15
 802298c:	edc7 7a00 	vstr	s15, [r7]
 8022990:	e7b2      	b.n	80228f8 <__kernel_rem_pio2f+0x3a8>
 8022992:	ed33 7a01 	vldmdb	r3!, {s14}
 8022996:	3c01      	subs	r4, #1
 8022998:	ee77 7a87 	vadd.f32	s15, s15, s14
 802299c:	e7f1      	b.n	8022982 <__kernel_rem_pio2f+0x432>
 802299e:	ed73 7a01 	vldmdb	r3!, {s15}
 80229a2:	3a01      	subs	r2, #1
 80229a4:	ee37 7a27 	vadd.f32	s14, s14, s15
 80229a8:	e7d2      	b.n	8022950 <__kernel_rem_pio2f+0x400>
 80229aa:	eef0 7a47 	vmov.f32	s15, s14
 80229ae:	e7d4      	b.n	802295a <__kernel_rem_pio2f+0x40a>
 80229b0:	ecb2 7a01 	vldmia	r2!, {s14}
 80229b4:	3301      	adds	r3, #1
 80229b6:	ee77 7a87 	vadd.f32	s15, s15, s14
 80229ba:	e7d6      	b.n	802296a <__kernel_rem_pio2f+0x41a>
 80229bc:	ed72 7a01 	vldmdb	r2!, {s15}
 80229c0:	edd2 6a01 	vldr	s13, [r2, #4]
 80229c4:	ee37 7aa6 	vadd.f32	s14, s15, s13
 80229c8:	3801      	subs	r0, #1
 80229ca:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80229ce:	ed82 7a00 	vstr	s14, [r2]
 80229d2:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80229d6:	edc2 7a01 	vstr	s15, [r2, #4]
 80229da:	e79c      	b.n	8022916 <__kernel_rem_pio2f+0x3c6>
 80229dc:	ed73 7a01 	vldmdb	r3!, {s15}
 80229e0:	edd3 6a01 	vldr	s13, [r3, #4]
 80229e4:	ee37 7aa6 	vadd.f32	s14, s15, s13
 80229e8:	3a01      	subs	r2, #1
 80229ea:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80229ee:	ed83 7a00 	vstr	s14, [r3]
 80229f2:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80229f6:	edc3 7a01 	vstr	s15, [r3, #4]
 80229fa:	e78f      	b.n	802291c <__kernel_rem_pio2f+0x3cc>
 80229fc:	ed33 7a01 	vldmdb	r3!, {s14}
 8022a00:	3c01      	subs	r4, #1
 8022a02:	ee77 7a87 	vadd.f32	s15, s15, s14
 8022a06:	e78f      	b.n	8022928 <__kernel_rem_pio2f+0x3d8>
 8022a08:	eef1 6a66 	vneg.f32	s13, s13
 8022a0c:	eeb1 7a47 	vneg.f32	s14, s14
 8022a10:	edc7 6a00 	vstr	s13, [r7]
 8022a14:	ed87 7a01 	vstr	s14, [r7, #4]
 8022a18:	eef1 7a67 	vneg.f32	s15, s15
 8022a1c:	e790      	b.n	8022940 <__kernel_rem_pio2f+0x3f0>
 8022a1e:	bf00      	nop

08022a20 <scalbnf>:
 8022a20:	ee10 3a10 	vmov	r3, s0
 8022a24:	f033 4200 	bics.w	r2, r3, #2147483648	@ 0x80000000
 8022a28:	d02b      	beq.n	8022a82 <scalbnf+0x62>
 8022a2a:	f1b2 4fff 	cmp.w	r2, #2139095040	@ 0x7f800000
 8022a2e:	d302      	bcc.n	8022a36 <scalbnf+0x16>
 8022a30:	ee30 0a00 	vadd.f32	s0, s0, s0
 8022a34:	4770      	bx	lr
 8022a36:	f013 4fff 	tst.w	r3, #2139095040	@ 0x7f800000
 8022a3a:	d123      	bne.n	8022a84 <scalbnf+0x64>
 8022a3c:	4b24      	ldr	r3, [pc, #144]	@ (8022ad0 <scalbnf+0xb0>)
 8022a3e:	eddf 7a25 	vldr	s15, [pc, #148]	@ 8022ad4 <scalbnf+0xb4>
 8022a42:	4298      	cmp	r0, r3
 8022a44:	ee20 0a27 	vmul.f32	s0, s0, s15
 8022a48:	db17      	blt.n	8022a7a <scalbnf+0x5a>
 8022a4a:	ee10 3a10 	vmov	r3, s0
 8022a4e:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 8022a52:	3a19      	subs	r2, #25
 8022a54:	f24c 3150 	movw	r1, #50000	@ 0xc350
 8022a58:	4288      	cmp	r0, r1
 8022a5a:	dd15      	ble.n	8022a88 <scalbnf+0x68>
 8022a5c:	eddf 7a1e 	vldr	s15, [pc, #120]	@ 8022ad8 <scalbnf+0xb8>
 8022a60:	eddf 6a1e 	vldr	s13, [pc, #120]	@ 8022adc <scalbnf+0xbc>
 8022a64:	ee10 3a10 	vmov	r3, s0
 8022a68:	eeb0 7a67 	vmov.f32	s14, s15
 8022a6c:	2b00      	cmp	r3, #0
 8022a6e:	bfb8      	it	lt
 8022a70:	eef0 7a66 	vmovlt.f32	s15, s13
 8022a74:	ee27 0a87 	vmul.f32	s0, s15, s14
 8022a78:	4770      	bx	lr
 8022a7a:	eddf 7a19 	vldr	s15, [pc, #100]	@ 8022ae0 <scalbnf+0xc0>
 8022a7e:	ee27 0a80 	vmul.f32	s0, s15, s0
 8022a82:	4770      	bx	lr
 8022a84:	0dd2      	lsrs	r2, r2, #23
 8022a86:	e7e5      	b.n	8022a54 <scalbnf+0x34>
 8022a88:	4410      	add	r0, r2
 8022a8a:	28fe      	cmp	r0, #254	@ 0xfe
 8022a8c:	dce6      	bgt.n	8022a5c <scalbnf+0x3c>
 8022a8e:	2800      	cmp	r0, #0
 8022a90:	dd06      	ble.n	8022aa0 <scalbnf+0x80>
 8022a92:	f023 43ff 	bic.w	r3, r3, #2139095040	@ 0x7f800000
 8022a96:	ea43 53c0 	orr.w	r3, r3, r0, lsl #23
 8022a9a:	ee00 3a10 	vmov	s0, r3
 8022a9e:	4770      	bx	lr
 8022aa0:	f110 0f16 	cmn.w	r0, #22
 8022aa4:	da09      	bge.n	8022aba <scalbnf+0x9a>
 8022aa6:	eddf 7a0e 	vldr	s15, [pc, #56]	@ 8022ae0 <scalbnf+0xc0>
 8022aaa:	eddf 6a0e 	vldr	s13, [pc, #56]	@ 8022ae4 <scalbnf+0xc4>
 8022aae:	ee10 3a10 	vmov	r3, s0
 8022ab2:	eeb0 7a67 	vmov.f32	s14, s15
 8022ab6:	2b00      	cmp	r3, #0
 8022ab8:	e7d9      	b.n	8022a6e <scalbnf+0x4e>
 8022aba:	3019      	adds	r0, #25
 8022abc:	f023 43ff 	bic.w	r3, r3, #2139095040	@ 0x7f800000
 8022ac0:	ea43 53c0 	orr.w	r3, r3, r0, lsl #23
 8022ac4:	ed9f 0a08 	vldr	s0, [pc, #32]	@ 8022ae8 <scalbnf+0xc8>
 8022ac8:	ee07 3a90 	vmov	s15, r3
 8022acc:	e7d7      	b.n	8022a7e <scalbnf+0x5e>
 8022ace:	bf00      	nop
 8022ad0:	ffff3cb0 	.word	0xffff3cb0
 8022ad4:	4c000000 	.word	0x4c000000
 8022ad8:	7149f2ca 	.word	0x7149f2ca
 8022adc:	f149f2ca 	.word	0xf149f2ca
 8022ae0:	0da24260 	.word	0x0da24260
 8022ae4:	8da24260 	.word	0x8da24260
 8022ae8:	33000000 	.word	0x33000000

08022aec <floorf>:
 8022aec:	ee10 3a10 	vmov	r3, s0
 8022af0:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 8022af4:	3a7f      	subs	r2, #127	@ 0x7f
 8022af6:	2a16      	cmp	r2, #22
 8022af8:	f023 4100 	bic.w	r1, r3, #2147483648	@ 0x80000000
 8022afc:	dc2b      	bgt.n	8022b56 <floorf+0x6a>
 8022afe:	2a00      	cmp	r2, #0
 8022b00:	da12      	bge.n	8022b28 <floorf+0x3c>
 8022b02:	eddf 7a19 	vldr	s15, [pc, #100]	@ 8022b68 <floorf+0x7c>
 8022b06:	ee30 0a27 	vadd.f32	s0, s0, s15
 8022b0a:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8022b0e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8022b12:	dd06      	ble.n	8022b22 <floorf+0x36>
 8022b14:	2b00      	cmp	r3, #0
 8022b16:	da24      	bge.n	8022b62 <floorf+0x76>
 8022b18:	2900      	cmp	r1, #0
 8022b1a:	4b14      	ldr	r3, [pc, #80]	@ (8022b6c <floorf+0x80>)
 8022b1c:	bf08      	it	eq
 8022b1e:	f04f 4300 	moveq.w	r3, #2147483648	@ 0x80000000
 8022b22:	ee00 3a10 	vmov	s0, r3
 8022b26:	4770      	bx	lr
 8022b28:	4911      	ldr	r1, [pc, #68]	@ (8022b70 <floorf+0x84>)
 8022b2a:	4111      	asrs	r1, r2
 8022b2c:	420b      	tst	r3, r1
 8022b2e:	d0fa      	beq.n	8022b26 <floorf+0x3a>
 8022b30:	eddf 7a0d 	vldr	s15, [pc, #52]	@ 8022b68 <floorf+0x7c>
 8022b34:	ee30 0a27 	vadd.f32	s0, s0, s15
 8022b38:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8022b3c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8022b40:	ddef      	ble.n	8022b22 <floorf+0x36>
 8022b42:	2b00      	cmp	r3, #0
 8022b44:	bfbe      	ittt	lt
 8022b46:	f44f 0000 	movlt.w	r0, #8388608	@ 0x800000
 8022b4a:	fa40 f202 	asrlt.w	r2, r0, r2
 8022b4e:	189b      	addlt	r3, r3, r2
 8022b50:	ea23 0301 	bic.w	r3, r3, r1
 8022b54:	e7e5      	b.n	8022b22 <floorf+0x36>
 8022b56:	f1b1 4fff 	cmp.w	r1, #2139095040	@ 0x7f800000
 8022b5a:	d3e4      	bcc.n	8022b26 <floorf+0x3a>
 8022b5c:	ee30 0a00 	vadd.f32	s0, s0, s0
 8022b60:	4770      	bx	lr
 8022b62:	2300      	movs	r3, #0
 8022b64:	e7dd      	b.n	8022b22 <floorf+0x36>
 8022b66:	bf00      	nop
 8022b68:	7149f2ca 	.word	0x7149f2ca
 8022b6c:	bf800000 	.word	0xbf800000
 8022b70:	007fffff 	.word	0x007fffff

08022b74 <abort>:
 8022b74:	b508      	push	{r3, lr}
 8022b76:	2006      	movs	r0, #6
 8022b78:	f000 fa3c 	bl	8022ff4 <raise>
 8022b7c:	2001      	movs	r0, #1
 8022b7e:	f7df fd85 	bl	800268c <_exit>
	...

08022b84 <__assert_func>:
 8022b84:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8022b86:	4614      	mov	r4, r2
 8022b88:	461a      	mov	r2, r3
 8022b8a:	4b09      	ldr	r3, [pc, #36]	@ (8022bb0 <__assert_func+0x2c>)
 8022b8c:	681b      	ldr	r3, [r3, #0]
 8022b8e:	4605      	mov	r5, r0
 8022b90:	68d8      	ldr	r0, [r3, #12]
 8022b92:	b14c      	cbz	r4, 8022ba8 <__assert_func+0x24>
 8022b94:	4b07      	ldr	r3, [pc, #28]	@ (8022bb4 <__assert_func+0x30>)
 8022b96:	9100      	str	r1, [sp, #0]
 8022b98:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8022b9c:	4906      	ldr	r1, [pc, #24]	@ (8022bb8 <__assert_func+0x34>)
 8022b9e:	462b      	mov	r3, r5
 8022ba0:	f000 f984 	bl	8022eac <fiprintf>
 8022ba4:	f7ff ffe6 	bl	8022b74 <abort>
 8022ba8:	4b04      	ldr	r3, [pc, #16]	@ (8022bbc <__assert_func+0x38>)
 8022baa:	461c      	mov	r4, r3
 8022bac:	e7f3      	b.n	8022b96 <__assert_func+0x12>
 8022bae:	bf00      	nop
 8022bb0:	20000220 	.word	0x20000220
 8022bb4:	0802463d 	.word	0x0802463d
 8022bb8:	0802464a 	.word	0x0802464a
 8022bbc:	08024678 	.word	0x08024678

08022bc0 <atexit>:
 8022bc0:	2300      	movs	r3, #0
 8022bc2:	4601      	mov	r1, r0
 8022bc4:	461a      	mov	r2, r3
 8022bc6:	4618      	mov	r0, r3
 8022bc8:	f000 bac2 	b.w	8023150 <__register_exitproc>

08022bcc <malloc>:
 8022bcc:	4b02      	ldr	r3, [pc, #8]	@ (8022bd8 <malloc+0xc>)
 8022bce:	4601      	mov	r1, r0
 8022bd0:	6818      	ldr	r0, [r3, #0]
 8022bd2:	f000 b82d 	b.w	8022c30 <_malloc_r>
 8022bd6:	bf00      	nop
 8022bd8:	20000220 	.word	0x20000220

08022bdc <free>:
 8022bdc:	4b02      	ldr	r3, [pc, #8]	@ (8022be8 <free+0xc>)
 8022bde:	4601      	mov	r1, r0
 8022be0:	6818      	ldr	r0, [r3, #0]
 8022be2:	f000 bb11 	b.w	8023208 <_free_r>
 8022be6:	bf00      	nop
 8022be8:	20000220 	.word	0x20000220

08022bec <sbrk_aligned>:
 8022bec:	b570      	push	{r4, r5, r6, lr}
 8022bee:	4e0f      	ldr	r6, [pc, #60]	@ (8022c2c <sbrk_aligned+0x40>)
 8022bf0:	460c      	mov	r4, r1
 8022bf2:	6831      	ldr	r1, [r6, #0]
 8022bf4:	4605      	mov	r5, r0
 8022bf6:	b911      	cbnz	r1, 8022bfe <sbrk_aligned+0x12>
 8022bf8:	f000 fa4c 	bl	8023094 <_sbrk_r>
 8022bfc:	6030      	str	r0, [r6, #0]
 8022bfe:	4621      	mov	r1, r4
 8022c00:	4628      	mov	r0, r5
 8022c02:	f000 fa47 	bl	8023094 <_sbrk_r>
 8022c06:	1c43      	adds	r3, r0, #1
 8022c08:	d103      	bne.n	8022c12 <sbrk_aligned+0x26>
 8022c0a:	f04f 34ff 	mov.w	r4, #4294967295
 8022c0e:	4620      	mov	r0, r4
 8022c10:	bd70      	pop	{r4, r5, r6, pc}
 8022c12:	1cc4      	adds	r4, r0, #3
 8022c14:	f024 0403 	bic.w	r4, r4, #3
 8022c18:	42a0      	cmp	r0, r4
 8022c1a:	d0f8      	beq.n	8022c0e <sbrk_aligned+0x22>
 8022c1c:	1a21      	subs	r1, r4, r0
 8022c1e:	4628      	mov	r0, r5
 8022c20:	f000 fa38 	bl	8023094 <_sbrk_r>
 8022c24:	3001      	adds	r0, #1
 8022c26:	d1f2      	bne.n	8022c0e <sbrk_aligned+0x22>
 8022c28:	e7ef      	b.n	8022c0a <sbrk_aligned+0x1e>
 8022c2a:	bf00      	nop
 8022c2c:	20014aa0 	.word	0x20014aa0

08022c30 <_malloc_r>:
 8022c30:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8022c34:	1ccd      	adds	r5, r1, #3
 8022c36:	f025 0503 	bic.w	r5, r5, #3
 8022c3a:	3508      	adds	r5, #8
 8022c3c:	2d0c      	cmp	r5, #12
 8022c3e:	bf38      	it	cc
 8022c40:	250c      	movcc	r5, #12
 8022c42:	2d00      	cmp	r5, #0
 8022c44:	4606      	mov	r6, r0
 8022c46:	db01      	blt.n	8022c4c <_malloc_r+0x1c>
 8022c48:	42a9      	cmp	r1, r5
 8022c4a:	d904      	bls.n	8022c56 <_malloc_r+0x26>
 8022c4c:	230c      	movs	r3, #12
 8022c4e:	6033      	str	r3, [r6, #0]
 8022c50:	2000      	movs	r0, #0
 8022c52:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8022c56:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 8022d2c <_malloc_r+0xfc>
 8022c5a:	f000 f869 	bl	8022d30 <__malloc_lock>
 8022c5e:	f8d8 3000 	ldr.w	r3, [r8]
 8022c62:	461c      	mov	r4, r3
 8022c64:	bb44      	cbnz	r4, 8022cb8 <_malloc_r+0x88>
 8022c66:	4629      	mov	r1, r5
 8022c68:	4630      	mov	r0, r6
 8022c6a:	f7ff ffbf 	bl	8022bec <sbrk_aligned>
 8022c6e:	1c43      	adds	r3, r0, #1
 8022c70:	4604      	mov	r4, r0
 8022c72:	d158      	bne.n	8022d26 <_malloc_r+0xf6>
 8022c74:	f8d8 4000 	ldr.w	r4, [r8]
 8022c78:	4627      	mov	r7, r4
 8022c7a:	2f00      	cmp	r7, #0
 8022c7c:	d143      	bne.n	8022d06 <_malloc_r+0xd6>
 8022c7e:	2c00      	cmp	r4, #0
 8022c80:	d04b      	beq.n	8022d1a <_malloc_r+0xea>
 8022c82:	6823      	ldr	r3, [r4, #0]
 8022c84:	4639      	mov	r1, r7
 8022c86:	4630      	mov	r0, r6
 8022c88:	eb04 0903 	add.w	r9, r4, r3
 8022c8c:	f000 fa02 	bl	8023094 <_sbrk_r>
 8022c90:	4581      	cmp	r9, r0
 8022c92:	d142      	bne.n	8022d1a <_malloc_r+0xea>
 8022c94:	6821      	ldr	r1, [r4, #0]
 8022c96:	1a6d      	subs	r5, r5, r1
 8022c98:	4629      	mov	r1, r5
 8022c9a:	4630      	mov	r0, r6
 8022c9c:	f7ff ffa6 	bl	8022bec <sbrk_aligned>
 8022ca0:	3001      	adds	r0, #1
 8022ca2:	d03a      	beq.n	8022d1a <_malloc_r+0xea>
 8022ca4:	6823      	ldr	r3, [r4, #0]
 8022ca6:	442b      	add	r3, r5
 8022ca8:	6023      	str	r3, [r4, #0]
 8022caa:	f8d8 3000 	ldr.w	r3, [r8]
 8022cae:	685a      	ldr	r2, [r3, #4]
 8022cb0:	bb62      	cbnz	r2, 8022d0c <_malloc_r+0xdc>
 8022cb2:	f8c8 7000 	str.w	r7, [r8]
 8022cb6:	e00f      	b.n	8022cd8 <_malloc_r+0xa8>
 8022cb8:	6822      	ldr	r2, [r4, #0]
 8022cba:	1b52      	subs	r2, r2, r5
 8022cbc:	d420      	bmi.n	8022d00 <_malloc_r+0xd0>
 8022cbe:	2a0b      	cmp	r2, #11
 8022cc0:	d917      	bls.n	8022cf2 <_malloc_r+0xc2>
 8022cc2:	1961      	adds	r1, r4, r5
 8022cc4:	42a3      	cmp	r3, r4
 8022cc6:	6025      	str	r5, [r4, #0]
 8022cc8:	bf18      	it	ne
 8022cca:	6059      	strne	r1, [r3, #4]
 8022ccc:	6863      	ldr	r3, [r4, #4]
 8022cce:	bf08      	it	eq
 8022cd0:	f8c8 1000 	streq.w	r1, [r8]
 8022cd4:	5162      	str	r2, [r4, r5]
 8022cd6:	604b      	str	r3, [r1, #4]
 8022cd8:	4630      	mov	r0, r6
 8022cda:	f000 f82f 	bl	8022d3c <__malloc_unlock>
 8022cde:	f104 000b 	add.w	r0, r4, #11
 8022ce2:	1d23      	adds	r3, r4, #4
 8022ce4:	f020 0007 	bic.w	r0, r0, #7
 8022ce8:	1ac2      	subs	r2, r0, r3
 8022cea:	bf1c      	itt	ne
 8022cec:	1a1b      	subne	r3, r3, r0
 8022cee:	50a3      	strne	r3, [r4, r2]
 8022cf0:	e7af      	b.n	8022c52 <_malloc_r+0x22>
 8022cf2:	6862      	ldr	r2, [r4, #4]
 8022cf4:	42a3      	cmp	r3, r4
 8022cf6:	bf0c      	ite	eq
 8022cf8:	f8c8 2000 	streq.w	r2, [r8]
 8022cfc:	605a      	strne	r2, [r3, #4]
 8022cfe:	e7eb      	b.n	8022cd8 <_malloc_r+0xa8>
 8022d00:	4623      	mov	r3, r4
 8022d02:	6864      	ldr	r4, [r4, #4]
 8022d04:	e7ae      	b.n	8022c64 <_malloc_r+0x34>
 8022d06:	463c      	mov	r4, r7
 8022d08:	687f      	ldr	r7, [r7, #4]
 8022d0a:	e7b6      	b.n	8022c7a <_malloc_r+0x4a>
 8022d0c:	461a      	mov	r2, r3
 8022d0e:	685b      	ldr	r3, [r3, #4]
 8022d10:	42a3      	cmp	r3, r4
 8022d12:	d1fb      	bne.n	8022d0c <_malloc_r+0xdc>
 8022d14:	2300      	movs	r3, #0
 8022d16:	6053      	str	r3, [r2, #4]
 8022d18:	e7de      	b.n	8022cd8 <_malloc_r+0xa8>
 8022d1a:	230c      	movs	r3, #12
 8022d1c:	6033      	str	r3, [r6, #0]
 8022d1e:	4630      	mov	r0, r6
 8022d20:	f000 f80c 	bl	8022d3c <__malloc_unlock>
 8022d24:	e794      	b.n	8022c50 <_malloc_r+0x20>
 8022d26:	6005      	str	r5, [r0, #0]
 8022d28:	e7d6      	b.n	8022cd8 <_malloc_r+0xa8>
 8022d2a:	bf00      	nop
 8022d2c:	20014aa4 	.word	0x20014aa4

08022d30 <__malloc_lock>:
 8022d30:	4801      	ldr	r0, [pc, #4]	@ (8022d38 <__malloc_lock+0x8>)
 8022d32:	f000 b9fc 	b.w	802312e <__retarget_lock_acquire_recursive>
 8022d36:	bf00      	nop
 8022d38:	20014be8 	.word	0x20014be8

08022d3c <__malloc_unlock>:
 8022d3c:	4801      	ldr	r0, [pc, #4]	@ (8022d44 <__malloc_unlock+0x8>)
 8022d3e:	f000 b9f7 	b.w	8023130 <__retarget_lock_release_recursive>
 8022d42:	bf00      	nop
 8022d44:	20014be8 	.word	0x20014be8

08022d48 <__cxa_atexit>:
 8022d48:	b510      	push	{r4, lr}
 8022d4a:	4604      	mov	r4, r0
 8022d4c:	4804      	ldr	r0, [pc, #16]	@ (8022d60 <__cxa_atexit+0x18>)
 8022d4e:	4613      	mov	r3, r2
 8022d50:	b120      	cbz	r0, 8022d5c <__cxa_atexit+0x14>
 8022d52:	460a      	mov	r2, r1
 8022d54:	2002      	movs	r0, #2
 8022d56:	4621      	mov	r1, r4
 8022d58:	f000 f9fa 	bl	8023150 <__register_exitproc>
 8022d5c:	bd10      	pop	{r4, pc}
 8022d5e:	bf00      	nop
 8022d60:	08023151 	.word	0x08023151

08022d64 <std>:
 8022d64:	2300      	movs	r3, #0
 8022d66:	b510      	push	{r4, lr}
 8022d68:	4604      	mov	r4, r0
 8022d6a:	e9c0 3300 	strd	r3, r3, [r0]
 8022d6e:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8022d72:	6083      	str	r3, [r0, #8]
 8022d74:	8181      	strh	r1, [r0, #12]
 8022d76:	6643      	str	r3, [r0, #100]	@ 0x64
 8022d78:	81c2      	strh	r2, [r0, #14]
 8022d7a:	6183      	str	r3, [r0, #24]
 8022d7c:	4619      	mov	r1, r3
 8022d7e:	2208      	movs	r2, #8
 8022d80:	305c      	adds	r0, #92	@ 0x5c
 8022d82:	f000 f906 	bl	8022f92 <memset>
 8022d86:	4b0d      	ldr	r3, [pc, #52]	@ (8022dbc <std+0x58>)
 8022d88:	6263      	str	r3, [r4, #36]	@ 0x24
 8022d8a:	4b0d      	ldr	r3, [pc, #52]	@ (8022dc0 <std+0x5c>)
 8022d8c:	62a3      	str	r3, [r4, #40]	@ 0x28
 8022d8e:	4b0d      	ldr	r3, [pc, #52]	@ (8022dc4 <std+0x60>)
 8022d90:	62e3      	str	r3, [r4, #44]	@ 0x2c
 8022d92:	4b0d      	ldr	r3, [pc, #52]	@ (8022dc8 <std+0x64>)
 8022d94:	6323      	str	r3, [r4, #48]	@ 0x30
 8022d96:	4b0d      	ldr	r3, [pc, #52]	@ (8022dcc <std+0x68>)
 8022d98:	6224      	str	r4, [r4, #32]
 8022d9a:	429c      	cmp	r4, r3
 8022d9c:	d006      	beq.n	8022dac <std+0x48>
 8022d9e:	f103 0268 	add.w	r2, r3, #104	@ 0x68
 8022da2:	4294      	cmp	r4, r2
 8022da4:	d002      	beq.n	8022dac <std+0x48>
 8022da6:	33d0      	adds	r3, #208	@ 0xd0
 8022da8:	429c      	cmp	r4, r3
 8022daa:	d105      	bne.n	8022db8 <std+0x54>
 8022dac:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 8022db0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8022db4:	f000 b9ba 	b.w	802312c <__retarget_lock_init_recursive>
 8022db8:	bd10      	pop	{r4, pc}
 8022dba:	bf00      	nop
 8022dbc:	08022f0d 	.word	0x08022f0d
 8022dc0:	08022f2f 	.word	0x08022f2f
 8022dc4:	08022f67 	.word	0x08022f67
 8022dc8:	08022f8b 	.word	0x08022f8b
 8022dcc:	20014aa8 	.word	0x20014aa8

08022dd0 <stdio_exit_handler>:
 8022dd0:	4a02      	ldr	r2, [pc, #8]	@ (8022ddc <stdio_exit_handler+0xc>)
 8022dd2:	4903      	ldr	r1, [pc, #12]	@ (8022de0 <stdio_exit_handler+0x10>)
 8022dd4:	4803      	ldr	r0, [pc, #12]	@ (8022de4 <stdio_exit_handler+0x14>)
 8022dd6:	f000 b87b 	b.w	8022ed0 <_fwalk_sglue>
 8022dda:	bf00      	nop
 8022ddc:	20000214 	.word	0x20000214
 8022de0:	08023941 	.word	0x08023941
 8022de4:	20000224 	.word	0x20000224

08022de8 <cleanup_stdio>:
 8022de8:	6841      	ldr	r1, [r0, #4]
 8022dea:	4b0c      	ldr	r3, [pc, #48]	@ (8022e1c <cleanup_stdio+0x34>)
 8022dec:	4299      	cmp	r1, r3
 8022dee:	b510      	push	{r4, lr}
 8022df0:	4604      	mov	r4, r0
 8022df2:	d001      	beq.n	8022df8 <cleanup_stdio+0x10>
 8022df4:	f000 fda4 	bl	8023940 <_fflush_r>
 8022df8:	68a1      	ldr	r1, [r4, #8]
 8022dfa:	4b09      	ldr	r3, [pc, #36]	@ (8022e20 <cleanup_stdio+0x38>)
 8022dfc:	4299      	cmp	r1, r3
 8022dfe:	d002      	beq.n	8022e06 <cleanup_stdio+0x1e>
 8022e00:	4620      	mov	r0, r4
 8022e02:	f000 fd9d 	bl	8023940 <_fflush_r>
 8022e06:	68e1      	ldr	r1, [r4, #12]
 8022e08:	4b06      	ldr	r3, [pc, #24]	@ (8022e24 <cleanup_stdio+0x3c>)
 8022e0a:	4299      	cmp	r1, r3
 8022e0c:	d004      	beq.n	8022e18 <cleanup_stdio+0x30>
 8022e0e:	4620      	mov	r0, r4
 8022e10:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8022e14:	f000 bd94 	b.w	8023940 <_fflush_r>
 8022e18:	bd10      	pop	{r4, pc}
 8022e1a:	bf00      	nop
 8022e1c:	20014aa8 	.word	0x20014aa8
 8022e20:	20014b10 	.word	0x20014b10
 8022e24:	20014b78 	.word	0x20014b78

08022e28 <global_stdio_init.part.0>:
 8022e28:	b510      	push	{r4, lr}
 8022e2a:	4b0b      	ldr	r3, [pc, #44]	@ (8022e58 <global_stdio_init.part.0+0x30>)
 8022e2c:	4c0b      	ldr	r4, [pc, #44]	@ (8022e5c <global_stdio_init.part.0+0x34>)
 8022e2e:	4a0c      	ldr	r2, [pc, #48]	@ (8022e60 <global_stdio_init.part.0+0x38>)
 8022e30:	601a      	str	r2, [r3, #0]
 8022e32:	4620      	mov	r0, r4
 8022e34:	2200      	movs	r2, #0
 8022e36:	2104      	movs	r1, #4
 8022e38:	f7ff ff94 	bl	8022d64 <std>
 8022e3c:	f104 0068 	add.w	r0, r4, #104	@ 0x68
 8022e40:	2201      	movs	r2, #1
 8022e42:	2109      	movs	r1, #9
 8022e44:	f7ff ff8e 	bl	8022d64 <std>
 8022e48:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
 8022e4c:	2202      	movs	r2, #2
 8022e4e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8022e52:	2112      	movs	r1, #18
 8022e54:	f7ff bf86 	b.w	8022d64 <std>
 8022e58:	20014be0 	.word	0x20014be0
 8022e5c:	20014aa8 	.word	0x20014aa8
 8022e60:	08022dd1 	.word	0x08022dd1

08022e64 <__sfp_lock_acquire>:
 8022e64:	4801      	ldr	r0, [pc, #4]	@ (8022e6c <__sfp_lock_acquire+0x8>)
 8022e66:	f000 b962 	b.w	802312e <__retarget_lock_acquire_recursive>
 8022e6a:	bf00      	nop
 8022e6c:	20014bea 	.word	0x20014bea

08022e70 <__sfp_lock_release>:
 8022e70:	4801      	ldr	r0, [pc, #4]	@ (8022e78 <__sfp_lock_release+0x8>)
 8022e72:	f000 b95d 	b.w	8023130 <__retarget_lock_release_recursive>
 8022e76:	bf00      	nop
 8022e78:	20014bea 	.word	0x20014bea

08022e7c <__sinit>:
 8022e7c:	b510      	push	{r4, lr}
 8022e7e:	4604      	mov	r4, r0
 8022e80:	f7ff fff0 	bl	8022e64 <__sfp_lock_acquire>
 8022e84:	6a23      	ldr	r3, [r4, #32]
 8022e86:	b11b      	cbz	r3, 8022e90 <__sinit+0x14>
 8022e88:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8022e8c:	f7ff bff0 	b.w	8022e70 <__sfp_lock_release>
 8022e90:	4b04      	ldr	r3, [pc, #16]	@ (8022ea4 <__sinit+0x28>)
 8022e92:	6223      	str	r3, [r4, #32]
 8022e94:	4b04      	ldr	r3, [pc, #16]	@ (8022ea8 <__sinit+0x2c>)
 8022e96:	681b      	ldr	r3, [r3, #0]
 8022e98:	2b00      	cmp	r3, #0
 8022e9a:	d1f5      	bne.n	8022e88 <__sinit+0xc>
 8022e9c:	f7ff ffc4 	bl	8022e28 <global_stdio_init.part.0>
 8022ea0:	e7f2      	b.n	8022e88 <__sinit+0xc>
 8022ea2:	bf00      	nop
 8022ea4:	08022de9 	.word	0x08022de9
 8022ea8:	20014be0 	.word	0x20014be0

08022eac <fiprintf>:
 8022eac:	b40e      	push	{r1, r2, r3}
 8022eae:	b503      	push	{r0, r1, lr}
 8022eb0:	4601      	mov	r1, r0
 8022eb2:	ab03      	add	r3, sp, #12
 8022eb4:	4805      	ldr	r0, [pc, #20]	@ (8022ecc <fiprintf+0x20>)
 8022eb6:	f853 2b04 	ldr.w	r2, [r3], #4
 8022eba:	6800      	ldr	r0, [r0, #0]
 8022ebc:	9301      	str	r3, [sp, #4]
 8022ebe:	f000 fa17 	bl	80232f0 <_vfiprintf_r>
 8022ec2:	b002      	add	sp, #8
 8022ec4:	f85d eb04 	ldr.w	lr, [sp], #4
 8022ec8:	b003      	add	sp, #12
 8022eca:	4770      	bx	lr
 8022ecc:	20000220 	.word	0x20000220

08022ed0 <_fwalk_sglue>:
 8022ed0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8022ed4:	4607      	mov	r7, r0
 8022ed6:	4688      	mov	r8, r1
 8022ed8:	4614      	mov	r4, r2
 8022eda:	2600      	movs	r6, #0
 8022edc:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8022ee0:	f1b9 0901 	subs.w	r9, r9, #1
 8022ee4:	d505      	bpl.n	8022ef2 <_fwalk_sglue+0x22>
 8022ee6:	6824      	ldr	r4, [r4, #0]
 8022ee8:	2c00      	cmp	r4, #0
 8022eea:	d1f7      	bne.n	8022edc <_fwalk_sglue+0xc>
 8022eec:	4630      	mov	r0, r6
 8022eee:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8022ef2:	89ab      	ldrh	r3, [r5, #12]
 8022ef4:	2b01      	cmp	r3, #1
 8022ef6:	d907      	bls.n	8022f08 <_fwalk_sglue+0x38>
 8022ef8:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8022efc:	3301      	adds	r3, #1
 8022efe:	d003      	beq.n	8022f08 <_fwalk_sglue+0x38>
 8022f00:	4629      	mov	r1, r5
 8022f02:	4638      	mov	r0, r7
 8022f04:	47c0      	blx	r8
 8022f06:	4306      	orrs	r6, r0
 8022f08:	3568      	adds	r5, #104	@ 0x68
 8022f0a:	e7e9      	b.n	8022ee0 <_fwalk_sglue+0x10>

08022f0c <__sread>:
 8022f0c:	b510      	push	{r4, lr}
 8022f0e:	460c      	mov	r4, r1
 8022f10:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8022f14:	f000 f898 	bl	8023048 <_read_r>
 8022f18:	2800      	cmp	r0, #0
 8022f1a:	bfab      	itete	ge
 8022f1c:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
 8022f1e:	89a3      	ldrhlt	r3, [r4, #12]
 8022f20:	181b      	addge	r3, r3, r0
 8022f22:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
 8022f26:	bfac      	ite	ge
 8022f28:	6563      	strge	r3, [r4, #84]	@ 0x54
 8022f2a:	81a3      	strhlt	r3, [r4, #12]
 8022f2c:	bd10      	pop	{r4, pc}

08022f2e <__swrite>:
 8022f2e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8022f32:	461f      	mov	r7, r3
 8022f34:	898b      	ldrh	r3, [r1, #12]
 8022f36:	05db      	lsls	r3, r3, #23
 8022f38:	4605      	mov	r5, r0
 8022f3a:	460c      	mov	r4, r1
 8022f3c:	4616      	mov	r6, r2
 8022f3e:	d505      	bpl.n	8022f4c <__swrite+0x1e>
 8022f40:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8022f44:	2302      	movs	r3, #2
 8022f46:	2200      	movs	r2, #0
 8022f48:	f000 f86c 	bl	8023024 <_lseek_r>
 8022f4c:	89a3      	ldrh	r3, [r4, #12]
 8022f4e:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8022f52:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 8022f56:	81a3      	strh	r3, [r4, #12]
 8022f58:	4632      	mov	r2, r6
 8022f5a:	463b      	mov	r3, r7
 8022f5c:	4628      	mov	r0, r5
 8022f5e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8022f62:	f000 b8a7 	b.w	80230b4 <_write_r>

08022f66 <__sseek>:
 8022f66:	b510      	push	{r4, lr}
 8022f68:	460c      	mov	r4, r1
 8022f6a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8022f6e:	f000 f859 	bl	8023024 <_lseek_r>
 8022f72:	1c43      	adds	r3, r0, #1
 8022f74:	89a3      	ldrh	r3, [r4, #12]
 8022f76:	bf15      	itete	ne
 8022f78:	6560      	strne	r0, [r4, #84]	@ 0x54
 8022f7a:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
 8022f7e:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 8022f82:	81a3      	strheq	r3, [r4, #12]
 8022f84:	bf18      	it	ne
 8022f86:	81a3      	strhne	r3, [r4, #12]
 8022f88:	bd10      	pop	{r4, pc}

08022f8a <__sclose>:
 8022f8a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8022f8e:	f000 b839 	b.w	8023004 <_close_r>

08022f92 <memset>:
 8022f92:	4402      	add	r2, r0
 8022f94:	4603      	mov	r3, r0
 8022f96:	4293      	cmp	r3, r2
 8022f98:	d100      	bne.n	8022f9c <memset+0xa>
 8022f9a:	4770      	bx	lr
 8022f9c:	f803 1b01 	strb.w	r1, [r3], #1
 8022fa0:	e7f9      	b.n	8022f96 <memset+0x4>

08022fa2 <_raise_r>:
 8022fa2:	291f      	cmp	r1, #31
 8022fa4:	b538      	push	{r3, r4, r5, lr}
 8022fa6:	4605      	mov	r5, r0
 8022fa8:	460c      	mov	r4, r1
 8022faa:	d904      	bls.n	8022fb6 <_raise_r+0x14>
 8022fac:	2316      	movs	r3, #22
 8022fae:	6003      	str	r3, [r0, #0]
 8022fb0:	f04f 30ff 	mov.w	r0, #4294967295
 8022fb4:	bd38      	pop	{r3, r4, r5, pc}
 8022fb6:	6bc2      	ldr	r2, [r0, #60]	@ 0x3c
 8022fb8:	b112      	cbz	r2, 8022fc0 <_raise_r+0x1e>
 8022fba:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 8022fbe:	b94b      	cbnz	r3, 8022fd4 <_raise_r+0x32>
 8022fc0:	4628      	mov	r0, r5
 8022fc2:	f000 f865 	bl	8023090 <_getpid_r>
 8022fc6:	4622      	mov	r2, r4
 8022fc8:	4601      	mov	r1, r0
 8022fca:	4628      	mov	r0, r5
 8022fcc:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8022fd0:	f000 b84c 	b.w	802306c <_kill_r>
 8022fd4:	2b01      	cmp	r3, #1
 8022fd6:	d00a      	beq.n	8022fee <_raise_r+0x4c>
 8022fd8:	1c59      	adds	r1, r3, #1
 8022fda:	d103      	bne.n	8022fe4 <_raise_r+0x42>
 8022fdc:	2316      	movs	r3, #22
 8022fde:	6003      	str	r3, [r0, #0]
 8022fe0:	2001      	movs	r0, #1
 8022fe2:	e7e7      	b.n	8022fb4 <_raise_r+0x12>
 8022fe4:	2100      	movs	r1, #0
 8022fe6:	f842 1024 	str.w	r1, [r2, r4, lsl #2]
 8022fea:	4620      	mov	r0, r4
 8022fec:	4798      	blx	r3
 8022fee:	2000      	movs	r0, #0
 8022ff0:	e7e0      	b.n	8022fb4 <_raise_r+0x12>
	...

08022ff4 <raise>:
 8022ff4:	4b02      	ldr	r3, [pc, #8]	@ (8023000 <raise+0xc>)
 8022ff6:	4601      	mov	r1, r0
 8022ff8:	6818      	ldr	r0, [r3, #0]
 8022ffa:	f7ff bfd2 	b.w	8022fa2 <_raise_r>
 8022ffe:	bf00      	nop
 8023000:	20000220 	.word	0x20000220

08023004 <_close_r>:
 8023004:	b538      	push	{r3, r4, r5, lr}
 8023006:	4d06      	ldr	r5, [pc, #24]	@ (8023020 <_close_r+0x1c>)
 8023008:	2300      	movs	r3, #0
 802300a:	4604      	mov	r4, r0
 802300c:	4608      	mov	r0, r1
 802300e:	602b      	str	r3, [r5, #0]
 8023010:	f7df fb5e 	bl	80026d0 <_close>
 8023014:	1c43      	adds	r3, r0, #1
 8023016:	d102      	bne.n	802301e <_close_r+0x1a>
 8023018:	682b      	ldr	r3, [r5, #0]
 802301a:	b103      	cbz	r3, 802301e <_close_r+0x1a>
 802301c:	6023      	str	r3, [r4, #0]
 802301e:	bd38      	pop	{r3, r4, r5, pc}
 8023020:	20014be4 	.word	0x20014be4

08023024 <_lseek_r>:
 8023024:	b538      	push	{r3, r4, r5, lr}
 8023026:	4d07      	ldr	r5, [pc, #28]	@ (8023044 <_lseek_r+0x20>)
 8023028:	4604      	mov	r4, r0
 802302a:	4608      	mov	r0, r1
 802302c:	4611      	mov	r1, r2
 802302e:	2200      	movs	r2, #0
 8023030:	602a      	str	r2, [r5, #0]
 8023032:	461a      	mov	r2, r3
 8023034:	f7df fb56 	bl	80026e4 <_lseek>
 8023038:	1c43      	adds	r3, r0, #1
 802303a:	d102      	bne.n	8023042 <_lseek_r+0x1e>
 802303c:	682b      	ldr	r3, [r5, #0]
 802303e:	b103      	cbz	r3, 8023042 <_lseek_r+0x1e>
 8023040:	6023      	str	r3, [r4, #0]
 8023042:	bd38      	pop	{r3, r4, r5, pc}
 8023044:	20014be4 	.word	0x20014be4

08023048 <_read_r>:
 8023048:	b538      	push	{r3, r4, r5, lr}
 802304a:	4d07      	ldr	r5, [pc, #28]	@ (8023068 <_read_r+0x20>)
 802304c:	4604      	mov	r4, r0
 802304e:	4608      	mov	r0, r1
 8023050:	4611      	mov	r1, r2
 8023052:	2200      	movs	r2, #0
 8023054:	602a      	str	r2, [r5, #0]
 8023056:	461a      	mov	r2, r3
 8023058:	f7df fb1e 	bl	8002698 <_read>
 802305c:	1c43      	adds	r3, r0, #1
 802305e:	d102      	bne.n	8023066 <_read_r+0x1e>
 8023060:	682b      	ldr	r3, [r5, #0]
 8023062:	b103      	cbz	r3, 8023066 <_read_r+0x1e>
 8023064:	6023      	str	r3, [r4, #0]
 8023066:	bd38      	pop	{r3, r4, r5, pc}
 8023068:	20014be4 	.word	0x20014be4

0802306c <_kill_r>:
 802306c:	b538      	push	{r3, r4, r5, lr}
 802306e:	4d07      	ldr	r5, [pc, #28]	@ (802308c <_kill_r+0x20>)
 8023070:	2300      	movs	r3, #0
 8023072:	4604      	mov	r4, r0
 8023074:	4608      	mov	r0, r1
 8023076:	4611      	mov	r1, r2
 8023078:	602b      	str	r3, [r5, #0]
 802307a:	f7df faff 	bl	800267c <_kill>
 802307e:	1c43      	adds	r3, r0, #1
 8023080:	d102      	bne.n	8023088 <_kill_r+0x1c>
 8023082:	682b      	ldr	r3, [r5, #0]
 8023084:	b103      	cbz	r3, 8023088 <_kill_r+0x1c>
 8023086:	6023      	str	r3, [r4, #0]
 8023088:	bd38      	pop	{r3, r4, r5, pc}
 802308a:	bf00      	nop
 802308c:	20014be4 	.word	0x20014be4

08023090 <_getpid_r>:
 8023090:	f7df baf2 	b.w	8002678 <_getpid>

08023094 <_sbrk_r>:
 8023094:	b538      	push	{r3, r4, r5, lr}
 8023096:	4d06      	ldr	r5, [pc, #24]	@ (80230b0 <_sbrk_r+0x1c>)
 8023098:	2300      	movs	r3, #0
 802309a:	4604      	mov	r4, r0
 802309c:	4608      	mov	r0, r1
 802309e:	602b      	str	r3, [r5, #0]
 80230a0:	f7df fb22 	bl	80026e8 <_sbrk>
 80230a4:	1c43      	adds	r3, r0, #1
 80230a6:	d102      	bne.n	80230ae <_sbrk_r+0x1a>
 80230a8:	682b      	ldr	r3, [r5, #0]
 80230aa:	b103      	cbz	r3, 80230ae <_sbrk_r+0x1a>
 80230ac:	6023      	str	r3, [r4, #0]
 80230ae:	bd38      	pop	{r3, r4, r5, pc}
 80230b0:	20014be4 	.word	0x20014be4

080230b4 <_write_r>:
 80230b4:	b538      	push	{r3, r4, r5, lr}
 80230b6:	4d07      	ldr	r5, [pc, #28]	@ (80230d4 <_write_r+0x20>)
 80230b8:	4604      	mov	r4, r0
 80230ba:	4608      	mov	r0, r1
 80230bc:	4611      	mov	r1, r2
 80230be:	2200      	movs	r2, #0
 80230c0:	602a      	str	r2, [r5, #0]
 80230c2:	461a      	mov	r2, r3
 80230c4:	f7df faf6 	bl	80026b4 <_write>
 80230c8:	1c43      	adds	r3, r0, #1
 80230ca:	d102      	bne.n	80230d2 <_write_r+0x1e>
 80230cc:	682b      	ldr	r3, [r5, #0]
 80230ce:	b103      	cbz	r3, 80230d2 <_write_r+0x1e>
 80230d0:	6023      	str	r3, [r4, #0]
 80230d2:	bd38      	pop	{r3, r4, r5, pc}
 80230d4:	20014be4 	.word	0x20014be4

080230d8 <__errno>:
 80230d8:	4b01      	ldr	r3, [pc, #4]	@ (80230e0 <__errno+0x8>)
 80230da:	6818      	ldr	r0, [r3, #0]
 80230dc:	4770      	bx	lr
 80230de:	bf00      	nop
 80230e0:	20000220 	.word	0x20000220

080230e4 <__libc_init_array>:
 80230e4:	b570      	push	{r4, r5, r6, lr}
 80230e6:	4d0d      	ldr	r5, [pc, #52]	@ (802311c <__libc_init_array+0x38>)
 80230e8:	4c0d      	ldr	r4, [pc, #52]	@ (8023120 <__libc_init_array+0x3c>)
 80230ea:	1b64      	subs	r4, r4, r5
 80230ec:	10a4      	asrs	r4, r4, #2
 80230ee:	2600      	movs	r6, #0
 80230f0:	42a6      	cmp	r6, r4
 80230f2:	d109      	bne.n	8023108 <__libc_init_array+0x24>
 80230f4:	4d0b      	ldr	r5, [pc, #44]	@ (8023124 <__libc_init_array+0x40>)
 80230f6:	4c0c      	ldr	r4, [pc, #48]	@ (8023128 <__libc_init_array+0x44>)
 80230f8:	f000 fd62 	bl	8023bc0 <_init>
 80230fc:	1b64      	subs	r4, r4, r5
 80230fe:	10a4      	asrs	r4, r4, #2
 8023100:	2600      	movs	r6, #0
 8023102:	42a6      	cmp	r6, r4
 8023104:	d105      	bne.n	8023112 <__libc_init_array+0x2e>
 8023106:	bd70      	pop	{r4, r5, r6, pc}
 8023108:	f855 3b04 	ldr.w	r3, [r5], #4
 802310c:	4798      	blx	r3
 802310e:	3601      	adds	r6, #1
 8023110:	e7ee      	b.n	80230f0 <__libc_init_array+0xc>
 8023112:	f855 3b04 	ldr.w	r3, [r5], #4
 8023116:	4798      	blx	r3
 8023118:	3601      	adds	r6, #1
 802311a:	e7f2      	b.n	8023102 <__libc_init_array+0x1e>
 802311c:	08025f0c 	.word	0x08025f0c
 8023120:	08025f0c 	.word	0x08025f0c
 8023124:	08025f0c 	.word	0x08025f0c
 8023128:	08025f20 	.word	0x08025f20

0802312c <__retarget_lock_init_recursive>:
 802312c:	4770      	bx	lr

0802312e <__retarget_lock_acquire_recursive>:
 802312e:	4770      	bx	lr

08023130 <__retarget_lock_release_recursive>:
 8023130:	4770      	bx	lr

08023132 <memcpy>:
 8023132:	440a      	add	r2, r1
 8023134:	4291      	cmp	r1, r2
 8023136:	f100 33ff 	add.w	r3, r0, #4294967295
 802313a:	d100      	bne.n	802313e <memcpy+0xc>
 802313c:	4770      	bx	lr
 802313e:	b510      	push	{r4, lr}
 8023140:	f811 4b01 	ldrb.w	r4, [r1], #1
 8023144:	f803 4f01 	strb.w	r4, [r3, #1]!
 8023148:	4291      	cmp	r1, r2
 802314a:	d1f9      	bne.n	8023140 <memcpy+0xe>
 802314c:	bd10      	pop	{r4, pc}
	...

08023150 <__register_exitproc>:
 8023150:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8023154:	4d27      	ldr	r5, [pc, #156]	@ (80231f4 <__register_exitproc+0xa4>)
 8023156:	4607      	mov	r7, r0
 8023158:	6828      	ldr	r0, [r5, #0]
 802315a:	4691      	mov	r9, r2
 802315c:	460e      	mov	r6, r1
 802315e:	4698      	mov	r8, r3
 8023160:	f7ff ffe5 	bl	802312e <__retarget_lock_acquire_recursive>
 8023164:	4a24      	ldr	r2, [pc, #144]	@ (80231f8 <__register_exitproc+0xa8>)
 8023166:	6814      	ldr	r4, [r2, #0]
 8023168:	b93c      	cbnz	r4, 802317a <__register_exitproc+0x2a>
 802316a:	4b24      	ldr	r3, [pc, #144]	@ (80231fc <__register_exitproc+0xac>)
 802316c:	6013      	str	r3, [r2, #0]
 802316e:	4a24      	ldr	r2, [pc, #144]	@ (8023200 <__register_exitproc+0xb0>)
 8023170:	b112      	cbz	r2, 8023178 <__register_exitproc+0x28>
 8023172:	6812      	ldr	r2, [r2, #0]
 8023174:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
 8023178:	4c20      	ldr	r4, [pc, #128]	@ (80231fc <__register_exitproc+0xac>)
 802317a:	6863      	ldr	r3, [r4, #4]
 802317c:	2b1f      	cmp	r3, #31
 802317e:	dd06      	ble.n	802318e <__register_exitproc+0x3e>
 8023180:	6828      	ldr	r0, [r5, #0]
 8023182:	f7ff ffd5 	bl	8023130 <__retarget_lock_release_recursive>
 8023186:	f04f 30ff 	mov.w	r0, #4294967295
 802318a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 802318e:	b32f      	cbz	r7, 80231dc <__register_exitproc+0x8c>
 8023190:	f8d4 0088 	ldr.w	r0, [r4, #136]	@ 0x88
 8023194:	b968      	cbnz	r0, 80231b2 <__register_exitproc+0x62>
 8023196:	4b1b      	ldr	r3, [pc, #108]	@ (8023204 <__register_exitproc+0xb4>)
 8023198:	2b00      	cmp	r3, #0
 802319a:	d0f1      	beq.n	8023180 <__register_exitproc+0x30>
 802319c:	f44f 7084 	mov.w	r0, #264	@ 0x108
 80231a0:	f7ff fd14 	bl	8022bcc <malloc>
 80231a4:	2800      	cmp	r0, #0
 80231a6:	d0eb      	beq.n	8023180 <__register_exitproc+0x30>
 80231a8:	2300      	movs	r3, #0
 80231aa:	e9c0 3340 	strd	r3, r3, [r0, #256]	@ 0x100
 80231ae:	f8c4 0088 	str.w	r0, [r4, #136]	@ 0x88
 80231b2:	6863      	ldr	r3, [r4, #4]
 80231b4:	f840 9023 	str.w	r9, [r0, r3, lsl #2]
 80231b8:	2201      	movs	r2, #1
 80231ba:	409a      	lsls	r2, r3
 80231bc:	eb00 0183 	add.w	r1, r0, r3, lsl #2
 80231c0:	f8d0 3100 	ldr.w	r3, [r0, #256]	@ 0x100
 80231c4:	4313      	orrs	r3, r2
 80231c6:	f8c0 3100 	str.w	r3, [r0, #256]	@ 0x100
 80231ca:	2f02      	cmp	r7, #2
 80231cc:	f8c1 8080 	str.w	r8, [r1, #128]	@ 0x80
 80231d0:	bf02      	ittt	eq
 80231d2:	f8d0 3104 	ldreq.w	r3, [r0, #260]	@ 0x104
 80231d6:	4313      	orreq	r3, r2
 80231d8:	f8c0 3104 	streq.w	r3, [r0, #260]	@ 0x104
 80231dc:	6863      	ldr	r3, [r4, #4]
 80231de:	6828      	ldr	r0, [r5, #0]
 80231e0:	1c5a      	adds	r2, r3, #1
 80231e2:	3302      	adds	r3, #2
 80231e4:	6062      	str	r2, [r4, #4]
 80231e6:	f844 6023 	str.w	r6, [r4, r3, lsl #2]
 80231ea:	f7ff ffa1 	bl	8023130 <__retarget_lock_release_recursive>
 80231ee:	2000      	movs	r0, #0
 80231f0:	e7cb      	b.n	802318a <__register_exitproc+0x3a>
 80231f2:	bf00      	nop
 80231f4:	20000270 	.word	0x20000270
 80231f8:	20014c78 	.word	0x20014c78
 80231fc:	20014bec 	.word	0x20014bec
 8023200:	0802596c 	.word	0x0802596c
 8023204:	08022bcd 	.word	0x08022bcd

08023208 <_free_r>:
 8023208:	b538      	push	{r3, r4, r5, lr}
 802320a:	4605      	mov	r5, r0
 802320c:	2900      	cmp	r1, #0
 802320e:	d041      	beq.n	8023294 <_free_r+0x8c>
 8023210:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8023214:	1f0c      	subs	r4, r1, #4
 8023216:	2b00      	cmp	r3, #0
 8023218:	bfb8      	it	lt
 802321a:	18e4      	addlt	r4, r4, r3
 802321c:	f7ff fd88 	bl	8022d30 <__malloc_lock>
 8023220:	4a1d      	ldr	r2, [pc, #116]	@ (8023298 <_free_r+0x90>)
 8023222:	6813      	ldr	r3, [r2, #0]
 8023224:	b933      	cbnz	r3, 8023234 <_free_r+0x2c>
 8023226:	6063      	str	r3, [r4, #4]
 8023228:	6014      	str	r4, [r2, #0]
 802322a:	4628      	mov	r0, r5
 802322c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8023230:	f7ff bd84 	b.w	8022d3c <__malloc_unlock>
 8023234:	42a3      	cmp	r3, r4
 8023236:	d908      	bls.n	802324a <_free_r+0x42>
 8023238:	6820      	ldr	r0, [r4, #0]
 802323a:	1821      	adds	r1, r4, r0
 802323c:	428b      	cmp	r3, r1
 802323e:	bf01      	itttt	eq
 8023240:	6819      	ldreq	r1, [r3, #0]
 8023242:	685b      	ldreq	r3, [r3, #4]
 8023244:	1809      	addeq	r1, r1, r0
 8023246:	6021      	streq	r1, [r4, #0]
 8023248:	e7ed      	b.n	8023226 <_free_r+0x1e>
 802324a:	461a      	mov	r2, r3
 802324c:	685b      	ldr	r3, [r3, #4]
 802324e:	b10b      	cbz	r3, 8023254 <_free_r+0x4c>
 8023250:	42a3      	cmp	r3, r4
 8023252:	d9fa      	bls.n	802324a <_free_r+0x42>
 8023254:	6811      	ldr	r1, [r2, #0]
 8023256:	1850      	adds	r0, r2, r1
 8023258:	42a0      	cmp	r0, r4
 802325a:	d10b      	bne.n	8023274 <_free_r+0x6c>
 802325c:	6820      	ldr	r0, [r4, #0]
 802325e:	4401      	add	r1, r0
 8023260:	1850      	adds	r0, r2, r1
 8023262:	4283      	cmp	r3, r0
 8023264:	6011      	str	r1, [r2, #0]
 8023266:	d1e0      	bne.n	802322a <_free_r+0x22>
 8023268:	6818      	ldr	r0, [r3, #0]
 802326a:	685b      	ldr	r3, [r3, #4]
 802326c:	6053      	str	r3, [r2, #4]
 802326e:	4408      	add	r0, r1
 8023270:	6010      	str	r0, [r2, #0]
 8023272:	e7da      	b.n	802322a <_free_r+0x22>
 8023274:	d902      	bls.n	802327c <_free_r+0x74>
 8023276:	230c      	movs	r3, #12
 8023278:	602b      	str	r3, [r5, #0]
 802327a:	e7d6      	b.n	802322a <_free_r+0x22>
 802327c:	6820      	ldr	r0, [r4, #0]
 802327e:	1821      	adds	r1, r4, r0
 8023280:	428b      	cmp	r3, r1
 8023282:	bf04      	itt	eq
 8023284:	6819      	ldreq	r1, [r3, #0]
 8023286:	685b      	ldreq	r3, [r3, #4]
 8023288:	6063      	str	r3, [r4, #4]
 802328a:	bf04      	itt	eq
 802328c:	1809      	addeq	r1, r1, r0
 802328e:	6021      	streq	r1, [r4, #0]
 8023290:	6054      	str	r4, [r2, #4]
 8023292:	e7ca      	b.n	802322a <_free_r+0x22>
 8023294:	bd38      	pop	{r3, r4, r5, pc}
 8023296:	bf00      	nop
 8023298:	20014aa4 	.word	0x20014aa4

0802329c <__sfputc_r>:
 802329c:	6893      	ldr	r3, [r2, #8]
 802329e:	3b01      	subs	r3, #1
 80232a0:	2b00      	cmp	r3, #0
 80232a2:	b410      	push	{r4}
 80232a4:	6093      	str	r3, [r2, #8]
 80232a6:	da08      	bge.n	80232ba <__sfputc_r+0x1e>
 80232a8:	6994      	ldr	r4, [r2, #24]
 80232aa:	42a3      	cmp	r3, r4
 80232ac:	db01      	blt.n	80232b2 <__sfputc_r+0x16>
 80232ae:	290a      	cmp	r1, #10
 80232b0:	d103      	bne.n	80232ba <__sfputc_r+0x1e>
 80232b2:	f85d 4b04 	ldr.w	r4, [sp], #4
 80232b6:	f000 bb6b 	b.w	8023990 <__swbuf_r>
 80232ba:	6813      	ldr	r3, [r2, #0]
 80232bc:	1c58      	adds	r0, r3, #1
 80232be:	6010      	str	r0, [r2, #0]
 80232c0:	7019      	strb	r1, [r3, #0]
 80232c2:	4608      	mov	r0, r1
 80232c4:	f85d 4b04 	ldr.w	r4, [sp], #4
 80232c8:	4770      	bx	lr

080232ca <__sfputs_r>:
 80232ca:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80232cc:	4606      	mov	r6, r0
 80232ce:	460f      	mov	r7, r1
 80232d0:	4614      	mov	r4, r2
 80232d2:	18d5      	adds	r5, r2, r3
 80232d4:	42ac      	cmp	r4, r5
 80232d6:	d101      	bne.n	80232dc <__sfputs_r+0x12>
 80232d8:	2000      	movs	r0, #0
 80232da:	e007      	b.n	80232ec <__sfputs_r+0x22>
 80232dc:	f814 1b01 	ldrb.w	r1, [r4], #1
 80232e0:	463a      	mov	r2, r7
 80232e2:	4630      	mov	r0, r6
 80232e4:	f7ff ffda 	bl	802329c <__sfputc_r>
 80232e8:	1c43      	adds	r3, r0, #1
 80232ea:	d1f3      	bne.n	80232d4 <__sfputs_r+0xa>
 80232ec:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

080232f0 <_vfiprintf_r>:
 80232f0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80232f4:	460d      	mov	r5, r1
 80232f6:	b09d      	sub	sp, #116	@ 0x74
 80232f8:	4614      	mov	r4, r2
 80232fa:	4698      	mov	r8, r3
 80232fc:	4606      	mov	r6, r0
 80232fe:	b118      	cbz	r0, 8023308 <_vfiprintf_r+0x18>
 8023300:	6a03      	ldr	r3, [r0, #32]
 8023302:	b90b      	cbnz	r3, 8023308 <_vfiprintf_r+0x18>
 8023304:	f7ff fdba 	bl	8022e7c <__sinit>
 8023308:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 802330a:	07d9      	lsls	r1, r3, #31
 802330c:	d405      	bmi.n	802331a <_vfiprintf_r+0x2a>
 802330e:	89ab      	ldrh	r3, [r5, #12]
 8023310:	059a      	lsls	r2, r3, #22
 8023312:	d402      	bmi.n	802331a <_vfiprintf_r+0x2a>
 8023314:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8023316:	f7ff ff0a 	bl	802312e <__retarget_lock_acquire_recursive>
 802331a:	89ab      	ldrh	r3, [r5, #12]
 802331c:	071b      	lsls	r3, r3, #28
 802331e:	d501      	bpl.n	8023324 <_vfiprintf_r+0x34>
 8023320:	692b      	ldr	r3, [r5, #16]
 8023322:	b99b      	cbnz	r3, 802334c <_vfiprintf_r+0x5c>
 8023324:	4629      	mov	r1, r5
 8023326:	4630      	mov	r0, r6
 8023328:	f000 fb70 	bl	8023a0c <__swsetup_r>
 802332c:	b170      	cbz	r0, 802334c <_vfiprintf_r+0x5c>
 802332e:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8023330:	07dc      	lsls	r4, r3, #31
 8023332:	d504      	bpl.n	802333e <_vfiprintf_r+0x4e>
 8023334:	f04f 30ff 	mov.w	r0, #4294967295
 8023338:	b01d      	add	sp, #116	@ 0x74
 802333a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802333e:	89ab      	ldrh	r3, [r5, #12]
 8023340:	0598      	lsls	r0, r3, #22
 8023342:	d4f7      	bmi.n	8023334 <_vfiprintf_r+0x44>
 8023344:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8023346:	f7ff fef3 	bl	8023130 <__retarget_lock_release_recursive>
 802334a:	e7f3      	b.n	8023334 <_vfiprintf_r+0x44>
 802334c:	2300      	movs	r3, #0
 802334e:	9309      	str	r3, [sp, #36]	@ 0x24
 8023350:	2320      	movs	r3, #32
 8023352:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 8023356:	f8cd 800c 	str.w	r8, [sp, #12]
 802335a:	2330      	movs	r3, #48	@ 0x30
 802335c:	f8df 81ac 	ldr.w	r8, [pc, #428]	@ 802350c <_vfiprintf_r+0x21c>
 8023360:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 8023364:	f04f 0901 	mov.w	r9, #1
 8023368:	4623      	mov	r3, r4
 802336a:	469a      	mov	sl, r3
 802336c:	f813 2b01 	ldrb.w	r2, [r3], #1
 8023370:	b10a      	cbz	r2, 8023376 <_vfiprintf_r+0x86>
 8023372:	2a25      	cmp	r2, #37	@ 0x25
 8023374:	d1f9      	bne.n	802336a <_vfiprintf_r+0x7a>
 8023376:	ebba 0b04 	subs.w	fp, sl, r4
 802337a:	d00b      	beq.n	8023394 <_vfiprintf_r+0xa4>
 802337c:	465b      	mov	r3, fp
 802337e:	4622      	mov	r2, r4
 8023380:	4629      	mov	r1, r5
 8023382:	4630      	mov	r0, r6
 8023384:	f7ff ffa1 	bl	80232ca <__sfputs_r>
 8023388:	3001      	adds	r0, #1
 802338a:	f000 80a7 	beq.w	80234dc <_vfiprintf_r+0x1ec>
 802338e:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8023390:	445a      	add	r2, fp
 8023392:	9209      	str	r2, [sp, #36]	@ 0x24
 8023394:	f89a 3000 	ldrb.w	r3, [sl]
 8023398:	2b00      	cmp	r3, #0
 802339a:	f000 809f 	beq.w	80234dc <_vfiprintf_r+0x1ec>
 802339e:	2300      	movs	r3, #0
 80233a0:	f04f 32ff 	mov.w	r2, #4294967295
 80233a4:	e9cd 2305 	strd	r2, r3, [sp, #20]
 80233a8:	f10a 0a01 	add.w	sl, sl, #1
 80233ac:	9304      	str	r3, [sp, #16]
 80233ae:	9307      	str	r3, [sp, #28]
 80233b0:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 80233b4:	931a      	str	r3, [sp, #104]	@ 0x68
 80233b6:	4654      	mov	r4, sl
 80233b8:	2205      	movs	r2, #5
 80233ba:	f814 1b01 	ldrb.w	r1, [r4], #1
 80233be:	4853      	ldr	r0, [pc, #332]	@ (802350c <_vfiprintf_r+0x21c>)
 80233c0:	f7dc ff1e 	bl	8000200 <memchr>
 80233c4:	9a04      	ldr	r2, [sp, #16]
 80233c6:	b9d8      	cbnz	r0, 8023400 <_vfiprintf_r+0x110>
 80233c8:	06d1      	lsls	r1, r2, #27
 80233ca:	bf44      	itt	mi
 80233cc:	2320      	movmi	r3, #32
 80233ce:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 80233d2:	0713      	lsls	r3, r2, #28
 80233d4:	bf44      	itt	mi
 80233d6:	232b      	movmi	r3, #43	@ 0x2b
 80233d8:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 80233dc:	f89a 3000 	ldrb.w	r3, [sl]
 80233e0:	2b2a      	cmp	r3, #42	@ 0x2a
 80233e2:	d015      	beq.n	8023410 <_vfiprintf_r+0x120>
 80233e4:	9a07      	ldr	r2, [sp, #28]
 80233e6:	4654      	mov	r4, sl
 80233e8:	2000      	movs	r0, #0
 80233ea:	f04f 0c0a 	mov.w	ip, #10
 80233ee:	4621      	mov	r1, r4
 80233f0:	f811 3b01 	ldrb.w	r3, [r1], #1
 80233f4:	3b30      	subs	r3, #48	@ 0x30
 80233f6:	2b09      	cmp	r3, #9
 80233f8:	d94b      	bls.n	8023492 <_vfiprintf_r+0x1a2>
 80233fa:	b1b0      	cbz	r0, 802342a <_vfiprintf_r+0x13a>
 80233fc:	9207      	str	r2, [sp, #28]
 80233fe:	e014      	b.n	802342a <_vfiprintf_r+0x13a>
 8023400:	eba0 0308 	sub.w	r3, r0, r8
 8023404:	fa09 f303 	lsl.w	r3, r9, r3
 8023408:	4313      	orrs	r3, r2
 802340a:	9304      	str	r3, [sp, #16]
 802340c:	46a2      	mov	sl, r4
 802340e:	e7d2      	b.n	80233b6 <_vfiprintf_r+0xc6>
 8023410:	9b03      	ldr	r3, [sp, #12]
 8023412:	1d19      	adds	r1, r3, #4
 8023414:	681b      	ldr	r3, [r3, #0]
 8023416:	9103      	str	r1, [sp, #12]
 8023418:	2b00      	cmp	r3, #0
 802341a:	bfbb      	ittet	lt
 802341c:	425b      	neglt	r3, r3
 802341e:	f042 0202 	orrlt.w	r2, r2, #2
 8023422:	9307      	strge	r3, [sp, #28]
 8023424:	9307      	strlt	r3, [sp, #28]
 8023426:	bfb8      	it	lt
 8023428:	9204      	strlt	r2, [sp, #16]
 802342a:	7823      	ldrb	r3, [r4, #0]
 802342c:	2b2e      	cmp	r3, #46	@ 0x2e
 802342e:	d10a      	bne.n	8023446 <_vfiprintf_r+0x156>
 8023430:	7863      	ldrb	r3, [r4, #1]
 8023432:	2b2a      	cmp	r3, #42	@ 0x2a
 8023434:	d132      	bne.n	802349c <_vfiprintf_r+0x1ac>
 8023436:	9b03      	ldr	r3, [sp, #12]
 8023438:	1d1a      	adds	r2, r3, #4
 802343a:	681b      	ldr	r3, [r3, #0]
 802343c:	9203      	str	r2, [sp, #12]
 802343e:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 8023442:	3402      	adds	r4, #2
 8023444:	9305      	str	r3, [sp, #20]
 8023446:	f8df a0d4 	ldr.w	sl, [pc, #212]	@ 802351c <_vfiprintf_r+0x22c>
 802344a:	7821      	ldrb	r1, [r4, #0]
 802344c:	2203      	movs	r2, #3
 802344e:	4650      	mov	r0, sl
 8023450:	f7dc fed6 	bl	8000200 <memchr>
 8023454:	b138      	cbz	r0, 8023466 <_vfiprintf_r+0x176>
 8023456:	9b04      	ldr	r3, [sp, #16]
 8023458:	eba0 000a 	sub.w	r0, r0, sl
 802345c:	2240      	movs	r2, #64	@ 0x40
 802345e:	4082      	lsls	r2, r0
 8023460:	4313      	orrs	r3, r2
 8023462:	3401      	adds	r4, #1
 8023464:	9304      	str	r3, [sp, #16]
 8023466:	f814 1b01 	ldrb.w	r1, [r4], #1
 802346a:	4829      	ldr	r0, [pc, #164]	@ (8023510 <_vfiprintf_r+0x220>)
 802346c:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 8023470:	2206      	movs	r2, #6
 8023472:	f7dc fec5 	bl	8000200 <memchr>
 8023476:	2800      	cmp	r0, #0
 8023478:	d03f      	beq.n	80234fa <_vfiprintf_r+0x20a>
 802347a:	4b26      	ldr	r3, [pc, #152]	@ (8023514 <_vfiprintf_r+0x224>)
 802347c:	bb1b      	cbnz	r3, 80234c6 <_vfiprintf_r+0x1d6>
 802347e:	9b03      	ldr	r3, [sp, #12]
 8023480:	3307      	adds	r3, #7
 8023482:	f023 0307 	bic.w	r3, r3, #7
 8023486:	3308      	adds	r3, #8
 8023488:	9303      	str	r3, [sp, #12]
 802348a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 802348c:	443b      	add	r3, r7
 802348e:	9309      	str	r3, [sp, #36]	@ 0x24
 8023490:	e76a      	b.n	8023368 <_vfiprintf_r+0x78>
 8023492:	fb0c 3202 	mla	r2, ip, r2, r3
 8023496:	460c      	mov	r4, r1
 8023498:	2001      	movs	r0, #1
 802349a:	e7a8      	b.n	80233ee <_vfiprintf_r+0xfe>
 802349c:	2300      	movs	r3, #0
 802349e:	3401      	adds	r4, #1
 80234a0:	9305      	str	r3, [sp, #20]
 80234a2:	4619      	mov	r1, r3
 80234a4:	f04f 0c0a 	mov.w	ip, #10
 80234a8:	4620      	mov	r0, r4
 80234aa:	f810 2b01 	ldrb.w	r2, [r0], #1
 80234ae:	3a30      	subs	r2, #48	@ 0x30
 80234b0:	2a09      	cmp	r2, #9
 80234b2:	d903      	bls.n	80234bc <_vfiprintf_r+0x1cc>
 80234b4:	2b00      	cmp	r3, #0
 80234b6:	d0c6      	beq.n	8023446 <_vfiprintf_r+0x156>
 80234b8:	9105      	str	r1, [sp, #20]
 80234ba:	e7c4      	b.n	8023446 <_vfiprintf_r+0x156>
 80234bc:	fb0c 2101 	mla	r1, ip, r1, r2
 80234c0:	4604      	mov	r4, r0
 80234c2:	2301      	movs	r3, #1
 80234c4:	e7f0      	b.n	80234a8 <_vfiprintf_r+0x1b8>
 80234c6:	ab03      	add	r3, sp, #12
 80234c8:	9300      	str	r3, [sp, #0]
 80234ca:	462a      	mov	r2, r5
 80234cc:	4b12      	ldr	r3, [pc, #72]	@ (8023518 <_vfiprintf_r+0x228>)
 80234ce:	a904      	add	r1, sp, #16
 80234d0:	4630      	mov	r0, r6
 80234d2:	f3af 8000 	nop.w
 80234d6:	4607      	mov	r7, r0
 80234d8:	1c78      	adds	r0, r7, #1
 80234da:	d1d6      	bne.n	802348a <_vfiprintf_r+0x19a>
 80234dc:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 80234de:	07d9      	lsls	r1, r3, #31
 80234e0:	d405      	bmi.n	80234ee <_vfiprintf_r+0x1fe>
 80234e2:	89ab      	ldrh	r3, [r5, #12]
 80234e4:	059a      	lsls	r2, r3, #22
 80234e6:	d402      	bmi.n	80234ee <_vfiprintf_r+0x1fe>
 80234e8:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 80234ea:	f7ff fe21 	bl	8023130 <__retarget_lock_release_recursive>
 80234ee:	89ab      	ldrh	r3, [r5, #12]
 80234f0:	065b      	lsls	r3, r3, #25
 80234f2:	f53f af1f 	bmi.w	8023334 <_vfiprintf_r+0x44>
 80234f6:	9809      	ldr	r0, [sp, #36]	@ 0x24
 80234f8:	e71e      	b.n	8023338 <_vfiprintf_r+0x48>
 80234fa:	ab03      	add	r3, sp, #12
 80234fc:	9300      	str	r3, [sp, #0]
 80234fe:	462a      	mov	r2, r5
 8023500:	4b05      	ldr	r3, [pc, #20]	@ (8023518 <_vfiprintf_r+0x228>)
 8023502:	a904      	add	r1, sp, #16
 8023504:	4630      	mov	r0, r6
 8023506:	f000 f879 	bl	80235fc <_printf_i>
 802350a:	e7e4      	b.n	80234d6 <_vfiprintf_r+0x1e6>
 802350c:	08024679 	.word	0x08024679
 8023510:	08024683 	.word	0x08024683
 8023514:	00000000 	.word	0x00000000
 8023518:	080232cb 	.word	0x080232cb
 802351c:	0802467f 	.word	0x0802467f

08023520 <_printf_common>:
 8023520:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8023524:	4616      	mov	r6, r2
 8023526:	4698      	mov	r8, r3
 8023528:	688a      	ldr	r2, [r1, #8]
 802352a:	690b      	ldr	r3, [r1, #16]
 802352c:	f8dd 9020 	ldr.w	r9, [sp, #32]
 8023530:	4293      	cmp	r3, r2
 8023532:	bfb8      	it	lt
 8023534:	4613      	movlt	r3, r2
 8023536:	6033      	str	r3, [r6, #0]
 8023538:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 802353c:	4607      	mov	r7, r0
 802353e:	460c      	mov	r4, r1
 8023540:	b10a      	cbz	r2, 8023546 <_printf_common+0x26>
 8023542:	3301      	adds	r3, #1
 8023544:	6033      	str	r3, [r6, #0]
 8023546:	6823      	ldr	r3, [r4, #0]
 8023548:	0699      	lsls	r1, r3, #26
 802354a:	bf42      	ittt	mi
 802354c:	6833      	ldrmi	r3, [r6, #0]
 802354e:	3302      	addmi	r3, #2
 8023550:	6033      	strmi	r3, [r6, #0]
 8023552:	6825      	ldr	r5, [r4, #0]
 8023554:	f015 0506 	ands.w	r5, r5, #6
 8023558:	d106      	bne.n	8023568 <_printf_common+0x48>
 802355a:	f104 0a19 	add.w	sl, r4, #25
 802355e:	68e3      	ldr	r3, [r4, #12]
 8023560:	6832      	ldr	r2, [r6, #0]
 8023562:	1a9b      	subs	r3, r3, r2
 8023564:	42ab      	cmp	r3, r5
 8023566:	dc26      	bgt.n	80235b6 <_printf_common+0x96>
 8023568:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 802356c:	6822      	ldr	r2, [r4, #0]
 802356e:	3b00      	subs	r3, #0
 8023570:	bf18      	it	ne
 8023572:	2301      	movne	r3, #1
 8023574:	0692      	lsls	r2, r2, #26
 8023576:	d42b      	bmi.n	80235d0 <_printf_common+0xb0>
 8023578:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 802357c:	4641      	mov	r1, r8
 802357e:	4638      	mov	r0, r7
 8023580:	47c8      	blx	r9
 8023582:	3001      	adds	r0, #1
 8023584:	d01e      	beq.n	80235c4 <_printf_common+0xa4>
 8023586:	6823      	ldr	r3, [r4, #0]
 8023588:	6922      	ldr	r2, [r4, #16]
 802358a:	f003 0306 	and.w	r3, r3, #6
 802358e:	2b04      	cmp	r3, #4
 8023590:	bf02      	ittt	eq
 8023592:	68e5      	ldreq	r5, [r4, #12]
 8023594:	6833      	ldreq	r3, [r6, #0]
 8023596:	1aed      	subeq	r5, r5, r3
 8023598:	68a3      	ldr	r3, [r4, #8]
 802359a:	bf0c      	ite	eq
 802359c:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 80235a0:	2500      	movne	r5, #0
 80235a2:	4293      	cmp	r3, r2
 80235a4:	bfc4      	itt	gt
 80235a6:	1a9b      	subgt	r3, r3, r2
 80235a8:	18ed      	addgt	r5, r5, r3
 80235aa:	2600      	movs	r6, #0
 80235ac:	341a      	adds	r4, #26
 80235ae:	42b5      	cmp	r5, r6
 80235b0:	d11a      	bne.n	80235e8 <_printf_common+0xc8>
 80235b2:	2000      	movs	r0, #0
 80235b4:	e008      	b.n	80235c8 <_printf_common+0xa8>
 80235b6:	2301      	movs	r3, #1
 80235b8:	4652      	mov	r2, sl
 80235ba:	4641      	mov	r1, r8
 80235bc:	4638      	mov	r0, r7
 80235be:	47c8      	blx	r9
 80235c0:	3001      	adds	r0, #1
 80235c2:	d103      	bne.n	80235cc <_printf_common+0xac>
 80235c4:	f04f 30ff 	mov.w	r0, #4294967295
 80235c8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80235cc:	3501      	adds	r5, #1
 80235ce:	e7c6      	b.n	802355e <_printf_common+0x3e>
 80235d0:	18e1      	adds	r1, r4, r3
 80235d2:	1c5a      	adds	r2, r3, #1
 80235d4:	2030      	movs	r0, #48	@ 0x30
 80235d6:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 80235da:	4422      	add	r2, r4
 80235dc:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 80235e0:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 80235e4:	3302      	adds	r3, #2
 80235e6:	e7c7      	b.n	8023578 <_printf_common+0x58>
 80235e8:	2301      	movs	r3, #1
 80235ea:	4622      	mov	r2, r4
 80235ec:	4641      	mov	r1, r8
 80235ee:	4638      	mov	r0, r7
 80235f0:	47c8      	blx	r9
 80235f2:	3001      	adds	r0, #1
 80235f4:	d0e6      	beq.n	80235c4 <_printf_common+0xa4>
 80235f6:	3601      	adds	r6, #1
 80235f8:	e7d9      	b.n	80235ae <_printf_common+0x8e>
	...

080235fc <_printf_i>:
 80235fc:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8023600:	7e0f      	ldrb	r7, [r1, #24]
 8023602:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 8023604:	2f78      	cmp	r7, #120	@ 0x78
 8023606:	4691      	mov	r9, r2
 8023608:	4680      	mov	r8, r0
 802360a:	460c      	mov	r4, r1
 802360c:	469a      	mov	sl, r3
 802360e:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 8023612:	d807      	bhi.n	8023624 <_printf_i+0x28>
 8023614:	2f62      	cmp	r7, #98	@ 0x62
 8023616:	d80a      	bhi.n	802362e <_printf_i+0x32>
 8023618:	2f00      	cmp	r7, #0
 802361a:	f000 80d1 	beq.w	80237c0 <_printf_i+0x1c4>
 802361e:	2f58      	cmp	r7, #88	@ 0x58
 8023620:	f000 80b8 	beq.w	8023794 <_printf_i+0x198>
 8023624:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8023628:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 802362c:	e03a      	b.n	80236a4 <_printf_i+0xa8>
 802362e:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 8023632:	2b15      	cmp	r3, #21
 8023634:	d8f6      	bhi.n	8023624 <_printf_i+0x28>
 8023636:	a101      	add	r1, pc, #4	@ (adr r1, 802363c <_printf_i+0x40>)
 8023638:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 802363c:	08023695 	.word	0x08023695
 8023640:	080236a9 	.word	0x080236a9
 8023644:	08023625 	.word	0x08023625
 8023648:	08023625 	.word	0x08023625
 802364c:	08023625 	.word	0x08023625
 8023650:	08023625 	.word	0x08023625
 8023654:	080236a9 	.word	0x080236a9
 8023658:	08023625 	.word	0x08023625
 802365c:	08023625 	.word	0x08023625
 8023660:	08023625 	.word	0x08023625
 8023664:	08023625 	.word	0x08023625
 8023668:	080237a7 	.word	0x080237a7
 802366c:	080236d3 	.word	0x080236d3
 8023670:	08023761 	.word	0x08023761
 8023674:	08023625 	.word	0x08023625
 8023678:	08023625 	.word	0x08023625
 802367c:	080237c9 	.word	0x080237c9
 8023680:	08023625 	.word	0x08023625
 8023684:	080236d3 	.word	0x080236d3
 8023688:	08023625 	.word	0x08023625
 802368c:	08023625 	.word	0x08023625
 8023690:	08023769 	.word	0x08023769
 8023694:	6833      	ldr	r3, [r6, #0]
 8023696:	1d1a      	adds	r2, r3, #4
 8023698:	681b      	ldr	r3, [r3, #0]
 802369a:	6032      	str	r2, [r6, #0]
 802369c:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 80236a0:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 80236a4:	2301      	movs	r3, #1
 80236a6:	e09c      	b.n	80237e2 <_printf_i+0x1e6>
 80236a8:	6833      	ldr	r3, [r6, #0]
 80236aa:	6820      	ldr	r0, [r4, #0]
 80236ac:	1d19      	adds	r1, r3, #4
 80236ae:	6031      	str	r1, [r6, #0]
 80236b0:	0606      	lsls	r6, r0, #24
 80236b2:	d501      	bpl.n	80236b8 <_printf_i+0xbc>
 80236b4:	681d      	ldr	r5, [r3, #0]
 80236b6:	e003      	b.n	80236c0 <_printf_i+0xc4>
 80236b8:	0645      	lsls	r5, r0, #25
 80236ba:	d5fb      	bpl.n	80236b4 <_printf_i+0xb8>
 80236bc:	f9b3 5000 	ldrsh.w	r5, [r3]
 80236c0:	2d00      	cmp	r5, #0
 80236c2:	da03      	bge.n	80236cc <_printf_i+0xd0>
 80236c4:	232d      	movs	r3, #45	@ 0x2d
 80236c6:	426d      	negs	r5, r5
 80236c8:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 80236cc:	4858      	ldr	r0, [pc, #352]	@ (8023830 <_printf_i+0x234>)
 80236ce:	230a      	movs	r3, #10
 80236d0:	e011      	b.n	80236f6 <_printf_i+0xfa>
 80236d2:	6821      	ldr	r1, [r4, #0]
 80236d4:	6833      	ldr	r3, [r6, #0]
 80236d6:	0608      	lsls	r0, r1, #24
 80236d8:	f853 5b04 	ldr.w	r5, [r3], #4
 80236dc:	d402      	bmi.n	80236e4 <_printf_i+0xe8>
 80236de:	0649      	lsls	r1, r1, #25
 80236e0:	bf48      	it	mi
 80236e2:	b2ad      	uxthmi	r5, r5
 80236e4:	2f6f      	cmp	r7, #111	@ 0x6f
 80236e6:	4852      	ldr	r0, [pc, #328]	@ (8023830 <_printf_i+0x234>)
 80236e8:	6033      	str	r3, [r6, #0]
 80236ea:	bf14      	ite	ne
 80236ec:	230a      	movne	r3, #10
 80236ee:	2308      	moveq	r3, #8
 80236f0:	2100      	movs	r1, #0
 80236f2:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 80236f6:	6866      	ldr	r6, [r4, #4]
 80236f8:	60a6      	str	r6, [r4, #8]
 80236fa:	2e00      	cmp	r6, #0
 80236fc:	db05      	blt.n	802370a <_printf_i+0x10e>
 80236fe:	6821      	ldr	r1, [r4, #0]
 8023700:	432e      	orrs	r6, r5
 8023702:	f021 0104 	bic.w	r1, r1, #4
 8023706:	6021      	str	r1, [r4, #0]
 8023708:	d04b      	beq.n	80237a2 <_printf_i+0x1a6>
 802370a:	4616      	mov	r6, r2
 802370c:	fbb5 f1f3 	udiv	r1, r5, r3
 8023710:	fb03 5711 	mls	r7, r3, r1, r5
 8023714:	5dc7      	ldrb	r7, [r0, r7]
 8023716:	f806 7d01 	strb.w	r7, [r6, #-1]!
 802371a:	462f      	mov	r7, r5
 802371c:	42bb      	cmp	r3, r7
 802371e:	460d      	mov	r5, r1
 8023720:	d9f4      	bls.n	802370c <_printf_i+0x110>
 8023722:	2b08      	cmp	r3, #8
 8023724:	d10b      	bne.n	802373e <_printf_i+0x142>
 8023726:	6823      	ldr	r3, [r4, #0]
 8023728:	07df      	lsls	r7, r3, #31
 802372a:	d508      	bpl.n	802373e <_printf_i+0x142>
 802372c:	6923      	ldr	r3, [r4, #16]
 802372e:	6861      	ldr	r1, [r4, #4]
 8023730:	4299      	cmp	r1, r3
 8023732:	bfde      	ittt	le
 8023734:	2330      	movle	r3, #48	@ 0x30
 8023736:	f806 3c01 	strble.w	r3, [r6, #-1]
 802373a:	f106 36ff 	addle.w	r6, r6, #4294967295
 802373e:	1b92      	subs	r2, r2, r6
 8023740:	6122      	str	r2, [r4, #16]
 8023742:	f8cd a000 	str.w	sl, [sp]
 8023746:	464b      	mov	r3, r9
 8023748:	aa03      	add	r2, sp, #12
 802374a:	4621      	mov	r1, r4
 802374c:	4640      	mov	r0, r8
 802374e:	f7ff fee7 	bl	8023520 <_printf_common>
 8023752:	3001      	adds	r0, #1
 8023754:	d14a      	bne.n	80237ec <_printf_i+0x1f0>
 8023756:	f04f 30ff 	mov.w	r0, #4294967295
 802375a:	b004      	add	sp, #16
 802375c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8023760:	6823      	ldr	r3, [r4, #0]
 8023762:	f043 0320 	orr.w	r3, r3, #32
 8023766:	6023      	str	r3, [r4, #0]
 8023768:	4832      	ldr	r0, [pc, #200]	@ (8023834 <_printf_i+0x238>)
 802376a:	2778      	movs	r7, #120	@ 0x78
 802376c:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 8023770:	6823      	ldr	r3, [r4, #0]
 8023772:	6831      	ldr	r1, [r6, #0]
 8023774:	061f      	lsls	r7, r3, #24
 8023776:	f851 5b04 	ldr.w	r5, [r1], #4
 802377a:	d402      	bmi.n	8023782 <_printf_i+0x186>
 802377c:	065f      	lsls	r7, r3, #25
 802377e:	bf48      	it	mi
 8023780:	b2ad      	uxthmi	r5, r5
 8023782:	6031      	str	r1, [r6, #0]
 8023784:	07d9      	lsls	r1, r3, #31
 8023786:	bf44      	itt	mi
 8023788:	f043 0320 	orrmi.w	r3, r3, #32
 802378c:	6023      	strmi	r3, [r4, #0]
 802378e:	b11d      	cbz	r5, 8023798 <_printf_i+0x19c>
 8023790:	2310      	movs	r3, #16
 8023792:	e7ad      	b.n	80236f0 <_printf_i+0xf4>
 8023794:	4826      	ldr	r0, [pc, #152]	@ (8023830 <_printf_i+0x234>)
 8023796:	e7e9      	b.n	802376c <_printf_i+0x170>
 8023798:	6823      	ldr	r3, [r4, #0]
 802379a:	f023 0320 	bic.w	r3, r3, #32
 802379e:	6023      	str	r3, [r4, #0]
 80237a0:	e7f6      	b.n	8023790 <_printf_i+0x194>
 80237a2:	4616      	mov	r6, r2
 80237a4:	e7bd      	b.n	8023722 <_printf_i+0x126>
 80237a6:	6833      	ldr	r3, [r6, #0]
 80237a8:	6825      	ldr	r5, [r4, #0]
 80237aa:	6961      	ldr	r1, [r4, #20]
 80237ac:	1d18      	adds	r0, r3, #4
 80237ae:	6030      	str	r0, [r6, #0]
 80237b0:	062e      	lsls	r6, r5, #24
 80237b2:	681b      	ldr	r3, [r3, #0]
 80237b4:	d501      	bpl.n	80237ba <_printf_i+0x1be>
 80237b6:	6019      	str	r1, [r3, #0]
 80237b8:	e002      	b.n	80237c0 <_printf_i+0x1c4>
 80237ba:	0668      	lsls	r0, r5, #25
 80237bc:	d5fb      	bpl.n	80237b6 <_printf_i+0x1ba>
 80237be:	8019      	strh	r1, [r3, #0]
 80237c0:	2300      	movs	r3, #0
 80237c2:	6123      	str	r3, [r4, #16]
 80237c4:	4616      	mov	r6, r2
 80237c6:	e7bc      	b.n	8023742 <_printf_i+0x146>
 80237c8:	6833      	ldr	r3, [r6, #0]
 80237ca:	1d1a      	adds	r2, r3, #4
 80237cc:	6032      	str	r2, [r6, #0]
 80237ce:	681e      	ldr	r6, [r3, #0]
 80237d0:	6862      	ldr	r2, [r4, #4]
 80237d2:	2100      	movs	r1, #0
 80237d4:	4630      	mov	r0, r6
 80237d6:	f7dc fd13 	bl	8000200 <memchr>
 80237da:	b108      	cbz	r0, 80237e0 <_printf_i+0x1e4>
 80237dc:	1b80      	subs	r0, r0, r6
 80237de:	6060      	str	r0, [r4, #4]
 80237e0:	6863      	ldr	r3, [r4, #4]
 80237e2:	6123      	str	r3, [r4, #16]
 80237e4:	2300      	movs	r3, #0
 80237e6:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 80237ea:	e7aa      	b.n	8023742 <_printf_i+0x146>
 80237ec:	6923      	ldr	r3, [r4, #16]
 80237ee:	4632      	mov	r2, r6
 80237f0:	4649      	mov	r1, r9
 80237f2:	4640      	mov	r0, r8
 80237f4:	47d0      	blx	sl
 80237f6:	3001      	adds	r0, #1
 80237f8:	d0ad      	beq.n	8023756 <_printf_i+0x15a>
 80237fa:	6823      	ldr	r3, [r4, #0]
 80237fc:	079b      	lsls	r3, r3, #30
 80237fe:	d413      	bmi.n	8023828 <_printf_i+0x22c>
 8023800:	68e0      	ldr	r0, [r4, #12]
 8023802:	9b03      	ldr	r3, [sp, #12]
 8023804:	4298      	cmp	r0, r3
 8023806:	bfb8      	it	lt
 8023808:	4618      	movlt	r0, r3
 802380a:	e7a6      	b.n	802375a <_printf_i+0x15e>
 802380c:	2301      	movs	r3, #1
 802380e:	4632      	mov	r2, r6
 8023810:	4649      	mov	r1, r9
 8023812:	4640      	mov	r0, r8
 8023814:	47d0      	blx	sl
 8023816:	3001      	adds	r0, #1
 8023818:	d09d      	beq.n	8023756 <_printf_i+0x15a>
 802381a:	3501      	adds	r5, #1
 802381c:	68e3      	ldr	r3, [r4, #12]
 802381e:	9903      	ldr	r1, [sp, #12]
 8023820:	1a5b      	subs	r3, r3, r1
 8023822:	42ab      	cmp	r3, r5
 8023824:	dcf2      	bgt.n	802380c <_printf_i+0x210>
 8023826:	e7eb      	b.n	8023800 <_printf_i+0x204>
 8023828:	2500      	movs	r5, #0
 802382a:	f104 0619 	add.w	r6, r4, #25
 802382e:	e7f5      	b.n	802381c <_printf_i+0x220>
 8023830:	0802468a 	.word	0x0802468a
 8023834:	0802469b 	.word	0x0802469b

08023838 <__sflush_r>:
 8023838:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 802383c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8023840:	0716      	lsls	r6, r2, #28
 8023842:	4605      	mov	r5, r0
 8023844:	460c      	mov	r4, r1
 8023846:	d454      	bmi.n	80238f2 <__sflush_r+0xba>
 8023848:	684b      	ldr	r3, [r1, #4]
 802384a:	2b00      	cmp	r3, #0
 802384c:	dc02      	bgt.n	8023854 <__sflush_r+0x1c>
 802384e:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
 8023850:	2b00      	cmp	r3, #0
 8023852:	dd48      	ble.n	80238e6 <__sflush_r+0xae>
 8023854:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8023856:	2e00      	cmp	r6, #0
 8023858:	d045      	beq.n	80238e6 <__sflush_r+0xae>
 802385a:	2300      	movs	r3, #0
 802385c:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
 8023860:	682f      	ldr	r7, [r5, #0]
 8023862:	6a21      	ldr	r1, [r4, #32]
 8023864:	602b      	str	r3, [r5, #0]
 8023866:	d030      	beq.n	80238ca <__sflush_r+0x92>
 8023868:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 802386a:	89a3      	ldrh	r3, [r4, #12]
 802386c:	0759      	lsls	r1, r3, #29
 802386e:	d505      	bpl.n	802387c <__sflush_r+0x44>
 8023870:	6863      	ldr	r3, [r4, #4]
 8023872:	1ad2      	subs	r2, r2, r3
 8023874:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 8023876:	b10b      	cbz	r3, 802387c <__sflush_r+0x44>
 8023878:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 802387a:	1ad2      	subs	r2, r2, r3
 802387c:	2300      	movs	r3, #0
 802387e:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8023880:	6a21      	ldr	r1, [r4, #32]
 8023882:	4628      	mov	r0, r5
 8023884:	47b0      	blx	r6
 8023886:	1c43      	adds	r3, r0, #1
 8023888:	89a3      	ldrh	r3, [r4, #12]
 802388a:	d106      	bne.n	802389a <__sflush_r+0x62>
 802388c:	6829      	ldr	r1, [r5, #0]
 802388e:	291d      	cmp	r1, #29
 8023890:	d82b      	bhi.n	80238ea <__sflush_r+0xb2>
 8023892:	4a2a      	ldr	r2, [pc, #168]	@ (802393c <__sflush_r+0x104>)
 8023894:	40ca      	lsrs	r2, r1
 8023896:	07d6      	lsls	r6, r2, #31
 8023898:	d527      	bpl.n	80238ea <__sflush_r+0xb2>
 802389a:	2200      	movs	r2, #0
 802389c:	6062      	str	r2, [r4, #4]
 802389e:	04d9      	lsls	r1, r3, #19
 80238a0:	6922      	ldr	r2, [r4, #16]
 80238a2:	6022      	str	r2, [r4, #0]
 80238a4:	d504      	bpl.n	80238b0 <__sflush_r+0x78>
 80238a6:	1c42      	adds	r2, r0, #1
 80238a8:	d101      	bne.n	80238ae <__sflush_r+0x76>
 80238aa:	682b      	ldr	r3, [r5, #0]
 80238ac:	b903      	cbnz	r3, 80238b0 <__sflush_r+0x78>
 80238ae:	6560      	str	r0, [r4, #84]	@ 0x54
 80238b0:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 80238b2:	602f      	str	r7, [r5, #0]
 80238b4:	b1b9      	cbz	r1, 80238e6 <__sflush_r+0xae>
 80238b6:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 80238ba:	4299      	cmp	r1, r3
 80238bc:	d002      	beq.n	80238c4 <__sflush_r+0x8c>
 80238be:	4628      	mov	r0, r5
 80238c0:	f7ff fca2 	bl	8023208 <_free_r>
 80238c4:	2300      	movs	r3, #0
 80238c6:	6363      	str	r3, [r4, #52]	@ 0x34
 80238c8:	e00d      	b.n	80238e6 <__sflush_r+0xae>
 80238ca:	2301      	movs	r3, #1
 80238cc:	4628      	mov	r0, r5
 80238ce:	47b0      	blx	r6
 80238d0:	4602      	mov	r2, r0
 80238d2:	1c50      	adds	r0, r2, #1
 80238d4:	d1c9      	bne.n	802386a <__sflush_r+0x32>
 80238d6:	682b      	ldr	r3, [r5, #0]
 80238d8:	2b00      	cmp	r3, #0
 80238da:	d0c6      	beq.n	802386a <__sflush_r+0x32>
 80238dc:	2b1d      	cmp	r3, #29
 80238de:	d001      	beq.n	80238e4 <__sflush_r+0xac>
 80238e0:	2b16      	cmp	r3, #22
 80238e2:	d11e      	bne.n	8023922 <__sflush_r+0xea>
 80238e4:	602f      	str	r7, [r5, #0]
 80238e6:	2000      	movs	r0, #0
 80238e8:	e022      	b.n	8023930 <__sflush_r+0xf8>
 80238ea:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80238ee:	b21b      	sxth	r3, r3
 80238f0:	e01b      	b.n	802392a <__sflush_r+0xf2>
 80238f2:	690f      	ldr	r7, [r1, #16]
 80238f4:	2f00      	cmp	r7, #0
 80238f6:	d0f6      	beq.n	80238e6 <__sflush_r+0xae>
 80238f8:	0793      	lsls	r3, r2, #30
 80238fa:	680e      	ldr	r6, [r1, #0]
 80238fc:	bf08      	it	eq
 80238fe:	694b      	ldreq	r3, [r1, #20]
 8023900:	600f      	str	r7, [r1, #0]
 8023902:	bf18      	it	ne
 8023904:	2300      	movne	r3, #0
 8023906:	eba6 0807 	sub.w	r8, r6, r7
 802390a:	608b      	str	r3, [r1, #8]
 802390c:	f1b8 0f00 	cmp.w	r8, #0
 8023910:	dde9      	ble.n	80238e6 <__sflush_r+0xae>
 8023912:	6a21      	ldr	r1, [r4, #32]
 8023914:	6aa6      	ldr	r6, [r4, #40]	@ 0x28
 8023916:	4643      	mov	r3, r8
 8023918:	463a      	mov	r2, r7
 802391a:	4628      	mov	r0, r5
 802391c:	47b0      	blx	r6
 802391e:	2800      	cmp	r0, #0
 8023920:	dc08      	bgt.n	8023934 <__sflush_r+0xfc>
 8023922:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8023926:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 802392a:	81a3      	strh	r3, [r4, #12]
 802392c:	f04f 30ff 	mov.w	r0, #4294967295
 8023930:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8023934:	4407      	add	r7, r0
 8023936:	eba8 0800 	sub.w	r8, r8, r0
 802393a:	e7e7      	b.n	802390c <__sflush_r+0xd4>
 802393c:	20400001 	.word	0x20400001

08023940 <_fflush_r>:
 8023940:	b538      	push	{r3, r4, r5, lr}
 8023942:	690b      	ldr	r3, [r1, #16]
 8023944:	4605      	mov	r5, r0
 8023946:	460c      	mov	r4, r1
 8023948:	b913      	cbnz	r3, 8023950 <_fflush_r+0x10>
 802394a:	2500      	movs	r5, #0
 802394c:	4628      	mov	r0, r5
 802394e:	bd38      	pop	{r3, r4, r5, pc}
 8023950:	b118      	cbz	r0, 802395a <_fflush_r+0x1a>
 8023952:	6a03      	ldr	r3, [r0, #32]
 8023954:	b90b      	cbnz	r3, 802395a <_fflush_r+0x1a>
 8023956:	f7ff fa91 	bl	8022e7c <__sinit>
 802395a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 802395e:	2b00      	cmp	r3, #0
 8023960:	d0f3      	beq.n	802394a <_fflush_r+0xa>
 8023962:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 8023964:	07d0      	lsls	r0, r2, #31
 8023966:	d404      	bmi.n	8023972 <_fflush_r+0x32>
 8023968:	0599      	lsls	r1, r3, #22
 802396a:	d402      	bmi.n	8023972 <_fflush_r+0x32>
 802396c:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 802396e:	f7ff fbde 	bl	802312e <__retarget_lock_acquire_recursive>
 8023972:	4628      	mov	r0, r5
 8023974:	4621      	mov	r1, r4
 8023976:	f7ff ff5f 	bl	8023838 <__sflush_r>
 802397a:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 802397c:	07da      	lsls	r2, r3, #31
 802397e:	4605      	mov	r5, r0
 8023980:	d4e4      	bmi.n	802394c <_fflush_r+0xc>
 8023982:	89a3      	ldrh	r3, [r4, #12]
 8023984:	059b      	lsls	r3, r3, #22
 8023986:	d4e1      	bmi.n	802394c <_fflush_r+0xc>
 8023988:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 802398a:	f7ff fbd1 	bl	8023130 <__retarget_lock_release_recursive>
 802398e:	e7dd      	b.n	802394c <_fflush_r+0xc>

08023990 <__swbuf_r>:
 8023990:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8023992:	460e      	mov	r6, r1
 8023994:	4614      	mov	r4, r2
 8023996:	4605      	mov	r5, r0
 8023998:	b118      	cbz	r0, 80239a2 <__swbuf_r+0x12>
 802399a:	6a03      	ldr	r3, [r0, #32]
 802399c:	b90b      	cbnz	r3, 80239a2 <__swbuf_r+0x12>
 802399e:	f7ff fa6d 	bl	8022e7c <__sinit>
 80239a2:	69a3      	ldr	r3, [r4, #24]
 80239a4:	60a3      	str	r3, [r4, #8]
 80239a6:	89a3      	ldrh	r3, [r4, #12]
 80239a8:	071a      	lsls	r2, r3, #28
 80239aa:	d501      	bpl.n	80239b0 <__swbuf_r+0x20>
 80239ac:	6923      	ldr	r3, [r4, #16]
 80239ae:	b943      	cbnz	r3, 80239c2 <__swbuf_r+0x32>
 80239b0:	4621      	mov	r1, r4
 80239b2:	4628      	mov	r0, r5
 80239b4:	f000 f82a 	bl	8023a0c <__swsetup_r>
 80239b8:	b118      	cbz	r0, 80239c2 <__swbuf_r+0x32>
 80239ba:	f04f 37ff 	mov.w	r7, #4294967295
 80239be:	4638      	mov	r0, r7
 80239c0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80239c2:	6823      	ldr	r3, [r4, #0]
 80239c4:	6922      	ldr	r2, [r4, #16]
 80239c6:	1a98      	subs	r0, r3, r2
 80239c8:	6963      	ldr	r3, [r4, #20]
 80239ca:	b2f6      	uxtb	r6, r6
 80239cc:	4283      	cmp	r3, r0
 80239ce:	4637      	mov	r7, r6
 80239d0:	dc05      	bgt.n	80239de <__swbuf_r+0x4e>
 80239d2:	4621      	mov	r1, r4
 80239d4:	4628      	mov	r0, r5
 80239d6:	f7ff ffb3 	bl	8023940 <_fflush_r>
 80239da:	2800      	cmp	r0, #0
 80239dc:	d1ed      	bne.n	80239ba <__swbuf_r+0x2a>
 80239de:	68a3      	ldr	r3, [r4, #8]
 80239e0:	3b01      	subs	r3, #1
 80239e2:	60a3      	str	r3, [r4, #8]
 80239e4:	6823      	ldr	r3, [r4, #0]
 80239e6:	1c5a      	adds	r2, r3, #1
 80239e8:	6022      	str	r2, [r4, #0]
 80239ea:	701e      	strb	r6, [r3, #0]
 80239ec:	6962      	ldr	r2, [r4, #20]
 80239ee:	1c43      	adds	r3, r0, #1
 80239f0:	429a      	cmp	r2, r3
 80239f2:	d004      	beq.n	80239fe <__swbuf_r+0x6e>
 80239f4:	89a3      	ldrh	r3, [r4, #12]
 80239f6:	07db      	lsls	r3, r3, #31
 80239f8:	d5e1      	bpl.n	80239be <__swbuf_r+0x2e>
 80239fa:	2e0a      	cmp	r6, #10
 80239fc:	d1df      	bne.n	80239be <__swbuf_r+0x2e>
 80239fe:	4621      	mov	r1, r4
 8023a00:	4628      	mov	r0, r5
 8023a02:	f7ff ff9d 	bl	8023940 <_fflush_r>
 8023a06:	2800      	cmp	r0, #0
 8023a08:	d0d9      	beq.n	80239be <__swbuf_r+0x2e>
 8023a0a:	e7d6      	b.n	80239ba <__swbuf_r+0x2a>

08023a0c <__swsetup_r>:
 8023a0c:	b538      	push	{r3, r4, r5, lr}
 8023a0e:	4b29      	ldr	r3, [pc, #164]	@ (8023ab4 <__swsetup_r+0xa8>)
 8023a10:	4605      	mov	r5, r0
 8023a12:	6818      	ldr	r0, [r3, #0]
 8023a14:	460c      	mov	r4, r1
 8023a16:	b118      	cbz	r0, 8023a20 <__swsetup_r+0x14>
 8023a18:	6a03      	ldr	r3, [r0, #32]
 8023a1a:	b90b      	cbnz	r3, 8023a20 <__swsetup_r+0x14>
 8023a1c:	f7ff fa2e 	bl	8022e7c <__sinit>
 8023a20:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8023a24:	0719      	lsls	r1, r3, #28
 8023a26:	d422      	bmi.n	8023a6e <__swsetup_r+0x62>
 8023a28:	06da      	lsls	r2, r3, #27
 8023a2a:	d407      	bmi.n	8023a3c <__swsetup_r+0x30>
 8023a2c:	2209      	movs	r2, #9
 8023a2e:	602a      	str	r2, [r5, #0]
 8023a30:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8023a34:	81a3      	strh	r3, [r4, #12]
 8023a36:	f04f 30ff 	mov.w	r0, #4294967295
 8023a3a:	e033      	b.n	8023aa4 <__swsetup_r+0x98>
 8023a3c:	0758      	lsls	r0, r3, #29
 8023a3e:	d512      	bpl.n	8023a66 <__swsetup_r+0x5a>
 8023a40:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8023a42:	b141      	cbz	r1, 8023a56 <__swsetup_r+0x4a>
 8023a44:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 8023a48:	4299      	cmp	r1, r3
 8023a4a:	d002      	beq.n	8023a52 <__swsetup_r+0x46>
 8023a4c:	4628      	mov	r0, r5
 8023a4e:	f7ff fbdb 	bl	8023208 <_free_r>
 8023a52:	2300      	movs	r3, #0
 8023a54:	6363      	str	r3, [r4, #52]	@ 0x34
 8023a56:	89a3      	ldrh	r3, [r4, #12]
 8023a58:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
 8023a5c:	81a3      	strh	r3, [r4, #12]
 8023a5e:	2300      	movs	r3, #0
 8023a60:	6063      	str	r3, [r4, #4]
 8023a62:	6923      	ldr	r3, [r4, #16]
 8023a64:	6023      	str	r3, [r4, #0]
 8023a66:	89a3      	ldrh	r3, [r4, #12]
 8023a68:	f043 0308 	orr.w	r3, r3, #8
 8023a6c:	81a3      	strh	r3, [r4, #12]
 8023a6e:	6923      	ldr	r3, [r4, #16]
 8023a70:	b94b      	cbnz	r3, 8023a86 <__swsetup_r+0x7a>
 8023a72:	89a3      	ldrh	r3, [r4, #12]
 8023a74:	f403 7320 	and.w	r3, r3, #640	@ 0x280
 8023a78:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 8023a7c:	d003      	beq.n	8023a86 <__swsetup_r+0x7a>
 8023a7e:	4621      	mov	r1, r4
 8023a80:	4628      	mov	r0, r5
 8023a82:	f000 f83f 	bl	8023b04 <__smakebuf_r>
 8023a86:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8023a8a:	f013 0201 	ands.w	r2, r3, #1
 8023a8e:	d00a      	beq.n	8023aa6 <__swsetup_r+0x9a>
 8023a90:	2200      	movs	r2, #0
 8023a92:	60a2      	str	r2, [r4, #8]
 8023a94:	6962      	ldr	r2, [r4, #20]
 8023a96:	4252      	negs	r2, r2
 8023a98:	61a2      	str	r2, [r4, #24]
 8023a9a:	6922      	ldr	r2, [r4, #16]
 8023a9c:	b942      	cbnz	r2, 8023ab0 <__swsetup_r+0xa4>
 8023a9e:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
 8023aa2:	d1c5      	bne.n	8023a30 <__swsetup_r+0x24>
 8023aa4:	bd38      	pop	{r3, r4, r5, pc}
 8023aa6:	0799      	lsls	r1, r3, #30
 8023aa8:	bf58      	it	pl
 8023aaa:	6962      	ldrpl	r2, [r4, #20]
 8023aac:	60a2      	str	r2, [r4, #8]
 8023aae:	e7f4      	b.n	8023a9a <__swsetup_r+0x8e>
 8023ab0:	2000      	movs	r0, #0
 8023ab2:	e7f7      	b.n	8023aa4 <__swsetup_r+0x98>
 8023ab4:	20000220 	.word	0x20000220

08023ab8 <__swhatbuf_r>:
 8023ab8:	b570      	push	{r4, r5, r6, lr}
 8023aba:	460c      	mov	r4, r1
 8023abc:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8023ac0:	2900      	cmp	r1, #0
 8023ac2:	b096      	sub	sp, #88	@ 0x58
 8023ac4:	4615      	mov	r5, r2
 8023ac6:	461e      	mov	r6, r3
 8023ac8:	da0d      	bge.n	8023ae6 <__swhatbuf_r+0x2e>
 8023aca:	89a3      	ldrh	r3, [r4, #12]
 8023acc:	f013 0f80 	tst.w	r3, #128	@ 0x80
 8023ad0:	f04f 0100 	mov.w	r1, #0
 8023ad4:	bf14      	ite	ne
 8023ad6:	2340      	movne	r3, #64	@ 0x40
 8023ad8:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
 8023adc:	2000      	movs	r0, #0
 8023ade:	6031      	str	r1, [r6, #0]
 8023ae0:	602b      	str	r3, [r5, #0]
 8023ae2:	b016      	add	sp, #88	@ 0x58
 8023ae4:	bd70      	pop	{r4, r5, r6, pc}
 8023ae6:	466a      	mov	r2, sp
 8023ae8:	f000 f848 	bl	8023b7c <_fstat_r>
 8023aec:	2800      	cmp	r0, #0
 8023aee:	dbec      	blt.n	8023aca <__swhatbuf_r+0x12>
 8023af0:	9901      	ldr	r1, [sp, #4]
 8023af2:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
 8023af6:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
 8023afa:	4259      	negs	r1, r3
 8023afc:	4159      	adcs	r1, r3
 8023afe:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 8023b02:	e7eb      	b.n	8023adc <__swhatbuf_r+0x24>

08023b04 <__smakebuf_r>:
 8023b04:	898b      	ldrh	r3, [r1, #12]
 8023b06:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8023b08:	079d      	lsls	r5, r3, #30
 8023b0a:	4606      	mov	r6, r0
 8023b0c:	460c      	mov	r4, r1
 8023b0e:	d507      	bpl.n	8023b20 <__smakebuf_r+0x1c>
 8023b10:	f104 0347 	add.w	r3, r4, #71	@ 0x47
 8023b14:	6023      	str	r3, [r4, #0]
 8023b16:	6123      	str	r3, [r4, #16]
 8023b18:	2301      	movs	r3, #1
 8023b1a:	6163      	str	r3, [r4, #20]
 8023b1c:	b003      	add	sp, #12
 8023b1e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8023b20:	ab01      	add	r3, sp, #4
 8023b22:	466a      	mov	r2, sp
 8023b24:	f7ff ffc8 	bl	8023ab8 <__swhatbuf_r>
 8023b28:	9f00      	ldr	r7, [sp, #0]
 8023b2a:	4605      	mov	r5, r0
 8023b2c:	4639      	mov	r1, r7
 8023b2e:	4630      	mov	r0, r6
 8023b30:	f7ff f87e 	bl	8022c30 <_malloc_r>
 8023b34:	b948      	cbnz	r0, 8023b4a <__smakebuf_r+0x46>
 8023b36:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8023b3a:	059a      	lsls	r2, r3, #22
 8023b3c:	d4ee      	bmi.n	8023b1c <__smakebuf_r+0x18>
 8023b3e:	f023 0303 	bic.w	r3, r3, #3
 8023b42:	f043 0302 	orr.w	r3, r3, #2
 8023b46:	81a3      	strh	r3, [r4, #12]
 8023b48:	e7e2      	b.n	8023b10 <__smakebuf_r+0xc>
 8023b4a:	89a3      	ldrh	r3, [r4, #12]
 8023b4c:	6020      	str	r0, [r4, #0]
 8023b4e:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8023b52:	81a3      	strh	r3, [r4, #12]
 8023b54:	9b01      	ldr	r3, [sp, #4]
 8023b56:	e9c4 0704 	strd	r0, r7, [r4, #16]
 8023b5a:	b15b      	cbz	r3, 8023b74 <__smakebuf_r+0x70>
 8023b5c:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8023b60:	4630      	mov	r0, r6
 8023b62:	f000 f81d 	bl	8023ba0 <_isatty_r>
 8023b66:	b128      	cbz	r0, 8023b74 <__smakebuf_r+0x70>
 8023b68:	89a3      	ldrh	r3, [r4, #12]
 8023b6a:	f023 0303 	bic.w	r3, r3, #3
 8023b6e:	f043 0301 	orr.w	r3, r3, #1
 8023b72:	81a3      	strh	r3, [r4, #12]
 8023b74:	89a3      	ldrh	r3, [r4, #12]
 8023b76:	431d      	orrs	r5, r3
 8023b78:	81a5      	strh	r5, [r4, #12]
 8023b7a:	e7cf      	b.n	8023b1c <__smakebuf_r+0x18>

08023b7c <_fstat_r>:
 8023b7c:	b538      	push	{r3, r4, r5, lr}
 8023b7e:	4d07      	ldr	r5, [pc, #28]	@ (8023b9c <_fstat_r+0x20>)
 8023b80:	2300      	movs	r3, #0
 8023b82:	4604      	mov	r4, r0
 8023b84:	4608      	mov	r0, r1
 8023b86:	4611      	mov	r1, r2
 8023b88:	602b      	str	r3, [r5, #0]
 8023b8a:	f7de fda4 	bl	80026d6 <_fstat>
 8023b8e:	1c43      	adds	r3, r0, #1
 8023b90:	d102      	bne.n	8023b98 <_fstat_r+0x1c>
 8023b92:	682b      	ldr	r3, [r5, #0]
 8023b94:	b103      	cbz	r3, 8023b98 <_fstat_r+0x1c>
 8023b96:	6023      	str	r3, [r4, #0]
 8023b98:	bd38      	pop	{r3, r4, r5, pc}
 8023b9a:	bf00      	nop
 8023b9c:	20014be4 	.word	0x20014be4

08023ba0 <_isatty_r>:
 8023ba0:	b538      	push	{r3, r4, r5, lr}
 8023ba2:	4d06      	ldr	r5, [pc, #24]	@ (8023bbc <_isatty_r+0x1c>)
 8023ba4:	2300      	movs	r3, #0
 8023ba6:	4604      	mov	r4, r0
 8023ba8:	4608      	mov	r0, r1
 8023baa:	602b      	str	r3, [r5, #0]
 8023bac:	f7de fd98 	bl	80026e0 <_isatty>
 8023bb0:	1c43      	adds	r3, r0, #1
 8023bb2:	d102      	bne.n	8023bba <_isatty_r+0x1a>
 8023bb4:	682b      	ldr	r3, [r5, #0]
 8023bb6:	b103      	cbz	r3, 8023bba <_isatty_r+0x1a>
 8023bb8:	6023      	str	r3, [r4, #0]
 8023bba:	bd38      	pop	{r3, r4, r5, pc}
 8023bbc:	20014be4 	.word	0x20014be4

08023bc0 <_init>:
 8023bc0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8023bc2:	bf00      	nop
 8023bc4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8023bc6:	bc08      	pop	{r3}
 8023bc8:	469e      	mov	lr, r3
 8023bca:	4770      	bx	lr

08023bcc <_fini>:
 8023bcc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8023bce:	bf00      	nop
 8023bd0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8023bd2:	bc08      	pop	{r3}
 8023bd4:	469e      	mov	lr, r3
 8023bd6:	4770      	bx	lr
